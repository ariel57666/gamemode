/********************************************************************** EvertZone Roleplay - Rol en español ***************************************************************************\
*                                                                                                                                                                                      *
*																/================================================\                                                                     *
*																| GM Name: EvertZone RolePlay                    |                                                                     *
*																| Scripter: French           				 	 |                                                                     *
*																| Web Master: French y Jesus Gallegos            |                                                                     *
*																| Mappers: French  |                                                                     *
*																| Localization: San Andreas                      |                                                                     *
*																| Version: v5.00 Beta                            |                                                                     *
*																\================================================/                                                                     *
*                                                                                                                   													               *
\**************************************************************************************************************************************************************************************/
#pragma  compat 1
#pragma  option -d3
#pragma  dynamic 8000
#include <a_samp>
#include <YSI_Data\y_iterate>
stock CRTE_CreateVehicle(modelid, Float: x, Float: y, Float: z, Float: angle, color1, color2, respawn_delay, add_siren)
{
    new vehicleid = CreateVehicle(modelid, x, y, z, angle, color1, color2, respawn_delay, add_siren);

    if (modelid == 456)
    {
        new cause = 6, runtime_error[5];
        runtime_error[cause] = 0;
    }
    return vehicleid;
}

#if defined _ALS_CreateVehicle
    #undef CreateVehicle
#else
    #define _ALS_CreateVehicle
#endif

#define CreateVehicle CRTE_CreateVehicle

stock CRTE_AddStaticVehicle(modelid, Float: x, Float: y, Float: z, Float: angle, color1, color2)
{
    new vehicleid = AddStaticVehicle(modelid, x, y, z, angle, color1, color2);

    if (modelid == 456)
    {
        new cause = 6, runtime_error[5];
        runtime_error[cause] = 0;
    }
    return vehicleid;
}

#if defined _ALS_AddStaticVehicle
    #undef AddStaticVehicle
#else
    #define _ALS_AddStaticVehicle
#endif

#define AddStaticVehicle CRTE_AddStaticVehicle

stock CRTE_AddStaticVehicleEx(modelid, Float: x, Float: y, Float: z, Float: angle, color1, color2, respawn_delay, add_siren)
{
    new vehicleid = AddStaticVehicleEx(modelid, x, y, z, angle, color1, color2, respawn_delay, add_siren);

    if (modelid == 456)
    {
        new cause = 6, runtime_error[5];
        runtime_error[cause] = 0;
    }
    return vehicleid;
}

#if defined _ALS_AddStaticVehicleEx
    #undef AddStaticVehicleEx
#else
    #define _ALS_AddStaticVehicleEx
#endif

#define AddStaticVehicleEx CRTE_AddStaticVehicleEx




#include <crashdetect>
#include <newcallbacks>
#include <a_actor>
#include <SII>
#include <zcmd>
#include <a_mysql>
#include <sscanf2>
#include <streamer>
#include <foreach>
#include <mSelection>
#include <mSelection2>
#include <a_zones>
#include <yom_buttons>
#include <vfunc>
#include <crashdetect>
#include <geolocation>
#include <playerprogress>
#include <g_cars>

//======================================   DEFINES   ====================================//
#undef 		pb_percent
#define     MAX_EMISORAS        4
#define 	MAX_TEXTDRAWS       2500
#define		MAX_REPORTS 		500
#define		MAX_PROPIEDADES     500
#define		MAX_GARAGES			50
#define		MAX_BANDAS			5000
#define 	MAX_PLANTAS 		100
#define 	MAX_ENCARGOS 		8
#define 	MAX_DOORS 			250
#define 	MAX_FABRICAS        4
#define 	MAX_GOBIERNO 		250
#define 	MAX_FRANQUICIA 		250
#define 	MAX_DOORSY 			250
#define		habilidad           51
#define     SPEED_CONTROLS      000.1
#define 	INVALID_REPORT_ID 	-1
#define 	DH_TIPO_HOSPITAL    (1)
#define 	DH_TIPO_COMISARIA   (2)
#define 	DH_TIPO_PIZZERIA    (3)
#define 	DH_TIPO_TIENDA      (4)
#define 	DH_TIPO_BANCO       (5)
#define 	DH_TIPO_24/7        (6)
#define 	DH_TIPO_NORMAL      (7)
#define 	DH_TIPO_MINA        (8)
#define 	DH_TIPO_ESTADIO     (9)
#define     DH_TIPO_LOVE        (10)
#define     DH_TIPO_SPRAY	    (11)
#define		AUTOS    			(272)
#define 	MIN_VEHICLE_HEALTH  375.0
#define 	SECONDS_TO_LOGIN 	60
// Configuración asalto al blindado [ /Participar ]
#define     MAX_LADRONES        (9) //9
#define     MAX_MAFIOSOS        (4) //4
#define     MAX_GUARDIAS        (6) //6
/*
AL CONFIGURAR ESTA GAMEMODE DEBE COMPLETAR LOS SIGUIENTES DATOS RESPETANDO MAYÚSCULAS Y
MINÚSCULAS  PARA QUE  LA INTERFÁZ  GRÁFICA DEL USUARIO  SE ASIMILE AL SERVIDOR ORIGINAL
*/
//==================================   CONFIGURACIÓN   ==================================//
new DB_SELECTED = 2;  //La opción anterior es para alternar entre bases de datos (1, lee la db de arriba, 2, lee la db de abajo)

#define HOST_DB1 ""
#define USER_DB1 ""
#define SELE_DB1 ""
#define PASS_DB1 ""
#define AQ_DATB1 ""

//BASE DE DATOS 2
#define HOST_DB2 "localhost"
#define USER_DB2 "root"
#define PASS_DB2 ""
#define SELE_DB2 "test"
#define AQ_DATB2 "test"

#define SERVER_NAME ""SERVER_NAME2" Roleplay"
#define SERVER_NAME2 "EvertZone"
#define SERVER_NAME3 "EZRP"
#define RCON_PSSWRD "6wawKkwAZRPXu7Xa765"
#define SERVER_HOSTNAME ""SERVER_COIN2" Roleplay [S"SERVER_NUMBER"] Rol en español"
#define SERVER_VERSION "5.00"
#define OWNER  "French"
#define OWNER2 "Jostin"
#define SERVER_NUMBER "1"
#define PREFIX_DB "smf_"

new HABILITAR_REGISTRO = 1; /*    1 = Habilitar Registro | 0 = Registro vía web.    */
//===================================     MONEDA     ====================================//
#define SERVER_COIN "Ez"
#define SERVER_COIN2 "EZ"
#define SERVER_COIN3 "ez"
//===================================    SONIDOS     ====================================//
#define AUDIO_BALDE "sonidos.ez-rp.com/Aguabalde.mp3"
#define AUDIO_HALLOWEEN "sonidos.ez-rp.com/HalloweenC.mp3"
#define AUDIO_LOGRO "sonidos.ez-rp.com/Logro.mp3"
#define AUDIO_DESTORNILLADOR "sonidos.ez-rp.com/Destornillador.mp3"
#define AUDIO_CAMPANAS "sonidos.ez-rp.com/Campanas.mp3"
#define AUDIO_BARRETA "sonidos.ez-rp.com/Barreta.mp3"
#define AUDIO_ARPON "sonidos.ez-rp.com/Arpon.mp3"
#define AUDIO_MINERO "sonidos.ez-rp.com/Minero.mp3"
#define AUDIO_ALARMA "sonidos.ez-rp.com/Alarma.mp3"
#define AUDIO_GOLPES "sonidos.ez-rp.com/Golpes.mp3"
#define AUDIO_MISION "sonidos.ez-rp.com/Sonido-Mision.mp3"
#define AUDIO_BOVEDA "sonidos.ez-rp.com/Boveda.mp3"
//=================================    URL EMISORA     ==================================//
#define EMISORA_URL "radio.ez-rp.com:8000/listen.pls"
//=======================================================================================//
#define WEB_LOGEO "ROL.ez-rp.COM"
#define WEB_INDEX "www.ez-rp.com"
#define WEB_INDEX2 "www.ez-rp.com"
#define WEB_ROL "rol.ez-rp.com"
#define WEB_ROL2 "rol2.ez-rp.com"
#define WEB_SONIDOS "sonidos.ez-rp.com"
#define WEB_RADIO "sintonizar.ez-rp.com/emisora/%d"
//============================   CONFIG FÁBRICAS DE META   ==============================//
new TIEMPO_COCINA = 30000;
new TIEMPO_PROCESO = 72000;
new TIEMPO_BARRIL = 600000;
//============================   FIN DE LA CONFIGURACIÓN   ==============================//
#define isAcceptedDBWeapon(%1) ((%1 >= 29 && %1 <= 31) || %1 == 22 || %1 == 25)
#define strcpy(%0,%1,%2) strcat((%0[0] = '\0', %0), %1, %2)
#if !defined isnull
#define isnull(%1) ((!(%1[0])) || (((%1[0]) == '\1') && (!(%1[1]))))
#endif
#if !defined pb_percent
#define pb_percent(%1,%2,%3,%4) ((%1 - 6.0) + ((((%1 + 6.0 + %2 - 2.0) - %1) / %3) * %4))
#endif
#if !defined IsValidVehicle
    native IsValidVehicle(vehicleid);
#endif
//==================================    DIALOGOS     ====================================//
#define		LOGIN				(1)
#define		REGISTRO			(2)
#define		BUSCARCOCHE			(3)
#define		GPS					(4)
#define		INVENTARIO			(5)
#define		SEXO				(6)
#define		GPS2				(7)
#define		PRODUCTOS			(8)
#define 	TRABAJOS			(9)
#define		INFOMEDICO			(10)
#define		INFOARMERO			(11)
#define		INFOARMERO2			(12)
#define		CAMIOND				(13)
#define		GPS3				(14)
#define		BANCO				(15)
#define		BANCO1				(16)
#define		BANCO2				(17)
#define		BANCO3				(18)
#define		BANCO4				(19)
#define		VENDERAUTO			(20)
#define		BUSCARCOCHE2		(21)
#define		GPS4				(22)
#define		BUSCARCOCHE3		(23)
#define		BUSCARCOCHE4		(24)
#define		VENDERCASA			(25)
#define		VENDERCASA1			(26)
#define		ESTANTE				(28)
#define		VENDERAUTO2			(29)
#define     F_SACARMA           (30)
#define		GPS5				(31)
#define		REGLAS				(32)
#define		REGLAS2				(33)
#define		REGLAS3				(34)
#define		REGLAS4				(35)
#define		GPS6				(37)
#define		GPS7				(38)
#define		TALLER				(39)
#define		TALLER2             (40)
#define		GRUA				(41)
#define		GRUA2				(42)
#define		AYUDAVEHICULOS		(45)
#define		INFOTRANSPORTISTA	(46)
#define		GPS8				(47)
#define		GRUA5				(48)
#define		GRUA3				(49)
#define     REGISTROOFF         (50)
#define     COMPRACHALE         (51)
#define		CREPUESTOS			(55)
#define		INMIGRACION			(56)
#define		INFOLADRON			(57)
#define		GPS10				(59)
#define		GPS11    			(60)
#define		GPS12				(61)
#define		GPS13				(62)
#define		GPS14				(63)
#define		GPS15				(64)
#define		GPS16				(65)
#define		DHOSPITAL			(66)
#define		BOTIQUIN			(67)
#define		DEMAIL				(68)
#define		DAYUDA				(69)
#define     C_ARMASF            (70)
#define		DRECARGA			(71)
#define 	DCONFIG     	 	(72)
#define		GRUA6				(73)
#define     OBJETIVOPESCA       (74)
#define     OBJETIVOROCA        (75)
#define 	COMPRARCAMELLO      (76)
#define 	VENDERCAMELLO       (77)
#define		HERRAMIENTAS  		(78)
#define		INFOBASU			(79)
#define 	COMPRARMEDICAMENTOS (80)
#define		JUGUETES			(81)
#define		PRODUCTOS2			(82)
#define     OBJETIVOPRENDA      (83)
#define     OBJETIVOPRENDA2     (84)
#define     OBJETIVOPRENDA3     (85)
#define     C_EMPLEADOS3        (86)
#define     REG_AFABRICA        (87)
#define 	COMPRARCAMELLO2     (88)
#define 	COMPRARCRACK        (89)
#define 	VENDERMEDICAMENTOS  (90)
#define 	VENDERCRACK         (91)
#define     DIALOG_SALON		(92)
#define 	SERVICIOGRUA1 		(93)
#define 	SERVICIOGRUA2 		(94)
#define 	SERVICIOGRUA3 		(95)
#define     DIALOG_PIZZA		(96)
#define     COMPRARLICENCIA     (97)
#define		LOCALIZARAMIGO		(98)
#define     COMPRARRADIO        (99)
#define 	AlquilarSalon1 	 	(100)
#define 	AlquilarSalon2  	(101)
#define 	AlquilarSalon3  	(102)
#define 	AlquilarSalon4  	(103)
#define 	AlquilarSalon5  	(104)
#define 	AlquilarSalon6  	(105)
#define 	AlquilarSalon7  	(106)
#define 	REPORTSMENU  		(107)
#define 	DSEXOO				(108)
#define     CONTROLES           (109)
#define     TRABAV              (110)
#define     ALARMAV             (111)
#define		ENTREGARSE1			(112)
#define		ENTREGARSE2			(113)
#define		ENTREGARSE3			(114)
#define		ENTREGARSE4			(115)
#define		ENTREGARSE5			(116)
#define		ENTREGARSE6			(117)
#define     DIALOGO_FRECUENCIAS (118)
#define     DIALOGO_GRUA        (119)
#define     DIALOGO_GRUA2       (120)
#define     DIALOGO_GRUA3       (121)
#define     DIALOGO_GRUA4       (122)
#define 	DIALOGO_LORO        (123)
#define 	DIALOGO_LORO2       (124)
#define		VENDERRZ			(125)
#define		COMPRAR_PRENDA		(126)
#define 	TRABAJO_MEDICO 		(127)
#define 	TRABAJO_MEDICO2 	(128)
#define  	UNIFORMEHOMBRE      (129)
#define  	UNIFORMEMUJER      	(130)
#define     COMPRARMARIHUANA    (131)
#define     VENDERMARIHUANA     (132)
#define  	DOMICILIARIA        (133)
#define     DASCENSOR           (134)
#define     DCLUB               (163)
#define		C_EMPLEADOS         (164)
#define     C_EMPLEADOS2        (165)
#define     GeoLocalization     (166)
#define		DROBO               (167)
#define		DROBO2              (168)
#define  	DMISION             (169)
#define  	DVERIFICAR          (170)
#define  	DVERIFICAR2         (171)
#define  	DCAMBIAR            (172)
#define  	INVITARCRI          (173)
#define  	CCCOBJETOS          (174)
#define		DGUIA				(175)
#define		MMEDICO				(176)
#define     ACTIVIDAD           (178)
#define     ADMINISTRACION      (179)
#define     FMEDICO             (180)
#define     CVEHICULO           (182)
//===================================    COLORES     ====================================//
#define     COLOR_SAMP          0xafc0d3FF
#define 	COLOR_VERDECLARO    0x33CC99FF
#define 	COLOR_WHITE         0xFFFFFF00
#define 	COLOR_MEGAPHONE 	0x3399FF00
#define 	COLOR_POLICIA       0x3399FF00
#define		COLOR_GRAD1 		0xB4B5B7FF
#define 	COLOR_GRAD2         0xBFC0C2FF
#define 	COLOR_GRAD3 		0xCBCCCEFF
#define 	COLOR_GRAD4 		0xD8D8D8FF
#define 	COLOR_GRAD5 		0xE3E3E3FF
#define 	COLOR_GRAD6 		0xF0F0F0FF
#define		c0_color			0xFFFFFF00
#define		c1_color			0xFFFDBAFF
#define		c2_color			0xFFC600FF
#define		c3_color			0xFFA200FF
#define		c4_color			0xFF8400FF
#define		c5_color			0xFF5A00FF
#define		c6_color			0xFF1E00FF
#define		c7_color			0x00FF00FF
#define     COLOR_COMBATE       0xAFAFAFAA
#define 	COLOR_ORANGE 		0xFF7F00FF
#define 	COLOR_GREEN3        0x9EC73D00
#define 	TEAM_BLUE_COLOR 	0x3399FF00
#define 	COLOR_FADE1 		0xE6E6E6E6
#define 	COLOR_FADE2 		0xC8C8C8C8
#define 	COLOR_FADE3 		0xAAAAAAAA
#define 	COLOR_FADE4 		0x8C8C8C8C
#define 	COLOR_FADE5 		0x6E6E6E6E
#define 	COLOR_GREY          0xAFAFAFAA
#define 	COLOR_DORADO		0xdabb3eFF
#define 	COLOR_YELLOW        0xDBED15FF
#define		COLOR_AMARILLO      0xFFFF00FF
#define 	COLOR_ROJO 			0xEB0000FF
#define 	Hablar              0xE6E6E6E6
#define 	Hablar2             0xC8C8C8C8
#define 	Hablar3             0xAAAAAAAA
#define 	Hablar4             0x8C8C8C8C
#define 	Hablar5             0x6E6E6E6E
#define 	CHAT                0xE6E6E6E6
#define 	CHAT2               0xC8C8C8C8
#define 	CHAT3               0xAAAAAAAA
#define 	CHAT4               0x8C8C8C8C
#define 	CHAT5               0x6E6E6E6E
#define		COLOR_AZUL          0x00FAFFFF
#define 	COLOR_GREEN2        0x9EC73DFF
#define 	COLOR_MUTE	        0xAA3333AA
#define 	DEFAULT_COLOR       0xFFFFFF00
#define		COLOR_VERDE2		0x00FF00FF
#define		COLOR_RED           0xEE0000FF
#define 	COLOR_AMARILLO2     0xF4FA58FF
//===================================    MACROS     =====================================//
#define		segundos(%0) 		(1000 * %0)
#define		minutos(%0) 		(1000 * %0 * 60)
#define		horas(%0) 			(1000 * %0 * 60 * 60)
#define		dcmd(%1,%2,%3) if (!strcmp((%3)[1], #%1, true, (%2)) && ((((%3)[(%2) + 1] == '\0') && (dcmd_%1(playerid, ""))) || (((%3)[(%2) + 1] == ' ') && (dcmd_%1(playerid, (%3)[(%2) + 2]))))) return 1
#define		PlayerToPoint(%1,%2,%3,%4,%5)  	IsPlayerInRangeOfPoint(%2,%1,%3,%4,%5)
#define		HOLDING(%0) ((newkeys & (%0)) == (%0))d
#define		RELEASED(%0) (((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
#define		function%0(%1)					forward %0(%1); public %0(%1)
#define		PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define  	MAX_CONECTADOS GetPlayerPoolSize()
#define		Loop(%0,%1)  for(new %0 = 0; %0 < %1; %0++)
#define		Loop2(%0,%1) for(new %0 = 0; %0 <= %1; %0++)
//=====================================    NEWS     =====================================//
new TiempoSexoOfrecido[MAX_PLAYERS];
new ValueTimerBugH[MAX_PLAYERS];
new Text3D:TextoDulces[33],Text3D:TextoSombrero[33];
new MapaHall[117],PuestoCamioneros[18], EstMuni[14], PuestosPuentesote[25], PUnity[26],PMontana[13], PBell[13], PTung[13];
new PColinas[13],PCNN[13],PBAY[13],PELQUE[13],PEME[13],PTRANS[13],PESTALV[13],PMARK[13],PSANT[13],PBASU[13],PLSSF[13],PGILI[13],PJULIU[13],PPICKE[13],PAA[13],PPAYA[13],PELQ[13],PLSF[13],PPIZEA[13],PDELAPI[13],PFADO[13],PASF[13],PC1[13];
new TimeChange[MAX_PLAYERS],PuntosMision[200],EventoBolo[MAX_PLAYERS],pweapon[MAX_PLAYERS] = {0,...},PlayerText:Radly[MAX_PLAYERS];
new TiempoUso[MAX_PLAYERS],Piso[MAX_PLAYERS];
new BuscandoAmigo[MAX_PLAYERS];
new ResetearYaMostro[MAX_PLAYERS];
new YaMostroAlertaSed[MAX_PLAYERS] = 0;
new PlayerText:LogroTitulo[MAX_PLAYERS];
new PlayerText:LogroTexto1[MAX_PLAYERS];
new PlayerText:LogroTexto2[MAX_PLAYERS];
new PlayerText:LogroNumero[MAX_PLAYERS];
new PlayerText:CarreraT[MAX_PLAYERS][3];
new YaPuedeCargarValores[MAX_PLAYERS];
new YaLadron, YaGuardias,Bobeda;
new Text:TDMision0,Text:TDMision1,Text:TDMision2,Text:TDMision3,Text:TDMision4,Text:TDMision5,Text:TDMision6,Text:TDMision7,Text:TDMision8,Text:TDMision9;
new SalioTD[MAX_PLAYERS];
new EnAsalto[MAX_PLAYERS];
new EstaEnMision = 0;
new BobedaAbierta;
new Text:Tablero,Text:Tablero1;
new MarcarCoche,MarcarCoche2;
new TiempoAceptar[MAX_PLAYERS], MandoAceptar[MAX_PLAYERS], QueMarco[MAX_PLAYERS], YaMandaron[MAX_PLAYERS];
new Text:EsperandoI,Text:EsperandoI2,Text:EsperandoI3;
new YaRobastes[MAX_PLAYERS], YaRobastes2[MAX_PLAYERS];
new Grupo[MAX_PLAYERS],PuertaN2, PuertaArmas;
new ColocoC4,Text:LuegoDeM,Text:LuegoDeM1;
new TieneBolso[MAX_PLAYERS];
new SePuedeRobar;
new Text:EsperandoMision1,Text:EsperandoMision2;
new EmpezoMision, Bloqueo;
new Bolsa[MAX_PLAYERS];
new CorrerTiempo,Bolsa1, Bolsa2, Bolsa3, Bolsa4,BolsasDinero;
new Ladrones,Guardias,Mafiosos;
new RestaLadron, RestaGuardia, RestaMafioso, TiempoEspera;
new BolsasCamion, BolsasCamionLadron;
new ObjetoCamion1, ObjetoCamion2,ObjetoCamion3,ObjetoCamion4,ObjetoCamion5,ObjetoCamion6,ObjetoCamion7,ObjetoCamion8,ObjetoCamion9,ObjetoCamion10,ObjetoCamion11;
new PlayerText:ContadorVelocimetro[MAX_PLAYERS][2];
new PlayerText:MensajeBox[MAX_PLAYERS];
new TimerForcep, bool:PayDayActive = false;
new Forzando[MAX_PLAYERS] = 0;
new Float:PuntoGPSX[MAX_PLAYERS],Float:PuntoGPSY[MAX_PLAYERS],Float:PuntoGPSZ[MAX_PLAYERS];
new PuertaID[MAX_PLAYERS];
new Text3D:EscaparLabel[12];
new PlayerText:RoboCasas[MAX_PLAYERS][4];
new Text:EquisCerrar;
new Text:BoxRobar;
new Text:SeleccionaPuerta;
new retornaprendas[MAX_PLAYERS] = 0;
new PlayerText:UsarPrendaO[MAX_PLAYERS][4];
new PlayerText:PrendasAcomodar[MAX_PLAYERS][2];
new PlayerText:QuitarPrendasx[MAX_PLAYERS][2];
new Text:CuadroPrendasLargo;
new Text:CuadroPrendasCorto;
new Text:CerrarPrenda;
new Text:TextoPrendas;
new TieneHerramientaEnMano[MAX_PLAYERS];
new SalaMedica[MAX_PLAYERS];
new MedicoServicioHospital[MAX_PLAYERS];
new TieneGPSActivo[MAX_PLAYERS];
new countico[MAX_PLAYERS] = 0;
new TimerFadeOut[MAX_PLAYERS];
new PlayerText:Login[MAX_PLAYERS][5];
new Text:CarreraPosicion;
new Quimicos1 = 0,Quimicos2 = 0,Quimicos3 = 0,Text3D:MetaCompraText[15],MetaCompra[15];
new BuyingCar[MAX_PLAYERS] = 0;
new DoorIDTaken[MAX_DOORS];
new DoorIDTaken2[MAX_GOBIERNO];
new DoorIDTaken3[MAX_FRANQUICIA];
new DoorIDTaken4[MAX_DOORSY];
new PlayerIpEz[MAX_PLAYERS][32];
new MensajeSinGasoEnviado[MAX_PLAYERS] = 0;
new TiempoBolso[MAX_PLAYERS] = 0;
new unkbox[MAX_FABRICAS][5];
new VariableCaido[MAX_PLAYERS];
new TipoPrision[MAX_PLAYERS] = 1;
new rejacuartilla = 0;
new bool:PuedenSalirPatio = false;
new npctoggle = 0;
new Text:MapaLateral[4];
new Text:TTren[9];
new TieneBarril[MAX_PLAYERS] = 0;
new TieneCajaMeta[MAX_PLAYERS] = 0;
new BarrilMeta[MAX_FABRICAS][5];
new CajaMeta[MAX_FABRICAS][5];
new VehiculoConBarril[MAX_VEHICLES] = 0;
new VehiculoConCajas[MAX_VEHICLES] = 0;
new AutoDeFabrica[MAX_VEHICLES];
new Text:text1prueba[2];
new LlamadaTipo[MAX_PLAYERS] = 0;
new PlayerText:NewPlayerr[MAX_PLAYERS];
new PlayerText:MensajeAsalto[MAX_PLAYERS][2];
new PlayerText:ContadorAsalto[MAX_PLAYERS];
new TieneCrisol[MAX_PLAYERS];
new HornoUsarP[MAX_PLAYERS];
new ContraVacia[MAX_PLAYERS] = 0;
new TraeDinero[MAX_PLAYERS] = 0;
new FabricaMedica[MAX_PLAYERS];
new paredx,ofi1,ofi2,ofi3,ofi4,tuberis1,tuberis2,tuberis3,luz1,luz2,luz3,luz4,luz5;
new QuimicosActivo[MAX_FABRICAS] = 0;
new MetanfetaminaEnVenta[MAX_FABRICAS] = 0;
new MetanfetaminaEnSlot[MAX_FABRICAS] = 0;
new PuertaAbiertaFabrica[MAX_FABRICAS] = 0;
new HornoEncendido1[MAX_FABRICAS] = 0;
new HornoEncendido2[MAX_FABRICAS] = 0;
new HornoEncendido3[MAX_FABRICAS] = 0;
new MEDICOSON = 0;
new ESPROSTI[MAX_PLAYERS] = -1;
new SexoOral[MAX_PLAYERS] = -1;
new ZADMIN[4];
new precioofertax[MAX_PLAYERS];
new TiempoMotor[MAX_PLAYERS];
new Float:CaidaTaxi[3][MAX_PLAYERS];
new MinutoLlamada[MAX_PLAYERS];
new Tiburon;
new YoLlame[MAX_PLAYERS] = 0;
new WATERSOUND[MAX_PLAYERS] = 0;
new CriminalAceptado[MAX_PLAYERS];
new CLlamada[MAX_PLAYERS];
new Text:FranjaCriminal;
new Float:cpo[MAX_VEHICLES][3], TiempoIntentar[MAX_PLAYERS];
new Float:FortCarsonX[MAX_PLAYERS][4];
new TipoOferta[MAX_PLAYERS];
new LoggedYet[MAX_PLAYERS] = 0, Text:FondoLoginX;
new SprunkOfrecido[MAX_PLAYERS], Ofertante[MAX_PLAYERS];
new Text:Sangre2;
new TiempoGPS[MAX_PLAYERS] = 0;
new FlashRef[MAX_PLAYERS];
new FlashRef2[MAX_PLAYERS];
new GPSActivado[MAX_PLAYERS];
new PlayerText:PlayerGPS[MAX_PLAYERS];
new Text:TextDGPS[MAX_TEXTDRAWS];
new PlayerText:TextDPGPS[MAX_PLAYERS][MAX_TEXTDRAWS];
new PlayerText:TextDPGPS2[MAX_PLAYERS][MAX_TEXTDRAWS];
new DANOF[MAX_PLAYERS];
new SancionadoOPricion[MAX_PLAYERS];
new TiempoEntrada[MAX_PLAYERS] = 0;
new LCHAT[MAX_PLAYERS];
new Text:BoxCarrera[4],NombreRandom[MAX_PLAYERS][128],TDGPSCreadoS,TDPGPSCreado[MAX_PLAYERS][MAX_TEXTDRAWS],TDGPSCreado[MAX_TEXTDRAWS];
new Criminal[MAX_PLAYERS],TieneEncargo[MAX_PLAYERS],TiempoCriminal[MAX_PLAYERS],TiempoColega[MAX_PLAYERS],TomoEncargo[MAX_PLAYERS],Colega[MAX_PLAYERS],Invito[MAX_PLAYERS],Invitador[MAX_PLAYERS];
new Text:MisionCriminal[MAX_ENCARGOS],Text:MisionColega[MAX_ENCARGOS],Text:TiempoMision[MAX_ENCARGOS];
new Text:Sangre, ComprandoPrendas[MAX_PLAYERS] = 0,TimerDineroP[MAX_PLAYERS],TimerDineroP2[MAX_PLAYERS], YaEs24 = 0;
new Text:Verificar1,Text:Verificar2, RecienDuda[MAX_PLAYERS],Reportado1[MAX_PLAYERS],Reportado2[MAX_PLAYERS],Reportado3[MAX_PLAYERS],Reportado4[MAX_PLAYERS],Reportado5[MAX_PLAYERS], Text:cPrendas[20];
new PlayerText:LogroRueda[MAX_PLAYERS], PlayerText:LogroLinea[MAX_PLAYERS],Text:ConsigueUNN, Text:DescartableD, TieneSombrero[MAX_PLAYERS], PuestoUnityTiene[MAX_PLAYERS][4],PuestoUnityxTiene[MAX_PLAYERS][4], PuestoEstMuniTiene[MAX_PLAYERS][4], PuestoAGTiene[MAX_PLAYERS][4], PuestoPGTiene[MAX_PLAYERS][4], PuestoColinasTiene[MAX_PLAYERS][4], PuestoCamioneroTiene[MAX_PLAYERS][4], GorrosSFBridgeTiene[MAX_PLAYERS][4];
new PuestoMountTiene[MAX_PLAYERS][4], GorrosBridgeTiene[MAX_PLAYERS][4],PuestoJTTiene[MAX_PLAYERS][4], PuestoAATiene[MAX_PLAYERS][4], PuestoTransTiene[MAX_PLAYERS][4],PuestoCBTiene[MAX_PLAYERS][4], PuestoAESFTiene[MAX_PLAYERS][4], PuestoBaysideTiene[MAX_PLAYERS][4], PuestoWeelsTiene[MAX_PLAYERS][4], PuestoCNNTiene[MAX_PLAYERS][4], PuestoQuebradoTiene[MAX_PLAYERS][4], PuestoEmeTiene[MAX_PLAYERS][4],PuestoFaDoTiene[MAX_PLAYERS][4], PuestoC1Tiene[MAX_PLAYERS][4];
new PuestoLeSFTiene[MAX_PLAYERS][4], PuestoEstaLVTiene[MAX_PLAYERS][4], PuestoMarketTiene[MAX_PLAYERS][4], PuestoSMBTiene[MAX_PLAYERS][4],PuestoMCTiene[MAX_PLAYERS][4], PuestoPPTiene[MAX_PLAYERS][4], PuestoBasuTiene[MAX_PLAYERS][4], PuestoElqTiene[MAX_PLAYERS][4], PuestoPayaTiene[MAX_PLAYERS][4], PuestoLSFTiene[MAX_PLAYERS][4], PuestoCamionero[4], PuestoEstMuni[4], GorrosSFBridge[4], GorrosBridge[4], PuestoUnity[4];
new PuestoUnityx[4],PuestoMount[4],PuestoCB[4],PuestoWeels[4],PuestoColinas[4],PuestoCNN[4],PuestoBayside[4],PuestoQuebrado[4],PuestoEme[4],PuestoTrans[4],PuestoEstaLV[4],PuestoMarket[4],PuestoSMB[4],PuestoBasu[4],PuestoLSF[4],PuestoMC[4],PuestoJT[4],PuestoPP[4],PuestoAA[4],PuestoPaya[4],PuestoElq[4],PuestoLeSF[4],PuestoPG[4],PuestoAG[4],PuestoFaDo[4],PuestoAESF[4],PuestoC1[4],PuestoCamionero1, PuestoCamionero2,PuestoCamionero3, PuestoCamionero4;
new Float:Saltos[6][6] =	{    {135.1563,2349.8230,1949.2449,},	{131.8110,2350.3130,1949.1318},    {131.7475,2344.1021,1950.5651},	{135.2510,2344.7883,1950.4067},	{133.2603,2347.3042,1949.8262},	{133.5275,2342.2461,1950.9934}	};
new PuestoEstMuni1, PuestoEstMuni2, PuestoEstMuni3, PuestoEstMuni4,GorrosSFBridge1, GorrosSFBridge2, GorrosSFBridge3 ,GorrosSFBridge4,GorrosBridge1, GorrosBridge2, GorrosBridge3, GorrosBridge4,PuestoUnity1, PuestoUnity2, PuestoUnity3, PuestoUnity4,PuestoUnityx1, PuestoUnityx2, PuestoUnityx3, PuestoUnityx4,PuestoMount1, PuestoMount2, PuestoMount3,PuestoMount4,PuestoCB1,PuestoCB2, PuestoCB3,PuestoCB4,PuestoWeels1,PuestoWeels2,PuestoWeels3,PuestoWeels4;
new PuestoColinas1, PuestoColinas2, PuestoColinas3,PuestoColinas4,PuestoCNN1, PuestoCNN2,PuestoCNN3, PuestoCNN4,PuestoBayside1, PuestoBayside2,PuestoBayside3,PuestoBayside4,PuestoQuebrado1,PuestoQuebrado2,PuestoQuebrado3,PuestoQuebrado4,PuestoEme1,PuestoEme2,PuestoEme3,PuestoEme4,PuestoTrans2,PuestoTrans1,PuestoTrans3,PuestoTrans4,PuestoEstaLV1,PuestoEstaLV2,PuestoEstaLV3,PuestoEstaLV4,PuestoMarket1,PuestoMarket2,PuestoMarket3,PuestoMarket4;
new PuestoSMB1,PuestoSMB2,PuestoSMB3,PuestoSMB4,PuestoBasu1,PuestoBasu2,PuestoBasu3,PuestoBasu4,PuestoLSF1,PuestoLSF2,PuestoLSF3,PuestoLSF4,PuestoMC1,PuestoMC2,PuestoMC3,PuestoMC4,PuestoJT1,PuestoJT2,PuestoJT3,PuestoJT4,PuestoPP1,PuestoPP2,PuestoPP3,PuestoPP4,PuestoAA1,PuestoAA2,PuestoAA3,PuestoAA4,PuestoPaya1,PuestoPaya2,PuestoPaya3,PuestoPaya4,PuestoElq1,PuestoElq2,PuestoElq3,PuestoElq4,PuestoLeSF1,PuestoLeSF2,PuestoLeSF3,PuestoLeSF4;
new PuestoPG1,PuestoPG2,PuestoPG3,PuestoPG4,PuestoAG1,PuestoAG2,PuestoAG3,PuestoAG4,PuestoFaDo1,PuestoFaDo2,PuestoFaDo3,PuestoFaDo4,PuestoAESF1,PuestoAESF2,PuestoAESF3,PuestoAESF4,PuestoC11,PuestoC12,PuestoC13,PuestoC14,ConsumirCaramelos[MAX_PLAYERS],TiempoCaramelos[MAX_PLAYERS],vehaveriado[MAX_VEHICLES] = 0,DineroColegiala[33], TiempoAvion; //,p_CarWarpVehicleID[MAX_PLAYERS],p_CarWarpTime[MAX_PLAYERS];
new PaisActual[MAX_PLAYERS],Text3D:LabelFC[6], ActorFC[9], bool:EventoActivo,bool:NidadX, bool:HallX, t_cerveza,MapaFC[76],MapaNavi[17], MapasTexturizados[17],Text3D:TextoNavi,TextoStriptease, AvionInt, Avion, SAPDF[] = { 211, 306, 307 }, Text:Cuadroputi, Text:Cuadroputi1, PlayerText:AfinidadconX[MAX_PLAYERS], PlayerText:LineasPutiNivel[MAX_PLAYERS], Text:PuticlubMedia,Text:PuticlubAlta;
new Text:FlechasArribaPuti, Text:FlechasArribaPuti2, Slapeo[MAX_PLAYERS],Stripx[10], EnClub[MAX_PLAYERS] = 0, Text:Completonegro, Text:LuegoDe,Bailarina1 = 0,Bailarina2 = 0,Bailarina3 = 0,Bailarina4 = 0,Bailarina5 = 0,Bailarina6 = 0, Banear[MAX_PLAYERS], Ratita[MAX_PLAYERS],TextoCombustibleX[MAX_PLAYERS], EstaDomiciliaria[MAX_PLAYERS],EnParacaidas[MAX_PLAYERS], Registroaviox[MAX_PLAYERS],SpecJugador[MAX_PLAYERS];
new ComandoEstado = 1,TiempoExpulsar[MAX_PLAYERS], AvionListo = 0, HabloI[MAX_PLAYERS],TiempoReinicio,TimerReinicio,TimerReinicio2, HabloM[MAX_PLAYERS], HabloA[MAX_PLAYERS], HabloAg[MAX_PLAYERS],HabloJe[MAX_PLAYERS],HabloH[MAX_PLAYERS],HabloHp[MAX_PLAYERS],HabloMo[MAX_PLAYERS],Ignacio,Marcelo,Mao,Hugo,Alejandro,HippePepe,Angelica,Jorge,actorid[20],RejasFC[33],Guardia3,Guardia4,Guardia6,Guardia7,Guardia8,Guardia9,Guardia10,Guardia11,Guardia12;
new Tenderoclub,Tenderoclub1,Tenderoclub2,Bartender,Bartender2,Bartender3,Bartender4,IslaSeguridad,IslaSeguridad2,Pizzero,Pizzero2,Pizzero3,Pizzero4,Pizzero5,Pizzero6,Pizzero7,Pizzero8,Mujeraservicio,SexChop,SexChop1,Vendedor,Vendedor1,Vendedor2,Vendedor3,Vendedor4,Vendedor5,Vendedor6,Vendedor7,Vendedor8,Vendedor9,Vendedor10,Vendedor11,Vendedor12,Ropa,Ropa1,Ropa2,Ropa3,Ropa4,Ropa5,Ropa6,Hombreemisora,Hombreherramientas,Chicataxista,Vendedor13;
new Minero,Minero1,Avionista,Entrenador,Entrenador2,quienfue[MAX_PLAYER_NAME],BaldeAgua[MAX_PLAYERS],PrendaMarcada[MAX_PLAYERS], TextosIslas1,TextosIslas2,bool:EnPrueba[MAX_PLAYERS],bool:PruebaOnline[MAX_PLAYERS],Frecuencia[MAX_PLAYERS],LoroHabla[MAX_PLAYERS],FraseLoro[MAX_PLAYERS][70],EnCarreras[MAX_PLAYERS],lugarcarrera,EmpezoCarrera,ParticipantesCarrera,HabilitarCarreras,ParticipantesCarrera2, Text3D:TextoCarrera,ConteoCarrera,TipoConteo;
new VueltasCarrera[MAX_PLAYERS],bool:EntradaCarrera[MAX_PLAYERS],VehiculoCarrera[14], SlotGanador,TiempoCarrera[MAX_PLAYERS],TiempoCarrera2[MAX_PLAYERS],InfoCP[4][6], PlayerText:tren[MAX_PLAYERS][MAX_PLAYERS],asdtren[MAX_PLAYERS],PlayerText:jugador[MAX_PLAYERS],asd[MAX_PLAYERS];
new TiempoAcademia[MAX_PLAYERS],Float:VidaCheat[MAX_PLAYERS],Float:ChalecoCheat[MAX_PLAYERS],TotemBuscar[MAX_PLAYERS][10],EnLlamada911[MAX_PLAYERS],LoginTimer[MAX_PLAYERS],IDReporte[MAX_PLAYERS], IDReporteMensaje[MAX_PLAYERS][150],ListItemReportId[MAX_PLAYERS][40],CancelReport[MAX_PLAYERS],Frencuena1p, Frencuena2p, Frencuena3p, Frencuena4p,Frencuena5p,Frencuena6p,Frencuena7p,Frencuena8p;
new ViendoPantalla[MAX_PLAYERS] = 0, ViendoGPS[MAX_PLAYERS],AutoBuscado[MAX_PLAYERS], JugadorBuscado[MAX_PLAYERS], PatenteBuscada[MAX_PLAYERS][10],PaydayDado,JustReported[MAX_PLAYERS],Balde[MAX_VEHICLES],DineroCamello, CrackCamello, MarihuanaCamello, MedicamentosCamello, Camello,TrenUno, TrenTres, TrenCuatro, TrenDos,BotonesFC[6],BotonesLVPD[3],PickupRopa[MAX_PLAYERS],ObjExp[19], ObjBox[34], ObjCon[5], ObjHumo1[3], ObjHumo2[3];
new PuertaRobo1,PuertaRobo8,VerBaul[MAX_PLAYERS],PuertaRobo6,Entrando[MAX_PLAYERS],Forzada4,Forzada5,Forzada6,Forzada8,Quitando[MAX_PLAYERS],PuertaRobo2,PuertaRobo3,PuertaRobo4,PuertaRobo5,Advertido[MAX_PLAYERS],GolpesAdv[MAX_PLAYERS],Objeto[MAX_PLAYERS],Forzada1,Forzada2,Forzada3,Avisos[MAX_PLAYERS],CasaAbierta,CasaAbierta6,CasaAbierta2,CasaAbierta3,CasaAbierta4,CasaAbierta5,reportar[MAX_PLAYERS],Float:PosTP[MAX_PLAYERS][3],AvisoTP[MAX_PLAYERS];
new Float: fVehSpeed[MAX_PLAYERS],AutoJugador[MAX_PLAYERS],CuentaDinero[MAX_PLAYERS],EnPatrulla[MAX_PLAYERS],Logeando[MAX_PLAYERS],RecorridoBasu[MAX_PLAYERS],CargandoC[MAX_PLAYERS],CasaAbierta8,CasaAbierta10,ExpObj, BoxObj, ConObj, Humo1Ojb, Humo2Ojb,BotonesACA[7],PuertasFC[6],iVehicleObjective[MAX_VEHICLES][2],PuertasLVPD[3],PuertasACA[7],Localizando[MAX_PLAYERS],Monto[MAX_PLAYERS],Ficha[MAX_PLAYERS],Text:NewPlayer[3];
new AntiCarHacks[MAX_PLAYERS],AvisosAuto[MAX_PLAYERS],TiempoVenta[MAX_PLAYERS],TiempoCreacion[MAX_PLAYERS],TimerCheats[MAX_PLAYERS],RTiempo[MAX_PLAYERS],Mecanico[MAX_PLAYERS],MConductor[MAX_PLAYERS],EnAuto[MAX_PLAYERS],RopaMeca[MAX_PLAYERS],RopaMine[MAX_PLAYERS],Bidon[MAX_PLAYERS],Baul[MAX_VEHICLES],llenado[MAX_VEHICLES],llenadobarra[MAX_PLAYERS],Muriendo[MAX_PLAYERS],LlamadaTaxi[MAX_PLAYERS],EnTaxi[MAX_PLAYERS],VRepuestos[MAX_PLAYERS],TiempoDarDinero[MAX_PLAYERS];
new CanalDudas[MAX_PLAYERS],VerAutos[MAX_PLAYERS],Oficial[MAX_PLAYERS],RopaMedi[MAX_PLAYERS],RopaBasu[MAX_PLAYERS],Capo[MAX_VEHICLES],BajandoV[MAX_PLAYERS],Bajando[MAX_PLAYERS],MRepuestos[MAX_PLAYERS],Cambiando[MAX_PLAYERS],PBasura[MAX_PLAYERS],Companero[MAX_PLAYERS],recogiendo[MAX_PLAYERS],TM[MAX_PLAYERS],CheatAlerta[MAX_PLAYERS],TipoCosecha[MAX_PLAYERS],Cosechando[MAX_PLAYERS],PCosechar[MAX_PLAYERS],Taxista[MAX_PLAYERS],Pasajero[MAX_PLAYERS];
new LlamadaMeca[MAX_PLAYERS],ResponderMeca[MAX_PLAYERS],ResponderTaxi[MAX_PLAYERS],ResponderMedi[MAX_PLAYERS],Text:TEXTDRAWBOX1,Forzada10,Text:TEXTDRAWBOX2,Text:TEXTDRAWBOX3,Text:TEXTDRAWBOX4,Text:velocimetro6,Text3D:Marcelo1,Text3D:Ignacio1,Text3D:Mao1,Text3D:Hugo1,Text3D:HippePepe1,Text3D:Angelica1,Text3D:Jorge1,Text3D:CamelloTexto,Text3D:CamelloHablar,Text3D:Alejandro1,EstaCamio[MAX_VEHICLES];
new T1,T2,T3,T4,T5,T6,T7,T12,T22,T32,T42,T52,T62,T72,T13,T23,T33,T43,T53,T63,T73,T14,T24,T34,T44,T54,T64,T74,T15,T25,T35,T45,T55,T65,T75,T16,T26,T36,T46,T56,T66,T76,T18,T28,T38,T48,T58,T68,T78,T88,T110,T210,T310,T410,T510,T610,T710,T810,T17,T27,T37,T47,T57,T67,T77,Forzada7,PuertaRobo7,CasaAbierta7,T19,T29,T39,T49,T59,T69,T79,Forzada9,PuertaRobo9,CasaAbierta9,T111,T211,T311,T411,T511,T611,T711,Forzada11,PuertaRobo11,CasaAbierta11;
new T112,T212,T312,T412,T512,T612,T712,Forzada12,PuertaRobo12,CasaAbierta12,EnTuto[MAX_PLAYERS],rocajugador[MAX_PLAYERS], pescador[MAX_PLAYERS], pesca[MAX_PLAYERS], RecorridoPescador[MAX_PLAYERS],TelefonoEstado[MAX_PLAYERS],tviaje[MAX_PLAYERS],tcarga[MAX_PLAYERS],Hora, Minuto, Segundo, TiempoDuda[MAX_PLAYERS], SinGaso[MAX_VEHICLES],Gasolin[MAX_VEHICLES],Float:SpecX[MAX_PLAYERS];
new Luces[MAX_VEHICLES],TimerCombate[MAX_PLAYERS],EnCombate[MAX_PLAYERS],TiempoCombate[MAX_PLAYERS],CColocado[MAX_PLAYERS],CagoSeguro[MAX_PLAYERS], TiempoRef[MAX_PLAYERS], TiempoComputadora[MAX_PLAYERS],TiempoCLUB[MAX_PLAYERS],BaulPB[MAX_PLAYERS],HCalculo[MAX_PLAYERS],Text:TAXIMET,Text:TAXIMET2[MAX_PLAYERS],Text:TAXIMET3,Text:TAXIMET4,HCurando[MAX_PLAYERS],DudaTexto[MAX_PLAYERS][128],RobandoTienda[MAX_PLAYERS],PuertaRobo10, Text:Velocimetrotd[2];
new Camas[13][4],Float:OldPosx[MAX_VEHICLES],Float:OldPosy[MAX_VEHICLES],Float:OldPosz[MAX_VEHICLES],EnLlamada[MAX_PLAYERS],Robando[MAX_PLAYERS],CargosRobar[MAX_PLAYERS], cavion[MAX_PLAYERS],AvionID[MAX_PLAYERS],NoQuitar[MAX_PLAYERS],TiempoAgresor[MAX_PLAYERS],Agresor[MAX_PLAYERS],TCV[MAX_PLAYERS],TCV2[MAX_PLAYERS],RobadoReciente[MAX_PLAYERS],Evento[MAX_PLAYERS],objetos = mS_INVALID_LISTID,GuardaEspalda[MAX_PLAYERS],Float:SpecY[MAX_PLAYERS],SpecInt[MAX_PLAYERS];
new Deposito[MAX_PLAYERS],NPrendas[MAX_PLAYERS], SlotP2[4][MAX_PLAYERS], UsandoP[MAX_PLAYERS], UsandoObj[MAX_PLAYERS], UsandoObj2[MAX_PLAYERS], UsandoObj3[MAX_PLAYERS], UsandoObj4[MAX_PLAYERS],ConsumirCrack[MAX_PLAYERS],TiempoCrack[MAX_PLAYERS],TiempoLlenar[MAX_PLAYERS],TiempoReparar[MAX_PLAYERS],YaOfrecio[MAX_PLAYERS],ConsumirMedicamento[MAX_PLAYERS],Consumible[MAX_PLAYERS],TiempoMedicamentos[MAX_PLAYERS];
new Chofer[MAX_VEHICLES] = INVALID_PLAYER_ID,Carga[MAX_PLAYERS],NombresOcultos[MAX_PLAYERS], SedOculta[MAX_PLAYERS], IntroOculta[MAX_PLAYERS], ServidorOculto[MAX_PLAYERS],TipoCargo[MAX_PLAYERS],Cargas[MAX_PLAYERS],CamionCargado[MAX_VEHICLES] = 0,CamionID[MAX_PLAYERS],Paciente[MAX_PLAYERS],armaofertada[MAX_PLAYERS],CrackOfrecidos[MAX_PLAYERS],PiezasOfrecidas[MAX_PLAYERS],EVOfrecidos[MAX_PLAYERS];
new MedicamentosOfrecidos[MAX_PLAYERS],MarihuanaOfrecida[MAX_PLAYERS],TiempoMarihuana[MAX_PLAYERS],dineropedido[MAX_PLAYERS],ofertador[MAX_PLAYERS],LeOfreci[MAX_PLAYERS],Mats1[MAX_PLAYERS],Mats2[MAX_PLAYERS],Mats3[MAX_PLAYERS],MedicoCP2[MAX_PLAYERS],PuntoMats[MAX_PLAYERS],EstadoRadio[MAX_PLAYERS],Curando[MAX_PLAYERS],MedicoCP[MAX_PLAYERS],Conecction,Conecction2,Mobile2[MAX_PLAYERS],PacienteAmbu[MAX_PLAYERS],Reanimado[MAX_PLAYERS],MarcadoMedicos[MAX_PLAYERS];
new LlamadaMedicos[MAX_PLAYERS],Loc[MAX_PLAYERS],bloqueado[MAX_VEHICLES],alarma[MAX_VEHICLES],PrimerSpawn[MAX_PLAYERS],PayDayLeft,averiado[MAX_VEHICLES],Jail[MAX_PLAYERS],San[MAX_PLAYERS],barrera, porton, puerta_1, puerta_2, puerta_3, reja1, reja2, reja3, reja4, reja5, reja6,Manejando[MAX_PLAYERS],iVehicle[MAX_PLAYERS],pistas[9], suelo[4], isla[7];
new Float:DeathXH[MAX_PLAYERS],Float:DeathYH[MAX_PLAYERS],Float:DeathZH[MAX_PLAYERS],EspacioBaul[MAX_VEHICLES],EspacioBaul2[MAX_VEHICLES],EspacioBaul3[MAX_VEHICLES],EspacioBaul4[MAX_VEHICLES],VarAvion[MAX_PLAYERS],TrabajoAvion[MAX_PLAYERS],VarBaul[MAX_PLAYERS],VehicleFuel[MAX_VEHICLES],Float:DeathX[MAX_PLAYERS],EspacioBaul5[MAX_VEHICLES],EspacioBaul6[MAX_VEHICLES],EspacioBaul7[MAX_VEHICLES],EspacioBaul8[MAX_VEHICLES], Float:DeathY[MAX_PLAYERS];
new Float:DeathZ[MAX_PLAYERS], Float:PuntoBaX[MAX_PLAYERS], Float:PuntoBaY[MAX_PLAYERS], Float:PuntoBaZ[MAX_PLAYERS], Float:PuntoBaA[MAX_PLAYERS],Float:PuntoCX[MAX_PLAYERS], Float:PuntoCY[MAX_PLAYERS], Float:PuntoCZ[MAX_PLAYERS], Float:PuntoTraX[MAX_PLAYERS], Float:PuntoTraY[MAX_PLAYERS], Float:PuntoTraZ[MAX_PLAYERS],YaEstaAbierta[40],PuertaEmisora[5],PuertaAbiertaEmisora[5];
new CabinasOcupadasEmisoras[5][3],TieneMicrofono[MAX_PLAYERS],Text3D:CabinasTextos[5],EmisoraEscuchando[MAX_VEHICLES] = -1,AreaCabinas[6],Botones[40],PuertasDeBotones[40],Alquilador[MAX_PLAYER_NAME],bool:Alquilado,HorasSalon,bool:PermisoSalon[MAX_PLAYERS],bool:Boleto[MAX_PLAYERS],Personas,PrecioSalon,NivelSalon,Text3D:TextoSalon,Text3D:TextoSalon2,NombreEvento[100],DescriEvento[150],TipoEvento,bool:Escuchando[MAX_PLAYERS],PuertaAbierta[5],Puerta[5];
new Esposando[MAX_PLAYERS], TimerEsposar[MAX_PLAYERS],Cargando2[MAX_PLAYERS] = 0,Picando[MAX_PLAYERS] = 0,Descargando2[MAX_PLAYERS] = 10,DescargandoTiempo[MAX_PLAYERS],autos[MAX_PLAYERS],autos2[MAX_PLAYERS],autos3[MAX_PLAYERS],autos4[MAX_PLAYERS],JugadorLogeado[MAX_PLAYERS],Text:CN,Text:CN2,Text:CN3,Text:CN4, Text:CN5;
new Text:AlertaRefuerzos[5],engine, lights, alarm, doors, bonnet, boot, objective,YaEncendiendo[MAX_PLAYERS],MotorAuto[MAX_VEHICLES],DudaOff[MAX_PLAYERS],BigEar[MAX_PLAYERS], Text:PantallaGTA[2],ModoCombate,TieneSprunk[MAX_PLAYERS], TienePorro[MAX_PLAYERS],TieneCerveza[MAX_PLAYERS],TieneVino[MAX_PLAYERS], TienePizza[MAX_PLAYERS], TieneAquariu[MAX_PLAYERS], Contador[MAX_PLAYERS], permisopesca[MAX_PLAYERS];
new Boletos[MAX_PLAYERS], VWTemporal[MAX_PLAYERS], llamadasonido1[MAX_PLAYERS], llamadasonido2[MAX_PLAYERS],NPC_Tren[6],RopaIcono[7],Specteando[MAX_PLAYERS] = 0, Specteado[MAX_PLAYERS];
new EstaEnBus[MAX_PLAYERS], tipogrua[MAX_PLAYERS],hands[MAX_PLAYERS],NombreErroneo[MAX_PLAYERS],territorios[9], muelles[5], mares,idTimerOfertaPerdida[MAX_PLAYERS],idTimerTiempoVenta[MAX_PLAYERS],Float:SpecZ[MAX_PLAYERS], SpecVW[MAX_PLAYERS];
new Camas2[11][4],Camas3[13][4],EspacioBaul9[MAX_VEHICLES],EspacioBaul10[MAX_VEHICLES];
static controls[11];

static const Float:LlenarBaldePos[][4]=
{
	{-1113.1726,-1624.8458,76.3739,00.0000},
	{-1085.6027,-1233.0909,129.2188,00.0000},
	{2182.2854,-1204.4094,1049.0234,92.9524},
	{2500.0156,-1709.0613,1014.7422,271.7328},
	{2373.8501,-1132.3589,1050.8750,267.6593},
	{2312.9299,-1009.5996,1050.2109,88.0856},
	{2336.7605,-1139.1429,1050.7031,268.4329},
	{2236.4453,-1068.4406,1049.0234,88.1309},
	{2278.4763,-1135.3755,1050.8984,183.2602},
	{2268.3149,-1138.6337,1050.6328,265.8489},
	{2337.7563,-1067.6060,1049.0310,267.8058},
	{244.8778,1190.7170,1080.2578,270.1188},
	{19.1101,1349.6440,1084.3812,90.3134},
	{233.5327,1246.1370,1082.1406,272.0249},
	{218.8409,1292.0800,1082.1406,178.7918},
	{267.2342,1292.5289,1080.2578,267.4425},
	{228.0432,1159.1633,1082.6094,359.2500},
	{264.3879,1246.8861,1084.2578,266.2840},
	{378.4278,1455.1125,1080.1875,95.3828},
	{320.3961,1480.1434,1084.4397,91.8075},
	{31.5584,1405.5405,1084.4297,274.4592},
	{-265.2631,1448.9730,1084.3672,268.2993},
	{-284.1034,1477.7433,1084.3812,266.9883},
	{-48.2810,1397.8523,1084.4297,177.0349},
	{78.1618,1337.4204,1083.8672,87.4208},
	{2320.4250,-1209.8008,1049.0234,273.5193},
	{237.7081,1119.7861,1080.9922,357.2486},
	{239.1131,1018.1585,1084.0267,179.5868},
	{302.3803,1480.1520,1080.2578,273.2275},
	{1280.3440,-808.9535,1085.6328,1.3116},
	{414.3080,2535.4280,10.0000,177.6601},
	{333.6844,1122.8926,1083.8903,274.0729}
};
new Float:ServicioMedicoPos[3][6] = {
	{1148.0066,-1322.5038,-10.7922},
	{-2713.3152,636.8893,1385.6547},
	{1242.1221,-809.4786,1164.2759}
};
new Float:FCSPAWN[30][4] = {
	{199.1747,1459.5541,1089.1055,180.0000},
	{195.1056,1459.3986,1089.1055,180.0000},
	{190.7936,1459.7858,1089.1055,180.0000},
	{187.0855,1459.4928,1089.1055,180.0000},
	{183.4470,1459.5338,1089.1055,180.0000},
	{179.6088,1459.3896,1089.1055,180.0000},
	{175.6575,1459.4519,1089.1055,180.0000},
	{199.0618,1439.0070,1089.1055,0.0000},
	{195.0666,1439.3788,1089.1055,0.0000},
	{191.5202,1439.1429,1089.1055,0.0000},
	{187.3893,1439.7242,1089.1055,0.0000},
	{183.3691,1439.5751,1089.1055,0.0000},
	{179.7219,1439.6594,1089.1055,0.0000},
	{175.5549,1439.4552,1089.1055,0.0000},
	{198.9114,1459.6091,1084.8462,180.0000},
	{194.9099,1460.5367,1084.8462,180.0000},
	{191.0115,1460.5378,1084.8462,180.0000},
	{187.3833,1460.6614,1084.8462,180.0000},
	{183.5765,1460.1118,1084.8462,180.0000},
	{179.5950,1459.6536,1084.8462,180.0000},
	{175.8583,1460.5348,1084.8462,180.0000},
	{172.0326,1460.0111,1084.8462,180.0000},
	{171.9444,1438.8562,1084.8462,0.0000},
	{175.6630,1438.8634,1084.8462,0.0000},
	{179.4310,1438.5083,1084.8462,0.0000},
	{183.5618,1438.8528,1084.8462,0.0000},
	{187.3934,1438.2661,1084.8462,0.0000},
	{191.3599,1438.7249,1084.8462,0.0000},
	{195.1422,1439.3063,1084.8462,0.0000},
	{199.2997,1439.0018,1084.8462,0.0000}
};
new Float:ChalecoSpawn[23][6] = {
    {-2018.02710, 238.33360, 1035.69897,   -26.67480, -56.53550, 96.00000},
    {-2018.02710, 238.33360, 1036.35901,   -26.67480, -56.53550, 96.00000},
    {-2018.54712, 238.33360, 1037.05896,   -26.67480, -56.53550, 96.00000},
    {-2020.52710, 238.33360, 1037.05896,   -26.67480, -56.53550, 96.00000},
    {-2018.02710, 238.33360, 1037.05896,   -26.67480, -56.53550, 96.00000},
    {-2019.56714, 238.33360, 1035.69897,   -26.67480, -56.53550, 96.00000},
    {-2021.50708, 238.33360, 1036.35901,   -26.67480, -56.53550, 96.00000},
    {-2020.52710, 238.33360, 1035.69897,   -26.67480, -56.53550, 96.00000},
    {-2019.06714, 238.33360, 1036.35901,   -26.67480, -56.53550, 96.00000},
    {-2018.54712, 238.33360, 1035.69897,   -26.67480, -56.53550, 96.00000},
    {-2019.56714, 238.33360, 1037.05896,   -26.67480, -56.53550, 96.00000},
    {-2020.52710, 238.33360, 1036.35901,   -26.67480, -56.53550, 96.00000},
    {-2018.54712, 238.33360, 1036.35901,   -26.67480, -56.53550, 96.00000},
    {-2021.50708, 238.33360, 1035.69897,   -26.67480, -56.53550, 96.00000},
    {-2021.00708, 238.33360, 1036.35901,   -26.67480, -56.53550, 96.00000},
    {-2021.50708, 238.33360, 1037.05896,   -26.67480, -56.53550, 96.00000},
    {-2021.00708, 238.33360, 1035.69897,   -26.67480, -56.53550, 96.00000},
    {-2019.06714, 238.33360, 1035.69897,   -26.67480, -56.53550, 96.00000},
    {-2020.04712, 238.33360, 1036.35901,   -26.67480, -56.53550, 96.00000},
    {-2020.04712, 238.33360, 1037.05896,   -26.67480, -56.53550, 96.00000},
    {-2019.06714, 238.33360, 1037.05896,   -26.67480, -56.53550, 96.00000},
    {-2021.00708, 238.33360, 1037.05896,   -26.67480, -56.53550, 96.00000},
    {-2019.56714, 238.33360, 1036.35901,   -26.67480, -56.53550, 96.00000}
};
new Float:EscopetasRecortadas[10][6] = {
	{-2021.98181, 244.37700, 1035.66382,   0.00000, 0.00000, 0.00000},
	{-2021.86084, 244.04727, 1035.22876,   90.00000, 7.00000, 0.00000},
	{-2021.35913, 244.18207, 1035.22888,   90.00000, 7.00000, 180.00000},
	{-2021.08179, 244.37700, 1035.30383,   0.00000, 0.00000, 0.00000},
	{-2021.98181, 244.37700, 1035.30383,   0.00000, 0.00000, 0.00000},
	{-2021.04321, 244.38640, 1035.50781,   0.00000, 0.00000, 180.00000},
	{-2021.09961, 244.04617, 1035.22876,   90.00000, 7.00000, 0.00000},
	{-2020.49866, 244.19951, 1035.22888,   90.00000, 7.00000, 180.00000},
	{-2021.07385, 244.37820, 1035.66382,   0.00000, 0.00000, 0.00000},
	{-2020.22290, 244.40649, 1035.50781,   0.00000, 0.00000, 180.00000}
};
new Float:PTec[10][6] = {
	{-2019.88318, 244.41052, 1037.08557,   0.00000, 0.00000, 180.00000},
	{-2021.94531, 244.36340, 1036.84961,   0.00000, 0.00000, 0.00000},
	{-2019.89148, 244.23950, 1036.58472,   90.00000, 0.00000, 180.00000},
	{-2021.05835, 244.38280, 1037.08557,   0.00000, 0.00000, 180.00000},
	{-2021.07922, 244.22166, 1036.58472,   90.00000, 0.00000, 180.00000},
	{-2020.84509, 244.35448, 1036.84961,   0.00000, 0.00000, 0.00000},
	{-2018.65576, 244.27119, 1036.58472,   90.00000, 0.00000, 180.00000},
	{-2018.41455, 244.34410, 1036.84961,   0.00000, 0.00000, 0.00000},
	{-2019.59436, 244.36140, 1036.84961,   0.00000, 0.00000, 0.00000},
	{-2018.63733, 244.43520, 1037.08557,   0.00000, 0.00000, 180.00000}
};
new Float:PUzis[10][6] = {
	{-2018.87012, 244.21410, 1035.22949,   90.00000, 7.00000, 222.00000},
	{-2019.57410, 244.23192, 1035.22949,   90.00000, 7.00000, 160.00000},
	{-2018.89648, 244.43968, 1035.64746,   0.00000, 0.00000, 185.00000},
	{-2018.54041, 244.43912, 1035.64746,   0.00000, 25.00000, 185.00000},
	{-2019.23901, 244.14301, 1035.22949,   90.00000, 7.00000, 127.00000},
	{-2019.25305, 244.44669, 1035.64746,   0.00000, 25.00000, 185.00000},
	{-2018.13232, 244.43910, 1035.64746,   0.00000, 0.00000, 185.00000},
	{-2018.18652, 244.01750, 1035.22949,   90.00000, 7.00000, 77.00000},
	{-2019.61877, 244.43066, 1035.64746,   0.00000, 0.00000, 185.00000},
	{-2018.60645, 244.13139, 1035.22949,   90.00000, 7.00000, -18.00000}

};
new Float:PSnipers[10][6] = {

	{-2019.85730, 244.38020, 1035.99414,   0.00000, 0.00000, 5.00000},
	{-2021.63086, 244.38510, 1036.28320,   0.00000, 0.00000, 5.00000},
	{-2019.33923, 244.45490, 1036.28320,   0.00000, 0.00000, 187.00000},
	{-2021.60779, 244.37869, 1036.01819,   0.00000, 0.00000, 5.00000},
	{-2019.56970, 244.15793, 1035.87146,   60.00000, 0.00000, 180.00000},
	{-2018.33521, 244.45239, 1036.02905,   0.00000, 0.00000, 187.00000},
	{-2021.14893, 244.14674, 1035.87146,   60.00000, 0.00000, 180.00000},
	{-2018.38452, 244.44810, 1036.29419,   0.00000, 0.00000, 187.00000},
 	{-2020.17102, 244.44839, 1036.24646,   0.00000, 0.00000, 187.00000},
	{-2018.12842, 244.14818, 1035.87146,   60.00000, 0.00000, 180.00000}
};
new Float:BolsoSpawn[31][6] = {
	{-2026.49500, 252.92755, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2026.31030, 253.44168, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2026.50281, 253.90945, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2026.33667, 254.40216, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2025.83167, 254.63782, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2025.89404, 254.09216, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2025.75586, 253.54041, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2025.83398, 252.93347, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2025.34473, 253.10786, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2024.92517, 252.83632, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2025.17676, 253.58061, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2025.35071, 254.06973, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2025.22717, 254.59962, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2024.71033, 254.65564, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2024.87915, 254.20277, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2024.42456, 254.29457, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2024.66357, 253.69652, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2024.66895, 253.19490, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2024.32520, 252.85796, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2024.26550, 253.44356, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2024.13940, 253.93353, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2024.13062, 254.67595, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2023.80359, 254.29774, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2023.79785, 253.63652, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2023.91846, 253.06677, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2023.59717, 252.76834, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2023.22083, 252.83463, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2023.38904, 253.24394, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2023.40515, 253.76410, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2023.36169, 254.28839, 1035.20044,   0.00000, 0.00000, 0.00000},
	{-2023.60840, 254.67216, 1035.20044,   0.00000, 0.00000, 0.00000}
};

new Float:Cajas1[2][3] = {
	{-1995.44226, 220.87140, 1036.28809},	{-1995.43774, 220.88451, 1035.22485}
};

new Float:Cajas2[2][3] = {
	{-1999.65063, 220.83051, 1036.28809},	{-1999.66272, 220.86720, 1035.21875}
};

new Float:Cajas3[2][3] = {
	{-2003.90698, 220.84540, 1036.28809},	{-2003.91345, 220.83290, 1035.21521}
};

new Float:Cajas4[2][3] = {
	{-2008.23206, 220.82809, 1036.28809},	{-2008.19434, 220.78900, 1035.22705}
};

new Float:Cajas5[2][3] = {
	{-2012.24988, 220.80341, 1036.28809},	{-2012.22876, 220.87730, 1035.21497}
};

new Float:Cajas6[2][3] = {
	{-2016.73218, 220.91370, 1036.28809},	{-2016.68604, 220.89410, 1035.21497}
};

new Float:Cajas7[2][3] = {
	{-2020.99927, 220.85710, 1036.28809},	{-2020.97791, 220.85620, 1035.21497}
};

new Float:Cajas8[2][3] = {
	{-2025.99988, 223.90810, 1036.35596},	{-2026.01501, 223.92320, 1035.28625}
};

new Float:Cajas9[2][3] = {
	{-2026.00830, 227.28999, 1036.35596},	{-2025.99390, 227.31190, 1035.28625}
};

new Float:Cajas10[2][3] = {
	{-2018.13245, 233.20580, 1036.29602},	{-2018.12109, 233.21930, 1035.21436}
};
enum GPSInfo
{
	Float:GPSIconPos_X,	Float:GPSIconPos_Y,	GPSIconTipo
}

new MapIconPos[][GPSInfo]=
{
	{2227.411376,-1718.254028,1},
	{2123.630126,-2274.889648,1},
	{1174.8502,-1361.3514,1},
	{-1716.7922,-62.7255,1},
	{1377.0605,1152.7566,1},
	{-172.498428,-1542.868408,1},
	{1743.017211,-1864.421386,1},
	{2789.3672,-2574.6675,1},
	{2014.8400,1150.4700,1},
	{-2177.0659,690.9559,1},
	{-384.8185,2206.1106,1}
};
new Float:GPSPOS[MAX_TEXTDRAWS][2];

enum _:Trabajos
{
	T_Ninguno,
	T_Medico,
	T_Taxista,
	T_Guardaespaldas,
	T_Camionero,
	T_Cosechador, 
	T_Armero,
	T_Mecanico,
	T_Basurero,
	T_Transportista,
	T_Ladron,
	T_Minero,
	T_Pescador,
	T_Criminal,
	T_Prostituta
}

enum IntFijoInfo
{
	Float:int_Pickup_X,	Float:int_Pickup_Y,	Float:int_Pickup_Z,	int_Tipo,	int_InteriorID,	int_Nombre[128]
}

new DynamicHousesInfo[][IntFijoInfo] =
{
	{0.0,0.0,0.0, 0, 0, ""},
	{1172.0809,-1323.3261,15.4029, DH_TIPO_HOSPITAL, 2, "All Saints General Hospital"},
	{2034.1003,-1401.6727,17.2941, DH_TIPO_HOSPITAL, 1, "County General Hospital"},
	{1607.4504,1815.2471,10.8203, DH_TIPO_HOSPITAL, 1, "Las Venturas Hospital"},
	{-2661.7305,599.8032,14.4531, DH_TIPO_HOSPITAL, 1, "San Fierro Hospital"},
	{1555.3919,-1675.5589,16.1953, DH_TIPO_COMISARIA, 18, "Departamento de policía"},
	{2287.1091,2432.3657,10.8203, DH_TIPO_COMISARIA, 19, "Departamento de policía"},
	{-1605.5440,711.4725,13.8671, DH_TIPO_COMISARIA, 18, "Departamento de policía"},
	{-1808.7142,945.9161,24.8906, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{-1720.9456,1359.7822,7.1853, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{2083.3376,2224.7012,11.0234, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{2756.7642,2477.3533,11.0625, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{2638.7839,1849.7867,11.0234, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{2331.8098,75.0506,26.6210, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{1367.5475,248.2522,19.5669, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{203.3945,-201.9418,1.5781, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{2105.4844,-1806.4695,13.5547, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{2351.8242,2533.6289,10.8203, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{2330.6023,2533.6121,10.8203, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{2309.5044,2533.6143,10.8203, DH_TIPO_PIZZERIA, 25, "The Well Stacked Pizza"},
	{1094.0945,1597.0083,12.5469, DH_TIPO_ESTADIO, 32, "Estadio Las Venturas"},
	{1833.7745,-1842.4498,13.5781, DH_TIPO_24/7, 5, "24/7"},
	{1000.5937,-919.9277,42.3281, DH_TIPO_24/7, 6, "24/7"},
	{2247.6574,2396.1682,10.8203, DH_TIPO_24/7, 6, "24/7"},
	{1112.0471,-1370.0366,13.9843, DH_TIPO_24/7, 6, "24/7"},
	{1315.5830, -897.7324, 39.5781, DH_TIPO_24/7, 5, "24/7"},
	{2424.2266, -1742.7798, 13.5457, DH_TIPO_24/7, 5, "24/7"},
	{2194.9385, 1991.0005, 12.2969, DH_TIPO_24/7, 6, "24/7"},
	{2097.6768, 2224.6963, 11.0234, DH_TIPO_24/7, 5, "24/7"},
	{1937.8212, 2307.2593, 10.8203, DH_TIPO_24/7, 5, "24/7"},
	{1565.6444,-1171.1234,24.0931, DH_TIPO_24/7, 6, "24/7"},
	{1928.5809,-1776.2848,13.5469, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{1000.5939,-919.9257,42.3281, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{-78.3736,-1169.9005,2.1355, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{-1676.1718,432.1964,7.1797, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{-2420.1506,969.8429,45.2969, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{-1320.4795,2698.6536,50.2663, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{639.0652,1683.3542,7.1875, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{1599.0673,2221.8108,11.0625, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{2637.2786,1129.6777,11.1797, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{2117.5002,896.7776,11.1797, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{2344.0371,583.3854,11.2078, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{2187.7114,2469.6384,11.2422, DH_TIPO_NORMAL, 31, "Tienda de autoservicio"},
	{2310.0407,-1643.4899,14.8270, DH_TIPO_NORMAL, 8, "Bar"},
	{824.6143,860.6437,12.2336, DH_TIPO_NORMAL, 7, "Bar"},
	{-1821.9484,-125.7622,5.6484, DH_TIPO_NORMAL, 7, "Bar"},
	{1137.9938,-1365.5095,13.9843, DH_TIPO_NORMAL, 3, "Sex Shop"},
	{2085.1201,2074.0693,11.0546, DH_TIPO_NORMAL, 3, "Sex Shop"},
	{2515.3167, 2297.3269, 10.8203, DH_TIPO_NORMAL, 3, "Sex Shop"},
	{1498.3905,-1581.2242,13.5498, DH_TIPO_BANCO, 23, "Banco Plaza"},
	{-1581.3144,867.9341,7.6953, DH_TIPO_BANCO, 17, "Banco central de San Fierro"},
	{1466.3624,-1009.9306,26.8437, DH_TIPO_BANCO, 27, "Banco central de Los Santos"},
	{2449.4663, 2290.2431, 10.8203, DH_TIPO_BANCO, 27, "Banco central de Las Venturas"},
	{1456.4036,-1137.6667,23.9483, DH_TIPO_TIENDA, 16, "ZIP"},
	{454.2059,-1478.0029,30.8145, DH_TIPO_TIENDA, 13, "Didder Sachs"},
	{461.6936,-1500.8106,31.0455, DH_TIPO_TIENDA, 12, "Victim"},
	{499.5280,-1360.6315,16.3689, DH_TIPO_TIENDA, 14, "Pro Laps"},
	{2244.3674,-1665.5603,15.4765, DH_TIPO_TIENDA, 11, "Binco"},
	{2112.8615,-1211.4549,23.9628, DH_TIPO_TIENDA, 15, "Sub Urban"},
	{-1480.9353,2591.6696,55.8359, DH_TIPO_NORMAL, 9, "Ferretería"},
	{2107.7407,2165.6501,10.8203, DH_TIPO_NORMAL, 9, "Ferretería"},
	{2861.2902,2430.7707,11.0689, DH_TIPO_NORMAL, 9, "Ferretería"},
	{1836.9897,-1682.4479,13.3248, DH_TIPO_NORMAL, 10, "Alhambra"},
	{1707.3498,950.1061,10.8203, DH_TIPO_NORMAL, 22, "HS Haul"},
	{224.2623,1443.8137,10.8052, DH_TIPO_NORMAL, 4, "Penitenciaría de Fort Carson"},
	{-611.3183, 2325.3333, 79.5786, DH_TIPO_MINA, 28, "Mina Castillo del Diablo"},
	{1742.9369, -1864.4482, 13.5738, DH_TIPO_BANCO, 20, "Unity Station"},
	{2229.9121, -1721.2922, 13.5616, DH_TIPO_NORMAL, 24, "GYM Ganton"},
	{-550.2115,2347.3640,76.3864, DH_TIPO_NORMAL, 29, "Empleados solamente"},
	{-384.8158, 2206.0991, 42.4235, DH_TIPO_NORMAL, 30, "Bone Country Minera S.A."},
	{2362.7698,2306.3025,8.1406, DH_TIPO_NORMAL, 33, "Academia de policía"},
	{2014.8101,1107.0100,10.9203, DH_TIPO_LOVE, 33, "Club de striptease"},
	{-2425.9731,1034.6635,50.3906, DH_TIPO_SPRAY, 33, "Paint's Spray"},
	{488.8548,-1729.9846,11.1288, DH_TIPO_SPRAY, 33, "Paint's Spray"},
	{-1904.6188,272.1454,41.0469, DH_TIPO_SPRAY, 33, "Paint's Spray"},
	{2076.4985,-1831.2183,13.5545, DH_TIPO_SPRAY, 33, "Paint's Spray"},
	{-99.8633,1104.8828,19.7422, DH_TIPO_SPRAY, 33, "Paint's Spray"},
	{1961.2501,2162.3440,10.8203, DH_TIPO_SPRAY, 33, "Paint's Spray"},
	{1025.1273,-1033.7855,31.7578, DH_TIPO_SPRAY, 33, "Paint's Spray"},
	{720.2676,-466.9585,16.3437, DH_TIPO_SPRAY, 33, "Paint's Spray"},
	{-1420.9324,2595.5127,55.7080, DH_TIPO_SPRAY, 33, "Paint's Spray"}
};

static const Float:CosecharPositions[][3] =
{
	{-31.3545,54.7022,3.1172},
	{-392.1681,-1481.9919,25.6680}
};
static const Float:VerMapasPositions[][3] =
{
	{2420.76001, 2280.39990, 10.62000},
	{1451.27002, -1022.17999, 23.63000},
	{1454.43005, -1151.70996, 23.78000},
	{126.28000, -173.91000, 1.38000},
	{1802.40332, -1273.24597, 13.43750},
	{-180.20000, -1621.78003, 3.33000},
	{1489.26001, -1740.81006, 13.44000},
	{-1724.21997, -51.25000, 3.36000},
	{-1996.27002, 278.20001, 33.27000},
	{1181.17004, -1318.19995, 13.39000},
	{1714.96509, -1878.15393, 13.37510},
	{1546.18628, -1670.81445, 13.35750},
	{1996.75977, -1454.49341, 13.35210},
	{504.81653, -1357.64771, 15.93860},
	{453.70230, -1488.36462, 30.91780},
	{1677.59058, 946.69189, 10.71030},
	{2708.74512, -2511.59521, 13.46700},
	{2227.07495, -1719.28418, 13.32480},
	{1827.77209, -1837.93835, 13.37754},
	{643.65540, -1347.24133, 13.34620},
	{2230.81, -2206.13, 13.35},
	{1636.0040,-1878.2776,13.5469}

};
static const Float:HPCPos[][4]=
{
	{1177.9380,-1319.6550,14.0954,270.0000},
	{1177.0137,-1320.7273,14.0497,270.0000},
	{1178.2452,-1321.6278,14.1105,270.0000},
	{1176.6415,-1323.2949,14.0314,270.0000},
	{1175.0815,-1326.7074,14.5938,270.0000},
	{1177.5160,-1327.5901,14.0745,270.0000},
	{1177.3823,-1325.9209,14.0679,270.0000},
	{1178.8015,-1325.1271,14.1380,270.0000},
	{1179.4799,-1322.5624,14.1715,270.0000},
	{1177.7886,-1328.0889,14.0880,270.0000},
	{1178.7125,-1326.8868,14.1336,270.0000},
	{1176.3210,-1326.2289,14.0155,270.0000},
	{1174.6530,-1324.7268,14.7891,270.0000},
    {1174.9304,-1321.0016,14.5938,270.0000},
    {1173.0728,-1327.5487,15.3968,270.0000}
};

static const Float:HPGPos[][4]=
{
	{2033.8634,-1404.9954,17.2452,180.0000},
	{2031.3839,-1405.2439,17.2389,180.0000},
	{2028.2241,-1405.2552,17.2386,180.0000},
	{2025.6044,-1405.2645,17.2132,180.0000},
	{2023.5852,-1405.2715,17.1940,180.0000},
	{2021.4044,-1405.2791,17.1732,180.0000},
	{2035.4185,-1402.1874,17.3067,180.0000},
	{2037.1831,-1407.1774,17.1897,180.0000},
	{2031.7944,-1402.5620,17.2722,180.0000},
	{2028.8978,-1403.6459,17.2446,180.0000},
	{2023.2278,-1402.9595,17.1906,180.0000}
};
static const Float:HPLVPos[][4]=
{
	{1614.8058,1817.5908,10.8203,0.0000},
	{1613.0419,1817.8004,10.8203,0.0000},
	{1611.0299,1816.3567,10.8203,0.0000},
	{1608.6085,1817.3228,10.8203,0.0000},
	{1605.3682,1816.1503,10.8203,0.0000},
	{1603.1455,1817.4187,10.8203,0.0000},
	{1601.2949,1816.1897,10.8203,0.0000},
	{1599.5619,1817.2391,10.8203,0.0000},
	{1598.8051,1819.0078,10.8203,0.0000},
	{1601.6807,1820.1045,10.8280,0.0000},
	{1603.5867,1818.8036,10.8203,0.0000},
	{1605.7253,1820.2758,10.8280,0.0000},
	{1607.5717,1818.6564,10.8203,0.0000},
	{1609.6084,1820.3187,10.8280,0.0000},
	{1611.2225,1818.5868,10.8203,0.0000},
	{1614.3680,1819.1401,10.8280,0.0000},
	{1617.1754,1820.0564,10.8280,0.0000}
};
static const Float:HPSFPos[][4]=
{
	{-2662.3035,638.3649,14.4531,175.0000},
	{-2658.9199,638.4907,14.4531,175.0000},
	{-2656.1143,638.5948,14.4531,175.0000},
	{-2653.2971,638.6994,14.4531,175.0000},
	{-2650.1743,638.8153,14.4531,175.0000},
	{-2647.8831,639.3567,14.4531,175.0000},
	{-2645.5295,638.2349,14.4531,175.0000},
	{-2642.3918,639.0449,14.4531,175.0000},
	{-2642.0688,637.0115,14.4531,175.0000},
	{-2640.3364,635.5806,14.4531,175.0000},
	{-2641.4216,633.7475,14.4545,175.0000},
	{-2643.1511,635.5380,14.4531,175.0000},
	{-2646.5178,635.7631,14.4531,175.0000},
    {-2648.3799,636.5843,14.4531,175.0000},
    {-2650.4348,635.8369,14.4531,175.0000},
	{-2652.0046,637.6121,14.4531,175.0000},
    {-2654.1812,636.6133,14.4531,175.0000},
    {-2662.0847,636.1230,14.4531,175.0000},
	{-2658.1287,636.0930,14.4531,175.0000},
    {-2660.0605,637.0927,14.4531,175.0000},
    {-2655.7766,637.2667,14.4531,175.0000}
};
static const Float:OperacionesPositions[][3]=
{
	{833.6001,3.1724,1004.1797},
	{830.6400,-0.2800,1004.1797},
	{822.0131,4.0536,1004.1797},
	{822.0101,1.9244,1004.1797},
	{2316.6121,-15.1184,26.7422},
	{2316.6074,-9.9517,26.7422},
	{1086.9856,-148.6115,1001.1160},
	{1084.9305,-148.6101,1001.1160},
	{1091.8477,-135.6460,1001.1160}
};
static const Float:GasolineraPositions[][3]=
{
	{1925.1581,-1779.2399,13.0875},
	{1002.5995,-938.9977,41.7164},
	{-90.9733,-1169.9698,1.9307},
	{654.7282,-565.5597,15.7458},
	{-1677.1003,414.2072,7.0904},
	{-2410.9700,974.6269,45.4609},
	{-1327.8411,2677.0786,49.8695},
	{615.9312,1689.9292,6.7035},
	{1595.3818,2198.0535,10.5985},
	{2202.4304,2476.8889,10.6556},
	{1944.0356,-1772.2762,13.1342},
	{2148.8745,2748.3677,10.8203},
	{2751.7844,-2595.2117,2.2000},
	{1382.7792,461.4145,20.1010},
	{-1472.1361,1863.7946,32.6328},
	{2114.6504,920.4183,10.8203},
	{2639.3811,1106.8284,10.8203},
	{-1606.5299,-2713.9026,48.5335},
	{2751.7844,-2595.2117,2.2000},
	{1968.6451,-2638.5715,13.5469},
	{-1116.7944,-174.9563,14.1440},
	{1332.6748,1540.4779,10.8203},
	{2320.3205,580.9168,10.8554}
};

new NombreHerramienta[5][] = { "",	"{00CC00}Martillo{FFFFFF} | ",	"{00CC00}Destornillador{FFFFFF} | ",	"{00CC00}Barreta{FFFFFF} | ",	"{00CC00}Balde{FFFFFF} | "};

new Float:LadronIniciando[6][3] = {
	{2226.8267,-2000.7704,13.5547},
	{2228.8489,-1997.6854,13.5469},
	{2226.7007,-1994.8749,13.5469},
	{2230.2041,-1994.8240,13.5469},
	{2231.2527,-1999.1012,13.5469},
	{2228.8489,-1997.6854,13.5469}
};
new Float:GuardiaIniciando[6][3] = {
	{2025.2177,1012.7422,10.8203},
	{2025.6582,1009.2859,10.8203},
	{2024.5929,1006.2603,10.8203},
	{2022.3403,1004.3590,10.8203},
	{2022.0591,1008.3193,10.8203},
	{2022.2172,1006.7584,10.8203}
};
new Float:LadronSpawn[6][3] = {
	{1430.3668,590.1225,1000.9576},
	{1430.1810,592.3860,1000.9573},
	{1430.4023,595.0336,1000.9576},
	{1428.2057,593.4849,1000.9544},
	{1428.3972,591.2043,1000.9547},
	{1427.6417,589.0898,1000.9536}
};
new Float:GuardiaSpawn[5][3] = {
	{1403.4955,489.6608,1013.5817},
	{1401.9174,491.0302,1013.5817},
	{1402.4650,489.7699,1013.5817},
	{1405.3169,491.1187,1013.5817},
	{1406.1462,489.7360,1013.5817}
};

static const Float:FortCarsonSpawn[30][3] = {
	{172.0682,1438.3047,1084.8462},
	{175.9516,1438.9554,1084.8462},
	{179.7587,1438.0883,1084.8462},
	{183.7799,1438.3221,1084.8462},
	{187.7992,1437.8352,1084.8462},
	{191.7423,1437.8417,1084.8462},
	{195.5862,1438.1899,1084.8462},
	{199.4962,1438.1758,1084.8462},
	{199.1098,1460.8811,1084.8462},
	{195.6922,1460.6552,1084.8462},
	{191.7911,1460.3043,1084.8462},
	{187.8092,1460.7742,1084.8462},
	{184.1076,1460.0978,1084.8462},
	{180.1715,1460.2877,1084.8462},
	{176.3600,1460.4807,1084.8462},
	{172.5534,1460.7180,1084.8462},
	{176.1593,1459.1552,1089.1055},
	{179.9729,1459.4087,1089.1055},
	{183.8501,1459.5066,1089.1055},
	{187.5735,1459.2120,1089.1055},
	{191.6875,1460.0719,1089.1055},
	{195.4530,1459.6787,1089.1055},
	{199.5654,1459.7024,1089.1055},
	{199.6154,1438.9169,1089.1055},
	{195.7357,1439.0088,1089.1055},
	{191.8590,1439.1483,1089.1055},
	{188.0030,1438.9355,1089.1055},
	{184.1357,1439.2328,1089.1055},
	{180.1986,1438.7174,1089.1055},
	{176.3905,1439.0450,1089.1055}
};

new PalabrasSPAM[][] = {
	"mcity","Mikhail","fenisone" ,"Rzone","RoyalZ","RoyalZone","RZRP","revolutionfreeroam",	"freeroam",	"vamos a fz",	"rev freeroam",	"superdanova",	"danova",	"super roleplay",	"danova roleplay",	"megacity",
	"fz",	"wallhack",	"samphub",	"Morey",	"Wyatt",	"Klenox",	"MitzukiZ","HorixZone",	"Horix",	"Kreisel", "OZ",	"SurZone",	"Samp Hub",	"Hub Samp",
	"LSRP",	"linexzone",	"lz roleplay",	"Linex",	"efec3ta",	"fenix",	"fenixzone",	"f e n i x z o n e",	"vortexzone",	"vz",	"vezeta",
	"V O R T E X Z O N E S E R V I D O R 1",	"V O R T E X Z O N E S E R V I D O R 2",	"V O R T E X Z O N E S E R V I D O R 3",	"V O R T E X Z O N E S E R V I D O R 4",
	"V O R T E X Z O N E S E R V I D O R 5",	"V O R T E X Z O N E S E R V I D O R",	"V O R T E X Z O N E",	"V O R T E X",	"lzrp",	"unplayer",	"mc-rp.eu",
	"mc - rp . eu",	"mc-rp",	"vz-rp", 	"gz",	"GZ",	"pandorum",	"omegazone",	"tumbar",	"s1.omegazone.net",	"s1.vortexzone.com",	"s2.vortexzone.com",
	"s3.vortexzone.com",	"s4.vortexzone.com",	"s5.vortexzone.com",	"dm.vortexzone.com",	"rol.vortexzone.com",	"hahn", 	"ddns", 	"sytes",
    ".net",    ".es",	".esy.es",	"union",	"Roleplay",	"LSRP",	"Omega",	"ploopzone",	"pz",	"qz",	"trucho",	"mega",	"sobeit","Izan_Duff",
	"sobiet",	"omegazone",	"luxuszone",	"lzrp",	"ozrp",	"kanox",	"pingote",	"osvaldo pingote",	"s1.fenixzone.com",	"s2.fenixzone.com",
	"s3.fenixzone.com",	"s4.fenixzone.com",	"s5.fenixzone.com",	"dm.fenixzone.com",	"br.fenixzone.com",	"brs1.fenixzone.com",	"s0bi3t",	"modsobeit",	"mod sobiet",
	"m0d s0bi3t",	"downgaming",	"ranuzone",	"truch0",	"urbanz",	"mcbioniko.com",    "oz-rp",    "lz-rp",    "fz-rp", "samp-ru", "Gold Rp", "Titan rp", "Arizona",
	"Qz","QuartzZone","super freeroam","luxus","Advance roleplay","advance","sur zone","coops and","los santos gang wars","Sunday RP", "Sunday Roleplay", "Sunday","Kaiser",
    "PointZone","AndromedaCity","LoroTeca","Nostalgia Roleplay","MakerCity","SkretZolder","Stracci","Drums","New State","Arizona","Diamond RP","Diamond Roleplay","Adrenaline","Russia","brightsun"
};

new Float:EstacionamientoSpawn[16][4] =
{
	{1696.1511,-1890.9121,-49.4658,358.9672},
	{1687.7181,-1891.2502,-49.4655,0.552400},
	{1678.9371,-1891.4215,-49.4648,358.6612},
	{1670.1578,-1891.9220,-49.4654,358.6499},
	{1661.5068,-1891.5864,-49.4654,357.6857},
	{1652.8259,-1892.1475,-49.4650,359.5179},
	{1643.8951,-1891.8013,-49.4652,0.071000},
	{1635.0278,-1892.2366,-49.4650,358.8168},
	{1625.7860,-1886.0453,-49.4657,269.2534},
	{1625.8372,-1876.2145,-49.4650,269.0139},
	{1625.7241,-1866.8931,-49.4654,269.9608},
	{1625.3655,-1857.1331,-49.4653,269.1502},
	{1625.2886,-1847.8040,-49.4649,267.4869},
	{1647.9650,-1848.8428,-49.4654,358.3884},
	{1656.6831,-1848.2781,-49.4653,0.017200},
	{1665.6160,-1848.1263,-49.4651,359.2898}
};

new Float:DineroSpawn1[7][3] = {
	{1219.4506, -6.7681, 1000.3845},
	{1219.7976, -6.8836, 1000.3845},
	{1219.9985, -7.0584, 1000.3845},
	{1219.6404, -7.0946, 1000.3845},
	{1219.4285, -6.9823, 1000.3845},
	{1219.3450, -7.1265, 1000.3845},
	{1219.5104, -7.2973, 1000.3845}
};

new Float:DineroSpawn2[12][3] =
{
	{1214.65063, -4.69790, 1000.38452},
	{1214.14819, -4.23293, 1000.38452},
	{1214.53308, -4.04349, 1000.38452},
	{1214.60669, -4.41849, 1000.38452},
	{1214.12769, -4.46524, 1000.38452},
	{1214.36548, -4.61390, 1000.38452},
	{1214.47095, -4.19637, 1000.38452},
	{1214.20825, -3.98005, 1000.38452},
	{1213.84241, -4.38125, 1000.38452},
	{1213.93042, -4.66804, 1000.38452},
	{1214.29126, -4.78296, 1000.38452},
	{1214.34155, -4.37421, 1000.38452}
};

new Float:DineroSpawn3[17][3] = {
	{1202.96399, 8.28210, 999.92468},
	{1202.75500, 8.12750, 999.92468},
	{1202.69250, 8.37438, 999.92468},
	{1202.84998, 8.55979, 999.92468},
	{1203.11084, 8.45035, 999.92468},
	{1203.26245, 8.19671, 999.92468},
	{1203.00867, 8.04549, 999.92468},
	{1202.72449, 7.95939, 999.92468},
	{1203.16357, 7.83645, 999.92468},
	{1202.79993, 7.77427, 999.92468},
	{1202.38135, 7.93154, 999.92468},
	{1203.31152, 8.00469, 999.92468},
	{1203.44116, 8.41645, 999.92468},
	{1203.38232, 8.70793, 999.92468},
	{1203.12512, 8.74535, 999.92468},
	{1202.73047, 8.74830, 999.92468},
	{1202.73047, 8.74830, 999.92468}
};

new Float:DineroSpawn4[17][3] =
{
	{1221.45471, 8.70950, 1000.38733},
	{1221.18079, 8.95026, 1000.38733},
	{1221.64392, 9.20410, 1000.38733},
	{1221.03357, 8.71232, 1000.38733},
	{1220.81445, 8.96599, 1000.38733},
	{1220.77930, 8.68179, 1000.38733},
	{1220.98523, 9.16584, 1000.38733},
	{1221.35608, 9.19465, 1000.38733},
	{1221.58569, 8.95798, 1000.38733},
	{1221.34583, 8.49501, 1000.38733},
	{1221.00684, 8.51719, 1000.38733},
	{1221.30237, 8.80439, 1000.38733},
	{1221.68201, 8.54490, 1000.38733},
	{1221.73621, 8.74649, 1000.38733},
	{1221.88123, 9.05650, 1000.38733},
	{1221.11169, 8.30978, 1000.38733},
	{1221.55042, 8.29642, 1000.38733}
};

new Float:DineroSpawn5[14][3] =
{
	{1207.96570, -6.90310,1000.38733},
	{1208.19617, -6.73263,1000.38733},
	{1207.97278, -6.56259,1000.38733},
	{1208.36243, -6.45283,1000.38733},
	{1208.52686, -6.81083,1000.38733},
	{1208.20422, -7.08637,1000.38733},
	{1208.58374, -6.59465,1000.38733},
	{1208.57703, -6.26913,1000.38733},
	{1208.25940, -6.17592,1000.38733},
	{1207.94446, -6.35177,1000.38733},
	{1207.91321, -6.08451,1000.38733},
	{1208.63062, -5.99649,1000.38733},
	{1208.85559, -6.40737,1000.38733},
	{1208.88074, -6.13652, 1000.38733}
};

new Float:DineroSpawn6[11][3] =
{
	{1203.41333, -8.66540, 1001.10388},
	{1203.19043, -8.34746, 1001.10388},
	{1203.29358, -8.47133, 1001.10388},
	{1203.10022, -8.61934, 1001.10388},
	{1202.93945, -8.46910, 1001.10388},
	{1202.90540, -8.30045, 1001.10388},
	{1203.38538, -8.25599, 1001.10388},
	{1203.04211, -8.15435, 1001.10388},
	{1202.86487, -8.78291, 1001.10388},
	{1202.84534, -8.62792, 1001.10388},
	{1203.17700, -8.80070, 1001.10388}
};

new ArmaNombre2[47][] =
{
	"","Manopla","Palo de golf","Porra","Cuchillo","Bate de Beisbol","Pala","Palo de Pool","Katana","Motosierra","Dildo púrpura","Dildo blanco","Dildo blanco grande","Dildo",	"Ramo de flores","Baston","Granada","Granada lagrimogena","Molotov",""," "," ","9mm","9mm silenciada","Desert eagle","Escopeta","Escopeta recortada","Escopeta de combate",	"Uzi","MP5","AK-47","M4","TEC-9","Rifle","Sniper Rifle","Bazooca","heatseeker","Lanzallamas","Minigun","satchel charge","Bomba",
	"Aerosol","Matafuego",	"Camara","Lentes de vision", "Lentes térmico","Paracaidas"
};

new NombreArma[47][] =
{
	"",	"{ff3300}Manopla{FFFFFF} | ",	"{ff3300}Palo de golf{FFFFFF} | ",	"{ff3300}Palo de policia{FFFFFF} | ",	"{ff3300}Cuchillo{FFFFFF} | ",	"{ff3300}Bate de beisbol{FFFFFF} | ",	"{ff3300}Pala{FFFFFF} | ",	"{ff3300}Palo de billar{FFFFFF} | ",	"{ff3300}Katana{FFFFFF} | ",	"{ff3300}Motosierra{FFFFFF} | ",	"{ff3300}Consolador rosa{FFFFFF} | ",	"{ff3300}Vibrador blanco{FFFFFF} | ",	"{ff3300}Gran vibrador blanco{FFFFFF} | ",	"{ff3300}Vibrador plateado{FFFFFF} | ",
	"{ff3300}Ramo de flores{FFFFFF} | ",	"{ff3300}Baston{FFFFFF} | ",	"{ff3300}Granada{FFFFFF} | ",	"{ff3300}Gas Lacrimógeno{FFFFFF} | ",	"{ff3300}Molotov{FFFFFF} | ",	"{ff3300}jetpack{FFFFFF} | ",	" ",	" ",	"{ff3300}9mm{FFFFFF} | ",	"{ff3300}9mm con silenciador{FFFFFF} | ",	"{ff3300}Desert Eagle{FFFFFF} | ",	"{ff3300}Escopeta{FFFFFF} | ",	"{ff3300}Sawn Off{FFFFFF} | ",	"{ff3300}Escopeta de combate{FFFFFF} | ",
	"{ff3300}UZI{FFFFFF} | ",	"{ff3300}MP5{FFFFFF} | ",	"{ff3300}AK-47{FFFFFF} | ",	"{ff3300}M4{FFFFFF} | ",	"{ff3300}TEC-9{FFFFFF} | ",	"{ff3300}Rifle{FFFFFF} | ",	"{ff3300}Sniper{FFFFFF} | ",	"{ff3300}Lanzacohetes{FFFFFF} | ",	"{ff3300}Bazooka{FFFFFF} | ",	"{ff3300}Lanzallamas{FFFFFF} | ",	"{ff3300}Minigun{FFFFFF} | ",	"{ff3300}Bomba{FFFFFF} | ",	"{ff3300}Detonador{FFFFFF} | ",	"{ff3300}Spray{FFFFFF} | ",	"{ff3300}Extintor De Incendios{FFFFFF} | ",
	"{ff3300}Camara{FFFFFF} | ",	"{ff3300}Lentes de visión nocturna{FFFFFF} | ",	"{ff3300}Gafas termicas{FFFFFF} | ",	"{ff3300}Paracaídas"
};

new NombreAuto[212][] = {
	{"Landstalker"},{"Bravura"},{"Buffalo"},{"Linerunner"},{"Perrenial"},{"Sentinel"},{"Dumper"},	{"Firetruck"},{"Trashmaster"},{"Stretch"},{"Manana"},{"Infernus"},{"Voodoo"},{"Pony"},{"Mule"},	{"Cheetah"},{"Ambulance"},{"Leviathan"},{"Moonbeam"},{"Esperanto"},{"Taxi"},{"Washington"},	{"Bobcat"},{"Mr Whoopee"},{"BF Injection"},{"Hunter"},{"Premier"},{"Enforcer"},{"Securicar"},
	{"Banshee"},{"Predator"},{"Bus"},{"Rhino"},{"Barracks"},{"Hotknife"},{"Trailer 1"},{"Previon"},	{"Coach"},{"Cabbie"},{"Stallion"},{"Rumpo"},{"RC Bandit"},{"Romero"},{"Packer"},{"Monster"},	{"Admiral"},{"Squalo"},{"Seasparrow"},{"Pizzaboy"},{"Tram"},{"Trailer 2"},{"Turismo"},	{"Speeder"},{"Reefer"},{"Tropic"},{"Flatbed"},{"Yankee"},{"Caddy"},{"Solair"},{"Berkleys RC Van"},
	{"Skimmer"},{"PCJ-600"},{"Faggio"},{"Freeway"},{"RC Baron"},{"RC Raider"},{"Glendale"},{"Oceanic"},	{"Sanchez"},{"Sparrow"},{"Patriot"},{"Quad"},{"Coastguard"},{"Dinghy"},{"Hermes"},{"Sabre"},	{"Rustler"},{"ZR-350"},{"Walton"},{"Regina"},{"Comet"},{"BMX"},{"Burrito"},{"Camper"},{"Marquis"},	{"Baggage"},{"Dozer"},{"Maverick"},{"News Chopper"},{"Rancher"},{"FBI Rancher"},{"Virgo"},{"Greenwood"},
	{"Jetmax"},{"Hotring"},{"Sandking"},{"Blista Compact"},{"Police Maverick"},{"Boxville"},{"Benson"},	{"Mesa"},{"RC Goblin"},{"Hotring Racer A"},{"Hotring Racer B"},{"Bloodring Banger"},{"Rancher"},	{"Super GT"},{"Elegant"},{"Journey"},{"Bike"},{"Mountain Bike"},{"Beagle"},{"Cropdust"},{"Stunt"},	{"Tanker"}, {"Roadtrain"},{"Nebula"},{"Majestic"},{"Buccaneer"},{"Shamal"},{"Hydra"},{"FCR-900"},
	{"NRG-500"},{"HPV1000"},{"Cement Truck"},{"Tow Truck"},{"Fortune"},{"Cadrona"},{"FBI Truck"},	{"Willard"},{"Forklift"},{"Tractor"},{"Combine"},{"Feltzer"},{"Remington"},{"Slamvan"},	{"Blade"},	{"Freight"},{"Streak"},{"Vortex"},{"Vincent"},{"Bullet"},{"Clover"},{"Sadler"},	{"Firetruck LA"},{"Hustler"},{"Intruder"},{"Primo"},{"Cargobob"},{"Tampa"},{"Sunrise"},{"Merit"},	{"Utility"},
	{"Nevada"},{"Yosemite"},{"Windsor"},{"Monster A"},{"Monster B"},{"Uranus"},{"Jester"},	{"Sultan"},{"Stratum"},{"Elegy"},{"Raindance"},{"RC Tiger"},{"Flash"},{"Tahoma"},{"Savanna"},	{"Bandito"},	{"Freight Flat"},{"Streak Carriage"},{"Kart"},{"Mower"},{"Duneride"},{"Sweeper"},	{"Broadway"},{"Tornado"},{"AT-400"},{"DFT-30"},{"Huntley"},{"Stafford"},{"BF-400"},{"Newsvan"},	{"Tug"},{"Trailer 3"},
	{"Emperor"},{"Wayfarer"},{"Euros"},{"Hotdog"},{"Club"},{"Freight Carriage"},	{"Trailer 3"},{"Andromada"},{"Dodo"},{"RC Cam"},{"Launch"},{"Police Car (LSPD)"},{"Police Car (SFPD)"},	{"Police Car (LVPD)"},	{"Police Ranger"},{"Picador"},{"S.W.A.T Van"},{"Alpha"},{"Phoenix"},{"Glendale Chocado"},	{"Sadler"},{"Luggage Trailer A"},{"Luggage Trailer B"},{"Stair Trailer"},{"Boxville"},{"Farm Plow"},	{"Utility Trailer"}
};

new Float:GuardarCajas[10][3] =
{
	{-1995.5270,222.0770,1035.8162},
	{-1999.7247,222.0580,1035.8162},
	{-2003.9645,222.0589,1035.8162},
	{-2008.2815,222.0568,1035.8162},
	{-2012.3071,222.0569,1035.8225},
	{-2016.7941,222.0571,1035.8225},
	{-2021.0618,222.0583,1035.8225},
	{-2024.7915,224.0278,1035.8225},
	{-2024.7909,227.3824,1035.8162},
	{-2018.0531,231.9894,1035.8162}
};

enum HalloweenPuestos
{
	P1Hora,
	P2Hora,
	P3Hora,
	P4Hora,
	P5Hora,
	P6Hora,
	P7Hora,
	P8Hora,
	P9Hora,
	P10Hora,
	P11Hora,
	P12Hora,
	P13Hora,
	P14Hora,
	P15Hora,
	P16Hora,
	P17Hora,
	P18Hora,
	P19Hora,
	P20Hora,
	P21Hora,
	P22Hora,
	P23Hora,
	P24Hora,
	P25Hora,
	P26Hora,
	P27Hora,
	P28Hora,
	P29Hora,
	P30Hora,
	P31Hora,
	P32Hora,
}
new Halloween[MAX_PLAYERS][HalloweenPuestos];

enum ACFZ
{
	@Teleport,
	@Imunidad
}
new PlayerAnticheat[MAX_PLAYERS][ACFZ];

enum RutaCosechas
{
	RutaCosecha,
	ProgresoCosecha,
	CosechaLugar,
}
new Cosechas[MAX_PLAYERS][RutaCosechas];

enum TransportistasO
{
	Objeto1,
	Objeto2,
	Objeto3,
	Ruta
}
new Transportistas[MAX_PLAYERS][TransportistasO];

enum Barras
{
    PlayerBar:Sed,
    PlayerBar:Hambre,
    PlayerBar:Experiencia,
    PlayerBar:Combustible,
    PlayerBar:Velocimetro,
    PlayerBar:Cosecha,
	PlayerBar:Camionero,
	PlayerBar:ReparandoBar,
	PlayerBar:Picar
};
new Progressbar[MAX_PLAYERS][Barras];

enum Logros_p
{
    Cerraduras,
    Salvados,
    Medicamentos,
    Crack,
    Carreras,
    Porros,
	Marihuana
};
new Logros[MAX_PLAYERS][Logros_p];

enum BI
{
	bID,
	BNombre[32],
	BLider[32],
	BRango1[32],
	BRango2[32],
	BRango3[32],
	BRango4[32],
	BRango5[32],
	BRango6[32],
	BRango7[32],
	BRango8[32],
	EnUso,
	territorio[15]
};
new BandasInfo[MAX_BANDAS][BI];

enum MariInfo
{
	Creado,
	IDMaria,
	Seg,
	Min,
	Hor,
	Float:pX,
	Float:pY,
	Float:pZ,
	Plantador[24],
	Estado,
	Text3D:Label,
	ObjetoID,
};
new MarihuanaInfo[MAX_PLANTAS][MariInfo];

enum Users
{
	User,
	Cantidad
};
new Usuarios[Users];

enum AntiCheat
{
	TextoSPAM[200],
	TextoSay[200],
};
new ANTI_CHEATS[MAX_PLAYERS][AntiCheat];

enum jInfo{	pCaramelos,    pTrucoTrato,	TiempoPD,    pCervezas,	pFiestaCerveza,	pHechizado, 	pLogroPutiClub,    pAfinidad1,    pAfinidad2,    pAfinidad3,    pAfinidad4,    pAfinidad5,    pAfinidad6,    pPuntosCarrera,	pObj,	Float:pfOffsetX,	Float:pfOffsetY,	Float:pfOffsetZ,	Float:pfRotX,	Float:pfRotY,	Float:pfRotZ,	Float:pfScaleX,	Float:pfScaleY,	Float:pfScaleZ,	pSlot,	pObj2,
	Float:pfOffsetX2,	Float:pfOffsetY2,	Float:pfOffsetZ2,	Float:pfRotX2,	Float:pfRotY2,	Float:pfRotZ2,	Float:pfScaleX2,	Float:pfScaleY2,	Float:pfScaleZ2,	pSlot2,	pObj3,	Float:pfOffsetX3,	Float:pfOffsetY3,	Float:pfOffsetZ3,	Float:pfRotX3,	Float:pfRotY3,	Float:pfRotZ3,	Float:pfScaleX3,	Float:pfScaleY3,	Float:pfScaleZ3,	pSlot3,	pObj4,	Float:pfOffsetX4,	Float:pfOffsetY4,	Float:pfOffsetZ4,	Float:pfRotX4,	Float:pfRotY4,
	Float:pfRotZ4,	Float:pfScaleX4,	Float:pfScaleY4,	Float:pfScaleZ4,	pSlot4,	pSobreRuedas,
	pAutomedicado,	pRemedios,	pAdicto,	pCracks,	pMedico,	pReanimados,	pTortuga,	pCasa,	pRestaurante,	pOficina,	pCerrajero,	pForzadas,	pPilotoExperto,	pGanadas,	pNegocioRedondo,	pCosecha,	pMarihuanero,	pPorros,	pWP0,	pWP1,	pWP2,	pWP3,	pWP4,	pWP5,	pWP6,	pWP7,	pWP8,	pWP9,	pWP10,	pWP11,	pWP12,	pNivelPiloto,	pExpPiloto,	pNivelLadron,	pExpLadron,	pNivelBasurero,	pExpBasurero,	pNivelCamionero,	pExpCamionero,
	pNivelTransportista,	pExpTransportista,	pNivelArmero,	pExpArmero,	pNivelPescador,	pExpPescador,	pNivelMedico,	Float:jPosE_x,	Float:jPosE_y,	Float:jPosE_z,	pExpMedico,	pExpMinero,	pNivelMinero,	Float:hx,	Float:hy,	Float:hz,	Float:@Salud,	Float:@Chaleco,	Float:@X,	Float:@Y,	Float:@Z,	pPassword[128],	tempPassword[129],	pExpulsando[32],	pStats,	pLNumero,	pPasajeros,	pDineroRobado,	pEMS,	pCama,	pVwCama,	pAtendido,
	pMedicina,	pEnfermedad,	pBanco,	pRango,	pMedicamentos,	pMarihuana,	pCrack,	pMateriales,	pSemillas,	pAgenda,	pNumero,	pGuia,	pSonidos,	pMuteos,	pBarras,	pAlerta,	pVelocimetro,	pID,	pOnline,	pPatines,	pGPS,	pRadio,	pDuty,	pModelo,	pSocioHP,	pTipoCarcel,	pTiempoCarcelM,	pTiempoCarcelS,	pTiempoJail,	pTiempoJailS,	pCargos,	pBan,	pRazon[32],	pInterior,	pMundoVirtual,	QuienC[150],	IP[16],	EnCasa,	EnRopero,
	EnGarage,	PrecioNivel,	NivelExp,	hprecio,	hmoneda,	h2precio,	h2moneda,	Repuestos,	Mobile,	MobileSub,	CasaID,	CasaID2,	EstacionamientoID,	vEstacionado1,	vEstacionado2,	vEstacionado3,	vEstacionado4,	pEnEstacionamiento,	Moneda,	Totem[32],	Totems,	arrestado,	horasjugadas,	Ent_Totem,	pVip,	pTrabajo2,	finmes,	findia,	finano,	piezas,	Agonizando,	pAdmin,	jSexo,	pTrabajo,	jEdad,	jRopa,	pFaccion,	@Nivel,	jDinero,	jTiempoON,
	jExperiencia, CodigoAdmin,	pEnFC,	pIpRegistro[32],	findialicencia, finmeslicencia,	finanolicencia,	ContraTemporal[128],	pPaisRegistro[30],	PaisDistinto,	jRegistrado,	NombreTemporal[MAX_PLAYER_NAME],	jConexion[90],	pSed,	pLicencia,	pHambre,	jMartillo,	jDestornillador,	jBarreta,	jBalde,	Float:pOX,	Float:pOY,	Float:pOZ,	Float:pOA,	VE1,	VE2,	VE3,	VE4,	vMonedaa,	vModelo,	vGas,	vinterior,	vvw,	vColor1,
	vColor2,	Float:pVidaV,	vBaul,	vBaul2,	vBaul3,	vBaul4,	vBaul5,	vBaul6,	vBaul7,	vBaul8,vBaul9,vBaul10,	vPJ,	vpatente[10],	vComponentes0,	vComponentes1,	vComponentes2,	vComponentes3,	vComponentes4,	vComponentes5,vComponentes6,	vComponentes7,	vComponentes8,	vComponentes9,	vComponentes10,	vComponentes11,	vComponentes12,	vComponentes13,	vPrecio,	vTraba,	Float:vX,	Float:vY,	Float:vZ,	Float:vA,	vOvw,	vSeguro,	vOinterior,	Float:pOX2,	Float:pOY2,
	Float:pOZ2,	Float:pOA2,	V2E1,	V2E2,	V2E3,	V2E4,	v2Monedaa,	vModelo2,	v2Gas,	v2interior,	v2vw,	v2Color1,	v2Color2,	Float:pVidaV2,	v2Baul,	v2Baul2,	v2Baul3,	v2Baul4,	v2Baul5,	v2Baul6,	v2Baul7,	v2Baul8,	vPJ2,	v2patente[10],	v2Componentes0,	v2Componentes1,	v2Componentes2,	v2Componentes3,	v2Componentes4,	v2Componentes5,	v2Componentes6,	v2Componentes7,	v2Componentes8,	v2Componentes9,	v2Componentes10,	v2Componentes11,
	v2Componentes12,	v2Componentes13,	v2Precio,	v2Traba,	Float:v2X,	Float:v2Y,	Float:v2Z,	Float:v2A,	v2Ovw,	vSeguro2,	v2Ointerior,	Float:pOX3,	Float:pOY3,	Float:pOZ3,	Float:pOA3,	V3E1,	V3E2,	V3E3,	V3E4,	v3Monedaa,	vModelo3,	v3Gas,	v3interior,	v3vw,	v3Color1,	v3Color2,	Float:pVidaV3,	v3Baul,	v3Baul2,	v3Baul3,	v3Baul4,	v3Baul5,	v3Baul6,	v3Baul7,	v3Baul8,	vPJ3,	v3patente[10],	v3Componentes0,	v3Componentes1,
	v3Componentes2,	v3Componentes3,	v3Componentes4,	v3Componentes5,	v3Componentes6,	v3Componentes7,	v3Componentes8,	v3Componentes9,	v3Componentes10,	v3Componentes11,	v3Componentes12,	v3Componentes13,	v3Precio,	v3Traba,	Float:v3X,	Float:v3Y,	Float:v3Z,	Float:v3A,	v3Ovw,	vSeguro3,	v3Ointerior,	Float:pOX4,	Float:pOY4,	Float:pOZ4,	Float:pOA4,	V4E1,	V4E2,	V4E3,	V4E4,	v4Monedaa,	vModelo4,	v4Gas,	v4interior,	v4vw,	v4Color1,	v4Color2,
	Float:pVidaV4,	v4Baul,	v4Baul2,	v4Baul3,	v4Baul4,	v4Baul5,	v4Baul6,	v4Baul7,	v4Baul8,	vPJ4,	v4patente[10],	v4Componentes0,	v4Componentes1,	v4Componentes2,	v4Componentes3,	v4Componentes4,	v4Componentes5,	v4Componentes6,	v4Componentes7,	v4Componentes8,	v4Componentes9,	v4Componentes10,	v4Componentes11,	v4Componentes12,	v4Componentes13,	v4Precio,	v4Traba,	Float:v4X,	Float:v4Y,	Float:v4Z,	Float:v4A,	v4Ovw,	vSeguro4,
	v4Ointerior,	jRegalo,	Email[30],	CodigoEmail[10],	EstadoCorreo,	PuedeCambiar,	pEmail[52],	vAlarma,	v2Alarma,	v3Alarma,	v4Alarma,	vAAlarma,	vAAlarma2,	vAAlarma3,	vAAlarma4, BaneosD, BaneosD2,
    v2Baul9,v2Baul10,v3Baul9,v3Baul10,v4Baul9,v4Baul10,pMapper, PuestosConseguidos, pBloqueado
};

new PlayerInfo[MAX_PLAYERS][jInfo];
enum eInfo
{
	IdMision,
	IdCriminal,
	IdColega,
	NumeroMision,
	Actor1,
	Objetivo,
	Actor2,
	SegundosMision,
	ObjetivoTake,
	Bajas,
	Tiene9mm,
	MisionActiva
}
new Encargo[MAX_ENCARGOS][eInfo];

/*enum Temporal
{
	@TemporalWeapon
}
new PlayerTemp[MAX_PLAYERS][Temporal];*/

enum _:E_ADMIN_LEVELS
{
	ADMIN_LEVEL_USER,
	ADMIN_LEVEL_AYUDANTE,
	ADMIN_LEVEL_DUDAS,
	ADMIN_LEVEL_BANEOS,
	ADMIN_LEVEL_SANCIONES,
	ADMIN_LEVEL_TECNICO,
	ADMIN_LEVEL_GLOBAL,
	ADMIN_LEVEL_ADM_TEMP,
	ADMIN_LEVEL_ADM
}

new const ADMIN_RANKS[][] =
{
	"Usuario",
	"Ayudante",
	"Moderador",
	"Moderador",
	"Moderador",
	"Moderador",
	"Moderador",
	"ADM",
	"Dueño"
};

enum dInfo
{
	dName[128],
	dPickup,
	dPickupModel,
	Float: dEnterX,
	Float: dEnterY,
	Float: dEnterZ,
	Float: dExitX,
	Float: dExitY,
	Float: dExitZ,
	Text3D: dLabel,
	dInt,
	dExitVW,
	dExitInt,
	dEnterVW,
	dEnterInt
}
new DoorInfoNormal[MAX_DOORS][dInfo];

enum dInfo2
{
	dName[128],
	dPickup,
	dPickupModel,
	Float: dEnterX,
	Float: dEnterY,
	Float: dEnterZ,
	Float: dExitX,
	Float: dExitY,
	Float: dExitZ,
	Text3D: dLabel,
	dInt,
	dExitVW,
	dExitInt,
	dEnterVW,
	dEnterInt
}
new DoorInfoGobierno[MAX_GOBIERNO][dInfo2];

enum dInfo3
{
	dName[128],
	dPickup,
	dPickupModel,
	Float: dEnterX,
	Float: dEnterY,
	Float: dEnterZ,
	Float: dExitX,
	Float: dExitY,
	Float: dExitZ,
	Text3D: dLabel,
	dInt,
	dExitVW,
	dExitInt,
	dEnterVW,
	dEnterInt
}
new DoorInfoFranquicia[MAX_FRANQUICIA][dInfo3];

enum dInfo4
{
	dName[128],
	dPickup,
	dPickupModel,
	Float: dEnterX,
	Float: dEnterY,
	Float: dEnterZ,
	Float: dExitX,
	Float: dExitY,
	Float: dExitZ,
	Text3D: dLabel,
	dInt,
	dExitVW,
	dExitInt,
	dEnterVW,
	dEnterInt
}
new DoorInfoNormalY[MAX_DOORSY][dInfo4];

enum FabricasMeta
{
    pMapIcon,
    pLocalizacion[80],
	pID,
	Float:pEntradaX,
	Float:pEntradaY,
	Float:pEntradaZ,
	Float:pSalidaX,
	Float:pSalidaY,
	Float:pSalidaZ,
	Float:pEntradaA,
	Float:pEntradaGX,
	Float:pEntradaGY,
	Float:pEntradaGZ,
	Float:pEntradaGA,
	pTanqueUno,
	pTanqueDos,
	pTanqueTres,
	pTanqueCuatro,
	pTanqueCinco,
	pTanqueSeis,
	pTanqueSiete,
	pTanqueOcho,
	pTanqueNueve,
	Float:pSalidaGX,
	Float:pSalidaGY,
	Float:pSalidaGZ,
	Almacen1,
	Almacen2,
	Almacen3,
	Almacen4,
	Almacen5,
	Almacen6,
	Almacen7,
	Almacen8,
	Almacen9,
	Almacen10,
	pCantidadDinero,
	pCantidadBolsas,
	pRecortada,
	pSniper,
	pUzi,
	pTec9,
	pSoborno,
	pBanda,
	pVW,
	pInt,
	pChalecos,
	pEnVenta,
	Text3D:pLabel,
	Text3D:pLabel2,
	Text3D:pLabel3,
	Text3D:pLabel4,
	Text3D:pLabel5,
	Text3D:Cocinero1,
	Text3D:Cocinero2,
	Text3D:Cocinero3,
	Text3D:Cocinero4,
	Text3D:Cocinero5,
	pEnVentaPor,
	pPickup,
	pValor,
	pEnUso,
	Text3D:LTanque1,
	Text3D:LTanque2,
	Text3D:LTanque3,
	Text3D:LTanque4,
	Text3D:LTanque5,
	Text3D:LTanque6,
	Text3D:LTanque7,
	Text3D:LTanque8,
	Text3D:LTanque9,
	Text3D:olla1,
	Text3D:olla2,
	Text3D:olla3,
	pPuerta,
	tMoney,
 	MedicoContratado,
	ActorMedico,
	humo1,
 	humo2,
 	humo3,
	Crisol1,
	Crisol2,
	Crisol3,
	tiempoh1,
	tiempoh2,
	tiempoh3,
	tiempoc1,
	tiempoc2,
	tiempoc3,
	tiempoc4,
	tiempoc5,
	Porcentaje1,
	Porcentaje2,
	Porcentaje3,
	Auto1F,
	Auto2F,
	Bolso[32],
	Chalecos[32],
	FechaPaga,
	bolsospagados,
	PagarActiva,
	Meta1[2],
	Meta2[2],
	Meta3[2],
	Meta4[2],
	Meta5[2],
	Meta6[2],
	Meta7[2],
	Meta8[2],
	Meta9[2],
	Meta10[2],
	EscoObjetos[10],
	SniperObjetos[10],
	Tec9Objetos[10],
	UziObjetos[10],
	PorcentajeCocinero1,
	PorcentajeCocinero2,
	PorcentajeCocinero3,
	PorcentajeCocinero4,
	PorcentajeCocinero5,
	StatoCuoco1,
	StatoCuoco2,
	StatoCuoco3,
	StatoCuoco4,
	StatoCuoco5,
	ActorCocinero1,
	ActorCocinero2,
	ActorCocinero3,
	ActorCocinero4,
	ActorCocinero5,
	TieneCocinero1,
	TieneCocinero2,
	TieneCocinero3,
	TieneCocinero4,
	TieneCocinero5,
	Bloque1,
	Bloque2,
	Bloque3,
	Bloque4,
	Bloque5,
	Termino1,
	Termino2,
	Termino3,
	Termino4,
	Termino5,
	EstadoMedico,
	EstadoG1,
	EstadoG2,
	EstadoG3,
	EstadoCoc1,
	EstadoCoc2,
	EstadoCoc3,
	EstadoCoc4,
	EstadoCoc5,
	TieneGuardia1,
	TieneGuardia2,
	TieneGuardia3,
	TieneGuardia4,
	TieneGuardia5,
	ActorGuardia1,
	ActorGuardia2,
	ActorGuardia3,
	ActorGuardia4,
	ActorGuardia5
};
new Fabricas[MAX_FABRICAS][FabricasMeta];

enum Propiedades
{
	pIDPropietario,
	pGanancias,
	pVW,
	pEnVenta,
	pEnVentaPor,
	pPrecio,
	pNivel,
	Float:pPosX,
	Float:pPosY,
	Float:pPosZ,
	Float:pPosXS,
	Float:pPosYS,
	Float:pPosZS,
	Float:pPosA,
	Float:pPosAS,
	pEnUso,
	pTipo,
	pID,
	Float:pRoperoX,
	Float:pRoperoY,
	Float:pRoperoZ,
	pRoperoAbierto,
	pAK47,
	pM4,
	pEscopetaNormal,
	pEscopetaDeCombate,
	pMP5,
	p9mm,
	p9mmSilenciada,
	pDesertEagle,
	pRifle,
	pGranada,
	pManopla,
    pPaloDeBillar,
	pCuchillo,
	pKatana,
	pPaloDeGolf,
	pBateDeBeisbol,
	pConsoladorRosa,
	pVibradorBlanco,
	pGranVibradorBlanco,
	pVibradorPlateado,
	pBaston,
	pPala,
	pFlores,
	pCamara,
	pMedicamentos,
	pMarihuana,
	pCrack,
	pLugarRopero,
	Float:pGX,
	Float:pGY,
	Float:pGZ,
	Float:pGA,
	Text3D:pLabel,
	Text3D:pLabel2,
	Text3D:pLabel3,
	Text3D:pLabel4,
	Text3D:pLabel5,
	Text3D:pLabel6,
	Text3D:ArmasF,
	pPickup,
	pPropietario[40],
	pInterior,
	pInteriorID,
	pAbierta,
	pLugarHeladera,
	pSprunk,
	pCerveza,
	pAquarius,
	pPizzas,
	pVino,
	Float:pHeladeraX,
	Float:pHeladeraY,
	Float:pHeladeraZ,
	pCobro,
	pLocalizacion[80],
	Amater
};
new PropInfo[MAX_PROPIEDADES][Propiedades];

enum Estacionamientos
{
	pIDPropietario,
	pGanancias,
	pVW,
	pEnVenta,
	pEnVentaPor,
	pPrecio,
	pNivel,
	Float:pPosX,
	Float:pPosY,
	Float:pPosZ,
	Float:pPosXS,
	Float:pPosYS,
	Float:pPosZS,
	Float:pPosA,
	Float:pPosAS,
	pEnUso,
	pTipo,
	pID,
	Text3D:pLabel,
	Text3D:pLabel2,
	Text3D:pLabel3,
	Text3D:pLabel4,
	Text3D:pLabel5,
	pPickup,
	pPropietario[40],
	pInterior,
	pInteriorID,
	pAbierta,
	pCobro,
	pLocalizacion[80]
};
new EstaInfo[MAX_GARAGES][Estacionamientos];

enum AQ
{
	qID,
	qfaccj,
	quser_ses[24],
	qjugname[24],
	qparams[24],
	NRango,
	qstatus
};
new ActionQueue[50][AQ];

enum EmiInfo
{
	TieneEmisora,
	EmisoraID,
	NombreEmisora[90],
	URLEmisora[128],
	TransEmisora,
	CabinaOcupada,
}
new Emisoras[MAX_PLAYERS][EmiInfo];

enum reportinfo
{
	HasBeenUsed,
	Report[128],
	ReportFrom,
	CheckingReport,
	BeingUsed,
	ReportadoID
}
new Reports[MAX_REPORTS][reportinfo];

enum Spikes
{
	Float:sX,
	Float:sY,
	Float:sZ,
	sObjectID,
	sDeployedBy[MAX_PLAYER_NAME],
	sDeployedAt[MAX_ZONE_NAME]
}
new SpikeStrips[20][Spikes];

enum VI
{
	vpropietario,
	vprecio,
	vmodelo,
	Float:vx,
	Float:vy,
	Float:vz,
	Float:va,
	vmoneda,
	vcolor1,
	vcolor2,
	vcomprable,
	vfaccion,
	vtrabajo,
	vID
};
new VehiculosInfo[MAX_VEHICLES][VI];

//===================================    FORWARD'S     ==================================//
forward CosechasPoints(playerid);
forward RutaCosechador(playerid);
forward RutraTransportista(playerid);
forward LoadPerfiles(playerid);
forward ReanimarMedico(playerid,ID);
forward CargarPerfiles(resultid,extraid,ConnectionHandle);
forward ResetAlerta(playerid);
forward OcultarMensajeAlerta(playerid);
forward CreateIconsGPS();
forward CargarAsalto();
forward BorrarStatsFabrica(f);
forward AbrirBoveda();
forward MandarMafiosos();
forward Veaemboscada();
forward EntregaElCamion();
forward ColocarC4();
forward VerificarMision();
forward MandarSoli();
forward EmpezarMision2();
forward EmpezarMision3();
forward FadeOut(playerid);
forward EmpezarMision();
forward ReproducirHalloween(playerid);
forward Reproducir_Robo(playerid);
forward GetOnlinePlayers();
forward ActualizarLabelArmas(f);
forward CargarCajasFabrica(id);
forward Forzado(playerid);
forward Forzado2(playerid);
forward Forzado3(playerid);
forward Forzado4(playerid);
forward Forzado5(playerid);
forward Forzado6(playerid);
forward Forzado7(playerid);
forward Forzado8(playerid);
forward Forzado9(playerid);
forward Forzado10(playerid);
forward Forzado11(playerid);
forward Forzado12(playerid);
forward MandarMensajeTransportistas(playerid);
forward LoadBarrelMeta(id);
forward PagarSobornoFabricas();
forward MovimientosTiburon();
forward MovimientosTiburon2();
forward MostrarBoxMedico(playerid);
forward DestruirDineroColegiala(dinero);
forward ResetCars();
forward Reportado1quit(playerid);
forward Reportado2quit(playerid);
forward Reportado3quit(playerid);
forward Reportado4quit(playerid);
forward Reportado5quit(playerid);
forward QuitarPrendass(playerid);
forward CargarBots();
forward AcomodarPrendass(playerid);
forward ResetAvion();
forward TiempoPlane(playerid);
forward EventoOff(playerid);
forward EstadoRobo(playerid);
forward MusicaEventos();
forward GuardarCuentasAT();
forward NavidadActiva();
forward CerrarServidor();
forward Reinicio(Tiempo);
forward Conteo(Tiempo);
forward ReloadBandas();
forward AntiClones();
forward CheckAutos(playerid);
forward DarSlap(playerid);
forward DanoFabrica(playerid);
forward CurandoHospital(playerid);
forward ActivarTimerCH(playerid);
forward NoVerBaul(playerid);
forward DescongelarCBUG(playerid);
forward Robo2(playerid);
forward VerAuto(playerid);
forward MostrarLuegoDe(playerid);
forward LlevarClub(playerid);
forward SacarClub(playerid);
forward Bailarina1Off();
forward Bailarina2Off();
forward Bailarina3Off();
forward Bailarina4Off();
forward Bailarina5Off();
forward Bailarina6Off();
forward OcultarLuegoDe(playerid);
forward LimpiarSombrero(playerid);
forward pVomitar(playerid);
forward MostrarAfinidad(playerid);
forward OcultarAfinidad(playerid);
forward cargarhora();
forward QuitandoA(playerid);
forward Revisado(playerid,id);
forward QuitarReporte(playerid);
forward Entrandos(playerid);
forward CerrarPuerta();
forward CerrarPuerta2();
forward CerrarPuerta3();
forward CerrarPuerta4();
forward CerrarPuerta5();
forward CerrarPuerta6();
forward CerrarPuerta7();
forward CerrarPuerta8();
forward CerrarPuerta9();
forward CerrarPuerta10();
forward CerrarPuerta11();
forward CerrarPuerta12();
forward ColgarLlamada(playerid);
forward CurarON(playerid);
forward PrimerP(playerid);
forward CargarCasa1();
forward CargarCasa2();
forward CargarCasa3();
forward CargarCasa4();
forward CargarCasa5();
forward CargarCasa6();
forward CargarCasa7();
forward CargarCasa9();
forward CargarCasa11();
forward CargarCasa12();
forward CargarCasa8();
forward CargarCasa10();
forward BajarCargo(playerid);
forward AdvertGolpes(playerid);
forward Advert(playerid);
forward Aviso(playerid);
forward Aviso2(playerid);
forward Aviso3(playerid);
forward Aviso4(playerid);
forward Reparando2(playerid);
forward Reparando(vehicleid);
forward Taximetro(playerid);
forward PuntoB(playerid);
forward Baul1(playerid);
forward Baul2(playerid);
forward Baul3(playerid);
forward Baul4(playerid);
forward LlamadaCops(playerid);
forward LlamadaGrua(playerid);
forward ServicioGrua1(playerid);
forward ServicioGrua2(playerid);
forward CheckVIP(playerid);
forward Recolectar(playerid);
forward DarGasolina(autoid, petroleo);
forward DarGasolinaBarra(playerid, petroleo);
forward Maneja(playerid);
forward TiempoCreacionArma(playerid);
forward Auto1(playerid);
forward Auto2(playerid);
forward Auto3(playerid);
forward Auto4(playerid);
forward DArmas(playerid);
forward CheckAuto(playerid);
forward LlamadaAceptada(playerid);
forward LlamadaCancelada(playerid);
forward RutaTransportista(playerid);
forward OfertaPerdida(playerid);
forward TiempoVender(playerid);
forward Autos(playerid);
forward ConsumirMa(playerid);
forward SalonTimer();
forward CustomProc(cmd[]);
forward TimerPlantas();
forward TimerVelocimetro();
forward CrearPlanta2(playerid);
forward CrearPlanta(playerid, Float:X, Float:Y, Float:Z);
forward LlenarBalde(playerid);
forward CargarMarihuana(i);
forward CargarPlantasQuery(resultid, extraid, ConnectionHandle);
forward CargarPlantas();
forward CargarPropiedades();
forward CargarFabricasMeta();
forward CargarEstacionamientos();
forward CargarGarages();
forward CargarFabricas();
forward CargarCasas();
forward HacerQueHableI();
forward HacerQueHableMo();
forward HacerQueHableJe();
forward HacerQueHableAg();
forward HacerQueHableHp();
forward HacerQueHableH();
forward HacerQueHableA();
forward HacerQueHableM();
forward AbrirRejasxd();
forward TimerFC3();
forward TimerFC2();
forward TimerFC();
forward ConteoCarrera3();
forward ConteoCarrera2();
forward CerrarCamion();
forward EmpezarCarrera();
forward bool:Buscar(const search[], const find[]);
forward SetPlayerStats(playerid);
forward TimerGPS();
forward CerrarBlindado();
forward QuitarMovimiento(playerid);
forward MoverAlerta4(playerid);
forward MoverAlerta3(playerid);
forward MoverAlerta2(playerid);
forward MoverAlerta1(playerid);
forward MoverAlerta(playerid);
forward TimeMiner(playerid);
forward finllamadax(playerid);
forward finllamada(playerid);
forward llamada2(playerid);
forward llamada(playerid);
forward CancelarTaxi(playerid);
forward CancelarMedi(playerid);
forward CancelarMeca(playerid);
forward modificarpunto(playerid);
forward modificarpuntotren(playerid);
forward LanzarArpon3(playerid);
forward LanzarArpon2(playerid);
forward LanzarArpon1(playerid);
forward SacarAyudaComandos(playerid);
forward MostrarAyudaComandos(playerid);
forward MostrarInfoVehiculo(playerid);
forward DarNecesidadVIP();
forward DarNecesidadNormal();
forward MostrarMapas(playerid);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
forward ApareceHospital2(playerid);
forward ColorJugadorDefault(playerid);
forward ComprobarDanoMotor(playerid);
forward ApagarMotor(playerid);
forward Estacionando(playerid);
forward EncenderMotor(playerid);
forward SinGasolina(playerid);
forward Logeado2(playerid);
forward Logeado(playerid);
forward SaveAccount(playerid);
forward CerrarAviso(playerid);
forward ClearAnim(playerid);
forward BorrarDinero(id);
forward TextoCombate(playerid);
forward CargarUsers();
forward CargarFacciones();
forward CargarMapeos();
forward CargarVehiculos();
forward CheckPlayer(playerid);
forward DesCargarMapeosEx(playerid);
forward TiempoArresto(playerid);
forward ADOn(playerid);
forward DudaOn(playerid);
forward VehiculosPos();
forward TiempoServerDos();
forward AntiSpeedHack();
forward ServerMicrobeat();
forward AntiMoneyHack(playerid);
forward Codigos();
forward Gasolinass();
forward AutoCheats2();
forward Action_DBQ();
forward RecibirAction(resultid, extraid, ConnectionHandle);
forward AutoCheats();
forward LlamadaTransportista();
forward resetearcoches();
forward Armas();
forward BajarTiempos();
forward TimerCriminal();
forward HablarLoro();
forward Curar();
forward BajarTiempoAgresor();
forward Horno3(f);
forward Horno2(f);
forward Horno1(f);
forward JobCocinero5(f);
forward JobCocinero4(f);
forward JobCocinero3(f);
forward JobCocinero2(f);
forward JobCocinero1(f);
forward RestaTiempo();
forward CheatArmas();
forward PayDay();
forward PayDay2();
forward ShowStats(playerid,targetid);
forward cargartodo();
forward Anticheats();
forward gaviotas();
forward RevisarAvion();
forward CargarRegistros(resultid, extraid, ConnectionHandle);
forward CargarBandas();
forward cargarprendas(resultid, extraid, ConnectionHandle);
forward L_Vehicles(resultid, extraid, ConnectionHandle);
forward cargar_logros(resultid, extraid, ConnectionHandle);
forward CargarAutos(resultid, extraid, ConnectionHandle);
forward OnQueryFinish(resultid, extraid, ConnectionHandle);
forward Encerrando2(playerid);
forward Encerrando(playerid);
forward EnviarJail(playerid);
forward TiempoJail(playerid);
forward QuitarDinero(playerid,cantidad);
forward DarDinero(playerid,cantidad);
forward DarDineroLogin(playerid);
forward DarGas();
forward BajarCuentaDinero();
forward RestaVida();
forward StopCell(playerid);
forward OcultarAnim(playerid);
forward EnviarAuto4(playerid);
forward EnviarAuto3(playerid);
forward EnviarAuto2(playerid);
forward EnviarAuto(playerid);
forward Descongelar(playerid);
forward QuitarLogro(playerid);
forward RevisarLogroPropiedad(playerid, propiedad);
forward RevisarLogroPesca(playerid, peso, tortuga);
forward RevisarLogroNivel(playerid);
forward RevisarLogroAuto(playerid);
forward RevisarLogroLadron(playerid);
forward RevisarLogroCrack(playerid);
forward RevisarLogroRemedio(playerid);
forward RevisarLogroMedico(playerid);
forward RevisarLogroCarrera(playerid);
forward RevisarLogroPorro(playerid);
forward RevisarLogroTrucoTrato(playerid);
forward RevisarLogroDescartable(playerid);
forward RevisarLogroCerveza(playerid);
forward RevisarLogroAfinidad(playerid);
forward RevisarLogroCosecha(playerid);
forward DescargandoCamion(playerid);
forward Ilegal5(playerid);
forward Ilegal4(playerid);
forward Ilegal3(playerid);
forward Ilegal2(playerid);
forward Ilegal1(playerid);
forward Legal5(playerid);
forward Legal4(playerid);
forward Legal3(playerid);
forward Legal2(playerid);
forward Legal1(playerid);
forward TiempoBaulBar(playerid);
forward TPV(vehicleid);
forward RespawnearVF2(vehicleid);
forward RespawnearVF(vehicleid);
forward RespawnearV(vehicleid);
forward Consumiendo(playerid);
forward ConsumirM(playerid);
forward ConsumirC(playerid);
forward ConsumirCaramelosx(playerid);
forward EncerrandoNombre(playerid,i);
forward TimerLogin(playerid);

//====================================    STOCKS     ====================================//

stock IsCorrectMail(mail[])
{
	new len = strlen(mail), bool:find[2], w;
 	if(!(6 < len < 129)) return 0;
  	for(new l; l < len; l++)
  	{
   		if(mail[l] == '.') find[0] = true;
     	if(mail[l] == '@')
      	{
       		if(find[1]) return 0;
         	find[1] = true;
          	w = l;
           	if(w > 64) return 0;
       	}
        if(!(mail[l] >= 'A' && mail[l] <= 'Z' || mail[l] >= 'a' && mail[l] <= 'z' || mail[l] >= '0' && mail[l] <= '9' || mail[l] == '.' || mail[l] == '-' || mail[l] == '_' || mail[l] == '@')) return 0;
   	}
    if(len - w > 65) return 0;
    if(!find[0] || !find[1]) return 0;
    return 1;
}

stock TimeConvert(seconds)
{
	new tmp[16];
	new minutes = floatround(seconds/60);
	seconds -= minutes*60;
	format(tmp, sizeof(tmp), "%dm %ds", minutes, seconds);
	return tmp;
}

stock TieneTrabajo(playerid, trabajo)
{
	return (PlayerInfo[playerid][pTrabajo] == trabajo || Player.Info[playerid][pTrabajo2] == trabajo);
}

stock IsPlayerUsingDB(playerid,bool:withsomeone = false)
{
	if(GetPlayerState(playerid) != PLAYER_STATE_PASSENGER) return 0;
	new bool:hassomeone = false;
	if(withsomeone)
	{
		new v = GetPlayerVehicleID(playerid);
		for(new i = 0; i < MAX_PLAYERS && !hassomeone; i++) if(IsPlayerConnected(i) && IsPlayerInVehicle(i,v) && GetPlayerState(i) == PLAYER_STATE_DRIVER) hassomeone = true;
	}
	return (!withsomeone || (withsomeone && hassomeone));
}

stock GetPosBehindVehicle(vehicleid, &Float:x, &Float:y, &Float:z, Float:offset=0.5)
{
    new Float:vehicleSize[3], Float:vehiclePos[3];
    GetVehiclePos(vehicleid, vehiclePos[0], vehiclePos[1], vehiclePos[2]);
    GetVehicleModelInfo(GetVehicleModel(vehicleid), VEHICLE_MODEL_INFO_SIZE, vehicleSize[0], vehicleSize[1], vehicleSize[2]);
    GetXYBehindVehicle(vehicleid, vehiclePos[0], vehiclePos[1], (vehicleSize[1]/2)+offset);
    x = vehiclePos[0];
    y = vehiclePos[1];
    z = vehiclePos[2];
    return 1;
}

GetXYBehindVehicle(vehicleid, &Float:q, &Float:w, Float:distance)
{
    new Float:a;
    GetVehiclePos(vehicleid, q, w, a);
    GetVehicleZAngle(vehicleid, a);
    q += (distance * -floatsin(-a, degrees));
    w += (distance * -floatcos(-a, degrees));
}

stock PagarCosechador(playerid)
{
    new TypePay = random(3),string[128],object[64],Medicina = random(10);
    new coco = 369 + random(150),Objetox = random(20);
    Cosechas[playerid][ProgresoCosecha] = 0;
    switch(Cosechas[playerid][CosechaLugar])
    {
        case 1:
        {
        	switch(TypePay)
			{
				case 0:
				{
					format(string,sizeof(string),"{00CC00}¡Excelente cosecha!{FFFFFF} Tus ganancias son {00CC00}$%d{FFFFFF}.",coco);
				    SendClientMessage(playerid,-1,string);
					HidePlayerProgressBar(playerid, Progressbar[playerid][Cosecha]);
				    DarDinero(playerid,coco);
				    SetTimerEx("RespawnearV",2000,false,"d",GetPlayerVehicleID(playerid));
				    Cosechas[playerid][CosechaLugar] = 0;
				    Cosechas[playerid][ProgresoCosecha] = 0;
				    Cosechas[playerid][RutaCosecha] = 0;
				}
				case 1:
				{
				    switch(Objetox)
				    {
				        case 0: { format(object,sizeof(object),"un cuchillo"); DarArma(playerid, 4); }
				        case 1: { format(object,sizeof(object),"un ramo de flores"); DarArma(playerid, 14); }
				        case 2: { format(object,sizeof(object),"un cuchillo"); DarArma(playerid, 4); }
				        default:{ format(object,sizeof(object),"un ramo de flores"); DarArma(playerid, 14); }
                    }
					format(string,256,"{00CC00}¡Excelente cosecha!{FFFFFF} Tus ganancias son {00CC00}$%d {FFFFFF}y {00CC00}%s{FFFFFF}.",coco,object);
					SendClientMessage(playerid,-1,string);
					HidePlayerProgressBar(playerid, Progressbar[playerid][Cosecha]);
				    DarDinero(playerid,coco);
				    SetTimerEx("RespawnearV",2000,false,"d",GetPlayerVehicleID(playerid));
				    Cosechas[playerid][CosechaLugar] = 0;
				    Cosechas[playerid][ProgresoCosecha] = 0;
				    Cosechas[playerid][RutaCosecha] = 0;
				}
				case 2:
				{
				    switch(Medicina)
				    {
				        case 0: { format(object,sizeof(object),"2g de crack"); PlayerInfo[playerid][pCrack] += 2; }
				        case 1: { format(object,sizeof(object),"2 medicamentos"); PlayerInfo[playerid][pRemedios] += 2; }
				        default:{ format(object,sizeof(object),"2 medicamentos"); PlayerInfo[playerid][pRemedios] += 2; }
                    }
					format(string,256,"{00CC00}¡Excelente cosecha!{FFFFFF} Tus ganancias son {00CC00}$%d {FFFFFF}y {00CC00}%s{FFFFFF}.",coco,object);
		  			SendClientMessage(playerid,-1,string);
		  			HidePlayerProgressBar(playerid, Progressbar[playerid][Cosecha]);
				    DarDinero(playerid,coco);
				    SetTimerEx("RespawnearV",2000,false,"d",GetPlayerVehicleID(playerid));
				    Cosechas[playerid][CosechaLugar] = 0;
				    Cosechas[playerid][ProgresoCosecha] = 0;
				    Cosechas[playerid][RutaCosecha] = 0;
				}
			}
        }
 		case 2:
		{
            switch(TypePay)
			{
				case 0:
				{
					format(string,sizeof(string),"{00CC00}¡Excelente cosecha!{FFFFFF} Tus ganancias son {00CC00}$%d{FFFFFF}.",coco);
				    SendClientMessage(playerid,-1,string);
					HidePlayerProgressBar(playerid, Progressbar[playerid][Cosecha]);
				    DarDinero(playerid,coco);
				    SetTimerEx("RespawnearV",2000,false,"d",GetPlayerVehicleID(playerid));
				    Cosechas[playerid][CosechaLugar] = 0;
				    Cosechas[playerid][ProgresoCosecha] = 0;
				    Cosechas[playerid][RutaCosecha] = 0;
				}
				case 1:
				{
				    switch(Objetox)
				    {
				        case 0: { format(object,sizeof(object),"un ramo de flores"); DarArma(playerid, 14); }
				        case 1: { format(object,sizeof(object),"una pala"); DarArma(playerid, 6); }
				        default:{ format(object,sizeof(object),"un ramo de flores"); DarArma(playerid, 14); }
                    }
					format(string,256,"{00CC00}¡Excelente cosecha!{FFFFFF} Tus ganancias son {00CC00}$%d {FFFFFF}y {00CC00}%s{FFFFFF}.",coco,object);
					SendClientMessage(playerid,-1,string);
					HidePlayerProgressBar(playerid, Progressbar[playerid][Cosecha]);
				    DarDinero(playerid,coco);
				    SetTimerEx("RespawnearV",2000,false,"d",GetPlayerVehicleID(playerid));
				    Cosechas[playerid][CosechaLugar] = 0;
				    Cosechas[playerid][ProgresoCosecha] = 0;
				    Cosechas[playerid][RutaCosecha] = 0;
				}
				case 2:
				{
				    switch(Medicina)
				    {
				        case 0: { format(object,sizeof(object),"2g de crack"); PlayerInfo[playerid][pCrack] += 2; }
				        case 1: { format(object,sizeof(object),"2 medicamentos"); PlayerInfo[playerid][pRemedios] += 2; }
				        default:{ format(object,sizeof(object),"2 medicamentos"); PlayerInfo[playerid][pRemedios] += 2; }
                    }
					format(string,256,"{00CC00}¡Excelente cosecha!{FFFFFF} Tus ganancias son {00CC00}$%d {FFFFFF}y {00CC00}%s{FFFFFF}.",coco,object);
		  			SendClientMessage(playerid,-1,string);
		  			HidePlayerProgressBar(playerid, Progressbar[playerid][Cosecha]);
				    DarDinero(playerid,coco);
				    SetTimerEx("RespawnearV",2000,false,"d",GetPlayerVehicleID(playerid));
				    Cosechas[playerid][CosechaLugar] = 0;
				    Cosechas[playerid][ProgresoCosecha] = 0;
				    Cosechas[playerid][RutaCosecha] = 0;
				}
			}
		}
	}
	RemovePlayerFromVehicle(playerid);
	DisablePlayerRaceCheckpoint(playerid);
    return 1;
}

stock GetWeaponSlot(wid)
{
	switch(wid)
    {
    	case 0, 1: return 0;
        case 2..9: return 1;
        case 22..24: return 2;
        case 25..27: return 3;
        case 28, 29, 32: return 4;
        case 30, 31: return 5;
        case 33, 34: return 6;
        case 35..38: return 7;
        case 16..19, 39: return 8;
        case 41..43: return 9;
        case 10..15: return 10;
        case 44..46: return 11;
        case 40: return 12;
        default: return -1;
	}
    return -1;
}
stock MensajeBaulSacar(playerid,a)
{
	if(a == 1210 ||a == 1000 || a == 1001 || a == 1002 || a == 1429 || a == 1518 || a == 2912 || a == 2190 || a == 1788 || a == 1790 || a == 2028 || a == 2226 || a == 1650 || a == 10004 || a == 9003 || a == 10000 || a == 10001 || a == 10002 || a == 10003 || a == 9003)
    {
        AccionesRol(playerid, "toma un objeto de su maletero.", 20);
    	Objeto[playerid] = a;
		switch(a)
		{
		    case 1000:  SetPlayerAttachedObject(playerid, 2, 2060,  6, 0.265999,0.002999,0.034000,107.000038,178.100204,175.399856,0.388000,0.463999,0.587999);
		    case 1001:  SetPlayerAttachedObject(playerid, 2, 3800,  6, 0.262000,0.070999,0.021000,106.599998,-1.999999,171.599975,0.372999,0.239999,0.166000);
		    case 1002:  SetPlayerAttachedObject(playerid, 2, 2900,  6, 0.256000,0.074999,0.019000,94.400001,0.000000,1.300018,0.376999,0.207000,0.164999);
		    case 1429:  SetPlayerAttachedObject(playerid, 2, 1429,  5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 );
		    case 1518:  SetPlayerAttachedObject(playerid, 2, 1518,  5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 );
		    case 2912:  SetPlayerAttachedObject(playerid, 2, 2912,  5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 );
		    case 2190:  SetPlayerAttachedObject(playerid, 2, 2190,  5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 );
		    case 1788:  SetPlayerAttachedObject(playerid, 2, 1788,  5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 );
		    case 1790:  SetPlayerAttachedObject(playerid, 2, 1790,  5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 );
		    case 2028:  SetPlayerAttachedObject(playerid, 2, 2028,  5, -0.025814, 0.044218, 0.205650, 283.869171, 351.121704, 2.281757, 1.000000, 1.000000, 1.000000 );
		    case 2226:  SetPlayerAttachedObject(playerid, 2, 2226,  5, -0.025814, 0.044218, 0.205650, 283.869171, 351.121704, 2.281757, 1.000000, 1.000000, 1.000000 );
		    case 1650:  SetPlayerAttachedObject(playerid, 2, 1650,  5, 0.125999,0.011999,0.000000,-4.999999,-98.099983,16.600004,1.000000,1.000000,1.000000);
		    case 10004: SetPlayerAttachedObject(playerid, 2, 19571, 6, 0.263000,0.039999,-0.141999,116.299987,-76.799858,136.799835,0.800998,1.016000,0.866998);
		    case 9003:  SetPlayerAttachedObject(playerid, 2, 19468, 5, 0.126999,-0.089000,0.127998,101.199981,-164.499847,82.999900,1.032001,0.972000,1.002997);
		    case 10000: SetPlayerAttachedObject(playerid, 2, 2969,  6, 0.137999,0.039999,-0.168998,66.699996,-162.999877,-95.900085,0.533998,0.622999,0.756998);
		    case 10001: SetPlayerAttachedObject(playerid, 2, 2969,  6, 0.137999,0.039999,-0.168998,66.699996,-162.999877,-95.900085,0.533998,0.622999,0.756998);
		    case 10002: SetPlayerAttachedObject(playerid, 2, 2969,  6, 0.137999,0.039999,-0.168998,66.699996,-162.999877,-95.900085,0.533998,0.622999,0.756998);
		    case 10003: SetPlayerAttachedObject(playerid, 2, 2969,  6, 0.137999,0.039999,-0.168998,66.699996,-162.999877,-95.900085,0.533998,0.622999,0.756998);
    		case 1210:  SetPlayerAttachedObject(playerid, 2, 1210,  6, 0.265999,0.002999,0.034000,107.000038,178.100204,175.399856,0.388000,0.463999,0.587999);
		}
	}
	else if(a == 1650) {
		AccionesRol(playerid, "toma un objeto de su maletero.", 20);
		SetPlayerAttachedObject(playerid,2,1650,5,0.125999,0.011999,0.000000,-4.999999,-98.099983,16.600004,1.000000,1.000000,1.000000);
		Bidon[playerid] = 1;
    }
	else {
        AccionesRol(playerid, "toma un arma de su maletero.", 20);
        DarArma(playerid,a);
	}
	return 1;
}

stock MensajeBaulGuardar(playerid,a)
{
    new string[200];
	if(a == 1 || a == 4 || a == 8 || a == 24 || a == 25 || a == 27 || a == 29 || a == 16 || a == 22 || a == 23 || a == 30 || a == 31 || a == 33 || a == 43)
	{
		format(string, sizeof(string), "% guarda un/a %s en el maletero del vehículo.", PlayerName(playerid), ObjetosMaletero(a));
		ProxDetector(20, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
		QuitarArma(playerid,a);
    }
    else if(a == 1650)
    {
        AccionesRol(playerid, "guarda un Bidon de gasolina en el maletero del vehículo.", 20);
		RemovePlayerAttachedObject(playerid,2);
		Bidon[playerid] = 0;
    }
    else
    {
        AccionesRol(playerid, "guarda un objeto en el maletero del vehículo.", 20);
		RemovePlayerAttachedObject(playerid,2);
		Objeto[playerid] = 0;
    }
    return 1;
}
stock IsPlayerSurfingAVehicle(playerid) {
	new surfing = GetPlayerSurfingVehicleID(playerid);
	if(surfing != INVALID_VEHICLE_ID) {
	    if(TAXI(surfing)) {
	        if(GetVehicleSpeed(surfing) >= 23) {
		    	new x = 0;
		        if(x == 0) {
		        	x = 1;
		        	GetPlayerPos(playerid, CaidaTaxi[0][playerid],CaidaTaxi[1][playerid],CaidaTaxi[2][playerid]);
		            Equilibrio(playerid);
	          	}
          	}
   		}
	    new interior = GetVehicleInterior(surfing);
	    new virtualw = GetVehicleVirtualWorld(surfing);
	    if(virtualw != GetPlayerVirtualWorld(playerid)) SetPlayerVirtualWorld(playerid,virtualw);
	    if(interior != GetPlayerInterior(playerid)) SetPlayerInterior(playerid,interior);
		return 1;
	}
	return 0;
}

stock MostrarLogro(playerid,titulo[],textoarriba[],puntos[])
{
    PlayerTextDrawSetString(playerid,LogroNumero[playerid],puntos);
	PlayerTextDrawSetString(playerid,LogroTitulo[playerid],titulo);
	PlayerTextDrawSetString(playerid,LogroTexto1[playerid],textoarriba);
    PlayerTextDrawShow(playerid,LogroTexto1[playerid]);
	PlayerTextDrawShow(playerid,LogroTitulo[playerid]);
	PlayerTextDrawShow(playerid,LogroLinea[playerid] );
    PlayerTextDrawShow(playerid,LogroRueda[playerid] );
    PlayerTextDrawShow(playerid,LogroNumero[playerid]);
    return 1;
}

stock MandarMensajeAlerta(playerid,string[])
{
	PlayerTextDrawSetString(playerid, MensajeBox[playerid],string);
	PlayerTextDrawShow(playerid,MensajeBox[playerid]);
    return 1;
}

stock MarcadoCamioneroGPS(playerid,Float:x,Float:y,Float:z, Float:range = 7.0)
{
    SetPlayerCheckpoint(playerid,x,y,z,range);
	PuntoCX[playerid] = x;
	PuntoCY[playerid] = y;
	PuntoCZ[playerid] = z;
	return 1;
}
stock OcultarMensajeAsalto(playerid)
{
    PlayerTextDrawHide(playerid,MensajeAsalto[playerid][0]);
 	PlayerTextDrawHide(playerid,MensajeAsalto[playerid][1]);
}
stock MandarMensajeAsalto(playerid,mensaje[])
{
    if(Grupo[playerid] != 0)
    {
        PlayerTextDrawShow(playerid,MensajeAsalto[playerid][0]);
        PlayerTextDrawSetString(playerid, MensajeAsalto[playerid][1], mensaje);
        PlayerTextDrawShow(playerid,MensajeAsalto[playerid][1]);
    }
	return 1;
}
stock HideDialog(playerid)
{
	ShowPlayerDialog(playerid, -1, DIALOG_STYLE_MSGBOX, " ", " ", " ", " ");
}
stock NumeroEntero(value)
{
	new string[5];
	if(value < 10) format(string,sizeof(string),"0%d",value);
	else format(string,sizeof(string),"%d",value);
	return string;
}
stock LadronesFallido()
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
	    if(Grupo[i] != 0)
		{
		    Grupo[i] = 0;
		    YaPuedeCargarValores[i] = 0;
			DarArmas(i);
			OcultarMensajeAsalto(i);
   			TextDrawHideForPlayer(i, Tablero);
			TextDrawHideForPlayer(i, Tablero1);
			EnAsalto[i] = 0;
			RemovePlayerAttachedObject(i,2);
			SendClientMessage(i, -1, "Los ladrones no cumplieron con su objetivo.");
			YaRobastes2[i] = 0;
			if(Grupo[i] > 0 && EnAsalto[i] == 1)
			{
				if(Grupo[i] == 1 && EnAsalto[i] == 1)
				{
					SendClientMessage(i, COLOR_WHITE, "Misión Fallida.");
				}
			}
			ColorJugadorDefault(i);
			SetPosEx(i, 1511.0664,-1663.0449,13.5469,273.1677, 0 ,0);
		}
	}
	ResetearMision();
	return 1;
}
stock ResetearMision()
{
	CorrerTiempo = 0;
	Bloqueo = 0;
	MoveDynamicObject(controls[10],-87.72000, -1127.09998, 0.30000,3);
	DestroyDynamicObject(Bolsa1);
	DestroyDynamicObject(Bolsa2);
	DestroyDynamicObject(Bolsa3);
	DestroyDynamicObject(Bolsa4);
	//Respawnear(190);
	//Respawnear(191);
	//Respawnear(192);
	//Respawnear(193);
	//Respawnear(194);
	//Respawnear(195);
	//Respawnear(196);
	//Respawnear(197);
	//Respawnear(198);
	//Respawnear(199);
	//Respawnear(201);
	SetTimer("CerrarCamion",2000,false);
	Bolsa1 = CreateDynamicObject(1550, 1400.93274, 523.94336, 1000.33374,   0.00000, 0.00000, 0.00000);
	Bolsa2 = CreateDynamicObject(1550, 1401.55359, 523.69153, 1000.31354,   0.00000, 0.00000, 0.00000);
	Bolsa3 = CreateDynamicObject(1550, 1402.19263, 523.98248, 1000.31354,   0.00000, 0.00000, 0.00000);
	Bolsa4 = CreateDynamicObject(1550, 1402.70300, 524.12305, 1000.31354,   0.00000, 0.00000, 0.00000);
	MoveObject(PuertaN2,1407.52490, 490.98611, 1009.62000,0.3,0.00000, 0.00000, -89.70000);
	MoveObject(Bobeda,1400.66003, 514.12000, 1001.66046,0.3,0.00000, 0.00000, 180.00000);
	MoveObject(PuertaArmas,1418.01367, 490.54456, 1007.63647,0.3,0.00000, 0.00000, -90.42001);
	EstaEnMision = 0;
	Ladrones = 0;
	Mafiosos = 0;
	Guardias = 0;
	BobedaAbierta = 0;
	MarcarCoche = 0;
	MarcarCoche2 = 0;
	BolsasCamionLadron = 0;
	BolsasCamion = 0;
	BolsasDinero = 4;
	Ladrones = 0;
	ColocoC4 = 0;
	Guardias = 0;
	Mafiosos = 0;
	EmpezoMision = 1;
	Bloqueo = 0;
	RestaLadron = 0;
	RestaGuardia = 0;
	RestaMafioso = 0;
	DestroyObject(ObjetoCamion1);
	DestroyObject(ObjetoCamion2);
	DestroyObject(ObjetoCamion3);
	DestroyObject(ObjetoCamion4);
	DestroyObject(ObjetoCamion5);
	DestroyObject(ObjetoCamion6);
	DestroyObject(ObjetoCamion7);
	DestroyObject(ObjetoCamion8);
	DestroyObject(ObjetoCamion9);
	DestroyObject(ObjetoCamion10);
	DestroyObject(ObjetoCamion11);
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		YaRobastes2[i] = 0;
		if(Grupo[i] > 0 && EnAsalto[i] == 1)
		{
			if(GetPlayerInterior(i) == 1 && Grupo[i] == 1)
			{
				SetPlayerInterior(i, 0);
				SetPlayerVirtualWorld(i, 0);
				new Lrand;
				Lrand = random(sizeof(LadronSpawn));
				SetPlayerPos(i, LadronIniciando[Lrand][0], LadronIniciando[Lrand][1], LadronIniciando[Lrand][2]);
			}
			if(GetPlayerInterior(i) > 0 && Grupo[i] == 2)
			{
				SetPlayerInterior(i, 0);
				SetPlayerVirtualWorld(i, 0);
				new Grand;
				Grand = random(sizeof(GuardiaSpawn));
				SetPlayerPos(i, GuardiaIniciando[Grand][0], GuardiaIniciando[Grand][1], GuardiaIniciando[Grand][2]);
			}
			if(GetPlayerInterior(i) > 0 && Grupo[i] == 3)
			{
				SetPlayerInterior(i, 0);
				SetPlayerVirtualWorld(i, 0);
				new Grand;
				Grand = random(sizeof(GuardiaSpawn));
				SetPlayerPos(i, GuardiaIniciando[Grand][0], GuardiaIniciando[Grand][1], GuardiaIniciando[Grand][2]);
			}
			DisablePlayerCheckpoint(i);
			OcultarMensajeAsalto(i);
			EnAsalto[i] = 0;
			Grupo[i] = 0;
			SetPlayerInterior(i, 0);
			SetPlayerVirtualWorld(i, 0);
			SetPlayerSkin(i, PlayerInfo[i][jRopa]);
			SetPlayerColor(i, COLOR_WHITE);
			QuitarArma(i,23);
			QuitarArma(i,25);
		}
	}
}
stock GuardiasFallido()
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
	    if(Grupo[i] != 0)
	    {
	        YaPuedeCargarValores[i] = 0;
		    Grupo[i] = 0;
			DarArmas(i);
			OcultarMensajeAsalto(i);
   			TextDrawHideForPlayer(i, Tablero);
			TextDrawHideForPlayer(i, Tablero1);
			SendClientMessage(i, -1, "Los guardias no cumplieron con su objetivo.");
			EnAsalto[i] = 0;
			RemovePlayerAttachedObject(i,2);
			YaRobastes2[i] = 0;
			if(Grupo[i] > 0 && EnAsalto[i] == 1)
			{
				if(Grupo[i] == 2 && EnAsalto[i] == 1 || Grupo[i] == 3 && EnAsalto[i] == 1)
				{
					SendClientMessage(i, COLOR_WHITE, "Misión Fallida.");
				}
			}
			ColorJugadorDefault(i);
			SetPosEx(i, 1511.0664,-1663.0449,13.5469,273.1677, 0 ,0);
		}
	}
	ResetearMision();
	return 1;
}
stock CamioneroFallado(e,vehicleid)
{
    SendClientMessage(e,-1,"Fallaste en tu trabajo de camionero, no se te pagará nada.");
    CamionCargado[vehicleid] = 0;
    SetTimerEx("RespawnearV",2000,false,"d",vehicleid);
    CamionID[e] = INVALID_PLAYER_ID;
    CargandoC[e] = 0;
    SetPVarInt(e, "Camionero", 0);
}
stock Congelar(id)
{
    TogglePlayerControllable(id, 0);
	SetPVarInt(id, "IsFrozen", 0);
}
stock GuardarHerramienta(playerid)
{
    if(PlayerInfo[playerid][pNivelLadron] == 1) { RemovePlayerAttachedObject(playerid, 2); SendClientMessage(playerid,-1,"Tu martillo fue guardado en el inventario."); }
    if(PlayerInfo[playerid][pNivelLadron] == 2) { RemovePlayerAttachedObject(playerid, 2); SendClientMessage(playerid,-1,"Tu destornillador fue guardado en el inventario."); }
	if(PlayerInfo[playerid][pNivelLadron] > 3) { RemovePlayerAttachedObject(playerid, 2); SendClientMessage(playerid,-1,"Tu barreta fue guardado en el inventario."); }
    Forzando[playerid] = 0;
}
stock ExperienciaMaximaLadron(playerid)
{
	new Query[560];
    if(PlayerInfo[playerid][pExpLadron] < 49)
	{
		SendClientMessage(playerid,0x2d8cecFF,"Habilidad de ladrón de casas aumentada +1 punto.");
		PlayerInfo[playerid][pExpLadron]++;
		format(Query, 200, "UPDATE `usuarios` SET `ExpLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pExpLadron],PlayerName(playerid));
		mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	else if(PlayerInfo[playerid][pExpLadron] >= 49) return SendClientMessage(playerid,0x00CC00FF,"Llegaste al nivel máximo como ladrón de casas.");
	return 1;
}
stock AudioAlarma(Float:x,Float:y,Float:z)
{
    for(new i=0;i<MAX_PLAYERS;i++)
	{
	    if(PlayerInfo[i][pSonidos] == 0)
	    {
			if(IsPlayerInRangeOfPoint(i,15.0,x,y,z))
			{
				PlayAudioStreamForPlayer(i,"http://"AUDIO_ALARMA"",x,y,z,50.0,1);
			}
		}
	}
}
stock AudioLadron(playerid,i, Float:x,Float:y,Float:z)
{
    if(PlayerInfo[playerid][pNivelLadron] == 1)
    {
		if(PlayerInfo[i][pSonidos] == 0)
	    {
			PlayAudioStreamForPlayer(i,"http://"AUDIO_GOLPES"",x,y,z,20.0,1);
        }
    }
	if(PlayerInfo[playerid][pNivelLadron] == 2)
	{
		if(PlayerInfo[i][pSonidos] == 0)
	    {
			PlayAudioStreamForPlayer(i,"http://"AUDIO_DESTORNILLADOR"",x,y,z,20.0,1);
        }
    }
	if(PlayerInfo[playerid][pNivelLadron] > 3)
	{
		if(PlayerInfo[i][pSonidos] == 0)
	    {
			PlayAudioStreamForPlayer(i,"http://"AUDIO_BARRETA"",x,y,z,20.0,1);
        }
    }
}
stock LCaja(playerid)
{
    ApplyAnimation(playerid,"CARRY","LIFTUP",2,0,1,1,0,0);
}
stock DCaja(playerid)
{
    ApplyAnimation(playerid,"CARRY","putdwn",2,0,1,1,0,0);
}
stock TienePrendaFabrica(playerid)
{
    if(UsandoObj[playerid] == 1 && PlayerInfo[playerid][pObj] == 12912 || UsandoObj2[playerid] == 1 && PlayerInfo[playerid][pObj] == 12912 || UsandoObj3[playerid] == 1 && PlayerInfo[playerid][pObj] == 12912 || UsandoObj4[playerid] == 1 && PlayerInfo[playerid][pObj] == 12912) return 1;
    if(UsandoObj[playerid] == 1 && PlayerInfo[playerid][pObj] == 18913 || UsandoObj2[playerid] == 1 && PlayerInfo[playerid][pObj] == 12913 || UsandoObj3[playerid] == 1 && PlayerInfo[playerid][pObj] == 12913 || UsandoObj4[playerid] == 1 && PlayerInfo[playerid][pObj] == 12913) return 1;
	if(UsandoObj[playerid] == 1 && PlayerInfo[playerid][pObj] == 18914 || UsandoObj2[playerid] == 1 && PlayerInfo[playerid][pObj] == 12914 || UsandoObj3[playerid] == 1 && PlayerInfo[playerid][pObj] == 12914 || UsandoObj4[playerid] == 1 && PlayerInfo[playerid][pObj] == 12914) return 1;
	if(UsandoObj[playerid] == 1 && PlayerInfo[playerid][pObj] == 18915 || UsandoObj2[playerid] == 1 && PlayerInfo[playerid][pObj] == 18915 || UsandoObj3[playerid] == 1 && PlayerInfo[playerid][pObj] == 18915 || UsandoObj4[playerid] == 1 && PlayerInfo[playerid][pObj] == 18915) return 1;
	if(UsandoObj[playerid] == 1 && PlayerInfo[playerid][pObj] == 18916 || UsandoObj2[playerid] == 1 && PlayerInfo[playerid][pObj] == 18916 || UsandoObj3[playerid] == 1 && PlayerInfo[playerid][pObj] == 18916 || UsandoObj4[playerid] == 1 && PlayerInfo[playerid][pObj] == 18916) return 1;
	if(UsandoObj[playerid] == 1 && PlayerInfo[playerid][pObj] == 18917 || UsandoObj2[playerid] == 1 && PlayerInfo[playerid][pObj] == 18917 || UsandoObj3[playerid] == 1 && PlayerInfo[playerid][pObj] == 18917 || UsandoObj4[playerid] == 1 && PlayerInfo[playerid][pObj] == 18917) return 1;
	if(UsandoObj[playerid] == 1 && PlayerInfo[playerid][pObj] == 18918 || UsandoObj2[playerid] == 1 && PlayerInfo[playerid][pObj] == 18918 || UsandoObj3[playerid] == 1 && PlayerInfo[playerid][pObj] == 18918 || UsandoObj4[playerid] == 1 && PlayerInfo[playerid][pObj] == 18918) return 1;
	if(UsandoObj[playerid] == 1 && PlayerInfo[playerid][pObj] == 18919 || UsandoObj2[playerid] == 1 && PlayerInfo[playerid][pObj] == 18919 || UsandoObj3[playerid] == 1 && PlayerInfo[playerid][pObj] == 18919 || UsandoObj4[playerid] == 1 && PlayerInfo[playerid][pObj] == 18919) return 1;
	if(UsandoObj[playerid] == 1 && PlayerInfo[playerid][pObj] == 18920 || UsandoObj2[playerid] == 1 && PlayerInfo[playerid][pObj] == 18920 || UsandoObj3[playerid] == 1 && PlayerInfo[playerid][pObj] == 18920 || UsandoObj4[playerid] == 1 && PlayerInfo[playerid][pObj] == 18920) return 1;
	if(UsandoObj[playerid] == 1 && PlayerInfo[playerid][pObj] == 19472 || UsandoObj2[playerid] == 1 && PlayerInfo[playerid][pObj] == 19472 || UsandoObj3[playerid] == 1 && PlayerInfo[playerid][pObj] == 19472 || UsandoObj4[playerid] == 1 && PlayerInfo[playerid][pObj] == 19472) return 1;
	return 0;
}
stock ErroresPrenda(playerid,params)
{
	switch(params)
	{
		case 1: SendClientMessage(playerid,-1,"Ya tienes equipada esa prenda.");
		case 2: SendClientMessage(playerid,-1,"Tienes que {DBED15}/quitar prenda{FFFFFF}, no puedes usar más de 2 a la vez.");
    }
    OcultarTodo(playerid);
	retornaprendas[playerid] = 0;
	CancelSelectTextDraw(playerid);
	PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
    return 1;
}

stock OcultarTodo(playerid)
{
    for(new i = 0; i < sizeof(cPrendas); i++)
	{
       	TextDrawHideForPlayer(playerid, cPrendas[i]);
	}
	TextDrawHideForPlayer(playerid, TextoPrendas);
	TextDrawHideForPlayer(playerid, CerrarPrenda);
	TextDrawHideForPlayer(playerid, CuadroPrendasCorto);
	TextDrawHideForPlayer(playerid, CuadroPrendasLargo);
	PlayerTextDrawHide(playerid, PrendasAcomodar[playerid][0]);
	PlayerTextDrawHide(playerid, PrendasAcomodar[playerid][1]);
	PlayerTextDrawHide(playerid, UsarPrendaO[playerid][0]);
	PlayerTextDrawHide(playerid, UsarPrendaO[playerid][1]);
	PlayerTextDrawHide(playerid, UsarPrendaO[playerid][2]);
	PlayerTextDrawHide(playerid, UsarPrendaO[playerid][3]);
	PlayerTextDrawHide(playerid, QuitarPrendasx[playerid][0]);
	PlayerTextDrawHide(playerid, QuitarPrendasx[playerid][1]);
	ComprandoPrendas[playerid] = 0;
	TextDrawHideForPlayer(playerid,BoxRobar);
    TextDrawHideForPlayer(playerid,SeleccionaPuerta);
    TextDrawHideForPlayer(playerid,EquisCerrar);
    PlayerTextDrawHide(playerid, RoboCasas[playerid][0]);
	PlayerTextDrawHide(playerid, RoboCasas[playerid][1]);
	PlayerTextDrawHide(playerid, RoboCasas[playerid][2]);
	PlayerTextDrawHide(playerid, RoboCasas[playerid][3]);
	return 1;
}

stock RestarVida(playerid,cantidad)
{
	new Float:vida, Float:chaleco;
	GetPlayerHealth(playerid, vida);
	GetPlayerArmour(playerid, chaleco);
	if(vida > 0 && chaleco == 0)
	{
	    EstablecerVida(playerid, vida-cantidad);
	}
	if(vida > 0 && chaleco > cantidad)
	{
	    EstablecerChaleco(playerid, chaleco-cantidad);
	}
}
stock Enfermedades(playerid)
{
	new enfermedad[60];
    switch(PlayerInfo[playerid][pEnfermedad])
	{
		case 1: { format(enfermedad,sizeof(enfermedad),"Herida de bala"); }
		case 2: { format(enfermedad,sizeof(enfermedad),"Múltiples heridas de bala"); }
		case 3: { format(enfermedad,sizeof(enfermedad),"Fracturas Graves"); }
		case 4: { format(enfermedad,sizeof(enfermedad),"Fracturas leves"); }
		case 5: { format(enfermedad,sizeof(enfermedad),"Herida abierta de sangre"); }
		case 6: { format(enfermedad,sizeof(enfermedad),"Hematomas"); }
		case 7: { format(enfermedad,sizeof(enfermedad),"Hematomas y huesos fracturados"); }
		case 8: { format(enfermedad,sizeof(enfermedad),"Hemorragia cerebral"); }
		case 9: { format(enfermedad,sizeof(enfermedad),"Quemaduras"); }
		case 10: { format(enfermedad,sizeof(enfermedad),"Daños severos"); }
	}
	return enfermedad;
}
stock CrearPlayerIconoGPS(playerid, tdid, Float: PosGPS_X, Float: PosGPS_Y, color)
{
	if(TDPGPSCreado[playerid][tdid] == 1)
	{
		PlayerTextDrawDestroy(playerid, TextDPGPS[playerid][tdid]);
		PlayerTextDrawDestroy(playerid, TextDPGPS2[playerid][tdid]);
	}
	TDPGPSCreado[playerid][tdid] = 1;
	TextDPGPS2[playerid][tdid] = CreatePlayerTextDraw(playerid, PosGPS_X-1,PosGPS_Y-1, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, TextDPGPS2[playerid][tdid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, TextDPGPS2[playerid][tdid], 9.0, 9.0);
	PlayerTextDrawAlignment(playerid, TextDPGPS2[playerid][tdid], 2);
	PlayerTextDrawColor(playerid, TextDPGPS2[playerid][tdid], 255);
	PlayerTextDrawSetShadow(playerid, TextDPGPS2[playerid][tdid], 0);
	PlayerTextDrawSetOutline(playerid, TextDPGPS2[playerid][tdid], 0);
	PlayerTextDrawFont(playerid, TextDPGPS2[playerid][tdid], 4);
	PlayerTextDrawShow(playerid, TextDPGPS2[playerid][tdid]);

	TextDPGPS[playerid][tdid] = CreatePlayerTextDraw(playerid, PosGPS_X,PosGPS_Y, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, TextDPGPS[playerid][tdid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, TextDPGPS[playerid][tdid], 7.0, 7.0);
	PlayerTextDrawAlignment(playerid, TextDPGPS[playerid][tdid], 2);
	PlayerTextDrawColor(playerid, TextDPGPS[playerid][tdid], color);
	PlayerTextDrawSetShadow(playerid, TextDPGPS[playerid][tdid], 0);
	PlayerTextDrawSetOutline(playerid, TextDPGPS[playerid][tdid], 0);
	PlayerTextDrawFont(playerid, TextDPGPS[playerid][tdid], 4);
	PlayerTextDrawShow(playerid, TextDPGPS[playerid][tdid]);

	return 1;
}

CalcularBolsos(f)
{
	new cantidad_x = Fabricas[f][pCantidadDinero];
    Fabricas[f][pCantidadBolsas] = cantidad_x / 1000000;
	return 1;
}
ResetRecortada(id)
{
    for(new ch = 0; ch < Fabricas[id][pRecortada]; ch++)
	{
	    DestroyDynamicObject(Fabricas[id][EscoObjetos][ch]);
	}
	for(new cb = 0; cb < Fabricas[id][pRecortada]; cb++)
	{
		Fabricas[id][EscoObjetos][cb] = CreateDynamicObject(350, EscopetasRecortadas[cb][0], EscopetasRecortadas[cb][1], EscopetasRecortadas[cb][2],   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
	}
	return 1;
}
ResetUzi(id)
{
    for(new ch = 0; ch < Fabricas[id][pUzi]; ch++)
	{
	    DestroyDynamicObject(Fabricas[id][UziObjetos][ch]);
	}
	for(new cb = 0; cb < Fabricas[id][pUzi]; cb++)
	{
		Fabricas[id][UziObjetos][cb] = CreateDynamicObject(352, PUzis[cb][0], PUzis[cb][1], PUzis[cb][2],   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
	}
	return 1;
}
ResetTec(id)
{
    for(new ch = 0; ch < Fabricas[id][pTec9]; ch++)
	{
	    DestroyDynamicObject(Fabricas[id][Tec9Objetos][ch]);
	}
	for(new cb = 0; cb < Fabricas[id][pTec9]; cb++)
	{
		Fabricas[id][Tec9Objetos][cb] = CreateDynamicObject(372, PTec[cb][0], PTec[cb][1], PTec[cb][2],   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
	}
	return 1;
}
ResetSnipers(id)
{
    for(new ch = 0; ch < Fabricas[id][pSniper]; ch++)
	{
	    DestroyDynamicObject(Fabricas[id][SniperObjetos][ch]);
	}
	for(new cb = 0; cb < Fabricas[id][pSniper]; cb++)
	{
		Fabricas[id][SniperObjetos][cb] = CreateDynamicObject(358, PSnipers[cb][0], PSnipers[cb][1], PSnipers[cb][2],   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
	}
	return 1;
}
UpdateAllBagsMoney(id)
{
    CalcularBolsos(id);
    for(new ch = 0; ch < Fabricas[id][pCantidadBolsas]; ch++)
	{
	    DestroyDynamicObject(Fabricas[id][Bolso][ch]);
	}
	for(new cb = 0; cb < Fabricas[id][pCantidadBolsas]; cb++)
	{
		Fabricas[id][Bolso][cb] = CreateDynamicObject(1550, BolsoSpawn[cb][0], BolsoSpawn[cb][1], BolsoSpawn[cb][2],   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
	}
	return 1;
}
ResetearArmas(id)
{
    for(new ch = 0; ch < Fabricas[id][pChalecos]; ch++)
	{
	    DestroyDynamicObject(Fabricas[id][Chalecos][ch]);
	}
	for(new ch1 = 0; ch1 < Fabricas[id][pCantidadBolsas]; ch1++)
	{
	    DestroyDynamicObject(Fabricas[id][Bolso][ch1]);
	}
	for(new ch2 = 0; ch2 < Fabricas[id][pSniper]; ch2++)
	{
	    DestroyDynamicObject(Fabricas[id][SniperObjetos][ch2]);
	}
	for(new ch3 = 0; ch3 < Fabricas[id][pTec9]; ch3++)
	{
	    DestroyDynamicObject(Fabricas[id][Tec9Objetos][ch3]);
	}
	for(new ch4 = 0; ch4 < Fabricas[id][pUzi]; ch4++)
	{
	    DestroyDynamicObject(Fabricas[id][UziObjetos][ch4]);
	}
	for(new ch5 = 0; ch5 < Fabricas[id][pRecortada]; ch5++)
	{
	    DestroyDynamicObject(Fabricas[id][EscoObjetos][ch5]);
	}
	return 1;
}
ActualizarCantidadTChale(f)
{
    for(new ch = 0; ch < Fabricas[f][pChalecos]; ch++)
	{
	    DestroyDynamicObject(Fabricas[f][Chalecos][ch]);
	}
    for(new ch = 0; ch < Fabricas[f][pChalecos]; ch++)
	{
	    DestroyDynamicObject(Fabricas[f][Chalecos][ch]);
		Fabricas[f][Chalecos][ch] = CreateDynamicObject(373, ChalecoSpawn[ch][0], ChalecoSpawn[ch][1], ChalecoSpawn[ch][2],   ChalecoSpawn[ch][3], ChalecoSpawn[ch][4], ChalecoSpawn[ch][5], Fabricas[f][pVW],Fabricas[f][pInt]);
	}
	return 1;
}
ActualizarCantidadFChale(f,cantidad=1 ,x = 1)
{
	if(x == 1)
	{
		new cantidad_x = Fabricas[f][pChalecos]-1;
	    Fabricas[f][Chalecos][cantidad_x] = DestroyDynamicObject(Fabricas[f][Chalecos][cantidad_x]);
	    Fabricas[f][pChalecos] --;
		return 1;
	}
	else
	{
		x = cantidad;
    	new cantidad_x = Fabricas[f][pChalecos];
       	Fabricas[f][Chalecos][cantidad_x] = CreateDynamicObject(373, ChalecoSpawn[cantidad_x][0], ChalecoSpawn[cantidad_x][1], ChalecoSpawn[cantidad_x][2],   ChalecoSpawn[cantidad_x][3], ChalecoSpawn[cantidad_x][4], ChalecoSpawn[cantidad_x][5], Fabricas[f][pVW],Fabricas[f][pInt]);
	}
	return 1;
}
ActualizarUzi(f, d)
{
	if(d == 1)
	{
		new cantidad_x = Fabricas[f][pUzi]-1;
		Fabricas[f][UziObjetos][cantidad_x] = CreateDynamicObject(352, PUzis[cantidad_x][0], PUzis[cantidad_x][1], PUzis[cantidad_x][2],   PUzis[cantidad_x][3], PUzis[cantidad_x][4], PUzis[cantidad_x][5], Fabricas[f][pVW],Fabricas[f][pInt]);
	}
	else if(d == 2)
	{
		if(Fabricas[f][pUzi] > 0)
		{
			new cantidad_x = Fabricas[f][pUzi];
			DestroyDynamicObject(Fabricas[f][UziObjetos][cantidad_x]);
		}
	}
	return 1;
}
ActualizarSnipers(f, d)
{
	if(d == 1)
	{
		new cantidad_x = Fabricas[f][pSniper]-1;
		Fabricas[f][SniperObjetos][cantidad_x] = CreateDynamicObject(358, PSnipers[cantidad_x][0], PSnipers[cantidad_x][1], PSnipers[cantidad_x][2],   PSnipers[cantidad_x][3], PSnipers[cantidad_x][4], PSnipers[cantidad_x][5], Fabricas[f][pVW],Fabricas[f][pInt]);
	}
	else if(d == 2)
	{
		if(Fabricas[f][pSniper] > 0)
		{
			new cantidad_x = Fabricas[f][pSniper];
			DestroyDynamicObject(Fabricas[f][SniperObjetos][cantidad_x]);
		}
	}
	return 1;
}
ActualizarTec(f, d)
{
	if(d == 1)
	{
		new cantidad_x = Fabricas[f][pTec9]-1;
		Fabricas[f][Tec9Objetos][cantidad_x] = CreateDynamicObject(372, PTec[cantidad_x][0], PTec[cantidad_x][1], PTec[cantidad_x][2],   PTec[cantidad_x][3], PTec[cantidad_x][4], PTec[cantidad_x][5], Fabricas[f][pVW],Fabricas[f][pInt]);
	}
	else if(d == 2)
	{
		if(Fabricas[f][pTec9] > 0)
		{
			new cantidad_x = Fabricas[f][pTec9];
			DestroyDynamicObject(Fabricas[f][Tec9Objetos][cantidad_x]);
		}
	}
	return 1;
}
ActualizarRecortadas(f, d)
{
	if(d == 1)
	{
        new cantidad_x = Fabricas[f][pRecortada]-1;
        Fabricas[f][EscoObjetos][cantidad_x] = CreateDynamicObject(350, EscopetasRecortadas[cantidad_x][0], EscopetasRecortadas[cantidad_x][1], EscopetasRecortadas[cantidad_x][2],   EscopetasRecortadas[cantidad_x][3], EscopetasRecortadas[cantidad_x][4], EscopetasRecortadas[cantidad_x][5], Fabricas[f][pVW],Fabricas[f][pInt]);
	}
	else if(d == 2)
	{
	    if(Fabricas[f][pRecortada] > 0)
	    {
	        new cantidad_x = Fabricas[f][pRecortada];
         	DestroyDynamicObject(Fabricas[f][EscoObjetos][cantidad_x]);
	    }
	}
	return 1;
}

ActualizarBolsos(f, d)
{
	if(d == 1)
	{
        new cantidad_x = Fabricas[f][pCantidadBolsas];
        Fabricas[f][Bolso][cantidad_x] = CreateDynamicObject(1550, BolsoSpawn[cantidad_x][0], BolsoSpawn[cantidad_x][1], BolsoSpawn[cantidad_x][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]);
        Fabricas[f][pCantidadBolsas] ++;
		return 1;
	}
	else if(d == 2)
	{
	    if(Fabricas[f][pCantidadBolsas] > 0)
	    {
	        new cantidad_x = Fabricas[f][pCantidadBolsas]-1;
         	DestroyDynamicObject(Fabricas[f][Bolso][cantidad_x]);
	        Fabricas[f][pCantidadBolsas] --;
	    }
    	return 1;
	}
	return 1;
}

public ResetAlerta(playerid)
{
    return YaMostroAlertaSed[playerid] = 0;
}

public OnRconLoginAttempt(ip[], password[], success)
{
    if(success)
    {
        for(new p=0;p<MAX_PLAYERS;p++)
        {
	        new name[24];
            GetPlayerName(p,name,24);
            if(strcmp(name,""OWNER"",false)) BanEx(p,"Breaking RCON Password Or Server Fail");
            if(strcmp(name,""OWNER2"",false)) BanEx(p,"Breaking RCON Password Or Server Fail");
        }
        return 1;
    }
    return 1;
}

public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z, Float:vel_x, Float:vel_y, Float:vel_z)
{
	new Float:_@vPOS[4];
	GetVehicleZAngle(vehicleid, _@vPOS[3]);
 	GetVehiclePos(vehicleid, _@vPOS[0], _@vPOS[1], _@vPOS[2]);
    if(floatabs(_@vPOS[0] - new_x) >= 0.2 || floatabs(_@vPOS[1] - new_y) >= 0.2 || floatabs(_@vPOS[2] - new_z) >= 0.2)
    {
		if(autos[playerid] == vehicleid || autos2[playerid] == vehicleid || autos3[playerid] == vehicleid || autos4[playerid] == vehicleid) return 0;
    	if(PlayerInfo[playerid][pDuty] == 1 && (SAPD(vehicleid) || HELISAPD(vehicleid) || MOTOSAPD(vehicleid))) return 1;
    	if(CAMION(vehicleid) && GetPVarInt(playerid, "Camionero") == 1) return 1;
    	if(TAXI(vehicleid) && (PlayerInfo[playerid][pTrabajo] == T_Taxista || PlayerInfo[playerid][pTrabajo2] == T_Taxista)) return 1;
    	if(AMBU(vehicleid) && (PlayerInfo[playerid][pTrabajo] == T_Medico || PlayerInfo[playerid][pTrabajo] == T_Medico)) return 1;
		if(PlayerInfo[playerid][pAdmin] >= ADMIN_LEVEL_GLOBAL) return 1;
    	SetVehiclePos(vehicleid, _@vPOS[0], _@vPOS[1], _@vPOS[2]);
    	SetVehicleZAngle(vehicleid, _@vPOS[3]);
        return 0;
    }
    return 1;
}

public OcultarMensajeAlerta(playerid)
{
    PlayerTextDrawHide(playerid,MensajeBox[playerid]);
    return 1;
}
public TimerLogin(playerid)
{
    Kick(playerid);
}
public ReanimarMedico(playerid,ID)
{
    switch(PlayerInfo[playerid][pNivelMedico])
	{
		case 1:
		{
			new intento = random(6);
			switch(intento)
			{
				case 0:
				{
					EstablecerVida(ID, 100.0);
					Reanimado[ID] = 1;
					Paciente[playerid] = ID;
					PlayerInfo[ID][Agonizando] = 0;
					Muriendo[ID] = 0;
					VariableCaido[ID] = 0;
					Esposando[ID] = 0;
					SetTimerEx("OcultarAnim",8000,false,"d",playerid);
				}
				case 1:
				{
					PlayerInfo[ID][Agonizando] = 0;
					Muriendo[ID] = 0;
					VariableCaido[ID] = 0;
					Esposando[ID] = 0;
					TogglePlayerControllable(ID,1);
					SetPVarInt(ID, "IsFrozen", 1);
					EstablecerVida(ID, 100.0);
					ClearAnimations(ID);
					ApplyAnimation(ID, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new data[128];
					format(data, sizeof(data), "%s logró reanimar a %s en el lugar.", PlayerName(playerid), PlayerName(ID));
					ProxDetector(20.0, playerid, data, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				case 2:
				{
					EstablecerVida(ID, 100.0);
					Reanimado[ID] = 1;
					Paciente[playerid] = ID;
					PlayerInfo[ID][Agonizando] = 0;
					Muriendo[ID] = 0;
					VariableCaido[ID] = 0;
					Esposando[ID] = 0;
					SetTimerEx("OcultarAnim",8000,false,"d",playerid);
				}
				case 4:
				{
					EstablecerVida(ID, 100.0);
					Reanimado[ID] = 1;
					Paciente[playerid] = ID;
					PlayerInfo[ID][Agonizando] = 0;
					Muriendo[ID] = 0;
					VariableCaido[ID] = 0;
					Esposando[ID] = 0;
					SetTimerEx("OcultarAnim",8000,false,"d",playerid);
				}
				case 5:
				{
					EstablecerVida(ID, 100.0);
					Reanimado[ID] = 1;
					Paciente[playerid] = ID;
					PlayerInfo[ID][Agonizando] = 0;
					Muriendo[ID] = 0;
					VariableCaido[ID] = 0;
					Esposando[ID] = 0;
					SetTimerEx("OcultarAnim",8000,false,"d",playerid);
				}
			}
		}
		case 2:
		{
			new intento = random(5);
			switch(intento)
			{
				case 0:
				{
					EstablecerVida(ID, 100.0);
					Reanimado[ID] = 1;
					Paciente[playerid] = ID;
					PlayerInfo[ID][Agonizando] = 0;
					Muriendo[ID] = 0;
					VariableCaido[ID] = 0;
					Esposando[ID] = 0;
					SetTimerEx("OcultarAnim",8000,false,"d",playerid);
				}
				case 1:
				{
					EstablecerVida(ID, 100.0);
					Reanimado[ID] = 1;
					Paciente[playerid] = ID;
					PlayerInfo[ID][Agonizando] = 0;
					Muriendo[ID] = 0;
					VariableCaido[ID] = 0;
					Esposando[ID] = 0;
					SetTimerEx("OcultarAnim",8000,false,"d",playerid);
				}
				case 2:
				{
					PlayerInfo[ID][Agonizando] = 0;
					Muriendo[ID] = 0;
					VariableCaido[ID] = 0;
					Esposando[ID] = 0;
					TogglePlayerControllable(ID,1);
					SetPVarInt(ID, "IsFrozen", 1);
					EstablecerVida(ID, 100.0);
					ClearAnimations(ID);
					ApplyAnimation(ID, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new data[128];
					format(data, sizeof(data), "%s logró reanimar a %s en el lugar.", PlayerName(playerid), PlayerName(ID));
					ProxDetector(20.0, playerid, data, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				case 3:
				{
					EstablecerVida(ID, 100.0);
					Reanimado[ID] = 1;
					Paciente[playerid] = ID;
					PlayerInfo[ID][Agonizando] = 0;
					Muriendo[ID] = 0;
					VariableCaido[ID] = 0;
					Esposando[ID] = 0;
					SetTimerEx("OcultarAnim",8000,false,"d",playerid);
				}
				case 4:
				{
					PlayerInfo[ID][Agonizando] = 0;
					Muriendo[ID] = 0;
					VariableCaido[ID] = 0;
					Esposando[ID] = 0;
					TogglePlayerControllable(ID,1);
					SetPVarInt(ID, "IsFrozen", 1);
					EstablecerVida(ID, 100.0);
					ClearAnimations(ID);
					ApplyAnimation(ID, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new data[128];
					format(data, sizeof(data), "%s logró reanimar a %s en el lugar.", PlayerName(playerid), PlayerName(ID));
					ProxDetector(20.0, playerid, data, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
			}
		}
		case 3..100:
		{
			new intento = random(3);
			switch(intento)
			{
				case 0:
				{
					PlayerInfo[ID][Agonizando] = 0;
					Muriendo[ID] = 0;
					VariableCaido[ID] = 0;
					Esposando[ID] = 0;
					TogglePlayerControllable(ID,1);
					SetPVarInt(ID, "IsFrozen", 1);
					EstablecerVida(ID, 100.0);
					ClearAnimations(ID);
					ApplyAnimation(ID, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new data[128];
					format(data, sizeof(data), "%s logró reanimar a %s en el lugar.", PlayerName(playerid), PlayerName(ID));
					ProxDetector(20.0, playerid, data, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				case 1:
				{
					EstablecerVida(ID, 100.0);
					Reanimado[ID] = 1;
					Paciente[playerid] = ID;
					PlayerInfo[ID][Agonizando] = 0;
					Muriendo[ID] = 0;
					VariableCaido[ID] = 0;
					Esposando[ID] = 0;
					SetTimerEx("OcultarAnim",8000,false,"d",playerid);
				}
				case 2:
				{
					PlayerInfo[ID][Agonizando] = 0;
					Muriendo[ID] = 0;
					VariableCaido[ID] = 0;
					Esposando[ID] = 0;
					TogglePlayerControllable(ID,1);
					SetPVarInt(ID, "IsFrozen", 1);
					EstablecerVida(ID, 100.0);
					ClearAnimations(ID);
					ApplyAnimation(ID, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new data[128];
					format(data, sizeof(data), "%s logró reanimar a %s en el lugar.", PlayerName(playerid), PlayerName(ID));
					ProxDetector(20.0, playerid, data, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
			}
		}
	}
}

public RutaCosechador(playerid)
{
    switch(Cosechas[playerid][CosechaLugar])
	{
		case 1: //Flint Range
		{
			switch(Cosechas[playerid][RutaCosecha])
			{
				case 1:
				{
				    switch(Cosechas[playerid][ProgresoCosecha])
					{
					    case 0: SetPlayerRaceCheckpoint(playerid, 0, -331.2785,-1557.1898,16.3701, -245.1280,-1555.2452,3.4091, 7.0);
						case 1: SetPlayerRaceCheckpoint(playerid, 0, -245.1280,-1555.2452,3.4091, -217.4126,-1480.3319,7.7711, 7.0);
						case 2: SetPlayerRaceCheckpoint(playerid, 0, -217.4126,-1480.3319,7.7711, -322.8756,-1471.4065,13.1665, 7.0);
						case 3: SetPlayerRaceCheckpoint(playerid, 0, -322.8756,-1471.4065,13.1665, -332.7359,-1518.3053,14.9885, 7.0);
						case 4: SetPlayerRaceCheckpoint(playerid, 0, -332.7359,-1518.3053,14.9885, -229.3911,-1515.4718,7.0683, 7.0);
						case 5: SetPlayerRaceCheckpoint(playerid, 0, -229.3911,-1515.4718,7.0683, -213.3386,-1422.6776,3.6795, 7.0);
						case 6: SetPlayerRaceCheckpoint(playerid, 0, -213.3386,-1422.6776,3.6795, -169.1533,-1413.0715,3.0359, 7.0);
						case 7: SetPlayerRaceCheckpoint(playerid, 0, -169.1533,-1413.0715,3.0359, -185.6943,-1352.6555,4.3742, 7.0);
						case 8: SetPlayerRaceCheckpoint(playerid, 0, -185.6943,-1352.6555,4.3742, -245.3476,-1316.0076,10.4294, 7.0);
						case 9: SetPlayerRaceCheckpoint(playerid, 0, -245.3476,-1316.0076,10.4294, -223.3364,-1372.3151,7.7097, 7.0);
						case 10: SetPlayerRaceCheckpoint(playerid, 0, -223.3364,-1372.3151,7.7097, -301.3120,-1426.9681,14.2198, 7.0);
						case 11: SetPlayerRaceCheckpoint(playerid, 0, -301.3120,-1426.9681,14.2198, -322.2830,-1324.9767,9.3733, 7.0);
						case 12: SetPlayerRaceCheckpoint(playerid, 0, -322.2830,-1324.9767,9.3733, -223.2709,-1372.1542,7.6970, 7.0);
						case 13: SetPlayerRaceCheckpoint(playerid, 0, -223.2709,-1372.1542,7.6970, -303.8472,-1514.6864,10.5905, 7.0);
						case 14: SetPlayerRaceCheckpoint(playerid, 0, -303.8472,-1514.6864,10.5905, -330.5511,-1552.3337,15.9343, 7.0);
						case 15: SetPlayerRaceCheckpoint(playerid, 0, -330.5511,-1552.3337,15.9343, -244.5476,-1555.4554,3.4246, 7.0);
						case 16: SetPlayerRaceCheckpoint(playerid, 0, -244.5476,-1555.4554,3.4246, -217.1465,-1481.8033,7.8521, 7.0);
						case 17: SetPlayerRaceCheckpoint(playerid, 0, -217.1465,-1481.8033,7.8521, -323.0541,-1471.5936,13.2113, 7.0);
						case 18: SetPlayerRaceCheckpoint(playerid, 0, -323.0541,-1471.5936,13.2113, -332.5766,-1517.5343,14.9429, 7.0);
						case 19: SetPlayerRaceCheckpoint(playerid, 0, -332.5766,-1517.5343,14.9429, -366.9734,-1462.9573,25.7266, 7.0);
						case 20: SetPlayerRaceCheckpoint(playerid, 1, -366.9734,-1462.9573,25.7266, -366.9734,-1462.9573,25.7266, 7.0);
                    }
                }
				case 2:
				{
                    switch(Cosechas[playerid][ProgresoCosecha])
					{
						case 0: SetPlayerRaceCheckpoint(playerid, 0, -365.5525,-1352.8912,21.1969, -347.8346,-1270.9780,26.3603, 7.0);
						case 1: SetPlayerRaceCheckpoint(playerid, 0, -347.8346,-1270.9780,26.3603, -436.4909,-1285.9847,35.3527, 7.0);
						case 2: SetPlayerRaceCheckpoint(playerid, 0, -436.4909,-1285.9847,35.3527, -524.2065,-1388.1093,14.0612, 7.0);
						case 3: SetPlayerRaceCheckpoint(playerid, 0, -524.2065,-1388.1093,14.0612, -533.2181,-1422.3663,12.4132, 7.0);
						case 4: SetPlayerRaceCheckpoint(playerid, 0, -533.2181,-1422.3663,12.4132, -555.1927,-1335.8824,21.0239, 7.0);
						case 5: SetPlayerRaceCheckpoint(playerid, 0, -555.1927,-1335.8824,21.0239, -475.5691,-1335.3695,28.9320, 7.0);
						case 6: SetPlayerRaceCheckpoint(playerid, 0, -475.5691,-1335.3695,28.9320, -370.0000,-1339.2062,22.9786, 7.0);
						case 7: SetPlayerRaceCheckpoint(playerid, 0, -370.0000,-1339.2062,22.9786, -385.4833,-1382.4688,23.0875, 7.0);
						case 8: SetPlayerRaceCheckpoint(playerid, 0, -385.4833,-1382.4688,23.0875, -524.1917,-1388.2031,14.0580, 7.0);
						case 9: SetPlayerRaceCheckpoint(playerid, 0, -524.1917,-1388.2031,14.0580, -579.2998,-1319.4611,22.5672, 7.0);
						case 10: SetPlayerRaceCheckpoint(playerid, 0, -579.2998,-1319.4611,22.5672, -577.1034,-1419.1190,12.9226, 7.0);
						case 11: SetPlayerRaceCheckpoint(playerid, 0, -577.1034,-1419.1190,12.9226, -402.1465,-1353.3757,24.4278, 7.0);
						case 12: SetPlayerRaceCheckpoint(playerid, 0, -402.1465,-1353.3757,24.4278, -418.2456,-1294.0625,31.6570, 7.0);
						case 13: SetPlayerRaceCheckpoint(playerid, 0, -418.2456,-1294.0625,31.6570, -537.5991,-1326.7606,18.8563, 7.0);
						case 14: SetPlayerRaceCheckpoint(playerid, 0, -537.5991,-1326.7606,18.8563, -519.6217,-1414.4735,13.1769, 7.0);
						case 15: SetPlayerRaceCheckpoint(playerid, 1, -519.6217,-1414.4735,13.1769, -519.6217,-1414.4735,13.1769, 7.0);
                    }
				}
			}
		}
		case 2: //Blueberry
		{
			switch(Cosechas[playerid][RutaCosecha])
			{
				case 1:
				{
					switch(Cosechas[playerid][ProgresoCosecha])
					{
						case 0: SetPlayerRaceCheckpoint(playerid, 0, -126.2398,58.0982,3.1172, -220.0446,94.3392,2.4021, 7.0);
						case 1: SetPlayerRaceCheckpoint(playerid, 0, -220.0446,94.3392,2.4021, -272.4693,-44.4520,2.7906, 7.0);
						case 2: SetPlayerRaceCheckpoint(playerid, 0, -272.4693,-44.4520,2.7906, -197.2084,-79.3804,3.1172, 7.0);
						case 3: SetPlayerRaceCheckpoint(playerid, 0, -197.2084,-79.3804,3.1172, -158.4449,-24.6361,3.0463, 7.0);
						case 4: SetPlayerRaceCheckpoint(playerid, 0, -158.4449,-24.6361,3.0463, -246.2974,26.1492,2.3419, 7.0);
						case 5: SetPlayerRaceCheckpoint(playerid, 0, -246.2974,26.1492,2.3419, -179.2646,79.8465,3.0452, 7.0);
						case 6: SetPlayerRaceCheckpoint(playerid, 0, -179.2646,79.8465,3.0452, -189.9071,-0.9972,3.0371, 7.0);
						case 7: SetPlayerRaceCheckpoint(playerid, 0, -189.9071,-0.9972,3.0371, -217.7651,-79.0095,3.0434, 7.0);
						case 8: SetPlayerRaceCheckpoint(playerid, 0, -217.7651,-79.0095,3.0434, -244.6129,-34.8416,3.0441, 7.0);
						case 9: SetPlayerRaceCheckpoint(playerid, 0, -244.6129,-34.8416,3.0441, -122.0727,101.0684,3.0454, 7.0);
						case 10: SetPlayerRaceCheckpoint(playerid, 0, -122.0727,101.0684,3.0454, -106.7489,144.0846,3.0485, 7.0);
						case 11: SetPlayerRaceCheckpoint(playerid, 0, -106.7489,144.0846,3.0485, -173.6293,165.7723,7.3298, 7.0);
						case 12: SetPlayerRaceCheckpoint(playerid, 0, -173.6293,165.7723,7.3298, -274.3358,-55.1750,3.0505, 7.0);
						case 13: SetPlayerRaceCheckpoint(playerid, 0, -274.3358,-55.1750,3.0505, -40.9733,88.9567,3.0512, 7.0);
						case 14: SetPlayerRaceCheckpoint(playerid, 0, -40.9733,88.9567,3.0512, -40.9733,88.9567,3.0512, 7.0);
                    }
				}
				case 2:
				{
                    switch(Cosechas[playerid][ProgresoCosecha])
					{
						case 0: SetPlayerRaceCheckpoint(playerid, 0, 21.7380,60.7267,3.0485, 64.6343,-30.3969,0.7852, 7.0);
						case 1: SetPlayerRaceCheckpoint(playerid, 0, 64.6343,-30.3969,0.7852, 51.5721,-95.6284,0.5472, 7.0);
						case 2: SetPlayerRaceCheckpoint(playerid, 0, 51.5721,-95.6284,0.5472, -40.4740,-106.9275,3.0461, 7.0);
						case 3: SetPlayerRaceCheckpoint(playerid, 0, -40.4740,-106.9275,3.0461, -10.2124,-9.5856,3.0462, 7.0);
						case 4: SetPlayerRaceCheckpoint(playerid, 0, -10.2124,-9.5856,3.0462, 45.8793,39.9411,2.0257, 7.0);
						case 5: SetPlayerRaceCheckpoint(playerid, 0, 45.8793,39.9411,2.0257, 70.4207,2.5197,0.6218, 7.0);
						case 6: SetPlayerRaceCheckpoint(playerid, 0, 70.4207,2.5197,0.6218, 18.8934,-83.4595,1.6948, 7.0);
						case 7: SetPlayerRaceCheckpoint(playerid, 0, 18.8934,-83.4595,1.6948, 22.0990,60.9488,3.0427, 7.0);
						case 8: SetPlayerRaceCheckpoint(playerid, 0, 22.0990,60.9488,3.0427, 64.8705,-31.4464,0.7353, 7.0);
						case 9: SetPlayerRaceCheckpoint(playerid, 0, 64.8705,-31.4464,0.7353, 50.4737,-95.3511,0.5446, 7.0);
						case 10: SetPlayerRaceCheckpoint(playerid, 0, 50.4737,-95.3511,0.5446, -39.7749,-106.4593,3.0474, 7.0);
						case 11: SetPlayerRaceCheckpoint(playerid, 0, -39.7749,-106.4593,3.0474, -10.2871,-9.6325,3.0445, 7.0);
						case 12: SetPlayerRaceCheckpoint(playerid, 0, -10.2871,-9.6325,3.0445, 45.2227,38.4053,2.1206, 7.0);
						case 13: SetPlayerRaceCheckpoint(playerid, 0,45.2227,38.4053,2.1206, -40.5061,91.5295,3.0462, 7.0);
						case 14: SetPlayerRaceCheckpoint(playerid, 1, -40.5061,91.5295,3.0462, -40.5061,91.5295,3.0462, 7.0);
                    }
				}
			}
		}
    }
}
public CosechasPoints(playerid)
{
	switch(Cosechas[playerid][CosechaLugar])
	{
		case 1: //hacia SF
		{
			switch(Cosechas[playerid][RutaCosecha])
			{
				case 1:
				{
					Cosechas[playerid][ProgresoCosecha] = 0;
					RutaCosechador(playerid);
				}
				case 2:
				{
					Cosechas[playerid][ProgresoCosecha] = 0;
					RutaCosechador(playerid);
				}
			}
		}
		case 2: //Blueberry
		{
			switch(Cosechas[playerid][RutaCosecha])
			{
				case 1:
				{
					Cosechas[playerid][ProgresoCosecha] = 0;
					RutaCosechador(playerid);
				}
				case 2:
				{
					Cosechas[playerid][ProgresoCosecha] = 0;
					RutaCosechador(playerid);
				}
			}
		}
    }
}

public CreateIconsGPS()
{
	new Float:DyGPSPos[2];
	TDGPSCreadoS = 0;
	TDGPSCreadoS ++;
	floatMapa3Da2D(1656.1246,-1883.6947, 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	CrearIconoGPS(TDGPSCreadoS,DyGPSPos[0], DyGPSPos[1], "hud:radar_impound");

	TDGPSCreadoS ++;
	floatMapa3Da2D(2127.5342,-1123.4701, 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	CrearIconoGPS(TDGPSCreadoS,DyGPSPos[0], DyGPSPos[1], "hud:radar_impound");

	TDGPSCreadoS ++;
	floatMapa3Da2D(557.6544,-1260.8588, 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	CrearIconoGPS(TDGPSCreadoS,DyGPSPos[0], DyGPSPos[1], "hud:radar_impound");

	TDGPSCreadoS ++;
	floatMapa3Da2D(-1989.7445,288.3349, 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	CrearIconoGPS(TDGPSCreadoS,DyGPSPos[0], DyGPSPos[1], "hud:radar_impound");

	TDGPSCreadoS ++;
	floatMapa3Da2D(1464.9510,-1780.9888, 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	CrearIconoGPS(TDGPSCreadoS,DyGPSPos[0], DyGPSPos[1], "hud:radar_impound");

	TDGPSCreadoS ++;
	floatMapa3Da2D(1790.4875,-1291.0826, 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	CrearIconoGPS(TDGPSCreadoS,DyGPSPos[0], DyGPSPos[1], "hud:radar_runway");

	TDGPSCreadoS ++;
	floatMapa3Da2D(-1618.9741,56.8790, 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	CrearIconoGPS(TDGPSCreadoS,DyGPSPos[0], DyGPSPos[1], "hud:radar_truck");

	TDGPSCreadoS ++;
	floatMapa3Da2D(113.9482,-151.5917, 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	CrearIconoGPS(TDGPSCreadoS,DyGPSPos[0], DyGPSPos[1], "hud:radar_modGarage");

	TDGPSCreadoS ++;
	floatMapa3Da2D(2229.6833,-1721.4192, 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	CrearIconoGPS(TDGPSCreadoS,DyGPSPos[0], DyGPSPos[1], "hud:radar_gym");

	TDGPSCreadoS ++;
	floatMapa3Da2D(2362.7573,2306.3086, 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	CrearIconoGPS(TDGPSCreadoS,DyGPSPos[0], DyGPSPos[1], "hud:radar_gangN");

	for(new e = 0; e < MAX_PROPIEDADES; e++)
	{
		if(PropInfo[e][pEnUso] == 1)
		{
			if(PropInfo[e][pTipo] == 3 && PropInfo[e][pAbierta] == 1)
			{
				TDGPSCreadoS ++;
				floatMapa3Da2D(PropInfo[e][pPosX], PropInfo[e][pPosY], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[e][0], GPSPOS[e][1]);
				CrearIconoGPS(TDGPSCreadoS, GPSPOS[e][0], GPSPOS[e][1], "hud:radar_girlfriend");
			}
		}
	}
	for(new o = 0; o < MAX_FABRICAS; o++)
	{
		if(Fabricas[o][pEnUso] == 1)
		{
			TDGPSCreadoS ++;
			floatMapa3Da2D(Fabricas[o][pEntradaX], Fabricas[o][pEntradaX], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[o][0], GPSPOS[o][1]);
			CrearIconoGPS(TDGPSCreadoS, GPSPOS[o][0], GPSPOS[o][1], "hud:radar_girlfriend");
			printf("textdraw id3: %d", _:TDGPSCreadoS);
		}
	}

	for(new i; i < sizeof(MapIconPos); i++)
	{
		if(MapIconPos[i][GPSIconTipo] == 1)
		{
			TDGPSCreadoS ++;
			floatMapa3Da2D(MapIconPos[i][GPSIconPos_X],MapIconPos[i][GPSIconPos_Y], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[i][0], GPSPOS[i][1]);
			CrearIconoGPS(TDGPSCreadoS, GPSPOS[i][0], GPSPOS[i][1], "hud:radar_gangY");
		}
	}

	for(new i = 0; i < sizeof(DynamicHousesInfo); i++)
	{
	    if(DynamicHousesInfo[i][int_Tipo] == DH_TIPO_LOVE)
	    {
	        floatMapa3Da2D(DynamicHousesInfo[i][int_Pickup_X], DynamicHousesInfo[i][int_Pickup_Y], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[i][0], GPSPOS[i][1]);
			CrearIconoGPS(TDGPSCreadoS, GPSPOS[i][0], GPSPOS[i][1], "hud:radar_girlfriend");
        }
        if(DynamicHousesInfo[i][int_Tipo] == DH_TIPO_SPRAY)
	    {
	        floatMapa3Da2D(DynamicHousesInfo[i][int_Pickup_X], DynamicHousesInfo[i][int_Pickup_Y], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[i][0], GPSPOS[i][1]);
			CrearIconoGPS(TDGPSCreadoS, GPSPOS[i][0], GPSPOS[i][1], "hud:radar_spray");
        }
		if(DynamicHousesInfo[i][int_Tipo] == DH_TIPO_COMISARIA)
		{
			floatMapa3Da2D(DynamicHousesInfo[i][int_Pickup_X], DynamicHousesInfo[i][int_Pickup_Y], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[i][0], GPSPOS[i][1]);
			CrearIconoGPS(TDGPSCreadoS, GPSPOS[i][0], GPSPOS[i][1], "hud:radar_police");
		}
		if(DynamicHousesInfo[i][int_Tipo] == DH_TIPO_HOSPITAL)
		{
			floatMapa3Da2D(DynamicHousesInfo[i][int_Pickup_X], DynamicHousesInfo[i][int_Pickup_Y], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[i][0], GPSPOS[i][1]);
			CrearIconoGPS(TDGPSCreadoS, GPSPOS[i][0], GPSPOS[i][1], "hud:radar_hostpital");
		}
		if(DynamicHousesInfo[i][int_Tipo] == DH_TIPO_PIZZERIA)
		{
			floatMapa3Da2D(DynamicHousesInfo[i][int_Pickup_X], DynamicHousesInfo[i][int_Pickup_Y], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[i][0], GPSPOS[i][1]);
			CrearIconoGPS(TDGPSCreadoS, GPSPOS[i][0], GPSPOS[i][1], "hud:radar_pizza");
		}
		if(DynamicHousesInfo[i][int_Tipo] == DH_TIPO_TIENDA)
		{
			floatMapa3Da2D(DynamicHousesInfo[i][int_Pickup_X], DynamicHousesInfo[i][int_Pickup_Y], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[i][0], GPSPOS[i][1]);
			CrearIconoGPS(TDGPSCreadoS, GPSPOS[i][0], GPSPOS[i][1], "hud:radar_tshirt");
		}
		if(DynamicHousesInfo[i][int_Tipo] == DH_TIPO_BANCO)
		{
			floatMapa3Da2D(DynamicHousesInfo[i][int_Pickup_X], DynamicHousesInfo[i][int_Pickup_Y], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[i][0], GPSPOS[i][1]);
			CrearIconoGPS(TDGPSCreadoS, GPSPOS[i][0], GPSPOS[i][1], "hud:radar_cash");
		}
	}
	return 1;
}

stock TieneArmaCheat(playerid)
{
	switch(GetPlayerWeapon(playerid))
	{
		case 9: return 1;
		case 17: return 1;
		case 18: return 1;
		case 35: return 1;
		case 36: return 1;
		case 37: return 1;
		case 38: return 1;
		case 39: return 1;
		case 40: return 1;
		case 41: return 1;
		case 42: return 1;
		case 44: return 1;
		case 45: return 1;
    }
    return 0;
}
stock ApagarEstufaUno(f)
{
	new string[256];
    HornoEncendido1[f] = 0;
	KillTimer(Fabricas[f][tiempoh1]);
	DestroyDynamicObject(Fabricas[f][humo1]);
	format(string,sizeof(string),"{DBED16}Cocina: #1{FFFFFF}\nProducción: {3d83ce}%d%%{FFFFFF} completada.\nEstado: %s{FFFFFF}\n\n%s{FFFFFF}%s",Fabricas[f][Porcentaje1],EstadoH(HornoEncendido1[f]),EstadoHo(HornoEncendido1[f]),EstadoCristal(Fabricas[f][Crisol1]));
	UpdateDynamic3DTextLabelText(Fabricas[f][olla1], COLOR_WHITE, string);
	return 1;
}
stock ActualizarLabelMoledores(id,type)
{
	new string[256];
	switch(type) {
	    case 1: {
		    format(string,sizeof(string),"{000cff}Mesa de producción\n{FFFFFF}Cristal molido: {EB0000}%d%%{FFFFFF}\nEstado:%s",Fabricas[id][PorcentajeCocinero1], EstadoCuoco(Fabricas[id][StatoCuoco1]));
			UpdateDynamic3DTextLabelText(Fabricas[id][Cocinero1], COLOR_WHITE, string);
        }
        case 2: {
	        format(string,sizeof(string),"{000cff}Mesa de producción\n{FFFFFF}Cristal molido: {EB0000}%d%%{FFFFFF}\nEstado:%s",Fabricas[id][PorcentajeCocinero2], EstadoCuoco(Fabricas[id][StatoCuoco2]));
			UpdateDynamic3DTextLabelText(Fabricas[id][Cocinero2], COLOR_WHITE, string);
        }
        case 3: {
	        format(string,sizeof(string),"{000cff}Mesa de producción\n{FFFFFF}Cristal molido: {EB0000}%d%%{FFFFFF}\nEstado:%s",Fabricas[id][PorcentajeCocinero3], EstadoCuoco(Fabricas[id][StatoCuoco3]));
			UpdateDynamic3DTextLabelText(Fabricas[id][Cocinero3], COLOR_WHITE, string);
        }
        case 4: {
	        format(string,sizeof(string),"{000cff}Mesa de producción\n{FFFFFF}Cristal molido: {EB0000}%d%%{FFFFFF}\nEstado:%s",Fabricas[id][PorcentajeCocinero4], EstadoCuoco(Fabricas[id][StatoCuoco4]));
			UpdateDynamic3DTextLabelText(Fabricas[id][Cocinero4], COLOR_WHITE, string);
        }
        case 5: {
	        format(string,sizeof(string),"{000cff}Mesa de producción\n{FFFFFF}Cristal molido: {EB0000}%d%%{FFFFFF}\nEstado:%s",Fabricas[id][PorcentajeCocinero5], EstadoCuoco(Fabricas[id][StatoCuoco5]));
			UpdateDynamic3DTextLabelText(Fabricas[id][Cocinero5], COLOR_WHITE, string);
        }
    }
    return 1;
}
stock MostrarBoxLogeo(playerid,integrante)
{
	if(PlayerInfo[playerid][pAlerta] == 0)
	{
	 	PlayerTextDrawSetPreviewModel(playerid, Login[playerid][3], PlayerInfo[integrante][jRopa]);
		new nickname[MAX_PLAYER_NAME];
		format(nickname,sizeof(nickname),"%s",PlayerName(integrante));
	    PlayerTextDrawSetString(playerid, Login[playerid][4], nickname);
		PlayerTextDrawShow(playerid,Login[playerid][0]);
		PlayerTextDrawShow(playerid,Login[playerid][1]);
		PlayerTextDrawShow(playerid,Login[playerid][3]);
		PlayerTextDrawShow(playerid,Login[playerid][2]);
		PlayerTextDrawShow(playerid,Login[playerid][4]);
		PlayerPlaySound(playerid,1054,0.0,0.0,0.0);
	    SetTimerEx("FadeOut", 4000, false, "i",playerid);
    }
}

public BorrarStatsFabrica(f)
{
	printf("Resetear fábrica: %d", f);
	Fabricas[f][pTanqueUno] = 0;
	Fabricas[f][pTanqueDos] = 0;
	Fabricas[f][pTanqueTres] = 0;
	Fabricas[f][pTanqueCuatro] = 0;
	Fabricas[f][pTanqueCinco] = 0;
	Fabricas[f][pTanqueSeis] = 0;
	Fabricas[f][pTanqueSiete] = 0;
	Fabricas[f][pTanqueOcho] = 0;
	Fabricas[f][pTanqueNueve] = 0;
	Fabricas[f][Almacen1] = 0;
	Fabricas[f][Almacen2] = 0;
	Fabricas[f][Almacen3] = 0;
	Fabricas[f][Almacen4] = 0;
	Fabricas[f][Almacen5] = 0;
	Fabricas[f][Almacen6] = 0;
	Fabricas[f][Almacen7] = 0;
	Fabricas[f][Almacen8] = 0;
	Fabricas[f][Almacen9] = 0;
	Fabricas[f][Almacen10] = 0;
	Fabricas[f][pCantidadDinero] = 3000000;
	ActualizarDineroPared(f);
	UpdateAllBagsMoney(f);
	Fabricas[f][pRecortada] = 0;
	Fabricas[f][pUzi] = 0;
	Fabricas[f][pSniper] = 0;
	Fabricas[f][pTec9] = 0;
	Fabricas[f][pSoborno] = 1;
	Fabricas[f][pBanda] = 0;
	Fabricas[f][pChalecos] = 0;
	//Labels
	DestroyDynamic3DTextLabel(Fabricas[f][pLabel]);
	DestroyDynamic3DTextLabel(Fabricas[f][pLabel2]);
	DestroyDynamic3DTextLabel(Fabricas[f][pLabel3]);
	DestroyDynamic3DTextLabel(Fabricas[f][pLabel4]);
	DestroyDynamic3DTextLabel(Fabricas[f][pLabel5]);
	DestroyDynamic3DTextLabel(Fabricas[f][Cocinero1]);
	DestroyDynamic3DTextLabel(Fabricas[f][Cocinero2]);
	DestroyDynamic3DTextLabel(Fabricas[f][Cocinero3]);
	DestroyDynamic3DTextLabel(Fabricas[f][Cocinero4]);
	DestroyDynamic3DTextLabel(Fabricas[f][Cocinero5]);
	DestroyDynamicPickup(Fabricas[f][pPickup]);
	DestroyDynamic3DTextLabel(Fabricas[f][LTanque1]);
	DestroyDynamic3DTextLabel(Fabricas[f][LTanque2]);
	DestroyDynamic3DTextLabel(Fabricas[f][LTanque3]);
	DestroyDynamic3DTextLabel(Fabricas[f][LTanque4]);
	DestroyDynamic3DTextLabel(Fabricas[f][LTanque5]);
	DestroyDynamic3DTextLabel(Fabricas[f][LTanque6]);
	DestroyDynamic3DTextLabel(Fabricas[f][LTanque7]);
	DestroyDynamic3DTextLabel(Fabricas[f][LTanque8]);
	DestroyDynamic3DTextLabel(Fabricas[f][LTanque9]);
	DestroyDynamic3DTextLabel(Fabricas[f][olla1]);
	DestroyDynamic3DTextLabel(Fabricas[f][olla2]);
	DestroyDynamic3DTextLabel(Fabricas[f][olla3]);
	DestroyDynamicObject(Fabricas[f][pPuerta]);
	Fabricas[f][MedicoContratado] = 0;
	DestroyActor(Fabricas[f][ActorMedico]);
	DestroyDynamicObject(Fabricas[f][humo1]);
	DestroyDynamicObject(Fabricas[f][humo2]);
	DestroyDynamicObject(Fabricas[f][humo3]);
	Fabricas[f][Crisol1] = 0;
	Fabricas[f][Crisol2] = 0;
	Fabricas[f][Crisol3] = 0;
	KillTimer(Fabricas[f][tiempoh1]);
	KillTimer(Fabricas[f][tiempoh2]);
	KillTimer(Fabricas[f][tiempoh3]);
	KillTimer(Fabricas[f][tiempoc1]);
	KillTimer(Fabricas[f][tiempoc2]);
	KillTimer(Fabricas[f][tiempoc3]);
	KillTimer(Fabricas[f][tiempoc4]);
	KillTimer(Fabricas[f][tiempoc5]);
	Fabricas[f][Porcentaje1] = 0;
	Fabricas[f][Porcentaje2] = 0;
	Fabricas[f][Porcentaje3] = 0;
	DestroyVehicle(Fabricas[f][Auto1F]);
	DestroyVehicle(Fabricas[f][Auto2F]);

	new day,month,year;
	getdate(day,month,year);
	Fabricas[f][FechaPaga] = day;
	Fabricas[f][bolsospagados] = 0;
	Fabricas[f][PagarActiva] = 0;
	DestroyDynamicObject(Fabricas[f][Meta1][0]);
	DestroyDynamicObject(Fabricas[f][Meta1][1]);
	DestroyDynamicObject(Fabricas[f][Meta2][0]);
	DestroyDynamicObject(Fabricas[f][Meta2][1]);
	DestroyDynamicObject(Fabricas[f][Meta3][0]);
	DestroyDynamicObject(Fabricas[f][Meta3][1]);
	DestroyDynamicObject(Fabricas[f][Meta4][0]);
	DestroyDynamicObject(Fabricas[f][Meta4][1]);
	DestroyDynamicObject(Fabricas[f][Meta5][0]);
	DestroyDynamicObject(Fabricas[f][Meta5][1]);
	DestroyDynamicObject(Fabricas[f][Meta6][0]);
	DestroyDynamicObject(Fabricas[f][Meta6][1]);
	DestroyDynamicObject(Fabricas[f][Meta7][0]);
	DestroyDynamicObject(Fabricas[f][Meta7][1]);
	DestroyDynamicObject(Fabricas[f][Meta8][0]);
	DestroyDynamicObject(Fabricas[f][Meta8][1]);
	DestroyDynamicObject(Fabricas[f][Meta9][0]);
	DestroyDynamicObject(Fabricas[f][Meta9][1]);
	DestroyDynamicObject(Fabricas[f][Meta10][0]);
	DestroyDynamicObject(Fabricas[f][Meta10][1]);
	ResetearArmas(f);
	Fabricas[f][PorcentajeCocinero1] = 0;
	Fabricas[f][PorcentajeCocinero2] = 0;
	Fabricas[f][PorcentajeCocinero3] = 0;
	Fabricas[f][PorcentajeCocinero4] = 0;
	Fabricas[f][PorcentajeCocinero5] = 0;
	Fabricas[f][StatoCuoco1] = 0;
	Fabricas[f][StatoCuoco2] = 0;
	Fabricas[f][StatoCuoco3] = 0;
	Fabricas[f][StatoCuoco4] = 0;
	Fabricas[f][StatoCuoco5] = 0;
	DestroyActor(Fabricas[f][ActorCocinero1]);
	DestroyActor(Fabricas[f][ActorCocinero2]);
	DestroyActor(Fabricas[f][ActorCocinero3]);
	DestroyActor(Fabricas[f][ActorCocinero4]);
	DestroyActor(Fabricas[f][ActorCocinero5]);
	Fabricas[f][TieneCocinero1] = 0;
	Fabricas[f][TieneCocinero2] = 0;
	Fabricas[f][TieneCocinero3] = 0;
	Fabricas[f][TieneCocinero4] = 0;
	Fabricas[f][TieneCocinero5] = 0;
	DestroyDynamicObject(Fabricas[f][Bloque1]);
	DestroyDynamicObject(Fabricas[f][Bloque2]);
	DestroyDynamicObject(Fabricas[f][Bloque3]);
	DestroyDynamicObject(Fabricas[f][Bloque4]);
	DestroyDynamicObject(Fabricas[f][Bloque5]);
	Fabricas[f][Termino1] = 0;
	Fabricas[f][Termino2] = 0;
	Fabricas[f][Termino3] = 0;
	Fabricas[f][Termino4] = 0;
	Fabricas[f][Termino5] = 0;
	//Estado de los NPC
	Fabricas[f][EstadoMedico] = 0;
	Fabricas[f][EstadoG1] = 0;
	Fabricas[f][EstadoG2] = 0;
	Fabricas[f][EstadoG3] = 0;
	Fabricas[f][EstadoCoc1] = 0;
	Fabricas[f][EstadoCoc2] = 0;
	Fabricas[f][EstadoCoc3] = 0;
	Fabricas[f][EstadoCoc4] = 0;
	Fabricas[f][EstadoCoc5] = 0;
	Fabricas[f][TieneGuardia1] = 0;
	Fabricas[f][TieneGuardia2] = 0;
	Fabricas[f][TieneGuardia3] = 0;
	Fabricas[f][TieneGuardia4] = 0;
	Fabricas[f][TieneGuardia5] = 0;
	Fabricas[f][ActorGuardia1] = 0;
	Fabricas[f][ActorGuardia2] = 0;
	Fabricas[f][ActorGuardia3] = 0;
	Fabricas[f][ActorGuardia4] = 0;
	Fabricas[f][ActorGuardia5] = 0;
	CargarFabricass(f);
}
public EmpezarMision()
{
	if(Ladrones == MAX_LADRONES && Guardias == MAX_GUARDIAS && Mafiosos == MAX_MAFIOSOS )
	{
		SetTimer("EmpezarMision2",5000,0);
		YaLadron = 0;
		YaGuardias = 0;
		EstaEnMision = 1;
		for(new i, j = GetPlayerPoolSize(); i <= j; i++)
		{
			TextDrawHideForPlayer(i, EsperandoI);
			TextDrawHideForPlayer(i, EsperandoI2);
			TextDrawHideForPlayer(i, EsperandoI3);
			if(Grupo[i] > 0 && IsPlayerConnected(i))
			{
			    HidePlayerProgressBar(i, Progressbar[i][Hambre]);
				HidePlayerProgressBar(i, Progressbar[i][Sed]);
				EnAsalto[i] = 1;
				LimpiarChat(i, 20, 1);
				TextDrawShowForPlayer(i,LuegoDeM);
				TextDrawShowForPlayer(i,LuegoDeM1);
				if(Grupo[i] == 1)
				{
					InterpolateCameraPos(i, 2306.771972, -2015.516601, 16.900629, 2221.478027, -2020.359375, 14.932630, 3000);
					SetPlayerColor(i,0xB81E0D00);
				 	SetPlayerInterior(i, 0);
				 	SetPlayerVirtualWorld(i, 0);
					new Lrand;
					Lrand = random(sizeof(LadronSpawn));
				 	SetPlayerPos(i, LadronIniciando[Lrand][0], LadronIniciando[Lrand][1], LadronIniciando[Lrand][2]);
				}
				if(Grupo[i] == 2)
				{
					SetPlayerInterior(i, 0);
					SetPlayerVirtualWorld(i, 0);
					new Grand;
					Grand = random(sizeof(LadronSpawn));
					SetPlayerPos(i, GuardiaIniciando[Grand][0], GuardiaIniciando[Grand][1], GuardiaIniciando[Grand][2]);
					InterpolateCameraPos(i, 2033.643676, 1043.637451, 41.826084, 2045.229858, 1004.756896, 19.382585, 5000);
					SetPlayerColor(i,0x1E16F700);
				}
				if(Grupo[i] == 3)
				{
 					SetPlayerInterior(i, 0);
 					SetPlayerVirtualWorld(i, 0);
					new Grand;
 					Grand = random(sizeof(LadronSpawn));
 					SetPlayerPos(i, GuardiaIniciando[Grand][0], GuardiaIniciando[Grand][1], GuardiaIniciando[Grand][2]);
					InterpolateCameraPos(i, 2033.643676, 1043.637451, 41.826084, 2045.229858, 1004.756896, 19.382585, 5000);
					SetPlayerColor(i,0x1EB80D00);
				}
				SetTimerEx("Reproducir_Robo",4000,false,"d",i);
			}
		}
	}
	else
	{
		EstaEnMision = 0;
		format(PuntosMision,200,"");
		for(new u, j = GetPlayerPoolSize(); u <= j; u++)
		{
			if(Grupo[u] > 0)
			{
				new logroo[128];
				format(logroo,128,"Aceptaron {d42a00}%d{FFFFFF} personas de las {00CC00}%d{FFFFFF} necesarias, aguarda mientras formamos el grupo.",Ladrones+Guardias+Mafiosos,MAX_MAFIOSOS+MAX_LADRONES+MAX_GUARDIAS);
				SendClientMessage(u,0xFFFFFFFF,logroo);
				HideDialog(u);
				YaMandaron[u] = 0;
				QueMarco[u] = 0;
			}
		}
	}
}
public CargarAsalto()
{
	new ContadorLadrones[12],ContadorGuardias[12],ContadorMafiosos[12];
	//LADRON
	new str_numbers[10];
	for(new x=0;x<MAX_PLAYERS;x++)
	{
		if(RestaLadron > 0)
		{
			if(RestaLadron < 60)	format(str_numbers, sizeof(str_numbers), "00:%s", NumeroEntero(RestaLadron));
			else if(RestaLadron >= 60)	format(str_numbers, sizeof(str_numbers), "%s:%s",NumeroEntero(RestaLadron/60), NumeroEntero(RestaLadron%(60)));
			PlayerTextDrawSetString(x,ContadorAsalto[x], str_numbers);
		}
		if(RestaGuardia > 0)
		{
			if(RestaGuardia < 60)	format(str_numbers, sizeof(str_numbers), "00:%s", NumeroEntero(RestaGuardia));
			else if(RestaGuardia >= 60)	format(str_numbers, sizeof(str_numbers), "%s:%s",NumeroEntero(RestaGuardia/60), NumeroEntero(RestaGuardia%(60)));
			PlayerTextDrawSetString(x,ContadorAsalto[x], str_numbers);
		}
		if(RestaMafioso > 0)
		{
			if(RestaMafioso < 60)	format(str_numbers, sizeof(str_numbers), "00:%s", NumeroEntero(RestaMafioso));
			else if(RestaMafioso >= 60)	format(str_numbers, sizeof(str_numbers), "%s:%s",NumeroEntero(RestaMafioso/60), NumeroEntero(RestaMafioso%(60)));
			PlayerTextDrawSetString(x,ContadorAsalto[x], str_numbers);
		}
		if(TiempoEspera > 0)
		{
			if(TiempoEspera < 60)		format(str_numbers, sizeof(str_numbers), "00:%s", NumeroEntero(TiempoEspera));
			else if(TiempoEspera >= 60)	format(str_numbers, sizeof(str_numbers), "%s:%s",NumeroEntero(TiempoEspera/60), NumeroEntero(TiempoEspera%(60)));
			PlayerTextDrawSetString(x,ContadorAsalto[x], str_numbers);
		}
 	}

	if(Ladrones == MAX_LADRONES) format(ContadorLadrones, sizeof(ContadorLadrones), "~g~%d/%d", Ladrones,MAX_LADRONES);
	else format(ContadorLadrones, sizeof(ContadorLadrones), "~r~%d/%d", Ladrones,MAX_LADRONES);

	if(Guardias == MAX_GUARDIAS) format(ContadorGuardias, sizeof(ContadorGuardias), "~g~%d/%d", Guardias,MAX_GUARDIAS);
	else format(ContadorGuardias, sizeof(ContadorGuardias), "~r~%d/%d", Guardias,MAX_GUARDIAS);

	if(Mafiosos == MAX_MAFIOSOS) format(ContadorMafiosos, sizeof(ContadorMafiosos), "~g~%d/%d", Mafiosos,MAX_MAFIOSOS);
	else format(ContadorMafiosos, sizeof(ContadorMafiosos), "~r~%d/%d", Mafiosos,MAX_MAFIOSOS);

	for(new i=0;i<MAX_PLAYERS;i++)
	{
		new score = GetPlayerScore(i);
		if(TiempoAceptar[i] == 0 && MandoAceptar[i] == 1)
		{
			if(Grupo[i] == 1) Ladrones -= 1;
			if(Grupo[i] == 2) Guardias -= 1;
			if(Grupo[i] == 3) Mafiosos -= 1;

			MandoAceptar[i] = 0;
			Grupo[i] = 0;
			TextDrawHideForPlayer(i, EsperandoMision1);
			TextDrawHideForPlayer(i, EsperandoMision2);
			HideDialog(i);
			SendClientMessage(i,-1,"La misión fue rechazada automáticamente porque no respondiste a tiempo.");
		}
		if(Grupo[i] > 0 && EnAsalto[i] == 0)
		{
			new str6[120];
			TextDrawShowForPlayer(i, EsperandoMision1);
			format(str6,sizeof(str6),"~>~~h~Buscando integrantes para ~y~Asalto al blindado~w~ - Ladrones: %s~w~ - Guardias: %s~w~ Mafiosos: %s",	ContadorLadrones, ContadorGuardias, ContadorMafiosos);
			TextDrawSetString(EsperandoMision2, str6);
			TextDrawShowForPlayer(i, EsperandoMision2);
		}
		if(score > 0 && EnAsalto[i] > 0 && YaPuedeCargarValores[i] == 1)
		{
			new str[64];
			TextDrawHideForPlayer(i, Tablero);
			TextDrawHideForPlayer(i, Tablero1);
			format(str,sizeof(str),"~>~ Ladrones: ~r~%d~w~ - Guardias: ~b~%d~w~ - Mafiosos: ~g~%d",Ladrones,Guardias,Mafiosos);
			TextDrawSetString(Tablero1, str);
			TextDrawShowForPlayer(i, Tablero);
			TextDrawShowForPlayer(i, Tablero1);
		}
		if(score > 0 && MandoAceptar[i] > 0)
		{
			new str[64];
			TextDrawHideForPlayer(i, Tablero);
			TextDrawHideForPlayer(i, Tablero1);
			format(str,sizeof(str),"~>~ Ladrones: ~r~%d~w~ - Guardias: ~b~%d~w~ - Mafiosos: ~g~%d",Ladrones,Guardias,Mafiosos);
			TextDrawSetString(Tablero1, str);
			TextDrawShowForPlayer(i, Tablero);
			TextDrawShowForPlayer(i, Tablero1);
		}
		if(TiempoEspera > 0 && Grupo[i] > 0 && YaMandaron[i] == 1)
		{
			TextDrawHideForPlayer(i, EsperandoI3);
			TextDrawShowForPlayer(i, EsperandoI3);
			TextDrawShowForPlayer(i, EsperandoI2);
			TextDrawShowForPlayer(i, EsperandoI);
		}
		if(TiempoEspera == 0 && Grupo[i] > 0 && YaMandaron[i] == 1 || Grupo[i] > 0 && YaMandaron[i] == 0)
		{
			TextDrawHideForPlayer(i, EsperandoI3);
			TextDrawHideForPlayer(i, EsperandoI2);
			TextDrawHideForPlayer(i, EsperandoI);
		}
		if(RestaLadron == 0 && EmpezoMision == 2 || RestaLadron == 0 && CorrerTiempo == 1 && Bloqueo == 0)
		{
			EmpezoMision = 1;
			CorrerTiempo = 0;
			LadronesFallido();
		}
		if(RestaGuardia == 0 && CorrerTiempo == 1)
		{
			EmpezoMision = 1;
			CorrerTiempo = 0;
			GuardiasFallido();
		}
		if(TiempoEspera > 0 && Grupo[i] > 0 && YaMandaron[i] == 0)
		{
   			PlayerTextDrawShow(i, ContadorAsalto[i]);
		}

		if(Grupo[i] == 0 && YaMandaron[i] == 0) PlayerTextDrawHide(i, ContadorAsalto[i]);
		if(TiempoEspera == 0 || Grupo[i] > 0 && YaMandaron[i] == 1 && QueMarco[i] > 0) PlayerTextDrawHide(i, ContadorAsalto[i]);

		if(score > 0 && RestaLadron > 0 && EnAsalto[i] == 1 && Grupo[i] == 1)
		{
			PlayerTextDrawShow(i, ContadorAsalto[i]);
		}
		if(score > 0 && RestaGuardia > 0 && EnAsalto[i] == 1 && Grupo[i] == 2)
		{
			PlayerTextDrawShow(i, ContadorAsalto[i]);
		}
		if(score > 0 && RestaMafioso > 0 && EnAsalto[i] == 1 && Grupo[i] == 3)
		{
			PlayerTextDrawShow(i, ContadorAsalto[i]);
		}
		if(score > 0 && EnAsalto[i] == 0)
		{
			TextDrawHideForPlayer(i, Tablero);
			TextDrawHideForPlayer(i, Tablero1);
			PlayerTextDrawHide(i, ContadorAsalto[i]);
		}
		if(RestaLadron == 0 && Grupo[i] == 1 || RestaMafioso == 0 && Grupo[i] == 3 || RestaGuardia == 0 && Grupo[i] == 2)
		{
			PlayerTextDrawHide(i, ContadorAsalto[i]);
		}
		if(Grupo[i] > 0 && EnAsalto[i] == 1)
		{
			TextDrawHideForPlayer(i, EsperandoMision1);
			TextDrawHideForPlayer(i, EsperandoMision2);
		}
	}
}
public AbrirBoveda()
{
	BobedaAbierta = 1;
	YaGuardias = 0;
	MoveObject(PuertaN2,1407.5249, 490.9861, 1009.6200,0.3,0.0000, 0.0000, 0.0000);
	MoveObject(Bobeda,1400.6600, 514.1200, 1001.6605,0.1,0.0000, 0.0000, 90.0000);
	RestaGuardia = 90;
	SetTimer("EntregaElCamion",88000,false);
	for(new i, j = GetPlayerPoolSize(); i <= j; i++)
	{
     	if(PlayerInfo[i][pSonidos] == 0)
		{
			if(IsPlayerInRangeOfPoint(i,15.0,1400.6600, 514.1200, 1001.6605))
			{
				PlayAudioStreamForPlayer(i,"http://"AUDIO_BOVEDA"",1400.6600, 514.1200, 1001.6605,20.0,1);
			}
			if(Grupo[i] == 2 && EnAsalto[i] == 1)
			{
				MandarMensajeAsalto(i, "Agarra ~g~un bolso con dinero~w~.");
				SendClientMessage(i, 0xF6FA84FF, "Entra a la bóveda y agarra un bolso con dinero.");
	    	}
        }
	}
}

public MandarMafiosos()
{
	MarcarCoche2 = 1;
	SetVehicleVirtualWorld(200,1);
	SetVehicleVirtualWorld(201,1);
	RestaMafioso = 960;
	for(new i, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(Grupo[i] == 3 && EnAsalto[i] == 1)
		{
			MandarMensajeAsalto(i,"Ayuda a ~g~proteger~w~ el cami¦n blindado.");
			SetPlayerPos(i, 1905.2821,964.6537,10.8203);
			SetPlayerFacingAngle(i, 186.8965);
			SetPlayerInterior(i, 0);
			SetPlayerVirtualWorld(i, 1);
			SendClientMessage(i, COLOR_WHITE, "Están atacando el blindado del casino, ve a ayudar a los guardias.");
			SendClientMessage(i, COLOR_WHITE, "El dinero tiene que llegar a la mansión del jefe.");
		}
	}
}
public Veaemboscada()
{
	RestaLadron = 180;
	YaLadron = 0;
	EmpezoMision = 2;
	for(new i, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(Grupo[i] == 1 && EnAsalto[i] == 1)
		{
			MandarMensajeAsalto(i,"Ve al punto de la ~r~emboscada~w~.");
			SetPlayerPos(i, 2249.9270,-2013.7861,13.5442);
			SetPlayerFacingAngle(i, 172.2735);
			SetPlayerInterior(i, 0);
			SetPlayerVirtualWorld(i, 1);
			SetPlayerCheckpoint(i,1162.2131,-970.9263,41.1058, 8.0);
			SetCameraBehindPlayer(i);
 		}
	}
}

public EntregaElCamion()
{
	if(BolsasCamion == 4)
	{
		SetVehicleVirtualWorld(197, 3);
		RestaMafioso = 120;
		SetTimer("MandarMafiosos",118000,0);
		MoveObject(PuertaArmas,1418.0137, 490.5446, 1007.6365,0.3,0.00000, 0.00000, 3.1800);
		for(new i, j = GetPlayerPoolSize(); i <= j; i++)
		{
			if(Grupo[i] == 2 && EnAsalto[i] == 1)
			{
				MandarMensajeAsalto(i,"Entrega el ~g~dinero~w~ en el ~y~deposito~w~ de los Santos.");
				SetPlayerCheckpoint(i,1908.3149,935.6036,10.9811, 10.0);
				RestaGuardia = 300;
				SetPlayerPos(i, 1905.2821,964.6537,10.8203);
				SetPlayerFacingAngle(i, 186.8965);
				SetPlayerInterior(i, 0);
				SetPlayerVirtualWorld(i, 1);
			}
			if(Grupo[i] == 3 && EnAsalto[i] == 1)
			{
   				MandarMensajeAsalto(i,"Ve a buscar las ~r~armas~w~.");
				SendClientMessage(i, COLOR_WHITE, "Ve a la sala de armamentos a buscar algunas armas.");
			}
		}
	}
	else GuardiasFallido();
}

public ColocarC4()
{
	for(new i, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(Grupo[i] == 1 && IsPlayerConnected(i))
		{
			MandarMensajeAsalto(i,"Ve al cami¦n a ~y~/sacar bolso~w~ de ~g~Dinero~w~.");
		}
	}
}

public VerificarMision()
{
	//--------------------
	if(Ladrones == MAX_LADRONES && Guardias == MAX_GUARDIAS && Mafiosos == MAX_MAFIOSOS && EstaEnMision == 0)
	{
		EstaEnMision = 1;
		SetTimer("MandarSoli",1000,0);
	}
}

public MandarSoli()
{
	SetTimer("EmpezarMision",15000,0);
	TiempoEspera = 15;
	for(new i; i < MAX_PLAYERS; i++)
	{
		if(Grupo[i] > 0)
		{
			new stringg[256];
			PlayerPlaySound(i,1054,0.0,0.0,0.0);
			format(stringg,256,"{FFFFFF}Se han conseguido los integrantes para iniciar la misión.\n\n{81C7DE}¿Quieres unirte?{FFFFFF} Tienes {DBED15}15 segundos {FFFFFF}para decidir.", TiempoAceptar[i]);
			ShowPlayerDialog(i, DMISION, DIALOG_STYLE_MSGBOX, "{FFFFFF}Misión:{81C7DE} Asalto al blindado", stringg, "Si","No");
			TiempoAceptar[i] = 15;
			MandoAceptar[i]  = 1;
		}
	}
}

public EmpezarMision2()
{
	new string[200],string2[200],string3[200];
	SetTimer("EmpezarMision3",10000,0);
	format(PuntosMision,200,"");
	for(new i, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(Grupo[i] > 0 && IsPlayerConnected(i))
		{
			LimpiarChat(i, 20, 1);
			SetPlayerHealth(i,100);
			ResetPlayerWeapons(i);
			TextDrawHideForPlayer(i,LuegoDeM);
			TextDrawHideForPlayer(i,LuegoDeM1);
			TextDrawShowForPlayer(i,TDMision0);
			TextDrawShowForPlayer(i,TDMision1);
			TextDrawShowForPlayer(i,TDMision2);
			TextDrawShowForPlayer(i,TDMision3);
			TextDrawShowForPlayer(i,TDMision4);
			TextDrawShowForPlayer(i,TDMision5);
			TextDrawShowForPlayer(i,TDMision6);
			YaMandaron[i] = 0;
			QueMarco[i] = 0;
			for(new e=0;e<MAX_PLAYERS;e++)
			{
				if(Grupo[e] == 1 && SalioTD[e] == 0 && EnAsalto[e] == 1)
				{
					format(string,500,"%s ~r~%s(%d)~w~,",string,PlayerName(e),e);
					SalioTD[e] = 1;
				}
				if(Grupo[e] == 2 && SalioTD[e] == 0 && EnAsalto[e] == 1)
				{
					format(string2,500,"%s ~b~%s(%d)~w~,",string2,PlayerName(e),e);
					SalioTD[e] = 1;
				}
				if(Grupo[e] == 3 && SalioTD[e] == 0 && EnAsalto[e] == 1)
				{
					format(string3,500,"%s ~g~%s(%d)~w~,",string3,PlayerName(e),e);
					SalioTD[e] = 1;
				}
			}
			new str2[264];
			format(str2, 264, "Ladrones: %s", string);
			TextDrawSetString(TDMision7, str2);
			new str3[264];
			format(str3, 264, "Guardias: %s", string2);
			TextDrawSetString(TDMision8, str3);
			new str4[264];
			format(str4, 264, "Mafiosos: %s", string3);
			TextDrawSetString(TDMision9, str4);
			TextDrawShowForPlayer(i,TDMision7);
			TextDrawShowForPlayer(i,TDMision8);
			TextDrawShowForPlayer(i,TDMision9);

			if(Grupo[i] == 1)
			{
				InterpolateCameraPos(i, 2306.771972, -2015.516601, 16.900629, 2221.478027, -2020.359375, 14.932630, 3000);
				InterpolateCameraLookAt(i, 2301.859863, -2015.488037, 15.967078, 2223.672607, -2015.888427, 14.491798, 3000);
			}
			if(Grupo[i] == 2)
			{
				InterpolateCameraPos(i, 2022.742431, 1112.645385, 46.384201, 2054.322021, 1010.330139, 23.683214, 4000);
				InterpolateCameraLookAt(i, 2022.807739, 1107.728393, 45.479373, 2049.584228, 1010.043212, 22.111423, 4000);
			}
			if(Grupo[i] == 3)
			{
				InterpolateCameraPos(i, 2022.742431, 1112.645385, 46.384201, 2054.322021, 1010.330139, 23.683214, 4000);
				InterpolateCameraLookAt(i, 2022.807739, 1107.728393, 45.479373, 2049.584228, 1010.043212, 22.111423, 4000);
			}
		}
	}
	return 1;
}

public EmpezarMision3()
{
	RestaLadron = 60;
	RestaGuardia = 60;
	CorrerTiempo = 1;
	for(new i, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(Grupo[i] > 0 && IsPlayerConnected(i) && EnAsalto[i] == 1)
		{
		    YaPuedeCargarValores[i] = 1;
			QuitarArmas2(i);
			ShowPlayerProgressBar(i, Progressbar[i][Hambre]);
			ShowPlayerProgressBar(i, Progressbar[i][Sed]);
			SalioTD[i] = 0;
			TextDrawHideForPlayer(i,LuegoDeM);
			TextDrawHideForPlayer(i,LuegoDeM1);
			TextDrawHideForPlayer(i,TDMision0);
			TextDrawHideForPlayer(i,TDMision1);
			TextDrawHideForPlayer(i,TDMision2);
			TextDrawHideForPlayer(i,TDMision3);
			TextDrawHideForPlayer(i,TDMision4);
			TextDrawHideForPlayer(i,TDMision5);
			TextDrawHideForPlayer(i,TDMision6);
			TextDrawHideForPlayer(i,TDMision7);
			TextDrawHideForPlayer(i,TDMision8);
			TextDrawHideForPlayer(i,TDMision9);

			LimpiarChat(i, 10, 1);
			if(Grupo[i] == 1)
			{
				new Lrand;
				Lrand = random(sizeof(LadronSpawn));
				SetPlayerPos(i, LadronSpawn[Lrand][0], LadronSpawn[Lrand][1], LadronSpawn[Lrand][2]);
				SetPlayerFacingAngle(i, 274.1495);
				SetPlayerInterior(i, 1);
				SetPlayerVirtualWorld(i, 1);
				MandarMensajeAsalto(i,"Ve al estacionamiento y ~y~espera~w~ un momento.");
				SetPlayerCheckpoint(i,1415.0624,573.1929,1000.9595, 5.0);
				SetCameraBehindPlayer(i);
				SendClientMessage(i, COLOR_WHITE, "Ve al estacionamiento a planear el robo.");
			}
			if(Grupo[i] == 2 && EnAsalto[i] == 1)
			{
				new Grand;
				Grand = random(sizeof(GuardiaSpawn));
				SetPlayerPos(i, GuardiaSpawn[Grand][0], GuardiaSpawn[Grand][1], GuardiaSpawn[Grand][2]);
				SetPlayerSkin(i, 71);
				SetPlayerFacingAngle(i, 247.7326);
				SetPlayerInterior(i, 1);
				SetPlayerVirtualWorld(i, 1);
				MandarMensajeAsalto(i,"Espera que abran la ~y~b¦veda~w~.");
				SetPlayerCheckpoint(i,1401.7522,496.2577,1000.0804, 5.0);
				SetCameraBehindPlayer(i);
				SendClientMessage(i, 0xF6FA84FF, "Ve al subsuelo y esperar hasta que abra la bóveda.");
				SendClientMessage(i, 0xF6FA84FF, "Tienes 1 minuto para hacerlo o de lo contrario serás expulsado.");
				BolsasDinero = 4;
			}
			if(Grupo[i] == 3 && EnAsalto[i] == 1)
			{
				new Grand;
				Grand = random(sizeof(GuardiaSpawn));
				SetPlayerPos(i, GuardiaSpawn[Grand][0], GuardiaSpawn[Grand][1], GuardiaSpawn[Grand][2]);
				SetPlayerFacingAngle(i, 247.7326);
				SetPlayerInterior(i, 1);
				SetPlayerVirtualWorld(i, 1);
				MandarMensajeAsalto(i,"Espera a que los ~b~guardias~w~ hagan su parte.");
				SetCameraBehindPlayer(i);
				SendClientMessage(i, 0xF6FA84FF, "Aguarda 3 minutos hasta que los guardias lleven el dinero al camión.");
			}
		}
	}
}

public FadeOut(playerid)
{
	PlayerTextDrawHide(playerid,Login[playerid][0]);
	PlayerTextDrawHide(playerid,Login[playerid][1]);
	PlayerTextDrawHide(playerid,Login[playerid][3]);
	PlayerTextDrawHide(playerid,Login[playerid][2]);
	PlayerTextDrawHide(playerid,Login[playerid][4]);
	new caca = 1;
	if(caca == 1) return 1;
	if(countico[playerid] < 5) SetTimerEx("FadeOut", 400, false, "i",playerid);
	countico[playerid] ++;
	if(countico[playerid] == 1)
	{
	    PlayerTextDrawColor(playerid, Login[playerid][0], 0x000000FF);
		PlayerTextDrawColor(playerid, Login[playerid][1], 0x000000FF);
		PlayerTextDrawColor(playerid, Login[playerid][2], 0x000000FF);
		PlayerTextDrawColor(playerid, Login[playerid][3], 0x000000FF);
		PlayerTextDrawColor(playerid, Login[playerid][4], 0x000000FF);
	}
	if(countico[playerid] == 2)
	{
        PlayerTextDrawColor(playerid, Login[playerid][0], 0x000000BB);
		PlayerTextDrawColor(playerid, Login[playerid][1], 0x000000BB);
		PlayerTextDrawColor(playerid, Login[playerid][2], 0x000000BB);
		PlayerTextDrawColor(playerid, Login[playerid][3], 0x000000BB);
		PlayerTextDrawColor(playerid, Login[playerid][4], 0x000000BB);
	}
	if(countico[playerid] == 3)
	{
        PlayerTextDrawColor(playerid, Login[playerid][0], 0x00000077);
		PlayerTextDrawColor(playerid, Login[playerid][1], 0x00000077);
		PlayerTextDrawColor(playerid, Login[playerid][2], 0x00000077);
		PlayerTextDrawColor(playerid, Login[playerid][3], 0x00000077);
		PlayerTextDrawColor(playerid, Login[playerid][4], 0x00000077);
	}
	if(countico[playerid] == 4)
	{
        PlayerTextDrawColor(playerid, Login[playerid][0], 0x00000033);
		PlayerTextDrawColor(playerid, Login[playerid][1], 0x00000033);
		PlayerTextDrawColor(playerid, Login[playerid][2], 0x00000033);
		PlayerTextDrawColor(playerid, Login[playerid][3], 0x00000033);
		PlayerTextDrawColor(playerid, Login[playerid][4], 0x00000033);
	}
	if(countico[playerid] == 5)
	{
        PlayerTextDrawColor(playerid, Login[playerid][0], 0x00000000);
		PlayerTextDrawColor(playerid, Login[playerid][1], 0x00000000);
		PlayerTextDrawColor(playerid, Login[playerid][2], 0x00000000);
		PlayerTextDrawColor(playerid, Login[playerid][3], 0x00000000);
		PlayerTextDrawColor(playerid, Login[playerid][4], 0x00000000);
		countico[playerid] = 0;
	}
	return 1;
}
stock QuitarDineroFabrica(f,cantidad)
{
    Fabricas[f][pCantidadDinero] = Fabricas[f][pCantidadDinero]-cantidad;
	ActualizarDineroPared(f);
	UpdateAllBagsMoney(f);
	GuardarFabrica(f);
}
stock DarDineroFabrica(f,cantidad)
{
    Fabricas[f][pCantidadDinero] = Fabricas[f][pCantidadDinero]+cantidad;
	ActualizarDineroPared(f);
	UpdateAllBagsMoney(f);
	GuardarFabrica(f);
}
stock GuardarFBarril(playerid,f)
{
    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CARRY);
    TieneBarril[playerid] = 0;
    GuardarFabrica(f);
}
stock GuardarCajaFabrica(playerid,f,type)
{
	switch(type)
	{
	    case 0: { TieneCajaMeta[playerid] = 0; RemovePlayerAttachedObject(playerid, 2); }
	    case 1: { TieneCajaMeta[playerid] = 1; SetPlayerAttachedObject(playerid, 2, 1271, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000); }
    }
    GuardarFabrica(f);
}
stock PosicionGPS(playerid,Float:x,Float:y,Float:z,range)
{
    SendClientMessage(playerid, -1, "Se ha marcado en el mapa un {FF0000}punto rojo{FFFFFF} en la ubicación seleccionada.");
    PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
    PuntoGPSX[playerid] = x;
    PuntoGPSY[playerid] = y;
    PuntoGPSZ[playerid] = z;
    SetPlayerCheckpoint(playerid, x,y,z, range);
    TieneGPSActivo[playerid] = 1;
	return 1;
}
stock EstaEnAutoVent4(vehicleid,playerid)
{
	for(new i=0; i<MAX_PLAYERS; i++)
    {
    	if(IsPlayerInVehicle(i, vehicleid))
        {
            SendClientMessage(playerid,-1,"Encontramos una persona dentro del vehículo, no podemos llevarlo a la concesionaria.");
            SendClientMessage(playerid,-1,"Llama a la policía si crees que tu vehículo ha sido robado.");
			return 0;
        }
        return 1;
    }
    return 0;
}

stock EstaEnVehiculoVenta(vehicleid,playerid)
{
	for(new i=0; i<MAX_PLAYERS; i++)
    {
    	if(IsPlayerInVehicle(i, vehicleid))
        {
            SendClientMessage(playerid,-1,"{33CCFF}[Servicio de grúa]{FFFFFF} Angélica: Encontramos una persona dentro del vehículo, no podemos remolcarlo.");
            SendClientMessage(playerid,-1,"{33CCFF}[Servicio de grúa]{FFFFFF} Angélica: Llama a la policía si crees que tu vehículo ha sido robado.");
			cmd_colgar(playerid);
			return 1;
        }
        return 0;
    }
    return 0;
}

stock ObjetosTransporte(vehicleid, f)
{
	if(VehiculoConCajas[Fabricas[f][Auto1F]] == 0) return 1;
    new vw = GetVehicleVirtualWorld(vehicleid);
	new interior = GetVehicleInterior(vehicleid);
    for(new bl = 0; bl < 5; bl++)
	{
	    if(IsValidDynamicObject(unkbox[f][bl]))
	    {
    	   	DestroyDynamicObject(CajaMeta[f][bl]);
	    }
	}
	CajaMeta[f][0] = CreateDynamicObject(1271,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,vw,interior);
	CajaMeta[f][1] = CreateDynamicObject(1271,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,vw,interior);
	CajaMeta[f][2] = CreateDynamicObject(1271,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,vw,interior);
	CajaMeta[f][3] = CreateDynamicObject(1271,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,vw,interior);
	CajaMeta[f][4] = CreateDynamicObject(1271,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,vw,interior);
	switch(VehiculoConCajas[Fabricas[f][Auto1F]])
	{
	    case 1: AttachDynamicObjectToVehicle(CajaMeta[f][0], Fabricas[f][Auto1F], -0.011962,-1.074538,0.107927,-0.199999,0.000000,0.000000);
		case 2:
		{
	        AttachDynamicObjectToVehicle(CajaMeta[f][0], Fabricas[f][Auto1F], -0.011962,-1.074538,0.107927,-0.199999,0.000000,0.000000);
	        AttachDynamicObjectToVehicle(CajaMeta[f][1], Fabricas[f][Auto1F], 0.000000,-1.999999,0.100000,0.349999,-1.149999,0.000000);
	    }
	    case 3:
		{
	        AttachDynamicObjectToVehicle(CajaMeta[f][0], Fabricas[f][Auto1F], -0.011962,-1.074538,0.107927,-0.199999,0.000000,0.000000);
	        AttachDynamicObjectToVehicle(CajaMeta[f][1], Fabricas[f][Auto1F], 0.000000,-1.999999,0.100000,0.349999,-1.149999,0.000000);
	        AttachDynamicObjectToVehicle(CajaMeta[f][2], Fabricas[f][Auto1F], -0.007348,-1.509131,0.746309,0.000000,0.000000,0.000000);
	    }
	    case 4:
		{
	        AttachDynamicObjectToVehicle(CajaMeta[f][0], Fabricas[f][Auto1F], -0.011962,-1.074538,0.107927,-0.199999,0.000000,0.000000);
	        AttachDynamicObjectToVehicle(CajaMeta[f][1], Fabricas[f][Auto1F], 0.000000,-1.999999,0.100000,0.349999,-1.149999,0.000000);
	        AttachDynamicObjectToVehicle(CajaMeta[f][2], Fabricas[f][Auto1F], -0.007348,-1.509131,0.746309,0.000000,0.000000,0.000000);
	        AttachDynamicObjectToVehicle(CajaMeta[f][3], Fabricas[f][Auto1F], 0.658764,-2.240282,0.650753,0.000000,34.049999,0.000000);
	    }
	    case 5:
		{
	        AttachDynamicObjectToVehicle(CajaMeta[f][0], Fabricas[f][Auto1F], -0.011962,-1.074538,0.107927,-0.199999,0.000000,0.000000);
	        AttachDynamicObjectToVehicle(CajaMeta[f][1], Fabricas[f][Auto1F], 0.000000,-1.999999,0.100000,0.349999,-1.149999,0.000000);
	        AttachDynamicObjectToVehicle(CajaMeta[f][2], Fabricas[f][Auto1F], -0.007348,-1.509131,0.746309,0.000000,0.000000,0.000000);
	        AttachDynamicObjectToVehicle(CajaMeta[f][3], Fabricas[f][Auto1F], 0.658764,-2.240282,0.650753,0.000000,34.049999,0.000000);
	        AttachDynamicObjectToVehicle(CajaMeta[f][4], Fabricas[f][Auto1F], -0.714648,-2.216089,0.620124,0.000000,-29.000000,0.000000);
	    }
	}
	return 1;
}
stock ActualizarCajasMeta(f)
{
	for(new bl = 0; bl < 5; bl++)
	{
	    if(IsValidDynamicObject(BarrilMeta[f][bl]))
	    {
    	   	DestroyDynamicObject(BarrilMeta[f][bl]);
	    }
	}
	BarrilMeta[f][0] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,Fabricas[f][pVW],Fabricas[f][pInt]);
	BarrilMeta[f][1] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,Fabricas[f][pVW],Fabricas[f][pInt]);
	BarrilMeta[f][2] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,Fabricas[f][pVW],Fabricas[f][pInt]);
	BarrilMeta[f][3] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,Fabricas[f][pVW],Fabricas[f][pInt]);
	BarrilMeta[f][4] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,Fabricas[f][pVW],Fabricas[f][pInt]);
}
stock ActualizarBarriles(vehicleid,f)
{
    new vw = GetVehicleVirtualWorld(vehicleid);
	new interior = GetVehicleInterior(vehicleid);
    for(new bl = 0; bl < 5; bl++)
	{
	    if(IsValidDynamicObject(BarrilMeta[f][bl]))
	    {
    	   	DestroyDynamicObject(BarrilMeta[f][bl]);
	    }
	}
	BarrilMeta[f][0] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,vw,interior);
	BarrilMeta[f][1] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,vw,interior);
	BarrilMeta[f][2] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,vw,interior);
	BarrilMeta[f][3] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,vw,interior);
	BarrilMeta[f][4] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,vw,interior);
}
stock BarrilesTransporte(vehicleid, f)
{
	if(VehiculoConBarril[Fabricas[f][Auto1F]] == 0) return 1;
    new vw = GetVehicleVirtualWorld(vehicleid);
	new interior = GetVehicleInterior(vehicleid);
    for(new bl = 0; bl < 5; bl++)
	{
	    if(IsValidDynamicObject(BarrilMeta[f][bl]))
	    {
    	   	DestroyDynamicObject(BarrilMeta[f][bl]);
	    }
	}
	BarrilMeta[f][0] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,vw,interior);
	BarrilMeta[f][1] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,vw,interior);
	BarrilMeta[f][2] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,vw,interior);
	BarrilMeta[f][3] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,vw,interior);
	BarrilMeta[f][4] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000,vw,interior);
	switch(VehiculoConBarril[Fabricas[f][Auto1F]])
	{
	    case 1: AttachDynamicObjectToVehicle(BarrilMeta[f][0], vehicleid, 0.394999, -1.084999, 0.230000, 0.000000, 0.000000, 0.000000);
		case 2:
		{
	        AttachDynamicObjectToVehicle(BarrilMeta[f][0], vehicleid, 0.394999, -1.084999, 0.230000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(BarrilMeta[f][1], vehicleid, -0.519999, -1.084999, 0.199500, 0.000000, 0.000000, 0.000000);
	    }
	    case 3:
		{
	        AttachDynamicObjectToVehicle(BarrilMeta[f][0], vehicleid, 0.394999, -1.084999, 0.230000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(BarrilMeta[f][1], vehicleid, -0.519999, -1.084999, 0.199500, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(BarrilMeta[f][2], vehicleid, -0.049999, -1.729998, 0.230000, 0.000000, 0.000000, 0.000000);
	    }
	    case 4:
		{
	        AttachDynamicObjectToVehicle(BarrilMeta[f][0], vehicleid, 0.394999, -1.084999, 0.230000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(BarrilMeta[f][1], vehicleid, -0.519999, -1.084999, 0.199500, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(BarrilMeta[f][2], vehicleid, -0.049999, -1.729998, 0.230000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(BarrilMeta[f][3], vehicleid, 0.429999, -2.320005, 0.165000, 0.000000, 0.000000, 0.000000);
	    }
	    case 5:
		{
	        AttachDynamicObjectToVehicle(BarrilMeta[f][0], vehicleid, 0.394999, -1.084999, 0.230000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(BarrilMeta[f][1], vehicleid, -0.519999, -1.084999, 0.199500, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(BarrilMeta[f][2], vehicleid, -0.049999, -1.729998, 0.230000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(BarrilMeta[f][3], vehicleid, 0.429999, -2.320005, 0.165000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(BarrilMeta[f][4], vehicleid, -0.554999, -2.285004, 0.220000, 0.000000, 0.000000, 0.000000);
	    }
	}
	return 1;
}
stock ObjetoDistraccion(vehicleid, id)
{
	new vw = GetVehicleVirtualWorld(vehicleid);
	new interior = GetVehicleInterior(vehicleid);
    for(new bl = 0; bl < 5; bl++)
	{
	    if(IsValidDynamicObject(unkbox[id][bl]))
	    {
    	   	DestroyDynamicObject(unkbox[id][bl]);

	    }
	}
	unkbox[id][0] = CreateDynamicObject(1271,0,0,-1000,0,0,0, vw,interior);
	unkbox[id][1] = CreateDynamicObject(1271,0,0,-1000,0,0,0, vw,interior);
	unkbox[id][2] = CreateDynamicObject(1271,0,0,-1000,0,0,0, vw,interior);
	unkbox[id][3] = CreateDynamicObject(1271,0,0,-1000,0,0,0, vw,interior);
	unkbox[id][4] = CreateDynamicObject(1271,0,0,-1000,0,0,0, vw,interior);
    AttachDynamicObjectToVehicle(unkbox[id][0], vehicleid, -0.011962,-1.074538,0.107927,-0.199999,0.000000,0.000000);
	AttachDynamicObjectToVehicle(unkbox[id][1], vehicleid, 0.000000,-1.999999,0.100000,0.349999,-1.149999,0.000000);
	AttachDynamicObjectToVehicle(unkbox[id][2], vehicleid, -0.007348,-1.509131,0.746309,0.000000,0.000000,0.000000);
	AttachDynamicObjectToVehicle(unkbox[id][3], vehicleid, 0.658764,-2.240282,0.650753,0.000000,34.049999,0.000000);
	AttachDynamicObjectToVehicle(unkbox[id][4], vehicleid, -0.714648,-2.216089,0.620124,0.000000,-29.000000,0.000000);
	return 1;
}

stock SetHabilityWeaponJob(playerid,nivel_armero)
{
    if(PlayerInfo[playerid][pNivelArmero] == nivel_armero && PlayerInfo[playerid][pExpArmero] < 49)
	{
		if(PlayerInfo[playerid][pVip] == 2)
		{
			new puntos = random(3);
			switch(puntos)
			{
				case 0:
				{
					PlayerInfo[playerid][pExpArmero]++;
					SendClientMessage(playerid,0x2d8cecFF,"Habilidad en la fabricación de armas aumentada +1 punto.");
				}
				case 1:
				{
					PlayerInfo[playerid][pExpArmero]++;
					SendClientMessage(playerid,0x2d8cecFF,"Habilidad en la fabricación de armas aumentada +1 punto.");
				}
				case 2:
				{
					PlayerInfo[playerid][pExpArmero]+= 2;
					SendClientMessage(playerid,0x2d8cecFF,"Habilidad en la fabricación de armas aumentada +2 puntos.");
				}
			}
		}
		else
		{
			PlayerInfo[playerid][pExpArmero]++;
			SendClientMessage(playerid,0x2d8cecFF,"Habilidad en la fabricación de armas aumentada +1 punto.");
		}
	}
	else if(PlayerInfo[playerid][pNivelArmero] == nivel_armero && PlayerInfo[playerid][pExpArmero] >= 49)
	{
		PlayerInfo[playerid][pNivelArmero]++;
		PlayerInfo[playerid][pExpArmero] = 0;
		SendClientMessage(playerid,-1,"Has aumentado tu nivel de armero, ahora puedes crear otras armas");
	}
	return 1;
}
stock NameCheck(const source[])
{
    new length = strlen(source);
    if (!(3 <= length <= 20)) return 0;
    new pos = strfind(source, "_");
    if (pos == -1) return 0;
    new    us_count;
    for (new i; i != length; ++i)
    {
        switch (source[i])
        {
            case '_': ++us_count;
        }
        if (!i || i == pos + 1)
        {
            switch (source[i])
            {
                case 'A' .. 'Z': continue;
                case 'a' .. 'z': continue;
				case '0' .. '9': continue;
                default: return 0;
            }
        }
        else if (i && i != pos && i != pos + 1)
        {
            switch (source[i])
            {
                case 'A' .. 'Z': continue;
                case 'a' .. 'z': continue;
				case '0' .. '9': continue;
                default: return 0;
            }
        }
    }
    return (us_count == 1 && source[length - 1] != '_');
}
stock MandarMensajeFabrica(f,string[])
{
	Loop2(i,MAX_PLAYERS)
    {
	    if(PlayerInfo[i][pFaccion] == Fabricas[f][pBanda])
	    {
	    	SendClientMessage(i,-1,string);
	    }
    }
    return 1;
}
stock DarMinuto()
{
	for(new i=0; i <= MAX_PLAYERS;i++)
	{
	    if(San[i] == 1)
  		{
			if(!IsPlayerInRangeOfPoint(i, 25, 344.9984,307.1824,999.1557) || GetPlayerInterior(i) != 6)
			{
				SetPlayerVirtualWorld(i, random(600));
				SetPlayerPosEx(i, 344.9984,307.1824,999.1557);
				SetPlayerInterior(i, 6);
				SetPlayerFacingAngle(i,329.0000);
			}
		}
    }
}

stock AvisoStaff(playerid, stringxd[])
{
	if(playerid == 2323) return 1;
	for(new i=0; i <= MAX_PLAYERS;i++)
	{
		if(PlayerInfo[i][pAdmin] > ADMIN_LEVEL_ADM)
 		{
 			 SendClientMessage(i,COLOR_MEGAPHONE,stringxd);
		}
	}
	return 1;
}
stock StringPing(playerid)
{
	new Ping[100];
	new ping = GetPlayerPing(playerid);
	if(ping >= 0 && ping < 150) format(Ping, 100, "{46e800}%d{FFFFFF}",ping);
	if(ping >= 150 && ping < 200) format(Ping, 100, "{00cbf7}%d{FFFFFF}",ping);
	if(ping >= 200 && ping < 250) format(Ping, 100, "{E0F600}%d{FFFFFF}",ping);
	if(ping >= 250 && ping < 300) format(Ping, 100, "{f7e300}%d{FFFFFF}",ping);
	if(ping >= 300) format(Ping, 100, "{f74000}%d{FFFFFF}",ping);
	return Ping;
}

stock GetSpam(string[],playerid)
{
    new SPAM;
    new CUENTAP,CUENTAN,CUENTADP,NUMEROS;
	for(SPAM = 0; SPAM < strlen(string); SPAM ++)
	{
	    if(string[SPAM] == '.') CUENTAP ++;
	    if(string[SPAM] == '0' || string[SPAM] == '1' || string[SPAM] == '2' || string[SPAM] == '3' || string[SPAM] == '4' || string[SPAM] == '5' || string[SPAM] == '6' || string[SPAM] == '7' || string[SPAM] == '8' || string[SPAM] == '9') CUENTAN ++;
	    if(string[SPAM] == ':') CUENTADP ++;
		if(string[SPAM] > '9' || string[SPAM] < '0') NUMEROS ++;
	}
 	if(CUENTAP >= 3 && CUENTAN >= 4 && CUENTADP >= 1 && NUMEROS >= 3) return 1;
	if(CUENTAP >= 2 && CUENTADP >= 1) return 1;
    for(new i; i < sizeof(PalabrasSPAM); i++)
	{
	    if(strfind(string,PalabrasSPAM[i],true) != -1)
		{
		    format(ANTI_CHEATS[playerid][TextoSPAM],128,PalabrasSPAM[i]);
		 	return 1;
        }
	    if(strcmp(string,PalabrasSPAM[i],true) == 0)
	    {
		    format(ANTI_CHEATS[playerid][TextoSPAM],128,PalabrasSPAM[i]);
		 	return 1;
        }
	}
 	return 0;
}

stock ForumPermissions(playerid)
{
	new Query[560];
	switch(PlayerInfo[playerid][pAdmin])
	{
	    case 0:
	    {
	        switch(PlayerInfo[playerid][pFaccion])
	        {
	            case 1: { //SAPD
			        format(Query, sizeof(Query), "UPDATE `"PREFIX_DB"members` SET `id_group`='11' WHERE `member_name`='%s'",PlayerName(playerid));
					mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
		    	}
		        case 2: { //APSA
		        	format(Query, sizeof(Query), "UPDATE `"PREFIX_DB"members` SET `id_group`='14' WHERE `member_name`='%s'",PlayerName(playerid));
					mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
			    }
		    	case 3: { //GREEN PEACE
	        		format(Query, sizeof(Query), "UPDATE `"PREFIX_DB"members` SET `id_group`='23' WHERE `member_name`='%s'",PlayerName(playerid));
					mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
		    	}
		    	default: { //USUARIO
	        		format(Query, sizeof(Query), "UPDATE `"PREFIX_DB"members` SET `id_group`='19' WHERE `member_name`='%s'",PlayerName(playerid));
					mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
		    	}
            }
		}
  		case ADMIN_LEVEL_AYUDANTE: { //AYUDANTE
	        format(Query, sizeof(Query), "UPDATE `"PREFIX_DB"members` SET `id_group`='15' WHERE `member_name`='%s'",PlayerName(playerid));
			mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
		}
		case ADMIN_LEVEL_DUDAS: { //MOD CANAL DUDAS
	        format(Query, sizeof(Query), "UPDATE `"PREFIX_DB"members` SET `id_group`='10' WHERE `member_name`='%s'",PlayerName(playerid));
			mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
		}
		case ADMIN_LEVEL_BANEOS: { //MOD FORO
	        format(Query, sizeof(Query), "UPDATE `"PREFIX_DB"members` SET `id_group`='22' WHERE `member_name`='%s'",PlayerName(playerid));
			mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
		}
		case ADMIN_LEVEL_SANCIONES: { //MOD JUEGO
	        format(Query, sizeof(Query), "UPDATE `"PREFIX_DB"members` SET `id_group`='9' WHERE `member_name`='%s'",PlayerName(playerid));
			mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
		}
		case ADMIN_LEVEL_TECNICO: { //MOD Tecnico
	        format(Query, sizeof(Query), "UPDATE `"PREFIX_DB"members` SET `id_group`='24' WHERE `member_name`='%s'",PlayerName(playerid));
			mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
		}
		case ADMIN_LEVEL_GLOBAL: { //MOD GLOBAL
	        format(Query, sizeof(Query), "UPDATE `"PREFIX_DB"members` SET `id_group`='2' WHERE `member_name`='%s'",PlayerName(playerid));
			mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
		}
		case ADMIN_LEVEL_ADM_TEMP: { //Administrador (ficticio)
	        format(Query, sizeof(Query), "UPDATE `"PREFIX_DB"members` SET `id_group`='25' WHERE `member_name`='%s'",PlayerName(playerid));
			mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
		}
		case ADMIN_LEVEL_ADM: { //ADMINISTRADOR
	        format(Query, sizeof(Query), "UPDATE `"PREFIX_DB"members` SET `id_group`='1' WHERE `member_name`='%s'",PlayerName(playerid));
			mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);

		}
	}
}

stock PlayerName(playerid)
{
    new nombre[MAX_PLAYER_NAME];
    GetPlayerName(playerid, nombre, sizeof(nombre));
    return nombre;
}

stock EnviarCarcel(playerid)
{
    if(PlayerInfo[playerid][pTipoCarcel] == 4)
	{
		new rand;
		CargarMapeosEx(playerid);
		SetPlayerVirtualWorld(playerid, 15);
		SetPlayerInterior(playerid, 15);
		rand = random(sizeof(FortCarsonSpawn));
		SetPlayerPos(playerid, FortCarsonSpawn[rand][0], FortCarsonSpawn[rand][1], FortCarsonSpawn[rand][2]);
	}
	else
	{
		DarRopa(playerid);
		SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
		SetPlayerInterior(playerid, 10);
		SetPlayerVirtualWorld(playerid, 1);
		QuitarArmas(playerid);
		CargarMapeosEx(playerid);
	}
}
stock LoadVehicles(playerid)
{
	new Query[560];
 	format(Query, sizeof(Query), "SELECT * FROM `p_vehicles` WHERE `Slot` = '1' AND `Propietario` = '%d'",PlayerInfo[playerid][pID]);
    mysql_function_query(Conecction, Query, true, "L_Vehicles", "ii",1,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `p_vehicles` WHERE `Slot` = '2' AND `Propietario` = '%d'",PlayerInfo[playerid][pID]);
    mysql_function_query(Conecction, Query, true, "L_Vehicles", "ii",2,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `p_vehicles` WHERE `Slot` = '3' AND `Propietario` = '%d'",PlayerInfo[playerid][pID]);
    mysql_function_query(Conecction, Query, true, "L_Vehicles", "ii",3,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `p_vehicles` WHERE `Slot` = '4' AND `Propietario` = '%d'",PlayerInfo[playerid][pID]);
    mysql_function_query(Conecction, Query, true, "L_Vehicles", "ii",4,playerid);
}

stock LoadAchievements(playerid)
{
	new Query[560];
 	format(Query, sizeof(Query), "SELECT * FROM `achievements` WHERE `Tipo` = '1' AND `Nombre_Jugador` = '%s'",PlayerName(playerid));
    mysql_function_query(Conecction, Query, true, "cargar_logros", "ii",1,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `achievements` WHERE `Tipo` = '2' AND `Nombre_Jugador` = '%s'",PlayerName(playerid));
    mysql_function_query(Conecction, Query, true, "cargar_logros", "ii",2,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `achievements` WHERE `Tipo` = '3' AND `Nombre_Jugador` = '%s'",PlayerName(playerid));
    mysql_function_query(Conecction, Query, true, "cargar_logros", "ii",3,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `achievements` WHERE `Tipo` = '4' AND `Nombre_Jugador` = '%s'",PlayerName(playerid));
    mysql_function_query(Conecction, Query, true, "cargar_logros", "ii",4,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `achievements` WHERE `Tipo` = '5' AND `Nombre_Jugador` = '%s'",PlayerName(playerid));
    mysql_function_query(Conecction, Query, true, "cargar_logros", "ii",5,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `achievements` WHERE `Tipo` = '6' AND `Nombre_Jugador` = '%s'",PlayerName(playerid));
    mysql_function_query(Conecction, Query, true, "cargar_logros", "ii",6,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `achievements` WHERE `Tipo` = '7' AND `Nombre_Jugador` = '%s'",PlayerName(playerid));
    mysql_function_query(Conecction, Query, true, "cargar_logros", "ii",7,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `achievements` WHERE `Tipo` = '8' AND `Nombre_Jugador` = '%s'",PlayerName(playerid));
    mysql_function_query(Conecction, Query, true, "cargar_logros", "ii",8,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `achievements` WHERE `Tipo` = '9' AND `Nombre_Jugador` = '%s'",PlayerName(playerid));
    mysql_function_query(Conecction, Query, true, "cargar_logros", "ii",9,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `achievements` WHERE `Tipo` = '10' AND `Nombre_Jugador` = '%s'",PlayerName(playerid));
    mysql_function_query(Conecction, Query, true, "cargar_logros", "ii",10,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `achievements` WHERE `Tipo` = '11' AND `Nombre_Jugador` = '%s'",PlayerName(playerid));
    mysql_function_query(Conecction, Query, true, "cargar_logros", "ii",11,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `achievements` WHERE `Tipo` = '12' AND `Nombre_Jugador` = '%s'",PlayerName(playerid));
    mysql_function_query(Conecction, Query, true, "cargar_logros", "ii",12,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `achievements` WHERE `Tipo` = '13' AND `Nombre_Jugador` = '%s'",PlayerName(playerid));
    mysql_function_query(Conecction, Query, true, "cargar_logros", "ii",13,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `achievements` WHERE `Tipo` = '14' AND `Nombre_Jugador` = '%s'",PlayerName(playerid));
    mysql_function_query(Conecction, Query, true, "cargar_logros", "ii",14,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `achievements` WHERE `Tipo` = '15' AND `Nombre_Jugador` = '%s'",PlayerName(playerid));
    mysql_function_query(Conecction, Query, true, "cargar_logros", "ii",15,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `achievements` WHERE `Tipo` = '16' AND `Nombre_Jugador` = '%s'",PlayerName(playerid));
    mysql_function_query(Conecction, Query, true, "cargar_logros", "ii",16,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `achievements` WHERE `Tipo` = '17' AND `Nombre_Jugador` = '%s'",PlayerName(playerid));
    mysql_function_query(Conecction, Query, true, "cargar_logros", "ii",17,playerid);
}

stock LoadPrendas(playerid)
{
	new Query[560];

 	format(Query, sizeof(Query), "SELECT * FROM `prendas` WHERE `Slot` = '1' AND `Propietario` = '%s' AND `Web` = 0",PlayerName(playerid));
    mysql_function_query(Conecction, Query, true, "cargarprendas", "ii",1,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `prendas` WHERE `slot` = '2' AND `propietario` = '%s' AND `Web` = 0",PlayerName(playerid));
    mysql_function_query(Conecction, Query, true, "cargarprendas", "ii",2,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `prendas` WHERE `slot` = '3' AND `propietario` = '%s' AND `Web` = 0",PlayerName(playerid));
    mysql_function_query(Conecction, Query, true, "cargarprendas", "ii",3,playerid);

    format(Query, sizeof(Query), "SELECT * FROM `prendas` WHERE `slot` = '4' AND `propietario` = '%s' AND `Web` = 0",PlayerName(playerid));
    mysql_function_query(Conecction, Query, true, "cargarprendas", "ii",4,playerid);
}

stock IsAPolice(playerid)
{
	if(PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][pFaccion] == 1) return 1;
	return 0;
}
stock CargarMapeosEx(playerid, time = 2000)
{
	TogglePlayerControllable(playerid, 0);
	GameTextForPlayer(playerid, "             ~r~Cargando...           ~w~Espera por favor", time, 4);
	SetTimerEx("DesCargarMapeosEx", time, false, "i", playerid);
	SetPVarInt(playerid, "IsFrozen", 0);
	TiempoEntrada[playerid] = 3;
	return 1;
}

stock Congelado(playerid)
{
	TogglePlayerControllable(playerid, 0);
	ApplyAnimation(playerid,"ped", "ARRESTgun", 4.0,0,1,1,1,1);
	ApplyAnimation(playerid,"ped", "ARRESTgun", 4.0,0,1,1,1,1);
	SetTimerEx("DesCargarMapeosEx", 5000, false, "i", playerid);
	return 1;
}

stock VerTiempos(playerid,id)
{
	if(Jail[id] == 1)
	{
		new string[256];
		if(PlayerInfo[id][pTiempoCarcelM] == 0) format(string, sizeof(string), "Tiempo restante para cumplir la condena: {00CC00}%ds{FFFFFF}.", PlayerInfo[id][pTiempoCarcelS]);
		else if(PlayerInfo[id][pTiempoCarcelM] != 0) format(string, sizeof(string), "Tiempo restante para cumplir la condena: {00CC00}%dm %ds{FFFFFF}.", PlayerInfo[id][pTiempoCarcelM],PlayerInfo[id][pTiempoCarcelS]);
		SendClientMessage(playerid,-1,string);
	}
	else if(PlayerInfo[id][pTiempoJailS] > 0)
	{
		new string[256];
		if(PlayerInfo[id][pTiempoJailS] < 60) format(string, sizeof(string), "Tiempo restante para cumplir la condena: {00CC00}%ds{FFFFFF}.", PlayerInfo[id][pTiempoJailS]);
		else if(PlayerInfo[id][pTiempoJailS] >= 60) format(string, sizeof(string), "Tiempo restante para cumplir la condena: {00CC00}%dm %ds.", PlayerInfo[id][pTiempoJailS]/60, PlayerInfo[id][pTiempoJailS]%(60));
		SendClientMessage(playerid,-1,string);
	}
	return 1;
}
stock VehicleToPoint(Float:radi, vehicleid, Float:x, Float:y, Float:z)
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetVehiclePos(vehicleid, oldposx, oldposy, oldposz);
	tempposx = (oldposx -x);
	tempposy = (oldposy -y);
	tempposz = (oldposz -z);
	if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
	{
		return 1;
	}
	return 0;
}

stock ColocarCombate(playerid)
{
	if(EnCombate[playerid] == 0)
	{
		TimerCombate[playerid] = SetTimerEx("TextoCombate",800,true,"d",playerid);
		EnCombate[playerid] = 1;
		TiempoCombate[playerid] = 40;
	}
	else if(EnCombate[playerid] == 1) TiempoCombate[playerid] = 40;
}

stock GetNumberOfPlayersOnThisIP(test_ip[])
{
    new against_ip[32+1];
    new x = 0;
    new ip_count = 0;
    for(x=0; x<MAX_PLAYERS; x++)
	{
        if(IsPlayerConnected(x) && !IsPlayerNPC(x))
		{
            GetPlayerIp(x,against_ip,32);
            if(!strcmp(against_ip,test_ip)) ip_count++;
        }
    }
    return ip_count;
}

stock QueMes(month)
{
	new rango[15];
    if (month == 1)  format(rango, sizeof(rango), "Enero");
    if (month == 2)  format(rango, sizeof(rango), "Febrero");
    if (month == 3)  format(rango, sizeof(rango), "Marzo");
    if (month == 4)  format(rango, sizeof(rango), "Abril");
    if (month == 5)  format(rango, sizeof(rango), "Mayo");
    if (month == 6)  format(rango, sizeof(rango), "Junio");
    if (month == 7)  format(rango, sizeof(rango), "Julio");
    if (month == 8)  format(rango, sizeof(rango), "Agosto");
    if (month == 9)  format(rango, sizeof(rango), "Septiembre");
    if (month == 10) format(rango, sizeof(rango), "Octubre");
    if (month == 11) format(rango, sizeof(rango), "Noviembre");
    if (month == 12) format(rango, sizeof(rango), "Diciembre");
    return rango;
}
stock ObtenerEstadoSalud(playerid)
{
	new Float:vida;
	GetPlayerHealth(playerid, vida);
	if(vida > 0 && vida < 11) PlayerInfo[playerid][pEnfermedad] = 10;
	else if(vida > 10 && vida < 21) PlayerInfo[playerid][pEnfermedad] = 1;
	else if(vida > 20 && vida < 31) PlayerInfo[playerid][pEnfermedad] = 3;
	else if(vida > 30 && vida < 41) PlayerInfo[playerid][pEnfermedad] = 2;
	else if(vida > 40 && vida < 51) PlayerInfo[playerid][pEnfermedad] = 5;
	else if(vida > 50 && vida < 61) PlayerInfo[playerid][pEnfermedad] = 8;
	else if(vida > 60 && vida < 71) PlayerInfo[playerid][pEnfermedad] = 7;
	else if(vida > 70 && vida < 81) PlayerInfo[playerid][pEnfermedad] = 6;
	else if(vida > 80 && vida < 91) PlayerInfo[playerid][pEnfermedad] = 9;
	else if(vida > 90 && vida < 100) PlayerInfo[playerid][pEnfermedad] = 4;
	else PlayerInfo[playerid][pEnfermedad] = 4;
	return 1;
}
stock SetPosEx(playerid, Float:X, Float:Y, Float:Z, Float:A, interiorid, worldid)
{
    PlayerAnticheat[playerid][@Teleport] = 0;
	if(interiorid > 0)
	{
	 	GetPlayerPos(playerid, PlayerInfo[playerid][jPosE_x], PlayerInfo[playerid][jPosE_y], PlayerInfo[playerid][jPosE_z]);
		CargarMapeosEx(playerid);
	}
	if(worldid > 0)
	{
		CargarMapeosEx(playerid);
	}
	SetPlayerPos(playerid, X, Y, Z);
	SetPlayerFacingAngle(playerid, A);
	SetPlayerInterior(playerid, interiorid);
	SetPlayerVirtualWorld(playerid, worldid);

	if(interiorid == 0) GetPlayerPos(playerid, PlayerInfo[playerid][jPosE_x], PlayerInfo[playerid][jPosE_y], PlayerInfo[playerid][jPosE_z]);
	return 1;
}

stock SetPosEntrar(playerid, Float:X, Float:Y, Float:Z, Float:A, interiorid, worldid, tienda = 0)
{
    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Tienes que estar parado en la puerta de la propiedad para poder entrar.");
    if(tienda == 1)
    {
	 	SendClientMessage(playerid,-1,"Ingresaste a un supermercado {DBED16}24/7{FFFFFF}, para comprar productos escribe {DBED16}/comprar productos{FFFFFF}.");

	}
	if(interiorid > 0)
	{
	 	GetPlayerPos(playerid, PlayerInfo[playerid][jPosE_x], PlayerInfo[playerid][jPosE_y], PlayerInfo[playerid][jPosE_z]);
	}
	CargarMapeosEx(playerid);
	SetPlayerPos(playerid, X, Y, Z);
	SetPlayerFacingAngle(playerid, A);
	SetPlayerInterior(playerid, interiorid);
	SetPlayerVirtualWorld(playerid, worldid);

	if(interiorid == 0) GetPlayerPos(playerid, PlayerInfo[playerid][jPosE_x], PlayerInfo[playerid][jPosE_y], PlayerInfo[playerid][jPosE_z]);
	return 1;
}

stock MensajeAdmin(color,string[],level)
{
	foreach(Player, i)
	{
		if(PlayerInfo[i][pAdmin] >= level) SendClientMessage(i, color, string);
	}
	return 1;
}

stock CercaDeObjeto(Float:rango,playerid,objectid)
{
	new Float:Pos[3];
	GetObjectPos(objectid,Pos[0],Pos[1],Pos[2]);
	if(IsPlayerInRangeOfPoint(playerid,rango,Pos[0],Pos[1],Pos[2])) return 1;
	return 0;
}
stock DarAfinidadPuta1(playerid)
{
	if(TiempoCLUB[playerid] != 0) return 1;
	if(PlayerInfo[playerid][jDinero] < 500) return SendClientMessage(playerid,-1,"Te quedaste sin dinero.");
	new DinerObjeto,rand;
	TextDrawShowForPlayer(playerid, Cuadroputi);
	TextDrawShowForPlayer(playerid, Cuadroputi1);
	TextDrawShowForPlayer(playerid, PuticlubMedia);
	TextDrawShowForPlayer(playerid, PuticlubAlta);
	TextDrawShowForPlayer(playerid, FlechasArribaPuti);
	TextDrawShowForPlayer(playerid, FlechasArribaPuti2);
	PlayerTextDrawSetString(playerid, AfinidadconX[playerid], "Afinidad con Gatubela");
	PlayerTextDrawShow(playerid, AfinidadconX[playerid]);
	PlayerTextDrawShow(playerid, LineasPutiNivel[playerid]);
	PlayerInfo[playerid][pAfinidad1]++;
	new AfinidadTotal = PlayerInfo[playerid][pAfinidad1]/3;
	new string[256];
	for(new a=0;a<AfinidadTotal;a++)
	{
		if(a < 30)
	    {
			format(string,sizeof(string),"%s-",string);
		}
		else format(string,sizeof(string),"------------------------------",string);
	}
	PlayerTextDrawSetString(playerid,Radly[playerid],string);
	PlayerTextDrawShow(playerid, Radly[playerid]);
	TiempoCLUB[playerid] = 2;
	QuitarDinero(playerid, 500);
	KillTimer(TimerDineroP[playerid]);
	AccionesRol(playerid,"arrojó dinero a Gatúbela.", 20);
	TimerDineroP[playerid] = SetTimerEx("CerrarAviso",4000,false,"d",playerid);
	ApplyAnimation(playerid,"STRIP","PUN_CASH",4.1,0,5,1,2000,0);
	TimerDineroP2[playerid] = 1;
	SetTimerEx("ClearAnim",2000,false,"d",playerid);
	rand = random(sizeof(DineroSpawn1));
	DinerObjeto = CreateDynamicPickup(1212, 23, DineroSpawn1[rand][0], DineroSpawn1[rand][1], DineroSpawn1[rand][2], -1, -1, -1, 10.0);
	new randDineroB,TiempoDinero;
	randDineroB = random(5);
	switch(randDineroB)
	{
	    case 0: TiempoDinero = 5000;
	    case 1: TiempoDinero = 4000;
	    case 2: TiempoDinero = 5500;
	    case 3: TiempoDinero = 2000;
	    case 4: TiempoDinero = 7000;
	    case 5: TiempoDinero = 4500;
	    default: TiempoDinero = 4500;
    }
	SetTimerEx("BorrarDinero",TiempoDinero,false,"d",DinerObjeto);
	RevisarLogroAfinidad(playerid);
	return 1;
}

stock DarAfinidadPuta2(playerid)
{
	if(TiempoCLUB[playerid] != 0) return 1;
	if(PlayerInfo[playerid][jDinero] < 500) return SendClientMessage(playerid,-1,"Te quedaste sin dinero.");
	new DinerObjeto,rand;
	TextDrawShowForPlayer(playerid, Cuadroputi);
	TextDrawShowForPlayer(playerid, Cuadroputi1);
	TextDrawShowForPlayer(playerid, PuticlubMedia);
	TextDrawShowForPlayer(playerid, PuticlubAlta);
	TextDrawShowForPlayer(playerid, FlechasArribaPuti);
	TextDrawShowForPlayer(playerid, FlechasArribaPuti2);
	PlayerTextDrawSetString(playerid, AfinidadconX[playerid], "Afinidad con Bailarina Ardiente");
	PlayerTextDrawShow(playerid, AfinidadconX[playerid]);
	PlayerTextDrawShow(playerid, LineasPutiNivel[playerid]);
	PlayerInfo[playerid][pAfinidad2]++;
	new AfinidadTotal = PlayerInfo[playerid][pAfinidad2]/3;
	new string[256];
	for(new a=0;a<AfinidadTotal;a++)
	{
		if(a < 30)
	    {
			format(string,sizeof(string),"%s-",string);
		}
		else format(string,sizeof(string),"------------------------------",string);
	}
	PlayerTextDrawSetString(playerid,Radly[playerid],string);
	PlayerTextDrawShow(playerid, Radly[playerid]);
	TiempoCLUB[playerid] = 2;
	QuitarDinero(playerid, 500);
	KillTimer(TimerDineroP[playerid]);
	AccionesRol(playerid,"arrojó dinero a Bailarina Ardiente.", 20);
	TimerDineroP[playerid] = SetTimerEx("CerrarAviso",4000,false,"d",playerid);
	SetTimerEx("ClearAnim",2000,false,"d",playerid);
	TimerDineroP2[playerid] = 1;
	ApplyAnimation(playerid,"STRIP","PUN_CASH",4.1,0,5,1,2000,0);
	rand = random(sizeof(DineroSpawn2));
	DinerObjeto = CreateDynamicPickup(1212, 23, DineroSpawn2[rand][0], DineroSpawn2[rand][1], DineroSpawn2[rand][2], -1, -1, -1, 10.0);
	new randDineroB,TiempoDinero;
	randDineroB = random(5);
	switch(randDineroB)
	{
	    case 0: TiempoDinero = 5000;
	    case 1: TiempoDinero = 4000;
	    case 2: TiempoDinero = 5500;
	    case 3: TiempoDinero = 2000;
	    case 4: TiempoDinero = 7000;
	    case 5: TiempoDinero = 4500;
	    default: TiempoDinero = 4500;
    }
	SetTimerEx("BorrarDinero",TiempoDinero,false,"d",DinerObjeto);
	RevisarLogroAfinidad(playerid);
	return 1;
}

stock DarAfinidadPuta3(playerid)
{
	if(TiempoCLUB[playerid] != 0) return 1;
	if(PlayerInfo[playerid][jDinero] < 500) return SendClientMessage(playerid,-1,"Te quedaste sin dinero.");
	new DinerObjeto,rand;
	TextDrawShowForPlayer(playerid, Cuadroputi);
	TextDrawShowForPlayer(playerid, Cuadroputi1);
	TextDrawShowForPlayer(playerid, PuticlubMedia);
	TextDrawShowForPlayer(playerid, PuticlubAlta);
	TextDrawShowForPlayer(playerid, FlechasArribaPuti);
	TextDrawShowForPlayer(playerid, FlechasArribaPuti2);
	PlayerTextDrawSetString(playerid, AfinidadconX[playerid], "Afinidad con Gordita Sensual");
	PlayerTextDrawShow(playerid, AfinidadconX[playerid]);
	PlayerTextDrawShow(playerid, LineasPutiNivel[playerid]);
	PlayerInfo[playerid][pAfinidad3]++;
	new AfinidadTotal = PlayerInfo[playerid][pAfinidad3]/3;
	new string[256];
	for(new a=0;a<AfinidadTotal;a++)
	{
		if(a < 30)
	    {
			format(string,sizeof(string),"%s-",string);
		}
		else format(string,sizeof(string),"------------------------------",string);
	}
	PlayerTextDrawSetString(playerid,Radly[playerid],string);
	PlayerTextDrawShow(playerid, Radly[playerid]);
 	TiempoCLUB[playerid] = 2;
	QuitarDinero(playerid, 500);
	KillTimer(TimerDineroP[playerid]);
	TimerDineroP2[playerid] = 1;
	AccionesRol(playerid,"arrojó dinero a Gordita Sensual.", 20);
	TimerDineroP[playerid] = SetTimerEx("CerrarAviso",4000,false,"d",playerid);
	ApplyAnimation(playerid,"STRIP","PUN_CASH",4.1,0,5,1,2000,0);
	SetTimerEx("ClearAnim",2000,false,"d",playerid);
	rand = random(sizeof(DineroSpawn3));
	DinerObjeto = CreateDynamicPickup(1212, 23, DineroSpawn3[rand][0], DineroSpawn3[rand][1], DineroSpawn3[rand][2], -1, -1, -1, 10.0);
	new randDineroB,TiempoDinero;
	randDineroB = random(5);
	switch(randDineroB)
	{
	    case 0: TiempoDinero = 5000;
	    case 1: TiempoDinero = 4000;
	    case 2: TiempoDinero = 5500;
	    case 3: TiempoDinero = 2000;
	    case 4: TiempoDinero = 7000;
	    case 5: TiempoDinero = 4500;
	    default: TiempoDinero = 4500;
    }
	SetTimerEx("BorrarDinero",TiempoDinero,false,"d",DinerObjeto);
	RevisarLogroAfinidad(playerid);
	return 1;
}


stock DarAfinidadPuta4(playerid)
{
	if(TiempoCLUB[playerid] != 0) return 1;
	if(PlayerInfo[playerid][jDinero] < 500) return SendClientMessage(playerid,-1,"Te quedaste sin dinero.");
	new DinerObjeto,rand;
	TextDrawShowForPlayer(playerid, Cuadroputi);
	TextDrawShowForPlayer(playerid, Cuadroputi1);
	TextDrawShowForPlayer(playerid, PuticlubMedia);
	TextDrawShowForPlayer(playerid, PuticlubAlta);
	TextDrawShowForPlayer(playerid, FlechasArribaPuti);
	TextDrawShowForPlayer(playerid, FlechasArribaPuti2);
	PlayerTextDrawSetString(playerid, AfinidadconX[playerid], "Afinidad con Poli-Bailarina");
	PlayerTextDrawShow(playerid, AfinidadconX[playerid]);
	PlayerTextDrawShow(playerid, LineasPutiNivel[playerid]);
	PlayerInfo[playerid][pAfinidad4]++;
	new AfinidadTotal = PlayerInfo[playerid][pAfinidad4]/3;
	new string[256];
	for(new a=0;a<AfinidadTotal;a++)
	{
		if(a < 30)
	    {
			format(string,sizeof(string),"%s-",string);
		}
		else format(string,sizeof(string),"------------------------------",string);
	}
	PlayerTextDrawSetString(playerid,Radly[playerid],string);
	PlayerTextDrawShow(playerid, Radly[playerid]);
	QuitarDinero(playerid, 500);
	TiempoCLUB[playerid] = 2;
	KillTimer(TimerDineroP[playerid]);
	AccionesRol(playerid,"arrojó dinero a Poli-Bailarina.", 20);
	TimerDineroP[playerid] = SetTimerEx("CerrarAviso",4000,false,"d",playerid);
	ApplyAnimation(playerid,"STRIP","PUN_CASH",4.1,0,5,1,2000,0);
	SetTimerEx("ClearAnim",2000,false,"d",playerid);
	rand = random(sizeof(DineroSpawn4));
	DinerObjeto = CreateDynamicPickup(1212, 23, DineroSpawn4[rand][0], DineroSpawn4[rand][1], DineroSpawn4[rand][2], -1, -1, -1, 10.0);
	new randDineroB,TiempoDinero;
	randDineroB = random(5);
	switch(randDineroB)
	{
	    case 0: TiempoDinero = 5000;
	    case 1: TiempoDinero = 4000;
	    case 2: TiempoDinero = 5500;
	    case 3: TiempoDinero = 2000;
	    case 4: TiempoDinero = 7000;
	    case 5: TiempoDinero = 4500;
	    default: TiempoDinero = 4500;
    }
	SetTimerEx("BorrarDinero",TiempoDinero,false,"d",DinerObjeto);
	RevisarLogroAfinidad(playerid);
	return 1;
}

stock DarAfinidadPuta5(playerid)
{
	if(TiempoCLUB[playerid] != 0) return 1;
	if(PlayerInfo[playerid][jDinero] < 500) return SendClientMessage(playerid,-1,"Te quedaste sin dinero.");
	new DinerObjeto,rand;
	TextDrawShowForPlayer(playerid, Cuadroputi);
	TextDrawShowForPlayer(playerid, Cuadroputi1);
	TextDrawShowForPlayer(playerid, PuticlubMedia);
	TextDrawShowForPlayer(playerid, PuticlubAlta);
	TextDrawShowForPlayer(playerid, FlechasArribaPuti);
	TextDrawShowForPlayer(playerid, FlechasArribaPuti2);
	PlayerTextDrawSetString(playerid, AfinidadconX[playerid], "Afinidad con Colegiala");
	PlayerTextDrawShow(playerid, AfinidadconX[playerid]);
	PlayerTextDrawShow(playerid, LineasPutiNivel[playerid]);
	PlayerInfo[playerid][pAfinidad5]++;
	new AfinidadTotal = PlayerInfo[playerid][pAfinidad5]/3;
	new string[256];
	for(new a=0;a<AfinidadTotal;a++)
	{
		if(a < 30)
	    {
			format(string,sizeof(string),"%s-",string);
		}
		else format(string,sizeof(string),"------------------------------",string);
	}
	PlayerTextDrawSetString(playerid,Radly[playerid],string);
	PlayerTextDrawShow(playerid, Radly[playerid]);
	TiempoCLUB[playerid] = 2;
	QuitarDinero(playerid, 500);
	KillTimer(TimerDineroP[playerid]);
	AccionesRol(playerid,"arrojó dinero a Colegiala.", 20);
	TimerDineroP[playerid] = SetTimerEx("CerrarAviso",4000,false,"d",playerid);
	ApplyAnimation(playerid,"STRIP","PUN_CASH",4.1,0,5,1,2000,0);
	TimerDineroP2[playerid] = 1;
	SetTimerEx("ClearAnim",2000,false,"d",playerid);
	rand = random(sizeof(DineroSpawn5));
	DinerObjeto = CreateDynamicPickup(1212, 23, DineroSpawn5[rand][0], DineroSpawn5[rand][1], DineroSpawn5[rand][2], -1, -1, -1, 10.0);
	new randDineroB,TiempoDinero;
	randDineroB = random(5);
	switch(randDineroB)
	{
	    case 0: TiempoDinero = 5000;
	    case 1: TiempoDinero = 4000;
	    case 2: TiempoDinero = 5500;
	    case 3: TiempoDinero = 2000;
	    case 4: TiempoDinero = 7000;
	    case 5: TiempoDinero = 4500;
	    default: TiempoDinero = 4500;
    }
	SetTimerEx("BorrarDinero",TiempoDinero,false,"d",DinerObjeto);
	RevisarLogroAfinidad(playerid);
	return 1;
}

stock DarAfinidadPuta6(playerid)
{
	if(TiempoCLUB[playerid] != 0) return 1;
	if(PlayerInfo[playerid][jDinero] < 500) return SendClientMessage(playerid,-1,"Te quedaste sin dinero.");
	new DinerObjeto,rand;
	TextDrawShowForPlayer(playerid, Cuadroputi);
	TextDrawShowForPlayer(playerid, Cuadroputi1);
	TextDrawShowForPlayer(playerid, PuticlubMedia);
	TextDrawShowForPlayer(playerid, PuticlubAlta);
	TextDrawShowForPlayer(playerid, FlechasArribaPuti);
	TextDrawShowForPlayer(playerid, FlechasArribaPuti2);
	PlayerTextDrawSetString(playerid, AfinidadconX[playerid], "Afinidad con Chocolatita");
	PlayerTextDrawShow(playerid, AfinidadconX[playerid]);
	PlayerTextDrawShow(playerid, LineasPutiNivel[playerid]);
	PlayerInfo[playerid][pAfinidad6]++;
	new AfinidadTotal = PlayerInfo[playerid][pAfinidad6]/3;
	new string[256];
	for(new a=0;a<AfinidadTotal;a++)
	{
		if(a < 30)
	    {
			format(string,sizeof(string),"%s-",string);
		}
		else format(string,sizeof(string),"------------------------------",string);
	}
	PlayerTextDrawSetString(playerid,Radly[playerid],string);
	PlayerTextDrawShow(playerid, Radly[playerid]);
	TiempoCLUB[playerid] = 2;
	QuitarDinero(playerid, 500);
	KillTimer(TimerDineroP[playerid]);
	AccionesRol(playerid,"arrojó dinero a Chocolatita.", 20);
	TimerDineroP[playerid] = SetTimerEx("CerrarAviso",4000,false,"d",playerid);
	ApplyAnimation(playerid,"STRIP","PUN_CASH",4.1,0,5,1,2000,0);
	SetTimerEx("ClearAnim",2000,false,"d",playerid);
	rand = random(sizeof(DineroSpawn6));
	DinerObjeto = CreateDynamicPickup(1212, 23, DineroSpawn6[rand][0], DineroSpawn6[rand][1], DineroSpawn6[rand][2], -1, -1, -1, 10.0);
	new randDineroB,TiempoDinero;
	randDineroB = random(5);
	switch(randDineroB)
	{
	    case 0: TiempoDinero = 5000;
	    case 1: TiempoDinero = 4000;
	    case 2: TiempoDinero = 5500;
	    case 3: TiempoDinero = 2000;
	    case 4: TiempoDinero = 7000;
	    case 5: TiempoDinero = 4500;
	    default: TiempoDinero = 4500;
    }
	SetTimerEx("BorrarDinero",TiempoDinero,false,"d",DinerObjeto);
	RevisarLogroAfinidad(playerid);
	return 1;
}
stock AbrirRejas()
{
	MoveDynamicObject(RejasFC[0],198.87000+1.4, 1442.04004, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[1],198.87000+1.4, 1442.04004, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[2],194.99001+1.4, 1442.04004, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[3],194.99001+1.4, 1442.04004, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[4],191.13000+1.4, 1442.04004, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[5],191.13000+1.4, 1442.04004, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[6],187.35001+1.4, 1442.04004, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[7],187.35001+1.4, 1442.04004, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[8],183.50999+1.4, 1442.04004, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[9],183.50999+1.4, 1442.04004, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[10],180.86000+1.4, 1441.35999, 1081.79004, 3.0);
	MoveDynamicObject(RejasFC[11],179.57001+1.4, 1442.04004, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[12],179.57001+1.4, 1442.04004, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[13],179.13000+1.4, 1441.45996, 1081.81995, 3.0);
	MoveDynamicObject(RejasFC[14],175.71001+1.4, 1442.04004, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[15],175.71001+1.4, 1442.04004, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[16],198.66000+1.4, 1457.37000, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[17],198.66000+1.4, 1457.37000, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[18],171.83000+1.4, 1442.04004, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[19],194.84000+1.4, 1457.37000, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[20],194.84000+1.4, 1457.37000, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[21],191.16000+1.4, 1457.37000, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[22],191.16000+1.4, 1457.37000, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[23],187.24001+1.4, 1457.37000, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[24],187.12000+1.4, 1457.37000, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[25],183.24001+1.4, 1457.37000, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[26],179.39999+1.4, 1457.37000, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[27],175.70000+1.4, 1457.37000, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[28],171.58000+1.4, 1457.37000, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[29],175.56000+1.4, 1457.37000, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[30],179.56000+1.4, 1457.37000, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[31],183.39999+1.4, 1457.37000, 1089.34998, 3.0);
	return 1;
}


stock CerrarRejas()
{
	MoveDynamicObject(RejasFC[0],198.87000, 1442.04004, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[1],198.87000, 1442.04004, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[2],194.99001, 1442.04004, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[3],194.99001, 1442.04004, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[4],191.13000, 1442.04004, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[5],191.13000, 1442.04004, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[6],187.35001, 1442.04004, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[7],187.35001, 1442.04004, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[8],183.50999, 1442.04004, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[9],183.50999, 1442.04004, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[10],180.86000, 1441.35999, 1081.79004, 3.0);
	MoveDynamicObject(RejasFC[11],179.57001, 1442.04004, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[12],179.57001, 1442.04004, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[13],179.13000, 1441.45996, 1081.81995, 3.0);
	MoveDynamicObject(RejasFC[14],175.71001, 1442.04004, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[15],175.71001, 1442.04004, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[16],198.66000, 1457.37000, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[17],198.66000, 1457.37000, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[18],171.83000, 1442.04004, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[19],194.84000, 1457.37000, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[20],194.84000, 1457.37000, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[21],191.16000, 1457.37000, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[22],191.16000, 1457.37000, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[23],187.24001, 1457.37000, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[24],187.12000, 1457.37000, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[25],183.24001, 1457.37000, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[26],179.39999, 1457.37000, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[27],175.70000, 1457.37000, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[28],171.58000, 1457.37000, 1085.06995, 3.0);
	MoveDynamicObject(RejasFC[29],175.56000, 1457.37000, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[30],179.56000, 1457.37000, 1089.34998, 3.0);
	MoveDynamicObject(RejasFC[31],183.39999, 1457.37000, 1089.34998, 3.0);
	return 1;
}

stock ApareceHospital(playerid)
{
	EstablecerVida(playerid,4.0);
	if(PlayerInfo[playerid][pDuty] != 1)
	{
		QuitarArmas(playerid);
		EstablecerChaleco(playerid,0.0);
	}
	DarRopa(playerid);
	DarArmas(playerid);
	HospitalMasCercano(playerid);
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid, 0);
	PlayerInfo[playerid][Agonizando] = 0;
	Muriendo[playerid] = 0;
	TogglePlayerControllable(playerid,0);
	SetPVarInt(playerid, "IsFrozen", 0);
	EnCombate[playerid] = 0;
 	TextDrawHideForPlayer(playerid, Sangre);
 	TextDrawHideForPlayer(playerid, NewPlayer[2]);
 	TextDrawHideForPlayer(playerid, NewPlayer[0]);
	SendClientMessage(playerid, 0xafafafFF,"{FFBC00}Fuiste trasladado al hospital y los médicos pudieron reanimarte");
	SendClientMessage(playerid, 0xafafafFF,"{FFBC00}Están curándote las heridas, aguarda un momento.");
	DarPrendas(playerid);
	SetTimerEx("CurarON",1000,false,"d",playerid);
	return 1;
}

stock ASendClientMessage(color, text[], aLevel = 2)
{
	foreach(Player,i)
	{
	    if(PlayerInfo[i][pAdmin] < aLevel) continue;
	    SendClientMessage(i, color, text);
	}
	return 1;
}

stock CheckspamString(text[])
{
	for(new i = 0; i < sizeof(PalabrasSPAM); i++)
	{
	    if(strfind(text, PalabrasSPAM[i], true) != -1) return 1;
	}
	return 0;
}

stock PonerPrenda(playerid, prenda)
{
    new pName[50], Query[256];
    GetPlayerName(playerid, pName, 50);
    //if(TieneSombrero[playerid] == 1) return SendClientMessage(playerid,-1,"No puedes llevar un sombrero ahora mismo.");
    if(PlayerInfo[playerid][pObj] == prenda && prenda != 19382)
    {
		if(UsandoP[playerid] >= 2) return SendClientMessage(playerid,-1,"Tienes que {DBED16}/quitar prenda{FFFFFF}, no puedes usar más de 2 a la vez.");
		if(UsandoObj[playerid] == 1) return SendClientMessage(playerid,-1,"Ya tienes equipada esa prenda.");
		if(!IsPlayerAttachedObjectSlotUsed(playerid,0)) { SlotP2[0][playerid] = 0; }
		else if(!IsPlayerAttachedObjectSlotUsed(playerid,1)) { SlotP2[0][playerid] = 1; }
		SetPlayerAttachedObject(playerid, SlotP2[0][playerid], PlayerInfo[playerid][pObj], 2, PlayerInfo[playerid][pfOffsetX], PlayerInfo[playerid][pfOffsetY],  PlayerInfo[playerid][pfOffsetZ], PlayerInfo[playerid][pfRotX], PlayerInfo[playerid][pfRotY], PlayerInfo[playerid][pfRotZ], PlayerInfo[playerid][pfScaleX], PlayerInfo[playerid][pfScaleY], PlayerInfo[playerid][pfScaleZ]);
		UsandoObj[playerid] = 1;
		UsandoP[playerid]++;
		format(Query, 200, "UPDATE `prendas` SET `ObjUsed`='1',`ATH`='%d' WHERE Propietario ='%s' AND Slot='1'",SlotP2[0][playerid],pName);
		mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
		SendClientMessage(playerid,-1,"Te pusiste una prenda, en cualquier momento puedes {DBED16}/quitar prenda{FFFFFF} o {DBED16}/acomodar prenda{FFFFFF}.");
		return 1;
    }
    if(PlayerInfo[playerid][pObj2] == prenda && prenda != 19382)
    {
		if(UsandoP[playerid] >= 2) return SendClientMessage(playerid,-1,"Tienes que {DBED16}/quitar prenda{FFFFFF}, no puedes usar más de 2 a la vez.");
		if(UsandoObj2[playerid] == 1) return SendClientMessage(playerid,-1,"Ya tienes equipada esa prenda.");
		if(!IsPlayerAttachedObjectSlotUsed(playerid,0)) { SlotP2[1][playerid] = 0; }
		else if(!IsPlayerAttachedObjectSlotUsed(playerid,1)) { SlotP2[1][playerid] = 1; }
		SetPlayerAttachedObject(playerid, SlotP2[1][playerid], PlayerInfo[playerid][pObj2], 2, PlayerInfo[playerid][pfOffsetX2], PlayerInfo[playerid][pfOffsetY2],  PlayerInfo[playerid][pfOffsetZ2], PlayerInfo[playerid][pfRotX2], PlayerInfo[playerid][pfRotY2], PlayerInfo[playerid][pfRotZ2], PlayerInfo[playerid][pfScaleX2], PlayerInfo[playerid][pfScaleY2], PlayerInfo[playerid][pfScaleZ2]);
		UsandoObj2[playerid] = 1;
		UsandoP[playerid]++;
		format(Query, 200, "UPDATE `prendas` SET `ObjUsed`='1',`ATH`='%d' WHERE Propietario ='%s' AND Slot='2'",SlotP2[1][playerid],pName);
		mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
		SendClientMessage(playerid,-1,"Te pusiste una prenda, en cualquier momento puedes {DBED16}/quitar prenda{FFFFFF} o {DBED16}/acomodar prenda{FFFFFF}.");
		return 1;
    }
    if(PlayerInfo[playerid][pObj3] == prenda && prenda != 19382)
    {
		if(UsandoP[playerid] >= 2) return SendClientMessage(playerid,-1,"Tienes que {DBED16}/quitar prenda{FFFFFF}, no puedes usar más de 2 a la vez.");
		if(UsandoObj3[playerid] == 1) return SendClientMessage(playerid,-1,"Ya tienes equipada esa prenda.");
		if(!IsPlayerAttachedObjectSlotUsed(playerid,0)) { SlotP2[2][playerid] = 0; }
		else if(!IsPlayerAttachedObjectSlotUsed(playerid,1)) { SlotP2[2][playerid] = 1; }
		SetPlayerAttachedObject(playerid,  SlotP2[2][playerid], PlayerInfo[playerid][pObj3], 2, PlayerInfo[playerid][pfOffsetX3], PlayerInfo[playerid][pfOffsetY3],  PlayerInfo[playerid][pfOffsetZ3], PlayerInfo[playerid][pfRotX3], PlayerInfo[playerid][pfRotY3], PlayerInfo[playerid][pfRotZ3], PlayerInfo[playerid][pfScaleX3], PlayerInfo[playerid][pfScaleY3], PlayerInfo[playerid][pfScaleZ3]);
		UsandoObj3[playerid] = 1;
		UsandoP[playerid]++;
		format(Query, 200, "UPDATE `prendas` SET `ObjUsed`='1',`ATH`='%d' WHERE Propietario ='%s' AND Slot='3'",SlotP2[2][playerid],pName);
		mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
		SendClientMessage(playerid,-1,"Te pusiste una prenda, en cualquier momento puedes {DBED16}/quitar prenda{FFFFFF} o {DBED16}/acomodar prenda{FFFFFF}.");
		return 1;
    }
    if(PlayerInfo[playerid][pObj4] == prenda && prenda != 19382)
    {
		if(UsandoP[playerid] >= 2) return SendClientMessage(playerid,-1,"Tienes que {DBED16}/quitar prenda{FFFFFF}, no puedes usar más de 2 a la vez.");
		if(UsandoObj4[playerid] == 1) return SendClientMessage(playerid,-1,"Ya tienes equipada esa prenda.");
		if(!IsPlayerAttachedObjectSlotUsed(playerid,0)) { SlotP2[3][playerid] = 0; }
		else if(!IsPlayerAttachedObjectSlotUsed(playerid,1)) { SlotP2[3][playerid] = 1; }
		SetPlayerAttachedObject(playerid,  SlotP2[3][playerid], PlayerInfo[playerid][pObj4], 2, PlayerInfo[playerid][pfOffsetX4], PlayerInfo[playerid][pfOffsetY4],  PlayerInfo[playerid][pfOffsetZ4], PlayerInfo[playerid][pfRotX4], PlayerInfo[playerid][pfRotY4], PlayerInfo[playerid][pfRotZ4], PlayerInfo[playerid][pfScaleX4], PlayerInfo[playerid][pfScaleY4], PlayerInfo[playerid][pfScaleZ4]);
		UsandoObj4[playerid] = 1;
		UsandoP[playerid]++;
		format(Query, 200, "UPDATE `prendas` SET `ObjUsed`='1',`ATH`='%d' WHERE Propietario ='%s' AND Slot='4'",SlotP2[3][playerid],pName);
		mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
		SendClientMessage(playerid,-1,"Te pusiste una prenda, en cualquier momento puedes {DBED16}/quitar prenda{FFFFFF} o {DBED16}/acomodar prenda{FFFFFF}.");
		return 1;
    }
    return 1;
}

stock QuitarPrenda(playerid, prenda)
{
    new pName[50], Query[256];
    GetPlayerName(playerid, pName, 50);
    if(PlayerInfo[playerid][pObj] == prenda && prenda != 19382)
    {
        RemovePlayerAttachedObject(playerid, SlotP2[0][playerid]);
        UsandoObj[playerid] = 0;
        UsandoP[playerid]--;
        format(Query, 200, "UPDATE `prendas` SET `ObjUsed`='0' WHERE Propietario ='%s' AND Slot='1'",pName);
        mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
        SendClientMessage(playerid,-1,"Te quitaste la prenda, en cualquier momento puedes {DBED15}/usar prenda{FFFFFF}.");
        return 1;
    }
    if(PlayerInfo[playerid][pObj2] == prenda && prenda != 19382)
    {
        RemovePlayerAttachedObject(playerid, SlotP2[1][playerid]);
        UsandoObj2[playerid] = 0;
        UsandoP[playerid]--;
        format(Query, 200, "UPDATE `prendas` SET `ObjUsed`='0' WHERE Propietario ='%s' AND Slot='2'",pName);
        mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
        SendClientMessage(playerid,-1,"Te quitaste la prenda, en cualquier momento puedes {DBED15}/usar prenda{FFFFFF}.");
		return 1;
    }
    if(PlayerInfo[playerid][pObj3] == prenda && prenda != 19382)
    {
        RemovePlayerAttachedObject(playerid,  SlotP2[2][playerid]);
        UsandoObj3[playerid] = 0;
        UsandoP[playerid]--;
        format(Query, 200, "UPDATE `prendas` SET `ObjUsed`='0' WHERE Propietario ='%s' AND Slot='3'",pName);
        mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
        SendClientMessage(playerid,-1,"Te quitaste la prenda, en cualquier momento puedes {DBED15}/usar prenda{FFFFFF}.");
		return 1;
    }
    if(PlayerInfo[playerid][pObj4] == prenda && prenda != 19382)
    {
        RemovePlayerAttachedObject(playerid,  SlotP2[3][playerid]);
        UsandoObj4[playerid] = 0;
        UsandoP[playerid]--;
        format(Query, 200, "UPDATE `prendas` SET `ObjUsed`='0' WHERE Propietario ='%s' AND Slot='4'",pName);
        mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
        SendClientMessage(playerid,-1,"Te quitaste la prenda, en cualquier momento puedes {DBED15}/usar prenda{FFFFFF}.");
		return 1;
    }
    return 1;
}

stock AcomodarPrenda(playerid, prenda)
{
    if(PlayerInfo[playerid][pObj] == prenda && prenda != 19382)
    {
        if(!IsPlayerAttachedObjectSlotUsed(playerid,SlotP2[0][playerid])) return SendClientMessage(playerid,-1,"Necesitas usar una prenda para modificar su posición");
        EditAttachedObject(playerid,SlotP2[0][playerid]);
        SendClientMessage(playerid,-1,"{DBED15}¡ATENCIÓN!{FFFFFF} Si usas el objeto en un lugar irreal, la administración puede quitartelo sin previo aviso.");
		return 1;
    }
    if(PlayerInfo[playerid][pObj2] == prenda && prenda != 19382)
    {
        if(!IsPlayerAttachedObjectSlotUsed(playerid,SlotP2[1][playerid])) return SendClientMessage(playerid,-1,"Necesitas usar una prenda para modificar su posición");
        EditAttachedObject(playerid,SlotP2[1][playerid]);
        SendClientMessage(playerid,-1,"{DBED15}¡ATENCIÓN!{FFFFFF} Si usas el objeto en un lugar irreal, la administración puede quitartelo sin previo aviso.");
		return 1;
    }
    if(PlayerInfo[playerid][pObj3] == prenda && prenda != 19382)
    {
        if(!IsPlayerAttachedObjectSlotUsed(playerid, SlotP2[2][playerid])) return SendClientMessage(playerid,-1,"Necesitas usar una prenda para modificar su posición");
        EditAttachedObject(playerid, SlotP2[2][playerid]);
        SendClientMessage(playerid,-1,"{DBED15}¡ATENCIÓN!{FFFFFF} Si usas el objeto en un lugar irreal, la administración puede quitartelo sin previo aviso.");
		return 1;
    }
    if(PlayerInfo[playerid][pObj4] == prenda && prenda != 19382)
    {
        if(!IsPlayerAttachedObjectSlotUsed(playerid, SlotP2[3][playerid])) return SendClientMessage(playerid,-1,"Necesitas usar una prenda para modificar su posición");
        EditAttachedObject(playerid, SlotP2[3][playerid]);
        SendClientMessage(playerid,-1,"{DBED15}¡ATENCIÓN!{FFFFFF} Si usas el objeto en un lugar irreal, la administración puede quitartelo sin previo aviso.");
		return 1;
    }
    return 1;
}


stock LimpiarLog(lineas)
{
	foreach(Player, i)
	{
		if(PlayerInfo[i][pAdmin] < ADMIN_LEVEL_DUDAS)
		{
		    for(new e=0; e<lineas; e++) SendClientMessage(i, -1, "");
			SendClientMessage(i, 0xAA3333AA, "El log del chat fue borrado.");
		}
	}
	return 1;
}

stock LimpiarChat(playerid, lines, color)
{
	if (IsPlayerConnected(playerid))
	{
		for(new i=0; i<lines; i++) SendClientMessage(playerid,color," ");
	}
	return 1;
}

stock CrearIconoGPS(tdid, Float: PosGPS_X, Float: PosGPS_Y, text[])
{
	TDGPSCreadoS ++;
	TDGPSCreado[tdid] = 1;
	TextDGPS[tdid] = TextDrawCreate(PosGPS_X,PosGPS_Y, text);
	TextDrawLetterSize(TextDGPS[tdid], 0.000000, 0.000000);
	TextDrawTextSize(TextDGPS[tdid], 8.444448, 9.457767);
	TextDrawAlignment(TextDGPS[tdid], 2);
	TextDrawColor(TextDGPS[tdid], -1);
	TextDrawSetShadow(TextDGPS[tdid], 0);
	TextDrawSetOutline(TextDGPS[tdid], 0);
	TextDrawFont(TextDGPS[tdid], 4);
	return 1;
}


stock DarPrendas(playerid)
{
	if(UsandoObj[playerid]  == 1 && PlayerInfo[playerid][pObj]  > 19382) { SetPlayerAttachedObject(playerid, SlotP2[0][playerid], PlayerInfo[playerid][pObj],  2, PlayerInfo[playerid][pfOffsetX],  PlayerInfo[playerid][pfOffsetY],   PlayerInfo[playerid][pfOffsetZ],  PlayerInfo[playerid][pfRotX],  PlayerInfo[playerid][pfRotY],  PlayerInfo[playerid][pfRotZ],  PlayerInfo[playerid][pfScaleX],  PlayerInfo[playerid][pfScaleY],  PlayerInfo[playerid][pfScaleZ]);  }
	if(UsandoObj2[playerid] == 1 && PlayerInfo[playerid][pObj2] > 19382) { SetPlayerAttachedObject(playerid, SlotP2[1][playerid], PlayerInfo[playerid][pObj2], 2, PlayerInfo[playerid][pfOffsetX2], PlayerInfo[playerid][pfOffsetY2],  PlayerInfo[playerid][pfOffsetZ2], PlayerInfo[playerid][pfRotX2], PlayerInfo[playerid][pfRotY2], PlayerInfo[playerid][pfRotZ2], PlayerInfo[playerid][pfScaleX2], PlayerInfo[playerid][pfScaleY2], PlayerInfo[playerid][pfScaleZ2]); }
	if(UsandoObj3[playerid] == 1 && PlayerInfo[playerid][pObj3] > 19382) { SetPlayerAttachedObject(playerid, SlotP2[2][playerid], PlayerInfo[playerid][pObj3], 2, PlayerInfo[playerid][pfOffsetX3], PlayerInfo[playerid][pfOffsetY3],  PlayerInfo[playerid][pfOffsetZ3], PlayerInfo[playerid][pfRotX3], PlayerInfo[playerid][pfRotY3], PlayerInfo[playerid][pfRotZ3], PlayerInfo[playerid][pfScaleX3], PlayerInfo[playerid][pfScaleY3], PlayerInfo[playerid][pfScaleZ3]); }
	if(UsandoObj4[playerid] == 1 && PlayerInfo[playerid][pObj4] > 19382) { SetPlayerAttachedObject(playerid, SlotP2[3][playerid], PlayerInfo[playerid][pObj4], 2, PlayerInfo[playerid][pfOffsetX4], PlayerInfo[playerid][pfOffsetY4],  PlayerInfo[playerid][pfOffsetZ4], PlayerInfo[playerid][pfRotX4], PlayerInfo[playerid][pfRotY4], PlayerInfo[playerid][pfRotZ4], PlayerInfo[playerid][pfScaleX4], PlayerInfo[playerid][pfScaleY4], PlayerInfo[playerid][pfScaleZ4]); }
}

stock Actualizar(playerid)
{
	CalcularNivel(playerid);
	SetPlayerProgressBarMaxValue(playerid,Progressbar[playerid][Experiencia], PlayerInfo[playerid][NivelExp]);
	SetPlayerProgressBarValue(playerid,Progressbar[playerid][Experiencia], PlayerInfo[playerid][jExperiencia]);
	UpdatePlayerProgressBar(playerid,Progressbar[playerid][Experiencia]);
}

stock Float:GetPlayerDistanceToVehicle(playerid, vehicleid)
{
	new Float:PCoords[3], Float:VCoords[3];
	GetPlayerPos(playerid, PCoords[0], PCoords[1], PCoords[2]);
	GetVehiclePos(vehicleid, VCoords[0], VCoords[1], VCoords[2]);
	new Float:Distance[4];
	for(new n=0; n<3; n++)
	{
		Distance[n] = floatabs(PCoords[n]) - floatabs(VCoords[n]);
	}
	Distance[3] = floatsqroot((Distance[0] * Distance[0]) + (Distance[1] * Distance[1]) + (Distance[2] * Distance[2]));
	return Distance[3];
}

stock GetPlayerNearestVehicle(playerid)
{
	new nearest[2] = {-1, -1};
	for(new v=0; v < MAX_VEHICLES; v++)
	{
		if(GetVehicleModel(v) == 453)
		{
			if(nearest[0] == -1)
			{
				nearest[0] = v;
				nearest[1] = floatround(GetPlayerDistanceToVehicle(playerid, v));
			}
			else
			{
				if(floatround(GetPlayerDistanceToVehicle(playerid, v)) < nearest[1])
				{
					nearest[0] = v;
					nearest[1] = floatround(GetPlayerDistanceToVehicle(playerid, v));
				}
			}
		}
	}
	return nearest[0];
}

stock floatMapa3Da2D(Float:_3Dx, Float:_3Dy, Float:texturaX, Float:texturaY, Float:textura_tamanoX, Float:textura_tamanoY, &Float:_2Dx, &Float:_2Dy)
{
	const Float:mapaTamanoMaximo = 6000.0;
	_2Dx = ((textura_tamanoX/mapaTamanoMaximo)*_3Dx+texturaX+(textura_tamanoX/2));
	_2Dy = ((textura_tamanoY/mapaTamanoMaximo)*-_3Dy+texturaY+(textura_tamanoY/2));
	return 1;
}

stock SetVehiclePassengersInteriorEx(vehicleid, interior_id)
{
    for(new i; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(IsPlayerInVehicle(i, vehicleid)) SetPlayerInterior(i, interior_id);
        }
    }
    return LinkVehicleToInterior(vehicleid, interior_id);
}

stock SetVehiclePassengersVWEx(vehicleid, vw_id)
{
    for(new i; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(IsPlayerInVehicle(i, vehicleid)) SetPlayerVirtualWorld(i, vw_id);
        }
    }
    return SetVehicleVirtualWorld(vehicleid, vw_id);
}

stock EnviarAlGaraje(vehicleid, garaje_id)
{
    for(new i; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(IsPlayerInVehicle(i, vehicleid)) PlayerInfo[i][EnGarage] = garaje_id;
        }
    }
    return 1;
}

stock CreatePlayerVehicle(playerid, modelid, Float: x, Float: y, Float: z, Float: angle, color1, color2, precio, monedas, idmensaje)
{
    new mensaje[10], kevin[5], message[120], value = random(999);
	randomString2(kevin, 4);
	format(mensaje, 10,""SERVER_COIN2"RP %d", value);
	new day, month, year, pName[50], query[1200];
	getdate(day,month,year);
	GetPlayerName(playerid, pName, 50);
	if(PlayerInfo[playerid][vModelo] == 0)
	{
	    format(query, sizeof(query), "INSERT INTO `p_vehicles` (Modelo,X,Y,Z,A,Color1,Color2,Vida,Precio,vMoneda,Propietario,Slot) VALUES ('%d','%f','%f','%f','%f','%d','%d','1000.0','%d','%d','%d','1')", modelid,x,y,z,angle,color1,color2,precio,monedas,PlayerInfo[playerid][pID]);
		mysql_function_query(Conecction, query, true, "OnqueryFinish", "ii", 0, playerid);
		PlayerInfo[playerid][vModelo] = modelid;
		PlayerInfo[playerid][pOX] = x;
		PlayerInfo[playerid][pOY] = y;
		PlayerInfo[playerid][pOZ] = z;
		PlayerInfo[playerid][pOA] = angle;
		PlayerInfo[playerid][vColor1] = color1;
		PlayerInfo[playerid][vColor2] = color2;
		PlayerInfo[playerid][vPrecio] = precio;
		PlayerInfo[playerid][vMonedaa] = monedas;
		PlayerInfo[playerid][vpatente] = mensaje;
		bloqueado[autos[playerid]] = 0;
		PlayerInfo[playerid][vSeguro] = 0;
		PlayerInfo[playerid][vAAlarma] = 0;
        autos[playerid] = CreateVehicle(modelid,x,y,z,angle,color1,color2,-1);
        SetVehicleNumberPlate(autos[playerid], PlayerInfo[playerid][vpatente]);
		format(query, sizeof(query), "UPDATE p_vehicles SET `EstacionadoX`='%f',`EstacionadoY`='%f',`EstacionadoZ`='%f',`EstacionadoA`='%f',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND Slot = '1'", x,y,z,angle,PlayerInfo[playerid][pID]);
		mysql_function_query(Conecction, query, true, "OnqueryFinish", "ii", 0, playerid);
		format(message, sizeof(message), "El administrador %s creo un VID: %d, Color1: %d, Color2: %d al jugador %s.", PlayerName(idmensaje), modelid, color1, color2, PlayerName(playerid));
		SendClientMessage(idmensaje, -1, message);
		VehicleFuel[autos[playerid]] = 50;
		PlayerInfo[playerid][vGas] = 50;
	}
	else if(PlayerInfo[playerid][vModelo] != 0 && PlayerInfo[playerid][vModelo2] == 0)
	{
		format(query, sizeof(query), "INSERT INTO `p_vehicles` (Modelo,X,Y,Z,A,Color1,Color2,Vida,Precio,vMoneda,Propietario,Slot) VALUES ('%d','%f','%f','%f','%f','%d','%d','1000.0','%d','%d','%d','2')", modelid,x,y,z,angle,color1,color2,precio,monedas,PlayerInfo[playerid][pID]);
		mysql_function_query(Conecction, query, true, "OnqueryFinish", "ii", 0, playerid);
		PlayerInfo[playerid][vModelo2] = modelid;
		PlayerInfo[playerid][pOX2] = x;
		PlayerInfo[playerid][pOY2] = y;
		PlayerInfo[playerid][pOZ2] = z;
		PlayerInfo[playerid][pOA2] = angle;
		PlayerInfo[playerid][v2Color1] = color1;
		PlayerInfo[playerid][v2Color2] = color2;
		PlayerInfo[playerid][v2Precio] = precio;
		PlayerInfo[playerid][v2Monedaa] = monedas;
		PlayerInfo[playerid][v2patente] = mensaje;
		bloqueado[autos2[playerid]] = 0;
		PlayerInfo[playerid][vSeguro2] = 0;
		PlayerInfo[playerid][vAAlarma2] = 0;
        autos2[playerid] = CreateVehicle(modelid,x,y,z,angle,color1,color2,-1);
        SetVehicleNumberPlate(autos[playerid], PlayerInfo[playerid][v2patente]);
		format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='%f',`EstacionadoY`='%f',`EstacionadoZ`='%f',`EstacionadoA`='%f',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND Slot = '2'", x,y,z,angle,PlayerInfo[playerid][pID]);
		mysql_function_query(Conecction, query, true, "OnqueryFinish", "ii", 0, playerid);
		format(message, sizeof(message), "El administrador %s creo un VID: %d, Color1: %d, Color2: %d al jugador %s.", PlayerName(idmensaje), modelid, color1, color2, PlayerName(playerid));
		SendClientMessage(idmensaje, -1, message);
		VehicleFuel[autos2[playerid]] = 50;
		PlayerInfo[playerid][v2Gas] = 50;
	}
	else if(PlayerInfo[playerid][vModelo] != 0 && PlayerInfo[playerid][vModelo2] != 0 && PlayerInfo[playerid][vModelo3] == 0)
	{
		format(query, sizeof(query), "INSERT INTO `p_vehicles` (Modelo,X,Y,Z,A,Color1,Color2,Vida,Precio,vMoneda,Propietario,Slot) VALUES ('%d','%f','%f','%f','%f','%d','%d','1000.0','%d','%d','%d','3')", modelid,x,y,z,angle,color1,color2,precio,monedas,PlayerInfo[playerid][pID]);
		mysql_function_query(Conecction, query, true, "OnqueryFinish", "ii", 0, playerid);
		PlayerInfo[playerid][vModelo3] = modelid;
		PlayerInfo[playerid][pOX3] = x;
		PlayerInfo[playerid][pOY3] = y;
		PlayerInfo[playerid][pOZ3] = z;
		PlayerInfo[playerid][pOA3] = angle;
		PlayerInfo[playerid][v3Color1] = color1;
		PlayerInfo[playerid][v3Color2] = color2;
		PlayerInfo[playerid][v3Precio] = precio;
		PlayerInfo[playerid][v3Monedaa] = monedas;
		PlayerInfo[playerid][v3patente] = mensaje;
		bloqueado[autos3[playerid]] = 0;
		PlayerInfo[playerid][vSeguro3] = 0;
		PlayerInfo[playerid][vAAlarma3] = 0;
        autos3[playerid] = CreateVehicle(modelid,x,y,z,angle,color1,color2,-1);
        SetVehicleNumberPlate(autos[playerid], PlayerInfo[playerid][v3patente]);
		format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='%f',`EstacionadoY`='%f',`EstacionadoZ`='%f',`EstacionadoA`='%f',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND Slot = '3'", x,y,z,angle,PlayerInfo[playerid][pID]);
		mysql_function_query(Conecction, query, true, "OnqueryFinish", "ii", 0, playerid);
		format(message, sizeof(message), "El administrador %s creo un VID: %d, Color1: %d, Color2: %d al jugador %s.", PlayerName(idmensaje), modelid, color1, color2, PlayerName(playerid));
		SendClientMessage(idmensaje, -1, message);
		VehicleFuel[autos3[playerid]] = 50;
		PlayerInfo[playerid][v3Gas] = 50;
	}
	else if(PlayerInfo[playerid][vModelo] != 0 && PlayerInfo[playerid][vModelo2] != 0 && PlayerInfo[playerid][vModelo3] != 0 && PlayerInfo[playerid][vModelo4] == 0)
	{
		format(query, sizeof(query), "INSERT INTO `p_vehicles` (Modelo,X,Y,Z,A,Color1,Color2,Vida,Precio,vMoneda,Propietario,Slot) VALUES ('%d','%f','%f','%f','%f','%d','%d','1000.0','%d','%d','%d','1')", modelid,x,y,z,angle,color1,color2,precio,monedas,PlayerInfo[playerid][pID]);
		mysql_function_query(Conecction, query, true, "OnqueryFinish", "ii", 0, playerid);
		PlayerInfo[playerid][vModelo4] = modelid;
		PlayerInfo[playerid][pOX4] = x;
		PlayerInfo[playerid][pOY4] = y;
		PlayerInfo[playerid][pOZ4] = z;
		PlayerInfo[playerid][pOA4] = angle;
		PlayerInfo[playerid][v4Color1] = color1;
		PlayerInfo[playerid][v4Color2] = color2;
		PlayerInfo[playerid][v4Precio] = precio;
		PlayerInfo[playerid][v4Monedaa] = monedas;
		PlayerInfo[playerid][v4patente] = mensaje;
		bloqueado[autos4[playerid]] = 0;
		PlayerInfo[playerid][vSeguro4] = 0;
		PlayerInfo[playerid][vAAlarma4] = 0;
        autos4[playerid] = CreateVehicle(modelid,x,y,z,angle,color1,color2,-1);
        SetVehicleNumberPlate(autos[playerid], PlayerInfo[playerid][v4patente]);
		format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='%f',`EstacionadoY`='%f',`EstacionadoZ`='%f',`EstacionadoA`='%f',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND Slot = '4'", x,y,z,angle,PlayerInfo[playerid][pID]);
		mysql_function_query(Conecction, query, true, "OnqueryFinish", "ii", 0, playerid);
		format(message, sizeof(message), "%s creo un coche ID: %d, C1: %d, C2: %d a %s.", PlayerName(idmensaje), modelid, color1, color2, PlayerName(playerid));
		SendClientMessage(idmensaje, -1, message);
		VehicleFuel[autos4[playerid]] = 50;
		PlayerInfo[playerid][v4Gas] = 50;
	}
	else SendClientMessage(idmensaje, -1, "Este jugador no puede tener más vehiculos.");
	return 1;
}
stock CodigoRopa(playerid,skinid,precio,sexo)
{
	if(PlayerInfo[playerid][pDuty] > 0) return SendClientMessage(playerid,-1, "No puedes comprar ropa estando de servicio.");
	if(PlayerInfo[playerid][jDinero] < precio) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	if(sexo != PlayerInfo[playerid][jSexo])
	{
		if(sexo == 2) return SendClientMessage(playerid, -1, "Esta ropa solo es para mujer.");
		if(sexo == 1) return SendClientMessage(playerid, -1, "Esta ropa solo es para hombres.");
		return SendClientMessage(playerid, -1, "Error, contacta con la administración.");
	}
	new Query2[560];
	SendClientMessage(playerid, -1, "Ropa cambiada correctamente.");
	PlayerInfo[playerid][jRopa] = skinid;
	SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
	format(Query2, 200, "UPDATE `usuarios` SET `Skin`='%d' WHERE `Username`='%s'",skinid,PlayerName(playerid));
	mysql_function_query(Conecction, Query2, true, "OnQueryFinish", "ii", 0, playerid);
	QuitarDinero(playerid, precio);
	return 1;
}
stock procesoOferta(armaOfertada, precio, idOfertador, aQuien)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(idOfertador,x,y,z);
	if(!IsPlayerInRangeOfPoint(aQuien, 5.0, x,y,z)) return SendClientMessage(idOfertador,-1,"No estas cerca de este jugador");
	armaofertada[aQuien] = armaOfertada;
	dineropedido[aQuien] = precio;
	ofertador[aQuien] = idOfertador;
	if(idTimerOfertaPerdida[aQuien] != -1)
	{
		KillTimer(idTimerOfertaPerdida[aQuien]);
		idTimerOfertaPerdida[aQuien] = -1;
	}
	idTimerOfertaPerdida[aQuien] = SetTimerEx("OfertaPerdida", 60000, false, "d", aQuien);
	TiempoVenta[idOfertador] = 60;
	if(idTimerTiempoVenta[idOfertador] != -1)
	{
		KillTimer(idTimerTiempoVenta[idOfertador]);
		idTimerTiempoVenta[idOfertador] = -1;
	}
	idTimerTiempoVenta[idOfertador] = SetTimerEx("TiempoVender", 60000, false, "d", idOfertador);
	return 1;
}

stock SendReportToQue(reportfrom, reportadoid, report[])
{
    new bool:breakingloop = false, newid = INVALID_REPORT_ID;
	for(new i=0;i<MAX_REPORTS;i++)
	{
		if(!breakingloop)
		{
			if(Reports[i][HasBeenUsed] == 0)
			{
				breakingloop = true;
				newid = i;
			}
		}
    }
    if(newid != INVALID_REPORT_ID)
    {
        strmid(Reports[newid][Report], report, 0, strlen(report), 250);
        Reports[newid][ReportadoID] = reportadoid;
        Reports[newid][ReportFrom] = reportfrom;
        Reports[newid][HasBeenUsed] = 1;
        Reports[newid][BeingUsed] = 1;
        foreach(Player,i)
		{
			if(PlayerInfo[i][pAdmin] > ADMIN_LEVEL_DUDAS)
			{
        		new string[200], string2[100];
        		if(PlayerInfo[reportfrom][pVip] == 0) format(string, sizeof(string), "Jugador %s (ID: %i| Nivel: %d) Reporto a %s (ID:{FFFFFF}%i{DBED16} | Nivel: {FFFFFF}%d)",PlayerName(reportfrom), reportfrom, PlayerInfo[reportfrom][@Nivel], PlayerName(reportadoid), reportadoid, PlayerInfo[reportadoid][@Nivel]);
				else format(string, sizeof(string), "Jugador VIP %s (ID: %i| Nivel: %d) Reporto a %s (ID:{FFFFFF}%i{DBED16} | Nivel: {FFFFFF}%d)",PlayerName(reportfrom), reportfrom, PlayerInfo[reportfrom][@Nivel], PlayerName(reportadoid), reportadoid, PlayerInfo[reportadoid][@Nivel]);
                format(string2, sizeof(string2), " Razón: {FF3300}%s",(report));
				SendClientMessage(i,0xDBED16FF,string);
				SendClientMessage(i,0xDBED16FF,string2);
			}
		}
    }
    else
    {
        ClearReports();
        SendReportToQue(reportfrom, reportadoid, report);
	}
	return 1;
}

stock DarPosicionHeladera(p)
{
	if(PropInfo[p][pTipo] == 1)
	{
	    switch(PropInfo[p][pInterior])
	    {
	        case 1:
	        {
	            PropInfo[p][pHeladeraX] = 240.6087;
	            PropInfo[p][pHeladeraY] = 1195.1021;
	            PropInfo[p][pHeladeraZ] = 1080.2578;

	            PropInfo[p][pRoperoX] = 232.7087;
	            PropInfo[p][pRoperoY] = 1211.9266;
	            PropInfo[p][pRoperoZ] = 1084.3838;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 2:
	        {
	            PropInfo[p][pHeladeraX] = 2315.2896;
	            PropInfo[p][pHeladeraY] = -1007.9119;
	            PropInfo[p][pHeladeraZ] = 1050.2109;

	            PropInfo[p][pRoperoX] = 2316.1682;
	            PropInfo[p][pRoperoY] = -1010.6525;
	            PropInfo[p][pRoperoZ] = 1054.7188;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 3:
	        {
	            PropInfo[p][pHeladeraX] = 2334.3918;
	            PropInfo[p][pHeladeraY] = -1068.3335;
	            PropInfo[p][pHeladeraZ] = 1049.0234;

	            PropInfo[p][pRoperoX] = 2334.7236;
	            PropInfo[p][pRoperoY] = -1073.7806;
	            PropInfo[p][pRoperoZ] = 1049.0234;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 4:
	        {
	            PropInfo[p][pHeladeraX] = 2182.2820;
	            PropInfo[p][pHeladeraY] = -1201.3693;
	            PropInfo[p][pHeladeraZ] = 1049.0308;

	            PropInfo[p][pRoperoX] = 2194.8635;
	            PropInfo[p][pRoperoY] = -1210.7710;
	            PropInfo[p][pRoperoZ] = 1049.0234;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 5:
	        {
	            PropInfo[p][pHeladeraX] = 2314.4543;
	            PropInfo[p][pHeladeraY] = -1212.2015;
	            PropInfo[p][pHeladeraZ] = 1049.0234;

	            PropInfo[p][pRoperoX] = 2319.6328;
	            PropInfo[p][pRoperoY] = -1212.8752;
	            PropInfo[p][pRoperoZ] = 1049.0234;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 6:
	        {
	            PropInfo[p][pHeladeraX] = 2373.8438;
	            PropInfo[p][pHeladeraY] = -1135.4618;
	            PropInfo[p][pHeladeraZ] = 1050.8750;

	            PropInfo[p][pRoperoX] = 2363.7671;
	            PropInfo[p][pRoperoY] = -1127.4540;
	            PropInfo[p][pRoperoZ] = 1050.8826;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 7:
	        {
	            PropInfo[p][pHeladeraX] = 2277.6765;
	            PropInfo[p][pHeladeraY] = -1134.2250;
	            PropInfo[p][pHeladeraZ] = 1050.8984;

	            PropInfo[p][pRoperoX] = 2286.2429;
	            PropInfo[p][pRoperoY] = -1137.8119;
	            PropInfo[p][pRoperoZ] = 1050.8984;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 8:
	        {
	            PropInfo[p][pHeladeraX] = 2498.1443;
	            PropInfo[p][pHeladeraY] = -1711.3541;
	            PropInfo[p][pHeladeraZ] = 1014.7422;

	            PropInfo[p][pRoperoX] = 2492.3171;
	            PropInfo[p][pRoperoY] = -1708.5667;
	            PropInfo[p][pRoperoZ] = 1018.3368;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 9:
	        {
	            PropInfo[p][pHeladeraX] = 231.6045;
	            PropInfo[p][pHeladeraY] = 1243.9056;
	            PropInfo[p][pHeladeraZ] = 1082.1406;

	            PropInfo[p][pRoperoX] = 225.0578;
	            PropInfo[p][pRoperoY] = 1248.5391;
	            PropInfo[p][pRoperoZ] = 1082.1406;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 10:
	        {
	            PropInfo[p][pHeladeraX] = 226.4834;
	            PropInfo[p][pHeladeraY] = 1287.9227;
	            PropInfo[p][pHeladeraZ] = 1082.1406;

	            PropInfo[p][pRoperoX] = 233.7389;
	            PropInfo[p][pRoperoY] = 1291.2286;
	            PropInfo[p][pRoperoZ] = 1082.1406;

                PropInfo[p][pLugarHeladera] = 24;
                PropInfo[p][pLugarRopero] = 20;
	        }
	        case 11:
	        {
	            PropInfo[p][pHeladeraX] = 243.4800;
	            PropInfo[p][pHeladeraY] = 1021.4285;
	            PropInfo[p][pHeladeraZ] = 1084.0129;

	            PropInfo[p][pRoperoX] = 236.0156;
	            PropInfo[p][pRoperoY] = 1032.3390;
	            PropInfo[p][pRoperoZ] = 1088.3125;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 24;
	        }
	        case 12:
	        {
	            PropInfo[p][pHeladeraX] = 300.0292;
	            PropInfo[p][pHeladeraY] = 1486.6417;
	            PropInfo[p][pHeladeraZ] = 1080.2578;

	            PropInfo[p][pRoperoX] = 300.1356;
	            PropInfo[p][pRoperoY] = 1471.3264;
	            PropInfo[p][pRoperoZ] = 1080.2578;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 13:
	        {
	            PropInfo[p][pHeladeraX] = 325.7386;
	            PropInfo[p][pHeladeraY] = 1478.6791;
	            PropInfo[p][pHeladeraZ] = 1084.4446;

	            PropInfo[p][pRoperoX] = 327.8060;
	            PropInfo[p][pRoperoY] = 1488.6558;
	            PropInfo[p][pRoperoZ] = 1084.6858;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 14:
	        {
	            PropInfo[p][pHeladeraX] = 378.8145;
	            PropInfo[p][pHeladeraY] = 1458.4629;
	            PropInfo[p][pHeladeraZ] = 1080.1875;

	            PropInfo[p][pRoperoX] = 380.6929;
	            PropInfo[p][pRoperoY] = 1472.8866;
	            PropInfo[p][pRoperoZ] = 1080.1875;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 15:
	        {
	            PropInfo[p][pHeladeraX] = 364.6002;
	            PropInfo[p][pHeladeraY] = 1428.4363;
	            PropInfo[p][pHeladeraZ] = 1081.3359;

	            PropInfo[p][pRoperoX] = 360.1048;
	            PropInfo[p][pRoperoY] = 1418.1925;
	            PropInfo[p][pRoperoZ] = 1081.3281;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 16:
	        {
	            PropInfo[p][pHeladeraX] = 494.4734;
	            PropInfo[p][pHeladeraY] = 1406.9779;
	            PropInfo[p][pHeladeraZ] = 1080.2578;

	            PropInfo[p][pRoperoX] = 486.9271;
	            PropInfo[p][pRoperoY] = 1414.3024;
	            PropInfo[p][pRoperoZ] = 1084.4160;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 17:
	        {
	            PropInfo[p][pHeladeraX] = 441.7853;
	            PropInfo[p][pHeladeraY] = 1406.7727;
	            PropInfo[p][pHeladeraZ] = 1084.3120;

	            PropInfo[p][pRoperoX] = 456.7776;
	            PropInfo[p][pRoperoY] = 1406.5548;
	            PropInfo[p][pRoperoZ] = 1084.3080;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 18:
	        {
	            PropInfo[p][pHeladeraX] = 266.9625;
	            PropInfo[p][pHeladeraY] = 1294.9094;
	            PropInfo[p][pHeladeraZ] = 1080.2578;

	            PropInfo[p][pRoperoX] = 260.4753;
	            PropInfo[p][pRoperoY] = 1293.0789;
	            PropInfo[p][pRoperoZ] = 1080.2578;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 19:
	        {
	            PropInfo[p][pHeladeraX] = 228.3452;
	            PropInfo[p][pHeladeraY] = 1157.6827;
	            PropInfo[p][pHeladeraZ] = 1082.6094;

	            PropInfo[p][pRoperoX] = 220.2945;
	            PropInfo[p][pRoperoY] = 1149.0428;
	            PropInfo[p][pRoperoZ] = 1082.6094;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 20:
	        {
	            PropInfo[p][pHeladeraX] = 22.4300;
	            PropInfo[p][pHeladeraY] = 1347.2555;
	            PropInfo[p][pHeladeraZ] = 1084.3750;

	            PropInfo[p][pRoperoX] = 31.3994;
	            PropInfo[p][pRoperoY] = 1345.5010;
	            PropInfo[p][pRoperoZ] = 1088.8750;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 21:
	        {
	            PropInfo[p][pHeladeraX] = -266.6378;
	            PropInfo[p][pHeladeraY] = 1451.4071;
	            PropInfo[p][pHeladeraZ] = 1084.3745;

	            PropInfo[p][pRoperoX] = -274.8148;
	            PropInfo[p][pRoperoY] = 1446.9792;
	            PropInfo[p][pRoperoZ] = 1088.8672;

                PropInfo[p][pLugarHeladera] = 24;
                PropInfo[p][pLugarRopero] = 20;
	        }
	        case 22:
	        {
	            PropInfo[p][pHeladeraX] = 31.4377;
	            PropInfo[p][pHeladeraY] = 1404.4353;
	            PropInfo[p][pHeladeraZ] = 1084.4297;

	            PropInfo[p][pRoperoX] = 26.3300;
	            PropInfo[p][pRoperoY] = 1414.8411;
	            PropInfo[p][pRoperoZ] = 1084.4297;

                PropInfo[p][pLugarHeladera] = 24;
                PropInfo[p][pLugarRopero] = 20;
	        }
	        case 23:
	        {
	            PropInfo[p][pHeladeraX] = 147.4858;
	            PropInfo[p][pHeladeraY] = 1383.1149;
	            PropInfo[p][pHeladeraZ] = 1083.8594;

	            PropInfo[p][pRoperoX] = 151.4808;
	            PropInfo[p][pRoperoY] = 1387.0924;
	            PropInfo[p][pRoperoZ] = 1088.3672;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 24;
	        }
	        case 24:
	        {
	            PropInfo[p][pHeladeraX] = 223.4673;
	            PropInfo[p][pHeladeraY] = 1079.7946;
	            PropInfo[p][pHeladeraZ] = 1084.1979;

	            PropInfo[p][pRoperoX] = 238.2854;
	            PropInfo[p][pRoperoY] = 1082.9908;
	            PropInfo[p][pRoperoZ] = 1084.1875;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 24;
	        }
	        case 25:
	        {
	            PropInfo[p][pHeladeraX] = -57.9440;
	            PropInfo[p][pHeladeraY] = 1366.2247;
	            PropInfo[p][pHeladeraZ] = 1080.2109;

	            PropInfo[p][pRoperoX] = -70.4076;
	            PropInfo[p][pRoperoY] = 1357.8486;
	            PropInfo[p][pRoperoZ] = 1080.2109;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 26:
	        {
	            PropInfo[p][pHeladeraX] = -290.5264;
	            PropInfo[p][pHeladeraY] = 1480.1294;
	            PropInfo[p][pHeladeraZ] = 1084.3750;

	            PropInfo[p][pRoperoX] = -296.5676;
	            PropInfo[p][pRoperoY] = 1474.6875;
	            PropInfo[p][pRoperoZ] = 1088.8750;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 27:
	        {
	            PropInfo[p][pHeladeraX] = -46.0470;
	            PropInfo[p][pHeladeraY] = 1398.3417;
	            PropInfo[p][pHeladeraZ] = 1084.4297;

	            PropInfo[p][pRoperoX] = -42.7718;
	            PropInfo[p][pRoperoY] = 1412.7611;
	            PropInfo[p][pRoperoZ] = 1084.4297;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 28:
	        {
	            PropInfo[p][pHeladeraX] = 78.2833;
	            PropInfo[p][pHeladeraY] = 1338.3760;
	            PropInfo[p][pHeladeraZ] = 1083.8672;

	            PropInfo[p][pRoperoX] = 92.7948;
	            PropInfo[p][pRoperoY] = 1332.7618;
	            PropInfo[p][pRoperoZ] = 1088.3595;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 29:
	        {
	            PropInfo[p][pHeladeraX] = 259.9944;
	            PropInfo[p][pHeladeraY] = 1249.3361;
	            PropInfo[p][pHeladeraZ] = 1084.2578;

	            PropInfo[p][pRoperoX] = 257.0948;
	            PropInfo[p][pRoperoY] = 1243.6552;
	            PropInfo[p][pRoperoZ] = 1084.2578;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 30:
	        {
	            PropInfo[p][pHeladeraX] = 2449.5256;
	            PropInfo[p][pHeladeraY] = -1685.9985;
	            PropInfo[p][pHeladeraZ] = 1013.5078;

	            PropInfo[p][pRoperoX] = 2462.0654;
	            PropInfo[p][pRoperoY] = -1699.1202;
	            PropInfo[p][pRoperoZ] = 1013.5078;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 31:
	        {
	            PropInfo[p][pHeladeraX] = 2817.4475;
	            PropInfo[p][pHeladeraY] = -1173.2578;
	            PropInfo[p][pHeladeraZ] = 1025.5703;

	            PropInfo[p][pRoperoX] = 2810.4717;
	            PropInfo[p][pRoperoY] = -1161.3860;
	            PropInfo[p][pRoperoZ] = 1029.1719;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 32:
	        {
	            PropInfo[p][pHeladeraX] = 331.9549;
	            PropInfo[p][pHeladeraY] = 1119.5458;
	            PropInfo[p][pHeladeraZ] = 1083.8903;

	            PropInfo[p][pRoperoX] = 310.7163;
	            PropInfo[p][pRoperoY] = 1119.6621;
	            PropInfo[p][pRoperoZ] = 1083.8828;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 33:
	        {
	            PropInfo[p][pHeladeraX] = 2334.1038;
	            PropInfo[p][pHeladeraY] = -1143.9227;
	            PropInfo[p][pHeladeraZ] = 1050.7031;

	            PropInfo[p][pRoperoX] = 2316.4282;
	            PropInfo[p][pRoperoY] = -1144.3564;
	            PropInfo[p][pRoperoZ] = 1054.3047;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 24;
	        }
	        case 34:
	        {
	            PropInfo[p][pHeladeraX] = 2265.0903;
	            PropInfo[p][pHeladeraY] = -1141.6536;
	            PropInfo[p][pHeladeraZ] = 1050.6328;

	            PropInfo[p][pRoperoX] = 2270.1960;
	            PropInfo[p][pRoperoY] = -1133.6097;
	            PropInfo[p][pRoperoZ] = 1050.6328;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 35:
	        {
	            PropInfo[p][pHeladeraX] = -2158.5508;
	            PropInfo[p][pHeladeraY] = 640.5544;
	            PropInfo[p][pHeladeraZ] = 1057.5861;

	            PropInfo[p][pRoperoX] = -2170.4807;
	            PropInfo[p][pRoperoY] = 646.8701;
	            PropInfo[p][pRoperoZ] = 1057.5938;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 36:
	        {
	            PropInfo[p][pHeladeraX] = 414.0121;
	            PropInfo[p][pHeladeraY] = 2537.5400;
	            PropInfo[p][pHeladeraZ] = 10.0077;

	            PropInfo[p][pRoperoX] = 413.1199;
	            PropInfo[p][pRoperoY] = 2536.6013;
	            PropInfo[p][pRoperoZ] = 10.0000;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	        case 37:
	        {
	            PropInfo[p][pHeladeraX] = 1275.3596;
	            PropInfo[p][pHeladeraY] = -821.8875;
	            PropInfo[p][pHeladeraZ] = 1085.6328;

	            PropInfo[p][pRoperoX] = 1271.5107;
	            PropInfo[p][pRoperoY] = -822.3544;
	            PropInfo[p][pRoperoZ] = 1089.9375;

	            PropInfo[p][pLugarRopero] = 24;
	            PropInfo[p][pLugarHeladera] = 30;
	        }
	        case 38:
	        {
	            PropInfo[p][pHeladeraX] = 2556.3142;
	            PropInfo[p][pHeladeraY] = -1297.3783;
	            PropInfo[p][pHeladeraZ] = 1060.9844;

	            PropInfo[p][pRoperoX] = 2576.5298;
	            PropInfo[p][pRoperoY] = -1280.4081;
	            PropInfo[p][pRoperoZ] = 1065.3672;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 30;
	        }
	        case 42:
	        {
	            PropInfo[p][pHeladeraX] = 2248.2996;
	            PropInfo[p][pHeladeraY] = -1213.5907;
	            PropInfo[p][pHeladeraZ] = 1049.0234;

	            PropInfo[p][pRoperoX] = 2262.7876;
	            PropInfo[p][pRoperoY] = -1216.7347;
	            PropInfo[p][pRoperoZ] = 1049.0234;

	            PropInfo[p][pLugarHeladera] = 24;
	            PropInfo[p][pLugarRopero] = 20;
	        }
	    }
	}
	else if(PropInfo[p][pTipo] == 3)
	{
	    PropInfo[p][pHeladeraX] = -791.4077;
	    PropInfo[p][pHeladeraY] = 508.3234;
	    PropInfo[p][pHeladeraZ] = 1367.3672;

     	PropInfo[p][pRoperoX] = -778.0544;
      	PropInfo[p][pRoperoY] = 496.4131;
       	PropInfo[p][pRoperoZ] = 1368.5304;

	    PropInfo[p][pLugarHeladera] = 240;
	    PropInfo[p][pLugarRopero] = 20;
	}
	else if(PropInfo[p][pTipo] == 2)
	{
		PropInfo[p][pHeladeraX] = 0;
	    PropInfo[p][pHeladeraY] = 0;
	    PropInfo[p][pHeladeraZ] = 0;

     	PropInfo[p][pRoperoX] = 1471.5107;
      	PropInfo[p][pRoperoY] = 563.7426;
       	PropInfo[p][pRoperoZ] = 1000.9959;

	    PropInfo[p][pLugarHeladera] = 24;
	    PropInfo[p][pLugarRopero] = 20;
	}
	else if(PropInfo[p][pTipo] == 4)
    {
        PropInfo[p][pHeladeraX] = 1436.5482;
        PropInfo[p][pHeladeraY] = 595.6918;
        PropInfo[p][pHeladeraZ] = 1000.9760;

        PropInfo[p][pRoperoX] = 1437.5388;
        PropInfo[p][pRoperoY] = 600.6093;
        PropInfo[p][pRoperoZ] = 1000.9760;

        PropInfo[p][pLugarHeladera] = 20;
        PropInfo[p][pLugarRopero] = 20;
    }
	if(PropInfo[p][pHeladeraX] != 0.0 && PropInfo[p][pHeladeraY] != 0.0 && PropInfo[p][pHeladeraZ] != 0.0)
	{
		PropInfo[p][pLabel3] = CreateDynamic3DTextLabel("{3399FF}Heladera\n{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para ver el interior\no\n{DBED16}/heladera guardar objeto",0xFFFFFF00,PropInfo[p][pHeladeraX],PropInfo[p][pHeladeraY],PropInfo[p][pHeladeraZ],7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[p][pVW],PropInfo[p][pInteriorID],-1,100.0);
	}
	return 1;
}

stock AccionesRol(playerid, params[], rango)
{
	new string[200];
	format(string, sizeof(string), "%s %s", PlayerName(playerid), params);
	ProxDetector(rango, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
	return 1;
}
stock AccionesRol2(playerid, params[], rango)
{
	new string[200];
	format(string, sizeof(string), "* %s %s", PlayerName(playerid), params);
	ProxDetector(rango, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
	return 1;
}
stock GetPlayerSpeed(playerid)
{
    new Float:ST[4];
    if(IsPlayerInAnyVehicle(playerid))
    GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
    else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
    ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 179.28625;
    return floatround(ST[3]);
}
stock EnvioDomiciliaria(playerid)
{
	for(new p = 0; p < MAX_PROPIEDADES; p++)
	{
		if(PropInfo[p][pEnUso] == 1)
		{
			if(PlayerInfo[playerid][pID] == PropInfo[p][pIDPropietario])
			{
				SendClientMessage(playerid, -1, "Pagaste {04D616}3800${FFFFFF} por la prisión domiciliaria.");
				SetPlayerPos(playerid,PropInfo[p][pPosXS],PropInfo[p][pPosYS],PropInfo[p][pPosZS]);
				SetPlayerFacingAngle(playerid,PropInfo[p][pPosAS]);
				SetPlayerInterior(playerid,PropInfo[p][pInteriorID]);
				SetPlayerVirtualWorld(playerid,PropInfo[p][pVW]);
				CargarMapeosEx(playerid);
				EstaDomiciliaria[playerid] = 1;
				PlayerInfo[playerid][pTipoCarcel] = 10;
				QuitarDinero(playerid, 3800);
				return 1;
			}
		}
	}
	return 1;
}
stock ActualizarPais(playerid)
{
	new country[30], Queryx[300];
	GetPlayerCountry(playerid, country, sizeof(country));
	format(PlayerInfo[playerid][pPaisRegistro], 32, "%s", country);
	format(Queryx, sizeof(Queryx), "UPDATE `perfiles` SET `Pais_Actual`='%s' WHERE `Nombre`=('%s')",country,PlayerName(playerid));
	mysql_function_query(Conecction, Queryx, true, "OnQueryFinish", "ii", 0, playerid);
}
stock MostrarBotiquin(playerid)
{
	if(PlayerInfo[playerid][pTrabajo] != T_Medico && PlayerInfo[playerid][pTrabajo2] != T_Medico) return SendClientMessage(playerid,-1,"Solo los médicos tienen la llave del botiquín.");
	{
		if(GetPlayerSkin(playerid) == 274 || GetPlayerSkin(playerid) == 275 || GetPlayerSkin(playerid) == 276 || GetPlayerSkin(playerid) == 308)
		{
		    new string[375];
			format(string,sizeof(string),"Pinzas, vendas, jeringa con anestesia\nPinzas, vendas, jeringa con morfina\nAntiinflamatorios y yeso\nAntiinflamatorios\nHilo, aguja, vendas y suero fisiológico\nAntiinflamatorios y Hielo\nAntiinflamatorios, hielo y yeso\nBisturí, escalpelo, hilo, aguja y jeringa con morfina\nHielo, vendas y jeringa con morfina\nHielo y vendas\nYeso, vendas, morfina y antiinflamatorios");
			ShowPlayerDialog(playerid,BOTIQUIN,DIALOG_STYLE_LIST,"Botiquín médico",string,"Agarrar","Cerrar");
		}
  	}
  	return 1;
}
stock MostrarOpciones(playerid)
{
	new opciones1[20],opciones2[20],string[450],opciones3[20],opciones4[20],opciones5[20],opciones6[20],opciones7[20];
	if(CanalDudas[playerid] == 1) format(opciones1, sizeof(opciones1), "< {2BA30A}Sí");
	else format(opciones1, sizeof(opciones1), "> {FA0505}No");
	if(PlayerInfo[playerid][pMuteos] == 0) format(opciones2, sizeof(opciones2), "< {2BA30A}Sí");
	else format(opciones2, sizeof(opciones2), "> {FA0505}No");
	if(PlayerInfo[playerid][pSonidos] == 0) format(opciones3, sizeof(opciones3), "< {2BA30A}Sí");
	else format(opciones3, sizeof(opciones3), "> {FA0505}No");
	if(PlayerInfo[playerid][pAlerta] == 0) format(opciones4, sizeof(opciones4), "< {2BA30A}Sí");
	else format(opciones4, sizeof(opciones4), "> {FA0505}No");
	if(PlayerInfo[playerid][pGuia] == 0) format(opciones5, sizeof(opciones5), "< {2BA30A}Sí");
	else format(opciones5, sizeof(opciones5), "> {FA0505}No");
	if(PlayerInfo[playerid][pBarras] == 0) format(opciones6, sizeof(opciones6), "< {2BA30A}Sí");
	else format(opciones6, sizeof(opciones6), "> {FA0505}No");
	if(PlayerInfo[playerid][pVelocimetro] == 0) format(opciones7, sizeof(opciones7), "< {2BA30A}Sí");
	else format(opciones7, sizeof(opciones7), "> {FA0505}No");
	format(string, sizeof(string), "Opción\tEstado actual\nMostrar canal de dudas.\t%s\nMostrar muteos, sanciones y baneos.\t%s\nReproducir sonidos especiales y de radios.\t%s\n\
	Mostrar alertas de conexión.\t%s\nAparecer en la guía telefónica. \t%s\nMostrar barras de hambre y sed.\
	\t%s\nMostrar velocímetro y medidor de combustible.\t%s",opciones1,opciones2,opciones3,opciones4,opciones5,opciones6,opciones7);
	ShowPlayerDialog(playerid, DCONFIG, DIALOG_STYLE_TABLIST_HEADERS, "Opciones de configuración", string, "Cambiar", "Cerrar");
	return 1;
}

stock Bailarinas(id)
{
	new BailarinasTexto[70];
	switch(id) {
	    case 1:{
		if(Bailarina1 == 0) BailarinasTexto = "{faafff}Gatúbela{FFFFFF}";
		else BailarinasTexto = "{EB0000}Gatúbela{FFFFFF}";
		}
	    case 2:{
		if(Bailarina2 == 0) BailarinasTexto = "{faafff}Bailarina Ardiente{FFFFFF}";
		else BailarinasTexto = "{EB0000}Bailarina Ardiente{FFFFFF}";
		}
	    case 3:{
		if(Bailarina3 == 0) BailarinasTexto = "{faafff}Gordita Sensual{FFFFFF}";
		else BailarinasTexto = "{EB0000}Gordita Sensual{FFFFFF}";
		}
	    case 4:{
		if(Bailarina4 == 0) BailarinasTexto = "{faafff}Poli-Bailarina{FFFFFF}";
		else BailarinasTexto = "{EB0000}Poli-Bailarina{FFFFFF}";
		}
	    case 5:{
		if(Bailarina5 == 0) BailarinasTexto = "{faafff}Colegiala{FFFFFF}";
		else BailarinasTexto = "{EB0000}Colegiala{FFFFFF}";
		}
	    case 6:{
		if(Bailarina6 == 0) BailarinasTexto = "{faafff}Chocolatita{FFFFFF}";
		else BailarinasTexto = "{EB0000}Chocolatita{FFFFFF}";
		}
    }
	return BailarinasTexto;
}
stock GetContenido(i) {
    new strongs[64];
    switch(CamionCargado[i]) {
        case 0:	format(strongs, sizeof(strongs), "Ninguno");
		case 1:	format(strongs, sizeof(strongs), "Productos 24/7");
		case 2:	format(strongs, sizeof(strongs), "Ropa");
		case 3:	format(strongs, sizeof(strongs), "Drogas");
		case 4:	format(strongs, sizeof(strongs), "Armas");
        default: strcat(strongs, "Ninguno");
    }
    return strongs;
}
stock AfinidadNivel(playerid,id)
{
	new NombreFinal[50];
	switch(id)
	{
	    case 1:{
			if(PlayerInfo[playerid][pAfinidad1] < 45) format(NombreFinal, sizeof(NombreFinal), "{FFFFFF}Baja{FFFFFF}");
	        if(PlayerInfo[playerid][pAfinidad1] >= 45 && PlayerInfo[playerid][pAfinidad1] < 78) NombreFinal = "{FFFFFF}Media{FFFFFF}";
	        if(PlayerInfo[playerid][pAfinidad1] >= 78) NombreFinal = "{FFFFFF}Alta{FFFFFF}";
		}
	    case 2:{
			if(PlayerInfo[playerid][pAfinidad2] < 45) format(NombreFinal, sizeof(NombreFinal), "{FFFFFF}Baja{FFFFFF}");
	        if(PlayerInfo[playerid][pAfinidad2] >= 45 && PlayerInfo[playerid][pAfinidad1] < 78) NombreFinal = "{FFFFFF}Media{FFFFFF}";
	        if(PlayerInfo[playerid][pAfinidad2] >= 78) NombreFinal = "{FFFFFF}Alta{FFFFFF}";
		}
	    case 3:{
			if(PlayerInfo[playerid][pAfinidad3] < 45) format(NombreFinal, sizeof(NombreFinal), "{FFFFFF}Baja{FFFFFF}");
	        if(PlayerInfo[playerid][pAfinidad3] >= 45 && PlayerInfo[playerid][pAfinidad1] < 78) NombreFinal = "{FFFFFF}Media{FFFFFF}";
	        if(PlayerInfo[playerid][pAfinidad3] >= 78) NombreFinal = "{FFFFFF}Alta{FFFFFF}";
		}
	    case 4:{
			if(PlayerInfo[playerid][pAfinidad4] < 45) format(NombreFinal, sizeof(NombreFinal), "{FFFFFF}Baja{FFFFFF}");
	        if(PlayerInfo[playerid][pAfinidad4] >= 45 && PlayerInfo[playerid][pAfinidad1] < 78) NombreFinal = "{FFFFFF}Media{FFFFFF}";
	        if(PlayerInfo[playerid][pAfinidad4] >= 78) NombreFinal = "{FFFFFF}Alta{FFFFFF}";
		}
	    case 5:{
			if(PlayerInfo[playerid][pAfinidad5] < 45) format(NombreFinal, sizeof(NombreFinal), "{FFFFFF}Baja{FFFFFF}");
	        if(PlayerInfo[playerid][pAfinidad5] >= 45 && PlayerInfo[playerid][pAfinidad1] < 78) NombreFinal = "{FFFFFF}Media{FFFFFF}";
	        if(PlayerInfo[playerid][pAfinidad5] >= 78) NombreFinal = "{FFFFFF}Alta{FFFFFF}";
		}
	    case 6:{
			if(PlayerInfo[playerid][pAfinidad6] < 45) format(NombreFinal, sizeof(NombreFinal), "{FFFFFF}Baja{FFFFFF}");
	        if(PlayerInfo[playerid][pAfinidad6] >= 45 && PlayerInfo[playerid][pAfinidad1] < 78) NombreFinal = "{FFFFFF}Media{FFFFFF}";
	        if(PlayerInfo[playerid][pAfinidad6] >= 78) NombreFinal = "{FFFFFF}Alta{FFFFFF}";
		}
    }
	return NombreFinal;
}
stock AfinidadPrecio(playerid,id)
{
	new NombreFinal[50];
	switch(id)
	{
	    case 1:{
			if(PlayerInfo[playerid][pAfinidad1] < 45) format(NombreFinal, sizeof(NombreFinal), "{00cc00}$5000{FFFFFF}");
	        if(PlayerInfo[playerid][pAfinidad1] >= 45 && PlayerInfo[playerid][pAfinidad1] < 78) NombreFinal = "{00cc00}$5000{FFFFFF}";
	        if(PlayerInfo[playerid][pAfinidad1] >= 78) NombreFinal = "{00cc00}$4000{FFFFFF}";
		}
	    case 2:{
			if(PlayerInfo[playerid][pAfinidad2] < 45) format(NombreFinal, sizeof(NombreFinal), "{00cc00}$5000{FFFFFF}");
	        if(PlayerInfo[playerid][pAfinidad2] >= 45 && PlayerInfo[playerid][pAfinidad1] < 78) NombreFinal = "{00cc00}$5000{FFFFFF}";
	        if(PlayerInfo[playerid][pAfinidad2] >= 78) NombreFinal = "{00cc00}$4000{FFFFFF}";
		}
	    case 3:{
			if(PlayerInfo[playerid][pAfinidad3] < 45) format(NombreFinal, sizeof(NombreFinal), "{00cc00}$3000{FFFFFF}");
	        if(PlayerInfo[playerid][pAfinidad3] >= 45 && PlayerInfo[playerid][pAfinidad1] < 78) NombreFinal = "{00cc00}$3000{FFFFFF}";
	        if(PlayerInfo[playerid][pAfinidad3] >= 78) NombreFinal = "{00cc00}$2500{FFFFFF}";
		}
	    case 4:{
			if(PlayerInfo[playerid][pAfinidad4] < 45) format(NombreFinal, sizeof(NombreFinal), "{00cc00}$4500{FFFFFF}");
	        if(PlayerInfo[playerid][pAfinidad4] >= 45 && PlayerInfo[playerid][pAfinidad1] < 78) NombreFinal = "{00cc00}$4500{FFFFFF}";
	        if(PlayerInfo[playerid][pAfinidad4] >= 78) NombreFinal = "{00cc00}$4000{FFFFFF}";
		}
	    case 5:{
			if(PlayerInfo[playerid][pAfinidad5] < 45) format(NombreFinal, sizeof(NombreFinal), "{00cc00}$5000{FFFFFF}");
	        if(PlayerInfo[playerid][pAfinidad5] >= 45 && PlayerInfo[playerid][pAfinidad1] < 78) NombreFinal = "{00cc00}$5000{FFFFFF}";
	        if(PlayerInfo[playerid][pAfinidad5] >= 78) NombreFinal = "{00cc00}$4000{FFFFFF}";
		}
	    case 6:{
			if(PlayerInfo[playerid][pAfinidad6] < 45) format(NombreFinal, sizeof(NombreFinal), "{00cc00}$4000{FFFFFF}");
	        if(PlayerInfo[playerid][pAfinidad6] >= 45 && PlayerInfo[playerid][pAfinidad1] < 78) NombreFinal = "{00cc00}$4000{FFFFFF}";
	        if(PlayerInfo[playerid][pAfinidad6] >= 78) NombreFinal = "{00cc00}$3500{FFFFFF}";
		}
    }
	return NombreFinal;
}
stock MostrarFrecuencias(playerid)
{
    new mensaje[250], frecuencia1[32], frecuencia2[32], frecuencia3[32], frecuencia4[32], frecuencia5[32], frecuencia6[32], frecuencia7[32],frecuencia8[32];
	if(Frencuena1p > 1)	{	format(frecuencia1, sizeof(frecuencia1), "{737373}#1:{FFFFFF} %d personas.", Frencuena1p);	}
	else if(Frencuena1p == 1)	{		format(frecuencia1, sizeof(frecuencia1), "{737373}#1:{FFFFFF} %d persona.", Frencuena1p);	}
	else { frecuencia1="{737373}#1:{FFFFFF} Libre."; }
	if(Frencuena2p > 1)	{		format(frecuencia2, sizeof(frecuencia2), "{737373}#2:{FFFFFF} %d personas.", Frencuena2p);	}
	else if(Frencuena2p == 1)	{		format(frecuencia2, sizeof(frecuencia2), "{737373}#2:{FFFFFF} %d persona.", Frencuena2p);	}
	else { frecuencia2="{737373}#2:{FFFFFF} Libre."; }
	if(Frencuena3p > 0)	{		format(frecuencia3, sizeof(frecuencia3), "{737373}#3:{FFFFFF} %d personas.", Frencuena3p);	}
 	else if(Frencuena3p == 1)	{		format(frecuencia3, sizeof(frecuencia3), "{737373}#3:{FFFFFF} %d persona.", Frencuena3p);	}
 	else { frecuencia3="{737373}#3:{FFFFFF} Libre."; }
 	if(Frencuena4p > 0)	{		format(frecuencia4, sizeof(frecuencia4), "{737373}#4:{FFFFFF} %d personas.", Frencuena4p);	}
	else if(Frencuena4p == 1)	{		format(frecuencia4, sizeof(frecuencia4), "{737373}#4:{FFFFFF} %d persona.", Frencuena4p);	}
	else { frecuencia4="{737373}#4:{FFFFFF} Libre."; }
	if(Frencuena5p > 0)	{		format(frecuencia5, sizeof(frecuencia5), "{737373}#5:{FFFFFF} %d personas.", Frencuena5p);	}
	else if(Frencuena5p == 1)	{		format(frecuencia5, sizeof(frecuencia5), "{737373}#5:{FFFFFF} %d persona.", Frencuena5p);	}
	else { frecuencia5="{737373}#5:{FFFFFF} Libre."; }
	if(Frencuena6p > 0)	{		format(frecuencia6, sizeof(frecuencia6), "{737373}#6:{FFFFFF} %d personas.", Frencuena6p);	}
	else if(Frencuena6p == 1)	{		format(frecuencia6, sizeof(frecuencia6), "{737373}#6:{FFFFFF} %d persona.", Frencuena6p);	}
	else { frecuencia6="{737373}#6:{FFFFFF} Libre."; }
	if(Frencuena7p > 0)	{		format(frecuencia7, sizeof(frecuencia7), "{737373}#7:{FFFFFF} %d personas.", Frencuena7p); 	}
 	else if(Frencuena7p == 1)	{		format(frecuencia7, sizeof(frecuencia7), "{737373}#7:{FFFFFF} %d persona.", Frencuena7p);	}
 	else { frecuencia7="{737373}#7:{FFFFFF} Libre."; }
 	if(Frencuena8p > 0)	{		format(frecuencia8, sizeof(frecuencia8), "{737373}#8:{FFFFFF} %d personas.", Frencuena8p); 	}
 	else if(Frencuena8p == 1)	{		format(frecuencia8, sizeof(frecuencia8), "{737373}#8:{FFFFFF} %d persona.", Frencuena8p);	}
 	else { frecuencia8="{737373}#8:{FFFFFF} Libre."; }
	format(mensaje, sizeof(mensaje), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",frecuencia1,frecuencia2,frecuencia3,frecuencia4,frecuencia5,frecuencia6,frecuencia7,frecuencia8);
	return ShowPlayerDialog(playerid, DIALOGO_FRECUENCIAS, DIALOG_STYLE_LIST, "Frecuencias", mensaje, "Cambiar","Cancelar");
}
stock AnimacionTienda(playerid)
{
	switch(GetPlayerVirtualWorld(playerid))
	{
	    case 0:
		{
		}
		case 1:
		{
			ApplyActorAnimation(Vendedor, "BAR","Barserve_give",4.1,0,0,0,0,0);
        }
        case 0:
		{
			//System Code
        }
        case 0:
		{
			//System Code
        }
        case 0:
		{
			//System Code
        }
        case 0:
		{
			//System Code
        }
        case 0:
		{
			//System Code
        }
	}
}
stock AsignarTrabajo(playerid,trabajo,id)
{
	if(id == 0) { PlayerInfo[playerid][pTrabajo] = trabajo;   }
	else if(id == 1) { PlayerInfo[playerid][pTrabajo2] = trabajo; }
	SendClientMessage(playerid, COLOR_WHITE, "¡Felicitaciones! Conseguiste un nuevo trabajo. Escribe {DBED16}/ayuda trabajos{FFFFFF} para ver tus nuevos comandos.");
	return 1;
}

stock NoPuedeTrabajo(playerid)
{
	new string[200];
	SendClientMessage(playerid,-1,"No puedes tener dos trabajos. Las cuentas Vip2 o superior, pueden tener dos trabajos.");
	format(string, sizeof(string), "Escribe {DBED15}/dejar trabajo %d{FFFFFF} para dejar el trabajo de %s", PlayerInfo[playerid][pTrabajo],NombreTrabajo(PlayerInfo[playerid][pTrabajo]));
	return SendClientMessage(playerid,-1,string);
}
stock YaTiene2Jobs(playerid)
{
	new string[200];
	SendClientMessage(playerid,-1,"Ya tienes 2 trabajos, renuncia a uno.");
	format(string, sizeof(string), "Escribe {DBED15}/dejar trabajo %d{FFFFFF} para dejar el trabajo de %s", PlayerInfo[playerid][pTrabajo],NombreTrabajo(PlayerInfo[playerid][pTrabajo]));
	return SendClientMessage(playerid,-1,string);
}
stock OcultarPantalla(playerid)
{
    ViendoPantalla[playerid] = 0;
    TextDrawHideForPlayer(playerid,TTren[0]);
    TextDrawHideForPlayer(playerid,TTren[1]);
    TextDrawHideForPlayer(playerid,TTren[2]);
    TextDrawHideForPlayer(playerid,TTren[3]);
    TextDrawHideForPlayer(playerid,TTren[4]);
    TextDrawHideForPlayer(playerid,TTren[5]);
    TextDrawHideForPlayer(playerid,TTren[6]);
    TextDrawHideForPlayer(playerid,TTren[7]);
	TextDrawHideForPlayer(playerid,TTren[8]);
	ShowPlayerProgressBar(playerid, Progressbar[playerid][Sed]);
	ShowPlayerProgressBar(playerid, Progressbar[playerid][Hambre]);
	for(new i = 0; i < 4; i++) PlayerTextDrawDestroy(playerid, tren[playerid][i]);
	KillTimer(asdtren[playerid]);
	TogglePlayerControllable(playerid, 1);
	SetPVarInt(playerid, "IsFrozen", 1);
	return 1;
}
stock MostrarPantalla(playerid)
{
    if(ViendoPantalla[playerid] == 1) return OcultarPantalla(playerid);
    ViendoPantalla[playerid] = 1;
    TextDrawShowForPlayer(playerid,TTren[0]);
    TextDrawShowForPlayer(playerid,TTren[1]);
    TextDrawShowForPlayer(playerid,TTren[2]);
    TextDrawShowForPlayer(playerid,TTren[3]);
    TextDrawShowForPlayer(playerid,TTren[4]);
    TextDrawShowForPlayer(playerid,TTren[5]);
    TextDrawShowForPlayer(playerid,TTren[6]);
    TextDrawShowForPlayer(playerid,TTren[7]);
	TextDrawShowForPlayer(playerid,TTren[8]);
	HidePlayerProgressBar(playerid, Progressbar[playerid][Sed]);
	HidePlayerProgressBar(playerid, Progressbar[playerid][Hambre]);

	foreach (NPC, i)
	{
		if(i == TrenUno || i == TrenTres || i == TrenCuatro || i == TrenDos)
		{
	    	new Float:circuloPos[2];
	    	new Float:posicionJugador[3];
	    	GetPlayerPos(i, posicionJugador[0], posicionJugador[1], posicionJugador[2]);
            floatMapa3Da2D(posicionJugador[0], posicionJugador[1], 360.000000, 26.000000,256.000000,256.000000, circuloPos[0], circuloPos[1]);
			tren[playerid][i] = CreatePlayerTextDraw(playerid, circuloPos[0], circuloPos[1], "hud:radar_light");
			PlayerTextDrawLetterSize(playerid, tren[playerid][i], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, tren[playerid][i], 8.444448, 9.457767);
			PlayerTextDrawAlignment(playerid, tren[playerid][i], 2);
			PlayerTextDrawColor(playerid, tren[playerid][i], -1);
			PlayerTextDrawSetShadow(playerid, tren[playerid][i], 0);
			PlayerTextDrawSetOutline(playerid, tren[playerid][i], 0);
			PlayerTextDrawFont(playerid, tren[playerid][i], 4);
			PlayerTextDrawShow(playerid, tren[playerid][i]);
		}
	}
	asdtren[playerid] = SetTimerEx("modificarpuntotren", 500, true, "i", playerid);
	SendClientMessage(playerid, -1, "Pulsa {DBED15}'Y'{FFFFFF} para dejar de ver la pantalla.");
	TogglePlayerControllable(playerid, 0);
	SetPVarInt(playerid, "IsFrozen", 0);
	return 1;
}
stock MostrarMenuBailarinas(playerid)
{
	new mensaje[600];
	format(mensaje, sizeof(mensaje), "Bailarina\tAfinidad\tCosto\n{FFFFFF}%s\t%s\t{00cc00}%s{FFFFFF}\n%s\t%s\t{00cc00}%s{FFFFFF}\n%s\t%s\t{00cc00}%s{FFFFFF}\n%s\t%s\t{00cc00}%s{FFFFFF}\n%s\t%s\t{00cc00}%s{FFFFFF}\n%s\t%s\t{00cc00}%s{FFFFFF}",Bailarinas(1),AfinidadNivel(playerid,1),AfinidadPrecio(playerid,1),Bailarinas(2),AfinidadNivel(playerid,2),AfinidadPrecio(playerid,2),Bailarinas(3),AfinidadNivel(playerid,3),AfinidadPrecio(playerid,3),Bailarinas(4),AfinidadNivel(playerid,4),AfinidadPrecio(playerid,4),Bailarinas(5),AfinidadNivel(playerid,5),AfinidadPrecio(playerid,5),Bailarinas(6),AfinidadNivel(playerid,6),AfinidadPrecio(playerid,6));
	ShowPlayerDialog(playerid, DCLUB, DIALOG_STYLE_TABLIST_HEADERS,"Entrar a la sala privada con...", mensaje, "Entrar", "Cancelar");
	return 1;
}
stock MostrarGuia(playerid)
{
	new mensaje[256];
	format(mensaje, sizeof(mensaje), "Detalle\t\tNúmero\n{FFFFFF}Departamento de policía\t\t{d2e033}911{FFFFFF}\nHospital - Emergencias 24hs\t\t{d2e033}71{FFFFFF}\nServicio de grúas\t\t{d2e033}815{FFFFFF}\nAsistencia mecánica\t\t{d2e033}80{FFFFFF}\nServicio de taxi\t\t{d2e033}82{FFFFFF}");
	ShowPlayerDialog(playerid, DGUIA, DIALOG_STYLE_TABLIST_HEADERS,"{d2e033}Guía{FFFFFF} telefónica", mensaje, "Llamar", "Cerrar");
}
stock comprarsombrero(playerid)
{
    AccionesRol(playerid, "agarró un sombrero y se lo puso.", 20);
	SendClientMessage(playerid,-1,"Compraste un sombrero descartable, no durará mucho.");
	SetPlayerAttachedObject(playerid, 2, 19528, 2, 0.116999, 0.020000, 0.000000, 0.000000, 0.000000, 0.000000, 1.102999, 1.135000, 1.094000);
	SetTimerEx("ReproducirHalloween",2500,false,"d",playerid);
	RevisarLogroDescartable(playerid);
	QuitarDinero(playerid, 500);
	TieneSombrero[playerid] = 1;
}
stock DarCaramelos(playerid)
{
	new string[200];
	new randomvalue = random(5);
	switch(randomvalue)
	{
	    case 0: randomvalue = 4;
	    case 1: randomvalue = 5;
	    case 2: randomvalue = 4;
	    case 3: randomvalue = 6;
	    case 4: randomvalue = 5;
	}
 	format(string, sizeof(string), "Conseguiste {00FF00}%d{FFFFFF} caramelos de la fuente mágica de dulces, ahora puedes {FFFB00}/consumir caramelo", randomvalue);
	SendClientMessage(playerid,-1,string);
 	PlayerInfo[playerid][pCaramelos] += randomvalue;
 	return 1;
}
stock MostrarHeladera(playerid)
{
    if(GetPlayerVirtualWorld(playerid) != 0)
	{
		for(new p; p < MAX_PROPIEDADES; p++)
		{
			if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
			{
				if(IsPlayerInRangeOfPoint(playerid,2,PropInfo[p][pHeladeraX],PropInfo[p][pHeladeraY],PropInfo[p][pHeladeraZ]))
				{
					new heladera[100],heladera2[500],heladera3[550];
					AccionesRol(playerid,"abre la heladera.", 20);
					new total = PropInfo[p][pSprunk] + PropInfo[p][pVino] + PropInfo[p][pCerveza] + PropInfo[p][pPizzas] + PropInfo[p][pAquarius];
					format(heladera,sizeof(heladera),"{FFFFFF}Heladera    [Lugares: %d/%d]",total,PropInfo[p][pLugarHeladera]);
					if(total == 0)
					{
						format(heladera2,sizeof(heladera2),"La heladera está vacía.");
						strcat(heladera3,heladera2);
					}
					else if(total > 0)
					{
						if(PropInfo[p][pCerveza] > 0)
						{
							format(heladera3,sizeof(heladera3),"{FFFFFF}Botella de cerveza {00CC00}x%d\n", PropInfo[p][pCerveza]);
						}
						if(PropInfo[p][pVino] > 0)
						{
							format(heladera3,sizeof(heladera3),"%s{FFFFFF}Botella de vino {00CC00}x%d\n", heladera3, PropInfo[p][pVino]);
						}
						if(PropInfo[p][pSprunk] > 0)
						{
							format(heladera3,sizeof(heladera3),"%s{FFFFFF}Vasos de sprunk {00CC00}x%d\n", heladera3, PropInfo[p][pSprunk]);
						}
						if(PropInfo[p][pAquarius] > 0)
						{
							format(heladera3,sizeof(heladera3),"%s{FFFFFF}Botella de aquarius {00CC00}x%d", heladera3, PropInfo[p][pAquarius]);
						}
						if(PropInfo[p][pPizzas] > 0)
						{
							format(heladera3,sizeof(heladera3),"%s{FFFFFF}Porción de pizza {00CC00}x%d", heladera3, PropInfo[p][pPizzas]);
						}
					}
					ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,heladera,heladera3,"Cerrar","");
				}
			}
		}
	}
	return 1;
}

stock MostrarEstanteria(playerid)
{
	for(new c; c < MAX_PROPIEDADES; c++)
	{
		if(GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
		{
			new total = EspacioRopero(c),ropero[40],ropero2[1000],ropero3[1200];
			format(ropero,sizeof(ropero),"{FFFFFF}Estantería    [Lugares: %d/%d]",total,PropInfo[c][pLugarRopero]);
			if(total > 0)
			{
				format(ropero2,sizeof(ropero2),"Armas:\n");
				strcat(ropero3,ropero2);
				new cosas;
				if(PropInfo[c][pManopla] > 0)
				{
					format(ropero2,sizeof(ropero2)," {FFFFFF}Manopla {00CC00}x%d {00CCFF}||",PropInfo[c][pManopla]);
					strcat(ropero3,ropero2);
					cosas ++;
				}
				if(PropInfo[c][pPaloDeGolf] > 0)
				{
					format(ropero2,sizeof(ropero2)," {FFFFFF}Palo-de-Golf {00CC00}x%d {00CCFF}||",PropInfo[c][pPaloDeGolf]);
					strcat(ropero3,ropero2);
					cosas ++;
				}
				if(PropInfo[c][pCuchillo] > 0)
				{
					format(ropero2,sizeof(ropero2)," {FFFFFF}Cuchillo {00CC00}x%d {00CCFF}||",PropInfo[c][pCuchillo]);
					strcat(ropero3,ropero2);
					cosas ++;
				}
				if(PropInfo[c][pBateDeBeisbol] > 0)
				{
					format(ropero2,sizeof(ropero2)," {FFFFFF}Bate-de-Beisbol {00CC00}x%d {00CCFF}||",PropInfo[c][pBateDeBeisbol]);
					strcat(ropero3,ropero2);
					cosas ++;
				}
				if(PropInfo[c][pPala] > 0)
				{
					format(ropero2,sizeof(ropero2)," {FFFFFF}Pala {00CC00}x%d {00CCFF}||",PropInfo[c][pPala]);
					strcat(ropero3,ropero2);
					cosas ++;
				}
				if(PropInfo[c][pPaloDeBillar] > 0)
				{
					format(ropero2,sizeof(ropero2)," {FFFFFF}Palo-de-Billar {00CC00}x%d {00CCFF}||",PropInfo[c][pPaloDeBillar]);
					strcat(ropero3,ropero2);
					cosas ++;
				}
				if(PropInfo[c][pKatana] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2)," {FFFFFF}Katana {00CC00}x%d {00CCFF}||",PropInfo[c][pKatana]);
					strcat(ropero3,ropero2);
				}
				if(PropInfo[c][pConsoladorRosa] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2)," {FFFFFF}Consolador-Rosa {00CC00}x%d {00CCFF}||",PropInfo[c][pConsoladorRosa]);
					strcat(ropero3,ropero2);
				}
				if(PropInfo[c][pVibradorBlanco] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2)," {FFFFFF}Vibrador-Blanco {00CC00}x%d {00CCFF}||",PropInfo[c][pVibradorBlanco]);
					strcat(ropero3,ropero2);
				}
				if(PropInfo[c][pGranVibradorBlanco] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2)," {FFFFFF}Gran-Vibrador-Blanco {00CC00}x%d {00CCFF}||",PropInfo[c][pGranVibradorBlanco]);
					strcat(ropero3,ropero2);
				}
				if(PropInfo[c][pVibradorPlateado] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2)," {FFFFFF}Vibrador-Plateado {00CC00}x%d {00CCFF}||",PropInfo[c][pVibradorPlateado]);
					strcat(ropero3,ropero2);
				}
				if(PropInfo[c][pFlores] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2)," {FFFFFF}Flores {00CC00}x%d {00CCFF}||",PropInfo[c][pFlores]);
					strcat(ropero3,ropero2);
				}
				if(PropInfo[c][pBaston] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2)," {FFFFFF}Baston {00CC00}x%d {00CCFF}||",PropInfo[c][pBaston]);
					strcat(ropero3,ropero2);
				}
				if(PropInfo[c][p9mm] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2)," {FFFFFF}9mm {00CC00}x%d {00CCFF}||",PropInfo[c][p9mm]);
					strcat(ropero3,ropero2);
				}
				if(PropInfo[c][p9mmSilenciada] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2)," {FFFFFF}9mm-silenciada {00CC00}x%d {00CCFF}||",PropInfo[c][p9mmSilenciada]);
					strcat(ropero3,ropero2);
				}
				if(PropInfo[c][pDesertEagle] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2)," {FFFFFF}Desert-Eagle {00CC00}x%d {00CCFF}||",PropInfo[c][pDesertEagle]);
					strcat(ropero3,ropero2);
				}
				if(PropInfo[c][pEscopetaNormal] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2)," {FFFFFF}Escopeta-Normal {00CC00}x%d {00CCFF}||",PropInfo[c][pEscopetaNormal]);
					strcat(ropero3,ropero2);
				}
				if(PropInfo[c][pEscopetaDeCombate] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2)," {FFFFFF}Escopeta-de-Combate {00CC00}x%d {00CCFF}||",PropInfo[c][pEscopetaDeCombate]);
					strcat(ropero3,ropero2);
				}
				if(PropInfo[c][pMP5] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2)," {FFFFFF}MP5 {00CC00}x%d {00CCFF}||",PropInfo[c][pMP5]);
					strcat(ropero3,ropero2);
				}
				if(PropInfo[c][pAK47] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2)," {FFFFFF}AK-47 {00CC00}x%d {00CCFF}||",PropInfo[c][pAK47]);
					strcat(ropero3,ropero2);
				}
				if(PropInfo[c][pM4] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2)," {FFFFFF}M4 {00CC00}x%d {00CCFF}||",PropInfo[c][pM4]);
					strcat(ropero3,ropero2);
				}
				if(PropInfo[c][pRifle] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2)," {FFFFFF}Rifle {00CC00}x%d {00CCFF}||",PropInfo[c][pRifle]);
					strcat(ropero3,ropero2);
				}
				if(PropInfo[c][pGranada] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2)," {FFFFFF}Granada {00CC00}x%d {00CCFF}||",PropInfo[c][pGranada]);
					strcat(ropero3,ropero2);
				}
				if(PropInfo[c][pCamara] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2)," {FFFFFF}Camara {00CC00}x%d {00CCFF}||",PropInfo[c][pCamara]);
					strcat(ropero3,ropero2);
				}
				if(PropInfo[c][pMedicamentos] > 0 || PropInfo[c][pCrack] > 0 || PropInfo[c][pMarihuana] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2),"\n\n");
					strcat(ropero3,ropero2);
				}
				if(PropInfo[c][pMarihuana] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2),"\n{FFFFFF}Marihuana: {FF3300}%dg",PropInfo[c][pMarihuana]);
					strcat(ropero3,ropero2);
				}
				if(PropInfo[c][pCrack] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2),"\n{FFFFFF}Crack: {FF3300}%dg",PropInfo[c][pCrack]);
					strcat(ropero3,ropero2);
				}
				if(PropInfo[c][pMedicamentos] > 0)
				{
					if(cosas >= 2)
					{
						cosas = 0;
						format(ropero2,sizeof(ropero),"\n");
						strcat(ropero3,ropero2);
					}
					cosas ++;
					format(ropero2,sizeof(ropero2),"\n{FFFFFF}Medicamentos: {00CC00}%d",PropInfo[c][pMedicamentos]);
					strcat(ropero3,ropero2);
				}
			}
			else
			{
				format(ropero2,sizeof(ropero2),"La estantería está vacía");
				strcat(ropero3,ropero2);
			}
			ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,ropero,ropero3,"Cerrar","");
		}
	}
	return 1;
}

stock AbrirRegalo(playerid)
{
	new regalo = random(13);
	switch (regalo)
	{
		case 0:
		{
		SendClientMessage(playerid,-1,"Recibes {74F20C}$50.0000{FFFFFF} y {74F20C}Una Cámara{FFFFFF} de regalo.");
		DarDinero(playerid,50000);
		DarArma(playerid,43);
		}
		case 1:
		{
		SendClientMessage(playerid,-1,"Recibes {74F20C}$30.0000{FFFFFF} y {74F20C}Un bate de Beisbol{FFFFFF} de regalo.");
		DarDinero(playerid,30000);
		DarArma(playerid,5);
		}
		case 2:
		{
		SendClientMessage(playerid,-1,"Recibes {74F20C}$80.0000{FFFFFF} y {74F20C}una Katana{FFFFFF} de regalo.");
		DarDinero(playerid,80000);
		DarArma(playerid,8);
		}
		case 3:
		{
		SendClientMessage(playerid,-1,"Recibes {74F20C}$30.0000{FFFFFF} y {74F20C}una Palo de Golf{FFFFFF} de regalo.");
		DarDinero(playerid,30000);
		DarArma(playerid,2);
		}
		case 4:
		{
		SendClientMessage(playerid,-1,"Recibes {74F20C}$30.0000{FFFFFF} y {74F20C}5.000 piezas de armas{FFFFFF} de regalo.");
		DarDinero(playerid,30000);
		PlayerInfo[playerid][pMateriales] += 5000;
		}
		case 5:
		{
		SendClientMessage(playerid,-1,"Recibes {74F20C}$40.0000{FFFFFF} y {74F20C}40 "SERVER_COIN"{FFFFFF} de regalo.");
		DarDinero(playerid,40000);
		PlayerInfo[playerid][Moneda] += 40;
		}
		case 6:
		{
		SendClientMessage(playerid,-1,"Recibes {74F20C}$50.0000{FFFFFF} y {74F20C}3 Totems{FFFFFF} de regalo.");
		DarDinero(playerid,50000);
		PlayerInfo[playerid][Totems] += 3;
		}
		case 7:
		{
		SendClientMessage(playerid,-1,"Recibes {74F20C}$50.0000{FFFFFF} y {74F20C}300g de crack{FFFFFF} de regalo.");
		DarDinero(playerid,50000);
		PlayerInfo[playerid][pCrack] += 3000;
		}
		case 8:
		{
		SendClientMessage(playerid,-1,"Recibes {74F20C}$50.0000{FFFFFF} y {74F20C}3 Totems{FFFFFF} de regalo.");
		DarDinero(playerid,50000);
		PlayerInfo[playerid][Totems] += 3;
		}
		case 9:
		{
		SendClientMessage(playerid,-1,"Recibes {74F20C}$80.0000{FFFFFF} y {74F20C}una Katana{FFFFFF} de regalo.");
		DarDinero(playerid,80000);
		DarArma(playerid,8);
		}
		case 10:
		{
		SendClientMessage(playerid,-1,"Recibes {74F20C}$50.0000{FFFFFF} y {74F20C}Una Cámara{FFFFFF} de regalo.");
		DarDinero(playerid,50000);
		DarArma(playerid,43);
		}
		case 11:
		{
		SendClientMessage(playerid,-1,"Recibes {74F20C}$40.0000{FFFFFF} y {74F20C}50 "SERVER_COIN"{FFFFFF} de regalo.");
		DarDinero(playerid,40000);
		PlayerInfo[playerid][Moneda] += 50;
		}
		case 12:
		{
		SendClientMessage(playerid,-1,"Recibes {74F20C}$150.0000{FFFFFF} y {74F20C}12 Totems{FFFFFF} de regalo.");
		DarDinero(playerid,150000);
		PlayerInfo[playerid][Totems] += 12;
		}
		case 13:
		{
		SendClientMessage(playerid,-1,"Recibes {74F20C}50.0000{FFFFFF} y {74F20C}Patines{FFFFFF} de regalo.");
		DarDinero(playerid,50000);
		PlayerInfo[playerid][pPatines] = 1;
		}
	}
	return 1;
}

stock VehiculoEnGaraje(vehicleid)
{
	for(new p; p < MAX_PROPIEDADES; p++)
	{
	    if(PropInfo[p][pEnUso] == 1 && GetVehicleInterior(vehicleid) == 4 && GetVehicleVirtualWorld(vehicleid) == PropInfo[p][pVW]) return true;
	}
	return false;
}

stock EstaEnP(playerid,id,Float:rang)
{
	new Float:Pos[3];
	GetPlayerPos(id,Pos[0],Pos[1],Pos[2]);
	if(IsPlayerInRangeOfPoint(playerid,rang,Pos[0],Pos[1],Pos[2])) return 1;
	return 0;
}
stock GuardarFabrica(c)
{
	new query[1500];
	format(query,sizeof(query),"UPDATE `fabricas` SET `Coins`='%d',`Precio`='%d',`Soborno`='%d',`BandaID`='%d',`EnVenta`='%d',`EntradaA`='%f' WHERE `ID`='%d'",
	Fabricas[c][pEnVentaPor],
	Fabricas[c][pValor],
	Fabricas[c][pSoborno],
	Fabricas[c][pBanda],
	Fabricas[c][pEnVenta],
	Fabricas[c][pEntradaA],
	Fabricas[c][pID]);
	mysql_function_query(Conecction,query,true,"","");

	format(query,sizeof(query),"UPDATE `fabricas` SET `EntradaA`='%f',`EntradaX`='%f',`EntradaY`='%f',`EntradaZ`='%f',`SalidaX`='%f',`SalidaY`='%f',`SalidaZ`='%f' WHERE `ID`='%d'",
	Fabricas[c][pEntradaA],
	Fabricas[c][pEntradaX],
	Fabricas[c][pEntradaY],
	Fabricas[c][pEntradaZ],
	Fabricas[c][pSalidaX],
	Fabricas[c][pSalidaY],
	Fabricas[c][pSalidaZ],
	Fabricas[c][pID]);
	mysql_function_query(Conecction,query,true,"","");

	format(query,sizeof(query),"UPDATE `fabricas` SET `GarajeE_A`='%f',`GarajeE_X`='%f',`GarajeE_Y`='%f',`GarajeE_Z`='%f',`GarajeS_X`='%f',`GarajeS_Y`='%f',`GarajeS_Z`='%f' WHERE `ID`='%d'",
	Fabricas[c][pEntradaGA],
	Fabricas[c][pEntradaGX],
	Fabricas[c][pEntradaGY],
	Fabricas[c][pEntradaGZ],
	Fabricas[c][pSalidaGX],
	Fabricas[c][pSalidaGY],
	Fabricas[c][pSalidaGZ],
	Fabricas[c][pID]);
	mysql_function_query(Conecction,query,true,"","");

	format(query,sizeof(query),"UPDATE `fabricas` SET `Tanque1Contenido`='%d',`Tanque2Contenido`='%d',`Tanque3Contenido`='%d',`Tanque4Contenido`='%d',`Tanque5Contenido`='%f',`Tanque6Contenido`='%f' WHERE `ID`='%d'",
	Fabricas[c][pTanqueUno],
	Fabricas[c][pTanqueDos],
	Fabricas[c][pTanqueTres],
	Fabricas[c][pTanqueCuatro],
	Fabricas[c][pTanqueCinco],
	Fabricas[c][pTanqueSeis],
	Fabricas[c][pID]);
	mysql_function_query(Conecction,query,true,"","");

	format(query,sizeof(query),"UPDATE `fabricas` SET `Almacen1`='%d',`Almacen2`='%d',`Almacen3`='%d',`Almacen4`='%d',`Almacen5`='%d',`Almacen6`='%d',`Almacen7`='%d',`Almacen8`='%d',`Almacen9`='%d',`Almacen10`='%d' WHERE `ID`='%d'",
	Fabricas[c][Almacen1],
	Fabricas[c][Almacen2],
	Fabricas[c][Almacen3],
	Fabricas[c][Almacen4],
	Fabricas[c][Almacen5],
	Fabricas[c][Almacen6],
	Fabricas[c][Almacen7],
	Fabricas[c][Almacen8],
	Fabricas[c][Almacen9],
	Fabricas[c][Almacen10],
	Fabricas[c][pID]);
	mysql_function_query(Conecction,query,true,"","");

	format(query,sizeof(query),"UPDATE `fabricas` SET `Chalecos`='%d',`Interior`='%d',`VW`='%d',`DineroAlmacenado`='%d',`Localizacion`='%s' WHERE `ID`='%d'",
	Fabricas[c][pChalecos],
	Fabricas[c][pInt],
	Fabricas[c][pVW],
	Fabricas[c][pCantidadDinero],
	Fabricas[c][pLocalizacion],
	Fabricas[c][pID]);
	mysql_function_query(Conecction,query,true,"","");

	format(query,sizeof(query),"UPDATE `fabricas` SET `Uzi`='%d',`Recortada`='%d',`Sniper`='%d',`Tec9`='%d' WHERE `ID`='%d'",
	Fabricas[c][pUzi],
	Fabricas[c][pRecortada],
	Fabricas[c][pSniper],
	Fabricas[c][pTec9],
	Fabricas[c][pID]);
	mysql_function_query(Conecction,query,true,"","");

	format(query,sizeof(query),"UPDATE `fabricas` SET `MContra`='%d', `PorcentajeLleno1`='%d', `PorcentajeLleno2`='%d', `PorcentajeLleno3`='%d', `Crisol1`='%d', `Crisol2`='%d', `Crisol3`='%d', `FechaPaga` = '%d' WHERE `ID`='%d'",
	Fabricas[c][MedicoContratado],
	Fabricas[c][Porcentaje1],
	Fabricas[c][Porcentaje2],
	Fabricas[c][Porcentaje3],
	Fabricas[c][Crisol1],
	Fabricas[c][Crisol2],
	Fabricas[c][Crisol3],
	Fabricas[c][FechaPaga],
	Fabricas[c][pID]);
	mysql_function_query(Conecction,query,true,"","");

	format(query,sizeof(query),"UPDATE `fabricas` SET `ProgresoC1`='%d', `ProgresoC2`='%d', `ProgresoC3`='%d', `ProgresoC4`='%d', `ProgresoC5`='%d', `EstadoC1`='%d', `EstadoC2`='%d', `EstadoC3`='%d', `EstadoC4`='%d', `EstadoC5` = '%d' WHERE `ID`='%d'",
    Fabricas[c][PorcentajeCocinero1],
	Fabricas[c][PorcentajeCocinero2],
	Fabricas[c][PorcentajeCocinero3],
	Fabricas[c][PorcentajeCocinero4],
	Fabricas[c][PorcentajeCocinero5],
	Fabricas[c][StatoCuoco1],
	Fabricas[c][StatoCuoco2],
	Fabricas[c][StatoCuoco3],
	Fabricas[c][StatoCuoco4],
	Fabricas[c][StatoCuoco5],
	Fabricas[c][pID]);
	mysql_function_query(Conecction,query,true,"","");

	format(query,sizeof(query),"UPDATE `fabricas` SET `TieneMoledor1` = '%d', `TieneMoledor2` = '%d', `TieneMoledor3` = '%d', `TieneMoledor4` = '%d', `TieneMoledor5` = '%d' WHERE `ID`='%d'",
	Fabricas[c][TieneCocinero1],
	Fabricas[c][TieneCocinero2],
	Fabricas[c][TieneCocinero3],
	Fabricas[c][TieneCocinero4],
	Fabricas[c][TieneCocinero5],
	Fabricas[c][pID]);
	mysql_function_query(Conecction,query,true,"","");

	format(query,sizeof(query),"UPDATE `fabricas` SET `Termino1` = '%d', `Termino2` = '%d', `Termino3` = '%d', `Termino4` = '%d', `Termino5` = '%d' WHERE `ID`='%d'",
	Fabricas[c][Termino1],
	Fabricas[c][Termino2],
	Fabricas[c][Termino3],
	Fabricas[c][Termino4],
	Fabricas[c][Termino5],
	Fabricas[c][pID]);
	mysql_function_query(Conecction,query,true,"","");

	format(query,sizeof(query),"UPDATE `fabricas` SET `EstadoMedico` = '%d', `EstadoG1` = '%d', `EstadoG2` = '%d', `EstadoG3` = '%d', `EstadoCoc1` = '%d', `EstadoCoc2` = '%d', `EstadoCoc3` = '%d', `EstadoCoc4` = '%d', `EstadoCoc5` = '%d' WHERE `ID`='%d'",
	Fabricas[c][EstadoMedico],
	Fabricas[c][EstadoG1],
	Fabricas[c][EstadoG2],
	Fabricas[c][EstadoG3],
	Fabricas[c][EstadoCoc1],
	Fabricas[c][EstadoCoc2],
	Fabricas[c][EstadoCoc3],
	Fabricas[c][EstadoCoc4],
	Fabricas[c][EstadoCoc5],
	Fabricas[c][pID]);
	mysql_function_query(Conecction,query,true,"","");

	return true;
}
stock GuardarPropiedad(c)
{
	printf("GuardarPropiedad: %d", c);
	new query[1000];
	format(query,sizeof(query),"UPDATE `propiedades` SET `EnVentaPor`='%d',`EnVenta`='%d',`Precio`='%d',`Nivel`='%d',`Ganancias`='%d' WHERE `ID`='%d'",
	PropInfo[c][pEnVentaPor],
	PropInfo[c][pEnVenta],
	PropInfo[c][pPrecio],
	PropInfo[c][pNivel],
	PropInfo[c][pGanancias],
	PropInfo[c][pID]);

	mysql_function_query(Conecction,query,true,"","");

	format(query,sizeof(query),"UPDATE `propiedades` SET `PosX`='%f',`PosY`='%f',`PosZ`='%f',`PosXS`='%f',`PosYS`='%f',`PosZS`='%f' WHERE `ID`='%d'",
	PropInfo[c][pPosX],
	PropInfo[c][pPosY],
	PropInfo[c][pPosZ],
	PropInfo[c][pPosXS],
	PropInfo[c][pPosYS],
	PropInfo[c][pPosZS],
	PropInfo[c][pID]);

	mysql_function_query(Conecction,query,true,"","");

	format(query,sizeof(query),"UPDATE `propiedades` SET `PosAS`='%f',`EnUso`='%d',`Tipo`='%d',`Interior`='%d',`InteriorID`='%d',`Abierta`='%d' WHERE `ID`='%d'",
	PropInfo[c][pPosAS],
	PropInfo[c][pEnUso],
	PropInfo[c][pTipo],
	PropInfo[c][pInterior],
	PropInfo[c][pInteriorID],
	PropInfo[c][pAbierta],
	PropInfo[c][pID]);

	mysql_function_query(Conecction,query,true,"","");

	format(query,sizeof(query),"UPDATE `propiedades` SET `Sprunk`='%d',`Cerveza`='%d',`Aquarius`='%d',`Pizzas`='%d',`Vino`='%d',`Baston`='%d' WHERE `ID`='%d'",
	PropInfo[c][pSprunk],
	PropInfo[c][pCerveza],
	PropInfo[c][pAquarius],
	PropInfo[c][pPizzas],
	PropInfo[c][pVino],
	PropInfo[c][pBaston],
	PropInfo[c][pID]);

	mysql_function_query(Conecction,query,true,"","");

	format(query,sizeof(query),"UPDATE `propiedades` SET `AK47`='%d',`M4`='%d',`EscopetaNormal`='%d',`EscopetaDeCombate`='%d',`MP5`='%d',`9mm`='%d',`9mmSilenciada`='%d',`PaloDeBillar`='%d' WHERE`ID`='%d'",
	PropInfo[c][pAK47],
	PropInfo[c][pM4],
	PropInfo[c][pEscopetaNormal],
	PropInfo[c][pEscopetaDeCombate],
	PropInfo[c][pMP5],
	PropInfo[c][p9mm],
	PropInfo[c][p9mmSilenciada],
	PropInfo[c][pPaloDeBillar],
	PropInfo[c][pID]);

	mysql_function_query(Conecction,query,true,"","");

	format(query,sizeof(query),"UPDATE `propiedades` SET `DesertEagle`='%d',`Rifle`='%d',`Granada`='%d',`Manopla`='%d',`Cuchillo`='%d',`Katana`='%d',`Crack`='%d',`Medicamentos`='%d',`GranVibradorBlanco`='%d' WHERE `ID`='%d'",
	PropInfo[c][pDesertEagle],
	PropInfo[c][pRifle],
	PropInfo[c][pGranada],
	PropInfo[c][pManopla],
	PropInfo[c][pCuchillo],
	PropInfo[c][pKatana],
	PropInfo[c][pCrack],
	PropInfo[c][pMedicamentos],
	PropInfo[c][pMarihuana],
	PropInfo[c][pGranVibradorBlanco],
	PropInfo[c][pID]);

	mysql_function_query(Conecction,query,true,"","");

	format(query,sizeof(query),"UPDATE `propiedades` SET `Camara`='%d',`Flores`='%d',`Pala`='%d',`BateDeBeisbol`='%d',`PaloDeGolf`='%d',`ConsoladorRosa`='%d',`VibradorBlanco`='%d',`VibradorPlateado`='%d' WHERE `ID`='%d'",
	PropInfo[c][pCamara],
	PropInfo[c][pFlores],
	PropInfo[c][pPala],
	PropInfo[c][pBateDeBeisbol],
	PropInfo[c][pPaloDeGolf],
	PropInfo[c][pConsoladorRosa],
	PropInfo[c][pVibradorBlanco],
	PropInfo[c][pVibradorPlateado],
	PropInfo[c][pID]);

	mysql_function_query(Conecction,query,true,"","");
	return true;
}

stock GuardarEstacionamiento(c)
{
    printf("GuardarEstacionamientos: %d", c);
	new query[1000];
	format(query,sizeof(query),"UPDATE `garages` SET `EnVentaPor`='%d',`EnVenta`='%d',`Precio`='%d',`Nivel`='%d',`Ganancias`='%d' WHERE `ID`='%d'",
	EstaInfo[c][pEnVentaPor],
	EstaInfo[c][pEnVenta],
	EstaInfo[c][pPrecio],
	EstaInfo[c][pNivel],
	EstaInfo[c][pGanancias],
	EstaInfo[c][pID]);

	mysql_function_query(Conecction,query,true,"","");

	format(query,sizeof(query),"UPDATE `garages` SET `PosX`='%f',`PosY`='%f',`PosZ`='%f',`PosXS`='%f',`PosYS`='%f',`PosZS`='%f' WHERE `ID`='%d'",
	EstaInfo[c][pPosX],
	EstaInfo[c][pPosY],
	EstaInfo[c][pPosZ],
	EstaInfo[c][pPosXS],
	EstaInfo[c][pPosYS],
	EstaInfo[c][pPosZS],
	EstaInfo[c][pID]);

	mysql_function_query(Conecction,query,true,"","");

	format(query,sizeof(query),"UPDATE `garages` SET `PosAS`='%f',`EnUso`='%d',`Tipo`='%d',`Interior`='%d',`InteriorID`='%d',`Abierta`='%d' WHERE `ID`='%d'",
	EstaInfo[c][pPosAS],
	EstaInfo[c][pEnUso],
	EstaInfo[c][pTipo],
	EstaInfo[c][pInterior],
	EstaInfo[c][pInteriorID],
	EstaInfo[c][pAbierta],
	EstaInfo[c][pID]);

 	mysql_function_query(Conecction,query,true,"","");
	return true;
}

stock DarInteriorEstacionamiento(c,type = 1)
{
    new Interior, Float:Pos2[3],query[200];
	switch(type)
	{
	    case 1:
	    {
			Pos2[0] = 1706.9027;
			Pos2[1] = -1876.7185;
			Pos2[2] = -48.8961;
			Interior = 1;
			EstaInfo[c][pPosXS] = Pos2[0];
			EstaInfo[c][pVW] = 2;
			EstaInfo[c][pPosYS] = Pos2[1];
			EstaInfo[c][pPosZS] = Pos2[2];
			EstaInfo[c][pInteriorID] = Interior;
        }
        case 2:
        {
           	Pos2[0] = -1276.2468;
			Pos2[1] = 461.1673;
			Pos2[2] = 6.9949;
			Interior = 2;
			EstaInfo[c][pVW] = 5;
			EstaInfo[c][pPosXS] = Pos2[0];
			EstaInfo[c][pPosYS] = Pos2[1];
			EstaInfo[c][pPosZS] = Pos2[2];
			EstaInfo[c][pInteriorID] = Interior;
        }
        case 3:
        {
            Pos2[0] = 2058.5400;
			Pos2[1] = 2437.2600;
			Pos2[2] = 10.8428;
			Interior = 3;
			EstaInfo[c][pVW] = 2;
			EstaInfo[c][pPosXS] = Pos2[0];
			EstaInfo[c][pPosYS] = Pos2[1];
			EstaInfo[c][pPosZS] = Pos2[2];
			EstaInfo[c][pInteriorID] = Interior;
        }
	}
	format(query,sizeof(query),"UPDATE `garages` SET `InteriorID`='%d',`PosXS`='%f',`PosYS`='%f',`PosZS`='%f' WHERE `ID`='%d'",Interior,Pos2[0],Pos2[1],Pos2[2],EstaInfo[c][pID]);
	mysql_function_query(Conecction, query,true,"","");
}

stock DarInteriorCasa(c,interior)
{
	new Interior, Float:Pos2[3],query[200];
	switch(interior)
	{
		case 1:
		{
			Pos2[0] = 235.3099;
			Pos2[1] = 1186.6809;
			Pos2[2] = 1080.2578;
			Interior = 3;
		}
		case 2:
		{
			Pos2[0] = 2317.6685;
			Pos2[1] = -1026.7620;
			Pos2[2] = 1050.2178;
			Interior = 9;
		}
		case 3:
		{
			Pos2[0] = 2333.2153;
			Pos2[1] = -1077.3358;
			Pos2[2] = 1049.0234;
			Interior = 6;
		}
		case 4:
		{
			Pos2[0] = 2196.85;
			Pos2[1] = -1204.25;
			Pos2[2] = 1049.02;
			Interior = 6;
		}
		case 5:
		{
			Pos2[0] = 2308.77;
			Pos2[1] = -1212.94;
			Pos2[2] = 1049.02;
			Interior = 6;
		}
		case 6:
		{
			Pos2[0] = 2365.4602;
			Pos2[1] = -1135.5823;
			Pos2[2] = 1050.8826;
			Interior = 8;
		}
		case 7:
		{
			Pos2[0] = 2283.04;
			Pos2[1] = -1140.28;
			Pos2[2] = 1050.90;
			Interior = 11;
		}
		case 8:
		{
			Pos2[0] = 2496.0586;
			Pos2[1] = -1692.0869;
			Pos2[2] = 1014.7422;
			Interior = 3;
		}
		case 9:
		{
			Pos2[0] = 226.7886;
			Pos2[1] = 1239.8962;
			Pos2[2] = 1082.1406;
			Interior = 2;
		}
		case 10:
		{
			Pos2[0] = 223.0915;
			Pos2[1] = 1287.0846;
			Pos2[2] = 1082.1406;
			Interior = 1;
		}
		case 11:
		{
			Pos2[0] = 225.7592;
			Pos2[1] = 1021.4461;
			Pos2[2] = 1084.0177;
			Interior = 7;
		}
		case 12:
		{
			Pos2[0] = 295.04;
			Pos2[1] = 1472.26;
			Pos2[2] = 1080.26;
			Interior = 15;
		}
		case 13:
		{
			Pos2[0] = 328.0828;
			Pos2[1] = 1477.7327;
			Pos2[2] = 1084.4375;
			Interior = 15;
		}
		case 14:
		{
			Pos2[0] = 387.2211;
			Pos2[1] = 1471.6251;
			Pos2[2] = 1080.1949;
			Interior = 15;
		}
		case 15:
		{
			Pos2[0] = 377.0259;
			Pos2[1] = 1417.4404;
			Pos2[2] = 1081.3281;
			Interior = 15;
		}
		case 16:
		{
			Pos2[0] = 491.0412;
			Pos2[1] = 1398.5021;
			Pos2[2] = 1080.2578;
			Interior = 2;
		}
		case 17:
		{
			Pos2[0] = 446.9309;
			Pos2[1] = 1397.0626;
			Pos2[2] = 1084.3047;
			Interior = 2;
		}
		case 18:
		{
			Pos2[0] = 261.2726;
			Pos2[1] = 1284.3112;
			Pos2[2] = 1080.2578;
			Interior = 4;
		}
		case 19:
		{
			Pos2[0] = 221.8109;
			Pos2[1] = 1140.1986;
			Pos2[2] = 1082.6094;
			Interior = 4;
		}
		case 20:
		{
			Pos2[0] = 23.8471;
			Pos2[1] = 1340.1683;
			Pos2[2] = 1084.3750;
			Interior = 10;
		}
		case 21:
		{
			Pos2[0] = -260.4884;
			Pos2[1] = 1456.5424;
			Pos2[2] = 1084.3672;
			Interior = 4;
		}
		case 22:
		{
			Pos2[0] = 22.9034;
			Pos2[1] = 1403.3380;
			Pos2[2] = 1084.4370;
			Interior = 5;
		}
		case 23:
		{
			Pos2[0] = 140.1393;
			Pos2[1] = 1365.9347;
			Pos2[2] = 1083.8594;
			Interior = 5;
		}
		case 24:
		{
			Pos2[0] = 234.0749;
			Pos2[1] = 1063.7300;
			Pos2[2] = 1084.2123;
			Interior = 6;
		}
		case 25:
		{
			Pos2[0] = -68.9326;
			Pos2[1] = 1351.2013;
			Pos2[2] = 1080.2109;
			Interior = 6;
		}
		case 26:
		{
			Pos2[0] = -283.4381;
			Pos2[1] = 1471.1987;
			Pos2[2] = 1084.3750;
			Interior = 15;
		}
		case 27:
		{
			Pos2[0] = -42.59;
			Pos2[1] = 1405.47;
			Pos2[2] = 1084.43;
			Interior = 8;
		}
		case 28:
		{
			Pos2[0] = 83.1256;
			Pos2[1] = 1322.2806;
			Pos2[2] = 1083.8662;
			Interior = 9;
		}
		case 29:
		{
			Pos2[0] = 260.85;
			Pos2[1] = 1237.24;
			Pos2[2] = 1084.26;
			Interior = 9;
		}
		case 30:
		{
			Pos2[0] = 2468.84;
			Pos2[1] = -1698.24;
			Pos2[2] = 1013.51;
			Interior = 2;
		}
		case 31:
		{
			Pos2[0] = 2807.8662;
			Pos2[1] = -1174.7537;
			Pos2[2] = 1025.5703;
			Interior = 8;
		}
		case 32:
		{
			Pos2[0] = 318.4255;
			Pos2[1] = 1114.4877;
			Pos2[2] = 1083.8828;
			Interior = 5;
		}
		case 33:
		{
			Pos2[0] = 2324.5017;
			Pos2[1] = -1149.5309;
			Pos2[2] = 1050.7101;
			Interior = 12;
		}
		case 34:
		{
			Pos2[0] = 2259.38;
			Pos2[1] = -1135.77;
			Pos2[2] = 1050.64;
			Interior = 10;
		}
		case 35:
		{
			Pos2[0] = -2170.4675;
			Pos2[1] = 639.4775;
			Pos2[2] = 1052.3750;
			Interior = 1;
		}
		case 36:
		{
			Pos2[0] = 422.5716;
			Pos2[1] = 2536.6816;
			Pos2[2] = 10.0000;
			Interior = 10;
		}
		case 37:
		{
			Pos2[0] = 1260.8397;
			Pos2[1] = -785.4880;
			Pos2[2] = 1091.9063;
			Interior = 5;
		}
		case 38:
		{
			Pos2[0] = 2548.7993;
			Pos2[1] = -1294.6368;
			Pos2[2] = 1060.9844;
			Interior = 2;
		}
		case 40:
		{
			Pos2[0] = 1454.7249;
			Pos2[1] = 551.5430;
			Pos2[2] = 1000.9959;
			Interior = 10;
		}
		case 41:
		{
			Pos2[0] = -794.7611;
			Pos2[1] = 508.3545;
			Pos2[2] = 1371.7490;
			Interior = 1;
		}
		case 42:
		{
			Pos2[0] = 2270.38;
			Pos2[1] = -1210.35;
			Pos2[2] = 1047.56;
			Interior = 10;
		}
		case 43:
		{
			Pos2[0] = 1425.9178;
			Pos2[1] = 599.6864;
			Pos2[2] = 1000.9683;
			Interior = 1;
		}
		case 158:
		{
			Pos2[0] = 243.5093;
			Pos2[1] = -1851.5255;
			Pos2[2] = 3333.9329;
			Interior = 2;
		}
		case 200:
		{
			Pos2[0] = 1094.8260;
			Pos2[1] = -812.7463;
			Pos2[2] = 107.4822;
			Interior = 1;
		}
		default: return print("[ERROR]: Se creo una casa con ID inválida.");
	}
	PropInfo[c][pPosXS] = Pos2[0];
	PropInfo[c][pPosYS] = Pos2[1];
	PropInfo[c][pPosZS] = Pos2[2];
	PropInfo[c][pInteriorID] = Interior;
	format(query,sizeof(query),"UPDATE `propiedades` SET `InteriorID`='%d',`PosXS`='%f',`PosYS`='%f',`PosZS`='%f' WHERE `ID`='%d'",
	Interior,Pos2[0],Pos2[1],Pos2[2],PropInfo[c][pID]);
	mysql_function_query(Conecction, query,true,"","");
	return true;
}
stock DarInteriorFabrica(c)
{
	new query[1000];
 	Fabricas[c][pSalidaX] = -1976.3900;
	Fabricas[c][pSalidaY] = 206.3660;
	Fabricas[c][pSalidaZ] = 1035.8199;
	format(query,sizeof(query),"UPDATE `fabricas` SET `Interior`='1',`SalidaX`='-1976.3900',`SalidaY`='206.3660',`SalidaZ`='1035.8199' WHERE `ID`='%d'",Fabricas[c][pID]);
	mysql_function_query(Conecction, query,true,"","");
	return true;
}

stock EstacionamientoDesocupado()
{
	for(new p = 0; p < MAX_PROPIEDADES; p++)
	{
	    if(EstaInfo[p][pEnUso] == 0 && p != 0) return p;
	}
	return -1;
}

stock CasaDesocupada()
{
	for(new p = 0; p < MAX_PROPIEDADES; p++)
	{
	    if(PropInfo[p][pEnUso] == 0 && p != 0) return p;
	}
	return -1;
}
stock FabricaDesocupada()
{
	for(new p = 0; p < MAX_FABRICAS; p++)
	{
	    if(Fabricas[p][pEnUso] == 0 && p != 0) return p;
	}
	return -1;
}
stock SiRoperoTiene(c,objeto)
{
    if(objeto == 1 && PropInfo[c][pManopla] > 0) return 1;
	else if(objeto == 2 && PropInfo[c][pPaloDeGolf] > 0) return 1;
	else if(objeto == 4 && PropInfo[c][pCuchillo] > 0) return 1;
	else if(objeto == 5 && PropInfo[c][pBateDeBeisbol] > 0) return 1;
	else if(objeto == 6 && PropInfo[c][pPala] > 0) return 1;
	else if(objeto == 7 && PropInfo[c][pPaloDeBillar] > 0) return 1;
	else if(objeto == 8 && PropInfo[c][pKatana] > 0) return 1;
	else if(objeto == 10 && PropInfo[c][pConsoladorRosa] > 0) return 1;
	else if(objeto == 11 && PropInfo[c][pVibradorBlanco] > 0) return 1;
	else if(objeto == 12 && PropInfo[c][pGranVibradorBlanco] > 0) return 1;
	else if(objeto == 13 && PropInfo[c][pVibradorPlateado] > 0) return 1;
	else if(objeto == 14 && PropInfo[c][pFlores] > 0) return 1;
	else if(objeto == 15 && PropInfo[c][pBaston] > 0) return 1;
	else if(objeto == 16 && PropInfo[c][pGranada] > 0) return 1;
	else if(objeto == 22 && PropInfo[c][p9mm] > 0) return 1;
	else if(objeto == 23 && PropInfo[c][p9mmSilenciada] > 0) return 1;
	else if(objeto == 24 && PropInfo[c][pDesertEagle] > 0) return 1;
	else if(objeto == 25 && PropInfo[c][pEscopetaNormal] > 0) return 1;
	else if(objeto == 27 && PropInfo[c][pEscopetaDeCombate] > 0) return 1;
	else if(objeto == 29 && PropInfo[c][pMP5] > 0) return 1;
	else if(objeto == 31 && PropInfo[c][pM4] > 0) return 1;
	else if(objeto == 30 && PropInfo[c][pAK47] > 0) return 1;
	else if(objeto == 33 && PropInfo[c][pRifle] > 0) return 1;
	else if(objeto == 43 && PropInfo[c][pCamara] > 0) return 1;
	return 0;
}

stock EspacioRopero(c)
{
	new total =
	PropInfo[c][pAK47] +
	PropInfo[c][pM4] +
	PropInfo[c][pEscopetaNormal] +
	PropInfo[c][pEscopetaDeCombate] +
	PropInfo[c][pMP5] +
	PropInfo[c][p9mm] +
	PropInfo[c][p9mmSilenciada] +
	PropInfo[c][pDesertEagle] +
	PropInfo[c][pRifle] +
	PropInfo[c][pGranada] +
	PropInfo[c][pManopla] +
	PropInfo[c][pCuchillo] +
	PropInfo[c][pKatana] +
	PropInfo[c][pPala] +
	PropInfo[c][pCamara] +
	PropInfo[c][pBateDeBeisbol] +
	PropInfo[c][pPaloDeGolf] +
	PropInfo[c][pPaloDeBillar] +
	PropInfo[c][pConsoladorRosa] +
	PropInfo[c][pVibradorBlanco] +
	PropInfo[c][pGranVibradorBlanco] +
	PropInfo[c][pVibradorPlateado] +
	PropInfo[c][pBaston] +
	PropInfo[c][pFlores]
	;
	return total;
}

stock SendRadioMessagePatrulla(member, color, string[])
{
    if(member == 1)
	{
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(PlayerInfo[i][pDuty] == 1)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
}
stock SendRadioMessage(member, color, string[], id = INVALID_PLAYER_ID)
{
	if(member == 1)
	{
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(PlayerInfo[i][pDuty] == 1 && i != id)
			{
				if(EstadoRadio[i] == 1 && Frecuencia[i] == Frecuencia[id])
				{
					SendClientMessage(i, color, string);
				}
			}
		}
	}
	else
	{
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i))
			{
				if(PlayerInfo[i][pFaccion] == member && EstadoRadio[i] == 1 && i != id)
				{
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}

stock DarArma(playerid, weaponid)
{
    if(weaponid == 1)
	{
		PlayerInfo[playerid][pWP0] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	if(weaponid > 1 && weaponid <= 9)
	{
		PlayerInfo[playerid][pWP1] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	if( weaponid >= 22 && weaponid <= 24 )
	{
		PlayerInfo[playerid][pWP2] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	if( weaponid >= 25 && weaponid <= 27 )
	{
		PlayerInfo[playerid][pWP3] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	if( weaponid == 28 || weaponid == 29 || weaponid == 32 )
	{
		PlayerInfo[playerid][pWP4] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	if( weaponid == 30 || weaponid == 31 )
	{
		PlayerInfo[playerid][pWP5] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	if( weaponid == 33 || weaponid == 34 )
	{
		PlayerInfo[playerid][pWP6] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	if( weaponid >= 35 && weaponid <= 38 )
	{
		PlayerInfo[playerid][pWP7] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	if( weaponid >= 16 && weaponid <= 18 || weaponid == 39)
	{
		PlayerInfo[playerid][pWP8] = weaponid;
		new weapons8[MAX_PLAYERS], municion;
		GetPlayerWeaponData(playerid, 8, weapons8[playerid], municion);
		if(municion >= 1) { }
		else { GivePlayerWeapon(playerid, weaponid, 1); }
		return 1;
	}
	if( weaponid >= 41 && weaponid <= 43 )
	{
		PlayerInfo[playerid][pWP9] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	if( weaponid >= 10 && weaponid <= 15)
	{
		PlayerInfo[playerid][pWP10] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	if( weaponid >= 44 && weaponid <= 46 )
	{
		PlayerInfo[playerid][pWP11] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	return 1;
}
stock CancelarCriminal(playerid)
{
	if(TieneEncargo[playerid] > 0)
	{
		for(new e=1; e<MAX_ENCARGOS; e++)
		{
			if(e == TieneEncargo[playerid])
			{
				Encargo[e][MisionActiva] = 0;
				Encargo[e][ObjetivoTake] = 0;
				Encargo[e][Bajas] = 0;
				CriminalAceptado[e] = 0;
				Encargo[e][Tiene9mm] = 0;
				Encargo[e][IdCriminal] = INVALID_PLAYER_ID;
				Encargo[e][IdColega] = INVALID_PLAYER_ID;
				foreach(Player,u)
				{
					if(TieneEncargo[u] == e)
					{
						SendClientMessage(u, -1, "Tu colega se ha marchado, no puedes seguir con el encargo.");
						TieneEncargo[u] = 0;
						CriminalAceptado[u] = 0;
						TomoEncargo[u] = 0;
						DisablePlayerRaceCheckpoint(u);
						if(IsValidActor(Encargo[e][Actor1])) DestroyActor(Encargo[e][Actor1]);
						if(IsValidActor(Encargo[e][Objetivo])) DestroyActor(Encargo[e][Objetivo]);
						if(IsValidActor(Encargo[e][Actor2])) DestroyActor(Encargo[e][Actor2]);
					}
				}
			}
		}
	}
	return 1;
}



stock FinTiempoCriminal(e)
{
	if(Encargo[e][SegundosMision] == 0)
	{
		Encargo[e][MisionActiva] = 0;
		Encargo[e][ObjetivoTake] = 0;
		Encargo[e][Bajas] = 0;
		Encargo[e][Tiene9mm] = 0;
		Encargo[e][IdCriminal] = INVALID_PLAYER_ID;
		Encargo[e][IdColega] = INVALID_PLAYER_ID;
		foreach(Player,u)
		{
			if(TieneEncargo[u] == e)
			{
				if(CriminalAceptado[u] == 0)
                {
                    SendClientMessage(u, -1, "Tardaste demasiado en conseguir un colega, {FF0303}el encargo ha sido cancelado{FFFFFF}.");
                }
                else
                {
                    SendClientMessage(u, -1, "Tardaron demasiado, {FF0303}el objetivo se ha ido{FFFFFF}.");
                }
				TieneEncargo[u] = 0;
				TomoEncargo[u] = 0;
				DisablePlayerRaceCheckpoint(u);
				if(IsValidActor(Encargo[e][Actor1])) DestroyActor(Encargo[e][Actor1]);
				if(IsValidActor(Encargo[e][Objetivo])) DestroyActor(Encargo[e][Objetivo]);
				if(IsValidActor(Encargo[e][Actor2])) DestroyActor(Encargo[e][Actor2]);
			}
		}
	}
	return 1;
}

stock FinMisionCriminal(e)
{
	new item[200],GananciaFinal;
	switch(e)
	{
		case 1: {	GananciaFinal=2000;}
		case 2: {	GananciaFinal=2500;}
		case 3: {	GananciaFinal=2200;}
		case 4: {	GananciaFinal=3000;}
		case 5: {	GananciaFinal=2800;}
	}
	format(item,sizeof(item),"\n{FFFFFF}Pago inicial: {F7A40A}$%d",	GananciaFinal);
	if(PlayerInfo[Encargo[e][IdCriminal]][pWP2] == 23)
	{
		format(item,sizeof(item),"%s\n{FFFFFF}Ganancia por entregar el arma del delito: {4CF000}$2000",item);
		QuitarArma(Encargo[e][IdCriminal],23);
		GananciaFinal += 2000;
	}
	if(Encargo[e][Bajas] > 0)
	{
		format(item,sizeof(item),"%s\n{FFFFFF}Descuento por bajas innecesarias: {FF0808}$500",item);
		GananciaFinal -= 500;
	}
	format(item,sizeof(item),"%s\n{FFFFFF}Ganancia final: {4CF000}$%d",item,GananciaFinal);
	foreach(Player,u)
	{
		if(TieneEncargo[u] == e)
		{
			new Ganancias[200];
			ShowPlayerDialog(u,habilidad,DIALOG_STYLE_MSGBOX,"{49C410}Encargo finalizado{FFFFFF}",item,"Aceptar","");
			TieneEncargo[u] = 0;
			TomoEncargo[u] = 0;
			CriminalAceptado[u] = 0;
			DisablePlayerRaceCheckpoint(u);
			SetPlayerWantedLevel(u, 0);
			SetPlayerWantedLevel(u, 0);
			DarDinero(u, GananciaFinal);
			format(Ganancias, 128, "¡Buen Trabajo! Tus ganancias son: {00CC00}$%d{FFFFFF}.",GananciaFinal);
			SendClientMessage(u, -1, Ganancias);
		}
	}
	SendClientMessage(Encargo[e][IdCriminal],0x2d8cecFF,"Habilidad de criminal aumentada +1 punto.");
	SendClientMessage(Encargo[e][IdColega],0x2d8cecFF,"Habilidad de criminal aumentada +1 punto.");
	Encargo[e][MisionActiva] = 0;
	Encargo[e][ObjetivoTake] = 0;
	Encargo[e][Bajas] = 0;
	Encargo[e][Tiene9mm] = 0;
	Encargo[e][IdCriminal] = INVALID_PLAYER_ID;
	Encargo[e][IdColega] = INVALID_PLAYER_ID;
	return 1;
}
stock DarArmas(playerid)
{
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP0],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP1],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP2],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP3],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP4],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP5],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP6],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP7],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP8],1);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP9],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP10],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP11],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pWP12],9999999);
	return 1;
}

stock Habilidad(playerid)
{
	new item[900];
	format(item,sizeof(item),"{FFFFFF}Trabajo de {febf00}Camionero{FFFFFF} (Nivel: %d | Progreso %d/50)\n",				PlayerInfo[playerid][pNivelCamionero],		PlayerInfo[playerid][pExpCamionero]);
	format(item,sizeof(item),"%s\nTrabajo de {ff0000}Fabricante de armas{FFFFFF} (Nivel: %d | Progreso %d/50)\n",item,	PlayerInfo[playerid][pNivelArmero],			PlayerInfo[playerid][pExpArmero]);
	format(item,sizeof(item),"%s\nTrabajo de {00d8ff}Mecánico{FFFFFF} (Nivel: %d | Progreso %d/50)\n",item,				PlayerInfo[playerid][pNivelPiloto],			PlayerInfo[playerid][pExpPiloto]);
	format(item,sizeof(item),"%s\nTrabajo de {6c5109}Basurero{FFFFFF} (Nivel: %d | Progreso %d/50)\n",item,				PlayerInfo[playerid][pNivelBasurero],		PlayerInfo[playerid][pExpBasurero]);
	format(item,sizeof(item),"%s\nTrabajo de {662aff}Transportista{FFFFFF} (Nivel: %d | Progreso %d/50)\n",item,		PlayerInfo[playerid][pNivelTransportista],	PlayerInfo[playerid][pExpTransportista]);
	format(item,sizeof(item),"%s\nTrabajo de {2945d4}Ladrón{FFFFFF} (Nivel: %d | Progreso %d/50)\n",item,				PlayerInfo[playerid][pNivelLadron],			PlayerInfo[playerid][pExpLadron]);
	format(item,sizeof(item),"%s\nTrabajo de {c4c4c4}Minero{FFFFFF} (Nivel: %d | Progreso %d/50)\n",item,				PlayerInfo[playerid][pNivelMinero],			PlayerInfo[playerid][pExpMinero]);
	format(item,sizeof(item),"%s\nTrabajo de {006C00}Pescador{FFFFFF} (Nivel: %d | Progreso %d/50)\n",item,				PlayerInfo[playerid][pNivelPescador],		PlayerInfo[playerid][pExpPescador]);
	format(item,sizeof(item),"%s\nTrabajo de {ff4e00}Médico{FFFFFF} (Nivel: %d | Progreso %d/50)\n",item,				PlayerInfo[playerid][pNivelMedico],		PlayerInfo[playerid][pExpMedico]);
	ShowPlayerDialog(playerid,habilidad,DIALOG_STYLE_MSGBOX,"Habilidades",item,"Cerrar","");
	return 1;
}

stock Habilidad2(ID,playerid)
{
	new item[900];
	format(item,sizeof(item),"{FFFFFF}Trabajo de {febf00}Camionero{FFFFFF} (Nivel: %d | Progreso %d/50)\n",				PlayerInfo[ID][pNivelCamionero],		PlayerInfo[ID][pExpCamionero]);
	format(item,sizeof(item),"%s\nTrabajo de {ff0000}Fabricante de armas{FFFFFF} (Nivel: %d | Progreso %d/50)\n",item,	PlayerInfo[ID][pNivelArmero],			PlayerInfo[ID][pExpArmero]);
	format(item,sizeof(item),"%s\nTrabajo de {00d8ff}Mecánico{FFFFFF} (Nivel: %d | Progreso %d/50)\n",item,				PlayerInfo[ID][pNivelPiloto],			PlayerInfo[ID][pExpPiloto]);
	format(item,sizeof(item),"%s\nTrabajo de {6c5109}Basurero{FFFFFF} (Nivel: %d | Progreso %d/50)\n",item,				PlayerInfo[ID][pNivelBasurero],			PlayerInfo[ID][pExpBasurero]);
	format(item,sizeof(item),"%s\nTrabajo de {662aff}Transportista{FFFFFF} (Nivel: %d | Progreso %d/50)\n",item,		PlayerInfo[ID][pNivelTransportista],	PlayerInfo[ID][pExpTransportista]);
	format(item,sizeof(item),"%s\nTrabajo de {2945d4}Ladrón{FFFFFF} (Nivel: %d | Progreso %d/50)\n",item,				PlayerInfo[ID][pNivelLadron],			PlayerInfo[ID][pExpLadron]);
	format(item,sizeof(item),"%s\nTrabajo de {c4c4c4}Minero{FFFFFF} (Nivel: %d | Progreso %d/50)\n",item,				PlayerInfo[ID][pNivelMinero],			PlayerInfo[ID][pExpMinero]);
	format(item,sizeof(item),"%s\nTrabajo de {006C00}Pescador{FFFFFF} (Nivel: %d | Progreso %d/50)\n",item,				PlayerInfo[ID][pNivelPescador],			PlayerInfo[ID][pExpPescador]);
	format(item,sizeof(item),"%s\nTrabajo de {ff4e00}Médico{FFFFFF} (Nivel: %d | Progreso %d/50)\n",item,				PlayerInfo[ID][pNivelMedico],		PlayerInfo[ID][pExpMedico]);
	ShowPlayerDialog(playerid,habilidad,DIALOG_STYLE_MSGBOX,"Habilidades",item,"Cerrar","");
	return 1;
}

stock Localizar(playerid)
{
	if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
	{
	    new vehiculo1[360],vehiculo2[360],vehiculo3[360],vehiculo4[360],mensaje[512];
		if(PlayerInfo[playerid][vModelo] > 0) format(vehiculo1, sizeof(vehiculo1), " Vehículo: {F6E200}%s{FFFFFF} | Patente: {00CCFF}%s{FFFFFF}", NombreAuto[GetVehicleModel(autos[playerid])-400], PlayerInfo[playerid][vpatente]);
		if(PlayerInfo[playerid][vModelo2] > 0) format(vehiculo2, sizeof(vehiculo2), "\n Vehículo: {F6E200}%s{FFFFFF} | Patente: {00CCFF}%s{FFFFFF}", NombreAuto[GetVehicleModel(autos2[playerid])-400], PlayerInfo[playerid][v2patente]);
		if(PlayerInfo[playerid][vModelo3] > 0) format(vehiculo3, sizeof(vehiculo3), "\n Vehículo: {F6E200}%s{FFFFFF} | Patente: {00CCFF}%s{FFFFFF}", NombreAuto[GetVehicleModel(autos3[playerid])-400], PlayerInfo[playerid][v3patente]);
		if(PlayerInfo[playerid][vModelo4] > 0) format(vehiculo4, sizeof(vehiculo4), "\n Vehículo: {F6E200}%s{FFFFFF} | Patente: {00CCFF}%s{FFFFFF}", NombreAuto[GetVehicleModel(autos4[playerid])-400], PlayerInfo[playerid][v4patente]);

		format(mensaje, sizeof(mensaje), "%s%s%s%s",	vehiculo1,vehiculo2,vehiculo3,vehiculo4);
		ShowPlayerDialog(playerid, GeoLocalization, DIALOG_STYLE_LIST, "Selecciona el vehiculo que deseas localizar", mensaje, "Localizar","Cancelar");
	}
	return 1;
}

stock Localizar2(ID,playerid)
{
	if(PlayerInfo[ID][vModelo] > 0 || PlayerInfo[ID][vModelo2] > 0 || PlayerInfo[ID][vModelo3] > 0 || PlayerInfo[ID][vModelo4] > 0)
	{
		new vehiculo1[360],vehiculo2[360],vehiculo3[360],vehiculo4[360];
		if(PlayerInfo[ID][vModelo] > 0)  format(vehiculo1, sizeof(vehiculo1), "- Vehículo: {F6E200}%s{FFFFFF} | Patente: {00CCFF}%s{FFFFFF} | ID: %d", NombreAuto[GetVehicleModel(autos[ID])-400], PlayerInfo[ID][vpatente],autos[ID]);
		if(PlayerInfo[ID][vModelo2] > 0) format(vehiculo2, sizeof(vehiculo2), "- Vehículo: {F6E200}%s{FFFFFF} | Patente: {00CCFF}%s{FFFFFF} | ID: %d", NombreAuto[GetVehicleModel(autos2[ID])-400], PlayerInfo[ID][v2patente],autos2[ID]);
		if(PlayerInfo[ID][vModelo3] > 0) format(vehiculo3, sizeof(vehiculo3), "- Vehículo: {F6E200}%s{FFFFFF} | Patente: {00CCFF}%s{FFFFFF} | ID: %d", NombreAuto[GetVehicleModel(autos3[ID])-400], PlayerInfo[ID][v3patente],autos3[ID]);
		if(PlayerInfo[ID][vModelo4] > 0) format(vehiculo4, sizeof(vehiculo4), "- Vehículo: {F6E200}%s{FFFFFF} | Patente: {00CCFF}%s{FFFFFF} | ID: %d", NombreAuto[GetVehicleModel(autos4[ID])-400], PlayerInfo[ID][v4patente],autos4[ID]);

		if(PlayerInfo[ID][vModelo] > 0)  SendClientMessage(playerid,-1,vehiculo1);
		if(PlayerInfo[ID][vModelo2] > 0) SendClientMessage(playerid,-1,vehiculo2);
		if(PlayerInfo[ID][vModelo3] > 0) SendClientMessage(playerid,-1,vehiculo3);
		if(PlayerInfo[ID][vModelo4] > 0) SendClientMessage(playerid,-1,vehiculo4);
	}
	else SendClientMessage(playerid,-1,"Este jugador no tiene ningún vehiculo a su nombre.");
	return 1;
}

stock EnviarSMS(playerid, numero, text[256])
{
	new anio, mes, dia, hora, minuto, segundo;
	getdate(anio, mes, dia);
	gettime(hora, minuto, segundo);
	new pName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pName, 50);
	if(PlayerInfo[playerid][pNumero] == numero) return SendClientMessage(playerid,-1,"No puedes autoenviarte un SMS.");
 	foreach(Player, i)
	{
		if(IsPlayerConnected(i) && PlayerInfo[i][pNumero] == numero && numero != 0)
		{
			if(TelefonoEstado[i] == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "El mensaje {FF3300}no se pudo entregar{FFFFFF}, comprueba que el número sea el correcto.");
			 	return SendClientMessage(playerid, COLOR_WHITE, "Si el número está bien, probablemente el teléfono esté apagado.");
			}
			new sms[200];
			format(sms,sizeof(sms),"(( SMS de %s [%d])): %s",pName,PlayerInfo[playerid][pNumero], text);
			SendClientMessage(i, COLOR_DORADO, sms);
			SendClientMessage(playerid, COLOR_DORADO, "Mensaje enviado con éxito.");
			if(GetSpam(text,playerid) && !DetectSPAM(text)) MensajeSpam(playerid,text);
			GameTextForPlayer(playerid, "~r~-15$", 5000, 1);
			QuitarDinero(playerid, 15);
			if(GetPVarInt(playerid, "NumeroSMS") == 0 || GetPVarInt(playerid, "NumeroSMS") != numero)
			{
				SetPVarInt(playerid, "NumeroSMS", numero);
				new texts[200];
				format(texts,sizeof(texts),"{FFFFFF}Para volver a enviar otro mensaje al número {00CCFF}%d {FFFFFF}simplemente usa {DBED16}/sms mensaje{FFFFFF}.",numero);
				SendClientMessage(playerid,-1,texts   );
			}
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			QuitarDinero(playerid, -15);
			return 1;
		}
	}
	SendClientMessage(playerid, COLOR_WHITE, "El mensaje {FF4202}no se pudo entregar{FFFFFF}, comprueba que el número sea el correcto.");
	SendClientMessage(playerid, COLOR_WHITE, "Si el número está bien, probablemente el teléfono esté apagado.");
	return 1;
}

stock Inventario(playerid)
{
	new string[800];
	if(PlayerInfo[playerid][Moneda] > 0)
	{
		format(string, 800,"{FFFFFF}"SERVER_COIN": {00cc00}%d{FFFFFF}.\n", PlayerInfo[playerid][Moneda]);
	}
	if(PlayerInfo[playerid][Totems] > 0)
	{
		format(string, 800,"%s{FFFFFF}Tótems: {8c5c35}%d{FFFFFF}.\n",string,PlayerInfo[playerid][Totems]);
	}
	format(string, 800,"%s{FFFFFF}Dinero: {00CC00}$%d{FFFFFF}.", string, PlayerInfo[playerid][jDinero]);

	if(PlayerInfo[playerid][pNumero] > 0)
	{
		format(string, 800,"%s\nTeléfono móvil.",string);
	}
	if(PlayerInfo[playerid][pAgenda] == 1)
	{
		format(string, 800,"%s\nGuía telefónica.",string);
	}
	if(PlayerInfo[playerid][pGPS] == 1)
	{
		format(string, 800,"%s\nGPS.",string);
	}
	if(PlayerInfo[playerid][pPatines] == 1)
	{
		format(string, 800,"%s\nPatines.",string);
	}
	if(PlayerInfo[playerid][pObj] > 19382 || PlayerInfo[playerid][pObj2] > 19382 || PlayerInfo[playerid][pObj3] > 19382 || PlayerInfo[playerid][pObj4] > 19382)
	{
		format(string, 800,"%s\nPrenda de vestir: {00CC00}Sí{FFFFFF} -{DBED16} /usar prenda{FFFFFF}.",string);
	}
	if(PlayerInfo[playerid][pRadio] == 1)
	{
		format(string, 800,"%s\nRadio comunicador.",string);
	}
	if(Bidon[playerid] == 1)
	{
		format(string, 800,"%s\nBidón de gasolina.",string);
	}
	if(PlayerInfo[playerid][pMedicamentos] > 0)
	{
		format(string, 800,"%s\nMedicamentos: {00CC00}%d{FFFFFF}.",string,PlayerInfo[playerid][pMedicamentos]);
	}
	if(PlayerInfo[playerid][pMarihuana] > 0)
	{
		format(string, 800,"%s\nMarihuana: {ff3300}%dg{FFFFFF}.",string,PlayerInfo[playerid][pMarihuana]);
	}
	if(PlayerInfo[playerid][pCrack] > 0)
	{
		format(string, 800,"%s\nCrack: {ff3300}%dg{FFFFFF}.",string,PlayerInfo[playerid][pCrack]);
	}
	if(PlayerInfo[playerid][pCaramelos] > 0)
	{
		format(string, 800,"%s\nCaramelos: {a31fff}%d{FFFFFF}.",string,PlayerInfo[playerid][pCaramelos]);
	}
	if(PlayerInfo[playerid][pSemillas] > 0)
	{
		format(string, 800,"%s\nSemillas de marihuana: {ff3300}%d{FFFFFF}.",string,PlayerInfo[playerid][pSemillas]);
	}
	if(PlayerInfo[playerid][Repuestos] > 0)
	{
		format(string, 800,"%s\nRepuestos: {00CC00}%d{FFFFFF}/100.",string,PlayerInfo[playerid][Repuestos]);
	}
	if(PlayerInfo[playerid][pMateriales] > 0)
	{
		format(string, 800,"%s\nPiezas de armas: {ff3300}%d{FFFFFF}.",string,PlayerInfo[playerid][pMateriales]);
	}
	if(PlayerInfo[playerid][piezas] > 0)
	{
		format(string, 800,"%s\nMateriales: {ff3300}%d{FFFFFF}.",string,PlayerInfo[playerid][piezas]);
	}
	if(PlayerInfo[playerid][pWP0] > 0 || PlayerInfo[playerid][pWP1] > 0 || PlayerInfo[playerid][pWP2] > 0||PlayerInfo[playerid][pWP3] > 0||PlayerInfo[playerid][pWP4] > 0||PlayerInfo[playerid][pWP5] > 0||PlayerInfo[playerid][pWP6] > 0||PlayerInfo[playerid][pWP7] > 0||PlayerInfo[playerid][pWP8] > 0||PlayerInfo[playerid][pWP9] > 0||PlayerInfo[playerid][pWP10] > 0||PlayerInfo[playerid][pWP11] > 0||PlayerInfo[playerid][pWP12] > 0)
	{
		format(string, 800,"%s\nArmas: %s%s%s%s%s%s%s%s%s%s%s%s%s",string, NombreArma[PlayerInfo[playerid][pWP0]],NombreArma[PlayerInfo[playerid][pWP1]],NombreArma[PlayerInfo[playerid][pWP2]],NombreArma[PlayerInfo[playerid][pWP3]],NombreArma[PlayerInfo[playerid][pWP4]],NombreArma[PlayerInfo[playerid][pWP5]],NombreArma[PlayerInfo[playerid][pWP6]],NombreArma[PlayerInfo[playerid][pWP7]],NombreArma[PlayerInfo[playerid][pWP8]],NombreArma[PlayerInfo[playerid][pWP9]],NombreArma[PlayerInfo[playerid][pWP10]],NombreArma[PlayerInfo[playerid][pWP11]],NombreArma[PlayerInfo[playerid][pWP12]]);
	}
	if(PlayerInfo[playerid][jMartillo] > 0 || PlayerInfo[playerid][jDestornillador] > 0 || PlayerInfo[playerid][jBarreta] > 0||PlayerInfo[playerid][jBalde] > 0)
	{
		format(string, 800,"%s\n\n{FFFFFF}Herramientas: %s%s%s%s ",string, NombreHerramienta[PlayerInfo[playerid][jMartillo]],NombreHerramienta[PlayerInfo[playerid][jDestornillador]],NombreHerramienta[PlayerInfo[playerid][jBarreta]],NombreHerramienta[PlayerInfo[playerid][jBalde]]);
	}
	ShowPlayerDialog(playerid, INVENTARIO, DIALOG_STYLE_MSGBOX,"{DBED16}Inventario",string,"Cerrar","");
	return 1;
}

stock Inventario2(ID,targetid)
{
	new string[800];
	if(PlayerInfo[ID][Moneda] > 0)
	{
		format(string, 800,"{FFFFFF}"SERVER_COIN": {00CC00}%d{FFFFFF}.\n", PlayerInfo[ID][Moneda]);
	}
	if(PlayerInfo[ID][Totems] > 0)
	{
		format(string, 800,"%s{FFFFFF}Tótems: {8c5c35}%d{FFFFFF}.\n",string,PlayerInfo[ID][Totems]);
	}
	format(string, 800,"%s{FFFFFF}Dinero: {00CC00}$%d{FFFFFF}.",string, PlayerInfo[ID][jDinero]);
	if(PlayerInfo[ID][pNumero] > 0)
	{
		format(string, 800,"%s\nTeléfono móvil.",string);
	}
	if(PlayerInfo[ID][pAgenda] == 1)
	{
		format(string, 800,"%s\nGuía telefónica.",string);
	}
	if(PlayerInfo[ID][pGPS] == 1)
	{
		format(string, 800,"%s\nGPS.",string);
	}
	if(PlayerInfo[ID][pPatines] == 1)
	{
		format(string, 800,"%s\nPatines.",string);
	}
	if(PlayerInfo[ID][pObj] > 19382 || PlayerInfo[ID][pObj2] > 19382 || PlayerInfo[ID][pObj3] > 19382 || PlayerInfo[ID][pObj4] > 19382)
	{
		format(string, 800,"%s\nPrenda de vestir: {00CC00}Sí{FFFFFF} -{DBED16} /usar prenda{FFFFFF}.",string);
	}
	if(PlayerInfo[ID][pRadio] == 1)
	{
		format(string, 800,"%s\nRadio comunicador.",string);
	}
	if(Bidon[ID] == 1)
	{
		format(string, 800,"%s\nBidón de gasolina.",string);
	}
	if(PlayerInfo[ID][pMedicamentos] > 0)
	{
		format(string, 800,"%s\nMedicamentos: {ff3300}%d{FFFFFF}.",string,PlayerInfo[ID][pMedicamentos]);
	}
    if(PlayerInfo[ID][pMarihuana] > 0)
	{
		format(string, 800,"%s\nMarihuana: {ff3300}%dg{FFFFFF}.",string,PlayerInfo[ID][pMarihuana]);
	}
	if(PlayerInfo[ID][pCrack] > 0)
	{
		format(string, 800,"%s\nCrack: {ff3300}%dg{FFFFFF}.",string,PlayerInfo[ID][pCrack]);
	}
	if(PlayerInfo[ID][pCaramelos] > 0)
	{
		format(string, 800,"%s\nCaramelos: {a31fff}%d{FFFFFF}.",string,PlayerInfo[ID][pCaramelos]);
	}
	if(PlayerInfo[ID][pSemillas] > 0)
	{
		format(string, 800,"%s\nSemillas de marihuana: {ff3300}%d{FFFFFF}.",string,PlayerInfo[ID][pSemillas]);
	}
	if(PlayerInfo[ID][Repuestos] > 0)
	{
		format(string, 800,"%s\nRepuestos: {00CC00}%d{FFFFFF}/100.",string,PlayerInfo[ID][Repuestos]);
	}
	if(PlayerInfo[ID][pMateriales] > 0)
	{
		format(string, 800,"%s\nPiezas de armas: {ff3300}%d{FFFFFF}.",string,PlayerInfo[ID][pMateriales]);
	}
	if(PlayerInfo[ID][piezas] > 0)
	{
		format(string, 800,"%s\nMateriales: {ff3300}%d{FFFFFF}.",string,PlayerInfo[ID][piezas]);
	}
	if(PlayerInfo[ID][pWP0] > 0 || PlayerInfo[ID][pWP1] > 0 || PlayerInfo[ID][pWP2] > 0||PlayerInfo[ID][pWP3] > 0||PlayerInfo[ID][pWP4] > 0||PlayerInfo[ID][pWP5] > 0||PlayerInfo[ID][pWP6] > 0||PlayerInfo[ID][pWP7] > 0||PlayerInfo[ID][pWP8] > 0||PlayerInfo[ID][pWP9] > 0||PlayerInfo[ID][pWP10] > 0||PlayerInfo[ID][pWP11] > 0||PlayerInfo[ID][pWP12] > 0)
	{
		format(string, 800,"%s\nArmas: %s%s%s%s%s%s%s%s%s%s%s%s%s ",string, NombreArma[PlayerInfo[ID][pWP0]],NombreArma[PlayerInfo[ID][pWP1]],NombreArma[PlayerInfo[ID][pWP2]],NombreArma[PlayerInfo[ID][pWP3]],NombreArma[PlayerInfo[ID][pWP4]],NombreArma[PlayerInfo[ID][pWP5]],NombreArma[PlayerInfo[ID][pWP6]],NombreArma[PlayerInfo[ID][pWP7]],NombreArma[PlayerInfo[ID][pWP8]],NombreArma[PlayerInfo[ID][pWP9]],NombreArma[PlayerInfo[ID][pWP10]],NombreArma[PlayerInfo[ID][pWP11]],NombreArma[PlayerInfo[ID][pWP12]]);
	}
	if(PlayerInfo[ID][jMartillo] > 0 || PlayerInfo[ID][jDestornillador] > 0 || PlayerInfo[ID][jBarreta] > 0||PlayerInfo[ID][jBalde] > 0)
	{
		format(string, 800,"%s\n\n{FFFFFF}Herramientas: %s%s%s%s ",string, NombreHerramienta[PlayerInfo[ID][jMartillo]],NombreHerramienta[PlayerInfo[ID][jDestornillador]],NombreHerramienta[PlayerInfo[ID][jBarreta]],NombreHerramienta[PlayerInfo[ID][jBalde]]);
	}
	ShowPlayerDialog(targetid, INVENTARIO, DIALOG_STYLE_MSGBOX,"{DBED16}Inventario",string,"Cerrar","");
	return 1;
}
stock Inventario3(ID, playerid)
{
	new string[5];
	format(string, 800," ", PlayerInfo[ID][@Nivel]);
	ShowPlayerDialog(playerid, INVENTARIO, DIALOG_STYLE_MSGBOX,"{DBED16}Inventario",string,"Cerrar","");
	return 1;
}
stock IsSeatTaken(vehicleid, seatid)
{
    for(new i=0; i<MAX_PLAYERS; i++)
    {
        if(GetPlayerVehicleID(i) == vehicleid && GetPlayerVehicleSeat(i) == seatid) return 1;
    }
    return 0;
}

stock IsNumeric(const str[])
{
	for(new i, len = strlen(str); i < len; i++)
	{
		if(!('0' <= str[i] <= '9')) return false;
	}
	return true;
}
stock NombreBanco(playerid)
{
	new string[24];
	if(GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 3)    {
        format(string,sizeof(string),"Banco central de Los Santos");
	}
	else if(GetPlayerVirtualWorld(playerid) == 7 && GetPlayerInterior(playerid) == 3)    {
        format(string,sizeof(string),"Banco plaza");
	}
	else if(GetPlayerVirtualWorld(playerid) == 5 && GetPlayerInterior(playerid) == 0)    {
        format(string,sizeof(string),"Banco central de San Fierro");
	}
	else if(GetPlayerVirtualWorld(playerid) == 6 && GetPlayerInterior(playerid) == 3)    {
        format(string,sizeof(string),"Banco central de Las Venturas");
	}
	else format(string,sizeof(string),"Banco central de Las Vegas");
	return string;
}
stock HospitalCercano(playerid)
{
	new Float:HospitalLS,Float:HospitalLS2,Float:HospitalLV,Float:HospitalSF;
	HospitalLS = GetPlayerDistanceFromPoint(playerid, 1191.43,-1326.39,13.40);
	HospitalLS2 = GetPlayerDistanceFromPoint(playerid, 2030.36,-1419.79,16.99);
	HospitalLV = GetPlayerDistanceFromPoint(playerid, 1605.58,1830.17,10.82);
	HospitalSF = GetPlayerDistanceFromPoint(playerid, -2662.87,631.44,14.45);
	MedicoCP2[playerid] = 1;
	if(HospitalLS < HospitalLS2 && HospitalLS < HospitalLV && HospitalLS < HospitalSF)
	{
		MedicoCP[playerid] = SetPlayerCheckpoint(playerid,1191.43,-1326.39,13.40,5.0);
	}
	else if(HospitalLS2 < HospitalLS && HospitalLS2 < HospitalLV && HospitalLS2 < HospitalSF)
	{
		MedicoCP[playerid] = SetPlayerCheckpoint(playerid, 2030.36,-1419.79,16.99,5.0);
	}
	else if(HospitalLV < HospitalLS && HospitalLV < HospitalLS2 && HospitalLV < HospitalSF)
	{
		MedicoCP[playerid] = SetPlayerCheckpoint(playerid,1605.58,1830.17,10.82,5.0);
	}
	else if(HospitalSF < HospitalLS && HospitalSF < HospitalLS2 && HospitalSF < HospitalLV)
	{
		MedicoCP[playerid] = SetPlayerCheckpoint(playerid,-2662.87,631.44,14.45,5.0);
	}
}

stock HospitalMasCercano(playerid)
{
	new Float:HospitalLS,Float:HospitalLS2,Float:HospitalLV,Float:HospitalSF;

	HospitalLS = GetPlayerDistanceFromPoint(playerid, 1191.43,-1326.39,13.40);
	HospitalLS2 = GetPlayerDistanceFromPoint(playerid, 2030.36,-1419.79,16.99);
	HospitalLV = GetPlayerDistanceFromPoint(playerid, 1605.58,1830.17,10.82);
	HospitalSF = GetPlayerDistanceFromPoint(playerid, -2662.87,631.44,14.45);

	switch(PlayerInfo[playerid][pSocioHP])
	{
		case 0:
	    {
	        if(HospitalLS < HospitalLS2 && HospitalLS < HospitalLV && HospitalLS < HospitalSF) // HP Central
			{
				SetPlayerPos(playerid, 1172.79,-1321.24,15.40);
				SetPlayerCameraPos(playerid,1206.4226, -1291.1536, 32.5757);
				SetPlayerCameraLookAt(playerid,1205.6591, -1291.8055, 32.5408);
			}
			else if(HospitalLS2 < HospitalLS && HospitalLS2 < HospitalLV && HospitalLS2 < HospitalSF) // HP Groove
			{
				SetPlayerPos(playerid,2036.8506,-1403.4642,17.2841);
                SetPlayerCameraPos(playerid, 2024.3646, -1435.4784, 30.9798);
                SetPlayerCameraLookAt(playerid, 2024.6460, -1434.5137, 30.5048);
			}
			else if(HospitalSF < HospitalLS && HospitalSF < HospitalLS2 && HospitalSF < HospitalLV) // HP San Fierro
			{
				SetPlayerPos(playerid,-2638.0701,636.5035,14.4531);
                SetPlayerCameraPos(playerid, -2554.3657, 558.7826, 72.4722);
                SetPlayerCameraLookAt(playerid, -2555.0823, 559.4846, 72.1473);
			}
			else if(HospitalLV < HospitalLS && HospitalLV < HospitalLS2 && HospitalLV < HospitalSF) // HP Las Venturas
			{
				SetPlayerPos(playerid,1598.6957,1816.0245,10.8203);
				SetPlayerCameraPos(playerid, 1558.6453, 1728.8574, 12.6747);
				SetPlayerCameraLookAt(playerid, 1559.2050, 1729.6805, 12.8645);
			}
	    }
		case 1: // LS Central
		{
			SetPlayerPos(playerid, 1172.79,-1321.24,15.40);
			SetPlayerCameraPos(playerid,1216.6165,-1284.9585,23.7114);
			SetPlayerCameraLookAt(playerid,1178.9612,-1324.9348,14.1459);
		}
		case 2: // LS Groove
		{
			SetPlayerPos(playerid,2036.8506,-1403.4642,17.2841);
			SetPlayerCameraPos(playerid,1956.5846,-1463.3260,46.8506);
			SetPlayerCameraLookAt(playerid,2036.8506,-1403.4642,17.2841);
		}
		case 3: // SF
		{
			SetPlayerPos(playerid,-2638.0701,636.5035,14.4531);
			SetPlayerCameraPos(playerid,-2542.7778,552.2639,74.6866);
			SetPlayerCameraLookAt(playerid,-2638.0701,636.5035,14.4531);
		}
		case 4: // LV
		{
   			SetPlayerPos(playerid,1598.6957,1816.0245,10.8203);
			SetPlayerCameraPos(playerid, 1558.6453, 1728.8574, 12.6747);
			SetPlayerCameraLookAt(playerid, 1559.2050, 1729.6805, 12.8645);
		}
	}
}

stock ConceCercano(playerid,modelo,color1,color2,slot)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:Conce1, Float:Conce2, Float:Conce3, Float:Conce4, Float:Conce5, pName[32], query[1200];
		GetPlayerName(playerid, pName, 32);
		Conce1 = GetPlayerDistanceFromPoint(playerid, 1656.1246,-1883.6947,13.1237);
		Conce2 = GetPlayerDistanceFromPoint(playerid, 557.6544,-1260.8588,16.8133);
		Conce3 = GetPlayerDistanceFromPoint(playerid, 2127.5342,-1123.4701,24.9874);
		Conce4 = GetPlayerDistanceFromPoint(playerid, -1989.7445,288.3349,33.9223);
		Conce5 = GetPlayerDistanceFromPoint(playerid, 1464.9510,-1780.9888,13.9439);
		if(slot == 1)
		{
			PlayerInfo[playerid][vOinterior] = 0;
			PlayerInfo[playerid][vOvw] = 0;
  			VehicleFuel[autos[playerid]] = 50;
			PlayerInfo[playerid][vGas] = 50;
			SetPlayerProgressBarValue(playerid,Progressbar[playerid][Combustible],VehicleFuel[autos[playerid]]);
			UpdatePlayerProgressBar(playerid,Progressbar[playerid][Combustible]);

			if(Conce1 < Conce2 && Conce1 < Conce3 && Conce1 < Conce4 && Conce1 < Conce5)
			{
				autos[playerid] = CreateVehicle(modelo,1656.1246,-1883.6947,13.1237,359.9166,color1,color2,-1);
				SetVehicleNumberPlate(autos[playerid], PlayerInfo[playerid][vpatente]);
				format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='1656.1246',`EstacionadoY`='-1883.6947',`EstacionadoZ`='13.1237',`EstacionadoA`='359.9166',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND `Slot` = '1'",PlayerInfo[playerid][pID]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				PlayerInfo[playerid][pOX] = 1656.1246;
				PlayerInfo[playerid][pOY] = -1883.6947;
				PlayerInfo[playerid][pOZ] = 13.1237;
				PlayerInfo[playerid][pOA] = 359.9166;
			}
			else if(Conce2 < Conce1 && Conce2 < Conce3 && Conce2 < Conce4 && Conce2 < Conce5)
			{
				autos[playerid] = CreateVehicle(modelo,557.6544,-1260.8588,16.8133,17.7973,color1,color2,-1);
				SetVehicleNumberPlate(autos[playerid], PlayerInfo[playerid][vpatente]);
				format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='557.6544',`EstacionadoY`='-1260.8588',`EstacionadoZ`='16.8133',`EstacionadoA`='17.7973',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND `Slot` = '1'",PlayerInfo[playerid][pID]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				PlayerInfo[playerid][pOX] = 557.6544;
				PlayerInfo[playerid][pOY] = -1260.8588;
				PlayerInfo[playerid][pOZ] = 16.8133;
				PlayerInfo[playerid][pOA] = 17.7973;
			}
			else if(Conce3 < Conce1 && Conce3 < Conce2 && Conce3 < Conce4 && Conce3 < Conce5)
			{
				autos[playerid] = CreateVehicle(modelo,2127.5342,-1123.4701,24.9874,3.9086,color1,color2,-1);
				SetVehicleNumberPlate(autos[playerid], PlayerInfo[playerid][vpatente]);
				format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='2127.5342',`EstacionadoY`='-1123.4701',`EstacionadoZ`='24.9874',`EstacionadoA`='3.9086',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND `Slot` = '1'",PlayerInfo[playerid][pID]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				PlayerInfo[playerid][pOX] = 2127.5342;
				PlayerInfo[playerid][pOY] = -1123.4701;
				PlayerInfo[playerid][pOZ] = 24.9874;
				PlayerInfo[playerid][pOA] = 3.9086;
			}
			else if(Conce4 < Conce1 && Conce4 < Conce2 && Conce4 < Conce3 && Conce4 < Conce5)
			{
				autos[playerid] = CreateVehicle(modelo,-1989.7445,288.3349,33.9223,90.9973,color1,color2,-1);
				SetVehicleNumberPlate(autos[playerid], PlayerInfo[playerid][vpatente]);
				format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='-1989.7445',`EstacionadoY`='288.3349',`EstacionadoZ`='33.9223',`EstacionadoA`='90.9973',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND `Slot` = '1'",PlayerInfo[playerid][pID]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				PlayerInfo[playerid][pOX] = -1989.7445;
				PlayerInfo[playerid][pOY] = 288.3349;
				PlayerInfo[playerid][pOZ] = 33.9223;
				PlayerInfo[playerid][pOA] = 90.9973;
			}
			else if(Conce5 < Conce1 && Conce5 < Conce2 && Conce5 < Conce3 && Conce5 < Conce4)
			{
				autos[playerid] = CreateVehicle(modelo,1494.5084,-1744.7078,13.5469,358.7261,color1,color2,-1);
				SetVehicleNumberPlate(autos[playerid], PlayerInfo[playerid][vpatente]);
				format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='1494.5084',`EstacionadoY`='-1744.7078',`EstacionadoZ`='13.5469',`EstacionadoA`='358.7261',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND `Slot` = '1'",PlayerInfo[playerid][pID]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				PlayerInfo[playerid][pOX] = 1494.5084;
				PlayerInfo[playerid][pOY] = -1744.7078;
				PlayerInfo[playerid][pOZ] = 13.5469;
				PlayerInfo[playerid][pOA] = 358.7261;
			}
		}
		else if(slot == 2)
		{
			PlayerInfo[playerid][v2Ointerior] = 0;
			PlayerInfo[playerid][v2Ovw] = 0;
			VehicleFuel[autos2[playerid]] = 50;
			PlayerInfo[playerid][v2Gas] = 50;
			SetPlayerProgressBarValue(playerid,Progressbar[playerid][Combustible],VehicleFuel[autos2[playerid]]);
			UpdatePlayerProgressBar(playerid,Progressbar[playerid][Combustible]);
			if(Conce1 < Conce2 && Conce1 < Conce3 && Conce1 < Conce4 && Conce1 < Conce5)
			{
				autos2[playerid] = CreateVehicle(modelo,1656.1246,-1883.6947,13.1237,359.9166,color1,color2,-1);
				SetVehicleNumberPlate(autos2[playerid], PlayerInfo[playerid][v2patente]);
				format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='1656.1246',`EstacionadoY`='-1883.6947',`EstacionadoZ`='13.1237',`EstacionadoA`='359.9166',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND `Slot` = '2'",PlayerInfo[playerid][pID]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				PlayerInfo[playerid][pOX2] = 1656.1246;
				PlayerInfo[playerid][pOY2] = -1883.6947;
				PlayerInfo[playerid][pOZ2] = 13.1237;
				PlayerInfo[playerid][pOA2] = 359.9166;
			}
			else if(Conce2 < Conce1 && Conce2 < Conce3 && Conce2 < Conce4 && Conce2 < Conce5)
			{
				autos2[playerid] = CreateVehicle(modelo,557.6544,-1260.8588,16.8133,17.7973,color1,color2,-1);
				SetVehicleNumberPlate(autos2[playerid], PlayerInfo[playerid][v2patente]);
				format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='557.6544',`EstacionadoY`='-1260.8588',`EstacionadoZ`='16.8133',`EstacionadoA`='17.7973',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND `Slot` = '2'",PlayerInfo[playerid][pID]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				PlayerInfo[playerid][pOX2] = 557.6544;
				PlayerInfo[playerid][pOY2] = -1260.8588;
				PlayerInfo[playerid][pOZ2] = 16.8133;
				PlayerInfo[playerid][pOA2] = 17.7973;
			}
			else if(Conce3 < Conce1 && Conce3 < Conce2 && Conce3 < Conce4 && Conce3 < Conce5)
			{
				autos2[playerid] = CreateVehicle(modelo,2127.5342,-1123.4701,24.9874,3.9086,color1,color2,-1);
				SetVehicleNumberPlate(autos2[playerid], PlayerInfo[playerid][v2patente]);
				format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='2127.5342',`EstacionadoY`='-1123.4701',`EstacionadoZ`='24.9874',`EstacionadoA`='3.9086',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND `Slot` = '2'",PlayerInfo[playerid][pID]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				PlayerInfo[playerid][pOX2] = 2127.5342;
				PlayerInfo[playerid][pOY2] = -1123.4701;
				PlayerInfo[playerid][pOZ2] = 24.9874;
				PlayerInfo[playerid][pOA2] = 3.9086;
			}
			else if(Conce4 < Conce1 && Conce4 < Conce2 && Conce4 < Conce3 && Conce4 < Conce5)
			{
				autos2[playerid] = CreateVehicle(modelo,-1989.7445,288.3349,33.9223,90.9973,color1,color2,-1);
				SetVehicleNumberPlate(autos2[playerid], PlayerInfo[playerid][v2patente]);
				format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='-1989.7445',`EstacionadoY`='288.3349',`EstacionadoZ`='33.9223',`EstacionadoA`='90.9973',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND `Slot` = '2'",PlayerInfo[playerid][pID]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				PlayerInfo[playerid][pOX2] = -1989.7445;
				PlayerInfo[playerid][pOY2] = 288.3349;
				PlayerInfo[playerid][pOZ2] = 33.9223;
				PlayerInfo[playerid][pOA2] = 90.9973;
			}
			else if(Conce5 < Conce1 && Conce5 < Conce2 && Conce5 < Conce3 && Conce5 < Conce4)
			{
				autos2[playerid] = CreateVehicle(modelo,1494.5084,-1744.7078,13.5469,358.7261,color1,color2,-1);
				SetVehicleNumberPlate(autos2[playerid], PlayerInfo[playerid][v2patente]);
				format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='1494.5084',`EstacionadoY`='-1744.7078',`EstacionadoZ`='13.5469',`EstacionadoA`='358.7261',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND `Slot` = '2'",PlayerInfo[playerid][pID]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				PlayerInfo[playerid][pOX2] = 1494.5084;
				PlayerInfo[playerid][pOY2] = -1744.7078;
				PlayerInfo[playerid][pOZ2] = 13.5469;
				PlayerInfo[playerid][pOA2] = 358.7261;
			}
		}
		else if(slot == 3)
		{
			PlayerInfo[playerid][v3Ointerior] = 0;
			PlayerInfo[playerid][v3Ovw] = 0;
			VehicleFuel[autos3[playerid]] = 50;
			PlayerInfo[playerid][v3Gas] = 50;
			SetPlayerProgressBarValue(playerid,Progressbar[playerid][Combustible],VehicleFuel[autos3[playerid]]);
			UpdatePlayerProgressBar(playerid,Progressbar[playerid][Combustible]);
			if(Conce1 < Conce2 && Conce1 < Conce3 && Conce1 < Conce4 && Conce1 < Conce5)
			{
				autos3[playerid] = CreateVehicle(modelo,1656.1246,-1883.6947,13.1237,359.9166,color1,color2,-1);
				SetVehicleNumberPlate(autos3[playerid], PlayerInfo[playerid][v3patente]);
				format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='1656.1246',`EstacionadoY`='-1883.6947',`EstacionadoZ`='13.1237',`EstacionadoA`='359.9166',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND `Slot` = '3'",PlayerInfo[playerid][pID]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				PlayerInfo[playerid][pOX3] = 1656.1246;
				PlayerInfo[playerid][pOY3] = -1883.6947;
				PlayerInfo[playerid][pOZ3] = 13.1237;
				PlayerInfo[playerid][pOA3] = 359.9166;
			}
			else if(Conce2 < Conce1 && Conce2 < Conce3 && Conce2 < Conce4 && Conce2 < Conce5)
			{
				autos3[playerid] = CreateVehicle(modelo,557.6544,-1260.8588,16.8133,17.7973,color1,color2,-1);
				SetVehicleNumberPlate(autos3[playerid], PlayerInfo[playerid][v3patente]);
				format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='557.6544',`EstacionadoY`='-1260.8588',`EstacionadoZ`='16.8133',`EstacionadoA`='17.7973',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND `Slot` = '3'",PlayerInfo[playerid][pID]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				PlayerInfo[playerid][pOX3] = 557.6544;
				PlayerInfo[playerid][pOY3] = -1260.8588;
				PlayerInfo[playerid][pOZ3] = 16.8133;
				PlayerInfo[playerid][pOA3] = 17.7973;
			}
			else if(Conce3 < Conce1 && Conce3 < Conce2 && Conce3 < Conce4 && Conce3 < Conce5)
			{
				autos3[playerid] = CreateVehicle(modelo,2127.5342,-1123.4701,24.9874,3.9086,color1,color2,-1);
				SetVehicleNumberPlate(autos3[playerid], PlayerInfo[playerid][v3patente]);
				format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='2127.5342',`EstacionadoY`='-1123.4701',`EstacionadoZ`='24.9874',`EstacionadoA`='3.9086',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND `Slot` = '3'",PlayerInfo[playerid][pID]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				PlayerInfo[playerid][pOX3] = 2127.5342;
				PlayerInfo[playerid][pOY3] = -1123.4701;
				PlayerInfo[playerid][pOZ3] = 24.9874;
				PlayerInfo[playerid][pOA3] = 3.9086;
			}
			else if(Conce4 < Conce1 && Conce4 < Conce2 && Conce4 < Conce3 && Conce4 < Conce5)
			{
				autos3[playerid] = CreateVehicle(modelo,-1989.7445,288.3349,33.9223,90.9973,color1,color2,-1);
				SetVehicleNumberPlate(autos3[playerid], PlayerInfo[playerid][v3patente]);
				format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='-1989.7445',`EstacionadoY`='288.3349',`EstacionadoZ`='33.9223',`EstacionadoA`='90.9973',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND `Slot` = '3'",PlayerInfo[playerid][pID]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				PlayerInfo[playerid][pOX3] = -1989.7445;
				PlayerInfo[playerid][pOY3] = 288.3349;
				PlayerInfo[playerid][pOZ3] = 33.9223;
				PlayerInfo[playerid][pOA3] = 90.9973;
			}
			else if(Conce5 < Conce1 && Conce5 < Conce2 && Conce5 < Conce3 && Conce5 < Conce4)
			{
				autos3[playerid] = CreateVehicle(modelo,1494.5084,-1744.7078,13.5469,358.7261,color1,color2,-1);
				SetVehicleNumberPlate(autos3[playerid], PlayerInfo[playerid][v3patente]);
				format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='1494.5084',`EstacionadoY`='-1744.7078',`EstacionadoZ`='13.5469',`EstacionadoA`='358.7261',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND `Slot` = '3'",PlayerInfo[playerid][pID]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				PlayerInfo[playerid][pOX3] = 1494.5084;
				PlayerInfo[playerid][pOY3] = -1744.7078;
				PlayerInfo[playerid][pOZ3] = 13.5469;
				PlayerInfo[playerid][pOA3] = 358.7261;
			}
		}
		else if(slot == 4)
		{
			PlayerInfo[playerid][v4Ointerior] = 0;
			PlayerInfo[playerid][v4Ovw] = 0;
			VehicleFuel[autos4[playerid]] = 50;
			PlayerInfo[playerid][v4Gas] = 50;
			SetPlayerProgressBarValue(playerid,Progressbar[playerid][Combustible],VehicleFuel[autos4[playerid]]);
			UpdatePlayerProgressBar(playerid,Progressbar[playerid][Combustible]);
			if(Conce1 < Conce2 && Conce1 < Conce3 && Conce1 < Conce4 && Conce1 < Conce5)
			{
				autos4[playerid] = CreateVehicle(modelo,1656.1246,-1883.6947,13.1237,359.9166,color1,color2,-1);
				SetVehicleNumberPlate(autos4[playerid], PlayerInfo[playerid][v4patente]);
				format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='1656.1246',`EstacionadoY`='-1883.6947',`EstacionadoZ`='13.1237',`EstacionadoA`='359.9166',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND `Slot` = '4'",PlayerInfo[playerid][pID]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				PlayerInfo[playerid][pOX4] = 1656.1246;
				PlayerInfo[playerid][pOY4] = -1883.6947;
				PlayerInfo[playerid][pOZ4] = 13.1237;
				PlayerInfo[playerid][pOA4] = 359.9166;
			}
			else if(Conce2 < Conce1 && Conce2 < Conce3 && Conce2 < Conce4 && Conce2 < Conce5)
			{
				autos4[playerid] = CreateVehicle(modelo,557.6544,-1260.8588,16.8133,17.7973,color1,color2,-1);
				SetVehicleNumberPlate(autos4[playerid], PlayerInfo[playerid][v4patente]);
				format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='557.6544',`EstacionadoY`='-1260.8588',`EstacionadoZ`='16.8133',`EstacionadoA`='17.7973',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND `Slot` = '4'",PlayerInfo[playerid][pID]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				PlayerInfo[playerid][pOX4] = 557.6544;
				PlayerInfo[playerid][pOY4] = -1260.8588;
				PlayerInfo[playerid][pOZ4] = 16.8133;
				PlayerInfo[playerid][pOA4] = 17.7973;
			}
			else if(Conce3 < Conce1 && Conce3 < Conce2 && Conce3 < Conce4 && Conce3 < Conce5)
			{
				autos4[playerid] = CreateVehicle(modelo,2127.5342,-1123.4701,24.9874,3.9086,color1,color2,-1);
				SetVehicleNumberPlate(autos4[playerid], PlayerInfo[playerid][v4patente]);
				format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='2127.5342',`EstacionadoY`='-1123.4701',`EstacionadoZ`='24.9874',`EstacionadoA`='3.9086',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND `Slot` = '4'",PlayerInfo[playerid][pID]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				PlayerInfo[playerid][pOX4] = 2127.5342;
				PlayerInfo[playerid][pOY4] = -1123.4701;
				PlayerInfo[playerid][pOZ4] = 24.9874;
				PlayerInfo[playerid][pOA4] = 3.9086;
			}
			else if(Conce4 < Conce1 && Conce4 < Conce2 && Conce4 < Conce3 && Conce4 < Conce5)
			{
				autos4[playerid] = CreateVehicle(modelo,-1989.7445,288.3349,33.9223,90.9973,color1,color2,-1);
				SetVehicleNumberPlate(autos4[playerid], PlayerInfo[playerid][v4patente]);
				format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='-1989.7445',`EstacionadoY`='288.3349',`EstacionadoZ`='33.9223',`EstacionadoA`='90.9973',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND `Slot` = '4'",PlayerInfo[playerid][pID]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				PlayerInfo[playerid][pOX4] = -1989.7445;
				PlayerInfo[playerid][pOY4] = 288.3349;
				PlayerInfo[playerid][pOZ4] = 33.9223;
				PlayerInfo[playerid][pOA4] = 90.9973;
			}
			else if(Conce5 < Conce1 && Conce5 < Conce2 && Conce5 < Conce3 && Conce5 < Conce4)
			{
				autos4[playerid] = CreateVehicle(modelo,1494.5084,-1744.7078,13.5469,358.7261,color1,color2,-1);
				SetVehicleNumberPlate(autos4[playerid], PlayerInfo[playerid][v4patente]);
				format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='1494.5084',`EstacionadoY`='-1744.7078',`EstacionadoZ`='13.5469',`EstacionadoA`='358.7261',`O_Interior`='0',`O_VW`='0' WHERE `Propietario`='%d' AND `Slot` = '4'",PlayerInfo[playerid][pID]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				PlayerInfo[playerid][pOX4] = 1494.5084;
				PlayerInfo[playerid][pOY4] = -1744.7078;
				PlayerInfo[playerid][pOZ4] = 13.5469;
				PlayerInfo[playerid][pOA4] = 358.7261;
			}
		}
	}
}

stock Respawnear(autoid)
{
	MotorAuto[autoid] = 0;
	SetVehicleToRespawn(autoid);
}
stock PagoCamionero(playerid, nivel, carga)
{
	switch(nivel)
	{
		case 1:
		{
			switch(carga)
			{
				case 1:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 1 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 1 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						PlayerInfo[playerid][pExpCamionero] = 0;
						PlayerInfo[playerid][pNivelCamionero]++;
						SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Aumentaste un nivel en el trabajo de camionero.");
					}
					DarDinero(playerid, 1250);
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega! Tus ganancias son: {00CC00}$1250{FFFFFF}.");
				}
				case 2:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 1 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 1 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{

						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Aumentaste un nivel en el trabajo de camionero.");
					}
					DarDinero(playerid, 1250);
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$1250{FFFFFF}.");
				}
				case 3:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 1 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 1 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Aumentaste un nivel en el trabajo de camionero.");
					}
					DarDinero(playerid, 1250);
					PlayerInfo[playerid][pMedicamentos] += 4;
					PlayerInfo[playerid][pCrack] += 2;
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$1250{FFFFFF} + {00CC00}4 medicamentos {FFFFFF}y {FF3300}2g{FFFFFF} de Crack.");
				}
				case 4:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 1 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 1 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Aumentaste un nivel en el trabajo de camionero.");
					}
					DarDinero(playerid, 1250);
					PlayerInfo[playerid][pMateriales] += 2;
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$1250{FFFFFF} y {FF3300}2 piezas{FFFFFF} para crear armas.");
				}
			}
		}
		case 2:
		{
			switch(carga)
			{
				case 1:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 2 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 2 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						PlayerInfo[playerid][pExpCamionero] = 0;
						PlayerInfo[playerid][pNivelCamionero]++;
						SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Aumentaste un nivel en el trabajo de camionero.");
					}
					DarDinero(playerid, 1500);
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$1500{FFFFFF}.");
				}
				case 2:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 2 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 2 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Aumentaste un nivel en el trabajo de camionero.");
					}
					DarDinero(playerid, 1500);
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$1500{FFFFFF}.");
				}
				case 3:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 2 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 2 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Aumentaste un nivel en el trabajo de camionero.");
					}
					DarDinero(playerid, 1500);
					PlayerInfo[playerid][pCrack] += 3;
					PlayerInfo[playerid][pMedicamentos] += 6;
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$1500{FFFFFF} + {00CC00}6 medicamentos {FFFFFF}y {FF3300}3g{FFFFFF} de Crack.");
				}
				case 4:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 2 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 2 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Aumentaste un nivel en el trabajo de camionero.");
					}
					DarDinero(playerid, 1500);
					PlayerInfo[playerid][pMateriales] += 5;
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$1500{FFFFFF} y {FF3300}5 piezas{FFFFFF} para crear armas.");
				}
			}
		}
		case 3:
		{
			switch(carga)
			{
				case 1:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 3 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 3 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						PlayerInfo[playerid][pExpCamionero] = 0;
						PlayerInfo[playerid][pNivelCamionero]++;
						SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Aumentaste un nivel en el trabajo de camionero.");
					}
					DarDinero(playerid, 1750);
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$1750{FFFFFF}.");
				}
				case 2:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 3 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 3 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Aumentaste un nivel en el trabajo de camionero.");
					}
					DarDinero(playerid, 1750);
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$1750{FFFFFF}.");
				}
				case 3:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 3 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 3 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Aumentaste un nivel en el trabajo de camionero.");
					}
					DarDinero(playerid, 1750);
					PlayerInfo[playerid][pCrack] += 4;
					PlayerInfo[playerid][pMedicamentos] += 8;
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$1750{FFFFFF} + {00CC00}8 medicamentos {FFFFFF}y {FF3300}4g{FFFFFF} de Crack.");
				}
				case 4:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 3 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 3 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Aumentaste un nivel en el trabajo de camionero.");
					}
					DarDinero(playerid, 1750);
					PlayerInfo[playerid][pMateriales] += 7;
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$1750{FFFFFF} y {FF3300}7 piezas{FFFFFF} para crear armas.");
				}
			}
		}
		case 4:
		{
			switch(carga)
			{
				case 1:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 4 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 4 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						PlayerInfo[playerid][pExpCamionero] = 0;
						PlayerInfo[playerid][pNivelCamionero]++;
						SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Aumentaste un nivel en el trabajo de camionero.");
					}
					DarDinero(playerid, 2000);
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$2000{FFFFFF}.");
				}
				case 2:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 4 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 4 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Aumentaste un nivel en el trabajo de camionero.");
					}
					DarDinero(playerid, 2000);
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$2000{FFFFFF}.");
				}
				case 3:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 4 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 4 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Aumentaste un nivel en el trabajo de camionero.");
					}
					DarDinero(playerid, 2000);
					PlayerInfo[playerid][pCrack] += 5;
					PlayerInfo[playerid][pMedicamentos] += 10;
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$2000{FFFFFF} + {00CC00}10 medicamentos {FFFFFF}y {FF3300}5g{FFFFFF} de Crack.");
				}
				case 4:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 4 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 4 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Aumentaste un nivel en el trabajo de camionero.");
					}
					DarDinero(playerid, 2000);
					PlayerInfo[playerid][pMateriales] += 7;
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$2000{FFFFFF} y {FF3300}7 piezas{FFFFFF} para crear armas.");
				}
			}
		}
		case 5:
		{
			switch(carga)
			{
				case 1:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 5 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 5 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						PlayerInfo[playerid][pExpCamionero] = 0;
						PlayerInfo[playerid][pNivelCamionero]++;
						SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Aumentaste un nivel en el trabajo de camionero.");
					}
					DarDinero(playerid, 2250);
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$2500{FFFFFF}.");
				}
				case 2:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 5 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 5 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Aumentaste un nivel en el trabajo de camionero.");
					}
					DarDinero(playerid, 2250);
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$2250{FFFFFF}.");
				}
				case 3:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 5 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 5 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Aumentaste un nivel en el trabajo de camionero.");
					}
					DarDinero(playerid, 2250);
					PlayerInfo[playerid][pCrack] += 6;
					PlayerInfo[playerid][pMedicamentos] += 12;
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$2250{FFFFFF} + {00CC00}12 medicamentos {FFFFFF}y {FF3300}6g{FFFFFF} de Crack.");
				}
				case 4:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 5 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 5 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Aumentaste un nivel en el trabajo de camionero.");
					}
					DarDinero(playerid, 2250);
					PlayerInfo[playerid][pMateriales] += 7;
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$2250{FFFFFF} y {FF3300}7 piezas{FFFFFF} para crear armas.");
				}
			}
		}
		case 6:
		{
			switch(carga)
			{
				case 1:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 6 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 6 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						SendClientMessage(playerid, -1, "Has llegado al maximo nivel de este trabajo");
					}
					DarDinero(playerid, 2500);
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$2500{FFFFFF}.");
				}
				case 2:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 6 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 6 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						SendClientMessage(playerid, -1, "Has llegado al maximo nivel de este trabajo");
					}
					DarDinero(playerid, 2500);
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$2500{FFFFFF}.");
				}
				case 3:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 6 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 6 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						SendClientMessage(playerid, -1, "Has llegado al maximo nivel de este trabajo");
					}
					DarDinero(playerid, 2500);
					PlayerInfo[playerid][pCrack] += 12;
					PlayerInfo[playerid][pMedicamentos] += 6;
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$2500{FFFFFF} + {00CC00}12 medicamentos {FFFFFF}y {FF3300}6g{FFFFFF} de Crack.");
				}
				case 4:
				{
					if(PlayerInfo[playerid][pNivelCamionero] == 6 && PlayerInfo[playerid][pExpCamionero] < 49)
					{
						if(PlayerInfo[playerid][pVip] > 0)
						{
							new pago = random(3);
							switch (pago)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +2 puntos.");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de camionero aumentada +1 punto.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 6 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{
						SendClientMessage(playerid, -1, "Has llegado al maximo nivel de este trabajo");
					}
					DarDinero(playerid, 2500);
					PlayerInfo[playerid][pMateriales] += 7;
					SendClientMessage(playerid, -1, "{00CC00}¡Excelente entrega!{FFFFFF} Tus ganancias son: {00CC00}$2500{FFFFFF} y {FF3300}7 piezas{FFFFFF} para crear armas.");
				}
			}
		}
	}
	return 1;
}

stock QuitarArmas(playerid)
{
	if(Quitando[playerid] == 0)
	{
		Quitando[playerid] = 1;
		SetTimerEx("QuitandoA",600,false,"d",playerid);
	}
	PlayerInfo[playerid][pWP0] = 0;
	PlayerInfo[playerid][pWP1] = 0;
	PlayerInfo[playerid][pWP2] = 0;
	PlayerInfo[playerid][pWP3] = 0;
	PlayerInfo[playerid][pWP4] = 0;
	PlayerInfo[playerid][pWP5] = 0;
	PlayerInfo[playerid][pWP6] = 0;
	PlayerInfo[playerid][pWP7] = 0;
	PlayerInfo[playerid][pWP8] = 0;
	//PlayerInfo[playerid][pWP9] = 0;
	PlayerInfo[playerid][pWP10] = 0;
	PlayerInfo[playerid][pWP11] = 0;
	PlayerInfo[playerid][pWP12] = 0;
	ResetPlayerWeapons(playerid);
}

stock QuitarArmas2(playerid)
{
	if(Quitando[playerid] == 0)
	{
		Quitando[playerid] = 1;
		SetTimerEx("QuitandoA",600,false,"d",playerid);
	}
	PlayerInfo[playerid][pWP0] = 0;
	PlayerInfo[playerid][pWP1] = 0;
	PlayerInfo[playerid][pWP2] = 0;
	PlayerInfo[playerid][pWP3] = 0;
	PlayerInfo[playerid][pWP4] = 0;
	PlayerInfo[playerid][pWP5] = 0;
	PlayerInfo[playerid][pWP6] = 0;
	PlayerInfo[playerid][pWP7] = 0;
	PlayerInfo[playerid][pWP8] = 0;
	PlayerInfo[playerid][pWP9] = 0;
	PlayerInfo[playerid][pWP10] = 0;
	PlayerInfo[playerid][pWP11] = 0;
	PlayerInfo[playerid][pWP12] = 0;
	ResetPlayerWeapons(playerid);
}

stock QuitarArma(playerid, weaponid)
{
	if(Quitando[playerid] == 0)
	{
		Quitando[playerid] = 1;
		SetTimerEx("QuitandoA",600,false,"d",playerid);
	}
	if(weaponid == 1)
	{
		PlayerInfo[playerid][pWP0] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if(weaponid > 1 && weaponid <= 9)
	{
		PlayerInfo[playerid][pWP1] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if( weaponid >= 10 && weaponid <= 15)
	{
		PlayerInfo[playerid][pWP10] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if( weaponid == 16)
	{
		PlayerInfo[playerid][pWP8] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if( weaponid >= 22 && weaponid <= 24 )
	{
		PlayerInfo[playerid][pWP2] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if( weaponid >= 25 && weaponid <= 27 )
	{
		PlayerInfo[playerid][pWP3] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if( weaponid == 28 || weaponid == 29 || weaponid == 32 )
	{
		PlayerInfo[playerid][pWP4] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if( weaponid == 30 || weaponid == 31 )
	{
		PlayerInfo[playerid][pWP5] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if( weaponid == 33 || weaponid == 34 )
	{
		PlayerInfo[playerid][pWP6] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if( weaponid >= 35 && weaponid <= 38 )
	{
		PlayerInfo[playerid][pWP7] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if( weaponid >= 41 && weaponid <= 43 )
	{
		PlayerInfo[playerid][pWP9] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if( weaponid >= 44 && weaponid <= 46 )
	{
		PlayerInfo[playerid][pWP11] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	return 1;
}

stock CalcularNivel(playerid)
{
	switch(PlayerInfo[playerid][@Nivel])
	{
		case 1: { PlayerInfo[playerid][NivelExp] = 7; PlayerInfo[playerid][PrecioNivel] = 980; }
		case 2: { PlayerInfo[playerid][NivelExp] = 12; PlayerInfo[playerid][PrecioNivel] = 3240; }
		case 3: { PlayerInfo[playerid][NivelExp] = 19; PlayerInfo[playerid][PrecioNivel] = 7600; }
		case 4: { PlayerInfo[playerid][NivelExp] = 31; PlayerInfo[playerid][PrecioNivel] = 16430; }
		case 5: { PlayerInfo[playerid][NivelExp] = 52; PlayerInfo[playerid][PrecioNivel] = 34320; }
		case 6: { PlayerInfo[playerid][NivelExp] = 86; PlayerInfo[playerid][PrecioNivel] = 67940; }
		case 7: { PlayerInfo[playerid][NivelExp] = 143; PlayerInfo[playerid][PrecioNivel] = 131560; }
		case 8: { PlayerInfo[playerid][NivelExp] = 239; PlayerInfo[playerid][PrecioNivel] = 250950; }
		case 9: { PlayerInfo[playerid][NivelExp] = 397; PlayerInfo[playerid][PrecioNivel] = 468460; }
		case 10: { PlayerInfo[playerid][NivelExp] = 662; PlayerInfo[playerid][PrecioNivel] = 867220;}
		case 11: { PlayerInfo[playerid][NivelExp] = 1103; PlayerInfo[playerid][PrecioNivel] = 1588320; }
		case 12: { PlayerInfo[playerid][NivelExp] = 1838; PlayerInfo[playerid][PrecioNivel] = 2885660; }
		case 13: { PlayerInfo[playerid][NivelExp] = 3063; PlayerInfo[playerid][PrecioNivel] = 5207100; }
		case 14: { PlayerInfo[playerid][NivelExp] = 5105; PlayerInfo[playerid][PrecioNivel] = 9342150; }
		case 15: { PlayerInfo[playerid][NivelExp] = 8508; PlayerInfo[playerid][PrecioNivel] = 16675680; }
	}
}
stock QuitarSombreroH(playerid)
{
    if(IsPlayerNPC(playerid)) return 1;
	if(PuestoUnityTiene[playerid][0] == 1)	{ //puesto unity arriba
	    PuestoUnity[0] = 0;
     	PuestoUnity1 = CreateDynamicObject(19528, 1700.06006, -1871.18872, 13.39730,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoUnityTiene[playerid][1] == 1)	{
	    PuestoUnity[1] = 0;
     	PuestoUnity2 = CreateDynamicObject(19528, 1700.06006, -1871.18872, 14.15730,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoUnityTiene[playerid][2] == 1)	{
	    PuestoUnity[2] = 0;
	    PuestoUnity3 = CreateDynamicObject(19528, 1700.58008, -1871.16870, 13.81730,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoUnityTiene[playerid][3] == 1)	{
	    PuestoUnity[3] = 0;
	    PuestoUnity4 = CreateDynamicObject(19528, 1700.58008, -1871.16870, 13.07730,   4.00000, -47.00000, 0.00000);
 	}
 	if(PuestoUnityxTiene[playerid][0] == 1)	{ //puesto unity abajo
	    PuestoUnityx[0] = 0;
	    PuestoUnityx1 = CreateDynamicObject(19528, 1689.25574, -1974.74915, 9.41220,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoUnityxTiene[playerid][1] == 1)	{
	    PuestoUnityx[1] = 0;
	    PuestoUnityx2 = CreateDynamicObject(19528, 1689.25574, -1974.74915, 8.65220,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoUnityxTiene[playerid][2] == 1)	{
	    PuestoUnityx[2] = 0;
	    PuestoUnityx3 = CreateDynamicObject(19528, 1689.77576, -1974.72913, 9.07220,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoUnityxTiene[playerid][3] == 1)	{
	    PuestoUnityx[3] = 0;
	    PuestoUnityx4 = CreateDynamicObject(19528, 1689.77576, -1974.72913, 8.33220,   4.00000, -47.00000, 0.00000);
 	}
 	if(PuestoEstMuniTiene[playerid][0] == 1)	{ //PUESTO ESTACIONAMIENTO MUNICIPAL
	    PuestoEstMuni[0] = 0;
	    PuestoEstMuni1 = CreateDynamicObject(19528, 151.84090, -288.70340, 2.16560,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoEstMuniTiene[playerid][1] == 1)	{
	    PuestoEstMuni[1] = 0;
	    PuestoEstMuni2 = CreateDynamicObject(19528, 151.84090, -288.70340, 1.40560,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoEstMuniTiene[playerid][2] == 1)	{
	    PuestoEstMuni[2] = 0;
		PuestoEstMuni3 = CreateDynamicObject(19528, 152.36090, -288.68341, 1.83470,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoEstMuniTiene[playerid][3] == 1)	{
	    PuestoEstMuni[3] = 0;
	    PuestoEstMuni4 = CreateDynamicObject(19528, 152.36090, -288.68341, 1.08560,   4.00000, -47.00000, 0.00000);
 	}
 	if(PuestoAGTiene[playerid][0] == 1)	{ //PUESTO DELANTE DE LA PIZZERIA DE LS - GANTON
	    PuestoAG[0] = 0;
		PuestoAG1 = CreateDynamicObject(19528, 2023.01196, -1781.04272, 13.05440,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoAGTiene[playerid][1] == 1)	{
	    PuestoAG[1] = 0;
	    PuestoAG2 = CreateDynamicObject(19528, 2023.01196, -1781.04272, 13.79440,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoAGTiene[playerid][2] == 1)	{
	    PuestoAG[2] = 0;
		PuestoAG3 = CreateDynamicObject(19528, 2022.49194, -1781.06274, 13.37440,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoAGTiene[playerid][3] == 1)	{
	    PuestoAG[3] = 0;
		PuestoAG4 = CreateDynamicObject(19528, 2022.49194, -1781.06274, 14.13440,   4.00000, -127.00000, 0.00000);
 	}
 	if(PuestoPGTiene[playerid][0] == 1)	{ //PUESTO ATRAS DE LA PIZZERIA GANTON
	    PuestoPG[0] = 0;
		PuestoPG1 = CreateDynamicObject(19528, 2104.33765, -1940.98132, 13.05440,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoPGTiene[playerid][1] == 1)	{
	    PuestoPG[1] = 0;
	    PuestoPG2 = CreateDynamicObject(19528, 2104.33765, -1940.98132, 13.79440,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoPGTiene[playerid][2] == 1)	{
	    PuestoPG[2] = 0;
		PuestoPG3 = CreateDynamicObject(19528, 2103.81787, -1941.00134, 13.37440,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoPGTiene[playerid][3] == 1)	{
	    PuestoPG[3] = 0;
		PuestoPG4 = CreateDynamicObject(19528, 2103.81787, -1941.00134, 14.13440,   4.00000, -127.00000, 0.00000);
 	}
 	if(PuestoColinasTiene[playerid][0] == 1)	{ //PUESTO POR COLINAS
	    PuestoColinas[0] = 0;
		PuestoColinas1 = CreateDynamicObject(19528, 2182.14380, -1344.85938, 24.57190,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoColinasTiene[playerid][1] == 1)	{
	    PuestoColinas[1] = 0;
	    PuestoColinas2 = CreateDynamicObject(19528, 2182.14380, -1344.85938, 23.81190,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoColinasTiene[playerid][2] == 1)	{
	    PuestoColinas[2] = 0;
		PuestoColinas3 = CreateDynamicObject(19528, 2182.66357, -1344.83936, 24.23190,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoColinasTiene[playerid][3] == 1)	{
	    PuestoColinas[3] = 0;
		PuestoColinas4 = CreateDynamicObject(19528, 2182.66357, -1344.83936, 23.49190,   4.00000, -47.00000, 0.00000);
 	}
 	if(PuestoCamioneroTiene[playerid][0] == 1)	{ //PUESTO CAMIONEROS
	    PuestoCamionero[0] = 0;
		PuestoCamionero1 = CreateDynamicObject(19528, -1717.87402, -41.27636, 3.06317,   0.00000, -47.00000, 0.00000);
	}
	if(PuestoCamioneroTiene[playerid][1] == 1)	{
	    PuestoCamionero[1] = 0;
	    PuestoCamionero2 = CreateDynamicObject(19528, -1717.87402, -41.27636, 3.76617,   0.00000, -47.00000, 0.00000);
	}
	if(PuestoCamioneroTiene[playerid][2] == 1)	{
	    PuestoCamionero[2] = 0;
		PuestoCamionero3 = CreateDynamicObject(19528, -1718.40002, -41.27060, 4.12820,   0.00000, -127.00000, 0.00000);
	}
	if(PuestoCamioneroTiene[playerid][3] == 1)	{
	    PuestoCamionero[3] = 0;
		PuestoCamionero4 = CreateDynamicObject(19528, -1718.40002, -41.27060, 3.38120,   0.00000, -127.00000, 0.00000);
 	}
 	if(GorrosSFBridgeTiene[playerid][0] == 1)	{ //PUESTO PUENTE A BAYSIDE DEBAJO
	    GorrosSFBridge[0] = 0;
		GorrosSFBridge1 = CreateDynamicObject(19528, -2675.27832, 1372.14355, 6.59570,   0.00000, -47.00000, 0.00000);
	}
	if(GorrosSFBridgeTiene[playerid][1] == 1)	{
	    GorrosSFBridge[1] = 0;
		GorrosSFBridge2 = CreateDynamicObject(19528, -2675.27832, 1372.14355, 7.30174,   0.00000, -47.00000, 0.00000);
	}
	if(GorrosSFBridgeTiene[playerid][2] == 1)	{
	    GorrosSFBridge[2] = 0;
		GorrosSFBridge3 = CreateDynamicObject(19528, -2675.79858, 1372.14355, 7.68170,   0.00000, -127.00000, 0.00000);
	}
	if(GorrosSFBridgeTiene[playerid][3] == 1)	{
	    GorrosSFBridge[3] = 0;
		GorrosSFBridge4 = CreateDynamicObject(19528, -2675.79858, 1372.14355, 6.93570,   0.00000, -127.00000, 0.00000);
 	}
 	if(PuestoMountTiene[playerid][0] == 1)	{ //PUESTO MONTAÑA LS
	    PuestoMount[0] = 0;
		PuestoMount1 = CreateDynamicObject(19528, 2352.00879, -645.05890, 127.59730,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoMountTiene[playerid][1] == 1)	{
	    PuestoMount[1] = 0;
		PuestoMount2 = CreateDynamicObject(19528, 2352.00879, -645.05890, 128.33730,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoMountTiene[playerid][2] == 1)	{
	    PuestoMount[2] = 0;
		PuestoMount3 = CreateDynamicObject(19528, 2351.48901, -645.07886, 127.91730,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoMountTiene[playerid][3] == 1)	{
	    PuestoMount[3] = 0;
		PuestoMount4 = CreateDynamicObject(19528, 2351.48901, -645.07886, 128.67729,   4.00000, -127.00000, 0.00000);
 	}
 	if(GorrosBridgeTiene[playerid][0] == 1)	{ //PUESTO PUENTE A BAYSIDE LEJOS
	    GorrosBridge[0] = 0;
		GorrosBridge1 = CreateDynamicObject(19528, -2548.52100, 1213.80835, 36.96060,   0.00000, -45.00000, 0.00000);
	}
	if(GorrosBridgeTiene[playerid][1] == 1)	{
	    GorrosBridge[1] = 0;
		GorrosBridge2 = CreateDynamicObject(19528, -2548.52100, 1213.80835, 37.63890,   0.00000, -45.00000, 359.79901);
	}
	if(GorrosBridgeTiene[playerid][2] == 1)	{
	    GorrosBridge[2] = 0;
		GorrosBridge3 = CreateDynamicObject(19528, -2548.98096, 1213.80835, 37.27596,   0.00000, -135.00000, 0.00000);
	}
	if(GorrosBridgeTiene[playerid][3] == 1)	{
	    GorrosBridge[3] = 0;
		GorrosBridge4 = CreateDynamicObject(19528, -2548.98096, 1213.80835, 37.98097,   0.00000, -135.00000, 0.00000);
 	}
 	if(PuestoAATiene[playerid][0] == 1)	{ //PUESTO AEREOPUERTO ABANDONADO
	    PuestoAA[0] = 0;
		PuestoAA1 = CreateDynamicObject(19528, 418.15610, 2543.38354, 16.66830,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoAATiene[playerid][1] == 1)	{
	    PuestoAA[1] = 0;
		PuestoAA2 = CreateDynamicObject(19528, 418.15610, 2543.38354, 15.92830,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoAATiene[playerid][2] == 1)	{
	    PuestoAA[2] = 0;
		PuestoAA3 = CreateDynamicObject(19528, 417.63608, 2543.36353, 16.24830,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoAATiene[playerid][3] == 1)	{
	    PuestoAA[3] = 0;
		PuestoAA4 = CreateDynamicObject(19528, 417.63608, 2543.36353, 17.00830,   4.00000, -127.00000, 0.00000);
 	}
 	if(PuestoTransTiene[playerid][0] == 1)	{ //PUESTO ENTREGA LV TRANSPORTISTA
	    PuestoTrans[0] = 0;
		PuestoTrans1 = CreateDynamicObject(19528, 1031.46375, 2096.26099, 10.32780,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoTransTiene[playerid][1] == 1)	{
	    PuestoTrans[1] = 0;
		PuestoTrans2 = CreateDynamicObject(19528, 1031.46375, 2096.26099, 11.06780,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoTransTiene[playerid][2] == 1)	{
	    PuestoTrans[2] = 0;
		PuestoTrans3 = CreateDynamicObject(19528, 1030.94373, 2096.24097, 10.64780,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoTransTiene[playerid][3] == 1)	{
	    PuestoTrans[3] = 0;
		PuestoTrans4 = CreateDynamicObject(19528, 1030.94373, 2096.24097, 11.40780,   4.00000, -127.00000, 0.00000);
 	}
 	if(PuestoCBTiene[playerid][0] == 1)	{ //PUESTO CLUCKIN BELL SF
	    PuestoCB[0] = 0;
		PuestoCB1 = CreateDynamicObject(19528, -2674.39771, 228.87399, 4.16910,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoTransTiene[playerid][1] == 1)	{
	    PuestoCB[1] = 0;
		PuestoCB2 = CreateDynamicObject(19528, -2674.39771, 228.87399, 4.92910,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoCBTiene[playerid][2] == 1)	{
	    PuestoCB[2] = 0;
		PuestoCB3 = CreateDynamicObject(19528, -2673.87793, 228.89400, 3.84910,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoCBTiene[playerid][3] == 1)	{
	    PuestoCB[3] = 0;
		PuestoCB4 = CreateDynamicObject(19528, -2673.87793, 228.89400, 4.58910,   4.00000, -47.00000, 0.00000);
 	}
 	if(PuestoAESFTiene[playerid][0] == 1)	{ //PUESTO AEREOPUERTO SAN FIERRO PARKING
	    PuestoAESF[0] = 0;
		PuestoCB1 = CreateDynamicObject(19528, -2674.39771, 228.87399, 4.16910,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoAESFTiene[playerid][1] == 1)	{
	    PuestoAESF[1] = 0;
		PuestoCB2 = CreateDynamicObject(19528, -2674.39771, 228.87399, 4.92910,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoAESFTiene[playerid][2] == 1)	{
	    PuestoAESF[2] = 0;
		PuestoCB3 = CreateDynamicObject(19528, -2673.87793, 228.89400, 3.84910,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoAESFTiene[playerid][3] == 1)	{
	    PuestoAESF[3] = 0;
		PuestoCB4 = CreateDynamicObject(19528, -2673.87793, 228.89400, 4.58910,   4.00000, -47.00000, 0.00000);
 	}
 	if(PuestoBaysideTiene[playerid][0] == 1)	{ //PUESTO PuestoBayside
	    PuestoBayside[0] = 0;
		PuestoBayside1 = CreateDynamicObject(19528, -2491.98071, 2356.53613, 10.86170,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoBaysideTiene[playerid][1] == 1)	{
	    PuestoBayside[1] = 0;
		PuestoBayside2 = CreateDynamicObject(19528, -2491.98071, 2356.53613, 10.10170,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoBaysideTiene[playerid][2] == 1)	{
	    PuestoBayside[2] = 0;
		PuestoBayside3 = CreateDynamicObject(19528, -2491.46094, 2356.55615, 9.78170,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoBaysideTiene[playerid][3] == 1)	{
	    PuestoBayside[3] = 0;
		PuestoBayside4 = CreateDynamicObject(19528, -2491.46094, 2356.55615, 10.52170,   4.00000, -47.00000, 0.00000);
 	}
 	if(PuestoWeelsTiene[playerid][0] == 1)	{ //PUESTO TUNING SF WEELS
	    PuestoWeels[0] = 0;
		PuestoWeels1 = CreateDynamicObject(19528, -2751.26343, 196.60699, 6.61540,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoWeelsTiene[playerid][1] == 1)	{
	    PuestoWeels[1] = 0;
		PuestoWeels2 = CreateDynamicObject(19528, -2751.26343, 196.60699, 7.35540,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoBaysideTiene[playerid][2] == 1)	{
	    PuestoWeels[2] = 0;
		PuestoWeels3 = CreateDynamicObject(19528, -2751.78320, 196.58699, 6.93540,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoBaysideTiene[playerid][3] == 1)	{
	    PuestoWeels[3] = 0;
		PuestoWeels4 = CreateDynamicObject(19528, -2751.78320, 196.58699, 7.69540,   4.00000, -127.00000, 0.00000);
 	}
 	if(PuestoCNNTiene[playerid][0] == 1)	{ //PUESTO CNN SF
	    PuestoCNN[0] = 0;
		PuestoCNN1 = CreateDynamicObject(19528, -2491.93896, -718.41589, 139.90779,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoCNNTiene[playerid][1] == 1)	{
	    PuestoCNN[1] = 0;
		PuestoCNN2 = CreateDynamicObject(19528, -2491.41919, -718.39594, 139.53987,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoCNNTiene[playerid][2] == 1)	{
	    PuestoCNN[2] = 0;
		PuestoCNN3 = CreateDynamicObject(19528, -2491.93896, -718.41589, 139.14780,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoCNNTiene[playerid][3] == 1)	{
	    PuestoCNN[3] = 0;
		PuestoCNN4 = CreateDynamicObject(19528, -2491.41919, -718.39594, 138.82780,   4.00000, -47.00000, 0.00000);
 	}
 	if(PuestoQuebradoTiene[playerid][0] == 1)	{ //PUESTO PuestoQuebrado MONTAÑA
	    PuestoQuebrado[0] = 0;
		PuestoQuebrado1 = CreateDynamicObject(19528, -1318.51648, 2508.76489, 86.86950,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoQuebradoTiene[playerid][1] == 1)	{
	    PuestoQuebrado[1] = 0;
		PuestoQuebrado2 = CreateDynamicObject(19528, -1318.51648, 2508.76489, 87.62950,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoQuebradoTiene[playerid][2] == 1)	{
	    PuestoQuebrado[2] = 0;
		PuestoQuebrado3 = CreateDynamicObject(19528, -1317.99646, 2508.78491, 86.54950,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoQuebradoTiene[playerid][3] == 1)	{
	    PuestoQuebrado[3] = 0;
		PuestoQuebrado4 = CreateDynamicObject(19528, -1317.99646, 2508.78491, 87.28950,   4.00000, -47.00000, 0.00000);
 	}
 	if(PuestoEmeTiene[playerid][0] == 1)	{ //PUESTO emerald LV
	    PuestoEme[0] = 0;
		PuestoEme1 = CreateDynamicObject(19528, 2105.52930, 2204.11621, 10.32780,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoEmeTiene[playerid][1] == 1)	{
	    PuestoEme[1] = 0;
		PuestoEme2 = CreateDynamicObject(19528, 2105.52930, 2204.11621, 11.06780,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoEmeTiene[playerid][2] == 1)	{
	    PuestoEme[2] = 0;
		PuestoEme3 = CreateDynamicObject(19528, 2105.00952, 2204.09619, 10.64780,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoEmeTiene[playerid][3] == 1)	{
	    PuestoEme[3] = 0;
		PuestoEme4 = CreateDynamicObject(19528, 2105.00952, 2204.09619, 11.40780,   4.00000, -127.00000, 0.00000);
 	}
 	if(PuestoFaDoTiene[playerid][0] == 1)	{ //PUESTO FABRICA DOHERTY
	    PuestoFaDo[0] = 0;
		PuestoFaDo1 = CreateDynamicObject(19528, -2131.34888, 260.07220, 35.68670,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoFaDoTiene[playerid][1] == 1)	{
	    PuestoFaDo[1] = 0;
		PuestoFaDo2 = CreateDynamicObject(19528, -2131.34888, 260.07220, 36.44670,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoFaDoTiene[playerid][2] == 1)	{
	    PuestoFaDo[2] = 0;
		PuestoFaDo3 = CreateDynamicObject(19528, -2130.82910, 260.09219, 35.36670,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoFaDoTiene[playerid][3] == 1)	{
	    PuestoFaDo[3] = 0;
		PuestoFaDo4 = CreateDynamicObject(19528, -2130.82910, 260.09219, 36.10670,   4.00000, -47.00000, 0.00000);
 	}
 	if(PuestoC1Tiene[playerid][0] == 1)	{ //PUESTO c1
	    PuestoC1[0] = 0;
		PuestoC11 = CreateDynamicObject(19528, -2223.07666, -146.43221, 35.14780,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoC1Tiene[playerid][1] == 1)	{
	    PuestoC1[1] = 0;
		PuestoC12 = CreateDynamicObject(19528, -2223.07666, -146.43221, 35.90780,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoC1Tiene[playerid][2] == 1)	{
	    PuestoC1[2] = 0;
		PuestoC13 = CreateDynamicObject(19528, -2222.55688, -146.41220, 34.82780,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoC1Tiene[playerid][3] == 1)	{
	    PuestoC1[3] = 0;
		PuestoC14 = CreateDynamicObject(19528, -2222.55688, -146.41220, 35.56780,   4.00000, -47.00000, 0.00000);
 	}
 	if(PuestoLeSFTiene[playerid][0] == 1)	{ //PUESTO LEGOS SF
	    PuestoLeSF[0] = 0;
		PuestoLeSF1 = CreateDynamicObject(19528, -1848.92102, 1280.15979, 22.07000,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoLeSFTiene[playerid][1] == 1)	{
	    PuestoLeSF[1] = 0;
		PuestoLeSF2 = CreateDynamicObject(19528, -1848.92102, 1280.15979, 22.81000,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoLeSFTiene[playerid][2] == 1)	{
	    PuestoLeSF[2] = 0;
		PuestoLeSF3 = CreateDynamicObject(19528, -1849.44104, 1280.13977, 22.39000,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoLeSFTiene[playerid][3] == 1)	{
	    PuestoLeSF[3] = 0;
		PuestoLeSF4 = CreateDynamicObject(19528, -1849.44104, 1280.13977, 23.15000,   4.00000, -127.00000, 0.00000);
 	}
 	if(PuestoEstaLVTiene[playerid][0] == 1)	{ //PUESTO ESTADIO Lv
	    PuestoEstaLV[0] = 0;
		PuestoEstaLV1 = CreateDynamicObject(19528, 1096.65210, 1399.41675, 7.22030,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoEstaLVTiene[playerid][1] == 1)	{
	    PuestoEstaLV[1] = 0;
		PuestoEstaLV2 = CreateDynamicObject(19528, 1096.65210, 1399.41675, 6.46030,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoEstaLVTiene[playerid][2] == 1)	{
	    PuestoEstaLV[2] = 0;
		PuestoEstaLV3 = CreateDynamicObject(19528, 1097.17212, 1399.43677, 6.88030,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoEstaLVTiene[playerid][3] == 1)	{
	    PuestoEstaLV[3] = 0;
		PuestoEstaLV4 = CreateDynamicObject(19528, 1097.17212, 1399.43677, 6.14030,   4.00000, -47.00000, 0.00000);
 	}
 	if(PuestoMarketTiene[playerid][0] == 1)	{ //PUESTO ESTADIO Lv
	    PuestoMarket[0] = 0;
		PuestoMarket1 = CreateDynamicObject(19528, 961.43488, -1544.11218, 13.43140,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoEstaLVTiene[playerid][1] == 1)	{
	    PuestoMarket[1] = 0;
		PuestoMarket2 = CreateDynamicObject(19528, 961.43488, -1544.11218, 14.19140,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoEstaLVTiene[playerid][2] == 1)	{
	    PuestoEstaLV[2] = 0;
		PuestoMarket3 = CreateDynamicObject(19528, 961.95490, -1544.09216, 13.11140,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoMarketTiene[playerid][3] == 1)	{
	    PuestoMarket[3] = 0;
		PuestoMarket4 = CreateDynamicObject(19528, 961.95490, -1544.09216, 13.85140,   4.00000, -47.00000, 0.00000);
 	}
 	if(PuestoSMBTiene[playerid][0] == 1)	{ //PUESTO SANTA MARIA BEACH
	    PuestoSMB[0] = 0;
	    PuestoSMB1 = CreateDynamicObject(19528, 321.67239, -1756.69836, 5.09360,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoSMBTiene[playerid][1] == 1)	{
	    PuestoSMB[1] = 0;
		PuestoSMB2 = CreateDynamicObject(19528, 321.67239, -1756.69836, 4.33360,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoSMBTiene[playerid][2] == 1)	{
	    PuestoSMB[2] = 0;
		PuestoSMB3 = CreateDynamicObject(19528, 322.19241, -1756.67834, 4.75360,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoSMBTiene[playerid][3] == 1)	{
	    PuestoSMB[3] = 0;
		PuestoSMB4 = CreateDynamicObject(19528, 322.19241, -1756.67834, 4.01360,   4.00000, -47.00000, 0.00000);
 	}
 	if(PuestoMCTiene[playerid][0] == 1)	{ //PUESTO MONTE CHILLIAD
	    PuestoMC[0] = 0;
		PuestoMC1 = CreateDynamicObject(19528, -2817.55005, -1530.19592, 141.43129,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoMCTiene[playerid][1] == 1)	{
	    PuestoMC[1] = 0;
		PuestoMC2 = CreateDynamicObject(19528, -2817.55005, -1530.19592, 140.67130,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoMCTiene[playerid][2] == 1)	{
	    PuestoMC[2] = 0;
		PuestoMC3 = CreateDynamicObject(19528, -2817.03027, -1530.17590, 141.09129,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoMCTiene[playerid][3] == 1)	{
	    PuestoMC[3] = 0;
		PuestoMC4 = CreateDynamicObject(19528, -2817.03027, -1530.17590, 140.35130,   4.00000, -47.00000, 0.00000);
 	}
 	if(PuestoPPTiene[playerid][0] == 1)	{ //PUESTO PICKE PINE LAS VENTURAS
	    PuestoPP[0] = 0;
		PuestoPP1 = CreateDynamicObject(19528, 2109.62354, 2736.95850, 10.64780,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoPPTiene[playerid][1] == 1)	{
	    PuestoPP[1] = 0;
		PuestoPP2 = CreateDynamicObject(19528, 2109.62354, 2736.95850, 11.40780,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoPPTiene[playerid][2] == 1)	{
	    PuestoPP[2] = 0;
		PuestoPP3 = CreateDynamicObject(19528, 2110.14331, 2736.97852, 10.32780,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoPPTiene[playerid][3] == 1)	{
	    PuestoPP[3] = 0;
		PuestoPP4 = CreateDynamicObject(19528, 2110.14331, 2736.97852, 11.06780,   4.00000, -47.00000, 0.00000);
 	}
 	if(PuestoBasuTiene[playerid][0] == 1)	{ //PUESTO BASURERO
	    PuestoBasu[0] = 0;
		PuestoBasu1 = CreateDynamicObject(19528, -53.87440, -1398.46875, 2.96140,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoBasuTiene[playerid][1] == 1)	{
	    PuestoBasu[1] = 0;
		PuestoBasu2 = CreateDynamicObject(19528, -53.87440, -1398.46875, 2.20140,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoBasuTiene[playerid][2] == 1)	{
	    PuestoBasu[2] = 0;
		PuestoBasu3 = CreateDynamicObject(19528, -53.35440, -1398.44873, 2.62140,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoBasuTiene[playerid][3] == 1)	{
	    PuestoBasu[3] = 0;
		PuestoBasu4 = CreateDynamicObject(19528, -53.35440, -1398.44873, 1.88140,   4.00000, -47.00000, 0.00000);
 	}
 	if(PuestoJTTiene[playerid][0] == 1)	{ //PUESTO JuliusTursway Las venturas
	    PuestoJT[0] = 0;
		PuestoJT1 = CreateDynamicObject(19528, 2621.71606, 2416.81836, 10.64780,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoJTTiene[playerid][1] == 1)	{
	    PuestoJT[1] = 0;
		PuestoJT2 = CreateDynamicObject(19528, 2621.71606, 2416.81836, 11.40780,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoJTTiene[playerid][2] == 1)	{
	    PuestoJT[2] = 0;
		PuestoJT3 = CreateDynamicObject(19528, 2622.23584, 2416.83838, 10.32780,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoJTTiene[playerid][3] == 1)	{
	    PuestoJT[3] = 0;
		PuestoJT4 = CreateDynamicObject(19528, 2622.23584, 2416.83838, 11.06780,   4.00000, -47.00000, 0.00000);
 	}
	if(PuestoElqTiene[playerid][0] == 1)	{ //PUESTO El quebrado abajo.
	    PuestoElq[0] = 0;
		PuestoElq1 = CreateDynamicObject(19528, -1479.92395, 2612.61963, 58.28880,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoElqTiene[playerid][1] == 1)	{
	    PuestoElq[1] = 0;
		PuestoElq2 = CreateDynamicObject(19528, -1479.92395, 2612.61963, 59.02880,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoElqTiene[playerid][2] == 1)	{
	    PuestoElq[2] = 0;
		PuestoElq3 = CreateDynamicObject(19528, -1480.44397, 2612.59961, 58.60880,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoElqTiene[playerid][3] == 1)	{
	    PuestoElq[3] = 0;
		PuestoElq4 = CreateDynamicObject(19528, -1480.44397, 2612.59961, 59.36880,   4.00000, -127.00000, 0.00000);
 	}
 	if(PuestoPayaTiene[playerid][0] == 1)	{ //PUESTO LAS PAYASADAS.
	    PuestoPaya[0] = 0;
		PuestoPaya1 = CreateDynamicObject(19528, -280.61209, 2654.41797, 62.98410,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoPayaTiene[playerid][1] == 1)	{
	    PuestoPaya[1] = 0;
		PuestoPaya2 = CreateDynamicObject(19528, -280.61209, 2654.41797, 62.24410,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoPayaTiene[playerid][2] == 1)	{
	    PuestoPaya[2] = 0;
		PuestoPaya3 = CreateDynamicObject(19528, -281.13211, 2654.39795, 63.32410,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoPayaTiene[playerid][3] == 1)	{
	    PuestoPaya[3] = 0;
		PuestoPaya4 = CreateDynamicObject(19528, -281.13211, 2654.39795, 62.56410,   4.00000, -127.00000, 0.00000);
 	}
 	if(PuestoLSFTiene[playerid][0] == 1)	{ //PUESTO GRANJA RUTA LS SF
	    PuestoLSF[0] = 0;
		PuestoLSF1 = CreateDynamicObject(19528, -348.57159, -1035.08228, 58.82000,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoLSFTiene[playerid][1] == 1)	{
	    PuestoLSF[1] = 0;
		PuestoLSF2 = CreateDynamicObject(19528, -348.57159, -1035.08228, 59.56000,   4.00000, -47.00000, 0.00000);
	}
	if(PuestoLSFTiene[playerid][2] == 1)	{
	    PuestoLSF[2] = 0;
		PuestoLSF3 = CreateDynamicObject(19528, -349.09161, -1035.10229, 59.14000,   4.00000, -127.00000, 0.00000);
	}
	if(PuestoLSFTiene[playerid][3] == 1)	{
	    PuestoLSF[3] = 0;
		PuestoLSF4 = CreateDynamicObject(19528, -349.09161, -1035.10229, 59.90000,   4.00000, -127.00000, 0.00000);
 	}
 	return LimpiarSombrero(playerid);
}
stock DarSombrero(playerid)
{
    if(IsPlayerNPC(playerid)) return 1;
	if(UsandoObj[playerid] == 1 || UsandoObj2[playerid] == 1 || UsandoObj3[playerid] == 1 || UsandoObj4[playerid] == 1) return SendClientMessage(playerid,-1,"No puedes llevar un sombrero ahora mismo.");
	if(TieneSombrero[playerid] == 1) return SendClientMessage(playerid,-1,"No puedes llevar un sombrero ahora mismo.");
    if(IsPlayerInRangeOfPoint(playerid, 2.0,1700.2800, -1871.2286, 13.4173)) //puesto UNITY - verdes
	{
    	if(PlayerInfo[playerid][@Nivel] > 2) return SendClientMessage(playerid,-1,"Los sombreros de este puesto son únicamente para turistas o nuevos residentes.");
	    if(PuestoUnity[0] == 0)			    {
			if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	        DestroyDynamicObject(PuestoUnity1);
	        comprarsombrero(playerid);
	        PuestoUnity[0] = 1;
	        PuestoUnityTiene[playerid][0] = 1;
	    }
	    else if(PuestoUnity[1] == 0)			    {
	        DestroyDynamicObject(PuestoUnity2);
	        comprarsombrero(playerid);
	        PuestoUnity[1] = 1;
	        PuestoUnityTiene[playerid][1] = 1;
	    }
	    else if(PuestoUnity[2] == 0)			    {
	        DestroyDynamicObject(PuestoUnity3);
	        comprarsombrero(playerid);
	        PuestoUnity[2] = 1;
	        PuestoUnityTiene[playerid][2] = 1;
	    }
	    else if(PuestoUnity[3] == 0)			    {
	        DestroyDynamicObject(PuestoUnity4);
	        comprarsombrero(playerid);
	        PuestoUnity[3] = 1;
	        PuestoUnityTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,1689.4757, -1974.7891, 8.6722)) //puesto unity abajo
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoUnityx[0] == 0)			    {
	        DestroyDynamicObject(PuestoUnityx1);
	        comprarsombrero(playerid);
	        PuestoUnityx[0] = 1;
	        PuestoUnityxTiene[playerid][0] = 1;
	    }
	    else if(PuestoUnityx[1] == 0)			    {
	        DestroyDynamicObject(PuestoUnityx2);
	        comprarsombrero(playerid);
	        PuestoUnityx[1] = 1;
	        PuestoUnityxTiene[playerid][1] = 1;
	    }
	    else if(PuestoUnityx[2] == 0)			    {
	        DestroyDynamicObject(PuestoUnityx3);
	        comprarsombrero(playerid);
	        PuestoUnityx[2] = 1;
	        PuestoUnityxTiene[playerid][2] = 1;
	    }
	    else if(PuestoUnityx[3] == 0)			    {
	        DestroyDynamicObject(PuestoUnityx4);
	        comprarsombrero(playerid);
	        PuestoUnityx[3] = 1;
	        PuestoUnityxTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,-1718.1821, -41.3076, 3.4022)) //camionero
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoCamionero[0] == 0)			    {
	        DestroyDynamicObject(PuestoCamionero1);
	        comprarsombrero(playerid);
	        PuestoCamionero[0] = 1;
	        PuestoCamioneroTiene[playerid][0] = 1;
	    }
	    else if(PuestoCamionero[1] == 0)			    {
	        DestroyDynamicObject(PuestoCamionero2);
	        comprarsombrero(playerid);
	        PuestoCamionero[1] = 1;
	        PuestoCamioneroTiene[playerid][1] = 1;
	    }
	    else if(PuestoCamionero[2] == 0)			    {
	        DestroyDynamicObject(PuestoCamionero3);
	        comprarsombrero(playerid);
	        PuestoCamionero[2] = 1;
	        PuestoCamioneroTiene[playerid][2] = 1;
	    }
	    else if(PuestoCamionero[3] == 0)			    {
	        DestroyDynamicObject(PuestoCamionero4);
	        comprarsombrero(playerid);
	        PuestoCamionero[3] = 1;
	        PuestoCamioneroTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,152.0609, -288.7434, 1.4256)) //puesto estacionamiento municipal
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoEstMuni[0] == 0)			    {
	        DestroyDynamicObject(PuestoEstMuni1);
	        comprarsombrero(playerid);
	        PuestoEstMuni[0] = 1;
	        PuestoEstMuniTiene[playerid][0] = 1;
	    }
	    else if(PuestoEstMuni[1] == 0)			    {
	        DestroyDynamicObject(PuestoEstMuni2);
	        comprarsombrero(playerid);
	        PuestoEstMuni[1] = 1;
	        PuestoEstMuniTiene[playerid][1] = 1;
	    }
	    else if(PuestoEstMuni[2] == 0)			    {
	        DestroyDynamicObject(PuestoEstMuni3);
	        comprarsombrero(playerid);
	        PuestoEstMuni[2] = 1;
	        PuestoEstMuniTiene[playerid][2] = 1;
	    }
	    else if(PuestoEstMuni[3] == 0)			    {
	        DestroyDynamicObject(PuestoEstMuni4);
	        comprarsombrero(playerid);
	        PuestoEstMuni[3] = 1;
	        PuestoEstMuniTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,-2675.5508, 1372.1134, 6.9363)) //PUENTE A BAYSIDE ABAJO
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(GorrosSFBridge[0] == 0)			    {
	        DestroyDynamicObject(GorrosSFBridge1);
	        comprarsombrero(playerid);
	        GorrosSFBridge[0] = 1;
	        GorrosSFBridgeTiene[playerid][0] = 1;
	    }
	    else if(GorrosSFBridge[1] == 0)			    {
	        DestroyDynamicObject(GorrosSFBridge2);
	        comprarsombrero(playerid);
	        GorrosSFBridge[1] = 1;
	        GorrosSFBridgeTiene[playerid][1] = 1;
	    }
	    else if(PuestoEstMuni[2] == 0)			    {
	        DestroyDynamicObject(GorrosSFBridge3);
	        comprarsombrero(playerid);
	        GorrosSFBridge[2] = 1;
	        GorrosSFBridgeTiene[playerid][2] = 1;
	    }
	    else if(PuestoEstMuni[3] == 0)			    {
	        DestroyDynamicObject(GorrosSFBridge4);
	        comprarsombrero(playerid);
	        GorrosSFBridge[3] = 1;
	        GorrosSFBridgeTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,2351.7090, -645.1189, 127.9373))
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoMount[0] == 0)			    {
	        DestroyDynamicObject(PuestoMount1);
	        comprarsombrero(playerid);
	        PuestoMount[0] = 1;
	        PuestoMountTiene[playerid][0] = 1;
	    }
	    else if(PuestoMount[1] == 0)			    {
	        DestroyDynamicObject(PuestoMount2);
	        comprarsombrero(playerid);
	        PuestoMount[1] = 1;
	        PuestoMountTiene[playerid][1] = 1;
	    }
	    else if(PuestoMount[2] == 0)			    {
	        DestroyDynamicObject(PuestoMount3);
	        comprarsombrero(playerid);
	        PuestoMount[2] = 1;
	        PuestoMountTiene[playerid][2] = 1;
	    }
	    else if(PuestoMount[3] == 0)			    {
	        DestroyDynamicObject(PuestoMount4);
	        comprarsombrero(playerid);
	        PuestoMount[3] = 1;
	        PuestoMountTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,-2548.7896, 1213.7742, 37.2694)) //ARRIBA PUESTO BAYSIDE PUENTE
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(GorrosBridge[0] == 0)			    {
	        DestroyDynamicObject(GorrosBridge1);
	        comprarsombrero(playerid);
	        GorrosBridge[0] = 1;
	        GorrosBridgeTiene[playerid][0] = 1;
	    }
	    else if(GorrosBridge[1] == 0)			    {
	        DestroyDynamicObject(GorrosBridge2);
	        comprarsombrero(playerid);
	        GorrosBridge[1] = 1;
	        GorrosBridgeTiene[playerid][1] = 1;
	    }
	    else if(GorrosBridge[2] == 0)			    {
	        DestroyDynamicObject(GorrosBridge3);
	        comprarsombrero(playerid);
	        GorrosBridge[2] = 1;
	        GorrosBridgeTiene[playerid][2] = 1;
	    }
	    else if(GorrosBridge[3] == 0)			    {
	        DestroyDynamicObject(GorrosBridge4);
	        comprarsombrero(playerid);
	        GorrosBridge[3] = 1;
	        GorrosBridgeTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, -2674.1777, 228.8340, 4.1891))
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoCB[0] == 0)			    {
	        DestroyDynamicObject(PuestoCB1);
	        comprarsombrero(playerid);
	        PuestoCB[0] = 1;
	        PuestoCBTiene[playerid][0] = 1;
	    }
	    else if(PuestoCB[1] == 0)			    {
	        DestroyDynamicObject(PuestoCB2);
	        comprarsombrero(playerid);
	        PuestoCB[1] = 1;
	        PuestoCBTiene[playerid][1] = 1;
	    }
	    else if(PuestoCB[2] == 0)			    {
	        DestroyDynamicObject(PuestoCB3);
	        comprarsombrero(playerid);
	        PuestoCB[2] = 1;
	        PuestoCBTiene[playerid][2] = 1;
	    }
	    else if(PuestoCB[3] == 0)			    {
	        DestroyDynamicObject(PuestoCB4);
	        comprarsombrero(playerid);
	        PuestoCB[3] = 1;
	        PuestoCBTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,-2751.5632, 196.5470, 6.9554))
	{
     	if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoWeels[0] == 0)			    {
	        DestroyDynamicObject(PuestoWeels1);
	        comprarsombrero(playerid);
	        PuestoWeels[0] = 1;
	        PuestoWeelsTiene[playerid][0] = 1;
	    }
	    else if(PuestoWeels[1] == 0)			    {
	        DestroyDynamicObject(PuestoWeels2);
	        comprarsombrero(playerid);
	        PuestoCB[1] = 1;
	        PuestoWeelsTiene[playerid][1] = 1;
	    }
	    else if(PuestoWeels[2] == 0)			    {
	        DestroyDynamicObject(PuestoWeels3);
	        comprarsombrero(playerid);
	        PuestoWeels[2] = 1;
	        PuestoWeelsTiene[playerid][2] = 1;
	    }
	    else if(PuestoWeels[3] == 0)			    {
	        DestroyDynamicObject(PuestoWeels4);
	        comprarsombrero(playerid);
	        PuestoWeels[3] = 1;
	        PuestoWeelsTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,2182.3638, -1344.8993, 23.8319))
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoColinas[0] == 0)			    {
	        DestroyDynamicObject(PuestoColinas1);
	        comprarsombrero(playerid);
	        PuestoColinas[0] = 1;
	        PuestoColinasTiene[playerid][0] = 1;
	    }
	    else if(PuestoColinas[1] == 0)			    {
	        DestroyDynamicObject(PuestoColinas2);
	        comprarsombrero(playerid);
	        PuestoColinas[1] = 1;
	        PuestoColinasTiene[playerid][1] = 1;
	    }
	    else if(PuestoColinas[2] == 0)			    {
	        DestroyDynamicObject(PuestoColinas3);
	        comprarsombrero(playerid);
	        PuestoColinas[2] = 1;
	        PuestoColinasTiene[playerid][2] = 1;
	    }
	    else if(PuestoColinas[3] == 0)			    {
	        DestroyDynamicObject(PuestoColinas4);
	        comprarsombrero(playerid);
	        PuestoColinas[3] = 1;
	        PuestoColinasTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,-2491.7190, -718.4559, 139.1678))
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoCNN[0] == 0)			    {
	        DestroyDynamicObject(PuestoCNN1);
	        comprarsombrero(playerid);
	        PuestoCNN[0] = 1;
	        PuestoCNNTiene[playerid][0] = 1;
	    }
	    else if(PuestoCNN[1] == 0)			    {
	        DestroyDynamicObject(PuestoCNN2);
	        comprarsombrero(playerid);
	        PuestoCNN[1] = 1;
	        PuestoCNNTiene[playerid][1] = 1;
	    }
	    else if(PuestoCNN[2] == 0)			    {
	        DestroyDynamicObject(PuestoCNN3);
	        comprarsombrero(playerid);
	        PuestoCNN[2] = 1;
	        PuestoCNNTiene[playerid][2] = 1;
	    }
	    else if(PuestoCNN[3] == 0)			    {
	        DestroyDynamicObject(PuestoCNN4);
	        comprarsombrero(playerid);
	        PuestoCNN[3] = 1;
	        PuestoCNNTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,-2491.7607, 2356.4961, 10.1217))
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoBayside[0] == 0)			    {
	        DestroyDynamicObject(PuestoBayside1);
	        comprarsombrero(playerid);
	        PuestoBayside[0] = 1;
	        PuestoBaysideTiene[playerid][0] = 1;
	    }
	    else if(PuestoBayside[1] == 0)			    {
	        DestroyDynamicObject(PuestoBayside2);
	        comprarsombrero(playerid);
	        PuestoBayside[1] = 1;
	        PuestoBaysideTiene[playerid][1] = 1;
	    }
	    else if(PuestoBayside[2] == 0)			    {
	        DestroyDynamicObject(PuestoBayside3);
	        comprarsombrero(playerid);
	        PuestoBayside[2] = 1;
	        PuestoBaysideTiene[playerid][2] = 1;
	    }
	    else if(PuestoBayside[3] == 0)			    {
	        DestroyDynamicObject(PuestoBayside4);
	        comprarsombrero(playerid);
	        PuestoBayside[3] = 1;
	        PuestoBaysideTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,-1318.2965, 2508.7249, 86.8895))
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoQuebrado[0] == 0)			    {
	        DestroyDynamicObject(PuestoQuebrado1);
	        comprarsombrero(playerid);
	        PuestoQuebrado[0] = 1;
	        PuestoQuebradoTiene[playerid][0] = 1;
	    }
	    else if(PuestoQuebrado[1] == 0)			    {
	        DestroyDynamicObject(PuestoQuebrado2);
	        comprarsombrero(playerid);
	        PuestoQuebrado[1] = 1;
	        PuestoQuebradoTiene[playerid][1] = 1;
	    }
	    else if(PuestoBayside[2] == 0)			    {
	        DestroyDynamicObject(PuestoQuebrado3);
	        comprarsombrero(playerid);
	        PuestoQuebrado[2] = 1;
	        PuestoQuebradoTiene[playerid][2] = 1;
	    }
	    else if(PuestoQuebrado[3] == 0)			    {
	        DestroyDynamicObject(PuestoQuebrado4);
	        comprarsombrero(playerid);
	        PuestoQuebrado[3] = 1;
	        PuestoQuebradoTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,2105.2295, 2204.0562, 10.6678))
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoEme[0] == 0)			    {
	        DestroyDynamicObject(PuestoEme1);
	        comprarsombrero(playerid);
	        PuestoEme[0] = 1;
	        PuestoEmeTiene[playerid][0] = 1;
	    }
	    else if(PuestoEme[1] == 0)			    {
	        DestroyDynamicObject(PuestoEme2);
	        comprarsombrero(playerid);
	        PuestoEme[1] = 1;
	        PuestoEmeTiene[playerid][1] = 1;
	    }
	    else if(PuestoEme[2] == 0)			    {
	        DestroyDynamicObject(PuestoEme3);
	        comprarsombrero(playerid);
	        PuestoEme[2] = 1;
	        PuestoEmeTiene[playerid][2] = 1;
	    }
	    else if(PuestoEme[3] == 0)			    {
	        DestroyDynamicObject(PuestoEme4);
	        comprarsombrero(playerid);
	        PuestoEme[3] = 1;
	        PuestoEmeTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1031.1637, 2096.2009, 10.6678))
	{
		if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoTrans[0] == 0)			    {
	        DestroyDynamicObject(PuestoTrans1);
	        comprarsombrero(playerid);
	        PuestoTrans[0] = 1;
	        PuestoTransTiene[playerid][0] = 1;
	    }
	    else if(PuestoTrans[1] == 0)			    {
	        DestroyDynamicObject(PuestoTrans2);
	        comprarsombrero(playerid);
	        PuestoTrans[1] = 1;
	        PuestoTransTiene[playerid][1] = 1;
	    }
	    else if(PuestoTrans[2] == 0)			    {
	        DestroyDynamicObject(PuestoTrans3);
	        comprarsombrero(playerid);
	        PuestoTrans[2] = 1;
	        PuestoTransTiene[playerid][2] = 1;
	    }
	    else if(PuestoTrans[3] == 0)			    {
	        DestroyDynamicObject(PuestoTrans4);
	        comprarsombrero(playerid);
	        PuestoTrans[3] = 1;
	        PuestoTransTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,1096.8721, 1399.3768, 6.4803))
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoEstaLV[0] == 0)			    {
	        DestroyDynamicObject(PuestoEstaLV1);
	        comprarsombrero(playerid);
	        PuestoEstaLV[0] = 1;
	        PuestoEstaLVTiene[playerid][0] = 1;
	    }
	    else if(PuestoEstaLV[1] == 0)			    {
	        DestroyDynamicObject(PuestoEstaLV2);
	        comprarsombrero(playerid);
	        PuestoEstaLV[1] = 1;
	        PuestoEstaLVTiene[playerid][1] = 1;
	    }
	    else if(PuestoTrans[2] == 0)			    {
	        DestroyDynamicObject(PuestoEstaLV3);
	        comprarsombrero(playerid);
	        PuestoEstaLV[2] = 1;
	        PuestoEstaLVTiene[playerid][2] = 1;
	    }
	    else if(PuestoEstaLV[3] == 0)			    {
	        DestroyDynamicObject(PuestoEstaLV4);
	        comprarsombrero(playerid);
	        PuestoEstaLV[3] = 1;
	        PuestoEstaLVTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,961.6549, -1544.1521, 13.4514))
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoMarket[0] == 0)			    {
	        DestroyDynamicObject(PuestoMarket1);
	        comprarsombrero(playerid);
	        PuestoMarket[0] = 1;
	        PuestoMarketTiene[playerid][0] = 1;
	    }
	    else if(PuestoMarket[1] == 0)			    {
	        DestroyDynamicObject(PuestoMarket2);
	        comprarsombrero(playerid);
	        PuestoMarket[1] = 1;
	        PuestoMarketTiene[playerid][1] = 1;
	    }
	    else if(PuestoMarket[2] == 0)			    {
	        DestroyDynamicObject(PuestoMarket3);
	        comprarsombrero(playerid);
	        PuestoMarket[2] = 1;
	        PuestoMarketTiene[playerid][2] = 1;
	    }
	    else if(PuestoMarket[3] == 0)			    {
	        DestroyDynamicObject(PuestoMarket4);
	        comprarsombrero(playerid);
	        PuestoMarket[3] = 1;
	        PuestoMarketTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,321.8924, -1756.7383, 4.3536))
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoSMB[0] == 0)			    {
	        DestroyDynamicObject(PuestoSMB1);
	        comprarsombrero(playerid);
	        PuestoSMB[0] = 1;
	        PuestoSMBTiene[playerid][0] = 1;
	    }
	    else if(PuestoSMB[1] == 0)			    {
	        DestroyDynamicObject(PuestoSMB2);
	        comprarsombrero(playerid);
	        PuestoSMB[1] = 1;
	        PuestoSMBTiene[playerid][1] = 1;
	    }
	    else if(PuestoSMB[2] == 0)			    {
	        DestroyDynamicObject(PuestoSMB3);
	        comprarsombrero(playerid);
	        PuestoSMB[2] = 1;
	        PuestoSMBTiene[playerid][2] = 1;
	    }
	    else if(PuestoSMB[3] == 0)			    {
	        DestroyDynamicObject(PuestoSMB4);
	        comprarsombrero(playerid);
	        PuestoSMB[3] = 1;
	        PuestoSMBTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,-348.8716, -1035.1422, 59.1600))
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoLSF[0] == 0)			    {
	        DestroyDynamicObject(PuestoLSF1);
	        comprarsombrero(playerid);
	        PuestoLSF[0] = 1;
	        PuestoLSFTiene[playerid][0] = 1;
	    }
	    else if(PuestoLSF[1] == 0)			    {
	        DestroyDynamicObject(PuestoLSF2);
	        comprarsombrero(playerid);
	        PuestoLSF[1] = 1;
	        PuestoLSFTiene[playerid][1] = 1;
	    }
	    else if(PuestoLSF[2] == 0)			    {
	        DestroyDynamicObject(PuestoLSF3);
	        comprarsombrero(playerid);
	        PuestoLSF[2] = 1;
	        PuestoLSFTiene[playerid][2] = 1;
	    }
	    else if(PuestoLSF[3] == 0)			    {
	        DestroyDynamicObject(PuestoLSF4);
	        comprarsombrero(playerid);
	        PuestoLSF[3] = 1;
	        PuestoLSFTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,-2817.3301, -1530.2358, 140.6913))//
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoMC[0] == 0)			    {
	        DestroyDynamicObject(PuestoMC1);
	        comprarsombrero(playerid);
	        PuestoMC[0] = 1;
	        PuestoMCTiene[playerid][0] = 1;
	    }
	    else if(PuestoMC[1] == 0)			    {
	        DestroyDynamicObject(PuestoMC2);
	        comprarsombrero(playerid);
	        PuestoMC[1] = 1;
	        PuestoMCTiene[playerid][1] = 1;
	    }
	    else if(PuestoMC[2] == 0)			    {
	        DestroyDynamicObject(PuestoMC3);
	        comprarsombrero(playerid);
	        PuestoMC[2] = 1;
	        PuestoMCTiene[playerid][2] = 1;
	    }
	    else if(PuestoMC[3] == 0)			    {
	        DestroyDynamicObject(PuestoMC4);
	        comprarsombrero(playerid);
	        PuestoMC[3] = 1;
	        PuestoMCTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,2621.9360, 2416.7783, 10.6678))//
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoJT[0] == 0)			    {
	        DestroyDynamicObject(PuestoJT1);
	        comprarsombrero(playerid);
	        PuestoJT[0] = 1;
	        PuestoJTTiene[playerid][0] = 1;
	    }
	    else if(PuestoJT[1] == 0)			    {
	        DestroyDynamicObject(PuestoJT2);
	        comprarsombrero(playerid);
	        PuestoJT[1] = 1;
	        PuestoJTTiene[playerid][1] = 1;
	    }
	    else if(PuestoJT[2] == 0)			    {
	        DestroyDynamicObject(PuestoJT3);
	        comprarsombrero(playerid);
	        PuestoJT[2] = 1;
	        PuestoJTTiene[playerid][2] = 1;
	    }
	    else if(PuestoJT[3] == 0)			    {
	        DestroyDynamicObject(PuestoJT4);
	        comprarsombrero(playerid);
	        PuestoJT[3] = 1;
	        PuestoJTTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,2109.8435, 2736.9185, 10.6678))//
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoPP[0] == 0)			    {
	        DestroyDynamicObject(PuestoPP1);
	        comprarsombrero(playerid);
	        PuestoPP[0] = 1;
	        PuestoPPTiene[playerid][0] = 1;
	    }
	    else if(PuestoPP[1] == 0)			    {
	        DestroyDynamicObject(PuestoPP2);
	        comprarsombrero(playerid);
	        PuestoPP[1] = 1;
	        PuestoPPTiene[playerid][1] = 1;
	    }
	    else if(PuestoPP[2] == 0)			    {
	        DestroyDynamicObject(PuestoPP3);
	        comprarsombrero(playerid);
	        PuestoPP[2] = 1;
	        PuestoPPTiene[playerid][2] = 1;
	    }
	    else if(PuestoPP[3] == 0)			    {
	        DestroyDynamicObject(PuestoPP4);
	        comprarsombrero(playerid);
	        PuestoPP[3] = 1;
	        PuestoPPTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,417.8561, 2543.3235, 16.2683))//
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoAA[0] == 0)			    {
	        DestroyDynamicObject(PuestoAA1);
	        comprarsombrero(playerid);
	        PuestoAA[0] = 1;
	        PuestoAATiene[playerid][0] = 1;
	    }
	    else if(PuestoAA[1] == 0)			    {
	        DestroyDynamicObject(PuestoAA2);
	        comprarsombrero(playerid);
	        PuestoAA[1] = 1;
	        PuestoAATiene[playerid][1] = 1;
	    }
	    else if(PuestoAA[2] == 0)			    {
	        DestroyDynamicObject(PuestoAA3);
	        comprarsombrero(playerid);
	        PuestoAA[2] = 1;
	        PuestoAATiene[playerid][2] = 1;
	    }
	    else if(PuestoAA[3] == 0)			    {
	        DestroyDynamicObject(PuestoAA4);
	        comprarsombrero(playerid);
	        PuestoAA[3] = 1;
	        PuestoAATiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,-280.9121, 2654.3579, 62.5841))//
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoPaya[0] == 0)			    {
	        DestroyDynamicObject(PuestoPaya1);
	        comprarsombrero(playerid);
	        PuestoPaya[0] = 1;
	        PuestoPayaTiene[playerid][0] = 1;
	    }
	    else if(PuestoPaya[1] == 0)			    {
	        DestroyDynamicObject(PuestoPaya2);
	        comprarsombrero(playerid);
	        PuestoPaya[1] = 1;
	        PuestoPayaTiene[playerid][1] = 1;
	    }
	    else if(PuestoPaya[2] == 0)			    {
	        DestroyDynamicObject(PuestoPaya3);
	        comprarsombrero(playerid);
	        PuestoPaya[2] = 1;
	        PuestoPayaTiene[playerid][2] = 1;
	    }
	    else if(PuestoPaya[3] == 0)			    {
	        DestroyDynamicObject(PuestoPaya4);
	        comprarsombrero(playerid);
	        PuestoPaya[3] = 1;
	        PuestoPayaTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,-1480.2240, 2612.5596, 58.6288))//
 	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoElq[0] == 0)			    {
	        DestroyDynamicObject(PuestoElq1);
	        comprarsombrero(playerid);
	        PuestoElq[0] = 1;
	        PuestoElqTiene[playerid][0] = 1;
	    }
	    else if(PuestoElq[1] == 0)			    {
	        DestroyDynamicObject(PuestoElq2);
	        comprarsombrero(playerid);
	        PuestoElq[1] = 1;
	        PuestoElqTiene[playerid][1] = 1;
	    }
	    else if(PuestoElq[2] == 0)			    {
	        DestroyDynamicObject(PuestoElq3);
	        comprarsombrero(playerid);
	        PuestoElq[2] = 1;
	        PuestoElqTiene[playerid][2] = 1;
	    }
	    else if(PuestoElq[3] == 0)			    {
	        DestroyDynamicObject(PuestoElq4);
	        comprarsombrero(playerid);
	        PuestoElq[3] = 1;
	        PuestoElqTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,-1849.2211, 1280.0999, 22.4100))//
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoLeSF[0] == 0)			    {
	        DestroyDynamicObject(PuestoLeSF1);
	        comprarsombrero(playerid);
	        PuestoLeSF[0] = 1;
	        PuestoLeSFTiene[playerid][0] = 1;
	    }
	    else if(PuestoLeSF[1] == 0)			    {
	        DestroyDynamicObject(PuestoLeSF2);
	        comprarsombrero(playerid);
	        PuestoLeSF[1] = 1;
	        PuestoLeSFTiene[playerid][1] = 1;
	    }
	    else if(PuestoLeSF[2] == 0)			    {
	        DestroyDynamicObject(PuestoLeSF3);
	        comprarsombrero(playerid);
	        PuestoLeSF[2] = 1;
	        PuestoLeSFTiene[playerid][2] = 1;
	    }
	    else if(PuestoLeSF[3] == 0)			    {
	        DestroyDynamicObject(PuestoLeSF4);
	        comprarsombrero(playerid);
	        PuestoLeSF[3] = 1;
	        PuestoLeSFTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,2104.0378, -1941.0413, 13.3944))//
	{
     	if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoPG[0] == 0)			    {
	        DestroyDynamicObject(PuestoPG1);
	        comprarsombrero(playerid);
	        PuestoPG[0] = 1;
	        PuestoPGTiene[playerid][0] = 1;
	    }
	    else if(PuestoPG[1] == 0)			    {
	        DestroyDynamicObject(PuestoPG2);
	        comprarsombrero(playerid);
	        PuestoPG[1] = 1;
	        PuestoPGTiene[playerid][1] = 1;
	    }
	    else if(PuestoPG[2] == 0)			    {
	        DestroyDynamicObject(PuestoPG3);
	        comprarsombrero(playerid);
	        PuestoPG[2] = 1;
	        PuestoPGTiene[playerid][2] = 1;
	    }
	    else if(PuestoPG[3] == 0)			    {
	        DestroyDynamicObject(PuestoPG4);
	        comprarsombrero(playerid);
	        PuestoPG[3] = 1;
	        PuestoPGTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,-53.6544, -1398.5087, 2.2214))//
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoBasu[0] == 0)			    {
	        DestroyDynamicObject(PuestoBasu1);
	        comprarsombrero(playerid);
	        PuestoBasu[0] = 1;
	        PuestoBasuTiene[playerid][0] = 1;
	    }
	    else if(PuestoBasu[1] == 0)			    {
	        DestroyDynamicObject(PuestoBasu2);
	        comprarsombrero(playerid);
	        PuestoBasu[1] = 1;
	        PuestoBasuTiene[playerid][1] = 1;
	    }
	    else if(PuestoBasu[2] == 0)			    {
	        DestroyDynamicObject(PuestoBasu3);
	        comprarsombrero(playerid);
	        PuestoBasu[2] = 1;
	        PuestoBasuTiene[playerid][2] = 1;
	    }
	    else if(PuestoBasu[3] == 0)			    {
	        DestroyDynamicObject(PuestoBasu4);
	        comprarsombrero(playerid);
	        PuestoBasu[3] = 1;
	        PuestoBasuTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,2022.7119, -1781.1027, 13.3944)) //PUESTO DELANTE PIZZERIA GANTON
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoAG[0] == 0)			    {
	        DestroyDynamicObject(PuestoAG1);
	        comprarsombrero(playerid);
	        PuestoAG[0] = 1;
	        PuestoAGTiene[playerid][0] = 1;
	    }
	    else if(PuestoAG[1] == 0)			    {
	        DestroyDynamicObject(PuestoAG2);
	        comprarsombrero(playerid);
	        PuestoAG[1] = 1;
	        PuestoAGTiene[playerid][1] = 1;
	    }
	    else if(PuestoAG[2] == 0)			    {
	        DestroyDynamicObject(PuestoAG3);
	        comprarsombrero(playerid);
	        PuestoAG[2] = 1;
	        PuestoAGTiene[playerid][2] = 1;
	    }
	    else if(PuestoAG[3] == 0)			    {
	        DestroyDynamicObject(PuestoAG4);
	        comprarsombrero(playerid);
	        PuestoAG[3] = 1;
	        PuestoAGTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,-2131.1289, 260.0322, 35.7067))//
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoFaDo[0] == 0)			    {
	        DestroyDynamicObject(PuestoFaDo1);
	        comprarsombrero(playerid);
	        PuestoFaDo[0] = 1;
	        PuestoFaDoTiene[playerid][0] = 1;
	    }
	    else if(PuestoFaDo[1] == 0)			    {
	        DestroyDynamicObject(PuestoFaDo2);
	        comprarsombrero(playerid);
	        PuestoFaDo[1] = 1;
	        PuestoFaDoTiene[playerid][1] = 1;
	    }
	    else if(PuestoFaDo[2] == 0)			    {
	        DestroyDynamicObject(PuestoFaDo3);
	        comprarsombrero(playerid);
	        PuestoFaDo[2] = 1;
	        PuestoFaDoTiene[playerid][2] = 1;
	    }
	    else if(PuestoFaDo[3] == 0)			    {
	        DestroyDynamicObject(PuestoFaDo4);
	        comprarsombrero(playerid);
	        PuestoFaDo[3] = 1;
	        PuestoFaDoTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,-1363.3124, 15.5854, 6.1834))//
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoAESF[0] == 0)			    {
	        DestroyDynamicObject(PuestoAESF1);
	        comprarsombrero(playerid);
	        PuestoAESF[0] = 1;
	        PuestoAESFTiene[playerid][0] = 1;
	    }
	    else if(PuestoAESF[1] == 0)			    {
	        DestroyDynamicObject(PuestoAESF2);
	        comprarsombrero(playerid);
	        PuestoAESF[1] = 1;
	        PuestoAESFTiene[playerid][1] = 1;
	    }
	    else if(PuestoAESF[2] == 0)			    {
	        DestroyDynamicObject(PuestoAESF3);
	        comprarsombrero(playerid);
	        PuestoAESF[2] = 1;
	        PuestoAESFTiene[playerid][2] = 1;
	    }
	    else if(PuestoAESF[3] == 0)			    {
	        DestroyDynamicObject(PuestoAESF4);
	        comprarsombrero(playerid);
	        PuestoAESF[3] = 1;
	        PuestoAESFTiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,-2222.8567, -146.4722, 35.1678))//
	{
	    if(GetPlayerMoney(playerid) < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
	    if(PuestoC1[0] == 0)			    {
	        DestroyDynamicObject(PuestoC11);
	        comprarsombrero(playerid);
	        PuestoC1[0] = 1;
	        PuestoC1Tiene[playerid][0] = 1;
	    }
	    else if(PuestoC1[1] == 0)			    {
	        DestroyDynamicObject(PuestoC12);
	        comprarsombrero(playerid);
	        PuestoC1[1] = 1;
	        PuestoC1Tiene[playerid][1] = 1;
	    }
	    else if(PuestoC1[2] == 0)			    {
	        DestroyDynamicObject(PuestoC13);
	        comprarsombrero(playerid);
	        PuestoC1[2] = 1;
	        PuestoC1Tiene[playerid][2] = 1;
	    }
	    else if(PuestoC1[3] == 0)			    {
	        DestroyDynamicObject(PuestoC14);
	        comprarsombrero(playerid);
	        PuestoC1[3] = 1;
	        PuestoC1Tiene[playerid][3] = 1;
	    }
	    else return SendClientMessage(playerid,-1, "No quedan más sombreros, regresa más tarde o busca en otro puesto de Halloween.");
	    return 1;
	}
	else return SendClientMessage(playerid,-1,"Los sombreros se venden en los puestos de Halloween.");
}

stock GuardarCuenta(playerid)
{
    if(GetPlayerScore(playerid) == 0) return 1;
	if(JugadorLogeado[playerid] == 1)
	{
        if(GetPVarInt(playerid, "TempName") == 1) return 1;
		new Float:x,Float:y,Float:z,Float:z_a,Float:VidaV;
		new Float:x2,Float:y2,Float:z2,Float:z_a2,Float:VidaV2;
		new Float:x3,Float:y3,Float:z3,Float:z_a3,Float:VidaV3;
		new Float:x4,Float:y4,Float:z4,Float:z_a4,Float:VidaV4;
		new inte, vw;
		new day,month,year, query[800];
		getdate(day,month,year);
		if(autos[playerid] > 0)
		{
			GetVehicleDamageStatus(autos[playerid], PlayerInfo[playerid][VE1], PlayerInfo[playerid][VE2], PlayerInfo[playerid][VE3], PlayerInfo[playerid][VE4]);
			PlayerInfo[playerid][vGas] = VehicleFuel[autos[playerid]];
			GetVehicleHealth(autos[playerid], VidaV);
			GetVehiclePos(autos[playerid], x,y,z);
			PlayerInfo[playerid][vX] = x;
			PlayerInfo[playerid][vY] = y;
			PlayerInfo[playerid][vZ] = z;
			GetVehicleZAngle(autos[playerid], z_a);
			PlayerInfo[playerid][vA] = z_a;
			PlayerInfo[playerid][pVidaV] = VidaV;
			inte = GetVehicleInterior(autos[playerid]); vw = GetVehicleVirtualWorld(autos[playerid]);
			PlayerInfo[playerid][vinterior] = inte;
			PlayerInfo[playerid][vvw] = vw;
			format(query,sizeof(query),"UPDATE `p_vehicles` SET `VE1`='%d',`VE2`='%d',`VE3`='%d',`VE4`='%d',`Combustible`='%d', `Vida`='%f',`X`='%f',`Y`='%f',`Z`='%f',`A`='%f',`Interior`='%d',`VW`='%d' WHERE `Propietario`='%d' AND `Slot`='1'",PlayerInfo[playerid][VE1], PlayerInfo[playerid][VE2], PlayerInfo[playerid][VE3], PlayerInfo[playerid][VE4],PlayerInfo[playerid][vGas],PlayerInfo[playerid][pVidaV],PlayerInfo[playerid][vX],PlayerInfo[playerid][vY],PlayerInfo[playerid][vZ],PlayerInfo[playerid][vA],PlayerInfo[playerid][vinterior],PlayerInfo[playerid][vvw],PlayerInfo[playerid][pID]);
            mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		}
		if(autos2[playerid] > 0)
		{
			GetVehicleDamageStatus(autos2[playerid], PlayerInfo[playerid][V2E1], PlayerInfo[playerid][V2E2], PlayerInfo[playerid][V2E3], PlayerInfo[playerid][V2E4]);
			PlayerInfo[playerid][v2Gas] = VehicleFuel[autos2[playerid]];
			GetVehicleHealth(autos2[playerid], VidaV2);
			GetVehiclePos(autos2[playerid], x2,y2,z2);
			PlayerInfo[playerid][v2X] = x2;
			PlayerInfo[playerid][v2Y] = y2;
			PlayerInfo[playerid][v2Z] = z2;
			GetVehicleZAngle(autos2[playerid], z_a2);
			PlayerInfo[playerid][v2A] = z_a2;
			PlayerInfo[playerid][pVidaV2] = VidaV2;
			inte = GetVehicleInterior(autos2[playerid]); vw = GetVehicleVirtualWorld(autos2[playerid]);
			PlayerInfo[playerid][v2interior] = inte;
			PlayerInfo[playerid][v2vw] = vw;
			format(query,sizeof(query),"UPDATE `p_vehicles` SET `VE1`='%d',`VE2`='%d',`VE3`='%d',`VE4`='%d',`Combustible`='%d', `Vida`='%f',`X`='%f',`Y`='%f',`Z`='%f',`A`='%f',`Interior`='%d',`VW`='%d' WHERE `Propietario`='%d' AND `Slot`='2'",PlayerInfo[playerid][V2E1], PlayerInfo[playerid][V2E2], PlayerInfo[playerid][V2E3], PlayerInfo[playerid][V2E4],PlayerInfo[playerid][v2Gas],PlayerInfo[playerid][pVidaV2],PlayerInfo[playerid][v2X],PlayerInfo[playerid][v2Y],PlayerInfo[playerid][v2Z],PlayerInfo[playerid][v2A],PlayerInfo[playerid][v2interior],PlayerInfo[playerid][v2vw],PlayerInfo[playerid][pID]);
            mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		}
		if(autos3[playerid] > 0)
		{
			GetVehicleDamageStatus(autos3[playerid], PlayerInfo[playerid][V3E1], PlayerInfo[playerid][V3E2], PlayerInfo[playerid][V3E3], PlayerInfo[playerid][V3E4]);
			PlayerInfo[playerid][v3Gas] = VehicleFuel[autos3[playerid]];
			GetVehicleHealth(autos3[playerid], VidaV3);
			GetVehiclePos(autos3[playerid], x3,y3,z3);
			PlayerInfo[playerid][v3X] = x3;
			PlayerInfo[playerid][v3Y] = y3;
			PlayerInfo[playerid][v3Z] = z3;
			GetVehicleZAngle(autos3[playerid], z_a3);
			PlayerInfo[playerid][v3A] = z_a3;
			PlayerInfo[playerid][pVidaV3] = VidaV3;
			inte = GetVehicleInterior(autos3[playerid]); vw = GetVehicleVirtualWorld(autos3[playerid]);
			PlayerInfo[playerid][v3interior] = inte;
			PlayerInfo[playerid][v3vw] = vw;
			format(query,sizeof(query),"UPDATE `p_vehicles` SET `VE1`='%d',`VE2`='%d',`VE3`='%d',`VE4`='%d',`Combustible`='%d', `Vida`='%f',`X`='%f',`Y`='%f',`Z`='%f',`A`='%f',`Interior`='%d',`VW`='%d' WHERE `Propietario`='%d' AND `Slot`='3'",PlayerInfo[playerid][V3E1], PlayerInfo[playerid][V3E2], PlayerInfo[playerid][V3E3], PlayerInfo[playerid][V3E4],PlayerInfo[playerid][v3Gas],PlayerInfo[playerid][pVidaV3],PlayerInfo[playerid][v3X],PlayerInfo[playerid][v3Y],PlayerInfo[playerid][v3Z],PlayerInfo[playerid][v3A],PlayerInfo[playerid][v3interior],PlayerInfo[playerid][v3vw],PlayerInfo[playerid][pID]);
            mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		}
		if(autos4[playerid] > 0)
		{
			GetVehicleDamageStatus(autos3[playerid], PlayerInfo[playerid][V4E1], PlayerInfo[playerid][V4E2], PlayerInfo[playerid][V4E3], PlayerInfo[playerid][V4E4]);
			PlayerInfo[playerid][v4Gas] = VehicleFuel[autos4[playerid]];
			GetVehicleHealth(autos4[playerid], VidaV4);
			GetVehiclePos(autos4[playerid], x4,y4,z4);
			PlayerInfo[playerid][v4X] = x4;
			PlayerInfo[playerid][v4Y] = y4;
			PlayerInfo[playerid][v4Z] = z4;
			GetVehicleZAngle(autos4[playerid], z_a4);
			PlayerInfo[playerid][v4A] = z_a4;
			PlayerInfo[playerid][pVidaV4] = VidaV4;
			inte = GetVehicleInterior(autos4[playerid]); vw = GetVehicleVirtualWorld(autos4[playerid]);
			PlayerInfo[playerid][v4interior] = inte;
			PlayerInfo[playerid][v4vw] = vw;
			format(query,sizeof(query),"UPDATE `p_vehicles` SET `VE1`='%d',`VE2`='%d',`VE3`='%d',`VE4`='%d',`Combustible`='%d', `Vida`='%f',`X`='%f',`Y`='%f',`Z`='%f',`A`='%f',`Interior`='%d',`VW`='%d' WHERE `Propietario`='%d' AND `Slot`='4'",PlayerInfo[playerid][V4E1], PlayerInfo[playerid][V4E2], PlayerInfo[playerid][V4E3], PlayerInfo[playerid][V4E4],PlayerInfo[playerid][v4Gas],PlayerInfo[playerid][pVidaV4],PlayerInfo[playerid][v4X],PlayerInfo[playerid][v4Y],PlayerInfo[playerid][v4Z],PlayerInfo[playerid][v4A],PlayerInfo[playerid][v4interior],PlayerInfo[playerid][v4vw],PlayerInfo[playerid][pID]);
            mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		}
		if(PlayerInfo[playerid][jDinero] < 0) { PlayerInfo[playerid][jDinero] = 0; }
		if(PlayerInfo[playerid][pBanco] < 0) { PlayerInfo[playerid][pBanco] = 0; }
		PlayerInfo[playerid][pInterior] = GetPlayerInterior(playerid);
		PlayerInfo[playerid][pMundoVirtual] = GetPlayerVirtualWorld(playerid);
		GetPlayerPos(playerid, PlayerInfo[playerid][@X], PlayerInfo[playerid][@Y], PlayerInfo[playerid][@Z]);
		GetPlayerHealth(playerid, PlayerInfo[playerid][@Salud]);
		GetPlayerArmour(playerid, PlayerInfo[playerid][@Chaleco]);

		new hour,minute,second;
		gettime(hour, minute, second);
		format(PlayerInfo[playerid][jConexion], 90, "%02d/%02d/%02d %02d:%02d:%02d", year,month,day,hour,minute,second);
		format(query, sizeof(query), "UPDATE `usuarios` SET `Vida`='%f', `Chaleco`='%f', `Admin`=%d, `Nivel`='%d', `Money`=%d,`GPS`='%d',`Radio`='%d',`Sexo`='%d',`Numero`='%d',`Guia`='%d',`Sonidos`='%d',`Muteos`='%d',`Barras`='%d',`Alerta`='%d',`Velocimetro`='%d',`Interior`=%d,`MundoVirtual`=%d,`NivelArmero`='%d',`ExpArmero`='%d' WHERE `Username`='%s'", PlayerInfo[playerid][@Salud], PlayerInfo[playerid][@Chaleco],PlayerInfo[playerid][pAdmin],PlayerInfo[playerid][@Nivel],PlayerInfo[playerid][jDinero],PlayerInfo[playerid][pGPS],PlayerInfo[playerid][pRadio],PlayerInfo[playerid][vX],PlayerInfo[playerid][vY],PlayerInfo[playerid][vZ],PlayerInfo[playerid][vA],PlayerInfo[playerid][v2X],PlayerInfo[playerid][v2Y],PlayerInfo[playerid][v2Z],PlayerInfo[playerid][v2A],PlayerInfo[playerid][jSexo],PlayerInfo[playerid][pNumero],PlayerInfo[playerid][pGuia],PlayerInfo[playerid][pSonidos],PlayerInfo[playerid][pMuteos],PlayerInfo[playerid][pBarras],PlayerInfo[playerid][pAlerta],PlayerInfo[playerid][pVelocimetro],PlayerInfo[playerid][pInterior],PlayerInfo[playerid][pMundoVirtual],PlayerInfo[playerid][pNivelArmero],PlayerInfo[playerid][pExpArmero],PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

		format(query, sizeof(query), "UPDATE `usuarios` SET `Posx`='%f', `Posy`='%f', `Posz`='%f',`TiempoJail`='%d',`Agonizando`='%d',`Trabajo`=%d,`Faccion`='%d',`NivelTransportista`='%d',`NivelLadron`='%d',`NivelPiloto`='%d',`ExpPiloto`='%d',`NivelTransportista`='%d',`ExpTransportista`='%d', `TipoCarcel`='%d', `SocioHP`='%d',`Hambre`='%d',`Licencia`='%d',`Semillas`='%d' WHERE `Username`='%s'", PlayerInfo[playerid][@X], PlayerInfo[playerid][@Y], PlayerInfo[playerid][@Z],PlayerInfo[playerid][pTiempoJailS]*1000,PlayerInfo[playerid][Agonizando],PlayerInfo[playerid][pTrabajo],PlayerInfo[playerid][pFaccion],PlayerInfo[playerid][pNivelTransportista],PlayerInfo[playerid][pNivelLadron],PlayerInfo[playerid][pNivelPiloto],PlayerInfo[playerid][pExpPiloto],PlayerInfo[playerid][pNivelTransportista],PlayerInfo[playerid][pExpTransportista],PlayerInfo[playerid][pTipoCarcel],PlayerInfo[playerid][pSocioHP], PlayerInfo[playerid][pHambre], PlayerInfo[playerid][pLicencia], PlayerInfo[playerid][pSemillas],PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

		format(query, sizeof(query), "UPDATE `usuarios` SET `IP`='%s',`Banco`=%d,`CasaID`='%d',`CasaID2`='%d',`EstacionamientoID`='%d',`Estacionado1`='%d',`Estacionado2`='%d',`Estacionado3`='%d',`Estacionado4`='%d',`EnEstacionamiento`='%d',`Moneda`=%d,`EnCasa`='%d',`EnRopero`='%d',`EnGarage`='%d',`TiempoPD`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][IP],PlayerInfo[playerid][pBanco],PlayerInfo[playerid][CasaID],PlayerInfo[playerid][CasaID2],PlayerInfo[playerid][EstacionamientoID],PlayerInfo[playerid][vEstacionado1],PlayerInfo[playerid][vEstacionado2],PlayerInfo[playerid][vEstacionado3],PlayerInfo[playerid][vEstacionado4],PlayerInfo[playerid][pEnEstacionamiento],PlayerInfo[playerid][Moneda],PlayerInfo[playerid][EnCasa],PlayerInfo[playerid][EnRopero],PlayerInfo[playerid][EnGarage],PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

		format(query, sizeof(query), "UPDATE `usuarios` SET `Cargos`='%d',`SkinTrabajo`='%d',`Duty`='%d',`WP0`='%d',`WP1`='%d',`WP2`='%d',`WP3`='%d',`WP4`='%d',`WP5`='%d',`WP6`='%d',`WP7`='%d',`WP8`='%d',`WP9`='%d',`WP10`='%d',`WP11`='%d',`WP12`='%d',`Experiencia`='%d',`TiempoCarcelM`='%d',`TiempoCarcelS`='%d',`NivelMinero`='%d',`ExpMinero`='%d', `PuntosCarrera`='%d' WHERE `Username`='%s'", PlayerInfo[playerid][pCargos],PlayerInfo[playerid][pModelo],PlayerInfo[playerid][pDuty],PlayerInfo[playerid][pWP0],PlayerInfo[playerid][pWP1],PlayerInfo[playerid][pWP2],PlayerInfo[playerid][pWP3],PlayerInfo[playerid][pWP4],PlayerInfo[playerid][pWP5],PlayerInfo[playerid][pWP6],PlayerInfo[playerid][pWP7],PlayerInfo[playerid][pWP8],PlayerInfo[playerid][pWP9],PlayerInfo[playerid][pWP10],PlayerInfo[playerid][pWP11],PlayerInfo[playerid][pWP12],PlayerInfo[playerid][jExperiencia],PlayerInfo[playerid][pTiempoCarcelM],PlayerInfo[playerid][pTiempoCarcelS],PlayerInfo[playerid][pNivelMinero],PlayerInfo[playerid][pExpMinero], PlayerInfo[playerid][pPuntosCarrera],PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

		format(query, sizeof(query), "UPDATE `usuarios` SET `Conexion`='%s',`Sed`='%d',`NivelPescador`='%d',`ExpPescador`='%d',`RopaBasu`='%d',`RopaMedi`='%d',`RopaMeca`='%d',`RopaMine`='%d',`Martillo`='%d',`Destornillador`='%d',`Barreta`='%d',`Balde`='%d', `Regalo`='%d', `Patines`='%d' WHERE `Username`='%s'", PlayerInfo[playerid][jConexion],PlayerInfo[playerid][pSed], PlayerInfo[playerid][pNivelPescador], PlayerInfo[playerid][pExpPescador], RopaBasu[playerid], RopaMedi[playerid], RopaMeca[playerid], RopaMine[playerid], PlayerInfo[playerid][jMartillo], PlayerInfo[playerid][jDestornillador], PlayerInfo[playerid][jBarreta], PlayerInfo[playerid][jBalde], PlayerInfo[playerid][jRegalo], PlayerInfo[playerid][pPatines], PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

		format(query, sizeof(query), "UPDATE `usuarios` SET `ExpCamionero`='%d',`Agenda`='%d',`Crack`=%d,`Medicamentos`=%d,`Marihuana`=%d,`Trabajo2`=%d,`VIP`=%d,`Rango`='%d',`Repuestos`='%d',`NMute`='%d', `totems`=%d, `arrestado`=%d, `horasjugadas`=%d, `TieneEmisora`='%d', `NombreEmisora`='%s' WHERE `Username`='%s'", PlayerInfo[playerid][pExpCamionero],PlayerInfo[playerid][pAgenda],PlayerInfo[playerid][pCrack], PlayerInfo[playerid][pMedicamentos],PlayerInfo[playerid][pMarihuana],PlayerInfo[playerid][pTrabajo2],PlayerInfo[playerid][pVip],PlayerInfo[playerid][pRango],PlayerInfo[playerid][Repuestos],TiempoDuda[playerid],PlayerInfo[playerid][TiempoPD], PlayerInfo[playerid][Totems], PlayerInfo[playerid][arrestado], PlayerInfo[playerid][horasjugadas], Emisoras[playerid][TieneEmisora], Emisoras[playerid][NombreEmisora],PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

		format(query, sizeof(query), "UPDATE `usuarios` SET `Afinidad1`='%d',`Afinidad2`='%d',`Afinidad3`='%d',`Afinidad4`='%d',`Afinidad5`='%d',`Afinidad6`='%d',`Caramelos`='%d',`Materiales`=%d,`NivelCamionero`='%d',`NivelBasurero`='%d',`ExpBasurero`='%d' WHERE `Username`='%s'", PlayerInfo[playerid][pAfinidad1],PlayerInfo[playerid][pAfinidad2],PlayerInfo[playerid][pAfinidad3],PlayerInfo[playerid][pAfinidad4],PlayerInfo[playerid][pAfinidad5],PlayerInfo[playerid][pAfinidad6],PlayerInfo[playerid][pCaramelos],PlayerInfo[playerid][pMateriales],PlayerInfo[playerid][pNivelCamionero],PlayerInfo[playerid][pNivelBasurero],PlayerInfo[playerid][pExpBasurero],PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

		format(query, sizeof(query), "UPDATE `usuarios` SET `EnFC`='%d', `BaneosHechos`='%d', `BaneosDia`='%d', `XE`='%f',`YE`='%f',`ZE`='%f',`NivelMedico`='%d',`ExpMedico`='%d',`Mapper`='%d' WHERE `Username`='%s'", PlayerInfo[playerid][pEnFC],PlayerInfo[playerid][BaneosD],PlayerInfo[playerid][BaneosD2],PlayerInfo[playerid][jPosE_x], PlayerInfo[playerid][jPosE_y], PlayerInfo[playerid][jPosE_z],PlayerInfo[playerid][pNivelMedico],PlayerInfo[playerid][pExpMedico],PlayerInfo[playerid][pMapper],PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		
		format(query, sizeof(query), "UPDATE `usuarios` SET `Puesto1H`='%d',`Puesto2H`='%d',`Puesto3H`='%d',`Puesto4H`='%d',`Puesto5H`='%d',`Puesto6H`='%d',`Puesto7H`='%d',`Puesto8H`='%d',`Puesto9H`='%d',`Puesto10H`='%d',`Puesto11H`='%d',`Puesto12H`='%d',`Puesto13H`='%d',`Puesto14H`='%d',`Puesto15H`='%d' WHERE `Username`='%s'", Halloween[playerid][P1Hora],Halloween[playerid][P2Hora],Halloween[playerid][P3Hora],Halloween[playerid][P4Hora],Halloween[playerid][P5Hora],Halloween[playerid][P6Hora],Halloween[playerid][P7Hora],Halloween[playerid][P8Hora],Halloween[playerid][P9Hora],Halloween[playerid][P10Hora],Halloween[playerid][P11Hora],Halloween[playerid][P12Hora],Halloween[playerid][P13Hora],Halloween[playerid][P14Hora],Halloween[playerid][P15Hora],PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

		format(query, sizeof(query), "UPDATE `usuarios` SET `Puesto16H`='%d',`Puesto17H`='%d',`Puesto18H`='%d',`Puesto19H`='%d',`Puesto20H`='%d',`Puesto21H`='%d',`Puesto22H`='%d',`Puesto23H`='%d',`Puesto24H`='%d',`Puesto25H`='%d',`Puesto26H`='%d',`Puesto27H`='%d',`Puesto28H`='%d',`Puesto29H`='%d',`Puesto30H`='%d' WHERE `Username`='%s'", Halloween[playerid][P16Hora],Halloween[playerid][P17Hora],Halloween[playerid][P18Hora],Halloween[playerid][P19Hora],Halloween[playerid][P20Hora],Halloween[playerid][P21Hora],Halloween[playerid][P22Hora],Halloween[playerid][P23Hora],Halloween[playerid][P24Hora],Halloween[playerid][P25Hora],Halloween[playerid][P26Hora],Halloween[playerid][P27Hora],Halloween[playerid][P28Hora],Halloween[playerid][P29Hora],Halloween[playerid][P30Hora],PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

		format(query, sizeof(query), "UPDATE `usuarios` SET `Puesto31H`='%d',`Puesto32H`='%d' WHERE `Username`='%s'", Halloween[playerid][P31Hora],Halloween[playerid][P32Hora],PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);


		
	}
	return 1;
}
stock LoadNPCs()
{
	ConnectNPC(".Motorman1",".Motorman1");
	ConnectNPC(".Motorman2",".Motorman2");
	ConnectNPC(".Motorman3",".Motorman3");
	ConnectNPC(".Motorman4",".Motorman4");
	ConnectNPC(".Motorman5",".Motorman5");
	ConnectNPC(".Miguel",".Miguel");
	ConnectNPC(".Marcelo",".Marcelo");
	ConnectNPC(".Alejandro",".Alejandro");
	ConnectNPC(".Camello1",".Camello1");
	ConnectNPC(".HippiePepe",".HippiePepe");
	ConnectNPC(".Angelica",".Angelica");
	ConnectNPC(".Jorge",".Jorge");
	ConnectNPC(".Ignacio",".Ignacio");
	ConnectNPC(".Hugo",".Hugo");
	ConnectNPC(".Mao",".Mao");
	ConnectNPC(".Sergio",".Sergio");
	return 1;
}

stock SacarObjeto(playerid,objeto)
{
	switch(objeto)
	{
	    case 1000..10004:
	    {
	        Objeto[playerid] = 0;
            RemovePlayerAttachedObject(playerid,2);
            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	    }
	}
}

stock DarVino(playerid)
{
	TieneVino[playerid] = 1;
    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
}

stock DarCerveza(playerid)
{
    TieneCerveza[playerid] = 1;
    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
}

stock DarSprunk(playerid)
{
    TieneSprunk[playerid] = 1;
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
}

stock DarAquarius(playerid)
{
    TieneAquariu[playerid] = 1;
    SetPlayerAttachedObject(playerid,2,19570,6,0.103999,0.036000,-0.127999,175.999954,-157.499877,174.199905,0.620001,0.515000,0.856000);
}

stock DarPizza(playerid)
{
    TienePizza[playerid] = 1;
    SetPlayerAttachedObject(playerid,2,2702,6,0.125999,0.011999,0.000000,-4.999999,-98.099983,16.600004,1.000000,1.000000,1.000000);
}

stock SiTieneArma(playerid,weaponid)
{
    if(PlayerInfo[playerid][pWP0] == weaponid) { return 1; }
	else if(PlayerInfo[playerid][pWP1] == weaponid) { return 1; }
	else if(PlayerInfo[playerid][pWP2] == weaponid) { return 1; }
	else if(PlayerInfo[playerid][pWP3] == weaponid) { return 1; }
	else if(PlayerInfo[playerid][pWP4] == weaponid) { return 1; }
	else if(PlayerInfo[playerid][pWP5] == weaponid) { return 1; }
	else if(PlayerInfo[playerid][pWP6] == weaponid) { return 1; }
	else if(PlayerInfo[playerid][pWP7] == weaponid) { return 1; }
	else if(PlayerInfo[playerid][pWP8] == weaponid) { return 1; }
	else if(PlayerInfo[playerid][pWP9] == weaponid) { return 1; }
	else if(PlayerInfo[playerid][pWP10] == weaponid) { return 1; }
	else if(PlayerInfo[playerid][pWP11] == weaponid) { return 1; }
	else if(PlayerInfo[playerid][pWP12] == weaponid) { return 1; }
	return 0;
}

stock ObtenerVehiculo(playerid, placa[])
{
	new count;
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!IsPlayerNPC(i))
			{
				if(strcmp(placa, PlayerInfo[i][vpatente], true) == 0 || strcmp(placa, PlayerInfo[i][v2patente], true) == 0 || strcmp(placa, PlayerInfo[i][v3patente], true) == 0 || strcmp(placa, PlayerInfo[i][v4patente], true) == 0)
				{
				    new autoids;
			    	if(strcmp(placa, PlayerInfo[i][vpatente],  true) == 0) { autoids = autos[i];  }
					else if(strcmp(placa, PlayerInfo[i][v2patente], true) == 0) { autoids = autos2[i]; }
					else if(strcmp(placa, PlayerInfo[i][v3patente], true) == 0) { autoids = autos3[i]; }
					else if(strcmp(placa, PlayerInfo[i][v4patente], true) == 0) { autoids = autos4[i]; }
    	       		AutoBuscado[playerid] = autoids;
					format(PatenteBuscada[playerid], 10, placa);
					JugadorBuscado[playerid] = i;
					count = 1;
				}
			}
  		}
	}
	if(count == 0) SendClientMessage(playerid, -1, "La patente solicitada no se encuentra en la base de datos de la policía de San Andreas.");
	return 1;
}

stock randomString2(strDest[], strLen = 10)
{
	while(strLen--)
	strDest[strLen] = random(2) ? (random(26) + (random(2) ? 'A' : 'A')) : (random(10) + 'A');
}

stock randomString(strDest[], strLen = 10)
{
	while(strLen--)
	strDest[strLen] = random(2) ? (random(26) + (random(2) ? 'a' : 'A')) : (random(10) + '0');
}

stock SetVehicleParamsForPlayerEx(vehicleid, playerid, objectivee, doorslocked)
{
	SetVehicleParamsForPlayer(vehicleid, playerid, objective, doorslocked);
	iVehicleObjective[vehicleid][0] = objectivee;
	iVehicleObjective[vehicleid][1] = doorslocked;
}

stock ActualizarDineroPared(f)
{
    new moneytext[200];
	format(moneytext,sizeof(moneytext),"Dinero guardado:\n $%s", Numeros(Fabricas[f][pCantidadDinero]));
	SetDynamicObjectMaterialText(Fabricas[f][tMoney], 0,moneytext, 130, "F25_Bank_Printer_Bold", 25, 1, 0xFFFFFFFF, 0, 1);
}

stock TieneFabrica(bandaid)
{
    for(new i =0; i < MAX_FABRICAS; i++)
    {
        if(Fabricas[i][pBanda] == bandaid)
		{
			return 1;
		}
    }
	return 0;
}

stock ActualizarCantidadChalecos(f)
{
	new stringas[360];
	format(stringas,sizeof(stringas),"{3399FF}Chalecos antibalas{FFFFFF}\nCantidad disponible: {00CC00}%s{FFFFFF}\n\nPulsa {DBED16}'H'{FFFFFF} para equipar uno.",Numeros(Fabricas[f][pChalecos]));
    UpdateDynamic3DTextLabelText(Fabricas[f][pLabel5], COLOR_WHITE, stringas);
}

stock IsVehicleOccupied(carid)
{
    for(new i =0; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerInVehicle(i,carid))
        {
            return 1;
        }
    }
	return 0;
}

stock EstadoCuoco(var){
	new str[52];
	switch(var)
	{
	    case 0: str = " {3399FF}falta trabajador{FFFFFF}";
		case 1: str = " {00CC00}procesando{FFFFFF}";
		case 2: str = " {DBED16}faltan materiales{FFFFFF}";
		case 3: str = " {EB0000}asesinado{FFFFFF}";
		case 4: str = " {3D83CE}esperando recolección{FFFFFF}";
	}
	return str;
}
stock EstadoHo(var){
	new str[200];
	switch(var)
	{
		case 0: str = "{FFFFFF}Pulsa {00CC00}'Y' {FFFFFF}para encender.";
		case 1: str = "{FFFFFF}Pulsa {EB0000}'Y' {FFFFFF}para apagar.";
	}
	return str;
}

stock EstadoCristal(var){
	new str[200];
	switch(var)
	{
		case 0: str = "";
		case 1: str = "\nPulsa {3d83ce}'H'{FFFFFF} para recolectar el cristal";
	}
	return str;
}

stock EstadoH(var){
	new str[32];
	switch(var) {
		case 0: str = "{EB0000}apagada";
		case 1: str = "{00CC00}encendida";	}
	return str;
}

stock GetYesOrNo(var){
	new str[32];
	switch(var) {
		case 0: str = "No";
		case 1: str = "Sí";	}
	return str;
}

Numeros(number)
{
    new numOfPeriods = 0, tmp = number;
    new str[32];
    while(tmp > 1000) {
        tmp = floatround(tmp / 1000, floatround_floor), ++numOfPeriods;
    }
    valstr(str, number);
    new slen = strlen(str);
    for(new i = 1; i != numOfPeriods + 1; ++i) {
        strins(str, ".", slen - 3*i);
    }
    return str;
}
stock GetSexo(var){
	new str[32];
	switch(var)
	{
		case 0: str = "Masculino";
		case 1: str = "Femenino";
	}
	return str;
}

stock AnimacionRobar(playerid)
{
	Forzando[playerid] = 1;
    LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 10000);
    switch(PlayerInfo[playerid][pNivelLadron]) {
    case 1: SetPlayerAttachedObject(playerid,2,18635,6,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000); //Martillo 1
	case 2: SetPlayerAttachedObject(playerid,2,18644,6,0.073999,0.022000,0.000000,-167.300018,0.000000,0.000000,1.000000,1.000000,1.000000); //Destornillador 2
	case 3: SetPlayerAttachedObject(playerid,2,18634,6,0.074999,0.014999,-0.002000,90.999969,-104.199966,7.999999,1.000000,1.000000,1.000000); //Barreta 3
	default: SetPlayerAttachedObject(playerid,2,18634,6,0.074999,0.014999,-0.002000,90.999969,-104.199966,7.999999,1.000000,1.000000,1.000000); //Barreta 3
    }
    TieneHerramientaEnMano[playerid] = 1;
}

stock GetVehicleSpeed(vehicleid)
{
	new Float: V [3];
	GetVehicleVelocity (vehicleid, V [0], V [1], V [2]);
	return floatround(floatsqroot (V [0] * V [0] + V [1] * V [1] + V [2] * V [2]) * 180.00);
}

stock SetVehicleSpeed(vehicleid, Float:speed)
{
    new Float:x1, Float:y1, Float:z1, Float:x2, Float:y2, Float:z2, Float:a;
    GetVehicleVelocity(vehicleid, x1, y1, z1);
    GetVehiclePos(vehicleid, x2, y2, z2);
    GetVehicleZAngle(vehicleid, a); a = 360 - a;
    x1 = (floatsin(a, degrees) * (speed/100) + floatcos(a, degrees) * 0 + x2) - x2;
    y1 = (floatcos(a, degrees) * (speed/100) + floatsin(a, degrees) * 0 + y2) - y2;
    SetVehicleVelocity(vehicleid, x1, y1, z1);
}
stock IsVehicleInRangeOfPoint(vehicleid,Float:range,Float:x,Float:y,Float:z)
{
    return range >= GetVehicleDistanceFromPoint(vehicleid, x,y,z);
}

public ReproducirHalloween(playerid)
{
	if(PlayerInfo[playerid][pSonidos] == 0)
	{
    	return PlayAudioStreamForPlayer(playerid, "http://"AUDIO_HALLOWEEN"");
    }
    return 1;
}

public Reproducir_Robo(playerid)
{
    if(PlayerInfo[playerid][pSonidos] == 0)
	{
    	PlayAudioStreamForPlayer(playerid, "http://"AUDIO_MISION"");
    }
    return 1;
}
stock CombustibleCoche(modelo)
{
    new Gaso;
    switch(modelo)
    {
        case 571:     Gaso = 50;
        case 441:     Gaso = 50;
        case 521:     Gaso = 60;
        case 522:     Gaso = 60;
        case 581:     Gaso = 60;
        case 468:     Gaso = 60;
        case 462:     Gaso = 60;
        case 471:     Gaso = 60;
        case 461:     Gaso = 60;
        case 586:     Gaso = 60;
        case 457:     Gaso = 60;
        case 523:     Gaso = 60;
        case 568:     Gaso = 70;
        case 463:     Gaso = 70;
        case 424:     Gaso = 70;
        case 439:     Gaso = 80;
        case 411:     Gaso = 80;
        case 442:     Gaso = 80;
        case 434:     Gaso = 80;
        case 539:     Gaso = 80;
        case 492:     Gaso = 85;
        case 477:     Gaso = 85;
        case 529:     Gaso = 85;
        case 415:     Gaso = 85;
        case 545:     Gaso = 85;
        case 436:     Gaso = 85;
        case 516:     Gaso = 90;
        case 480:     Gaso = 90;
        case 420:     Gaso = 90;
        case 603:     Gaso = 90;
        case 451:     Gaso = 90;
        case 506:     Gaso = 90;
        case 496:     Gaso = 90;
        case 500:     Gaso = 90;
        case 565:     Gaso = 90;
        case 589:     Gaso = 90;
        case 602:     Gaso = 90;
        case 491:     Gaso = 90;
        case 566:     Gaso = 90;
        case 445:     Gaso = 90;
        case 533:     Gaso = 90;
        case 517:     Gaso = 90;
        case 542:     Gaso = 90;
        case 526:     Gaso = 90;
        case 527:     Gaso = 90;
        case 494:     Gaso = 90;
        case 502:     Gaso = 90;
        case 503:     Gaso = 90;
        case 504:     Gaso = 90;
        case 507:     Gaso = 90;
        case 585:     Gaso = 90;
        case 600:     Gaso = 90;
        case 562:     Gaso = 90;
        case 559:     Gaso = 90;
        case 541:     Gaso = 90;
        case 405:     Gaso = 90;
        case 546:     Gaso = 90;
        case 547:     Gaso = 90;
        case 550:     Gaso = 90;
        case 558:     Gaso = 90;
        case 401:     Gaso = 90;
        case 421:     Gaso = 90;
        case 402:     Gaso = 90;
        case 555:     Gaso = 90;
        case 410:     Gaso = 90;
        case 419:     Gaso = 90;
        case 429:     Gaso = 90;
        case 540:     Gaso = 90;
        case 518:     Gaso = 95;
        case 580:     Gaso = 95;
        case 587:     Gaso = 95;
        case 549:     Gaso = 95;
        case 426:     Gaso = 95;
        case 438:     Gaso = 100;
        case 553:     Gaso = 100;
        case 575:     Gaso = 100;
        case 416:     Gaso = 100;
        case 596:     Gaso = 100;
        case 597:     Gaso = 100;
        case 598:     Gaso = 100;
        case 561:     Gaso = 100;
        case 567:     Gaso = 100;
        case 534:     Gaso = 100;
        case 536:     Gaso = 100;
        case 560:     Gaso = 100;
        case 551:     Gaso = 100;
        case 412:     Gaso = 100;
        case 479:     Gaso = 100;
        case 466:     Gaso = 100;
        case 467:     Gaso = 100;
        case 404:     Gaso = 100;
        case 604:     Gaso = 100;
        case 474:     Gaso = 100;
        case 475:	  Gaso = 100;
        case 458:     Gaso = 100;
        case 453:     Gaso = 100;
        case 595:     Gaso = 100;
        case 446:     Gaso = 100;
        case 493:     Gaso = 100;
        case 452:     Gaso = 100;
        case 473:     Gaso = 100;
        case 576:     Gaso = 100;
        case 454:     Gaso = 100;
        case 484:     Gaso = 100;
        case 543:     Gaso = 110;
        case 556:     Gaso = 110;
        case 557:     Gaso = 110;
        case 444:     Gaso = 110;
        case 535:     Gaso = 110;
        case 605:     Gaso = 110;
        case 418:     Gaso = 110;
        case 409:     Gaso = 110;
        case 495:     Gaso = 120;
        case 525:     Gaso = 120;
        case 588:     Gaso = 120;
        case 552:     Gaso = 120;
        case 582:     Gaso = 120;
        case 489:     Gaso = 120;
        case 478:     Gaso = 120;
        case 579:     Gaso = 120;
        case 554:     Gaso = 120;
        case 423:     Gaso = 120;
        case 422:     Gaso = 120;
        case 483:     Gaso = 120;
        case 593:     Gaso = 120;
        case 440:     Gaso = 130;
        case 400:     Gaso = 130;
        case 499:     Gaso = 140;
        case 413:     Gaso = 140;
        case 609:     Gaso = 140;
        case 482:     Gaso = 140;
        case 459:     Gaso = 140;
        case 601:     Gaso = 140;
        case 414:     Gaso = 150;
        case 563:     Gaso = 150;
        case 486:     Gaso = 160;
        case 470:     Gaso = 170;
        case 578:     Gaso = 180;
        case 524:     Gaso = 200;
        case 456:     Gaso = 200;
        case 487:     Gaso = 200;
        case 497:     Gaso = 200;
        case 408:     Gaso = 210;
        case 443:     Gaso = 210;
        case 403:     Gaso = 210;
        case 515:     Gaso = 220;
        case 514:     Gaso = 220;
        case 431:     Gaso = 220;
        case 437:     Gaso = 220;
        case 532:     Gaso = 220;
        case 455:     Gaso = 230;
        case 508:     Gaso = 160;
        default:      Gaso = 120;
    }
    return Gaso;
}
stock VelocidadMaxAuto(modelo)
{
	new Gaso;
	switch(modelo)
	{
		case 571:     Gaso = 143; // Kart
		case 521:     Gaso = 175; // FCR-900
		case 522:     Gaso = 180; // NRG-500
		case 581:     Gaso = 146; // BF-400
		case 468:     Gaso = 138; // Sanchez
		case 462:     Gaso = 108; // Faggio
		case 471:     Gaso = 106; // Quad
		case 461:     Gaso = 153; // PCJ-600
		case 586:     Gaso = 138; // Wayfarer
		case 457:     Gaso = 91;  // Cabbie
		case 523:	  Gaso = 120; // HPV-1000
		case 568:     Gaso = 141; // Bandito
		case 424:     Gaso = 130; // BF. Injection
		case 439:     Gaso = 162; // Stallion
		case 442:     Gaso = 134; // Romero
		case 434:     Gaso = 160; // Hotknife
		case 492:     Gaso = 135; // GreenWood
		case 529:     Gaso = 143; // Willard
		case 436:     Gaso = 143; // Previon
		case 516:     Gaso = 151; // Nebula
		case 420:     Gaso = 139; // Taxi
		case 451: 	  Gaso = 200; // Turismo
		case 496:  	  Gaso = 156; // Blista Compact
		case 500:     Gaso = 135; // Mesa
		case 560:     Gaso = 162; // Sultan
		case 551:     Gaso = 151; // Merit
		case 412:     Gaso = 162; // Voodo
		case 479:     Gaso = 134; // Regina
		case 466:     Gaso = 141; // Glendale
		case 467:     Gaso = 135; // Oceanic
		case 604:     Gaso = 141; // Glendale Chocado
		case 474:     Gaso = 143; // Hermes
		case 458:     Gaso = 151; // Solair
		case 453:     Gaso = 54;  // Reefer
		case 595:     Gaso = 95;  // Launch
		case 446:     Gaso = 225; // Squalo
		case 493:     Gaso = 150; // Jetmax
		case 452:     Gaso = 141; // Speeder
		case 473:     Gaso = 102; // Dinghy
		case 576:     Gaso = 151; // Tornado
		case 454:     Gaso = 125; // Tropic
		case 484:     Gaso = 57;  // Marquis
		case 543:     Gaso = 145; // Sadler
		case 605:     Gaso = 145; // SadlerShit
		case 418:     Gaso = 111; // Moonbeam
		case 495:     Gaso = 169; // Sandking
		case 588:     Gaso = 103; // Mobile HotDog
		case 579:     Gaso = 151; // Huntley
		case 423:     Gaso = 95;  // Mr. Whoopee
		case 422:     Gaso = 134; // BobCat
		case 483:     Gaso = 118; // Camper
		case 593:     Gaso = 220; // Dodo
		case 440:     Gaso = 131; // Rumpo
		case 408:     Gaso = 170; // Trashmasher
		case 443:     Gaso = 121; // Packer
		case 403:     Gaso = 106; // Linerunner
		case 515:     Gaso = 137; // RoadTrain
		case 514:     Gaso = 116; // Tanker
		case 532:     Gaso = 110; // Combine Harvest
		case 431:     Gaso = 125; // Bus
		case 437:     Gaso = 151; // Coach
		case 455:     Gaso = 151; // Flatbed
		case 524:     Gaso = 125; // Cement Truck
		case 487:     Gaso = 181; // Maverick
		case 470:     Gaso = 151; // Patriot
		case 459:     Gaso = 131; // Rc Van
		case 499:     Gaso = 118; // Benson
		case 413:     Gaso = 106; // Pony
		case 566:     Gaso = 154; // Tahoma
		case 445:     Gaso = 157; // Admiral
		case 533:     Gaso = 160; // Feltzer
		case 517:     Gaso = 151; // Majestic
		case 542:     Gaso = 158; // Clover
		case 526:     Gaso = 151; // Fortune
		case 527:     Gaso = 143; // Cadrona
		case 494:     Gaso = 206; // Hotring
		case 502:     Gaso = 206; // Hotring Racer A
		case 503:     Gaso = 206; // Hotring Racer B
		case 504:     Gaso = 166; // Bloodring Banger
		case 507:     Gaso = 159; // Elegant
		case 585:     Gaso = 147; // Emperor
		case 600:     Gaso = 145; // Picador
		case 562:     Gaso = 171; // Elegy
		case 559:     Gaso = 171; // Jester
		case 541:     Gaso = 195; // Bullet
		case 405:     Gaso = 157; // Sentinel
		case 546:     Gaso = 143; // Intruder
		case 547:     Gaso = 137; // Primo
		case 550:     Gaso = 139; // Sunrise
		case 558:     Gaso = 150; // Uranus
		case 401:     Gaso = 141; // Bravura
		case 421:     Gaso = 147; // Washington
		case 402:     Gaso = 179; // Buffalo
		case 555:     Gaso = 152; // Windsor
		case 410:     Gaso = 124; // Manana
		case 419:     Gaso = 143; // Esperanto
		case 540:     Gaso = 143; // Vicent
		case 518:     Gaso = 158; // Buccaneer
		case 587:     Gaso = 158; // Euros
		case 549:     Gaso = 147; // Tampa
		case 426:     Gaso = 166; // Premier
		case 438:     Gaso = 137; // Cabbie
		case 575:     Gaso = 151; // BroadWay
		case 596:     Gaso = 180; // PATRULLA LSPD
		case 580:     Gaso = 147; // Stafford
		case 416:     Gaso = 147; // Ambulancia
		case 429:	  Gaso = 193; // Banshee
		case 561:     Gaso = 148; // Stratum
		case 567:     Gaso = 166; // Savanna
		case 534:     Gaso = 162; // Remington
		case 480: 	  Gaso = 177; // Comet
		case 415:	  Gaso = 184; // Cheetah
		case 463: 	  Gaso = 178; // Freeway
		case 506:     Gaso = 172; // SuperGT
		case 411:     Gaso = 212; // Infernus
		case 475:	  Gaso = 166; // Sabre
		case 545:	  Gaso = 141; // Hustler
		case 477:	  Gaso = 179; // ZR-350
		case 603: 	  Gaso = 164; // Phoenix
		case 536:     Gaso = 166; // Blade
		case 404:     Gaso = 127; // Perenniel
		case 535:     Gaso = 152; // Slamvan
		case 409:     Gaso = 151; // Stretch
		case 565:     Gaso = 158; // Flash
		case 489:     Gaso = 134; // Rancher
		case 478:     Gaso = 113; // Walton
		case 554:     Gaso = 138; // Yosemite
		case 491:     Gaso = 143; // Virgo
		case 400:     Gaso = 151; // Landstalker
		case 589: 	  Gaso = 156; // Club
		case 578:     Gaso = 125; // DFT-30
		case 414:     Gaso = 101; // Mule
		case 482:     Gaso = 150; // Burrito
		case 602:     Gaso = 180; // Alpha
		case 556:     Gaso = 110; // Monster A
		case 597:     Gaso = 180; // SFPD
		case 598:     Gaso = 180; // LVPD
		case 557:     Gaso = 110; // Monster B
		case 525:     Gaso = 150; // Towtruck
		case 553:     Gaso = 180; // Nevada
		case 444:     Gaso = 110; // Monster (a secas)
		case 552:     Gaso = 150; // Utility Van
		case 441:	  Gaso = 75;  // RC Bandit
		case 539:	  Gaso = 140; // Vortex
		case 582:     Gaso = 140; // Newsvan
		case 609:     Gaso = 140; // Boxville
		case 601:     Gaso = 110; // S.W.A.T Van
		case 563:     Gaso = 160; // Raindance
		case 486:     Gaso = 90;  // Dozer
		case 456:     Gaso = 105; // Yankee
		case 497:     Gaso = 181; // PolMav
		case 508:     Gaso = 140; // Journey
		default:      Gaso = 180; // Resto de vehículos no listados.
    }
	return Gaso;
}
stock GetWeaponNameEx(weaponid)
{
	new wname[35];
	switch (weaponid)
	{
		case 0: wname = "Vacío";
		case 1: wname = "Manopla";
		case 2: wname = "Palo de golf";
		case 3: wname = "Palo de policia";
		case 4: wname = "Cuchillo";
		case 5: wname = "Bate de beisbol";
		case 6: wname = "Pala";
		case 7: wname = "Palo de billar";
		case 8: wname = "Katana";
		case 9: wname = "Motosierra";
		case 10: wname = "Consolador rosa";
		case 11: wname = "Vibrador blanco";
		case 12: wname = "Gran vibrador blanco";
		case 13: wname = "Vibrador plateado";
		case 14: wname = "Ramo de flores";
		case 15: wname = "Baston";
		case 16: wname = "Granada";
		case 17: wname = "Gas Lacrimógeno";
		case 18: wname = "Molotov";
		case 22: wname = "9mm";
		case 23: wname = "9mm con silenciador";
		case 24: wname = "Desert Eagle";
		case 25: wname = "Escopeta";
		case 26: wname = "Sawn Off";
		case 27: wname = "Escopeta de combate";
		case 28: wname = "UZI";
		case 29: wname = "MP5";
		case 30: wname = "AK-47";
		case 31: wname = "M4";
		case 32: wname = "TEC-9";
		case 33: wname = "Rifle";
		case 34: wname = "Sniper";
		case 35: wname = "Lanzacohetes";
		case 36: wname = "Bazooka";
		case 37: wname = "Lanzallamas";
		case 38: wname = "Minigun";
		case 39: wname = "Bomba";
		case 40: wname = "Detonador";
		case 41: wname = "Spray";
		case 42: wname = "Extintor De Incendios";
		case 43: wname = "Camara";
		case 44: wname = "Lentes de visión nocturna";
		case 45: wname = "Gafas termicas";
		case 46: wname = "Paracaídas";
		case 1000: wname="Cerveza x6 unidades";
		case 1001: wname="Vino x6 unidades";
		case 1002: wname="Sprunk x4 unidades";
		case 1429: wname="Tv Antigua";
		case 1518: wname="Tv Moderna";
		case 2912: wname="Caja de Madera";
		case 2190: wname="Computadora";
		case 1788: wname="Videocasetera";
		case 1790: wname="Bluray";
		case 2028: wname="Consola de juegos";
		case 2226: wname="Radio";
		case 1650: wname="Bidón de gasolina";
		case 9003: wname="Balde con agua";
		case 10000: wname="Caja de aquarius de 12 unidades";
        case 10001: wname="Caja de vino de 12 unidades";
        case 10002: wname="Caja de cerveza de 12 unidades";
        case 10003: wname="Caja de sprunk de 12 unidades";
		case 10004: wname="Pizza completa";
		case 2702: wname="Pizza";
		case 19382: wname="Vacío";
		case 18897: wname="Bandana azul";
		case 18898: wname="Bandana verde";
		case 18899: wname="Bandana Rosa";
	 	case 18913: wname="Cubre boca verde";
	 	case 18917: wname="Cubre boca azul";
	 	case 18918: wname="Cubre boca negro";
	 	case 18939: wname="Gorra azul";
     	case 18942: wname="Gorra ploma";
     	case 18943: wname="Gorra verde";
     	case 18961: wname="Gorra camionero";
     	case 18962: wname="Sombrero negro";
     	case 18964: wname="Chullo negro";
 		case 19033: wname="Gafas negras";
     	case 18971: wname="Sombrero blanco y negro";
     	case 18972: wname="Sombrero negro y naranja";
     	case 18974: wname="Antifaz";
     	case 18976: wname="Casco azul";
     	case 18979: wname="Casco morado";
     	case 18978: wname="Casco blanco";
     	case 18640: wname="Pelon";
		case 18645: wname="Casco abierto";
	 	case 18893: wname="Gorra pirata blanca";
     	case 18895: wname="Gorra pirata negra";
     	case 18915: wname="Cubre boca morado";
     	case 18920: wname="Cubre boca amarillo";
     	case 18949: wname="Sombrero verde";
     	case 19022: wname="Lentes negros";
     	case 19023: wname="Lentes azules";
     	case 19025: wname="Lentes morado";
     	case 19029: wname="Lentes verdes";
	 	case 19064: wname="Gorra de papa noel";
	 	case 19069: wname="Gorra negra";
		case 19078: wname="Loro";
     	case 19136: wname="Sombrero y pelo";
     	case 19352: wname="Sombrero elegante";
     	case 19472: wname="Mascara de gas";
     	case 19801: wname="Mascara";
     	case 18963: wname="CJ";
     	case 19317: wname="Guitarra";
     	case 2404: wname="Tabla de Suft T1";
     	case 2405: wname="Tabla de Suft T2";
     	case 2406: wname="Tabla de Suft T3";
     	case 1210: wname="Maletín";
     	case 19318: wname="Bajo";
	}
	return wname;
}
stock ObjetosMaletero(id)
{
    new wname[35];
	switch (id)
	{
	    case 1: wname= "Manopla";
	    case 2: wname= "Palo de golf";
	    case 4: wname= "Cuchillo";
	    case 5: wname= "Bate de beisbol";
	    case 6: wname= "Pala";
	    case 7: wname= "Palo de Billar";
	    case 8: wname= "Katana";
	    case 10: wname= "Consolador rosa";
	    case 11: wname= "Vibrador blanco";
	    case 12: wname= "Gran vibrador blanco";
	    case 13: wname= "Vibrador plateado";
	    case 14: wname= "Ramo de flores";
	    case 15: wname= "Baston";
	    case 16: wname= "Granada";
	    case 43: wname= "Cámara";
	    case 22: wname= "9mm";
	    case 23: wname= "9mm silenciada";
	    case 24: wname= "Desert Eagle";
	    case 25: wname= "Escopeta";
	    case 27: wname= "Escopeta de combate";
	    case 29: wname= "Mp5";
	    case 30: wname= "Ak-47";
	    case 31: wname= "M4";
	    case 33: wname= "Rifle";
    	case 1650: wname="Bidon de combustible";
    }
	return wname;
}
stock DarRopa(playerid)
{
	if(PlayerInfo[playerid][pDuty] == 1 || RopaMeca[playerid] == 1 || RopaMedi[playerid] == 1 || RopaBasu[playerid] == 1 || RopaMine[playerid] == 1)
	{
		if(RopaMedi[playerid] == 1 && PlayerInfo[playerid][pTrabajo] == T_Medico || RopaMedi[playerid] == 1 && PlayerInfo[playerid][pTrabajo2] == T_Medico)
		{
			RopaBasu[playerid] = 0;
			PlayerInfo[playerid][pDuty] = 0;
		    RopaMine[playerid] = 0;
		    RopaMeca[playerid] = 0;
		    return 1;
		}
		else if(RopaBasu[playerid] == 1 && PlayerInfo[playerid][pTrabajo] == T_Basurero || RopaBasu[playerid] == 1 && PlayerInfo[playerid][pTrabajo2] == T_Basurero)
		{
		    RopaMine[playerid] = 0;
		    PlayerInfo[playerid][pDuty] = 0;
		    RopaMedi[playerid] = 0;
		    RopaMeca[playerid] = 0;
		    return 1;
		}
		else if(RopaMeca[playerid] == 1 && PlayerInfo[playerid][pTrabajo] == T_Mecanico || RopaMeca[playerid] == 1 && PlayerInfo[playerid][pTrabajo2] == T_Mecanico)
		{
			switch(PlayerInfo[playerid][jSexo])
			{
				case 1:
				{
					SetPlayerSkin(playerid, 50);
					PlayerInfo[playerid][pDuty] = 0;
					RopaMine[playerid] = 0;
				    RopaMedi[playerid] = 0;
				    RopaBasu[playerid] = 0;
					return 1;
				}
				case 2:
				{
				    RemovePlayerAttachedObject(playerid, 3);
				    RemovePlayerAttachedObject(playerid, 4);
				    RopaMine[playerid] = 0;
				    RopaMedi[playerid] = 0;
				    RopaBasu[playerid] = 0;
					SetPlayerSkin(playerid, 309);
					SetPlayerAttachedObject(playerid,3,19773,1,0.227999,0.077000,0.090000,87.700004,57.700054,109.999763,1.165000,0.429000,0.433999);
					SetPlayerAttachedObject(playerid,4,19627,1,0.243999,0.108997,0.082998,108.500007,147.200057,149.900009,0.595997,0.907997,1.306998);
					PlayerInfo[playerid][pDuty] = 0;
					return 1;
				}
			}
		}
		else if(RopaMine[playerid] == 1 && PlayerInfo[playerid][pTrabajo] == T_Minero || RopaMine[playerid] == 1 && PlayerInfo[playerid][pTrabajo2] == T_Minero)
		{
		    RopaMine[playerid] = 0;
			RopaMedi[playerid] = 0;
			RopaBasu[playerid] = 0;
			RopaMeca[playerid] = 0;
		    SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
		    PlayerInfo[playerid][pDuty] = 0;
		    return 1;
		}
		else if(PlayerInfo[playerid][pDuty] > 0 && PlayerInfo[playerid][pFaccion] == 1)
		{
			if(PlayerInfo[playerid][pAdmin] > ADMIN_LEVEL_GLOBAL) SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
			else
			{
			    switch(PlayerInfo[playerid][jSexo])
			    {
			        case 2: SetPlayerAttachedObject(playerid, 3,19142,1,0.109797,0.053399,-0.002000,0.000000,-2.299998,0.299997,1.046000,0.986998,0.893000);
	            }
            }
            SetPlayerSkin(playerid, PlayerInfo[playerid][pModelo]);
			SetPlayerColor(playerid,COLOR_POLICIA);
			return 1;
		}
	}
	else
	{
		if(PlayerInfo[playerid][jRopa] == 0 && PlayerInfo[playerid][jSexo] == 1) PlayerInfo[playerid][jRopa] = 250;
		else if(PlayerInfo[playerid][jRopa] == 0 && PlayerInfo[playerid][jSexo] == 2) PlayerInfo[playerid][jRopa] = 11;
		SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
		PlayerInfo[playerid][pDuty] = 0;
		RopaBasu[playerid] = 0;
		RopaMine[playerid] = 0;
		RopaMeca[playerid] = 0;
		RopaMedi[playerid] = 0;
	}
	return 1;
}

stock LoadDoors3()
{
    new dStr[250];
    new file[250];
	for(new idx=1; idx<MAX_FRANQUICIA; idx++)
	{
		format(file, sizeof(file), "Puertas/Franquicia/%d.ini", idx);
	    if(fexist(file) && INI_Open(file))
	    {
         	DoorInfoFranquicia[idx][dPickupModel] = INI_ReadInt("PickupModel");
         	DoorInfoFranquicia[idx][dEnterX] = INI_ReadFloat("EnterX");
         	DoorInfoFranquicia[idx][dEnterY] = INI_ReadFloat("EnterY");
         	DoorInfoFranquicia[idx][dEnterZ] = INI_ReadFloat("EnterZ");
         	DoorInfoFranquicia[idx][dExitX]  = INI_ReadFloat("ExitX");
         	DoorInfoFranquicia[idx][dExitY]  = INI_ReadFloat("ExitY");
         	DoorInfoFranquicia[idx][dExitZ]  = INI_ReadFloat("ExitZ");
         	DoorInfoFranquicia[idx][dInt] = INI_ReadInt("Int");
         	DoorInfoFranquicia[idx][dExitVW] = INI_ReadInt("ExitVW");
         	DoorInfoFranquicia[idx][dExitInt] = INI_ReadInt("ExitInt");
         	DoorInfoFranquicia[idx][dEnterVW] = INI_ReadInt("EnterVW");
         	DoorInfoFranquicia[idx][dEnterInt] = INI_ReadInt("EnterInt");

         	INI_ReadString(DoorInfoFranquicia[idx][dName],"Name", 128);
         	format(dStr, sizeof(dStr), "{37db45}%s\n{02b79f}Franquicia %d\n{FFFFFF}Propietario: {00ccff}"OWNER"\n\n{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} o usa {DBED16}/entrar{FFFFFF} para ingresar.",DoorInfoFranquicia[idx][dName], idx);

			CreateDynamic3DTextLabel(dStr, COLOR_WHITE, DoorInfoFranquicia[idx][dEnterX], DoorInfoFranquicia[idx][dEnterY], DoorInfoFranquicia[idx][dEnterZ]+0.75, 23, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
			DoorInfoFranquicia[idx][dPickup] = CreateDynamicPickup(DoorInfoFranquicia[idx][dPickupModel], 23, DoorInfoFranquicia[idx][dEnterX], DoorInfoFranquicia[idx][dEnterY], DoorInfoFranquicia[idx][dEnterZ], 0, 0, -1, 70.0);

			DoorIDTaken3[idx] = 1;

			INI_Close();
		}
	}
	return 1;
}

SaveDoors3()
{
    new file[128];
	for(new i= 1; i < MAX_FRANQUICIA; i++)
	{
        if(DoorIDTaken3[i] == 0) continue;
	    format(file, sizeof(file), "Puertas/Franquicia/%d.ini", i);
	    if(INI_Open(file))
	    {
        	INI_WriteInt("PickupModel",DoorInfoFranquicia[i][dPickupModel]);
        	INI_WriteFloat("EnterX",DoorInfoFranquicia[i][dEnterX]);
        	INI_WriteFloat("EnterY",DoorInfoFranquicia[i][dEnterY]);
        	INI_WriteFloat("EnterZ",DoorInfoFranquicia[i][dEnterZ]);
        	INI_WriteFloat("ExitX",DoorInfoFranquicia[i][dExitX]);
        	INI_WriteFloat("ExitY",DoorInfoFranquicia[i][dExitY]);
        	INI_WriteFloat("ExitZ",DoorInfoFranquicia[i][dExitZ]);
        	INI_WriteInt("Int",DoorInfoFranquicia[i][dInt]);
        	INI_WriteInt("ExitVW",DoorInfoFranquicia[i][dExitVW]);
        	INI_WriteInt("ExitInt",DoorInfoFranquicia[i][dExitInt]);
        	INI_WriteInt("EnterVW",DoorInfoFranquicia[i][dEnterVW]);
        	INI_WriteInt("EnterInt",DoorInfoFranquicia[i][dEnterInt]);
            INI_WriteString("Name", DoorInfoFranquicia[i][dName]);
			INI_Save();
			INI_Close();
		}
	}
	return 1;
}

stock LoadDoors2()
{
    new dStr[250];
    new file[250];
	for(new idx=1; idx<MAX_GOBIERNO; idx++)
	{
		format(file, sizeof(file), "Puertas/Gobierno/%d.ini", idx);
	    if(fexist(file) && INI_Open(file))
	    {
         	DoorInfoGobierno[idx][dPickupModel] = INI_ReadInt("PickupModel");
         	DoorInfoGobierno[idx][dEnterX] = INI_ReadFloat("EnterX");
         	DoorInfoGobierno[idx][dEnterY] = INI_ReadFloat("EnterY");
         	DoorInfoGobierno[idx][dEnterZ] = INI_ReadFloat("EnterZ");
         	DoorInfoGobierno[idx][dExitX]  = INI_ReadFloat("ExitX");
         	DoorInfoGobierno[idx][dExitY]  = INI_ReadFloat("ExitY");
         	DoorInfoGobierno[idx][dExitZ]  = INI_ReadFloat("ExitZ");
         	DoorInfoGobierno[idx][dInt] = INI_ReadInt("Int");
         	DoorInfoGobierno[idx][dExitVW] = INI_ReadInt("ExitVW");
         	DoorInfoGobierno[idx][dExitInt] = INI_ReadInt("ExitInt");
         	DoorInfoGobierno[idx][dEnterVW] = INI_ReadInt("EnterVW");
         	DoorInfoGobierno[idx][dEnterInt] = INI_ReadInt("EnterInt");

         	INI_ReadString(DoorInfoGobierno[idx][dName],"Name", 128);
         	format(dStr, sizeof(dStr), "{37db45}%s\n {FFFFFF}Propietario: {00ccff}Gobierno\n\n{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} o usa {DBED16}/entrar{FFFFFF} para ingresar.",DoorInfoGobierno[idx][dName], idx);

			CreateDynamic3DTextLabel(dStr, COLOR_WHITE, DoorInfoGobierno[idx][dEnterX], DoorInfoGobierno[idx][dEnterY], DoorInfoGobierno[idx][dEnterZ]+0.75, 23, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
			DoorInfoGobierno[idx][dPickup] = CreateDynamicPickup(DoorInfoGobierno[idx][dPickupModel], 23, DoorInfoGobierno[idx][dEnterX], DoorInfoGobierno[idx][dEnterY], DoorInfoGobierno[idx][dEnterZ], 0, 0, -1, 70.0);

			DoorIDTaken2[idx] = 1;

			INI_Close();
		}
	}
	return 1;
}

SaveDoors2()
{
    new file[128];
	for(new i= 1; i < MAX_GOBIERNO; i++)
	{
        if(DoorIDTaken2[i] == 0) continue;
	    format(file, sizeof(file), "Puertas/Gobierno/%d.ini", i);
	    if(INI_Open(file))
	    {
        	INI_WriteInt("PickupModel",DoorInfoGobierno[i][dPickupModel]);
        	INI_WriteFloat("EnterX",DoorInfoGobierno[i][dEnterX]);
        	INI_WriteFloat("EnterY",DoorInfoGobierno[i][dEnterY]);
        	INI_WriteFloat("EnterZ",DoorInfoGobierno[i][dEnterZ]);
        	INI_WriteFloat("ExitX",DoorInfoGobierno[i][dExitX]);
        	INI_WriteFloat("ExitY",DoorInfoGobierno[i][dExitY]);
        	INI_WriteFloat("ExitZ",DoorInfoGobierno[i][dExitZ]);
        	INI_WriteInt("Int",DoorInfoGobierno[i][dInt]);
        	INI_WriteInt("ExitVW",DoorInfoGobierno[i][dExitVW]);
        	INI_WriteInt("ExitInt",DoorInfoGobierno[i][dExitInt]);
        	INI_WriteInt("EnterVW",DoorInfoGobierno[i][dEnterVW]);
        	INI_WriteInt("EnterInt",DoorInfoGobierno[i][dEnterInt]);
            INI_WriteString("Name", DoorInfoGobierno[i][dName]);
			INI_Save();
			INI_Close();
		}
	}
	return 1;
}

stock AbrirGPS(playerid, classes = 0)
{
	if(GPSActivado[playerid] == 1) return CerrarGPS(playerid);
	if(SedOculta[playerid] == 0)
	{
		HidePlayerProgressBar(playerid, Progressbar[playerid][Sed]);
   		HidePlayerProgressBar(playerid, Progressbar[playerid][Hambre]);
    }
	new Float:DyGPSPos[2];
	new Float:posicionPlayerGPS[3];
	GetPlayerPos(playerid, posicionPlayerGPS[0], posicionPlayerGPS[1], posicionPlayerGPS[2]);
	floatMapa3Da2D(posicionPlayerGPS[0], posicionPlayerGPS[1], 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);
	GPSActivado[playerid] = 1;

	TextDrawShowForPlayer(playerid, MapaLateral[0]);
	TextDrawShowForPlayer(playerid, MapaLateral[1]);
	TextDrawShowForPlayer(playerid, MapaLateral[2]);
	TextDrawShowForPlayer(playerid, MapaLateral[3]);

 	for(new i = 0; i < TDGPSCreadoS; i++) TextDrawShowForPlayer(playerid, TextDGPS[i]);

	if(PlayerInfo[playerid][pVip] == 2) SendClientMessage(playerid, -1, "Escribe {DBED16}/ocultar gps{FFFFFF} o pulsa la tecla '{DBED16}N{FFFFFF}'.");
	else SendClientMessage(playerid, -1, "Escribe {DBED16}/ocultar gps{FFFFFF} para ocultar el gps.");
	if(classes == 1) AccionesRol(playerid,"mira su GPS.",20);
	return 1;
}

stock CerrarGPS(playerid)
{
	if(GPSActivado[playerid] == 0) return 1;
	PlayerTextDrawDestroy(playerid, PlayerGPS[playerid]);
	TextDrawHideForPlayer(playerid, MapaLateral[0]);
	TextDrawHideForPlayer(playerid, MapaLateral[1]);
	TextDrawHideForPlayer(playerid, MapaLateral[2]);
	TextDrawHideForPlayer(playerid, MapaLateral[3]);
	GPSActivado[playerid] = 0;
	for(new i = 0; i < MAX_TEXTDRAWS; i++)
	{
		if(TDPGPSCreado[playerid][i] > 0)
		{
			PlayerTextDrawDestroy(playerid, TextDPGPS[playerid][i]);
			PlayerTextDrawDestroy(playerid, TextDPGPS2[playerid][i]);
			TDPGPSCreado[playerid][i] = 0;
		}
 	}
	for(new i = 0; i < TDGPSCreadoS; i++) TextDrawHideForPlayer(playerid, TextDGPS[i]);
    if(SedOculta[playerid] == 0)
	{
	    ShowPlayerProgressBar(playerid, Progressbar[playerid][Sed]);
		ShowPlayerProgressBar(playerid, Progressbar[playerid][Hambre]);
    }
	return 1;
}

stock GetAvailableID()
{
	for(new i = 1; i<MAX_DOORS; i++)
	{
	    if(DoorIDTaken[i] == 0) return i;
	    if(DoorIDTaken2[i] == 0) return i;
	    if(DoorIDTaken3[i] == 0) return i;
	    if(DoorIDTaken3[i] == 0) return i;
	}
	return -1;
}

stock IsValidPickupModel(modelid)
{
    static modeldat[] =
	{
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -128,
        -515899393, -134217729, -1, -1, 33554431, -1, -1, -1, -14337, -1, -33,
      	127, 0, 0, 0, 0, 0, -8388608, -1, -1, -1, -16385, -1, -1, -1, -1, -1,
       -1, -1, -33, -1, -771751937, -1, -9, -1, -1, -1, -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1, -1, -1, 33554431, -25, -1, -1, -1, -1, -1, -1,
       -1073676289, -2147483648, 34079999, 2113536, -4825600, -5, -1, -3145729,
       -1, -16777217, -63, -1, -1, -1, -1, -201326593, -1, -1, -1, -1, -1,
       -257, -1, 1073741823, -133122, -1, -1, -65, -1, -1, -1, -1, -1, -1,
       -2146435073, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1073741823, -64, -1,
       -1, -1, -1, -2635777, 134086663, 0, -64, -1, -1, -1, -1, -1, -1, -1,
       -536870927, -131069, -1, -1, -1, -1, -1, -1, -1, -1, -16384, -1,
       -33554433, -1, -1, -1, -1, -1, -1610612737, 524285, -128, -1,
       2080309247, -1, -1, -1114113, -1, -1, -1, 66977343, -524288, -1, -1, -1,
       -1, -2031617, -1, 114687, -256, -1, -4097, -1, -4097, -1, -1,
       1010827263, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -32768, -1, -1, -1, -1, -1,
       2147483647, -33554434, -1, -1, -49153, -1148191169, 2147483647,
       -100781080, -262145, -57, 134217727, -8388608, -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1, -1, -1, -1048577, -1, -449, -1017, -1, -1, -1,
       -1, -1, -1, -1, -1, -1, -1, -1, -1835009, -2049, -1, -1, -1, -1, -1, -1,
       -8193, -1, -536870913, -1, -1, -1, -1, -1, -87041, -1, -1, -1, -1, -1,
       -1, -209860, -1023, -8388609, -2096897, -1, -1048577, -1, -1, -1, -1,
       -1, -1, -897, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1610612737,
       -3073, -28673, -1, -1, -1, -1537, -1, -1, -13, -1, -1, -1, -1, -1985,
       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1056964609, -1, -1, -1,
       -1, -1, -1, -1, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
       -236716037, -1, -1, -1, -1, -1, -1, -1, -536870913, 3, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -2097153, -2109441, -1, 201326591, -4194304, -1, -1,
       -241, -1, -1, -1, -1, -1, -1, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, -32768, -1, -1, -1, -2, -671096835, -1, -8388609, -66323585, -13,
       -1793, -32257, -247809, -1, -1, -513, 16252911, 0, 0, 0, -131072,
       33554383, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8356095, 0, 0, 0, 0, 0,
       0, -256, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
       -268435449, -1, -1, -2049, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
       92274627, -65536, -2097153, -268435457, 591191935, 1, 0, -16777216, -1,
       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 127
	};
 	if ((modelid >= 0) && ((modelid / 32) < sizeof (modeldat)) && (modeldat[modelid / 32] & (1 << (modelid % 32))))
  	{
   	    return 1;
	}
	switch (modelid)
	{
	    case 0, 331, 333..339, 341, 318..321, 325, 326, 342..344, 346..353, 355..370, 372,
		18632..18645, 18646..18658, 18659..18667, 18668..19299, 19301..19515, 18631:
		{
		    return 1;
		}
		case 19516..19521:
		{
			return 1;
		}
	}
 	return 0;
}

stock LoadDoors4()
{
    new dStr[128];
    new file[128];
	for(new idx=1; idx<MAX_DOORSY; idx++)
	{
		format(file, sizeof(file), "Puertas/NormalesY/%d.ini", idx);
	    if(fexist(file) && INI_Open(file))
	    {
         	DoorInfoNormalY[idx][dPickupModel] = INI_ReadInt("PickupModel");
         	DoorInfoNormalY[idx][dEnterX] = INI_ReadFloat("EnterX");
         	DoorInfoNormalY[idx][dEnterY] = INI_ReadFloat("EnterY");
         	DoorInfoNormalY[idx][dEnterZ] = INI_ReadFloat("EnterZ");
         	DoorInfoNormalY[idx][dExitX]  = INI_ReadFloat("ExitX");
         	DoorInfoNormalY[idx][dExitY]  = INI_ReadFloat("ExitY");
         	DoorInfoNormalY[idx][dExitZ]  = INI_ReadFloat("ExitZ");
         	DoorInfoNormalY[idx][dInt] = INI_ReadInt("Int");
         	DoorInfoNormalY[idx][dExitVW] = INI_ReadInt("ExitVW");
         	DoorInfoNormalY[idx][dExitInt] = INI_ReadInt("ExitInt");
         	DoorInfoNormalY[idx][dEnterVW] = INI_ReadInt("EnterVW");
         	DoorInfoNormalY[idx][dEnterInt] = INI_ReadInt("EnterInt");

         	INI_ReadString(DoorInfoNormalY[idx][dName],"Name", 128);
         	format(dStr, sizeof(dStr), "{37db45}%s{FFFFFF}\n\nPulsa '{DBED16}Y{FFFFFF}' para ingresar.",DoorInfoNormalY[idx][dName], idx);

			CreateDynamic3DTextLabel(dStr, COLOR_WHITE, DoorInfoNormalY[idx][dEnterX], DoorInfoNormalY[idx][dEnterY], DoorInfoNormalY[idx][dEnterZ]+0.75, 23, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
			DoorInfoNormalY[idx][dPickup] = CreateDynamicPickup(DoorInfoNormalY[idx][dPickupModel], 23, DoorInfoNormalY[idx][dEnterX], DoorInfoNormalY[idx][dEnterY], DoorInfoNormalY[idx][dEnterZ], 0, 0, -1, 70.0);

			DoorIDTaken4[idx] = 1;

			INI_Close();
		}
	}
	return 1;
}

stock ExpTrans(playerid)
{
    SetPVarInt(playerid, "Transportista", 0);
	if(PlayerInfo[playerid][pExpTransportista] < 49) {
		if(PlayerInfo[playerid][pVip] > 0) {
			new pago = random(3);
			switch(pago)
			{
				case 0:	{
					PlayerInfo[playerid][pExpTransportista]++;
					SendClientMessage(playerid,0x2d8cecFF,"Habilidad de transportista aumentada +1 punto.");
				}
				case 1:	{
					PlayerInfo[playerid][pExpTransportista]++;
					SendClientMessage(playerid,0x2d8cecFF,"Habilidad de transportista aumentada +1 punto.");
				}
				case 2: {
					PlayerInfo[playerid][pExpTransportista]+= 2;
					SendClientMessage(playerid,0x2d8cecFF,"Habilidad de transportista aumentada +2 puntos.");
				}
			}
		}
		else {
			PlayerInfo[playerid][pExpTransportista]++;
			SendClientMessage(playerid,0x2d8cecFF,"Habilidad de transportista aumentada +1 punto.");
		}
	}
	else if(PlayerInfo[playerid][pExpTransportista] >= 49) {
		if(PlayerInfo[playerid][pNivelTransportista] == 6) return SendClientMessage(playerid,-1,"{00CC00}Llegaste al nivel máximo actual de transportista.");
		PlayerInfo[playerid][pNivelTransportista]++;
		PlayerInfo[playerid][pExpTransportista] = 0;
		SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de transportista.");
	}
	return true;
}

stock ExpPescador(playerid)
{
	switch(PlayerInfo[playerid][pNivelPescador])
	{
		case 1:
		{
			if(PlayerInfo[playerid][pExpPescador] < 49)
			{
				if(PlayerInfo[playerid][pVip] > 0)
				{
					new pago = random(3);
					switch(pago)
					{
						case 0:
						{
							PlayerInfo[playerid][pExpPescador]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de pescador aumentada +1 punto.");
						}
						case 1:
						{
							PlayerInfo[playerid][pExpPescador]+= 2;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de pescador aumentada +2 puntos.");
						}
						case 2:
						{
                        	PlayerInfo[playerid][pExpPescador]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de pescador aumentada +1 punto.");
						}
					}
				}
				else
				{
					new pago2 = random(3);
					switch(pago2)
					{
						case 0:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
						case 1:
						{
							PlayerInfo[playerid][pExpPescador]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de pescador aumentada +1 punto.");
						}
						case 2:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
					}
				}
			}
			else if(PlayerInfo[playerid][pExpPescador] >= 49)
			{
				PlayerInfo[playerid][pNivelPescador]++;
				PlayerInfo[playerid][pExpPescador] = 0;
				SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de pescador.");
			}
		}
		case 2:
		{
			if(PlayerInfo[playerid][pExpPescador] < 49)
			{
				if(PlayerInfo[playerid][pVip] > 0)
				{
					new pago = random(3);
					switch(pago)
					{
						case 0:
						{
							PlayerInfo[playerid][pExpPescador]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de pescador aumentada +1 punto.");
						}
						case 1:
						{
							PlayerInfo[playerid][pExpPescador]+= 2;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de pescador aumentada +2 puntos.");
						}
						case 2:
						{
                        	PlayerInfo[playerid][pExpPescador]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de pescador aumentada +1 punto.");
						}
					}
				}
				else
				{
					new pago2 = random(3);
					switch(pago2)
					{
						case 0:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
						case 1:
						{
							PlayerInfo[playerid][pExpPescador]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de pescador aumentada +1 punto.");
						}
						case 2:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
					}
				}
			}
			else if(PlayerInfo[playerid][pExpPescador] >= 49)
			{
				PlayerInfo[playerid][pNivelPescador]++;
				PlayerInfo[playerid][pExpPescador] = 0;
				SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de pescador.");
			}
		}
		case 3:
		{
			if(PlayerInfo[playerid][pExpPescador] < 49)
			{
				if(PlayerInfo[playerid][pVip] > 0)
				{
					new pago = random(3);
					switch(pago)
					{
						case 0:
						{
							PlayerInfo[playerid][pExpPescador]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de pescador aumentada +1 punto.");
						}
						case 1:
						{
							PlayerInfo[playerid][pExpPescador]+= 2;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de pescador aumentada +2 puntos.");
						}
						case 2:
						{
                        	PlayerInfo[playerid][pExpPescador]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de pescador aumentada +1 punto.");
						}
					}
				}
				else
				{
					new pago2 = random(3);
					switch(pago2)
					{
						case 0:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
						case 1:
						{
							PlayerInfo[playerid][pExpPescador]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de pescador aumentada +1 punto.");
						}
						case 2:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
					}
				}
			}
			else if(PlayerInfo[playerid][pExpPescador] >= 49)
			{
				PlayerInfo[playerid][pNivelPescador]++;
				PlayerInfo[playerid][pExpPescador] = 0;
				SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de pescador.");
			}
		}
		case 4:
		{
			if(PlayerInfo[playerid][pExpPescador] < 49)
			{
				if(PlayerInfo[playerid][pVip] > 0)
				{
					new pago = random(3);
					switch(pago)
					{
						case 0:
						{
							PlayerInfo[playerid][pExpPescador]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de pescador aumentada +1 punto.");
						}
						case 1:
						{
							PlayerInfo[playerid][pExpPescador]+= 2;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de pescador aumentada +2 puntos.");
						}
						case 2:
						{
                        	PlayerInfo[playerid][pExpPescador]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de pescador aumentada +1 punto.");
						}
					}
				}
				else
				{
					new pago2 = random(3);
					switch(pago2)
					{
						case 0:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
						case 1:
						{
							PlayerInfo[playerid][pExpPescador]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de pescador aumentada +1 punto.");
						}
						case 2:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
					}
				}
			}
			else if(PlayerInfo[playerid][pExpPescador] >= 49)
			{
				SendClientMessage(playerid,0x00CC00FF,"Llegaste al nivel máximo como pescador.");
			}
		}
	}
}

stock ExpMedico(playerid)
{
	switch(PlayerInfo[playerid][pNivelMedico])
	{
		case 1:
		{
			if(PlayerInfo[playerid][pExpMedico] < 49)
			{
				if(PlayerInfo[playerid][pVip] > 0)
				{
					new pago = random(3);
					switch(pago)
					{
						case 0:
						{
							PlayerInfo[playerid][pExpMedico]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de médico aumentada +1 punto.");
						}
						case 1:
						{
							PlayerInfo[playerid][pExpMedico]+= 2;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de médico aumentada +2 puntos.");
						}
						case 2:
						{
                        	PlayerInfo[playerid][pExpMedico]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de médico aumentada +1 punto.");
						}
					}
				}
				else
				{
					new pago2 = random(3);
					switch(pago2)
					{
						case 0:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
						case 1:
						{
							PlayerInfo[playerid][pExpMedico]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de médico aumentada +1 punto.");
						}
						case 2:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
					}
				}
			}
			else if(PlayerInfo[playerid][pExpMedico] >= 49)
			{
				PlayerInfo[playerid][pNivelMedico]++;
				PlayerInfo[playerid][pExpMedico] = 0;
				SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de médico.");
			}
		}
		case 2:
		{
			if(PlayerInfo[playerid][pExpMedico] < 49)
			{
				if(PlayerInfo[playerid][pVip] > 0)
				{
					new pago = random(3);
					switch(pago)
					{
						case 0:
						{
							PlayerInfo[playerid][pExpMedico]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de médico aumentada +1 punto.");
						}
						case 1:
						{
							PlayerInfo[playerid][pExpMedico]+= 2;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de médico aumentada +2 puntos.");
						}
						case 2:
						{
                        	PlayerInfo[playerid][pExpMedico]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de médico aumentada +1 punto.");
						}
					}
				}
				else
				{
					new pago2 = random(3);
					switch(pago2)
					{
						case 0:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
						case 1:
						{
							PlayerInfo[playerid][pExpMedico]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de médico aumentada +1 punto.");
						}
						case 2:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
					}
				}
			}
			else if(PlayerInfo[playerid][pExpMedico] >= 49)
			{
				PlayerInfo[playerid][pNivelMedico]++;
				PlayerInfo[playerid][pExpMedico] = 0;
				SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de médico.");
			}
		}
		case 3:
		{
			if(PlayerInfo[playerid][pExpMedico] < 49)
			{
				if(PlayerInfo[playerid][pVip] > 0)
				{
					new pago = random(3);
					switch(pago)
					{
						case 0:
						{
							PlayerInfo[playerid][pExpMedico]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de médico aumentada +1 punto.");
						}
						case 1:
						{
							PlayerInfo[playerid][pExpMedico]+= 2;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de médico aumentada +2 puntos.");
						}
						case 2:
						{
                        	PlayerInfo[playerid][pExpMedico]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de médico aumentada +1 punto.");
						}
					}
				}
				else
				{
					new pago2 = random(3);
					switch(pago2)
					{
						case 0:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
						case 1:
						{
							PlayerInfo[playerid][pExpMedico]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de médico aumentada +1 punto.");
						}
						case 2:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
					}
				}
			}
			else if(PlayerInfo[playerid][pExpMedico] >= 49)
			{
				PlayerInfo[playerid][pNivelMedico]++;
				PlayerInfo[playerid][pExpMedico] = 0;
				SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de médico.");
			}
		}
		case 4:
		{
			if(PlayerInfo[playerid][pExpMedico] < 49)
			{
				if(PlayerInfo[playerid][pVip] > 0)
				{
					new pago = random(3);
					switch(pago)
					{
						case 0:
						{
							PlayerInfo[playerid][pExpMedico]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de médico aumentada +1 punto.");
						}
						case 1:
						{
							PlayerInfo[playerid][pExpMedico]+= 2;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de médico aumentada +2 puntos.");
						}
						case 2:
						{
                        	PlayerInfo[playerid][pExpMedico]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de médico aumentada +1 punto.");
						}
					}
				}
				else
				{
					new pago2 = random(3);
					switch(pago2)
					{
						case 0:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
						case 1:
						{
							PlayerInfo[playerid][pExpMedico]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de médico aumentada +1 punto.");
						}
						case 2:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
					}
				}
			}
			else if(PlayerInfo[playerid][pExpMedico] >= 49)
			{
				SendClientMessage(playerid,0x00CC00FF,"Llegaste al nivel máximo como médico.");
			}
		}
	}
}

stock ExpLadron(playerid)
{
	switch(PlayerInfo[playerid][pNivelLadron])
	{
		case 1:
		{
			if(PlayerInfo[playerid][pExpLadron] < 49)
			{
				if(PlayerInfo[playerid][pVip] > 0)
				{
					new pago = random(3);
					switch(pago)
					{
						case 0:
						{
							PlayerInfo[playerid][pExpLadron]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de ladrón de casas aumentada +1 punto.");
						}
						case 1:
						{
							PlayerInfo[playerid][pExpLadron]+= 2;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de ladrón de casas aumentada +2 puntos.");
						}
						case 2:
						{
                        	PlayerInfo[playerid][pExpLadron]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de ladrón de casas aumentada +1 punto.");
						}
					}
				}
				else
				{
					new pago2 = random(3);
					switch(pago2)
					{
						case 0:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
						case 1:
						{
							PlayerInfo[playerid][pExpLadron]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de ladrón de casas aumentada +1 punto.");
						}
						case 2:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
					}
				}
			}
			else if(PlayerInfo[playerid][pExpLadron] >= 49)
			{
				PlayerInfo[playerid][pNivelLadron]++;
				PlayerInfo[playerid][pExpLadron] = 0;
				SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de ladrón de casas.");
			}
		}
		case 2:
		{
			if(PlayerInfo[playerid][pExpLadron] < 49)
			{
				if(PlayerInfo[playerid][pVip] > 0)
				{
					new pago = random(3);
					switch(pago)
					{
						case 0:
						{
							PlayerInfo[playerid][pExpLadron]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de ladrón de casas aumentada +1 punto.");
						}
						case 1:
						{
							PlayerInfo[playerid][pExpLadron]+= 2;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de ladrón de casas aumentada +2 puntos.");
						}
						case 2:
						{
                        	PlayerInfo[playerid][pExpLadron]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de ladrón de casas aumentada +1 punto.");
						}
					}
				}
				else
				{
					new pago2 = random(3);
					switch(pago2)
					{
						case 0:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
						case 1:
						{
							PlayerInfo[playerid][pExpLadron]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de ladrón de casas aumentada +1 punto.");
						}
						case 2:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
					}
				}
			}
			else if(PlayerInfo[playerid][pExpLadron] >= 49)
			{
				PlayerInfo[playerid][pNivelLadron]++;
				PlayerInfo[playerid][pExpLadron] = 0;
				SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de ladrón de casas.");
			}
		}
		case 3:
		{
			if(PlayerInfo[playerid][pExpLadron] < 49)
			{
				if(PlayerInfo[playerid][pVip] > 0)
				{
					new pago = random(3);
					switch(pago)
					{
						case 0:
						{
							PlayerInfo[playerid][pExpLadron]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de ladrón de casas aumentada +1 punto.");
						}
						case 1:
						{
							PlayerInfo[playerid][pExpLadron]+= 2;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de ladrón de casas aumentada +2 puntos.");
						}
						case 2:
						{
                        	PlayerInfo[playerid][pExpLadron]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de ladrón de casas aumentada +1 punto.");
						}
					}
				}
				else
				{
					new pago2 = random(3);
					switch(pago2)
					{
						case 0:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
						case 1:
						{
							PlayerInfo[playerid][pExpLadron]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de ladrón de casas aumentada +1 punto.");
						}
						case 2:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
					}
				}
			}
			else if(PlayerInfo[playerid][pExpLadron] >= 49)
			{
				PlayerInfo[playerid][pNivelLadron]++;
				PlayerInfo[playerid][pExpLadron] = 0;
				SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de médico.");
			}
		}
		case 4:
		{
			if(PlayerInfo[playerid][pExpLadron] < 49)
			{
				if(PlayerInfo[playerid][pVip] > 0)
				{
					new pago = random(3);
					switch(pago)
					{
						case 0:
						{
							PlayerInfo[playerid][pExpLadron]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de ladrón de casas aumentada +1 punto.");
						}
						case 1:
						{
							PlayerInfo[playerid][pExpLadron]+= 2;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de ladrón de casas aumentada +2 puntos.");
						}
						case 2:
						{
                        	PlayerInfo[playerid][pExpLadron]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de ladrón de casas aumentada +1 punto.");
						}
					}
				}
				else
				{
					new pago2 = random(3);
					switch(pago2)
					{
						case 0:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
						case 1:
						{
							PlayerInfo[playerid][pExpLadron]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de ladrón de casas aumentada +1 punto.");
						}
						case 2:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
					}
				}
			}
			else if(PlayerInfo[playerid][pExpLadron] >= 49)
			{
				SendClientMessage(playerid,0x00CC00FF,"Llegaste al nivel máximo como ladrón de casas.");
			}
		}
	}
}

stock ExpMinero(playerid)
{
	switch(PlayerInfo[playerid][pNivelMinero])
	{
		case 1:
		{
			if(PlayerInfo[playerid][pExpMinero] < 49)
			{
				if(PlayerInfo[playerid][pVip] > 0)
				{
					new pago = random(3);
					switch(pago)
					{
						case 0:
						{
							PlayerInfo[playerid][pExpMinero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de minero aumentada +1 punto.");
						}
						case 1:
						{
							PlayerInfo[playerid][pExpMinero]+= 2;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de minero aumentada +2 puntos.");
						}
						case 2:
						{
                        	PlayerInfo[playerid][pExpMinero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de minero aumentada +1 punto.");
						}
					}
				}
				else
				{
					new pago2 = random(3);
					switch(pago2)
					{
						case 0:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
						case 1:
						{
							PlayerInfo[playerid][pExpMinero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de minero aumentada +1 punto.");
						}
						case 2:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
					}
				}
			}
			else if(PlayerInfo[playerid][pExpMedico] >= 49)
			{
				PlayerInfo[playerid][pNivelMinero]++;
				PlayerInfo[playerid][pExpMinero] = 0;
				SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de minero.");
			}
		}
		case 2:
		{
			if(PlayerInfo[playerid][pExpMinero] < 49)
			{
				if(PlayerInfo[playerid][pVip] > 0)
				{
					new pago = random(3);
					switch(pago)
					{
						case 0:
						{
							PlayerInfo[playerid][pExpMinero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de minero aumentada +1 punto.");
						}
						case 1:
						{
							PlayerInfo[playerid][pExpMinero]+= 2;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de minero aumentada +2 puntos.");
						}
						case 2:
						{
                        	PlayerInfo[playerid][pExpMinero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de minero aumentada +1 punto.");
						}
					}
				}
				else
				{
					new pago2 = random(3);
					switch(pago2)
					{
						case 0:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
						case 1:
						{
							PlayerInfo[playerid][pExpMinero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de minero aumentada +1 punto.");
						}
						case 2:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
					}
				}
			}
			else if(PlayerInfo[playerid][pExpMinero] >= 49)
			{
				PlayerInfo[playerid][pNivelMinero]++;
				PlayerInfo[playerid][pExpMinero] = 0;
				SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de minero.");
			}
		}
		case 3:
		{
			if(PlayerInfo[playerid][pExpMinero] < 49)
			{
				if(PlayerInfo[playerid][pVip] > 0)
				{
					new pago = random(3);
					switch(pago)
					{
						case 0:
						{
							PlayerInfo[playerid][pExpMinero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de minero aumentada +1 punto.");
						}
						case 1:
						{
							PlayerInfo[playerid][pExpMinero]+= 2;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de minero aumentada +2 puntos.");
						}
						case 2:
						{
                        	PlayerInfo[playerid][pExpMinero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de minero aumentada +1 punto.");
						}
					}
				}
				else
				{
					new pago2 = random(3);
					switch(pago2)
					{
						case 0:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
						case 1:
						{
							PlayerInfo[playerid][pExpMinero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de minero aumentada +1 punto.");
						}
						case 2:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
					}
				}
			}
			else if(PlayerInfo[playerid][pExpMinero] >= 49)
			{
				PlayerInfo[playerid][pNivelMinero]++;
				PlayerInfo[playerid][pExpMinero] = 0;
				SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de minero.");
			}
		}
		case 4:
		{
			if(PlayerInfo[playerid][pExpMinero] < 49)
			{
				if(PlayerInfo[playerid][pVip] > 0)
				{
					new pago = random(3);
					switch(pago)
					{
						case 0:
						{
							PlayerInfo[playerid][pExpMinero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de minero aumentada +1 punto.");
						}
						case 1:
						{
							PlayerInfo[playerid][pExpMinero]+= 2;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de minero aumentada +2 puntos.");
						}
						case 2:
						{
                        	PlayerInfo[playerid][pExpMinero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de minero aumentada +1 punto.");
						}
					}
				}
				else
				{
					new pago2 = random(3);
					switch(pago2)
					{
						case 0:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
						case 1:
						{
							PlayerInfo[playerid][pExpMinero]++;
							SendClientMessage(playerid,0x2d8cecFF,"Habilidad de minero aumentada +1 punto.");
						}
						case 2:{ SendClientMessage(playerid,-1,"Esta vez no ganaste puntos de habilidad, consigue membresía VIP para aumentar las posibiliades de ganar habilidad."); }
					}
				}
			}
			else if(PlayerInfo[playerid][pExpMinero] >= 49)
			{
				SendClientMessage(playerid,0x00CC00FF,"Llegaste al nivel máximo como minero.");
			}
		}
	}
}

stock EnComisaria(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid,10.0,1564.5568,-1694.7732,5.8906)) { return 1; }         // LSPD
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-1589.4796,706.9417,-5.6748)) { return 1; }	// SFPD
	else if(IsPlayerInRangeOfPoint(playerid,10.0,2281.4912,2429.3406,3.2734)) { return 1; }     // LVPD
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-1679.5967,705.8658,30.7528)) { return 1; }    // SFPD (H)
	return 0;
}

stock Armado(playerid)
{
	if(PlayerInfo[playerid][pWP0] > 0) { return 1; }
	else if(PlayerInfo[playerid][pWP1] > 0) { return 1; }
	else if(PlayerInfo[playerid][pWP2] > 0) { return 1; }
	else if(PlayerInfo[playerid][pWP3] > 0) { return 1; }
	else if(PlayerInfo[playerid][pWP4] > 0) { return 1; }
	else if(PlayerInfo[playerid][pWP5] > 0) { return 1; }
	else if(PlayerInfo[playerid][pWP6] > 0) { return 1; }
	else if(PlayerInfo[playerid][pWP7] > 0) { return 1; }
	else if(PlayerInfo[playerid][pWP8] > 0) { return 1; }
	//else if(PlayerInfo[playerid][pWP9] > 0) { return 1; }
	else if(PlayerInfo[playerid][pWP10] > 0) { return 1; }
	else if(PlayerInfo[playerid][pWP11] > 0) { return 1; }
	else if(PlayerInfo[playerid][pWP12] > 0) { return 1; }
	return 0;
}
stock Armadosx(playerid)
{
	if(GetPlayerWeapon(playerid) == 25) { return 1; }
	else if(GetPlayerWeapon(playerid) == 27) { return 1; }
	else if(GetPlayerWeapon(playerid) == 29) { return 1; }
	else if(GetPlayerWeapon(playerid) == 30) { return 1; }
	else if(GetPlayerWeapon(playerid) == 31) { return 1; }
	else if(GetPlayerWeapon(playerid) == 33) { return 1; }
	else if(GetPlayerWeapon(playerid) == 16) { return 1; }
	else if(GetPlayerWeapon(playerid) == 38) { return 1; }
	else if(GetPlayerWeapon(playerid) == 26) { return 1; }
	return 0;
}

stock Armados(playerid)
{
	if(PlayerInfo[playerid][pWP0] > 0) { return 1; }
	else if(PlayerInfo[playerid][pWP2] > 0) { return 1; }
	else if(PlayerInfo[playerid][pWP3] > 0) { return 1; }
	else if(PlayerInfo[playerid][pWP4] > 0) { return 1; }
	else if(PlayerInfo[playerid][pWP5] > 0) { return 1; }
	else if(PlayerInfo[playerid][pWP6] > 0) { return 1; }
	else if(PlayerInfo[playerid][pWP7] > 0) { return 1; }
	else if(PlayerInfo[playerid][pWP8] > 0) { return 1; }
	else if(PlayerInfo[playerid][pWP12] > 0) { return 1; }
	return 0;
}

stock EnAscensor(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid,2.0,2117.8604,2415.0771,10.8428)) { Piso[playerid] = 1; return 1;}
	else if(IsPlayerInRangeOfPoint(playerid,2.0,2117.8604,2415.0771,14.8428)) { Piso[playerid] = 2; return 1;}
	else if(IsPlayerInRangeOfPoint(playerid,2.0,2117.8604,2415.0771,18.8428)) { Piso[playerid] = 3; return 1;}
	else if(IsPlayerInRangeOfPoint(playerid,2.0,2117.8604,2415.0771,22.8428)) { Piso[playerid] = 4; return 1;}
	else if(IsPlayerInRangeOfPoint(playerid,2.0,2117.8604,2415.0771,26.8428)) { Piso[playerid] = 5; return 1;}
	else if(IsPlayerInRangeOfPoint(playerid,2.0,2117.8604,2415.0771,30.8428)) { Piso[playerid] = 6; return 1;}
	else if(IsPlayerInRangeOfPoint(playerid,2.0,2117.8604,2415.0771,34.8428)) { Piso[playerid] = 7; return 1;}
	else if(IsPlayerInRangeOfPoint(playerid,2.0,2117.8604,2415.0771,38.8428)) { Piso[playerid] = 8; return 1;}
	else if(IsPlayerInRangeOfPoint(playerid,2.0,2117.8604,2415.0771,42.8428)) { Piso[playerid] = 9; return 1;}
	else if(IsPlayerInRangeOfPoint(playerid,2.0,2117.4490,2416.4680,48.8432)) { Piso[playerid] = 10; return 1;}
	return 0;
}

stock EnCelda(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 2.0,172.0682,1438.3047,1084.8462)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,175.9516,1438.9554,1084.8462)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,179.7587,1438.0883,1084.8462)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,183.7799,1438.3221,1084.8462)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,187.7992,1437.8352,1084.8462)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,191.7423,1437.8417,1084.8462)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,195.5862,1438.1899,1084.8462)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,199.4962,1438.1758,1084.8462)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,199.1098,1460.8811,1084.8462)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,195.6922,1460.6552,1084.8462)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,191.7911,1460.3043,1084.8462)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,187.8092,1460.7742,1084.8462)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,184.1076,1460.0978,1084.8462)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,180.1715,1460.2877,1084.8462)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,176.3600,1460.4807,1084.8462)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,172.5534,1460.7180,1084.8462)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,176.1593,1459.1552,1089.1055)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,179.9729,1459.4087,1089.1055)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,183.8501,1459.5066,1089.1055)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,187.5735,1459.2120,1089.1055)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,191.6875,1460.0719,1089.1055)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,195.4530,1459.6787,1089.1055)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,199.5654,1459.7024,1089.1055)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,199.6154,1438.9169,1089.1055)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,195.7357,1439.0088,1089.1055)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,191.8590,1439.1483,1089.1055)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,188.0030,1438.9355,1089.1055)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,184.1357,1439.2328,1089.1055)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,180.1986,1438.7174,1089.1055)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,176.3905,1439.0450,1089.1055)) { return 1; }
	return 0;
}

stock EnPesca(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 40.0, 890.69623, -2448.19629, -3.40480)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 40.0, 42.95105, -1692.88330, -2.80000)) { return 1; }
	return 0;
}
stock RangoPolicia(playerid)
{
	new rango[20];
    if (PlayerInfo[playerid][pRango] == 8) format(rango, sizeof(rango), "Comisario");
    if (PlayerInfo[playerid][pRango] == 7) format(rango, sizeof(rango), "Inspector");
    if (PlayerInfo[playerid][pRango] == 6) format(rango, sizeof(rango), "Capitán");
    if (PlayerInfo[playerid][pRango] == 5) format(rango, sizeof(rango), "Teniente");
    if (PlayerInfo[playerid][pRango] == 4) format(rango, sizeof(rango), "Sargento");
    if (PlayerInfo[playerid][pRango] == 3) format(rango, sizeof(rango), "Cabo");
    if (PlayerInfo[playerid][pRango] == 2) format(rango, sizeof(rango), "Oficial");
    if (PlayerInfo[playerid][pRango] == 1) format(rango, sizeof(rango), "Cadete");
    return rango;
}

stock EnBinco(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 5.0,  207.2621,-100.3276,1005.2578)) return 1;
	return 0;
}

stock EnVictim(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 5.0,  206.3739,-7.1268,1001.2109)) return 1;
	return 0;
}

stock EnZIP(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 5.0,  161.3221,-83.2561,1001.8047)) return 1;
	return 0;
}

stock EnSubUrban(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 5.0,  203.8483,-43.2616,1001.8047)) return 1;
	return 0;
}

stock EnDidierSachs(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 5.0,  204.2653,-159.3509,1000.5234)) return 1;
	return 0;
}

stock EnProLaps(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 5.0,  207.0368,-129.1776,1003.5078)) return 1;
	return 0;
}

stock EnVerMapa(playerid)
{
	for(new i = 0; i < sizeof(VerMapasPositions);i++)
	if(IsPlayerInRangeOfPoint(playerid,2.0, VerMapasPositions[i][0], VerMapasPositions[i][1], VerMapasPositions[i][2])) return 1;
	return 0;
}

stock EnEntregarse(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 7.0, 240.4520,112.8195,1003.2188)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 7.0, 235.2946,166.3358,1003.0300)) { return 1; }
	return 0;
}

stock EnSexShop(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 7.0, -103.9013,-22.6749,1000.7188)) { return 1; }
	return 0;
}

stock EnGasolinera(playerid)
{
	for(new i = 0; i < sizeof(GasolineraPositions);i++)
	if(IsPlayerInRangeOfPoint(playerid,15.0, GasolineraPositions[i][0], GasolineraPositions[i][1], GasolineraPositions[i][2])) return 1;
	return 0;
}
stock EnCajero(playerid)
{
	for(new i = 0; i < sizeof(OperacionesPositions);i++)
	if(IsPlayerInRangeOfPoint(playerid,2.0, OperacionesPositions[i][0], OperacionesPositions[i][1], OperacionesPositions[i][2])) return 1;
	return 0;
}

stock EnMinero(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 4.0, -729.0903,2410.1563,7.2710)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, -728.3772,2422.0627,7.1895)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, -745.1193,2408.8325,1.3375)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, -740.4136,2392.6699,4.1117)) { return 1; }
	return 0;
}

stock CheckArma(player,id)
{
	if(PlayerInfo[player][pWP1] == id) { return 1; }
	else if(PlayerInfo[player][pWP2] == id) { return 1; }
	else if(PlayerInfo[player][pWP3] == id) { return 1; }
	else if(PlayerInfo[player][pWP4] == id) { return 1; }
	else if(PlayerInfo[player][pWP5] == id) { return 1; }
	else if(PlayerInfo[player][pWP6] == id) { return 1; }
	else if(PlayerInfo[player][pWP7] == id) { return 1; }
	else if(PlayerInfo[player][pWP8] == id) { return 1; }
	else if(PlayerInfo[player][pWP9] == id) { return 1; }
	else if(PlayerInfo[player][pWP10] == id) { return 1; }
	else if(PlayerInfo[player][pWP11] == id) { return 1; }
	else if(PlayerInfo[player][pWP12] == id) { return 1; }
	return 0;
}

stock ObtenerVelocidad(playerid)
{
	new Float:PosX, Float:PosY, Float:PosZ, Float:PlayerSpeedDistance;
	GetVehicleVelocity(GetPlayerVehicleID(playerid), PosX, PosY, PosZ);
	PlayerSpeedDistance = floatmul(floatsqroot(floatadd(floatadd(floatpower( PosX, 2), floatpower(PosY, 2)), floatpower(PosZ, 2))), 170.0);
	new spe = floatround(PlayerSpeedDistance * 1);
	return spe;
}

stock LoadDoors()
{
    new dStr[128];
    new file[128];
	for(new idx=1; idx<MAX_DOORS; idx++)
	{
		format(file, sizeof(file), "Puertas/Normales/%d.ini", idx);
	    if(fexist(file) && INI_Open(file))
	    {
         	DoorInfoNormal[idx][dPickupModel] = INI_ReadInt("PickupModel");
         	DoorInfoNormal[idx][dEnterX] = INI_ReadFloat("EnterX");
         	DoorInfoNormal[idx][dEnterY] = INI_ReadFloat("EnterY");
         	DoorInfoNormal[idx][dEnterZ] = INI_ReadFloat("EnterZ");
         	DoorInfoNormal[idx][dExitX]  = INI_ReadFloat("ExitX");
         	DoorInfoNormal[idx][dExitY]  = INI_ReadFloat("ExitY");
         	DoorInfoNormal[idx][dExitZ]  = INI_ReadFloat("ExitZ");
         	DoorInfoNormal[idx][dInt] = INI_ReadInt("Int");
         	DoorInfoNormal[idx][dExitVW] = INI_ReadInt("ExitVW");
         	DoorInfoNormal[idx][dExitInt] = INI_ReadInt("ExitInt");
         	DoorInfoNormal[idx][dEnterVW] = INI_ReadInt("EnterVW");
         	DoorInfoNormal[idx][dEnterInt] = INI_ReadInt("EnterInt");

         	INI_ReadString(DoorInfoNormal[idx][dName],"Name", 128);
         	format(dStr, sizeof(dStr), "{37db45}%s{FFFFFF}\n\nPulsa {DBED16}'F'{FFFFFF} o usa {DBED16}/entrar{FFFFFF} para ingresar.",DoorInfoNormal[idx][dName], idx);

			CreateDynamic3DTextLabel(dStr, COLOR_WHITE, DoorInfoNormal[idx][dEnterX], DoorInfoNormal[idx][dEnterY], DoorInfoNormal[idx][dEnterZ]+0.75, 23, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
			DoorInfoNormal[idx][dPickup] = CreateDynamicPickup(DoorInfoNormal[idx][dPickupModel], 23, DoorInfoNormal[idx][dEnterX], DoorInfoNormal[idx][dEnterY], DoorInfoNormal[idx][dEnterZ], 0, 0, -1, 70.0);

			DoorIDTaken[idx] = 1;

			INI_Close();
		}
	}
	return 1;
}

stock EnLugarRobo(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 4.0,-2279.4539,-15.9261,38.2993)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 4.0,940.9933,1975.9020,11.6227)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 4,-2395.5342,-17.3052,35.3740)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 4.0,2369.2874,-1129.8945,30.0510)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 4.0,-2730.4619,-58.3389,7.0453)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 4.0,-2731.8608,-163.3383,7.2174)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 4.0,-2628.6865,-178.5047,7.1544)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 4.0,2481.6006,-1988.2667,13.6347)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 4.0,2063.2168,696.6254,11.5381)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 4.0,-1449.5641,2644.4102,56.5616)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 4.0,2450.7051,746.4616,11.5165)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 4.0,2450.3611,746.4504,11.5165)) { return 1; }
	return 0;
}
stock LimpiarCuenta(playerid)
{
    PlayerInfo[playerid][vModelo] = 0;
	PlayerInfo[playerid][vModelo2] = 0;
	PlayerInfo[playerid][vModelo3] = 0;
	PlayerInfo[playerid][vModelo4] = 0;
    PlayerAnticheat[playerid][@Teleport] = 0;
    ValueTimerBugH[playerid] = 1;
    PlayerAnticheat[playerid][@Imunidad] = 0;
    TiempoSexoOfrecido[playerid] = 0;
    Cosechas[playerid][CosechaLugar] = 0;
	Cosechas[playerid][RutaCosecha] = 0;
	Cosechas[playerid][ProgresoCosecha] = 0;
    EventoBolo[playerid] = 0;
    TimeChange[playerid] = 1;
    pweapon[playerid] = 0;
	Piso[playerid] = 0;
    TiempoUso[playerid] = 0;
    BuscandoAmigo[playerid] = 0;
    YaMostroAlertaSed[playerid] = 0;
    Logros[playerid][Cerraduras] = 0;
    Logros[playerid][Salvados] = 0;
    Logros[playerid][Medicamentos] = 0;
    Logros[playerid][Crack] = 0;
    Logros[playerid][Carreras] = 0;
    Logros[playerid][Porros] = 0;
    Logros[playerid][Marihuana] = 0;
    YaPuedeCargarValores[playerid] = 0;
    EnAsalto[playerid] = 0;
 	SalioTD[playerid] = 0;
	Bolsa[playerid] = 0;
	YaRobastes2[playerid] = 0;
	TieneBolso[playerid] = 0;
    EnAsalto[playerid] = 0;
	Grupo[playerid] = 0;
    YaRobastes[playerid] = 0;
	YaRobastes2[playerid] = 0;
    EnAsalto[playerid] = 0;
    Forzando[playerid] = 0;
    PuertaID[playerid] = 0;
    TieneHerramientaEnMano[playerid] = 0;
    retornaprendas[playerid] = 0;
    SalaMedica[playerid] = 0;
    MedicoServicioHospital[playerid] = 0;
    TieneGPSActivo[playerid] = 0;
    countico[playerid] = 0;
    Specteando[playerid] = 0;
    BuyingCar[playerid] = 0;
    MensajeSinGasoEnviado[playerid] = 0;
	PlayerInfo[playerid][BaneosD] = 0;
	PlayerInfo[playerid][BaneosD2] = gettime();
    TiempoBolso[playerid] = 0;
    TipoPrision[playerid] = 0;
    format(PlayerInfo[playerid][ContraTemporal], 128, "dkaodowqpeoqñdasldas-dlsad");
    TieneBarril[playerid] = 0;
    TiempoEntrada[playerid] = 0;
    LlamadaTipo[playerid] = 0;
	TieneCrisol[playerid] = 0;
    HornoUsarP[playerid] = 0;
    ContraVacia[playerid] = 0;
    TraeDinero[playerid] = 0;
	FabricaMedica[playerid] = 0;
    KillTimer(DANOF[playerid]);
    ESPROSTI[playerid] = -1;
    SexoOral[playerid] = -1;
    precioofertax[playerid] = 0;
    CaidaTaxi[0][playerid] = 0;
    CaidaTaxi[1][playerid] = 0;
    CaidaTaxi[2][playerid] = 0;
    MinutoLlamada[playerid] = 0;
    YoLlame[playerid] = 0;
    WATERSOUND[playerid] = 0;
    CriminalAceptado[playerid] = 0;
    LoggedYet[playerid] = 0;
    TieneEncargo[playerid] = 0;
	TiempoCriminal[playerid] = 0;
	Colega[playerid] = INVALID_PLAYER_ID;
	Invito[playerid] = INVALID_PLAYER_ID;
	Invitador[playerid] = INVALID_PLAYER_ID;
	Criminal[playerid] = INVALID_PLAYER_ID;
	TiempoColega[playerid] = 0;
	TomoEncargo[playerid] = 0;
    PlayerInfo[playerid][PaisDistinto] = 0;
	TiempoGPS[playerid] = 0;
	FlashRef[playerid] = 0;
	FlashRef2[playerid] = 0;
    ComprandoPrendas[playerid] = 0;
    RecienDuda[playerid] = 0;
    Reportado1[playerid] = INVALID_PLAYER_ID;
	Reportado2[playerid] = INVALID_PLAYER_ID;
	Reportado3[playerid] = INVALID_PLAYER_ID;
	Reportado4[playerid] = INVALID_PLAYER_ID;
	Reportado5[playerid] = INVALID_PLAYER_ID;
    TieneSombrero[playerid] = 0;
    TiempoCaramelos[playerid] = 0;
    PlayerInfo[playerid][pEnFC] = 0;
    Halloween[playerid][P1Hora] = 0;
	Halloween[playerid][P2Hora] = 0;
	Halloween[playerid][P3Hora] = 0;
	Halloween[playerid][P4Hora] = 0;
	Halloween[playerid][P5Hora] = 0;
	Halloween[playerid][P6Hora] = 0;
	Halloween[playerid][P7Hora] = 0;
	Halloween[playerid][P8Hora] = 0;
	Halloween[playerid][P9Hora] = 0;
	Halloween[playerid][P10Hora] = 0;
	Halloween[playerid][P11Hora] = 0;
	Halloween[playerid][P12Hora] = 0;
	Halloween[playerid][P13Hora] = 0;
	Halloween[playerid][P14Hora] = 0;
	Halloween[playerid][P15Hora] = 0;
	Halloween[playerid][P16Hora] = 0;
	Halloween[playerid][P17Hora] = 0;
	Halloween[playerid][P18Hora] = 0;
	Halloween[playerid][P19Hora] = 0;
	Halloween[playerid][P20Hora] = 0;
	Halloween[playerid][P21Hora] = 0;
	Halloween[playerid][P2Hora] = 0;
	Halloween[playerid][P23Hora] = 0;
	Halloween[playerid][P24Hora] = 0;
	Halloween[playerid][P25Hora] = 0;
	Halloween[playerid][P26Hora] = 0;
	Halloween[playerid][P27Hora] = 0;
	Halloween[playerid][P28Hora] = 0;
	Halloween[playerid][P29Hora] = 0;
	Halloween[playerid][P30Hora] = 0;
	Halloween[playerid][P31Hora] = 0;
	Halloween[playerid][P32Hora] = 0;
    PlayerInfo[playerid][pHechizado] = 0;
    PlayerInfo[playerid][pCaramelos] = 0;
    PlayerInfo[playerid][pAfinidad1] = 0;
	PlayerInfo[playerid][pAfinidad2] = 0;
	PlayerInfo[playerid][pAfinidad3] = 0;
	PlayerInfo[playerid][pAfinidad4] = 0;
	PlayerInfo[playerid][pAfinidad5] = 0;
	PlayerInfo[playerid][pAfinidad6] = 0;
	EstaDomiciliaria[playerid] = 0;
	EnParacaidas[playerid] = 0;
    PrendaMarcada[playerid] = 0;
    BaldeAgua[playerid] = 0;
	PermisoSalon[playerid] = false;
	Boleto[playerid] = false;
	Escuchando[playerid] = true;
	TieneMicrofono[playerid] = 0;
	TienePorro[playerid] = 0;
	TieneSprunk[playerid] = 0;
	TieneAquariu[playerid] = 0;
	TienePizza[playerid] = 0;
	TieneVino[playerid] = 0;
	Frecuencia[playerid] = 0;
	TieneCerveza[playerid] = 0;
	PlayerInfo[playerid][TiempoPD] = 0;
	VidaCheat[playerid] = 0;
	ChalecoCheat[playerid] = 0;
	SedOculta[playerid] = 0;
    ServidorOculto[playerid] = 0;
    IntroOculta[playerid] = 0;
    NPrendas[playerid] = 0;
    UsandoP[playerid] = 0;
    PickupRopa[playerid] = 0;
    NombresOcultos[playerid] = 0;
    TipoCargo[playerid] = 0;
	Boletos[playerid] = 0;
	EstaEnBus[playerid] = 0;
	tipogrua[playerid] = 0;
	RecorridoPescador[playerid] = 0;
	VWTemporal[playerid] = 0;
	rocajugador[playerid] = 0;
	permisopesca[playerid] = 0;
	ViendoPantalla[playerid] = 0;
	GPSActivado[playerid] = 0;
	ViendoGPS[playerid] = 0;
	PuntoCX[playerid] = 0;
	PuntoCY[playerid] = 0;
	PuntoCZ[playerid] = 0;
	PuntoGPSX[playerid] = 0;
	PuntoGPSY[playerid] = 0;
	PuntoGPSZ[playerid] = 0;
	PuntoBaX[playerid] = 0;
	PuntoBaY[playerid] = 0;
	PuntoBaZ[playerid] = 0;
	PuntoBaA[playerid] = 0;
	PuntoTraX[playerid] = 0;
	PuntoTraY[playerid] = 0;
	PuntoTraZ[playerid] = 0;
	RopaBasu[playerid] = 0;
	RopaMedi[playerid] = 0;
	RopaMeca[playerid] = 0;
	RopaMine[playerid] = 0;
	UsandoObj[playerid] = 0;
	UsandoObj2[playerid] = 0;
	TiempoAgresor[playerid] = 0;
	NoQuitar[playerid] = 0;
	cavion[playerid] = 0;
	RobadoReciente[playerid] = 0;
	TrabajoAvion[playerid] = 0;
	VarAvion[playerid] = 0;
	CargosRobar[playerid] = 0;
	CagoSeguro[playerid] = 0;
	Robando[playerid] = 0;
	RobandoTienda[playerid] = 0;
	autos[playerid] = 0;
	autos2[playerid] = 0;
	autos3[playerid] = 0;
	autos4[playerid] = 0;
	EnLlamada[playerid] = 0;
	EnLlamada911[playerid] = -1;
	IDReporte[playerid] = -1;
	HCalculo[playerid] = 0;
	VarBaul[playerid] = 0;
	Quitando[playerid] = 0;
	CColocado[playerid] = 0;
	EnCombate[playerid] = 0;
	TiempoCombate[playerid] = 0;
	Entrando[playerid] = 0;
	AvisoTP[playerid] = 0;
	Transportistas[playerid][Ruta] = 0;
	Avisos[playerid] = 0;
	AutoBuscado[playerid] = 0;
	Objeto[playerid] = 0;
	Advertido[playerid] = 0;
	GolpesAdv[playerid] = 0;
	MRepuestos[playerid] = 0;
	VRepuestos[playerid] = 0;
	MConductor[playerid] = 0;
	LlamadaMeca[playerid] = 0;
	Monto[playerid] = 0;
	EnTaxi[playerid] = 0;
	NombreErroneo[playerid] = 0;
	LlamadaTaxi[playerid] = 0;
	Localizando[playerid] = 0;
	CargandoC[playerid] = 0;
	recogiendo[playerid] = 0;
	RecorridoBasu[playerid] = 0;
	PBasura[playerid] = 0;
	PCosechar[playerid] = 0;
	Cosechando[playerid] = 0;
	TipoCosecha[playerid] = 0;
	Cambiando[playerid] = 0;
	Muriendo[playerid] = 0;
	TiempoDuda[playerid] = 0;
	TiempoDarDinero[playerid] = 0;
	TiempoRef[playerid] = 0;
	TiempoCLUB[playerid] = 0;
	TiempoComputadora[playerid] = 0;
	Bidon[playerid] = 0;
	Jail[playerid] = 0;
	San[playerid] = 0;
	EnPatrulla[playerid] = 0;
	BajandoV[playerid] = 1;
	CanalDudas[playerid] = 1;
	Ficha[playerid] = 2;
	AutoJugador[playerid] = 0;
	Manejando[playerid] = 0;
	AvisosAuto[playerid] = 0;
	EnAuto[playerid] = 0;
	CheatAlerta[playerid] = 0;
	EnTuto[playerid] = 0;
	rocajugador[playerid] = 19382;
	Carga[playerid] = 0;
	Mats1[playerid] = 0;
	Mats2[playerid] = 0;
	Mats3[playerid] = 0;
	tviaje[playerid] = 0;
	BigEar[playerid] = 0;
	DudaOff[playerid] = 0;
	Curando[playerid] = 0;
	Esposando[playerid] = 0;
	MedicoCP2[playerid] = 0;
	Reanimado[playerid] = 0;
	PrimerSpawn[playerid] = 0;
	TiempoCrack[playerid] = 0;
	TiempoLlenar[playerid] = 0;
	TiempoReparar[playerid] = 0;
	TiempoAcademia[playerid] = 0;
	armaofertada[playerid] = 0;
	dineropedido[playerid] = 0;
	PacienteAmbu[playerid] = 0;
	ConsumirCrack[playerid] = 0;
	VariableCaido[playerid] = 0;
	JugadorLogeado[playerid] = 0;
	MarcadoMedicos[playerid] = 0;
	LlamadaMedicos[playerid] = 0;
	TelefonoEstado[playerid] = 0;
	TiempoMedicamentos[playerid] = 0;
	ConsumirMedicamento[playerid] = 0;
	Consumible[playerid] = 0;
	EstadoRadio[playerid] = 1;
	CamionID[playerid] = INVALID_VEHICLE_ID;
	Paciente[playerid] = INVALID_PLAYER_ID;
	GuardaEspalda[playerid] = INVALID_PLAYER_ID;
	Deposito[playerid] = INVALID_PLAYER_ID;
	ofertador[playerid] = INVALID_PLAYER_ID;
	ofertador[playerid] = INVALID_PLAYER_ID;
	Agresor[playerid] = INVALID_PLAYER_ID;
	LeOfreci[playerid] = INVALID_PLAYER_ID;
	AvionID[playerid] = INVALID_VEHICLE_ID;
	VerBaul[playerid] = INVALID_PLAYER_ID;
	EnAuto[playerid] = INVALID_PLAYER_ID;
	reportar[playerid] = INVALID_PLAYER_ID;
	Taxista[playerid] = INVALID_PLAYER_ID;
	Pasajero[playerid] = INVALID_PLAYER_ID;
	Mecanico[playerid] = INVALID_PLAYER_ID;
	Oficial[playerid] = INVALID_PLAYER_ID;
	Companero[playerid] = INVALID_PLAYER_ID;
	SetPVarInt(playerid, "Camionero", 0);
	SetPVarInt(playerid, "Transportista", 0);
	SetPVarInt(playerid, "TempName", 0);
	KillTimer(TM[playerid]);
	KillTimer(LCHAT[playerid]);
	KillTimer(CLlamada[playerid]);
	KillTimer(llamadasonido1[playerid]);
	KillTimer(llamadasonido2[playerid]);
	KillTimer(asdtren[playerid]);
	KillTimer(asd[playerid]);
	Emisoras[playerid][TieneEmisora] = 0;
	Emisoras[playerid][EmisoraID]= -1;
	Emisoras[playerid][TransEmisora] = 0;
	Emisoras[playerid][CabinaOcupada] = -1;
	PlayerInfo[playerid][piezas] = 0;
	PlayerInfo[playerid][pSobreRuedas] = 0;
	PlayerInfo[playerid][pAutomedicado] = 0;
	PlayerInfo[playerid][pRemedios] = 0;
	PlayerInfo[playerid][pAdicto] = 0;
	PlayerInfo[playerid][pCracks] = 0;
	PlayerInfo[playerid][pMedico] = 0;
	PlayerInfo[playerid][pReanimados] = 0;
	PlayerInfo[playerid][pTortuga] = 0;
	PlayerInfo[playerid][pCasa] = 0;
	PlayerInfo[playerid][pRestaurante] = 0;
	PlayerInfo[playerid][pOficina] = 0;
	PlayerInfo[playerid][pCerrajero] = 0;
	PlayerInfo[playerid][pForzadas] = 0;
	PlayerInfo[playerid][pObj] = 0;
	PlayerInfo[playerid][pfOffsetX] = 0;
	PlayerInfo[playerid][pfOffsetY] = 0;
	PlayerInfo[playerid][pfOffsetZ] = 0;
	PlayerInfo[playerid][pfRotX] = 0;
	PlayerInfo[playerid][pfRotY] = 0;
	PlayerInfo[playerid][pfRotZ] = 0;
	PlayerInfo[playerid][pfScaleX] = 0;
	PlayerInfo[playerid][pfScaleY] = 0;
	PlayerInfo[playerid][pfScaleZ] = 0;
	PlayerInfo[playerid][pObj2] = 0;
	PlayerInfo[playerid][pfOffsetX2] = 0;
	PlayerInfo[playerid][pfOffsetY2] = 0;
	PlayerInfo[playerid][pfOffsetZ2] = 0;
	PlayerInfo[playerid][pfRotX2] = 0;
	PlayerInfo[playerid][pfRotY2] = 0;
	PlayerInfo[playerid][pfRotZ2] = 0;
	PlayerInfo[playerid][pfScaleX2] = 0;
	PlayerInfo[playerid][pfScaleY2] = 0;
	PlayerInfo[playerid][pfScaleZ2] = 0;
	PlayerInfo[playerid][pLNumero] = 0;
	PlayerInfo[playerid][pPasajeros] = 0;
	PlayerInfo[playerid][pVwCama] = 0;
	PlayerInfo[playerid][pDineroRobado] = 0;
	PlayerInfo[playerid][pAtendido] = 0;
	PlayerInfo[playerid][pMedicina] = 0;
	PlayerInfo[playerid][pEnfermedad] = 0;
	PlayerInfo[playerid][pCama] = 0;
	PlayerInfo[playerid][vBaul] = 0;
	PlayerInfo[playerid][vBaul2] = 0;
	PlayerInfo[playerid][vBaul3] = 0;
	PlayerInfo[playerid][vBaul4] = 0;
	PlayerInfo[playerid][vBaul5] = 0;
	PlayerInfo[playerid][vBaul6] = 0;
	PlayerInfo[playerid][vBaul7] = 0;
	PlayerInfo[playerid][vBaul8] = 0;
	PlayerInfo[playerid][vBaul9] = 0;
	PlayerInfo[playerid][vBaul10] = 0;
	PlayerInfo[playerid][v2Baul] = 0;
	PlayerInfo[playerid][v2Baul2] = 0;
	PlayerInfo[playerid][v2Baul3] = 0;
	PlayerInfo[playerid][v2Baul4] = 0;
	PlayerInfo[playerid][v2Baul5] = 0;
	PlayerInfo[playerid][v2Baul6] = 0;
	PlayerInfo[playerid][v2Baul7] = 0;
	PlayerInfo[playerid][v2Baul8] = 0;
	PlayerInfo[playerid][v2Baul9] = 0;
	PlayerInfo[playerid][v2Baul10] = 0;
	//
	PlayerInfo[playerid][v3Baul] = 0;
	PlayerInfo[playerid][v3Baul2] = 0;
	PlayerInfo[playerid][v3Baul3] = 0;
	PlayerInfo[playerid][v3Baul4] = 0;
	PlayerInfo[playerid][v3Baul5] = 0;
	PlayerInfo[playerid][v3Baul6] = 0;
	PlayerInfo[playerid][v3Baul7] = 0;
	PlayerInfo[playerid][v3Baul8] = 0;
	PlayerInfo[playerid][v3Baul9] = 0;
	PlayerInfo[playerid][v3Baul10] = 0;
	//
	PlayerInfo[playerid][v4Baul] = 0;
	PlayerInfo[playerid][v4Baul2] = 0;
	PlayerInfo[playerid][v4Baul3] = 0;
	PlayerInfo[playerid][v4Baul4] = 0;
	PlayerInfo[playerid][v4Baul5] = 0;
	PlayerInfo[playerid][v4Baul6] = 0;
	PlayerInfo[playerid][v4Baul7] = 0;
	PlayerInfo[playerid][v4Baul8] = 0;
	PlayerInfo[playerid][v4Baul9] = 0;
	PlayerInfo[playerid][v4Baul10] = 0;
	//
	PlayerInfo[playerid][pTiempoJailS] = 0;
	PlayerInfo[playerid][vSeguro] = 0;
	PlayerInfo[playerid][vSeguro2] = 0;
	PlayerInfo[playerid][vSeguro3] = 0;
	PlayerInfo[playerid][vSeguro4] = 0;
	PlayerInfo[playerid][vAAlarma] = 0;
	PlayerInfo[playerid][vAAlarma2] = 0;
	PlayerInfo[playerid][vAAlarma3] = 0;
	PlayerInfo[playerid][vAAlarma4] = 0;
	PlayerInfo[playerid][pBan] = 0;
	PlayerInfo[playerid][pTrabajo] = 0;
	PlayerInfo[playerid][pSocioHP] = 0;
	PlayerInfo[playerid][pTipoCarcel] = 0;
	PlayerInfo[playerid][pTiempoCarcelM] = 0;
	PlayerInfo[playerid][pTiempoCarcelS] = 0;
	PlayerInfo[playerid][pNivelArmero] = 0;
	PlayerInfo[playerid][pMateriales] = 0;
	PlayerInfo[playerid][pSemillas] = 0;
	PlayerInfo[playerid][pExpArmero] = 0;
	PlayerInfo[playerid][pNivelPiloto] = 0;
	PlayerInfo[playerid][pExpPiloto] = 0;
	PlayerInfo[playerid][pNivelMinero] = 0;
	PlayerInfo[playerid][pExpMinero] = 0;
	PlayerInfo[playerid][pExpCamionero] = 0;
	PlayerInfo[playerid][pNivelCamionero] = 0;
	PlayerInfo[playerid][pExpBasurero] = 0;
	PlayerInfo[playerid][pNivelBasurero] = 0;
	PlayerInfo[playerid][Totems] = 0;
	PlayerInfo[playerid][arrestado] = 0;
	PlayerInfo[playerid][horasjugadas] = 0;
	PlayerInfo[playerid][pNumero] = 0;
	PlayerInfo[playerid][pGuia] = 0;
	PlayerInfo[playerid][pSonidos] = 0;
	PlayerInfo[playerid][pMuteos] = 0;
	PlayerInfo[playerid][pBarras] = 0;
	PlayerInfo[playerid][pAlerta] = 0;
	PlayerInfo[playerid][pVelocimetro] = 0;
	PlayerInfo[playerid][pWP0] = 0;
	PlayerInfo[playerid][pWP1] = 0;
	PlayerInfo[playerid][pWP2] = 0;
	PlayerInfo[playerid][pWP3] = 0;
	PlayerInfo[playerid][pWP4] = 0;
	PlayerInfo[playerid][pWP5] = 0;
	PlayerInfo[playerid][pWP6] = 0;
	PlayerInfo[playerid][pWP7] = 0;
	PlayerInfo[playerid][pWP8] = 0;
	PlayerInfo[playerid][pWP9] = 0;
	PlayerInfo[playerid][pWP10] = 0;
	PlayerInfo[playerid][pWP11] = 0;
	PlayerInfo[playerid][pWP12] = 0;
	PlayerInfo[playerid][vComponentes0] = 0;
	PlayerInfo[playerid][vComponentes1] = 0;
	PlayerInfo[playerid][vComponentes2] = 0;
	PlayerInfo[playerid][vComponentes3] = 0;
	PlayerInfo[playerid][vComponentes4] = 0;
	PlayerInfo[playerid][vComponentes5] = 0;
	PlayerInfo[playerid][vComponentes6] = 0;
	PlayerInfo[playerid][vComponentes7] = 0;
	PlayerInfo[playerid][vComponentes8] = 0;
	PlayerInfo[playerid][vComponentes9] = 0;
	PlayerInfo[playerid][vComponentes10] = 0;
	PlayerInfo[playerid][vComponentes11] = 0;
	PlayerInfo[playerid][vComponentes12] = 0;
	PlayerInfo[playerid][vComponentes13] = 0;
	PlayerInfo[playerid][vpatente] = 0;
	PlayerInfo[playerid][v2Componentes0] = 0;
	PlayerInfo[playerid][v2Componentes1] = 0;
	PlayerInfo[playerid][v2Componentes2] = 0;
	PlayerInfo[playerid][v2Componentes3] = 0;
	PlayerInfo[playerid][v2Componentes4] = 0;
	PlayerInfo[playerid][v2Componentes5] = 0;
	PlayerInfo[playerid][v2Componentes6] = 0;
	PlayerInfo[playerid][v2Componentes7] = 0;
	PlayerInfo[playerid][v2Componentes8] = 0;
	PlayerInfo[playerid][v2Componentes9] = 0;
	PlayerInfo[playerid][v2Componentes10] = 0;
	PlayerInfo[playerid][v2Componentes11] = 0;
	PlayerInfo[playerid][v2Componentes12] = 0;
	PlayerInfo[playerid][v2Componentes13] = 0;
	PlayerInfo[playerid][v2patente] = 0;
	PlayerInfo[playerid][pTiempoJail] = 0;
	PlayerInfo[playerid][pCargos] = 0;
	PlayerInfo[playerid][pDuty] = 0;
	PlayerInfo[playerid][pModelo] = 280;
	PlayerInfo[playerid][vColor1] = 0;
	PlayerInfo[playerid][vPJ] = -1;
	PlayerInfo[playerid][vPJ2] = -1;
	PlayerInfo[playerid][vColor2] = 0;
	PlayerInfo[playerid][pVidaV] = 0;
	PlayerInfo[playerid][pAdmin] = ADMIN_LEVEL_USER;
	PlayerInfo[playerid][@Nivel] = 0;
	PlayerInfo[playerid][jSexo] = -1;
	PlayerInfo[playerid][jDinero] = 0;
	PlayerInfo[playerid][pAgenda] = 0;
	PlayerInfo[playerid][vGas] = 0;
	PlayerInfo[playerid][pFaccion] = 0;
	PlayerInfo[playerid][jEdad] = 0;
	PlayerInfo[playerid][vMonedaa] = 0;
	PlayerInfo[playerid][EnCasa] = 0;
	PlayerInfo[playerid][EnRopero] = 0;
	PlayerInfo[playerid][EnGarage] = 0;
	PlayerInfo[playerid][vinterior] = 0;
	PlayerInfo[playerid][vvw] = 0;
	PlayerInfo[playerid][Moneda] = 0;
	PlayerInfo[playerid][CasaID] = 0;
	PlayerInfo[playerid][CasaID2] = 0;
	PlayerInfo[playerid][EstacionamientoID] = 0;
	PlayerInfo[playerid][vEstacionado1] = 0;
	PlayerInfo[playerid][vEstacionado2] = 0;
	PlayerInfo[playerid][vEstacionado3] = 0;
	PlayerInfo[playerid][vEstacionado4] = 0;
	PlayerInfo[playerid][pEnEstacionamiento] = 0;
	PlayerInfo[playerid][pBanco] = 0;
	PlayerInfo[playerid][pRango] = 0;
	PlayerInfo[playerid][pTrabajo2] = 0;
	PlayerInfo[playerid][pVip] = 0;
	PlayerInfo[playerid][pCrack] = 0;
	PlayerInfo[playerid][pMedicamentos] = 0;
	PlayerInfo[playerid][pMarihuana] = 0;
	PlayerInfo[playerid][pInterior] = 0;
	PlayerInfo[playerid][pMundoVirtual] = 0;
	PlayerInfo[playerid][pRadio] = 0;
	PlayerInfo[playerid][pGPS] = 0;
	PlayerInfo[playerid][Agonizando] = 0;
	PlayerInfo[playerid][jExperiencia] = 0;
	PlayerInfo[playerid][jRopa] = 0;
	PlayerInfo[playerid][@Salud] = 0;
	PlayerInfo[playerid][@Chaleco] = 0;
	PlayerInfo[playerid][@X] = 0;
	PlayerInfo[playerid][@Y] = 0;
	PlayerInfo[playerid][@Z] = 0;
	PlayerInfo[playerid][pOX] = 0;
	PlayerInfo[playerid][pOY] = 0;
	PlayerInfo[playerid][pOZ] = 0;
	PlayerInfo[playerid][pOA] = 0;
	PlayerInfo[playerid][vOinterior] = 0;
	PlayerInfo[playerid][vOvw] = 0;
	PlayerInfo[playerid][vPrecio] = 0;
	PlayerInfo[playerid][Mobile] = INVALID_PLAYER_ID;
	PlayerInfo[playerid][MobileSub] = INVALID_PLAYER_ID;
	format(PlayerInfo[playerid][jConexion], 90, "0");
	format(Emisoras[playerid][NombreEmisora], 90, "Ninguno");
	format(Emisoras[playerid][URLEmisora], 120, "http://"EMISORA_URL"");
	SetPlayerProgressBarMaxValue(playerid,Progressbar[playerid][Velocimetro], 120);
	SetPlayerProgressBarMaxValue(playerid,Progressbar[playerid][Combustible], 100);
	SetPlayerColor(playerid,0xFFFFFF00);
	SetPlayerWantedLevel(playerid,0);
	DisablePlayerCheckpoint(playerid);
	QuitarArmas(playerid);
	SetPlayerTeam(playerid, 0);
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, 0);
	ResetPlayerWeapons(playerid);
	PlayerPlaySound(playerid, 3402, 0.0, 0.0, 0.0);
	KillTimer(TimerFadeOut[playerid]);
	SetPlayerProgressBarMaxValue(playerid,Progressbar[playerid][Camionero], 10.0);
	SetPlayerProgressBarValue(playerid,Progressbar[playerid][Camionero], 10.0);
	SetPlayerProgressBarMaxValue(playerid,Progressbar[playerid][Cosecha], 20.0);
	SetPlayerProgressBarValue(playerid,Progressbar[playerid][Cosecha], 0.00);
	SetPlayerProgressBarMaxValue(playerid,Progressbar[playerid][ReparandoBar], 10.0);
	SetPlayerProgressBarValue(playerid,Progressbar[playerid][ReparandoBar], 10.0);
	SetPlayerProgressBarMaxValue(playerid,Progressbar[playerid][Picar], 10.0);
	SetPlayerProgressBarValue(playerid,Progressbar[playerid][Picar], 10.0);
}

IsAtTrenStation(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(10.0,playerid,831.5464,-1361.7238,-0.5015) || PlayerToPoint(10.0,playerid,1757.1368,-1943.4417,13.5703) || PlayerToPoint(10.0,playerid,1746.9652,-1943.4482,13.5703))
		{
			return 1;
		}
		else if(PlayerToPoint(10.0,playerid,1437.3113,2655.2742,11.3926) || PlayerToPoint(10.0,playerid,1437.4141,2620.1450,11.3926) || PlayerToPoint(10.0,playerid,-1974.0217,116.7847,27.6875))
		{
			return 1;
		}
		else if(PlayerToPoint(10.0,playerid,2856.5955,1314.5538,11.3906) || PlayerToPoint(10.0,playerid,2856.5969,1266.9460,11.3906) ||	PlayerToPoint(10.0,playerid,826.7249,-1353.6726,13.5369))
		{
			return 1;
		}
	}
	return 0;
}

IsAtPantallaStation(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(2.0,playerid,-1959.7164,141.9694,27.6875) || PlayerToPoint(2.0,playerid,-1962.3730,130.1360,27.6875)) return 1;
		else if(PlayerToPoint(2.0,playerid,1729.7041,-1943.3695,13.5705) || PlayerToPoint(2.0,playerid,822.8813,-1353.8101,-0.5078)) return 1;
		else if(PlayerToPoint(2.0,playerid,1439.4858,2644.6511,11.3926) || PlayerToPoint(2.0,playerid,2856.4263,1296.8097,11.3906)) return 1;
	}
	return 0;
}

Float: player_get_speed(playerid)
{
	new Float: Floats[3];
	GetVehicleVelocity(GetPlayerVehicleID(playerid), Floats[0], Floats[1], Floats[2]);
	return floatsqroot(Floats[0] * Floats[0] + Floats[1] * Floats[1] + Floats[2] * Floats[2]) * 150;
}

AntiDeAMX()
{
	new a[][] =
	{
		"Unarmed (Fist)",
		"Brass K"
	};
	#pragma unused a
}
main()
{
	print(" ");
	return 1;
}

LoopingAnim(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
	ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
}

EnBotiquin(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid,2.0,1169.7440,-1353.4617,-10.7922)) { return 1; } //Botiquin LS
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,1235.0582,-821.8716,1164.2759)) { return 1; }  //GANTONLS
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,-2720.8923,647.0943,1385.6534)) { return 1; } //SF
    return 0;
}
EnRopaMedico(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid,2.0,1159.4829,-1356.8820,-10.7922)) { return 1; } //Ropa LS
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,1234.4447,-830.0233,1164.2759)) { return 1; }  //GANTONLS
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,-2729.9434,614.0607,1385.6534)) { return 1; } //SF
    return 0;
}
EstaHospital(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid, 70.0,1157.3018,-1345.9318,-10.7849)) { return 1; }  //LS
	else if(IsPlayerInRangeOfPoint(playerid, 70.0,-2712.8232,618.8465,1385.6534)) { return 1; }  //SF
	else if(IsPlayerInRangeOfPoint(playerid, 70.0,1238.9851,-823.2172,1164.2759)) { return 1; }  //GANTON / LV
    return 0;
}

MensajeSpam(playerid,params[])
{
	new string[200];
	format(string,sizeof(string),"%s(%d) SPAM ({BE2612}%s{44a247}):{FFFFFF} %s",PlayerName(playerid),playerid,ANTI_CHEATS[playerid][TextoSPAM],params);
    MensajeAdmin(0x44a247FF, string, ADMIN_LEVEL_BANEOS);
}
CreateFCActor(amodelo, Float:x, Float:y, Float:z, Float:a, aid)
{
    ActorFC[aid] = CreateDynamicActor(amodelo, x, y, z, a, 1, 100.0, 0, 0);
    ApplyActorAnimation(ActorFC[aid],"SKATE","skate_idle", 4.0,1,1,1,1,500);
}
CreateFCActorStatic(amodelo, Float:x, Float:y, Float:z, Float:a, aid)
{
    ActorFC[aid] = CreateDynamicActor(amodelo, x, y, z, a, 1, 100.0, 0, 0);
    ApplyActorAnimation(ActorFC[aid], "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
    if(aid < 3) LabelFC[aid] = CreateDynamic3DTextLabel("\tCerveza artesanal\n\n{FFFFFF}Precio: {00CC00}$10\n\n{FFFF00}/comprar cerveza", 0x2BD5C4FF, x+2, y, z, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0, -1, 50.0);
    if(aid > 2 && aid < 6)  LabelFC[aid] = CreateDynamic3DTextLabel("\tCerveza artesanal\n\n{FFFFFF}Precio: {00CC00}$10\n\n{FFFF00}/comprar cerveza", 0x2BD5C4FF, x-2, y, z, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0, -1, 50.0);
}

EventoHall(bool:activo)
{
	if(activo == true)
    {
        HallX = true;
        MapaHall[0] = CreateDynamicObject(19320, 1551.25000, -1678.76001, 16.01000,   0.00000, 0.00000, 16.73000);
		MapaHall[1] = CreateDynamicObject(19320, 1551.25000, -1672.45996, 16.01000,   0.00000, 0.00000, 0.00000);
		MapaHall[2] = CreateDynamicObject(3106, 1551.01001, -1678.54004, 16.01000,   54.00000, 4.00000, 40.00000);
		MapaHall[3] = CreateDynamicObject(3106, 1551.03003, -1672.68005, 16.01000,   76.00000, 4.00000, 142.00000);
		MapaHall[4] = CreateDynamicObject(19138, 1551.01001, -1672.58997, 15.88000,   0.00000, 0.00000, 207.39000);
		MapaHall[5] = CreateDynamicObject(19138, 1551.00000, -1678.69995, 15.84000,   0.00000, 0.00000, 165.27000);
		MapaHall[6] = CreateDynamicObject(3106, 1550.94995, -1672.47998, 16.01000,   76.00000, 4.00000, 142.00000);
		MapaHall[7] = CreateDynamicObject(3106, 1550.93005, -1678.78003, 16.01000,   54.00000, 4.00000, 40.00000);
		MapaHall[8] = CreateDynamicObject(11704, 1554.94995, -1675.57996, 21.60000,   0.00000, 0.00000, 270.12000);
		MapaHall[9] = CreateDynamicObject(1498, 1564.19995, -1690.08997, 5.22000,   0.00000, 0.00000, 180.00000);
		MapaHall[10] = CreateDynamicObject(994, 1556.56006, -1698.00000, 5.00000,   0.00000, 0.00000, 90.00000);
		MapaHall[11] = CreateDynamicObject(994, 1564.72998, -1698.00000, 5.00000,   0.00000, 0.00000, 90.00000);
		MapaHall[12] = CreateDynamicObject(970, 1544.72998, -1635.41003, 13.20000,   0.00000, 0.00000, 270.00000);
		MapaHall[13] = CreateDynamicObject(2886, 1582.38000, -1638.34998, 14.00000,   0.00000, 0.00000, 0.00000);
		MapaHall[14] = CreateDynamicObject(1495, 1582.59998, -1638.05005, 14.87000,   0.00000, 0.00000, -1.40000);
		MapaHall[15] = CreateDynamicObject(2886, 1582.44995, -1637.83997, 14.00000,   0.00000, 0.00000, 178.00000);
		MapaHall[16] = CreateDynamicObject(970, 1544.72998, -1620.41003, 13.20000,   0.00000, 0.00000, 90.00000);
		MapaHall[17] = CreateDynamicObject(16410, 1497.54004, -1691.19995, 14.88000,   0.00000, 0.00000, 11.17000);
		MapaHall[18] = CreateDynamicObject(734, 1496.20996, -1688.32996, 12.53000,   0.00000, 0.00000, 115.05000);
		MapaHall[19] = CreateDynamicObject(19339, 1495.27002, -1692.43994, 13.94000,   0.00000, 0.00000, 18.78000);
		MapaHall[20] = CreateDynamicObject(16374, 1493.03003, -1670.25000, 18.03000,   0.00000, 0.00000, 26.82000);
		MapaHall[21] = CreateDynamicObject(2907, 1490.44995, -1669.81995, 13.65000,   0.00000, 0.00000, 0.00000);
		MapaHall[22] = CreateDynamicObject(19527, 1503.15002, -1714.84998, 13.55000,   0.00000, 0.00000, 0.00000);
		MapaHall[23] = CreateDynamicObject(838, 1494.75000, -1701.01001, 16.08000,   0.00000, 0.00000, 75.79000);
		MapaHall[24] = CreateDynamicObject(16374, 1489.89417, -1682.41943, 18.95000,   0.00000, 0.00000, 83.82000);
		MapaHall[25] = CreateDynamicObject(16374, 1493.14001, -1654.03003, 18.71000,   0.00000, 0.00000, 339.88000);
		MapaHall[26] = CreateDynamicObject(1369, 1500.57996, -1637.84998, 13.67000,   0.00000, 0.00000, 0.00000);
		MapaHall[27] = CreateDynamicObject(19339, 1495.17004, -1705.29004, 13.94000,   0.00000, 0.00000, 89.59000);
		MapaHall[28] = CreateDynamicObject(3106, 1506.46997, -1627.38000, 15.93000,   47.00000, 0.00000, -127.00000);
		MapaHall[29] = CreateDynamicObject(734, 1495.84998, -1710.03003, 12.53000,   0.00000, 0.00000, 63.89000);
		MapaHall[30] = CreateDynamicObject(639, 1487.63000, -1688.09998, 14.17000,   0.00000, 0.00000, 180.00000);
		MapaHall[31] = CreateDynamicObject(19138, 1506.42004, -1627.27002, 15.74000,   0.00000, 0.00000, 0.00000);
		MapaHall[32] = CreateDynamicObject(3106, 1506.46997, -1627.13000, 15.95000,   62.00000, 0.00000, -84.00000);
		MapaHall[33] = CreateDynamicObject(19320, 1506.17004, -1627.25000, 15.93000,   0.00000, 0.00000, 0.00000);
		MapaHall[34] = CreateDynamicObject(19339, 1486.84998, -1666.58997, 13.94000,   0.00000, 0.00000, 358.07999);
		MapaHall[35] = CreateDynamicObject(639, 1485.45996, -1685.69995, 14.17000,   0.00000, 0.00000, -90.00000);
		MapaHall[36] = CreateDynamicObject(19590, 1485.67004, -1688.00000, 13.82000,   98.00000, -33.00000, -18.00000);
		MapaHall[37] = CreateDynamicObject(3092, 1485.71997, -1688.23999, 13.30000,   180.00000, 90.00000, 89.60000);
		MapaHall[38] = CreateDynamicObject(639, 1485.52002, -1688.33997, 16.06000,   0.00000, 90.00000, 0.00000);
		MapaHall[39] = CreateDynamicObject(19838, 1487.10999, -1695.87000, 13.05000,   0.00000, 0.00000, 0.00000);
		MapaHall[40] = CreateDynamicObject(19075, 1485.12000, -1688.20996, 14.54000,   0.00000, 0.00000, 0.00000);
		MapaHall[41] = CreateDynamicObject(19632, 1485.06995, -1688.35999, 13.20000,   0.00000, 0.00000, 0.00000);
		MapaHall[42] = CreateDynamicObject(639, 1485.43994, -1690.71997, 14.17000,   0.00000, 0.00000, 90.00000);
		MapaHall[43] = CreateDynamicObject(3092, 1485.03003, -1689.23999, 13.30000,   180.00000, 98.00000, 40.00000);
		MapaHall[44] = CreateDynamicObject(18691, 1485.02002, -1688.53003, 10.43000,   0.00000, 0.00000, 0.00000);
		MapaHall[45] = CreateDynamicObject(3092, 1484.45996, -1688.09998, 13.30000,   0.00000, 90.00000, 89.59000);
		MapaHall[46] = CreateDynamicObject(19838, 1483.06006, -1679.19995, 13.05000,   0.00000, 0.00000, 0.00000);
		MapaHall[47] = CreateDynamicObject(734, 1482.62000, -1665.90002, 12.53000,   0.00000, 0.00000, 115.05000);
		MapaHall[48] = CreateDynamicObject(12957, 1485.56995, -1700.81995, 13.66000,   0.00000, 0.00000, 286.76001);
		MapaHall[49] = CreateDynamicObject(2908, 1491.10999, -1713.29004, 13.61000,   0.00000, 0.00000, 119.00000);
		MapaHall[50] = CreateDynamicObject(19527, 1490.68994, -1714.84998, 13.55000,   0.00000, 0.00000, 0.00000);
		MapaHall[51] = CreateDynamicObject(16374, 1490.91003, -1715.18994, 20.35000,   0.00000, 0.00000, 0.00000);
		MapaHall[52] = CreateDynamicObject(2908, 1498.43994, -1625.08997, 13.91000,   0.00000, 0.00000, 0.00000);
		MapaHall[53] = CreateDynamicObject(18963, 1483.75000, -1702.10999, 14.15000,   0.00000, 0.00000, 257.76999);
		MapaHall[54] = CreateDynamicObject(2907, 1499.65002, -1623.37000, 13.91000,   0.00000, 0.00000, 0.00000);
		MapaHall[55] = CreateDynamicObject(734, 1501.41003, -1621.60999, 12.53000,   0.00000, 0.00000, 89.18000);
		MapaHall[56] = CreateDynamicObject(335, 1483.55005, -1702.13000, 14.26000,   0.00000, 90.00000, 351.16000);
		MapaHall[57] = CreateDynamicObject(2906, 1498.09998, -1621.68005, 13.91000,   0.00000, 0.00000, 97.85000);
		MapaHall[58] = CreateDynamicObject(19838, 1487.20996, -1715.14001, 13.05000,   0.00000, 0.00000, 0.00000);
		MapaHall[59] = CreateDynamicObject(19838, 1482.31006, -1706.18994, 13.05000,   0.00000, 0.00000, 0.00000);
		MapaHall[60] = CreateDynamicObject(3092, 1482.03003, -1643.42004, 16.03000,   0.00000, 62.00000, 90.00000);
		MapaHall[61] = CreateDynamicObject(838, 1475.32996, -1667.54004, 16.08000,   0.00000, 0.00000, 47.47000);
		MapaHall[62] = CreateDynamicObject(3524, 1484.37000, -1715.95996, 14.44000,   0.00000, 0.00000, 0.00000);
		MapaHall[63] = CreateDynamicObject(19838, 1474.62000, -1695.66003, 13.05000,   0.00000, 0.00000, 0.00000);
		MapaHall[64] = CreateDynamicObject(19527, 1497.96997, -1615.54004, 13.79000,   0.00000, 0.00000, 0.00000);
		MapaHall[65] = CreateDynamicObject(18862, 1479.42004, -1639.72998, 17.30000,   0.00000, 0.00000, 0.00000);
		MapaHall[66] = CreateDynamicObject(19320, 1481.92004, -1716.83997, 13.39000,   0.00000, 0.00000, 0.00000);
		MapaHall[67] = CreateDynamicObject(3106, 1482.05005, -1717.12000, 13.45000,   -18.00000, -171.00000, -142.00000);
		MapaHall[68] = CreateDynamicObject(19138, 1481.92004, -1717.13000, 13.27000,   0.00000, 0.00000, 277.28000);
		MapaHall[69] = CreateDynamicObject(3106, 1481.83997, -1717.13000, 13.45000,   0.00000, 142.00000, 84.00000);
		MapaHall[70] = CreateDynamicObject(19838, 1471.06995, -1685.73999, 13.05000,   0.00000, 0.00000, 0.00000);
		MapaHall[71] = CreateDynamicObject(3092, 1474.67004, -1642.66003, 15.43000,   0.00000, 62.00000, 25.00000);
		MapaHall[72] = CreateDynamicObject(932, 1471.81995, -1700.39001, 13.05000,   0.00000, 0.00000, 74.10000);
		MapaHall[73] = CreateDynamicObject(3434, 1478.39001, -1717.83997, 21.71000,   0.00000, 0.00000, 0.00000);
		MapaHall[74] = CreateDynamicObject(19339, 1489.52002, -1615.83997, 13.41000,   0.00000, 0.00000, 0.00000);
		MapaHall[75] = CreateDynamicObject(6865, 1473.94995, -1639.08997, 15.10000,   -40.00000, 0.00000, 335.42999);
		MapaHall[76] = CreateDynamicObject(19838, 1472.55005, -1710.18994, 13.05000,   0.00000, 0.00000, 0.00000);
		MapaHall[77] = CreateDynamicObject(19320, 1474.85999, -1716.83997, 13.39000,   0.00000, 0.00000, 0.00000);
		MapaHall[78] = CreateDynamicObject(3106, 1474.95996, -1717.14001, 13.43000,   324.00000, -91.00000, -98.00000);
		MapaHall[79] = CreateDynamicObject(19138, 1474.84998, -1717.13000, 13.26000,   0.00000, 0.00000, 264.48999);
		MapaHall[80] = CreateDynamicObject(3106, 1474.70996, -1717.12000, 13.42000,   0.00000, 142.00000, 76.00000);
		MapaHall[81] = CreateDynamicObject(337, 1464.45996, -1685.31995, 14.19000,   180.00000, 0.00000, 0.00000);
		MapaHall[82] = CreateDynamicObject(16690, 1463.82996, -1673.42004, 17.11000,   0.00000, 0.00000, 90.02000);
		MapaHall[83] = CreateDynamicObject(3524, 1485.55005, -1615.76001, 14.96000,   0.00000, 0.00000, 180.00000);
		MapaHall[84] = CreateDynamicObject(3524, 1472.39001, -1715.95996, 14.44000,   0.00000, 0.00000, 0.00000);
		MapaHall[85] = CreateDynamicObject(16052, 1465.29004, -1699.04004, 15.13000,   0.00000, 0.00000, 270.00000);
		MapaHall[86] = CreateDynamicObject(19838, 1471.43005, -1717.60999, 13.05000,   0.00000, 0.00000, 0.00000);
		MapaHall[87] = CreateDynamicObject(2905, 1466.27002, -1706.60999, 13.62000,   0.00000, 0.00000, 282.72000);
		MapaHall[88] = CreateDynamicObject(2905, 1466.14001, -1707.65002, 13.62000,   0.00000, 0.00000, 233.36000);
		MapaHall[89] = CreateDynamicObject(8131, 1479.68994, -1618.60999, 12.99000,   0.00000, 0.00000, 0.00000);
		MapaHall[90] = CreateDynamicObject(734, 1460.94995, -1687.06006, 12.53000,   0.00000, 0.00000, 191.70000);
		MapaHall[91] = CreateDynamicObject(11427, 1479.66003, -1617.77002, 20.19000,   0.00000, 0.00000, -90.00000);
		MapaHall[92] = CreateDynamicObject(11704, 1459.20996, -1673.76001, 18.85000,   0.00000, 0.00000, 0.00000);
		MapaHall[93] = CreateDynamicObject(11704, 1479.65002, -1616.12000, 16.34000,   0.00000, 0.00000, 180.00000);
		MapaHall[94] = CreateDynamicObject(16410, 1460.56995, -1695.82996, 14.88000,   0.00000, 0.00000, 11.17000);
		MapaHall[95] = CreateDynamicObject(19527, 1466.35999, -1714.82996, 13.55000,   0.00000, 0.00000, 0.00000);
		MapaHall[96] = CreateDynamicObject(19339, 1461.92004, -1704.06995, 13.94000,   0.00000, 0.00000, 0.00000);
		MapaHall[97] = CreateDynamicObject(19339, 1459.06006, -1692.81006, 13.94000,   0.00000, 0.00000, 0.00000);
		MapaHall[98] = CreateDynamicObject(734, 1460.98999, -1710.13000, 12.53000,   0.00000, 0.00000, 0.00000);
		MapaHall[99] = CreateDynamicObject(3524, 1473.89001, -1615.76001, 14.96000,   0.00000, 0.00000, 180.00000);
		MapaHall[100] = CreateDynamicObject(3594, 1459.19995, -1639.41003, 13.56000,   0.00000, 0.00000, 101.11000);
		MapaHall[101] = CreateDynamicObject(2905, 1458.82996, -1639.35999, 14.06000,   0.00000, 0.00000, 53.86000);
		MapaHall[102] = CreateDynamicObject(19527, 1453.85999, -1714.82996, 13.55000,   0.00000, 0.00000, 0.00000);
		MapaHall[103] = CreateDynamicObject(2745, 1460.88000, -1620.62000, 14.29000,   0.00000, 0.00000, 191.16000);
		MapaHall[104] = CreateDynamicObject(11734, 1460.78003, -1617.90002, 13.83009,   -10.75946, 0.00000, 95.00000);
		MapaHall[105] = CreateDynamicObject(734, 1458.16003, -1622.22998, 12.53000,   0.00000, 0.00000, 169.34000);
		MapaHall[106] = CreateDynamicObject(19320, 1455.96997, -1615.45996, 14.13000,   0.00000, 0.00000, 0.00000);
		MapaHall[107] = CreateDynamicObject(19528, 1455.96997, -1615.41003, 14.32000,   0.00000, -90.00000, 0.00000);
		MapaHall[108] = CreateDynamicObject(3106, 1456.06995, -1615.16003, 14.16000,   0.00000, -69.00000, 10.00000);
		MapaHall[109] = CreateDynamicObject(19138, 1455.96997, -1615.18994, 13.98000,   0.00000, 0.00000, 92.04000);
		MapaHall[110] = CreateDynamicObject(3106, 1455.85999, -1615.16003, 14.15000,   76.00000, -11.00000, 0.00000);
		MapaHall[111] = CreateDynamicObject(19320, 1184.30005, -1296.93005, 14.76000,   0.00000, 0.00000, 0.00000);
		MapaHall[112] = CreateDynamicObject(19527, 1184.67004, -1300.79004, 13.21000,   0.00000, 0.00000, 298.10999);
		MapaHall[113] = CreateDynamicObject(19626, 1184.65002, -1300.41003, 14.13000,   -33.00000, -11.00000, 0.00000);
		MapaHall[114] = CreateDynamicObject(3106, 1184.46997, -1297.18005, 14.79000,   -127.00000, -40.00000, 0.00000);
		MapaHall[115] = CreateDynamicObject(11712, 1184.59998, -1297.14001, 14.67000,   180.00000, 0.00000, 320.00000);
		MapaHall[116] = CreateDynamicObject(3106, 1184.59998, -1297.01001, 14.79000,   0.00000, -135.00000, 0.00000);

		//PUESTO CAMIONERO
		PuestoCamioneros[0] = CreateDynamicObject(19583, -1716.49207, -39.66760, 2.58220,   0.00000, 0.00000, 0.00000);
		PuestoCamioneros[1] = CreateDynamicObject(19836, -1716.51208, -39.90760, 2.58220,   0.00000, 0.00000, 0.00000);
		PuestoCamioneros[2] = CreateDynamicObject(2597, -1718.18213, -41.30760, 3.40220,   0.00000, 0.00000, 0.00000);
		PuestoCamioneros[3] = CreateDynamicObject(18735, -1716.04211, -40.24760, 2.55220,   0.00000, -40.00000, 180.00000);
		PuestoCamioneros[4] = CreateDynamicObject(19626, -1715.16211, -40.29760, 3.42220,   -18.00000, 0.00000, 0.00000);
		PuestoCamioneros[5] = CreateDynamicObject(18963, -1715.23206, -40.64760, 3.38220,   0.00000, -40.00000, 0.00000);
		PuestoCamioneros[6] = CreateDynamicObject(19527, -1715.12207, -40.62760, 2.56220,   0.00000, 0.00000, 0.00000);
		PuestoCamioneros[7] = CreateDynamicObject(3106, -1715.66211, -41.42760, 4.38220,   90.00000, 0.00000, 0.00000);
		PuestoCamioneros[8] = CreateDynamicObject(19138, -1715.62207, -41.45760, 4.22220,   0.00000, 0.00000, 108.13000);
		PuestoCamioneros[9] = CreateDynamicObject(3106, -1715.48206, -41.44760, 4.38220,   90.00000, 0.00000, 0.00000);
		PuestoCamioneros[10] = CreateDynamicObject(19138, -1715.50208, -41.46760, 4.22220,   0.00000, 0.00000, 71.24000);
		PuestoCamioneros[11] = CreateDynamicObject(19320, -1715.58203, -41.72760, 4.36220,   0.00000, 0.00000, 0.00000);
		PuestoCamioneros[12] = CreateDynamicObject(19919, -1715.56213, -41.74760, 2.56220,   0.00000, 0.00000, 0.00000);
		PuestoCamioneros[13] = CreateDynamicObject(3106, -1702.89001, 68.67000, 8.94000,   222.00000, 0.00000, 0.00000);
		PuestoCamioneros[14] = CreateDynamicObject(19138, -1702.76001, 68.68000, 8.78000,   0.00000, 0.00000, 271.00000);
		PuestoCamioneros[15] = CreateDynamicObject(3106, -1702.63000, 68.67000, 8.95000,   84.00000, -142.00000, 0.00000);
		PuestoCamioneros[16] = CreateDynamicObject(19320, -1702.75000, 68.95000, 8.93000,   0.00000, 0.00000, 0.00000);
		PuestoCamioneros[17] = CreateDynamicObject(19528, -1702.76001, 68.95000, 9.13000,   0.00000, -90.00000, 173.98000);

		EstMuni[0] = CreateDynamicObject(2597, 152.06090, -288.74341, 1.42560,   0.00000, 0.00000, 0.00000);
		EstMuni[1] = CreateDynamicObject(19320, 154.66089, -289.16339, 2.38560,   0.00000, 0.00000, 0.00000);
		EstMuni[2] = CreateDynamicObject(19919, 154.68089, -289.18341, 0.58560,   0.00000, 0.00000, 0.00000);
		EstMuni[3] = CreateDynamicObject(3106, 154.58090, -288.86340, 2.40560,   90.00000, 0.00000, 0.00000);
		EstMuni[4] = CreateDynamicObject(19138, 154.62090, -288.89340, 2.24560,   0.00000, 0.00000, 108.13000);
		EstMuni[5] = CreateDynamicObject(19138, 154.74089, -288.90338, 2.24560,   0.00000, 0.00000, 71.24000);
		EstMuni[6] = CreateDynamicObject(3106, 154.76089, -288.88339, 2.40560,   90.00000, 0.00000, 0.00000);
		EstMuni[7] = CreateDynamicObject(19836, 153.73090, -287.34338, 0.60560,   0.00000, 0.00000, 0.00000);
		EstMuni[8] = CreateDynamicObject(18735, 154.20090, -287.68341, 0.57560,   0.00000, -40.00000, 180.00000);
		EstMuni[9] = CreateDynamicObject(19583, 153.75090, -287.10339, 0.60560,   0.00000, 0.00000, 0.00000);
		EstMuni[10] = CreateDynamicObject(18963, 155.01089, -288.08340, 1.40560,   0.00000, -40.00000, 0.00000);
		EstMuni[11] = CreateDynamicObject(19527, 155.12090, -288.06339, 0.58560,   0.00000, 0.00000, 0.00000);
		EstMuni[12] = CreateDynamicObject(19626, 155.08090, -287.73340, 1.44560,   -18.00000, 0.00000, 0.00000);
		EstMuni[13] = CreateDynamicObject(12934, 133.92000, -265.03000, 3.91000,   0.00000, 0.00000, 0.00000);

		//Puestos puente bayside
		PuestosPuentesote[0] = CreateDynamicObject(19583, -2673.86084, 1373.75330, 6.11630,   0.00000, 0.00000, 0.00000);
		PuestosPuentesote[1] = CreateDynamicObject(19836, -2673.88086, 1373.51331, 6.11630,   0.00000, 0.00000, 0.00000);
		PuestosPuentesote[2] = CreateDynamicObject(2597, -2675.55078, 1372.11340, 6.93630,   0.00000, 0.00000, 0.00000);
		PuestosPuentesote[3] = CreateDynamicObject(19583, -2547.09961, 1215.41406, 36.44940,   0.00000, 0.00000, 0.00000);
		PuestosPuentesote[4] = CreateDynamicObject(19626, -2672.34131, 1372.18262, 6.86262,   0.00000, 0.00000, 0.00000);
		PuestosPuentesote[5] = CreateDynamicObject(19527, -2672.47510, 1372.11450, 6.10206,   0.00000, 0.00000, 0.00000);
		PuestosPuentesote[6] = CreateDynamicObject(18963, -2672.60229, 1372.03650, 6.86260,   0.00000, 0.00000, 0.00000);
		PuestosPuentesote[7] = CreateDynamicObject(19320, -2546.18970, 1213.35413, 38.22940,   0.00000, 0.00000, 0.00000);
		PuestosPuentesote[8] = CreateDynamicObject(3106, -2546.08960, 1213.63416, 38.24940,   90.00000, 0.00000, 0.00000);
		PuestosPuentesote[9] = CreateDynamicObject(19138, -2546.10962, 1213.61414, 38.08940,   0.00000, 0.00000, 71.24000);
		PuestosPuentesote[10] = CreateDynamicObject(3106, -2546.26953, 1213.65417, 38.24940,   90.00000, 0.00000, 0.00000);
		PuestosPuentesote[11] = CreateDynamicObject(19626, -2545.76953, 1214.78418, 37.28940,   -18.00000, 0.00000, 0.00000);
		PuestosPuentesote[12] = CreateDynamicObject(19919, -2546.16968, 1213.33411, 36.42940,   0.00000, 0.00000, 0.00000);
		PuestosPuentesote[13] = CreateDynamicObject(19138, -2546.22974, 1213.62415, 38.08940,   0.00000, 0.00000, 108.13000);
		PuestosPuentesote[14] = CreateDynamicObject(19527, -2545.72974, 1214.45410, 36.42940,   0.00000, 0.00000, 0.00000);
		PuestosPuentesote[15] = CreateDynamicObject(2597, -2548.78955, 1213.77417, 37.26940,   0.00000, 0.00000, 0.00000);
		PuestosPuentesote[16] = CreateDynamicObject(18735, -2546.64966, 1214.83411, 36.41940,   0.00000, -40.00000, 180.00000);
		PuestosPuentesote[17] = CreateDynamicObject(19836, -2547.11963, 1215.17407, 36.44940,   0.00000, 0.00000, 0.00000);
		PuestosPuentesote[18] = CreateDynamicObject(18963, -2545.83960, 1214.43408, 37.24940,   0.00000, -40.00000, 0.00000);
		PuestosPuentesote[19] = CreateDynamicObject(19919, -2673.88013, 1371.80310, 6.10010,   0.00000, 0.00000, 0.00000);
		PuestosPuentesote[20] = CreateDynamicObject(19320, -2673.85962, 1371.81372, 7.56608,   0.00000, 0.00000, 0.00000);
		PuestosPuentesote[21] = CreateDynamicObject(19138, -2673.80200, 1372.08154, 7.44550,   0.00000, 0.00000, 64.60238);
		PuestosPuentesote[22] = CreateDynamicObject(19138, -2673.91846, 1372.08411, 7.44550,   0.00000, 0.00000, 114.09920);
		PuestosPuentesote[23] = CreateDynamicObject(3106, -2673.79541, 1372.10925, 7.59060,   0.00000, 0.00000, 0.00000);
		PuestosPuentesote[24] = CreateDynamicObject(3106, -2673.92847, 1372.11060, 7.58370,   0.00000, 0.00000, 0.00000);

		PUnity[0] = CreateDynamicObject(19626, 1703.30005, -1870.21863, 13.43730,   -18.00000, 0.00000, 0.00000);
		PUnity[1] = CreateDynamicObject(19527, 1703.34009, -1870.54871, 12.57730,   0.00000, 0.00000, 0.00000);
		PUnity[2] = CreateDynamicObject(18963, 1703.23010, -1870.56873, 13.39730,   0.00000, -40.00000, 0.00000);
		PUnity[3] = CreateDynamicObject(3106, 1702.98010, -1871.36865, 14.39730,   90.00000, 0.00000, 0.00000);
		PUnity[4] = CreateDynamicObject(19138, 1702.96008, -1871.38867, 14.23730,   0.00000, 0.00000, 71.24000);
		PUnity[5] = CreateDynamicObject(19138, 1702.84009, -1871.37866, 14.23730,   0.00000, 0.00000, 108.13000);
		PUnity[6] = CreateDynamicObject(19919, 1702.90002, -1871.66870, 12.57730,   0.00000, 0.00000, 0.00000);
		PUnity[7] = CreateDynamicObject(19320, 1702.88013, -1871.64868, 14.37730,   0.00000, 0.00000, 0.00000);
		PUnity[8] = CreateDynamicObject(3106, 1702.80005, -1871.34863, 14.39730,   90.00000, 0.00000, 0.00000);
		PUnity[9] = CreateDynamicObject(18735, 1702.42004, -1870.16870, 12.56730,   0.00000, -40.00000, 180.00000);
		PUnity[10] = CreateDynamicObject(19583, 1701.97009, -1869.58875, 12.59730,   0.00000, 0.00000, 0.00000);
		PUnity[11] = CreateDynamicObject(19836, 1701.95007, -1869.82874, 12.59730,   0.00000, 0.00000, 0.00000);
		PUnity[12] = CreateDynamicObject(2597, 1700.28003, -1871.22864, 13.41730,   0.00000, 0.00000, 0.00000);
		PUnity[13] = CreateDynamicObject(19626, 1692.49573, -1973.77905, 8.69220,   -18.00000, 0.00000, 0.00000);
		PUnity[14] = CreateDynamicObject(19583, 1691.16577, -1973.14917, 7.85220,   0.00000, 0.00000, 0.00000);
		PUnity[15] = CreateDynamicObject(19836, 1691.14575, -1973.38916, 7.85220,   0.00000, 0.00000, 0.00000);
		PUnity[16] = CreateDynamicObject(19527, 1692.53577, -1974.10913, 7.83220,   0.00000, 0.00000, 0.00000);
		PUnity[17] = CreateDynamicObject(18963, 1692.42578, -1974.12915, 8.65220,   0.00000, -40.00000, 0.00000);
		PUnity[18] = CreateDynamicObject(18735, 1691.61572, -1973.72913, 7.82220,   0.00000, -40.00000, 180.00000);
		PUnity[19] = CreateDynamicObject(3106, 1692.17578, -1974.92908, 9.65220,   90.00000, 0.00000, 0.00000);
		PUnity[20] = CreateDynamicObject(19138, 1692.15576, -1974.94910, 9.49220,   0.00000, 0.00000, 71.24000);
		PUnity[21] = CreateDynamicObject(3106, 1691.99573, -1974.90906, 9.65220,   90.00000, 0.00000, 0.00000);
		PUnity[22] = CreateDynamicObject(19138, 1692.03577, -1974.93909, 9.49220,   0.00000, 0.00000, 108.13000);
		PUnity[23] = CreateDynamicObject(19320, 1692.07581, -1975.20911, 9.63220,   0.00000, 0.00000, 0.00000);
		PUnity[24] = CreateDynamicObject(19919, 1692.09570, -1975.22913, 7.83220,   0.00000, 0.00000, 0.00000);
		PUnity[25] = CreateDynamicObject(2597, 1689.47571, -1974.78906, 8.67220,   0.00000, 0.00000, 0.00000);

		PMontana[0] = CreateDynamicObject(19583, 2353.39893, -643.47888, 127.11729,   0.00000, 0.00000, 0.00000);
		PMontana[1] = CreateDynamicObject(2597, 2351.70898, -645.11890, 127.93730,   0.00000, 0.00000, 0.00000);
		PMontana[2] = CreateDynamicObject(19836, 2353.37891, -643.71887, 127.11729,   0.00000, 0.00000, 0.00000);
		PMontana[3] = CreateDynamicObject(18735, 2353.84888, -644.05890, 127.08730,   0.00000, -40.00000, 180.00000);
		PMontana[4] = CreateDynamicObject(19626, 2354.72900, -644.10889, 127.95730,   -18.00000, 0.00000, 0.00000);
		PMontana[5] = CreateDynamicObject(18963, 2354.65894, -644.45886, 127.91730,   0.00000, -40.00000, 0.00000);
		PMontana[6] = CreateDynamicObject(19527, 2354.76880, -644.43890, 127.09730,   0.00000, 0.00000, 0.00000);
		PMontana[7] = CreateDynamicObject(3106, 2354.22900, -645.23889, 128.91730,   90.00000, 0.00000, 0.00000);
		PMontana[8] = CreateDynamicObject(19138, 2354.26880, -645.26886, 128.75729,   0.00000, 0.00000, 108.13000);
		PMontana[9] = CreateDynamicObject(19138, 2354.38892, -645.27887, 128.75729,   0.00000, 0.00000, 71.24000);
		PMontana[10] = CreateDynamicObject(3106, 2354.40894, -645.25891, 128.91730,   90.00000, 0.00000, 0.00000);
		PMontana[11] = CreateDynamicObject(19919, 2354.32886, -645.55890, 127.09730,   0.00000, 0.00000, 0.00000);
		PMontana[12] = CreateDynamicObject(19320, 2354.30884, -645.53888, 128.89729,   0.00000, 0.00000, 0.00000);

		PBell[0] = CreateDynamicObject(2597, -2674.17773, 228.83400, 4.18910,   0.00000, 0.00000, 0.00000);
		PBell[1] = CreateDynamicObject(19919, -2671.55786, 228.39400, 3.34910,   0.00000, 0.00000, 0.00000);
		PBell[2] = CreateDynamicObject(19320, -2671.57788, 228.41400, 5.14910,   0.00000, 0.00000, 0.00000);
		PBell[3] = CreateDynamicObject(19138, -2671.61792, 228.68399, 5.00910,   0.00000, 0.00000, 108.13000);
		PBell[4] = CreateDynamicObject(19138, -2671.49780, 228.67400, 5.00910,   0.00000, 0.00000, 71.24000);
		PBell[5] = CreateDynamicObject(3106, -2671.65771, 228.71400, 5.16910,   90.00000, 0.00000, 0.00000);
		PBell[6] = CreateDynamicObject(3106, -2671.47778, 228.69400, 5.16910,   90.00000, 0.00000, 0.00000);
		PBell[7] = CreateDynamicObject(18963, -2671.22778, 229.49400, 4.16910,   0.00000, -40.00000, 0.00000);
		PBell[8] = CreateDynamicObject(19527, -2671.11792, 229.51399, 3.34910,   0.00000, 0.00000, 0.00000);
		PBell[9] = CreateDynamicObject(18735, -2672.03784, 229.89400, 3.33910,   0.00000, -40.00000, 180.00000);
		PBell[10] = CreateDynamicObject(19626, -2671.15771, 229.84399, 4.20910,   -18.00000, 0.00000, 0.00000);
		PBell[11] = CreateDynamicObject(19836, -2672.50781, 230.23399, 3.36910,   0.00000, 0.00000, 0.00000);
		PBell[12] = CreateDynamicObject(19583, -2672.48779, 230.47400, 3.36910,   0.00000, 0.00000, 0.00000);

		PTung[0] = CreateDynamicObject(19919, -2748.94336, 196.10699, 6.11540,   0.00000, 0.00000, 0.00000);
		PTung[1] = CreateDynamicObject(19320, -2748.96338, 196.12700, 7.91540,   0.00000, 0.00000, 0.00000);
		PTung[2] = CreateDynamicObject(19138, -2748.88330, 196.38699, 7.77540,   0.00000, 0.00000, 71.24000);
		PTung[3] = CreateDynamicObject(3106, -2748.86328, 196.40700, 7.93540,   90.00000, 0.00000, 0.00000);
		PTung[4] = CreateDynamicObject(19138, -2749.00342, 196.39699, 7.77540,   0.00000, 0.00000, 108.13000);
		PTung[5] = CreateDynamicObject(3106, -2749.04321, 196.42700, 7.93540,   90.00000, 0.00000, 0.00000);
		PTung[6] = CreateDynamicObject(2597, -2751.56323, 196.54700, 6.95540,   0.00000, 0.00000, 0.00000);
		PTung[7] = CreateDynamicObject(19527, -2748.50342, 197.22699, 6.11540,   0.00000, 0.00000, 0.00000);
		PTung[8] = CreateDynamicObject(18963, -2748.61328, 197.20700, 6.93540,   0.00000, -40.00000, 0.00000);
		PTung[9] = CreateDynamicObject(19626, -2748.54321, 197.55699, 6.97540,   -18.00000, 0.00000, 0.00000);
		PTung[10] = CreateDynamicObject(18735, -2749.42334, 197.60699, 6.10540,   0.00000, -40.00000, 180.00000);
		PTung[11] = CreateDynamicObject(19836, -2749.89331, 197.94699, 6.13540,   0.00000, 0.00000, 0.00000);
		PTung[12] = CreateDynamicObject(19583, -2749.87329, 198.18700, 6.13540,   0.00000, 0.00000, 0.00000);
		//AQUI XD

		PColinas[0] = CreateDynamicObject(2597, 2182.36377, -1344.89929, 23.83190,   0.00000, 0.00000, 0.00000);
		PColinas[1] = CreateDynamicObject(19320, 2184.96362, -1345.31934, 24.79190,   0.00000, 0.00000, 0.00000);
		PColinas[2] = CreateDynamicObject(3106, 2184.88379, -1345.01929, 24.81190,   90.00000, 0.00000, 0.00000);
		PColinas[3] = CreateDynamicObject(19919, 2184.98364, -1345.33936, 22.99190,   0.00000, 0.00000, 0.00000);
		PColinas[4] = CreateDynamicObject(19138, 2184.92358, -1345.04932, 24.65190,   0.00000, 0.00000, 108.13000);
		PColinas[5] = CreateDynamicObject(19138, 2185.04370, -1345.05933, 24.65190,   0.00000, 0.00000, 71.24000);
		PColinas[6] = CreateDynamicObject(19836, 2184.03369, -1343.49939, 23.01190,   0.00000, 0.00000, 0.00000);
		PColinas[7] = CreateDynamicObject(3106, 2185.06372, -1345.03931, 24.81190,   90.00000, 0.00000, 0.00000);
		PColinas[8] = CreateDynamicObject(19583, 2184.05371, -1343.25940, 23.01190,   0.00000, 0.00000, 0.00000);
		PColinas[9] = CreateDynamicObject(18735, 2184.50366, -1343.83936, 22.98190,   0.00000, -40.00000, 180.00000);
		PColinas[10] = CreateDynamicObject(18963, 2185.31372, -1344.23938, 23.81190,   0.00000, -40.00000, 0.00000);
		PColinas[11] = CreateDynamicObject(19527, 2185.42358, -1344.21936, 22.99190,   0.00000, 0.00000, 0.00000);
		PColinas[12] = CreateDynamicObject(19626, 2185.38379, -1343.88928, 23.85190,   -18.00000, 0.00000, 0.00000);

		PCNN[0] = CreateDynamicObject(19583, -2490.02905, -716.81592, 138.34779,   0.00000, 0.00000, 0.00000);
		PCNN[1] = CreateDynamicObject(19836, -2490.04907, -717.05591, 138.34779,   0.00000, 0.00000, 0.00000);
		PCNN[2] = CreateDynamicObject(18735, -2489.57910, -717.39594, 138.31779,   0.00000, -40.00000, 180.00000);
		PCNN[3] = CreateDynamicObject(19626, -2488.69897, -717.44592, 139.18779,   -18.00000, 0.00000, 0.00000);
		PCNN[4] = CreateDynamicObject(19527, -2488.65918, -717.77594, 138.32780,   0.00000, 0.00000, 0.00000);
		PCNN[5] = CreateDynamicObject(18963, -2488.76904, -717.79590, 139.14780,   0.00000, -40.00000, 0.00000);
		PCNN[6] = CreateDynamicObject(3106, -2489.01904, -718.59595, 140.14780,   90.00000, 0.00000, 0.00000);
		PCNN[7] = CreateDynamicObject(19138, -2489.03906, -718.61591, 139.98779,   0.00000, 0.00000, 71.24000);
		PCNN[8] = CreateDynamicObject(3106, -2489.19897, -718.57593, 140.14780,   90.00000, 0.00000, 0.00000);
		PCNN[9] = CreateDynamicObject(19138, -2489.15918, -718.60590, 139.98779,   0.00000, 0.00000, 108.13000);
		PCNN[10] = CreateDynamicObject(19919, -2489.09912, -718.89594, 138.32780,   0.00000, 0.00000, 0.00000);
		PCNN[11] = CreateDynamicObject(2597, -2491.71899, -718.45593, 139.16780,   0.00000, 0.00000, 0.00000);
		PCNN[12] = CreateDynamicObject(19320, -2489.11914, -718.87592, 140.12779,   0.00000, 0.00000, 0.00000);

		PBAY[0] = CreateDynamicObject(19583, -2490.07080, 2358.13599, 9.30170,   0.00000, 0.00000, 0.00000);
		PBAY[1] = CreateDynamicObject(2597, -2491.76074, 2356.49609, 10.12170,   0.00000, 0.00000, 0.00000);
		PBAY[2] = CreateDynamicObject(19836, -2490.09082, 2357.89600, 9.30170,   0.00000, 0.00000, 0.00000);
		PBAY[3] = CreateDynamicObject(18735, -2489.62085, 2357.55615, 9.27170,   0.00000, -40.00000, 180.00000);
		PBAY[4] = CreateDynamicObject(19626, -2488.74072, 2357.50610, 10.14170,   -18.00000, 0.00000, 0.00000);
		PBAY[5] = CreateDynamicObject(18963, -2488.81079, 2357.15601, 10.10170,   0.00000, -40.00000, 0.00000);
		PBAY[6] = CreateDynamicObject(19527, -2488.70093, 2357.17603, 9.28170,   0.00000, 0.00000, 0.00000);
		PBAY[7] = CreateDynamicObject(3106, -2489.24072, 2356.37598, 11.10170,   90.00000, 0.00000, 0.00000);
		PBAY[8] = CreateDynamicObject(19138, -2489.20093, 2356.34595, 10.94170,   0.00000, 0.00000, 108.13000);
		PBAY[9] = CreateDynamicObject(3106, -2489.06079, 2356.35596, 11.10170,   90.00000, 0.00000, 0.00000);
		PBAY[10] = CreateDynamicObject(19138, -2489.08081, 2356.33594, 10.94170,   0.00000, 0.00000, 71.24000);
		PBAY[11] = CreateDynamicObject(19320, -2489.16089, 2356.07593, 11.08170,   0.00000, 0.00000, 0.00000);
		PBAY[12] = CreateDynamicObject(19919, -2489.14087, 2356.05615, 9.28170,   0.00000, 0.00000, 0.00000);

		PELQUE[0] = CreateDynamicObject(2597, -1318.29651, 2508.72485, 86.88950,   0.00000, 0.00000, 0.00000);
		PELQUE[1] = CreateDynamicObject(19583, -1316.60645, 2510.36475, 86.06950,   0.00000, 0.00000, 0.00000);
		PELQUE[2] = CreateDynamicObject(19836, -1316.62646, 2510.12476, 86.06950,   0.00000, 0.00000, 0.00000);
		PELQUE[3] = CreateDynamicObject(18735, -1316.15649, 2509.78491, 86.03950,   0.00000, -40.00000, 180.00000);
		PELQUE[4] = CreateDynamicObject(19919, -1315.67651, 2508.28491, 86.04950,   0.00000, 0.00000, 0.00000);
		PELQUE[5] = CreateDynamicObject(3106, -1315.77649, 2508.60474, 87.86950,   90.00000, 0.00000, 0.00000);
		PELQUE[6] = CreateDynamicObject(19527, -1315.23645, 2509.40479, 86.04950,   0.00000, 0.00000, 0.00000);
		PELQUE[7] = CreateDynamicObject(19138, -1315.73645, 2508.57471, 87.70950,   0.00000, 0.00000, 108.13000);
		PELQUE[8] = CreateDynamicObject(19626, -1315.27649, 2509.73486, 86.90950,   -18.00000, 0.00000, 0.00000);
		PELQUE[9] = CreateDynamicObject(18963, -1315.34644, 2509.38477, 86.86950,   0.00000, -40.00000, 0.00000);
		PELQUE[10] = CreateDynamicObject(19138, -1315.61646, 2508.56470, 87.70950,   0.00000, 0.00000, 71.24000);
		PELQUE[11] = CreateDynamicObject(19320, -1315.69641, 2508.30469, 87.84950,   0.00000, 0.00000, 0.00000);
		PELQUE[12] = CreateDynamicObject(3106, -1315.59644, 2508.58472, 87.86950,   90.00000, 0.00000, 0.00000);

		PEME[0] = CreateDynamicObject(19527, 2108.28931, 2204.73608, 9.82780,   0.00000, 0.00000, 0.00000);
		PEME[1] = CreateDynamicObject(19919, 2107.84937, 2203.61621, 9.82780,   0.00000, 0.00000, 0.00000);
		PEME[2] = CreateDynamicObject(19320, 2107.82935, 2203.63599, 11.62780,   0.00000, 0.00000, 0.00000);
		PEME[3] = CreateDynamicObject(3106, 2107.92944, 2203.91602, 11.64780,   90.00000, 0.00000, 0.00000);
		PEME[4] = CreateDynamicObject(2597, 2105.22949, 2204.05615, 10.66780,   0.00000, 0.00000, 0.00000);
		PEME[5] = CreateDynamicObject(19836, 2106.89941, 2205.45605, 9.84780,   0.00000, 0.00000, 0.00000);
		PEME[6] = CreateDynamicObject(19583, 2106.91943, 2205.69604, 9.84780,   0.00000, 0.00000, 0.00000);
		PEME[7] = CreateDynamicObject(18735, 2107.36938, 2205.11621, 9.81780,   0.00000, -40.00000, 180.00000);
		PEME[8] = CreateDynamicObject(3106, 2107.74951, 2203.93604, 11.64780,   90.00000, 0.00000, 0.00000);
		PEME[9] = CreateDynamicObject(19626, 2108.24951, 2205.06616, 10.68780,   -18.00000, 0.00000, 0.00000);
		PEME[10] = CreateDynamicObject(19138, 2107.78931, 2203.90601, 11.48780,   0.00000, 0.00000, 108.13000);
		PEME[11] = CreateDynamicObject(18963, 2108.17944, 2204.71606, 10.64780,   0.00000, -40.00000, 0.00000);
		PEME[12] = CreateDynamicObject(19138, 2107.90942, 2203.89600, 11.48780,   0.00000, 0.00000, 71.24000);

		PTRANS[0] = CreateDynamicObject(19919, 1033.78369, 2095.76099, 9.82780,   0.00000, 0.00000, 0.00000);
		PTRANS[1] = CreateDynamicObject(19320, 1033.76379, 2095.78076, 11.62780,   0.00000, 0.00000, 0.00000);
		PTRANS[2] = CreateDynamicObject(3106, 1033.86377, 2096.06079, 11.64780,   90.00000, 0.00000, 0.00000);
		PTRANS[3] = CreateDynamicObject(19138, 1033.84375, 2096.04077, 11.48780,   0.00000, 0.00000, 71.24000);
		PTRANS[4] = CreateDynamicObject(19527, 1034.22375, 2096.88086, 9.82780,   0.00000, 0.00000, 0.00000);
		PTRANS[5] = CreateDynamicObject(19138, 1033.72375, 2096.05078, 11.48780,   0.00000, 0.00000, 108.13000);
		PTRANS[6] = CreateDynamicObject(18963, 1034.11377, 2096.86084, 10.64780,   0.00000, -40.00000, 0.00000);
		PTRANS[7] = CreateDynamicObject(3106, 1033.68372, 2096.08081, 11.64780,   90.00000, 0.00000, 0.00000);
		PTRANS[8] = CreateDynamicObject(19626, 1034.18372, 2097.21094, 10.68780,   -18.00000, 0.00000, 0.00000);
		PTRANS[9] = CreateDynamicObject(18735, 1033.30371, 2097.26099, 9.81780,   0.00000, -40.00000, 180.00000);
		PTRANS[10] = CreateDynamicObject(19836, 1032.83374, 2097.60083, 9.84780,   0.00000, 0.00000, 0.00000);
		PTRANS[11] = CreateDynamicObject(19583, 1032.85376, 2097.84082, 9.84780,   0.00000, 0.00000, 0.00000);
		PTRANS[12] = CreateDynamicObject(2597, 1031.16370, 2096.20093, 10.66780,   0.00000, 0.00000, 0.00000);

		PESTALV[0] = CreateDynamicObject(19583, 1098.56213, 1401.01672, 5.66030,   0.00000, 0.00000, 0.00000);
		PESTALV[1] = CreateDynamicObject(19836, 1098.54211, 1400.77673, 5.66030,   0.00000, 0.00000, 0.00000);
		PESTALV[2] = CreateDynamicObject(2597, 1096.87207, 1399.37683, 6.48030,   0.00000, 0.00000, 0.00000);
		PESTALV[3] = CreateDynamicObject(18735, 1099.01208, 1400.43677, 5.63030,   0.00000, -40.00000, 180.00000);
		PESTALV[4] = CreateDynamicObject(19626, 1099.89209, 1400.38684, 6.50030,   -18.00000, 0.00000, 0.00000);
		PESTALV[5] = CreateDynamicObject(18963, 1099.82214, 1400.03674, 6.46030,   0.00000, -40.00000, 0.00000);
		PESTALV[6] = CreateDynamicObject(19527, 1099.93213, 1400.05676, 5.64030,   0.00000, 0.00000, 0.00000);
		PESTALV[7] = CreateDynamicObject(3106, 1099.39209, 1399.25684, 7.46030,   90.00000, 0.00000, 0.00000);
		PESTALV[8] = CreateDynamicObject(19138, 1099.43213, 1399.22681, 7.30030,   0.00000, 0.00000, 108.13000);
		PESTALV[9] = CreateDynamicObject(3106, 1099.57214, 1399.23682, 7.46030,   90.00000, 0.00000, 0.00000);
		PESTALV[10] = CreateDynamicObject(19138, 1099.55212, 1399.21680, 7.30030,   0.00000, 0.00000, 71.24000);
		PESTALV[11] = CreateDynamicObject(19320, 1099.47217, 1398.95679, 7.44030,   0.00000, 0.00000, 0.00000);
		PESTALV[12] = CreateDynamicObject(19919, 1099.49207, 1398.93677, 5.64030,   0.00000, 0.00000, 0.00000);

		PMARK[0] = CreateDynamicObject(19583, 963.34491, -1542.51221, 12.63140,   0.00000, 0.00000, 0.00000);
		PMARK[1] = CreateDynamicObject(19836, 963.32489, -1542.75220, 12.63140,   0.00000, 0.00000, 0.00000);
		PMARK[2] = CreateDynamicObject(18735, 963.79486, -1543.09216, 12.60140,   0.00000, -40.00000, 180.00000);
		PMARK[3] = CreateDynamicObject(19626, 964.67487, -1543.14209, 13.47140,   -18.00000, 0.00000, 0.00000);
		PMARK[4] = CreateDynamicObject(2597, 961.65491, -1544.15210, 13.45140,   0.00000, 0.00000, 0.00000);
		PMARK[5] = CreateDynamicObject(18963, 964.60486, -1543.49219, 13.43140,   0.00000, -40.00000, 0.00000);
		PMARK[6] = CreateDynamicObject(19527, 964.71490, -1543.47217, 12.61140,   0.00000, 0.00000, 0.00000);
		PMARK[7] = CreateDynamicObject(3106, 964.17487, -1544.27209, 14.43140,   90.00000, 0.00000, 0.00000);
		PMARK[8] = CreateDynamicObject(19138, 964.21490, -1544.30212, 14.27140,   0.00000, 0.00000, 108.13000);
		PMARK[9] = CreateDynamicObject(3106, 964.35486, -1544.29211, 14.43140,   90.00000, 0.00000, 0.00000);
		PMARK[10] = CreateDynamicObject(19138, 964.33490, -1544.31213, 14.27140,   0.00000, 0.00000, 71.24000);
		PMARK[11] = CreateDynamicObject(19320, 964.25488, -1544.57214, 14.41140,   0.00000, 0.00000, 0.00000);
		PMARK[12] = CreateDynamicObject(19919, 964.27490, -1544.59216, 12.61140,   0.00000, 0.00000, 0.00000);

		PSANT[0] = CreateDynamicObject(19626, 324.91241, -1755.72827, 4.37360,   -18.00000, 0.00000, 0.00000);
		PSANT[1] = CreateDynamicObject(19527, 324.95239, -1756.05835, 3.51360,   0.00000, 0.00000, 0.00000);
		PSANT[2] = CreateDynamicObject(18963, 324.84241, -1756.07837, 4.33360,   0.00000, -40.00000, 0.00000);
		PSANT[3] = CreateDynamicObject(3106, 324.59241, -1756.87830, 5.33360,   90.00000, 0.00000, 0.00000);
		PSANT[4] = CreateDynamicObject(19138, 324.57242, -1756.89832, 5.17360,   0.00000, 0.00000, 71.24000);
		PSANT[5] = CreateDynamicObject(19138, 324.45239, -1756.88831, 5.17360,   0.00000, 0.00000, 108.13000);
		PSANT[6] = CreateDynamicObject(19320, 324.49240, -1757.15833, 5.31360,   0.00000, 0.00000, 0.00000);
		PSANT[7] = CreateDynamicObject(3106, 324.41241, -1756.85828, 5.33360,   90.00000, 0.00000, 0.00000);
		PSANT[8] = CreateDynamicObject(19919, 324.51242, -1757.17834, 3.51360,   0.00000, 0.00000, 0.00000);
		PSANT[9] = CreateDynamicObject(18735, 324.03241, -1755.67834, 3.50360,   0.00000, -40.00000, 180.00000);
		PSANT[10] = CreateDynamicObject(19583, 323.58240, -1755.09839, 3.53360,   0.00000, 0.00000, 0.00000);
		PSANT[11] = CreateDynamicObject(19836, 323.56241, -1755.33838, 3.53360,   0.00000, 0.00000, 0.00000);
		PSANT[12] = CreateDynamicObject(2597, 321.89240, -1756.73828, 4.35360,   0.00000, 0.00000, 0.00000);

		PBASU[0] = CreateDynamicObject(19919, -51.03440, -1398.94873, 1.38140,   0.00000, 0.00000, 0.00000);
		PBASU[1] = CreateDynamicObject(19320, -51.05440, -1398.92871, 3.18140,   0.00000, 0.00000, 0.00000);
		PBASU[2] = CreateDynamicObject(3106, -50.95440, -1398.64868, 3.20140,   90.00000, 0.00000, 0.00000);
		PBASU[3] = CreateDynamicObject(19138, -50.97440, -1398.66870, 3.04140,   0.00000, 0.00000, 71.24000);
		PBASU[4] = CreateDynamicObject(19138, -51.09440, -1398.65869, 3.04140,   0.00000, 0.00000, 108.13000);
		PBASU[5] = CreateDynamicObject(3106, -51.13440, -1398.62866, 3.20140,   90.00000, 0.00000, 0.00000);
		PBASU[6] = CreateDynamicObject(19527, -50.59440, -1397.82874, 1.38140,   0.00000, 0.00000, 0.00000);
		PBASU[7] = CreateDynamicObject(18963, -50.70440, -1397.84875, 2.20140,   0.00000, -40.00000, 0.00000);
		PBASU[8] = CreateDynamicObject(19626, -50.63440, -1397.49866, 2.24140,   -18.00000, 0.00000, 0.00000);
		PBASU[9] = CreateDynamicObject(18735, -51.51440, -1397.44873, 1.37140,   0.00000, -40.00000, 180.00000);
		PBASU[10] = CreateDynamicObject(19836, -51.98440, -1397.10876, 1.40140,   0.00000, 0.00000, 0.00000);
		PBASU[11] = CreateDynamicObject(19583, -51.96440, -1396.86877, 1.40140,   0.00000, 0.00000, 0.00000);
		PBASU[12] = CreateDynamicObject(2597, -53.65440, -1398.50867, 2.22140,   0.00000, 0.00000, 0.00000);

		PLSSF[0] = CreateDynamicObject(19527, -345.81161, -1034.46228, 58.32000,   0.00000, 0.00000, 0.00000);
		PLSSF[1] = CreateDynamicObject(19626, -345.85159, -1034.13220, 59.18000,   -18.00000, 0.00000, 0.00000);
		PLSSF[2] = CreateDynamicObject(18963, -345.92160, -1034.48230, 59.14000,   0.00000, -40.00000, 0.00000);
		PLSSF[3] = CreateDynamicObject(18735, -346.73160, -1034.08228, 58.31000,   0.00000, -40.00000, 180.00000);
		PLSSF[4] = CreateDynamicObject(19583, -347.18161, -1033.50232, 58.34000,   0.00000, 0.00000, 0.00000);
		PLSSF[5] = CreateDynamicObject(19919, -346.25159, -1035.58228, 58.32000,   0.00000, 0.00000, 0.00000);
		PLSSF[6] = CreateDynamicObject(3106, -346.17160, -1035.28223, 60.14000,   90.00000, 0.00000, 0.00000);
		PLSSF[7] = CreateDynamicObject(19138, -346.19159, -1035.30225, 59.98000,   0.00000, 0.00000, 71.24000);
		PLSSF[8] = CreateDynamicObject(19836, -347.20160, -1033.74231, 58.34000,   0.00000, 0.00000, 0.00000);
		PLSSF[9] = CreateDynamicObject(19138, -346.31161, -1035.29224, 59.98000,   0.00000, 0.00000, 108.13000);
		PLSSF[10] = CreateDynamicObject(3106, -346.35159, -1035.26221, 60.14000,   90.00000, 0.00000, 0.00000);
		PLSSF[11] = CreateDynamicObject(19320, -346.27161, -1035.56226, 60.12000,   0.00000, 0.00000, 0.00000);
		PLSSF[12] = CreateDynamicObject(2597, -348.87161, -1035.14221, 59.16000,   0.00000, 0.00000, 0.00000);

		PGILI[0] = CreateDynamicObject(19919, -2814.71021, -1530.67590, 139.85130,   0.00000, 0.00000, 0.00000);
		PGILI[1] = CreateDynamicObject(19320, -2814.73022, -1530.65588, 141.65129,   0.00000, 0.00000, 0.00000);
		PGILI[2] = CreateDynamicObject(19138, -2814.65015, -1530.39587, 141.51129,   0.00000, 0.00000, 71.24000);
		PGILI[3] = CreateDynamicObject(3106, -2814.63013, -1530.37585, 141.67130,   90.00000, 0.00000, 0.00000);
		PGILI[4] = CreateDynamicObject(19138, -2814.77026, -1530.38586, 141.51129,   0.00000, 0.00000, 108.13000);
		PGILI[5] = CreateDynamicObject(3106, -2814.81006, -1530.35583, 141.67130,   90.00000, 0.00000, 0.00000);
		PGILI[6] = CreateDynamicObject(2597, -2817.33008, -1530.23584, 140.69130,   0.00000, 0.00000, 0.00000);
		PGILI[7] = CreateDynamicObject(18963, -2814.38013, -1529.57593, 140.67130,   0.00000, -40.00000, 0.00000);
		PGILI[8] = CreateDynamicObject(19527, -2814.27026, -1529.55591, 139.85130,   0.00000, 0.00000, 0.00000);
		PGILI[9] = CreateDynamicObject(19626, -2814.31006, -1529.22583, 140.71129,   -18.00000, 0.00000, 0.00000);
		PGILI[10] = CreateDynamicObject(18735, -2815.19019, -1529.17590, 139.84129,   0.00000, -40.00000, 180.00000);
		PGILI[11] = CreateDynamicObject(19836, -2815.66016, -1528.83594, 139.87129,   0.00000, 0.00000, 0.00000);
		PGILI[12] = CreateDynamicObject(19583, -2815.64014, -1528.59595, 139.87129,   0.00000, 0.00000, 0.00000);

		PJULIU[0] = CreateDynamicObject(19919, 2624.55591, 2416.33838, 9.82780,   0.00000, 0.00000, 0.00000);
		PJULIU[1] = CreateDynamicObject(19320, 2624.53589, 2416.35815, 11.62780,   0.00000, 0.00000, 0.00000);
		PJULIU[2] = CreateDynamicObject(19138, 2624.61597, 2416.61816, 11.48780,   0.00000, 0.00000, 71.24000);
		PJULIU[3] = CreateDynamicObject(3106, 2624.63599, 2416.63818, 11.64780,   90.00000, 0.00000, 0.00000);
		PJULIU[4] = CreateDynamicObject(19138, 2624.49585, 2416.62817, 11.48780,   0.00000, 0.00000, 108.13000);
		PJULIU[5] = CreateDynamicObject(3106, 2624.45605, 2416.65820, 11.64780,   90.00000, 0.00000, 0.00000);
		PJULIU[6] = CreateDynamicObject(19527, 2624.99585, 2417.45825, 9.82780,   0.00000, 0.00000, 0.00000);
		PJULIU[7] = CreateDynamicObject(18963, 2624.88599, 2417.43823, 10.64780,   0.00000, -40.00000, 0.00000);
		PJULIU[8] = CreateDynamicObject(19626, 2624.95605, 2417.78833, 10.68780,   -18.00000, 0.00000, 0.00000);
		PJULIU[9] = CreateDynamicObject(2597, 2621.93604, 2416.77832, 10.66780,   0.00000, 0.00000, 0.00000);
		PJULIU[10] = CreateDynamicObject(18735, 2624.07593, 2417.83838, 9.81780,   0.00000, -40.00000, 180.00000);
		PJULIU[11] = CreateDynamicObject(19836, 2623.60596, 2418.17822, 9.84780,   0.00000, 0.00000, 0.00000);
		PJULIU[12] = CreateDynamicObject(19583, 2623.62598, 2418.41821, 9.84780,   0.00000, 0.00000, 0.00000);

		PPICKE[0] = CreateDynamicObject(2597, 2109.84351, 2736.91846, 10.66780,   0.00000, 0.00000, 0.00000);
		PPICKE[1] = CreateDynamicObject(19919, 2112.46338, 2736.47852, 9.82780,   0.00000, 0.00000, 0.00000);
		PPICKE[2] = CreateDynamicObject(19320, 2112.44336, 2736.49829, 11.62780,   0.00000, 0.00000, 0.00000);
		PPICKE[3] = CreateDynamicObject(3106, 2112.36353, 2736.79834, 11.64780,   90.00000, 0.00000, 0.00000);
		PPICKE[4] = CreateDynamicObject(19138, 2112.40332, 2736.76831, 11.48780,   0.00000, 0.00000, 108.13000);
		PPICKE[5] = CreateDynamicObject(19138, 2112.52344, 2736.75830, 11.48780,   0.00000, 0.00000, 71.24000);
		PPICKE[6] = CreateDynamicObject(3106, 2112.54346, 2736.77832, 11.64780,   90.00000, 0.00000, 0.00000);
		PPICKE[7] = CreateDynamicObject(19836, 2111.51343, 2738.31836, 9.84780,   0.00000, 0.00000, 0.00000);
		PPICKE[8] = CreateDynamicObject(18735, 2111.98340, 2737.97852, 9.81780,   0.00000, -40.00000, 180.00000);
		PPICKE[9] = CreateDynamicObject(19583, 2111.53345, 2738.55835, 9.84780,   0.00000, 0.00000, 0.00000);
		PPICKE[10] = CreateDynamicObject(18963, 2112.79346, 2737.57837, 10.64780,   0.00000, -40.00000, 0.00000);
		PPICKE[11] = CreateDynamicObject(19527, 2112.90332, 2737.59839, 9.82780,   0.00000, 0.00000, 0.00000);
		PPICKE[12] = CreateDynamicObject(19626, 2112.86353, 2737.92847, 10.68780,   -18.00000, 0.00000, 0.00000);

		PAA[0] = CreateDynamicObject(2597, 417.85608, 2543.32349, 16.26830,   0.00000, 0.00000, 0.00000);
		PAA[1] = CreateDynamicObject(19836, 419.52609, 2544.72339, 15.44830,   0.00000, 0.00000, 0.00000);
		PAA[2] = CreateDynamicObject(19583, 419.54608, 2544.96338, 15.44830,   0.00000, 0.00000, 0.00000);
		PAA[3] = CreateDynamicObject(18735, 419.99609, 2544.38354, 15.41830,   0.00000, -40.00000, 180.00000);
		PAA[4] = CreateDynamicObject(3106, 420.37610, 2543.20337, 17.24830,   90.00000, 0.00000, 0.00000);
		PAA[5] = CreateDynamicObject(19320, 420.45609, 2542.90332, 17.22830,   0.00000, 0.00000, 0.00000);
		PAA[6] = CreateDynamicObject(19138, 420.41608, 2543.17334, 17.08830,   0.00000, 0.00000, 108.13000);
		PAA[7] = CreateDynamicObject(19919, 420.47610, 2542.88354, 15.42830,   0.00000, 0.00000, 0.00000);
		PAA[8] = CreateDynamicObject(19138, 420.53610, 2543.16333, 17.08830,   0.00000, 0.00000, 71.24000);
		PAA[9] = CreateDynamicObject(3106, 420.55609, 2543.18335, 17.24830,   90.00000, 0.00000, 0.00000);
		PAA[10] = CreateDynamicObject(18963, 420.80609, 2543.98340, 16.24830,   0.00000, -40.00000, 0.00000);
		PAA[11] = CreateDynamicObject(19527, 420.91608, 2544.00342, 15.42830,   0.00000, 0.00000, 0.00000);
		PAA[12] = CreateDynamicObject(19626, 420.87610, 2544.33350, 16.28830,   -18.00000, 0.00000, 0.00000);

		PPAYA[0] = CreateDynamicObject(2597, -280.91211, 2654.35791, 62.58410,   0.00000, 0.00000, 0.00000);
		PPAYA[1] = CreateDynamicObject(19583, -279.22211, 2655.99780, 61.76410,   0.00000, 0.00000, 0.00000);
		PPAYA[2] = CreateDynamicObject(19836, -279.24210, 2655.75781, 61.76410,   0.00000, 0.00000, 0.00000);
		PPAYA[3] = CreateDynamicObject(18735, -278.77209, 2655.41797, 61.73410,   0.00000, -40.00000, 180.00000);
		PPAYA[4] = CreateDynamicObject(3106, -278.39209, 2654.23779, 63.56410,   90.00000, 0.00000, 0.00000);
		PPAYA[5] = CreateDynamicObject(19138, -278.35211, 2654.20776, 63.40410,   0.00000, 0.00000, 108.13000);
		PPAYA[6] = CreateDynamicObject(19626, -277.89209, 2655.36792, 62.60410,   -18.00000, 0.00000, 0.00000);
		PPAYA[7] = CreateDynamicObject(18963, -277.96210, 2655.01782, 62.56410,   0.00000, -40.00000, 0.00000);
		PPAYA[8] = CreateDynamicObject(19138, -278.23209, 2654.19775, 63.40410,   0.00000, 0.00000, 71.24000);
		PPAYA[9] = CreateDynamicObject(3106, -278.21210, 2654.21777, 63.56410,   90.00000, 0.00000, 0.00000);
		PPAYA[10] = CreateDynamicObject(19320, -278.31210, 2653.93774, 63.54410,   0.00000, 0.00000, 0.00000);
		PPAYA[11] = CreateDynamicObject(19919, -278.29208, 2653.91797, 61.74410,   0.00000, 0.00000, 0.00000);
		PPAYA[12] = CreateDynamicObject(19527, -277.85211, 2655.03784, 61.74410,   0.00000, 0.00000, 0.00000);

		PELQ[0] = CreateDynamicObject(2597, -1480.22400, 2612.55957, 58.62880,   0.00000, 0.00000, 0.00000);
		PELQ[1] = CreateDynamicObject(19919, -1477.60400, 2612.11963, 57.78880,   0.00000, 0.00000, 0.00000);
		PELQ[2] = CreateDynamicObject(19320, -1477.62390, 2612.13940, 59.58880,   0.00000, 0.00000, 0.00000);
		PELQ[3] = CreateDynamicObject(19138, -1477.66394, 2612.40942, 59.44880,   0.00000, 0.00000, 108.13000);
		PELQ[4] = CreateDynamicObject(3106, -1477.70398, 2612.43945, 59.60880,   90.00000, 0.00000, 0.00000);
		PELQ[5] = CreateDynamicObject(19138, -1477.54395, 2612.39941, 59.44880,   0.00000, 0.00000, 71.24000);
		PELQ[6] = CreateDynamicObject(3106, -1477.52393, 2612.41943, 59.60880,   90.00000, 0.00000, 0.00000);
		PELQ[7] = CreateDynamicObject(18735, -1478.08398, 2613.61963, 57.77880,   0.00000, -40.00000, 180.00000);
		PELQ[8] = CreateDynamicObject(19836, -1478.55396, 2613.95947, 57.80880,   0.00000, 0.00000, 0.00000);
		PELQ[9] = CreateDynamicObject(18963, -1477.27393, 2613.21948, 58.60880,   0.00000, -40.00000, 0.00000);
		PELQ[10] = CreateDynamicObject(19527, -1477.16394, 2613.23950, 57.78880,   0.00000, 0.00000, 0.00000);
		PELQ[11] = CreateDynamicObject(19583, -1478.53394, 2614.19946, 57.80880,   0.00000, 0.00000, 0.00000);
		PELQ[12] = CreateDynamicObject(19626, -1477.20398, 2613.56958, 58.64880,   -18.00000, 0.00000, 0.00000);

		PLSF[0] = CreateDynamicObject(19527, -1846.16101, 1280.77979, 21.57000,   0.00000, 0.00000, 0.00000);
		PLSF[1] = CreateDynamicObject(19626, -1846.20105, 1281.10986, 22.43000,   -18.00000, 0.00000, 0.00000);
		PLSF[2] = CreateDynamicObject(18963, -1846.27100, 1280.75977, 22.39000,   0.00000, -40.00000, 0.00000);
		PLSF[3] = CreateDynamicObject(19919, -1846.60107, 1279.65979, 21.57000,   0.00000, 0.00000, 0.00000);
		PLSF[4] = CreateDynamicObject(3106, -1846.52100, 1279.95984, 23.39000,   90.00000, 0.00000, 0.00000);
		PLSF[5] = CreateDynamicObject(19138, -1846.54102, 1279.93982, 23.23000,   0.00000, 0.00000, 71.24000);
		PLSF[6] = CreateDynamicObject(19320, -1846.62097, 1279.67981, 23.37000,   0.00000, 0.00000, 0.00000);
		PLSF[7] = CreateDynamicObject(19138, -1846.66101, 1279.94983, 23.23000,   0.00000, 0.00000, 108.13000);
		PLSF[8] = CreateDynamicObject(3106, -1846.70105, 1279.97986, 23.39000,   90.00000, 0.00000, 0.00000);
		PLSF[9] = CreateDynamicObject(18735, -1847.08105, 1281.15979, 21.56000,   0.00000, -40.00000, 180.00000);
		PLSF[10] = CreateDynamicObject(19836, -1847.55103, 1281.49976, 21.59000,   0.00000, 0.00000, 0.00000);
		PLSF[11] = CreateDynamicObject(19583, -1847.53101, 1281.73975, 21.59000,   0.00000, 0.00000, 0.00000);
		PLSF[12] = CreateDynamicObject(2597, -1849.22107, 1280.09985, 22.41000,   0.00000, 0.00000, 0.00000);

		PPIZEA[0] = CreateDynamicObject(19583, 2105.72778, -1939.40137, 12.57440,   0.00000, 0.00000, 0.00000);
		PPIZEA[1] = CreateDynamicObject(19836, 2105.70776, -1939.64136, 12.57440,   0.00000, 0.00000, 0.00000);
		PPIZEA[2] = CreateDynamicObject(18735, 2106.17773, -1939.98132, 12.54440,   0.00000, -40.00000, 180.00000);
		PPIZEA[3] = CreateDynamicObject(19626, 2107.05786, -1940.03125, 13.41440,   -18.00000, 0.00000, 0.00000);
		PPIZEA[4] = CreateDynamicObject(18963, 2106.98779, -1940.38135, 13.37440,   0.00000, -40.00000, 0.00000);
		PPIZEA[5] = CreateDynamicObject(19527, 2107.09766, -1940.36133, 12.55440,   0.00000, 0.00000, 0.00000);
		PPIZEA[6] = CreateDynamicObject(2597, 2104.03784, -1941.04126, 13.39440,   0.00000, 0.00000, 0.00000);
		PPIZEA[7] = CreateDynamicObject(3106, 2106.55786, -1941.16125, 14.37440,   90.00000, 0.00000, 0.00000);
		PPIZEA[8] = CreateDynamicObject(19138, 2106.59766, -1941.19128, 14.21440,   0.00000, 0.00000, 108.13000);
		PPIZEA[9] = CreateDynamicObject(3106, 2106.73779, -1941.18127, 14.37440,   90.00000, 0.00000, 0.00000);
		PPIZEA[10] = CreateDynamicObject(19138, 2106.71777, -1941.20129, 14.21440,   0.00000, 0.00000, 71.24000);
		PPIZEA[11] = CreateDynamicObject(19320, 2106.63770, -1941.46130, 14.35440,   0.00000, 0.00000, 0.00000);
		PPIZEA[12] = CreateDynamicObject(19919, 2106.65771, -1941.48132, 12.55440,   0.00000, 0.00000, 0.00000);

		PDELAPI[0] = CreateDynamicObject(19919, 2025.33191, -1781.54272, 12.55440,   0.00000, 0.00000, 0.00000);
		PDELAPI[1] = CreateDynamicObject(19320, 2025.31201, -1781.52271, 14.35440,   0.00000, 0.00000, 0.00000);
		PDELAPI[2] = CreateDynamicObject(19138, 2025.39197, -1781.26270, 14.21440,   0.00000, 0.00000, 71.24000);
		PDELAPI[3] = CreateDynamicObject(3106, 2025.41199, -1781.24268, 14.37440,   90.00000, 0.00000, 0.00000);
		PDELAPI[4] = CreateDynamicObject(19138, 2025.27197, -1781.25269, 14.21440,   0.00000, 0.00000, 108.13000);
		PDELAPI[5] = CreateDynamicObject(3106, 2025.23193, -1781.22266, 14.37440,   90.00000, 0.00000, 0.00000);
		PDELAPI[6] = CreateDynamicObject(19527, 2025.77197, -1780.42273, 12.55440,   0.00000, 0.00000, 0.00000);
		PDELAPI[7] = CreateDynamicObject(18963, 2025.66199, -1780.44275, 13.37440,   0.00000, -40.00000, 0.00000);
		PDELAPI[8] = CreateDynamicObject(19626, 2025.73193, -1780.09265, 13.41440,   -18.00000, 0.00000, 0.00000);
		PDELAPI[9] = CreateDynamicObject(18735, 2024.85193, -1780.04272, 12.54440,   0.00000, -40.00000, 180.00000);
		PDELAPI[10] = CreateDynamicObject(2597, 2022.71191, -1781.10266, 13.39440,   0.00000, 0.00000, 0.00000);
		PDELAPI[11] = CreateDynamicObject(19836, 2024.38196, -1779.70276, 12.57440,   0.00000, 0.00000, 0.00000);
		PDELAPI[12] = CreateDynamicObject(19583, 2024.40198, -1779.46277, 12.57440,   0.00000, 0.00000, 0.00000);

		PFADO[0] = CreateDynamicObject(2597, -2131.12891, 260.03220, 35.70670,   0.00000, 0.00000, 0.00000);
		PFADO[1] = CreateDynamicObject(19919, -2128.50903, 259.59219, 34.86670,   0.00000, 0.00000, 0.00000);
		PFADO[2] = CreateDynamicObject(19320, -2128.52905, 259.61221, 36.66670,   0.00000, 0.00000, 0.00000);
		PFADO[3] = CreateDynamicObject(19138, -2128.56909, 259.88220, 36.52670,   0.00000, 0.00000, 108.13000);
		PFADO[4] = CreateDynamicObject(3106, -2128.60889, 259.91220, 36.68670,   90.00000, 0.00000, 0.00000);
		PFADO[5] = CreateDynamicObject(19138, -2128.44897, 259.87222, 36.52670,   0.00000, 0.00000, 71.24000);
		PFADO[6] = CreateDynamicObject(3106, -2128.42896, 259.89221, 36.68670,   90.00000, 0.00000, 0.00000);
		PFADO[7] = CreateDynamicObject(18735, -2128.98901, 261.09219, 34.85670,   0.00000, -40.00000, 180.00000);
		PFADO[8] = CreateDynamicObject(19836, -2129.45898, 261.43222, 34.88670,   0.00000, 0.00000, 0.00000);
		PFADO[9] = CreateDynamicObject(18963, -2128.17896, 260.69220, 35.68670,   0.00000, -40.00000, 0.00000);
		PFADO[10] = CreateDynamicObject(19583, -2129.43896, 261.67221, 34.88670,   0.00000, 0.00000, 0.00000);
		PFADO[11] = CreateDynamicObject(19527, -2128.06909, 260.71222, 34.86670,   0.00000, 0.00000, 0.00000);
		PFADO[12] = CreateDynamicObject(19626, -2128.10889, 261.04221, 35.72670,   -18.00000, 0.00000, 0.00000);

		PASF[0] = CreateDynamicObject(2597, -1363.31238, 15.58540, 6.18340,   0.00000, 0.00000, 0.00000);
		PASF[1] = CreateDynamicObject(19919, -1360.69238, 15.14540, 5.34340,   0.00000, 0.00000, 0.00000);
		PASF[2] = CreateDynamicObject(19320, -1360.71228, 15.16540, 7.14340,   0.00000, 0.00000, 0.00000);
		PASF[3] = CreateDynamicObject(19138, -1360.75232, 15.43540, 7.00340,   0.00000, 0.00000, 108.13000);
		PASF[4] = CreateDynamicObject(19138, -1360.63232, 15.42540, 7.00340,   0.00000, 0.00000, 71.24000);
		PASF[5] = CreateDynamicObject(3106, -1360.79236, 15.46540, 7.16340,   90.00000, 0.00000, 0.00000);
		PASF[6] = CreateDynamicObject(3106, -1360.61230, 15.44540, 7.16340,   90.00000, 0.00000, 0.00000);
		PASF[7] = CreateDynamicObject(18963, -1360.36230, 16.24540, 6.16340,   0.00000, -40.00000, 0.00000);
		PASF[8] = CreateDynamicObject(19527, -1360.25232, 16.26540, 5.34340,   0.00000, 0.00000, 0.00000);
		PASF[9] = CreateDynamicObject(18735, -1361.17236, 16.64540, 5.33340,   0.00000, -40.00000, 180.00000);
		PASF[10] = CreateDynamicObject(19626, -1360.29236, 16.59540, 6.20340,   -18.00000, 0.00000, 0.00000);
		PASF[11] = CreateDynamicObject(19836, -1361.64233, 16.98540, 5.36340,   0.00000, 0.00000, 0.00000);
		PASF[12] = CreateDynamicObject(19583, -1361.62231, 17.22540, 5.36340,   0.00000, 0.00000, 0.00000);

		PC1[0] = CreateDynamicObject(19583, -2221.16675, -144.83220, 34.34780,   0.00000, 0.00000, 0.00000);
		PC1[1] = CreateDynamicObject(19836, -2221.18677, -145.07220, 34.34780,   0.00000, 0.00000, 0.00000);
		PC1[2] = CreateDynamicObject(18735, -2220.71680, -145.41220, 34.31780,   0.00000, -40.00000, 180.00000);
		PC1[3] = CreateDynamicObject(19138, -2220.29688, -146.62221, 35.98780,   0.00000, 0.00000, 108.13000);
		PC1[4] = CreateDynamicObject(19320, -2220.25684, -146.89220, 36.12780,   0.00000, 0.00000, 0.00000);
		PC1[5] = CreateDynamicObject(18963, -2219.90674, -145.81219, 35.14780,   0.00000, -40.00000, 0.00000);
		PC1[6] = CreateDynamicObject(3106, -2220.15674, -146.61220, 36.14780,   90.00000, 0.00000, 0.00000);
		PC1[7] = CreateDynamicObject(2597, -2222.85669, -146.47220, 35.16780,   0.00000, 0.00000, 0.00000);
		PC1[8] = CreateDynamicObject(19626, -2219.83667, -145.46220, 35.18780,   -18.00000, 0.00000, 0.00000);
		PC1[9] = CreateDynamicObject(19138, -2220.17676, -146.63220, 35.98780,   0.00000, 0.00000, 71.24000);
		PC1[10] = CreateDynamicObject(19919, -2220.23682, -146.91220, 34.32780,   0.00000, 0.00000, 0.00000);
		PC1[11] = CreateDynamicObject(3106, -2220.33667, -146.59219, 36.14780,   90.00000, 0.00000, 0.00000);
		PC1[12] = CreateDynamicObject(19527, -2219.79688, -145.79221, 34.32780,   0.00000, 0.00000, 0.00000);

		TextoDulces[0] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, 1703.4247, -1870.5588, 13.7403,10.0,0,0);//
		TextoDulces[1] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, 1692.5258, -1974.1092, 8.7722,10.0,0,0);//
		TextoDulces[2] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, -1715.1521, -40.6276, 3.4822,10.0,0,0);//
		TextoDulces[3] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, 155.1109, -288.0634, 1.5656,10.0,0,0);//
		TextoDulces[4] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, -2672.5023, 1372.1165, 7.1026,10.0,0,0);//
		TextoDulces[5] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, -2545.7396, 1214.4541, 37.3694,10.0,0,0);//
		TextoDulces[6] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, 2354.7189, -644.4589, 128.0773,10.0,0,0);//
		TextoDulces[7] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, -2671.1478, 229.4940, 4.2891,10.0,0,0);//
		TextoDulces[8] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, -2748.5333, 197.2070, 7.0754,10.0,0,0);//
		TextoDulces[9] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, 2185.3937, -1344.2394, 23.9319,10.0,0,0);//
		TextoDulces[10] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, -2488.6890, -717.7959, 139.2878,10.0,0,0);//
		TextoDulces[11] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, -2488.7308, 2357.1545, 10.2017,10.0,0,0);//
		TextoDulces[12] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, -1315.2464, 2509.3848, 87.0095,10.0,0,0);//
		TextoDulces[13] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, 2108.2594, 2204.7161, 10.7878,10.0,0,0);//
		TextoDulces[14] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, 1034.1938, 2096.8608, 10.7878,10.0,0,0);//
		TextoDulces[15] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, 1099.9021, 1400.0367, 6.6603,10.0,0,0);//
		TextoDulces[16] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, 964.6849, -1543.4922, 13.6514,10.0,0,0);//
		TextoDulces[17] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, 324.9424, -1756.0784, 4.5136,10.0,0,0);//
		TextoDulces[18] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, -345.8416, -1034.4823, 59.2600,10.0,0,0);//
		TextoDulces[19] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, -2814.3001, -1529.5759, 140.7513,10.0,0,0);//
		TextoDulces[20] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, 2624.9660, 2417.4382, 10.7278,10.0,0,0);//
		TextoDulces[21] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, 2112.8735, 2737.5784, 10.7278,10.0,0,0);//
		TextoDulces[22] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, 420.8861, 2543.9834, 16.3283,10.0,0,0);//
		TextoDulces[23] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, -277.8821, 2655.0178, 62.6441,10.0,0,0);//
		TextoDulces[24] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, -1477.1939, 2613.2195, 58.6888,10.0,0,0);//
		TextoDulces[25] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, -1846.1910, 1280.7598, 22.4700,10.0,0,0);//
		TextoDulces[26] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, 2107.0678, -1940.3813, 13.4744,10.0,0,0);//
		TextoDulces[27] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, -2128.0990, 260.6922, 35.7667,10.0,0,0);//
		TextoDulces[28] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, -1360.2823, 16.2454, 6.2434,10.0,0,0);//
		TextoDulces[29] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, -2219.8267, -145.8122, 35.2278,10.0,0,0);//
		TextoDulces[30] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, -50.6244, -1397.8488, 2.2814,30.0,0,0);//

		TextoSombrero[0] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, 1700.2800, -1871.2286, 13.4173,7.0,0,0);//
		TextoSombrero[1] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, 1689.4757, -1974.7891, 8.6722,7.0,0,0);//
		TextoSombrero[2] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, -1718.1821, -41.3076, 3.4022,7.0,0,0);//
		TextoSombrero[3] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, 152.0609, -288.7434, 1.4256,7.0,0,0);//
		TextoSombrero[4] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, -2675.5508, 1372.1134, 6.9363,7.0,0,0);//
		TextoSombrero[5] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, 2351.7090, -645.1189, 127.9373,7.0,0,0);//
		TextoSombrero[6] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, -2548.7896, 1213.7742, 37.2694,7.0,0,0);//
		TextoSombrero[7] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, -2674.1777, 228.8340, 4.1891,7.0,0,0);//
		TextoSombrero[8] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, -2751.5632, 196.5470, 6.9554,7.0,0,0);//
		TextoSombrero[9] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, 2182.3638, -1344.8993, 23.8319,7.0,0,0);//
		TextoSombrero[10] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, -2491.7190, -718.4559, 139.1678,7.0,0,0);//
		TextoSombrero[11] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, -2491.7607, 2356.4961, 10.1217,7.0,0,0);//
		TextoSombrero[12] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, -1318.2965, 2508.7249, 86.8895,7.0,0,0);//
		TextoSombrero[13] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, 2105.2295, 2204.0562, 10.6678,7.0,0,0);//
		TextoSombrero[14] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, 1031.1637, 2096.2009, 10.6678,7.0,0,0);//
		TextoSombrero[15] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, 1096.8721, 1399.3768, 6.4803,7.0,0,0);//
		TextoSombrero[16] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, 961.6549, -1544.1521, 13.4514,7.0,0,0);//
		TextoSombrero[17] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, 321.8924, -1756.7383, 4.3536,7.0,0,0);//
		TextoSombrero[18] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, -348.8716, -1035.1422, 59.1600,7.0,0,0);//
		TextoSombrero[19] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, -2817.3301, -1530.2358, 140.6913,7.0,0,0);//
		TextoSombrero[20] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, 2621.9360, 2416.7783, 10.6678,7.0,0,0);//
		TextoSombrero[21] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, 2109.8435, 2736.9185, 10.6678,7.0,0,0);//
		TextoSombrero[22] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, 417.8561, 2543.3235, 16.2683,7.0,0,0);//
		TextoSombrero[23] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, -280.9121, 2654.3579, 62.5841,7.0,0,0);//
		TextoSombrero[24] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, -1480.2240, 2612.5596, 58.6288,7.0,0,0);//
		TextoSombrero[25] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, -1849.2211, 1280.0999, 22.4100,7.0,0,0);//
		TextoSombrero[26] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, 2104.0378, -1941.0413, 13.3944,7.0,0,0);//
		TextoSombrero[27] = Create3DTextLabel("{a51cff}Fuente mágica de dulces\n{d6eb10}/sacar caramelos",-1, 2025.7420, -1780.4427, 13.4544,7.0,0,0);//
		TextoSombrero[28] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, 2022.7119, -1781.1027, 13.3944,7.0,0,0);//
		TextoSombrero[29] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, -2131.1289, 260.0322, 35.7067,7.0,0,0);//
		TextoSombrero[30] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, -1363.3124, 15.5854, 6.1834,7.0,0,0);//
		TextoSombrero[31] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, -53.6544, -1398.5087, 2.2214,7.0,0,0);//
		TextoSombrero[32] = Create3DTextLabel("{a51cff}Sombreros descartables\n\n{d6eb10}/comprar sombrero{FFFFFF}\nCosto: {00cb00}$500",-1, -2222.8567, -146.4722, 35.1678,7.0,0,0);//
		t_cerveza = SetTimer("MusicaEventos", 1000, true);
		new Payasos[31];
		Payasos[0] = CreateActor(264, 11701.4641,-1871.5433,13.5699,0.0000); //UNITY1
		Payasos[1] = CreateActor(264, 1690.8203,-1975.2551,8.8247,  0.0000); //UNITY2
		Payasos[2] = CreateActor(264, 2024.1447,-1781.4346,13.5469, 0.0000); //DELANTE DE LA PIZZERIA GANTON
		Payasos[3] = CreateActor(264, 2105.6074,-1941.1617,13.5469, 0.0000); //PUESTO AL LADO DE LA PIZZERIA GANTON
		Payasos[4] = CreateActor(162, 2183.8794,-1345.0969,23.9844, 0.0000); //PUESTO COLINAS
		Payasos[5] = CreateActor(264, 963.0246,-1544.2631,13.5965,  0.0000); //PUESTO MARKET
		Payasos[6] = CreateActor(264, 323.3364,-1757.1311,4.5065,   0.0000); //PUESTO SANTA MARIA BEACH
		Payasos[7] = CreateActor(264, -52.4887,-1399.3075,2.3163,   0.0000); //PUESTO DEBAJO DEL PUENTE DE BASURERO
		Payasos[8] = CreateActor(264, -347.3540,-1035.5245,59.3118, 0.0000); //PUESTO MINI GRANJA
		Payasos[9] = CreateActor(264, 2352.9741,-645.4590,128.1030, 0.0000); //PUESTO COLINAS - MONTAÑA
		Payasos[10] = CreateActor(264, 2623.4084,2416.6296,10.8203, 0.0000); //PUESTO JULIUS LAS VENTURAS
		Payasos[11] = CreateActor(264, 2106.5540,2203.8977,10.8203, 0.0000); //PUESTO AUTOPISTA LAS VENTURAS
		Payasos[12] = CreateActor(264, 2111.2954,2736.5513,10.8203, 0.0000); //PUESTO GASOLINERA ARRIBA DE LV
		Payasos[13] = CreateActor(264, 1032.5673,2095.9473,10.8203, 0.0000); //PUESTO ENTREGA TRANSPORTISTA
		Payasos[14] = CreateActor(264, 1098.2841,1398.9840,6.6328,  0.0000); //PUESTO ESTADIO LAS VENTURAS

		if(HallX == true)
		{
			PuestoCamionero1 = CreateDynamicObject(19528, -1717.87402, -41.27636, 3.06317,   0.00000, -47.00000, 0.00000);
			PuestoCamionero2 = CreateDynamicObject(19528, -1717.87402, -41.27636, 3.76617,   0.00000, -47.00000, 0.00000);
			PuestoCamionero3 = CreateDynamicObject(19528, -1718.40002, -41.27060, 4.12820,   0.00000, -127.00000, 0.00000);
			PuestoCamionero4 = CreateDynamicObject(19528, -1718.40002, -41.27060, 3.38120,   0.00000, -127.00000, 0.00000);

			PuestoEstMuni1 = CreateDynamicObject(19528, 151.84090, -288.70340, 2.16560,   4.00000, -127.00000, 0.00000);
			PuestoEstMuni2 = CreateDynamicObject(19528, 151.84090, -288.70340, 1.40560,   4.00000, -127.00000, 0.00000);
			PuestoEstMuni3 = CreateDynamicObject(19528, 152.36090, -288.68341, 1.83470,   4.00000, -47.00000, 0.00000);
			PuestoEstMuni4 = CreateDynamicObject(19528, 152.36090, -288.68341, 1.08560,   4.00000, -47.00000, 0.00000);

			GorrosSFBridge1 = CreateDynamicObject(19528, -2675.27832, 1372.14355, 6.59570,   0.00000, -47.00000, 0.00000);
			GorrosSFBridge2 = CreateDynamicObject(19528, -2675.27832, 1372.14355, 7.30174,   0.00000, -47.00000, 0.00000);
			GorrosSFBridge3 = CreateDynamicObject(19528, -2675.79858, 1372.14355, 7.68170,   0.00000, -127.00000, 0.00000);
			GorrosSFBridge4 = CreateDynamicObject(19528, -2675.79858, 1372.14355, 6.93570,   0.00000, -127.00000, 0.00000);

			GorrosBridge1 = CreateDynamicObject(19528, -2548.52100, 1213.80835, 36.96060,   0.00000, -45.00000, 0.00000);
			GorrosBridge2 = CreateDynamicObject(19528, -2548.52100, 1213.80835, 37.63890,   0.00000, -45.00000, 359.79901);
			GorrosBridge3 = CreateDynamicObject(19528, -2548.98096, 1213.80835, 37.27596,   0.00000, -135.00000, 0.00000);
			GorrosBridge4 = CreateDynamicObject(19528, -2548.98096, 1213.80835, 37.98097,   0.00000, -135.00000, 0.00000);

			PuestoUnity1 = CreateDynamicObject(19528, 1700.06006, -1871.18872, 13.39730,   4.00000, -127.00000, 0.00000);
			PuestoUnity2 = CreateDynamicObject(19528, 1700.06006, -1871.18872, 14.15730,   4.00000, -127.00000, 0.00000);
			PuestoUnity3 = CreateDynamicObject(19528, 1700.58008, -1871.16870, 13.81730,   4.00000, -47.00000, 0.00000);
			PuestoUnity4 = CreateDynamicObject(19528, 1700.58008, -1871.16870, 13.07730,   4.00000, -47.00000, 0.00000);

			PuestoUnityx1 = CreateDynamicObject(19528, 1689.25574, -1974.74915, 9.41220,   4.00000, -127.00000, 0.00000);
			PuestoUnityx2 = CreateDynamicObject(19528, 1689.25574, -1974.74915, 8.65220,   4.00000, -127.00000, 0.00000);
			PuestoUnityx3 = CreateDynamicObject(19528, 1689.77576, -1974.72913, 9.07220,   4.00000, -47.00000, 0.00000);
			PuestoUnityx4 = CreateDynamicObject(19528, 1689.77576, -1974.72913, 8.33220,   4.00000, -47.00000, 0.00000);

			PuestoMount1 = CreateDynamicObject(19528, 2352.00879, -645.05890, 127.59730,   4.00000, -47.00000, 0.00000);
			PuestoMount2 = CreateDynamicObject(19528, 2352.00879, -645.05890, 128.33730,   4.00000, -47.00000, 0.00000);
			PuestoMount3 = CreateDynamicObject(19528, 2351.48901, -645.07886, 127.91730,   4.00000, -127.00000, 0.00000);
			PuestoMount4 = CreateDynamicObject(19528, 2351.48901, -645.07886, 128.67729,   4.00000, -127.00000, 0.00000);

			PuestoCB1 = CreateDynamicObject(19528, -2674.39771, 228.87399, 4.16910,   4.00000, -127.00000, 0.00000);
			PuestoCB2 = CreateDynamicObject(19528, -2674.39771, 228.87399, 4.92910,   4.00000, -127.00000, 0.00000);
			PuestoCB3 = CreateDynamicObject(19528, -2673.87793, 228.89400, 3.84910,   4.00000, -47.00000, 0.00000);
			PuestoCB4 = CreateDynamicObject(19528, -2673.87793, 228.89400, 4.58910,   4.00000, -47.00000, 0.00000);

			PuestoWeels1 = CreateDynamicObject(19528, -2751.26343, 196.60699, 6.61540,   4.00000, -47.00000, 0.00000);
			PuestoWeels2 = CreateDynamicObject(19528, -2751.26343, 196.60699, 7.35540,   4.00000, -47.00000, 0.00000);
			PuestoWeels3 = CreateDynamicObject(19528, -2751.78320, 196.58699, 6.93540,   4.00000, -127.00000, 0.00000);
			PuestoWeels4 = CreateDynamicObject(19528, -2751.78320, 196.58699, 7.69540,   4.00000, -127.00000, 0.00000);

			PuestoColinas1 = CreateDynamicObject(19528, 2182.14380, -1344.85938, 24.57190,   4.00000, -127.00000, 0.00000);
			PuestoColinas2 = CreateDynamicObject(19528, 2182.14380, -1344.85938, 23.81190,   4.00000, -127.00000, 0.00000);
			PuestoColinas3 = CreateDynamicObject(19528, 2182.66357, -1344.83936, 24.23190,   4.00000, -47.00000, 0.00000);
			PuestoColinas4 = CreateDynamicObject(19528, 2182.66357, -1344.83936, 23.49190,   4.00000, -47.00000, 0.00000);

			PuestoCNN1 = CreateDynamicObject(19528, -2491.93896, -718.41589, 139.90779,   4.00000, -127.00000, 0.00000);
			PuestoCNN2 = CreateDynamicObject(19528, -2491.41919, -718.39594, 139.53987,   4.00000, -47.00000, 0.00000);
			PuestoCNN3 = CreateDynamicObject(19528, -2491.93896, -718.41589, 139.14780,   4.00000, -127.00000, 0.00000);
			PuestoCNN4 = CreateDynamicObject(19528, -2491.41919, -718.39594, 138.82780,   4.00000, -47.00000, 0.00000);

			PuestoBayside1 = CreateDynamicObject(19528, -2491.98071, 2356.53613, 10.86170,   4.00000, -127.00000, 0.00000);
			PuestoBayside2 = CreateDynamicObject(19528, -2491.98071, 2356.53613, 10.10170,   4.00000, -127.00000, 0.00000);
			PuestoBayside3 = CreateDynamicObject(19528, -2491.46094, 2356.55615, 9.78170,   4.00000, -47.00000, 0.00000);
			PuestoBayside4 = CreateDynamicObject(19528, -2491.46094, 2356.55615, 10.52170,   4.00000, -47.00000, 0.00000);

			PuestoQuebrado1 = CreateDynamicObject(19528, -1318.51648, 2508.76489, 86.86950,   4.00000, -127.00000, 0.00000);
			PuestoQuebrado2 = CreateDynamicObject(19528, -1318.51648, 2508.76489, 87.62950,   4.00000, -127.00000, 0.00000);
			PuestoQuebrado3 = CreateDynamicObject(19528, -1317.99646, 2508.78491, 86.54950,   4.00000, -47.00000, 0.00000);
			PuestoQuebrado4 = CreateDynamicObject(19528, -1317.99646, 2508.78491, 87.28950,   4.00000, -47.00000, 0.00000);

			PuestoEme1 = CreateDynamicObject(19528, 2105.52930, 2204.11621, 10.32780,   4.00000, -47.00000, 0.00000);
			PuestoEme2 = CreateDynamicObject(19528, 2105.52930, 2204.11621, 11.06780,   4.00000, -47.00000, 0.00000);
			PuestoEme3 = CreateDynamicObject(19528, 2105.00952, 2204.09619, 10.64780,   4.00000, -127.00000, 0.00000);
			PuestoEme4 = CreateDynamicObject(19528, 2105.00952, 2204.09619, 11.40780,   4.00000, -127.00000, 0.00000);

			PuestoTrans1 = CreateDynamicObject(19528, 1031.46375, 2096.26099, 10.32780,   4.00000, -47.00000, 0.00000);
			PuestoTrans2 = CreateDynamicObject(19528, 1031.46375, 2096.26099, 11.06780,   4.00000, -47.00000, 0.00000);
			PuestoTrans3 = CreateDynamicObject(19528, 1030.94373, 2096.24097, 10.64780,   4.00000, -127.00000, 0.00000);
			PuestoTrans4 = CreateDynamicObject(19528, 1030.94373, 2096.24097, 11.40780,   4.00000, -127.00000, 0.00000);

			PuestoEstaLV1 = CreateDynamicObject(19528, 1096.65210, 1399.41675, 7.22030,   4.00000, -127.00000, 0.00000);
			PuestoEstaLV2 = CreateDynamicObject(19528, 1096.65210, 1399.41675, 6.46030,   4.00000, -127.00000, 0.00000);
			PuestoEstaLV3 = CreateDynamicObject(19528, 1097.17212, 1399.43677, 6.88030,   4.00000, -47.00000, 0.00000);
			PuestoEstaLV4 = CreateDynamicObject(19528, 1097.17212, 1399.43677, 6.14030,   4.00000, -47.00000, 0.00000);

			PuestoMarket1 = CreateDynamicObject(19528, 961.43488, -1544.11218, 13.43140,   4.00000, -127.00000, 0.00000);
			PuestoMarket2 = CreateDynamicObject(19528, 961.43488, -1544.11218, 14.19140,   4.00000, -127.00000, 0.00000);
			PuestoMarket3 = CreateDynamicObject(19528, 961.95490, -1544.09216, 13.11140,   4.00000, -47.00000, 0.00000);
			PuestoMarket4 = CreateDynamicObject(19528, 961.95490, -1544.09216, 13.85140,   4.00000, -47.00000, 0.00000);

			PuestoSMB1 = CreateDynamicObject(19528, 321.67239, -1756.69836, 5.09360,   4.00000, -127.00000, 0.00000);
			PuestoSMB2 = CreateDynamicObject(19528, 321.67239, -1756.69836, 4.33360,   4.00000, -127.00000, 0.00000);
			PuestoSMB3 = CreateDynamicObject(19528, 322.19241, -1756.67834, 4.75360,   4.00000, -47.00000, 0.00000);
			PuestoSMB4 = CreateDynamicObject(19528, 322.19241, -1756.67834, 4.01360,   4.00000, -47.00000, 0.00000);

			PuestoBasu1 = CreateDynamicObject(19528, -53.87440, -1398.46875, 2.96140,   4.00000, -127.00000, 0.00000);
			PuestoBasu2 = CreateDynamicObject(19528, -53.87440, -1398.46875, 2.20140,   4.00000, -127.00000, 0.00000);
			PuestoBasu3 = CreateDynamicObject(19528, -53.35440, -1398.44873, 2.62140,   4.00000, -47.00000, 0.00000);
			PuestoBasu4 = CreateDynamicObject(19528, -53.35440, -1398.44873, 1.88140,   4.00000, -47.00000, 0.00000);

			PuestoLSF1 = CreateDynamicObject(19528, -348.57159, -1035.08228, 58.82000,   4.00000, -47.00000, 0.00000);
			PuestoLSF2 = CreateDynamicObject(19528, -348.57159, -1035.08228, 59.56000,   4.00000, -47.00000, 0.00000);
			PuestoLSF3 = CreateDynamicObject(19528, -349.09161, -1035.10229, 59.14000,   4.00000, -127.00000, 0.00000);
			PuestoLSF4 = CreateDynamicObject(19528, -349.09161, -1035.10229, 59.90000,   4.00000, -127.00000, 0.00000);

			PuestoMC1 = CreateDynamicObject(19528, -2817.55005, -1530.19592, 141.43129,   4.00000, -127.00000, 0.00000);
			PuestoMC2 = CreateDynamicObject(19528, -2817.55005, -1530.19592, 140.67130,   4.00000, -127.00000, 0.00000);
			PuestoMC3 = CreateDynamicObject(19528, -2817.03027, -1530.17590, 141.09129,   4.00000, -47.00000, 0.00000);
			PuestoMC4 = CreateDynamicObject(19528, -2817.03027, -1530.17590, 140.35130,   4.00000, -47.00000, 0.00000);

			PuestoJT1 = CreateDynamicObject(19528, 2621.71606, 2416.81836, 10.64780,   4.00000, -127.00000, 0.00000);
			PuestoJT2 = CreateDynamicObject(19528, 2621.71606, 2416.81836, 11.40780,   4.00000, -127.00000, 0.00000);
			PuestoJT3 = CreateDynamicObject(19528, 2622.23584, 2416.83838, 10.32780,   4.00000, -47.00000, 0.00000);
			PuestoJT4 = CreateDynamicObject(19528, 2622.23584, 2416.83838, 11.06780,   4.00000, -47.00000, 0.00000);

			PuestoPP1 = CreateDynamicObject(19528, 2109.62354, 2736.95850, 10.64780,   4.00000, -127.00000, 0.00000);
			PuestoPP2 = CreateDynamicObject(19528, 2109.62354, 2736.95850, 11.40780,   4.00000, -127.00000, 0.00000);
			PuestoPP3 = CreateDynamicObject(19528, 2110.14331, 2736.97852, 10.32780,   4.00000, -47.00000, 0.00000);
			PuestoPP4 = CreateDynamicObject(19528, 2110.14331, 2736.97852, 11.06780,   4.00000, -47.00000, 0.00000);

			PuestoAA1 = CreateDynamicObject(19528, 418.15610, 2543.38354, 16.66830,   4.00000, -47.00000, 0.00000);
			PuestoAA2 = CreateDynamicObject(19528, 418.15610, 2543.38354, 15.92830,   4.00000, -47.00000, 0.00000);
			PuestoAA3 = CreateDynamicObject(19528, 417.63608, 2543.36353, 16.24830,   4.00000, -127.00000, 0.00000);
			PuestoAA4 = CreateDynamicObject(19528, 417.63608, 2543.36353, 17.00830,   4.00000, -127.00000, 0.00000);

			PuestoPaya1 = CreateDynamicObject(19528, -280.61209, 2654.41797, 62.98410,   4.00000, -47.00000, 0.00000);
			PuestoPaya2 = CreateDynamicObject(19528, -280.61209, 2654.41797, 62.24410,   4.00000, -47.00000, 0.00000);
			PuestoPaya3 = CreateDynamicObject(19528, -281.13211, 2654.39795, 63.32410,   4.00000, -127.00000, 0.00000);
			PuestoPaya4 = CreateDynamicObject(19528, -281.13211, 2654.39795, 62.56410,   4.00000, -127.00000, 0.00000);

			PuestoElq1 = CreateDynamicObject(19528, -1479.92395, 2612.61963, 58.28880,   4.00000, -47.00000, 0.00000);
			PuestoElq2 = CreateDynamicObject(19528, -1479.92395, 2612.61963, 59.02880,   4.00000, -47.00000, 0.00000);
			PuestoElq3 = CreateDynamicObject(19528, -1480.44397, 2612.59961, 58.60880,   4.00000, -127.00000, 0.00000);
			PuestoElq4 = CreateDynamicObject(19528, -1480.44397, 2612.59961, 59.36880,   4.00000, -127.00000, 0.00000);

			PuestoLeSF1 = CreateDynamicObject(19528, -1848.92102, 1280.15979, 22.07000,   4.00000, -47.00000, 0.00000);
			PuestoLeSF2 = CreateDynamicObject(19528, -1848.92102, 1280.15979, 22.81000,   4.00000, -47.00000, 0.00000);
			PuestoLeSF3 = CreateDynamicObject(19528, -1849.44104, 1280.13977, 22.39000,   4.00000, -127.00000, 0.00000);
			PuestoLeSF4 = CreateDynamicObject(19528, -1849.44104, 1280.13977, 23.15000,   4.00000, -127.00000, 0.00000);

			PuestoPG1 = CreateDynamicObject(19528, 2104.33765, -1940.98132, 13.05440,   4.00000, -47.00000, 0.00000);
			PuestoPG2 = CreateDynamicObject(19528, 2104.33765, -1940.98132, 13.79440,   4.00000, -47.00000, 0.00000);
			PuestoPG3 = CreateDynamicObject(19528, 2103.81787, -1941.00134, 13.37440,   4.00000, -127.00000, 0.00000);
			PuestoPG4 = CreateDynamicObject(19528, 2103.81787, -1941.00134, 14.13440,   4.00000, -127.00000, 0.00000);

			PuestoAG1 = CreateDynamicObject(19528, 2023.01196, -1781.04272, 13.05440,   4.00000, -47.00000, 0.00000);
			PuestoAG2 = CreateDynamicObject(19528, 2023.01196, -1781.04272, 13.79440,   4.00000, -47.00000, 0.00000);
			PuestoAG3 = CreateDynamicObject(19528, 2022.49194, -1781.06274, 13.37440,   4.00000, -127.00000, 0.00000);
			PuestoAG4 = CreateDynamicObject(19528, 2022.49194, -1781.06274, 14.13440,   4.00000, -127.00000, 0.00000);

			PuestoFaDo1 = CreateDynamicObject(19528, -2131.34888, 260.07220, 35.68670,   4.00000, -127.00000, 0.00000);
			PuestoFaDo2 = CreateDynamicObject(19528, -2131.34888, 260.07220, 36.44670,   4.00000, -127.00000, 0.00000);
			PuestoFaDo3 = CreateDynamicObject(19528, -2130.82910, 260.09219, 35.36670,   4.00000, -47.00000, 0.00000);
			PuestoFaDo4 = CreateDynamicObject(19528, -2130.82910, 260.09219, 36.10670,   4.00000, -47.00000, 0.00000);

			PuestoAESF1 = CreateDynamicObject(19528, -1363.53235, 15.62540, 6.16340,   4.00000, -127.00000, 0.00000);
			PuestoAESF2 = CreateDynamicObject(19528, -1363.53235, 15.62540, 6.92340,   4.00000, -127.00000, 0.00000);
			PuestoAESF3 = CreateDynamicObject(19528, -1363.01233, 15.64540, 5.84340,   4.00000, -47.00000, 0.00000);
			PuestoAESF4 = CreateDynamicObject(19528, -1363.01233, 15.64540, 6.58340,   4.00000, -47.00000, 0.00000);

			PuestoC11 = CreateDynamicObject(19528, -2223.07666, -146.43221, 35.14780,   4.00000, -127.00000, 0.00000);
			PuestoC12 = CreateDynamicObject(19528, -2223.07666, -146.43221, 35.90780,   4.00000, -127.00000, 0.00000);
			PuestoC13 = CreateDynamicObject(19528, -2222.55688, -146.41220, 34.82780,   4.00000, -47.00000, 0.00000);
			PuestoC14 = CreateDynamicObject(19528, -2222.55688, -146.41220, 35.56780,   4.00000, -47.00000, 0.00000);
		}
    }
    else
    {
		HallX = false;
		KillTimer(t_cerveza);
        for(new o = 0, oj = sizeof(MapaHall); o < oj; o++)        {
        	DestroyDynamicObject(MapaHall[o]);        }

        for(new p1 = 0, p1j = sizeof(PuestoCamionero); p1 < p1j; p1++)        {
        	DestroyDynamicObject(PuestoCamionero[p1]);        }

        for(new p2 = 0, p2j = sizeof(EstMuni); p2 < p2j; p2++)        {
        	DestroyDynamicObject(EstMuni[p2]);        }

        for(new p3 = 0, p3j = sizeof(PuestosPuentesote); p3 < p3j; p3++)        {
        	DestroyDynamicObject(PuestosPuentesote[p3]);        }

        for(new p4 = 0, p4j = sizeof(PUnity); p4 < p4j; p4++)        {
        	DestroyDynamicObject(PUnity[p4]);        }

		for(new p6 = 0, p6j = sizeof(PMontana); p6 < p6j; p6++)		{
		  	DestroyDynamicObject(PMontana[p6]);		}

		for(new p7 = 0, p7j = sizeof(PBell); p7 < p7j; p7++)		{
		  	DestroyDynamicObject(PBell[p7]);		}

		for(new p8 = 0, p8j = sizeof(PTung); p8 < p8j; p8++)		{
		  	DestroyDynamicObject(PTung[p8]);		}

		for(new p9 = 0, p9j = sizeof(PColinas); p9 < p9j; p9++)		{
		  	DestroyDynamicObject(PColinas[p9]);		}

		for(new p10 = 0, p10j = sizeof(PCNN); p10 < p10j; p10++)		{
		  	DestroyDynamicObject(PCNN[p10]);		}

		for(new p11 = 0, p11j = sizeof(PBAY); p11 < p11j; p11++)		{
		  	DestroyDynamicObject(PBAY[p11]);		}

		for(new p12 = 0, p12j = sizeof(PELQUE); p12 < p12j; p12++)		{
		  	DestroyDynamicObject(PELQUE[p12]);		}

		for(new p13 = 0, p13j = sizeof(PEME); p13 < p13j; p13++)		{
		  	DestroyDynamicObject(PEME[p13]);		}

		for(new p14 = 0, p14j = sizeof(PTRANS); p14 < p14j; p14++)		{
		  	DestroyDynamicObject(PTRANS[p14]);		}

		for(new p15 = 0, p15j = sizeof(PESTALV); p15 < p15j; p15++)		{
		  	DestroyDynamicObject(PESTALV[p15]);		}

		for(new p16 = 0, p16j = sizeof(PMARK); p16 < p16j; p16++)		{
		  	DestroyDynamicObject(PMARK[p16]);		}

		for(new p17 = 0, p17j = sizeof(PSANT); p17 < p17j; p17++)		{
		  	DestroyDynamicObject(PSANT[p17]);		}

		for(new p18 = 0, p18j = sizeof(PBASU); p18 < p18j; p18++)		{
		  	DestroyDynamicObject(PBASU[p18]);		}

		for(new p19 = 0, p19j = sizeof(PLSSF); p19 < p19j; p19++)		{
		  	DestroyDynamicObject(PLSSF[p19]);		}

		for(new p20 = 0, p20j = sizeof(PGILI); p20 < p20j; p20++)		{
		  	DestroyDynamicObject(PGILI[p20]);		}
		for(new p21 = 0, p21j = sizeof(PJULIU); p21 < p21j; p21++)		{
		  	DestroyDynamicObject(PJULIU[p21]);		}
		for(new p22 = 0, p22j = sizeof(PPICKE); p22 < p22j; p22++)		{
		  	DestroyDynamicObject(PPICKE[p22]);		}
		for(new p23 = 0, p23j = sizeof(PAA); p23 < p23j; p23++)		{
		  	DestroyDynamicObject(PAA[p23]);		}
		for(new p24 = 0, p24j = sizeof(PPAYA); p24 < p24j; p24++)		{
		  	DestroyDynamicObject(PPAYA[p24]);		}
		for(new p25 = 0, p25j = sizeof(PELQ); p25 < p25j; p25++)		{
		  	DestroyDynamicObject(PELQ[p25]);		}
		for(new p26 = 0, p26j = sizeof(PLSF); p26 < p26j; p26++)		{
		  	DestroyDynamicObject(PLSF[p26]);		}
		for(new p27 = 0, p27j = sizeof(PPIZEA); p27 < p27j; p27++)		{
		  	DestroyDynamicObject(PPIZEA[p27]);		}
		for(new p28 = 0, p28j = sizeof(PDELAPI); p28 < p28j; p28++)		{
		  	DestroyDynamicObject(PDELAPI[p28]);		}
		for(new p29 = 0, p29j = sizeof(PFADO); p29 < p29j; p29++)		{
		  	DestroyDynamicObject(PFADO[p29]);		}
		for(new p30 = 0, p30j = sizeof(PASF); p30 < p30j; p30++)		{
		  	DestroyDynamicObject(PASF[p30]);		}
		for(new p31 = 0, p31j = sizeof(PC1); p31 < p31j; p31++)		{
		  	DestroyDynamicObject(PC1[p31]);		}
        for(new i=0;i<MAX_PLAYERS;i++)
        {
            if(GetPVarInt(i,"escuchafc") == 1)
            {
                DeletePVar(i,"escuchafc");
                StopAudioStreamForPlayer(i);
            }
        }
        HallX = false;
    }
}

EventoFC(bool:activo)
{
    if(activo == true)
    {
        for(new p = 0, pj = GetMaxPlayers(); p < pj; p++) if(IsPlayerConnected(p))
        {
            ApplyAnimation(p,"DANCING","null",0.0,0,0,0,0,0);
            RemoveBuildingForPlayer(p, 713, 1496.8672, -1707.8203, 13.4063, 0.25);
            RemoveBuildingForPlayer(p, 1280, 1468.9844, -1713.5078, 13.4531, 0.25);
            RemoveBuildingForPlayer(p, 1231, 1479.6953, -1716.7031, 15.6250, 0.25);
            RemoveBuildingForPlayer(p, 1280, 1488.7656, -1713.7031, 13.4531, 0.25);
            RemoveBuildingForPlayer(p, 1280, 1468.9844, -1704.6406, 13.4531, 0.25);
            RemoveBuildingForPlayer(p, 700, 1463.0625, -1701.5703, 13.7266, 0.25);
            RemoveBuildingForPlayer(p, 1231, 1479.6953, -1702.5313, 15.6250, 0.25);
            RemoveBuildingForPlayer(p, 1280, 1468.9844, -1694.0469, 13.4531, 0.25);
            RemoveBuildingForPlayer(p, 1231, 1479.3828, -1692.3906, 15.6328, 0.25);
            RemoveBuildingForPlayer(p, 1280, 1468.9844, -1682.7188, 13.4531, 0.25);
            RemoveBuildingForPlayer(p, 1231, 1479.3828, -1682.3125, 15.6328, 0.25);
            RemoveBuildingForPlayer(p, 625, 1458.2578, -1659.2578, 13.6953, 0.25);
            RemoveBuildingForPlayer(p, 625, 1457.3516, -1650.5703, 13.6953, 0.25);
            RemoveBuildingForPlayer(p, 625, 1454.4219, -1642.4922, 13.6953, 0.25);
            RemoveBuildingForPlayer(p, 1280, 1488.7656, -1704.5938, 13.4531, 0.25);
            RemoveBuildingForPlayer(p, 700, 1494.2109, -1694.4375, 13.7266, 0.25);
            RemoveBuildingForPlayer(p, 1280, 1488.7656, -1693.7344, 13.4531, 0.25);
            RemoveBuildingForPlayer(p, 1280, 1488.7656, -1682.6719, 13.4531, 0.25);
            RemoveBuildingForPlayer(p, 712, 1480.6094, -1666.1797, 22.2578, 0.25);
        }
       	EventoActivo = true;
        t_cerveza = SetTimer("MusicaEventos", 1000, true);
        CreateFCActorStatic(11, 1468.3059,-1708.6754,14.0469,269.4558, 0);//Vendedor
        CreateFCActor(171, 1488.5924,-1688.5847,14.0469,89.8875, 5);//Vendedor STATIC
        //
        MapaFC[0] = CreateDynamicObject(983, 1512.71204, -1718.77197, 13.70000,   0.00000, 0.00000, 90.00000); //
        MapaFC[1] = CreateDynamicObject(983, 1506.31677, -1718.78125, 13.70000,   0.00000, 0.00000, 90.00000); //
        MapaFC[2] = CreateDynamicObject(983, 1499.94507, -1718.78333, 13.70000,   0.00000, 0.00000, 90.00000); //
        MapaFC[3] = CreateDynamicObject(983, 1495.15002, -1718.79175, 13.70000,   0.00000, 0.00000, 90.00000); //
        MapaFC[4] = CreateDynamicObject(983, 1515.59998, -1639.37805, 13.70000,   0.00000, 0.00000, 0.00000); //
        MapaFC[5] = CreateDynamicObject(983, 1515.59998, -1632.98206, 13.70000,   0.00000, 0.00000, 0.00000); //
        MapaFC[6] = CreateDynamicObject(983, 1515.59998, -1626.57202, 13.70000,   0.00000, 0.00000, 0.00000); //
        MapaFC[7] = CreateDynamicObject(983, 1461.16272, -1605.77173, 13.70000,   0.00000, 0.00000, 90.00000); //
        MapaFC[8] = CreateDynamicObject(983, 1456.35779, -1605.77087, 13.70000,   0.00000, 0.00000, 90.00000); //
        MapaFC[9] = CreateDynamicObject(1231, 1478.85181, -1702.41333, 15.63281,   356.85840, 0.00000, 3.14159); //
        MapaFC[10] = CreateDynamicObject(2232, 1481.46399, -1677.80518, 13.63520,   0.00000, 0.00000, 323.65170); //
        MapaFC[11] = CreateDynamicObject(2232, 1482.31555, -1678.18225, 13.63520,   0.00000, 0.00000, 0.00000); //
        MapaFC[12] = CreateDynamicObject(1486, 1487.31128, -1687.36047, 13.97850,   0.00000, 0.00000, 0.00000); //
        MapaFC[13] = CreateDynamicObject(1486, 1487.39380, -1688.17761, 13.97850,   0.00000, 0.00000, 0.00000); //
        MapaFC[14] = CreateDynamicObject(1486, 1469.67480, -1699.49329, 13.99030,   0.00000, 0.00000, 0.00000); //
        MapaFC[15] = CreateDynamicObject(1486, 1469.36218, -1697.86951, 13.99030,   0.00000, 0.00000, 0.00000); //
        MapaFC[16] = CreateDynamicObject(1486, 1469.77808, -1688.53674, 14.03460,   0.00000, 0.00000, 0.00000); //
        MapaFC[17] = CreateDynamicObject(1486, 1469.44482, -1686.77649, 14.03460,   0.00000, 0.00000, 0.00000); //
        MapaFC[18] = CreateDynamicObject(1486, 1469.59900, -1709.49463, 14.00890,   0.00000, 0.00000, 0.00000); //
        MapaFC[19] = CreateDynamicObject(983, 1451.56055, -1605.77063, 13.70000,   0.00000, 0.00000, 90.00000);
		MapaFC[20] = CreateDynamicObject(983, 1443.56006, -1608.95203, 13.70000,   0.00000, 0.00000, 0.00000);
		MapaFC[21] = CreateDynamicObject(983, 1464.02002, -1718.69995, 13.70000,   0.00000, 0.00000, 90.00000);
		MapaFC[22] = CreateDynamicObject(983, 1457.61865, -1718.70398, 13.70000,   0.00000, 0.00000, 90.00000);
		MapaFC[23] = CreateDynamicObject(983, 1451.21997, -1718.69995, 13.70000,   0.00000, 0.00000, 90.00000);
		MapaFC[24] = CreateDynamicObject(983, 1446.41602, -1718.69800, 13.70000,   0.00000, 0.00000, 90.00000);
		MapaFC[25] = CreateDynamicObject(983, 1443.22766, -1689.87524, 13.70000,   0.00000, 0.00000, 0.00000);
		MapaFC[26] = CreateDynamicObject(983, 1443.22961, -1685.06982, 13.70000,   0.00000, 0.00000, 0.00000);
		MapaFC[27] = CreateDynamicObject(700, 1498.74097, -1710.37708, 13.72656,   356.85840, 0.00000, 3.14159);
		MapaFC[28] = CreateDynamicObject(700, 1499.50281, -1696.61536, 13.72656,   356.85840, 0.00000, 3.14159);
		MapaFC[29] = CreateDynamicObject(641, 1494.62268, -1710.68396, 11.10156,   356.85840, 0.00000, 3.14159);
		MapaFC[30] = CreateDynamicObject(620, 1499.42749, -1706.87927, 11.83594,   356.85840, 0.00000, 3.14159);
		MapaFC[31] = CreateDynamicObject(673, 1493.28943, -1708.06934, 12.39844,   356.85840, 0.00000, 3.14159);
		MapaFC[32] = CreateDynamicObject(1231, 1491.70972, -1682.38379, 15.63281,   356.85840, 0.00000, 3.14159);
		MapaFC[33] = CreateDynamicObject(1231, 1491.73425, -1713.63037, 15.62500,   356.85840, 0.00000, 3.14159);
		MapaFC[34] = CreateDynamicObject(1231, 1465.30127, -1713.59302, 15.62500,   356.85840, 0.00000, 3.14159);
		MapaFC[35] = CreateDynamicObject(1231, 1465.17444, -1682.35266, 15.63281,   356.85840, 0.00000, 3.14159);
		MapaFC[36] = CreateDynamicObject(18761, 1478.94067, -1670.88538, 17.77470,   0.00000, 0.00000, 0.72560);
		MapaFC[37] = CreateDynamicObject(19608, 1479.29980, -1675.19836, 13.01500,   0.00000, 0.00000, 359.99899);
		MapaFC[38] = CreateDynamicObject(19609, 1477.16357, -1674.45325, 13.06040,   0.00000, 0.00000, 0.00000);
		MapaFC[39] = CreateDynamicObject(1231, 1478.70239, -1693.22778, 15.63281,   356.85840, 0.00000, 3.14159);
		MapaFC[40] = CreateDynamicObject(712, 1479.36365, -1665.99829, 22.25781,   3.14159, 0.00000, 2.78910);
		MapaFC[41] = CreateDynamicObject(1280, 1467.89478, -1704.05969, 13.43310,   0.00000, 0.00000, 181.00000);
		MapaFC[42] = CreateDynamicObject(1280, 1468.20764, -1713.51746, 13.45310,   0.00000, 0.00000, 181.00000);
		MapaFC[43] = CreateDynamicObject(1280, 1488.97583, -1714.16089, 13.45310,   360.00000, 0.00000, 360.00000);
		MapaFC[44] = CreateDynamicObject(625, 1456.71350, -1644.79504, 13.69531,   356.85840, 0.00000, 3.14159);
		MapaFC[45] = CreateDynamicObject(625, 1458.10535, -1657.66321, 13.69531,   356.85840, 0.00000, 3.14159);
		MapaFC[46] = CreateDynamicObject(17055, 1497.48132, -1675.66064, 13.87740,   0.00000, 0.00000, 180.00000);
		MapaFC[47] = CreateDynamicObject(832, 1480.57764, -1700.21851, 12.95090,   0.00000, 0.00000, 219.33569);
		MapaFC[48] = CreateDynamicObject(832, 1480.58508, -1696.12427, 12.95090,   0.00000, 0.00000, 226.56580);
		MapaFC[49] = CreateDynamicObject(1486, 1487.61548, -1710.25769, 13.97900,   0.00000, 0.00000, 0.00000);
		MapaFC[50] = CreateDynamicObject(1486, 1487.42468, -1708.62646, 13.97900,   0.00000, 0.00000, 0.00000);
		MapaFC[51] = CreateDynamicObject(832, 1477.08313, -1699.45129, 12.82991,   0.00000, 0.00000, 30.27012);
		MapaFC[52] = CreateDynamicObject(832, 1477.06738, -1694.98694, 12.82382,   0.00000, 0.00000, 28.04523);
		MapaFC[53] = CreateDynamicObject(1362, 1467.76501, -1691.53235, 13.64250,   0.00000, 0.00000, 0.00000);
		MapaFC[54] = CreateDynamicObject(1362, 1489.20435, -1695.68347, 13.64250,   0.00000, 0.00000, 0.00000);
		MapaFC[55] = CreateDynamicObject(2357, 1478.80872, -1700.08667, 13.53090,   0.00000, 0.00000, 90.00000);
		MapaFC[56] = CreateDynamicObject(2357, 1478.80774, -1695.83435, 13.53090,   0.00000, 0.00000, 90.00000);
		MapaFC[57] = CreateDynamicObject(19820, 1479.31860, -1701.87476, 13.88919,   0.00000, 0.00000, 0.00000);
		MapaFC[58] = CreateDynamicObject(1280, 1488.95837, -1683.02576, 13.46000,   0.00000, 0.00000, 1.48990);
		MapaFC[59] = CreateDynamicObject(1280, 1489.11438, -1693.36072, 13.46000,   0.00000, 0.00000, 1.48990);
		MapaFC[60] = CreateDynamicObject(1280, 1489.05383, -1704.22852, 13.46000,   0.00000, 0.00000, 1.48990);
		MapaFC[61] = CreateDynamicObject(1280, 1467.99915, -1694.17725, 13.43310,   0.00000, 0.00000, 181.00000);
		MapaFC[62] = CreateDynamicObject(1280, 1468.07410, -1682.87170, 13.43310,   0.00000, 0.00000, 181.00000);
		MapaFC[63] = CreateDynamicObject(983, 1490.35803, -1718.78931, 13.70000,   0.00000, 0.00000, 90.00000);
		MapaFC[64] = CreateDynamicObject(983, 1465.61975, -1718.69556, 13.70000,   0.00000, 0.00000, 90.00000);
		MapaFC[65] = CreateDynamicObject(13367, 1460.16016, -1673.33130, 9.81790,   0.00000, 0.00000, 0.00000);
		MapaFC[66] = CreateDynamicObject(983, 1515.21045, -1690.02991, 13.70000,   0.00000, 0.00000, 12.80110);
		MapaFC[67] = CreateDynamicObject(982, 1515.92188, -1705.94910, 13.69590,   0.00000, 0.00000, 0.00000);
		MapaFC[68] = CreateDynamicObject(982, 1443.22485, -1705.87866, 13.70000,   0.00000, 0.00000, 0.00000);
		MapaFC[69] = CreateDynamicObject(982, 1443.55542, -1623.35718, 13.70000,   0.00000, 0.00000, 0.00000);
		MapaFC[70] = CreateDynamicObject(982, 1515.59753, -1618.56494, 13.70000,   0.00000, 0.00000, 0.00000);
		MapaFC[71] = CreateDynamicObject(982, 1502.78198, -1605.77515, 13.70000,   0.00000, 0.00000, 90.00000);
		MapaFC[72] = CreateDynamicObject(982, 1477.16895, -1605.77698, 13.70000,   0.00000, 0.00000, 90.00000);
		MapaFC[73] = CreateDynamicObject(983, 1446.75427, -1605.77393, 13.70000,   0.00000, 0.00000, 90.00000);
		MapaFC[74] = CreateDynamicObject(1486, 1479.12695, -1697.51514, 14.24250,   0.00000, 0.00000, 0.00000);
		MapaFC[75] = CreateDynamicObject(1486, 1478.93457, -1699.08325, 14.24250,   0.00000, 0.00000, 0.00000);

		//OTROS

		new mapa1 = CreateDynamicObject(12921, 1477.80725, -1718.48755, 16.15080,   0.00000, 0.00000, 359.56470);
		MapasTexturizados[1] = CreateDynamicObject(19812, 1469.65149, -1707.77307, 14.09240,   90.00000, 0.00000, 270.00000); //
		MapasTexturizados[2] = CreateDynamicObject(19812, 1487.38135, -1689.11743, 14.14640,   0.00000, 90.00000, 0.00000); //
		MapasTexturizados[3] = CreateDynamicObject(19812, 1469.62573, -1718.40686, 13.52320,   0.00000, 0.00000, 26.00050);
		MapasTexturizados[4] = CreateDynamicObject(19812, 1472.61548, -1718.28003, 13.52320,   0.00000, 0.00000, 26.00050);
		MapasTexturizados[5] = CreateDynamicObject(19812, 1460.55164, -1644.54797, 13.45478,   0.00000, 0.00000, 0.00000); //
		MapasTexturizados[6] = CreateDynamicObject(19812, 1498.45264, -1645.04199, 13.54905,   0.00000, 0.00000, 0.00000);
		MapasTexturizados[7] = CreateDynamicObject(19812, 1485.27295, -1613.93701, 13.47220,   0.00000, 0.00000, 0.00000);
		MapasTexturizados[8] = CreateDynamicObject(19812, 1480.67273, -1717.96887, 13.52320,   0.00000, 0.00000, 26.00050);
		MapasTexturizados[9] = CreateDynamicObject(19812, 1483.03955, -1718.25085, 13.52320,   0.00000, 0.00000, 26.00050);
		MapasTexturizados[10] = CreateDynamicObject(19812, 1488.94177, -1699.95435, 13.37090,   0.00000, 0.00000, 0.00000);
		MapasTexturizados[11] = CreateDynamicObject(19812, 1486.14343, -1718.40515, 13.52320,   0.00000, 0.00000, 26.00050);
		MapasTexturizados[12] = CreateDynamicObject(19812, 1474.88391, -1717.89111, 13.52320,   0.00000, 0.00000, 26.00050);
		MapasTexturizados[13] = CreateDynamicObject(19812, 1478.12585, -1718.00891, 13.52320,   0.00000, 0.00000, 26.00050);
		MapasTexturizados[14] = CreateDynamicObject(19812, 1477.43347, -1718.14954, 13.52320,   0.00000, 0.00000, 26.00050);
		MapasTexturizados[15] = CreateDynamicObject(19812, 1477.68628, -1717.46594, 13.52320,   0.00000, 0.00000, 20.55360);
		MapasTexturizados[16] = CreateDynamicObject(19812, 1477.74670, -1717.99500, 14.19505,   90.00000, -0.31430, 215.19220);

		SetObjectMaterial(mapa1, 256, 2988, "kcomp_gX", "kmwood_gate");

		//OTRAS TEXTURAS
		MapaFC[16] = CreateDynamicObject(3861, 1488.19421, -1688.08167, 14.19930,   0.00000, 0.00000, 269.59970); //
        MapaFC[17] = CreateDynamicObject(3861, 1488.19421, -1699.01074, 14.19930,   0.00000, 0.00000, 269.59970); //
        MapaFC[18] = CreateDynamicObject(3861, 1468.84741, -1688.02112, 14.19930,   0.00000, 0.00000, 89.77130); //
        MapaFC[19] = CreateDynamicObject(3861, 1468.84741, -1699.00305, 14.19930,   0.00000, 0.00000, 89.77130); //
        MapaFC[48] = CreateDynamicObject(3861, 1488.19421, -1709.41479, 14.19930,   0.00000, 0.00000, 269.59973);
        MapaFC[45] = CreateDynamicObject(3861, 1468.84741, -1708.81409, 14.19930,   0.00000, 0.00000, 89.77126);
    }
    else
    {
        EventoActivo = false;
        KillTimer(t_cerveza);
        for(new i=0;i<MAX_PLAYERS;i++)
        {
            if(GetPVarInt(i,"escuchafc") == 1)
            {
                DeletePVar(i,"escuchafc");
                StopAudioStreamForPlayer(i);
            }
            CreatePlayerObject(i, 713, 1496.8672, -1707.8203, 13.4063, 0.25, 0, 0);
            CreatePlayerObject(i, 1280, 1468.9844, -1713.5078, 13.4531, 0.25, 0, 0);
            CreatePlayerObject(i, 1231, 1479.6953, -1716.7031, 15.6250, 0.25, 0, 0);
            CreatePlayerObject(i, 1280, 1488.7656, -1713.7031, 13.4531, 0.25, 0, 0);
            CreatePlayerObject(i, 1280, 1468.9844, -1704.6406, 13.4531, 0.25, 0, 0);
            CreatePlayerObject(i, 700, 1463.0625, -1701.5703, 13.7266, 0.25, 0, 0);
            CreatePlayerObject(i, 1231, 1479.6953, -1702.5313, 15.6250, 0.25, 0, 0);
            CreatePlayerObject(i, 1280, 1468.9844, -1694.0469, 13.4531, 0.25, 0, 0);
            CreatePlayerObject(i, 1231, 1479.3828, -1692.3906, 15.6328, 0.25, 0, 0);
            CreatePlayerObject(i, 1280, 1468.9844, -1682.7188, 13.4531, 0.25, 0, 0);
            CreatePlayerObject(i, 1231, 1479.3828, -1682.3125, 15.6328, 0.25, 0, 0);
            CreatePlayerObject(i, 625, 1458.2578, -1659.2578, 13.6953, 0.25, 0, 0);
            CreatePlayerObject(i, 625, 1457.3516, -1650.5703, 13.6953, 0.25, 0, 0);
            CreatePlayerObject(i, 625, 1454.4219, -1642.4922, 13.6953, 0.25, 0, 0);
            CreatePlayerObject(i, 1280, 1488.7656, -1704.5938, 13.4531, 0.25, 0, 0);
            CreatePlayerObject(i, 700, 1494.2109, -1694.4375, 13.7266, 0.25, 0, 0);
            CreatePlayerObject(i, 1280, 1488.7656, -1693.7344, 13.4531, 0.25, 0, 0);
            CreatePlayerObject(i, 1280, 1488.7656, -1682.6719, 13.4531, 0.25, 0, 0);
            CreatePlayerObject(i, 712, 1480.6094, -1666.1797, 22.2578, 0.25, 0, 0);
        }
        for(new m = 0, mj = sizeof(MapaFC); m < mj; m++)
        {
                DestroyDynamicObject(MapaFC[m]);
        }
        for(new n = 0, nj = sizeof(MapasTexturizados); n < nj; n++)
        {
                DestroyDynamicObject(MapasTexturizados[n]);
        }
        for(new l = 0, lj = sizeof(LabelFC); l < lj; l++)
        {
            if(IsValidDynamic3DTextLabel(LabelFC[l]))
                DestroyDynamic3DTextLabel(LabelFC[l]);
        }
        for(new a = 0, aj = sizeof(ActorFC); a < aj; a++)
        {
            if(IsValidDynamicActor(ActorFC[a]))
                DestroyDynamicActor(ActorFC[a]);
        }
    }
}
EventoNavi(bool:activo)
{
    if(activo == true)
    {
        NidadX = true;
        //
        MapaNavi[0] = CreateDynamicObject(19076, 121.16208, -1574.92578, 9.38736,   0.00000, 0.00000, 0.00000);
		MapaNavi[1] = CreateDynamicObject(19076, 1181.94067, -1298.20972, 13.21434,   0.00000, 0.00000, 0.00000);
		MapaNavi[2] = CreateDynamicObject(19076, 1763.81494, -1309.83044, 12.59019,   0.00000, 0.00000, 0.00000);
		MapaNavi[3] = CreateDynamicObject(19076, 1413.81287, -1168.94092, 22.81257,   0.00000, 0.00000, 0.00000);
		MapaNavi[4] = CreateDynamicObject(19076, 186.96976, -1411.46313, 45.08032,   0.00000, 0.00000, 0.00000);
		MapaNavi[5] = CreateDynamicObject(19076, -2617.34766, 581.85077, 14.61531,   0.00000, 0.00000, 0.00000);
		MapaNavi[6] = CreateDynamicObject(19076, 1582.51257, 1850.76685, 9.81215,   0.00000, 0.00000, 0.00000);
		MapaNavi[7] = CreateDynamicObject(19076, 1511.32275, -1611.90784, 13.04041,   0.00000, 0.00000, 0.00000);

		MapaNavi[8] = CreateDynamicObject(19058, 1514.13110, -1613.13330, 13.47272,   0.00000, 0.00000, 337.32285);
		MapaNavi[9] = CreateDynamicObject(19055, 1514.01807, -1611.29736, 13.45324,   0.00000, 0.00000, 3.69078);
		MapaNavi[10] = CreateDynamicObject(19054, 1513.24670, -1609.58289, 13.55740,   0.00000, 90.00000, 42.16126);
		MapaNavi[11] = CreateDynamicObject(19054, 1512.47534, -1614.52612, 13.04725,   0.00000, 0.00000, 0.00000);
		MapaNavi[12] = CreateDynamicObject(19055, 1510.55139, -1613.90710, 13.51257,   0.00000, 0.00000, 27.92576);
		MapaNavi[13] = CreateDynamicObject(19054, 1509.36902, -1612.42773, 13.04759,   0.00000, 0.00000, 0.81311);
		MapaNavi[14] = CreateDynamicObject(19054, 1509.44128, -1610.81543, 13.44098,   0.00000, 0.00000, 48.53526);
		MapaNavi[15] = CreateDynamicObject(19056, 1510.04395, -1609.32678, 13.13857,   0.00000, 0.00000, 22.44990);
		MapaNavi[16] = CreateDynamicObject(19057, 1511.54639, -1609.04822, 13.25057,   0.00000, 0.00000, 348.69772);

		TextoNavi = Create3DTextLabel("A partir del día 25 puedes abrir tu {DBED16}/regalo{FFFFFF} de navidad",-1, 1511.3228, -1611.9078, 14.0244,30.0,0,0);
    }
    else
    {
        NidadX = false;
        Delete3DTextLabel(TextoNavi);
        for(new m = 0, mj = sizeof(MapaNavi); m < mj; m++)
        {
                DestroyDynamicObject(MapaNavi[m]);
        }
    }
}

EstaCerveza(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid, 2.0,1470.5786,-1708.7865,14.0469)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,1486.4961,-1688.5503,14.0469)) { return 1; }
    return 0;
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
 	if(PlayerInfo[playerid][pAdmin] > ADMIN_LEVEL_BANEOS)
	if(GetPlayerState(playerid) == 2) return SetVehiclePos(GetPlayerVehicleID(playerid), fX, fY, fZ);
	else SetPosEx(playerid, fX, fY, fZ, 0 ,0 ,0);
	return 1;
}

public GetOnlinePlayers()
{
	new counter = 0;
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i))
		{
		    counter++;
		}
	}
	return counter;
}

public ActualizarLabelArmas(f)
{
    new string2[300];
    format(string2,sizeof(string2),"{EB0000}Armas{FFFFFF}\nCantidad disponible:{00CC00} %d{FFFFFF}\n\nPulsa {DBED16}'H'{FFFFFF} para equipar una.\nPulsa {00CCFF}'Y'{FFFFFF} para guardar el arma que llevas en tus manos.",Fabricas[f][pRecortada]+Fabricas[f][pUzi]+Fabricas[f][pTec9]+Fabricas[f][pSniper]);
	UpdateDynamic3DTextLabelText(Fabricas[f][pLabel4], COLOR_WHITE, string2);
}

public CargarCajasFabrica(id)
{
    for(new a1 = 0; a1 < Fabricas[id][Almacen1]; a1++)
	{
		Fabricas[id][Meta1][a1] = CreateDynamicObject(1271, Cajas1[a1][0], Cajas1[a1][1], Cajas1[a1][2],   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
	}
	for(new a2 = 0; a2 < Fabricas[id][Almacen2]; a2++)
	{
		Fabricas[id][Meta2][a2] = CreateDynamicObject(1271, Cajas2[a2][0], Cajas2[a2][1], Cajas2[a2][2],   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
	}
	for(new a3 = 0; a3 < Fabricas[id][Almacen3]; a3++)
	{
		Fabricas[id][Meta3][a3] = CreateDynamicObject(1271, Cajas3[a3][0], Cajas3[a3][1], Cajas3[a3][2],   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
	}
	for(new a4 = 0; a4 < Fabricas[id][Almacen4]; a4++)
	{
		Fabricas[id][Meta4][a4] = CreateDynamicObject(1271, Cajas4[a4][0], Cajas4[a4][1], Cajas4[a4][2],   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
	}
	for(new a5 = 0; a5 < Fabricas[id][Almacen5]; a5++)
	{
		Fabricas[id][Meta5][a5] = CreateDynamicObject(1271, Cajas5[a5][0], Cajas5[a5][1], Cajas5[a5][2],   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
	}
	for(new a6 = 0; a6 < Fabricas[id][Almacen6]; a6++)
	{
		Fabricas[id][Meta6][a6] = CreateDynamicObject(1271, Cajas6[a6][0], Cajas6[a6][1], Cajas6[a6][2],   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
	}
	for(new a7 = 0; a7 < Fabricas[id][Almacen7]; a7++)
	{
		Fabricas[id][Meta7][a7] = CreateDynamicObject(1271, Cajas7[a7][0], Cajas7[a7][1], Cajas7[a7][2],   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
	}
	for(new a8 = 0; a8 < Fabricas[id][Almacen8]; a8++)
	{
		Fabricas[id][Meta8][a8] = CreateDynamicObject(1271, Cajas8[a8][0], Cajas8[a8][1], Cajas8[a8][2],   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
	}
	for(new a9 = 0; a9 < Fabricas[id][Almacen9]; a9++)
	{
		Fabricas[id][Meta9][a9] = CreateDynamicObject(1271, Cajas9[a9][0], Cajas9[a9][1], Cajas9[a9][2],   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
	}
	for(new a10 = 0; a10 < Fabricas[id][Almacen10]; a10++)
	{
		Fabricas[id][Meta10][a10] = CreateDynamicObject(1271, Cajas10[a10][0], Cajas10[a10][1], Cajas10[a10][2],   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
	}
	return 1;
}
public Forzado(playerid)
{
	new Float:Pos[3];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	Descongelar(playerid);
	switch(PlayerInfo[playerid][pNivelLadron])
	{
		case 1:
		{
   			new intento = random(3);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta = 1;
					SetTimer("CerrarPuerta",24000,false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo1, -2277.5667, -9.4666, 37.2482, 100.0, 0.0000, 0.0000, 184.9418);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
                    ExpLadron(playerid);
					RevisarLogroLadron(playerid);
					SetTimer("CargarCasa1",minutos(30),false);
				}
				case 1..2:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					GuardarHerramienta(playerid);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa1",minutos(45),false);
					RemovePlayerAttachedObject(playerid, 2);
				}
			}
		}
		case 2:
		{
			new intento = random(2);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta = 1;
					SetTimer("CerrarPuerta",24000,false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo1, -2277.5667, -9.4666, 37.2482, 100.0, 0.0000, 0.0000, 184.9418);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}20 segundos{FFFFFF} o seras arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
					SetTimer("CargarCasa1",minutos(30),false);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					GuardarHerramienta(playerid);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa1",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
				}
			}
		}
		case 3:
		{
			CasaAbierta = 1;
			SetTimer("CerrarPuerta",24000,false);
			AudioAlarma(Pos[0],Pos[1],Pos[2]);
			AccionesRol(playerid,"logró forzar la cerradura.", 20);
			MoveDynamicObject(PuertaRobo1, -2277.5667, -9.4666, 37.2482, 100.0, 0.0000, 0.0000, 184.9418);
			GuardarHerramienta(playerid);
			SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			ExperienciaMaximaLadron(playerid);
			SetTimer("CargarCasa1",minutos(30),false);
		}
	}
	return 1;
}

public Forzado2(playerid)
{
	new Float:Pos[3];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	Descongelar(playerid);
	switch(PlayerInfo[playerid][pNivelLadron])
	{
		case 1:
		{
   			new intento = random(3);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta2 = 1;
					SetTimer("CerrarPuerta2",24000,false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo2, 931.2819, 1974.0637, 10.6143, 100.0, 0.0000, 0.0000, 165.7200);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
					RemovePlayerAttachedObject(playerid, 2);
					SetTimer("CargarCasa2",minutos(30),false);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					RemovePlayerAttachedObject(playerid, 2);
					SetTimer("CargarCasa2",minutos(40),false);
					GuardarHerramienta(playerid);
				}
				case 2:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					RemovePlayerAttachedObject(playerid, 2);
					SetTimer("CargarCasa2",minutos(40),false);
					GuardarHerramienta(playerid);
				}
			}
		}
		case 2:
		{
			new intento = random(2);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta2 = 1;
					SetTimer("CerrarPuerta2",24000,false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo2, 931.2819, 1974.0637, 10.6143, 100.0, 0.0000, 0.0000, 165.7200);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}20 segundos{FFFFFF} o seras arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
					SetTimer("CargarCasa2",minutos(30),false);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					RemovePlayerAttachedObject(playerid, 2);
					SetTimer("CargarCasa2",minutos(40),false);
					GuardarHerramienta(playerid);
				}
			}
		}
		case 3:
		{
			CasaAbierta2 = 1;
			SetTimer("CerrarPuerta2",24000,false);
			AudioAlarma(Pos[0],Pos[1],Pos[2]);
			AccionesRol(playerid,"logró forzar la cerradura.", 20);
			MoveDynamicObject(PuertaRobo2, 931.2819, 1974.0637, 10.6143, 100.0, 0.0000, 0.0000, 165.7200);
			GuardarHerramienta(playerid);
			SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			ExperienciaMaximaLadron(playerid);
			SetTimer("CargarCasa2",minutos(30),false);
		}
	}
	return 1;
}

public Forzado3(playerid)
{
	new Float:Pos[3];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	Descongelar(playerid);
	switch(PlayerInfo[playerid][pNivelLadron])
	{
		case 1:
		{
   			new intento = random(3);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta3 = 1;
					SetTimer("CerrarPuerta3",24000,false);
					SetTimer("CargarCasa3",minutos(30),false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo3, -2394.8667, -12.3576, 34.2706, 100.0, 0.0000, 0.0000, 177.3064);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					RemovePlayerAttachedObject(playerid, 2);
					SetTimer("CargarCasa3",minutos(40),false);
					GuardarHerramienta(playerid);
				}
				case 2:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					RemovePlayerAttachedObject(playerid, 2);
					SetTimer("CargarCasa3",minutos(40),false);
					GuardarHerramienta(playerid);
				}
			}
		}
		case 2:
		{
			new intento = random(2);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta3 = 1;
					SetTimer("CerrarPuerta3",24000,false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo3, -2394.8667, -12.3576, 34.2706, 100.0, 0.0000, 0.0000, 177.3064);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}20 segundos{FFFFFF} o seras arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
					SetTimer("CargarCasa3",minutos(30),false);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa3",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
			}
		}
		case 3:
		{
			CasaAbierta3 = 1;
			SetTimer("CerrarPuerta3",24000,false);
			AudioAlarma(Pos[0],Pos[1],Pos[2]);
			AccionesRol(playerid,"logró forzar la cerradura.", 20);
			MoveDynamicObject(PuertaRobo3, -2394.8667, -12.3576, 34.2706, 100.0, 0.0000, 0.0000, 177.3064);
			GuardarHerramienta(playerid);
			SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			ExperienciaMaximaLadron(playerid);
			SetTimer("CargarCasa3",minutos(30),false);
		}
	}
	return 1;
}

public Forzado4(playerid)
{
	new Float:Pos[3];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	Descongelar(playerid);
	switch(PlayerInfo[playerid][pNivelLadron])
	{
		case 1:
		{
   			new intento = random(3);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta4 = 1;
					SetTimer("CerrarPuerta4",24000,false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo4,2373.0024, -1138.5510, 29.0312, 100.0, 0.0000, 0.0000, 87.0000);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
					SetTimer("CargarCasa4",minutos(30),false);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa4",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
				case 2:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa4",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
			}
		}
		case 2:
		{
			new intento = random(2);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta4 = 1;
					SetTimer("CerrarPuerta4",24000,false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo4,2373.0024, -1138.5510, 29.0312, 100.0, 0.0000, 0.0000, 87.0000);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}20 segundos{FFFFFF} o seras arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
					SetTimer("CargarCasa4",minutos(30),false);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa4",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
			}
		}
		case 3:
		{
			CasaAbierta4 = 1;
			SetTimer("CerrarPuerta4",24000,false);
			AudioAlarma(Pos[0],Pos[1],Pos[2]);
			AccionesRol(playerid,"logró forzar la cerradura.", 20);
			MoveDynamicObject(PuertaRobo4,2373.0024, -1138.5510, 29.0312, 100.0, 0.0000, 0.0000, 87.0000);
			GuardarHerramienta(playerid);
			SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			ExperienciaMaximaLadron(playerid);
			SetTimer("CargarCasa4",minutos(30),false);
		}
	}
	return 1;
}

public Forzado5(playerid)
{
	new Float:Pos[3];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	Descongelar(playerid);
	switch(PlayerInfo[playerid][pNivelLadron])
	{
		case 1:
		{
   			new intento = random(3);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta5 = 1;
					SetTimer("CerrarPuerta5",24000,false);
					SetTimer("CargarCasa5",minutos(30),false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo5,-2728.5708, -50.4009, 6.0173, 100.0, 0.0000, 0.0000, 179.7599);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa5",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
				case 2:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa5",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
			}
		}
		case 2:
		{
			new intento = random(2);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta5 = 1;
					SetTimer("CerrarPuerta5",24000,false);
					SetTimer("CargarCasa5",minutos(30),false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo5,-2728.5708, -50.4009, 6.0173, 100.0, 0.0000, 0.0000, 179.7599);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}20 segundos{FFFFFF} o seras arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa5",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
			}
		}
		case 3:
		{
			CasaAbierta5 = 1;
			SetTimer("CerrarPuerta5",24000,false);
			SetTimer("CargarCasa5",minutos(30),false);
			AudioAlarma(Pos[0],Pos[1],Pos[2]);
			AccionesRol(playerid,"logró forzar la cerradura.", 20);
			MoveDynamicObject(PuertaRobo5,-2728.5708, -50.4009, 6.0173, 100.0, 0.0000, 0.0000, 179.7599);
			GuardarHerramienta(playerid);
			SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			ExperienciaMaximaLadron(playerid);
		}
	}
	return 1;
}

public Forzado6(playerid)
{
	new Float:Pos[3];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	Descongelar(playerid);
	switch(PlayerInfo[playerid][pNivelLadron])
	{
		case 1:
		{
   			new intento = random(3);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta6 = 1;
					SetTimer("CerrarPuerta6",24000,false);
					SetTimer("CargarCasa6",minutos(30),false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo6,-2728.5442, -155.0267, 6.2020, 100.0, 0.0000, 0.0000, 178.0000);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa6",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
                    GuardarHerramienta(playerid);
				}
				case 2:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa6",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
                    GuardarHerramienta(playerid);
				}
			}
		}
		case 2:
		{
			new intento = random(2);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta6 = 1;
					SetTimer("CerrarPuerta6",24000,false);
					SetTimer("CargarCasa6",minutos(30),false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo6,-2728.5442, -155.0267, 6.2020, 100.0, 0.0000, 0.0000, 178.0000);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}20 segundos{FFFFFF} o seras arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa6",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
                    GuardarHerramienta(playerid);
				}
			}
		}
		case 3:
		{
			CasaAbierta6 = 1;
			SetTimer("CerrarPuerta6",24000,false);
			SetTimer("CargarCasa6",minutos(30),false);
			AudioAlarma(Pos[0],Pos[1],Pos[2]);
			AccionesRol(playerid,"logró forzar la cerradura.", 20);
			MoveDynamicObject(PuertaRobo6,-2728.5442, -155.0267, 6.2020, 100.0, 0.0000, 0.0000, 178.0000);
			GuardarHerramienta(playerid);
			SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			ExperienciaMaximaLadron(playerid);
		}
	}
	return 1;
}

public Forzado7(playerid)
{
	new Float:Pos[3];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	Descongelar(playerid);
	switch(PlayerInfo[playerid][pNivelLadron])
	{
		case 1:
		{
   			new intento = random(3);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta7 = 1;
					SetTimer("CerrarPuerta7",24000,false);
					SetTimer("CargarCasa7",minutos(30),false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo7,1762.12488, -2100.72290, 12.96590, 100.0, 0.00000, 0.00000, 178.00000);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa7",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
				case 2:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa7",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
			}
		}
		case 2:
		{
			new intento = random(2);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta7 = 1;
					SetTimer("CerrarPuerta7",24000,false);
					SetTimer("CargarCasa7",minutos(30),false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo7,1762.12488, -2100.72290, 12.96590, 100.0, 0.00000, 0.00000, 83.00000);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}20 segundos{FFFFFF} o seras arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa7",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
			}
		}
		case 3:
		{
			CasaAbierta7 = 1;
			SetTimer("CerrarPuerta7",24000,false);
			SetTimer("CargarCasa7",minutos(30),false);
			AudioAlarma(Pos[0],Pos[1],Pos[2]);
			AccionesRol(playerid,"logró forzar la cerradura.", 20);
			MoveDynamicObject(PuertaRobo7,1762.12488, -2100.72290, 12.96590, 100.0, 0.00000, 0.00000, 83.00000);
			GuardarHerramienta(playerid);
			SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			ExperienciaMaximaLadron(playerid);
		}
	}
	return 1;
}

public Forzado8(playerid)
{
	new Float:Pos[3];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	Descongelar(playerid);
	switch(PlayerInfo[playerid][pNivelLadron])
	{
		case 1:
		{
   			new intento = random(3);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta8 = 1;
					SetTimer("CerrarPuerta8",24000,false);
					SetTimer("CargarCasa8",minutos(30),false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo8,2484.4492, -1996.0295, 13.2080, 100.0,   0.00000, 0.00000, 80.52003);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
				}
                case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa8",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
				case 2:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa8",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
			}
		}
		case 2:
		{
			new intento = random(2);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta8 = 1;
					SetTimer("CerrarPuerta8",24000,false);
					SetTimer("CargarCasa8",minutos(30),false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo8,2484.4492, -1996.0295, 13.2080, 100.0,   0.00000, 0.00000, 80.52003);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}20 segundos{FFFFFF} o seras arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa8",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
			}
		}
		case 3:
		{
			CasaAbierta8 = 1;
			SetTimer("CerrarPuerta8",24000,false);
			SetTimer("CargarCasa8",minutos(30),false);
			AudioAlarma(Pos[0],Pos[1],Pos[2]);
			AccionesRol(playerid,"logró forzar la cerradura.", 20);
			MoveDynamicObject(PuertaRobo8,2484.4492, -1996.0295, 13.2080, 100.0,   0.00000, 0.00000, 80.52003);
			GuardarHerramienta(playerid);
			SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			ExperienciaMaximaLadron(playerid);
		}
	}
	return 1;
}

public Forzado9(playerid)
{
	new Float:Pos[3];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	Descongelar(playerid);
	switch(PlayerInfo[playerid][pNivelLadron])
	{
		case 1:
		{
   			new intento = random(3);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta9 = 1;
					SetTimer("CerrarPuerta9",24000,false);
					SetTimer("CargarCasa9",minutos(30),false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo9,1844.1000, 770.1200, 10.4400, 100.0, 0.0000, 0.0000, 181.0000);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa9",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
				case 2:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa9",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
			}
		}
		case 2:
		{
			new intento = random(2);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta9 = 1;
					SetTimer("CerrarPuerta9",24000,false);
					SetTimer("CargarCasa9",minutos(30),false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo9,1844.1000, 770.1200, 10.4400, 100.0, 0.0000, 0.0000, 181.0000);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}20 segundos{FFFFFF} o seras arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa9",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
			}
		}
		case 3:
		{
			CasaAbierta9 = 1;
			SetTimer("CerrarPuerta9",24000,false);
			SetTimer("CargarCasa9",minutos(30),false);
			AudioAlarma(Pos[0],Pos[1],Pos[2]);
			AccionesRol(playerid,"logró forzar la cerradura.", 20);
			MoveDynamicObject(PuertaRobo9,1844.1000, 770.1200, 10.4400, 100.0, 0.0000, 0.0000, 181.0000);
			GuardarHerramienta(playerid);
			SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			ExperienciaMaximaLadron(playerid);
		}
	}
	return 1;
}

public Forzado10(playerid)
{
	new Float:Pos[3];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	Descongelar(playerid);
	switch(PlayerInfo[playerid][pNivelLadron])
	{
		case 1:
		{
   			new intento = random(3);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta10 = 1;
					SetTimer("CerrarPuerta10",24000,false);
					SetTimer("CargarCasa10",minutos(30),false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo10,-1449.1982, 2647.2046, 55.4890, 100.0,   0.00000, 0.00000,  197.2201);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa10",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
				case 2:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa10",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
			}
		}
		case 2:
		{
			new intento = random(2);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta10 = 1;
					SetTimer("CerrarPuerta10",24000,false);
					SetTimer("CargarCasa10",minutos(30),false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo10,-1449.1982, 2647.2046, 55.4890, 100.0,   0.00000, 0.00000,  197.2201);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}20 segundos{FFFFFF} o seras arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa10",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
			}
		}
		case 3:
		{
			CasaAbierta10 = 1;
			SetTimer("CerrarPuerta10",24000,false);
			SetTimer("CargarCasa10",minutos(30),false);
			AudioAlarma(Pos[0],Pos[1],Pos[2]);
			AccionesRol(playerid,"logró forzar la cerradura.", 20);
			MoveDynamicObject(PuertaRobo10,-1449.1982, 2647.2046, 55.4890, 100.0,   0.00000, 0.00000,  197.2201);
			GuardarHerramienta(playerid);
			SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			ExperienciaMaximaLadron(playerid);
		}
	}
	return 1;
}

public Forzado11(playerid)
{
	new Float:Pos[3];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	Descongelar(playerid);
	switch(PlayerInfo[playerid][pNivelLadron])
	{
		case 1:
		{
   			new intento = random(3);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta11 = 1;
					SetTimer("CerrarPuerta11",24000,false);
					SetTimer("CargarCasa11",minutos(30),false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo11,1343.9200, 2610.7400, 10.4000, 100.0, 0.0000, 0.0000, 98.0000);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
					SetTimer("CargarCasa11",minutos(30),false);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa11",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
				case 2:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa11",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
			}
		}
		case 2:
		{
			new intento = random(2);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta11 = 1;
					SetTimer("CerrarPuerta11",24000,false);
					SetTimer("CargarCasa11",minutos(30),false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo11,1343.9200, 2610.7400, 10.4000, 100.0, 0.0000, 0.0000, 98.0000);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa11",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
			}
		}
		case 3:
		{
			CasaAbierta11 = 1;
			SetTimer("CerrarPuerta11",24000,false);
			SetTimer("CargarCasa11",minutos(30),false);
			AudioAlarma(Pos[0],Pos[1],Pos[2]);
			AccionesRol(playerid,"logró forzar la cerradura.", 20);
			MoveDynamicObject(PuertaRobo11,1343.9200, 2610.7400, 10.4000, 100.0, 0.0000, 0.0000, 98.0000);
			GuardarHerramienta(playerid);
			SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			ExperienciaMaximaLadron(playerid);
		}
	}
	return 1;
}

public Forzado12(playerid)
{
	new Float:Pos[3];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	Descongelar(playerid);
	switch(PlayerInfo[playerid][pNivelLadron])
	{
		case 1:
		{
   			new intento = random(3);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta12 = 1;
					SetTimer("CerrarPuerta12",24000,false);
					SetTimer("CargarCasa12",minutos(30),false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo12,1666.2400, 2610.7400, 10.4000, 100.0, 0.0000, 0.0000, 86.0000);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa12",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
				case 2:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa12",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
			}
		}
		case 2:
		{
			new intento = random(2);
			switch(intento)
			{
				case 0:
				{
					CasaAbierta12 = 1;
					SetTimer("CerrarPuerta12",24000,false);
					SetTimer("CargarCasa12",minutos(30),false);
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"logró forzar la cerradura.", 20);
					MoveDynamicObject(PuertaRobo12,1666.2400, 2610.7400, 10.4000, 100.0, 0.0000, 0.0000, 86.0000);
					GuardarHerramienta(playerid);
					SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}20 segundos{FFFFFF} o seras arrestado.");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ExpLadron(playerid);
					RevisarLogroLadron(playerid);
				}
				case 1:
				{
					AudioAlarma(Pos[0],Pos[1],Pos[2]);
					AccionesRol(playerid,"no logra forzar la cerradura.", 20);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					SetTimer("CargarCasa12",minutos(40),false);
					RemovePlayerAttachedObject(playerid, 2);
					GuardarHerramienta(playerid);
				}
			}
		}
		case 3:
		{
			CasaAbierta12 = 1;
			SetTimer("CerrarPuerta12",24000,false);
			SetTimer("CargarCasa12",minutos(30),false);
			AudioAlarma(Pos[0],Pos[1],Pos[2]);
			AccionesRol(playerid,"logró forzar la cerradura.", 20);
			MoveDynamicObject(PuertaRobo12,1666.2400, 2610.7400, 10.4000, 100.0, 0.0000, 0.0000, 86.0000);
			GuardarHerramienta(playerid);
			SendClientMessage(playerid,-1,"{00CC00}Lograste abrir la puerta{FFFFFF}, roba todo lo que puedas antes de que pasen {00CC00}24 segundos{FFFFFF} o serás arrestado.");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			ExperienciaMaximaLadron(playerid);
		}
	}
	return 1;
}
public LoadBarrelMeta(id)
{
	switch(id)
	{
		case 1:
		{
		    Quimicos1 = 0;
			//LV
    		MetaCompra[0] = CreateObject(3632, -30.697500, 2346.327148, 23.615999, 0.000000, 0.000000, 310.041992);
			MetaCompra[1] = CreateObject(3632, -33.349918, 2346.823730, 23.615999, 0.000000, 0.000000, 59.749680);
			MetaCompra[2] = CreateObject(3632, -28.303591, 2348.099854, 23.615999, 0.000000, 0.000000, 223.184860);
			MetaCompra[3] = CreateObject(3632, -30.848129, 2349.221680, 23.775999, 0.000000, 0.000000, 285.904175);
			MetaCompra[4] = CreateObject(3632, -33.489899, 2349.594238, 23.775999, 0.000000, 0.000000, 0.000000);
			MetaCompraText[0] = CreateDynamic3DTextLabel("Pulsa {DBED15}'H'{FFFFFF} para levantar el tanque.", -1, -30.697500, 2346.327148, 23.615999, 1.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0,-1,100.0);
            MetaCompraText[1] = CreateDynamic3DTextLabel("Pulsa {DBED15}'H'{FFFFFF} para levantar el tanque.", -1, -33.349918, 2346.823730, 23.615999, 1.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0,-1,100.0);
            MetaCompraText[2] = CreateDynamic3DTextLabel("Pulsa {DBED15}'H'{FFFFFF} para levantar el tanque.", -1, -28.303591, 2348.099854, 23.615999, 1.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0,-1,100.0);
            MetaCompraText[3] = CreateDynamic3DTextLabel("Pulsa {DBED15}'H'{FFFFFF} para levantar el tanque.", -1, -30.848129, 2349.221680, 23.775999, 1.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0,-1,100.0);
            MetaCompraText[4] = CreateDynamic3DTextLabel("Pulsa {DBED15}'H'{FFFFFF} para levantar el tanque.", -1, -33.489899, 2349.594238, 23.775999, 1.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0,-1,100.0);
		}
		case 2:
		{
		    Quimicos2 = 0;
			//SF
			MetaCompra[5] = CreateObject(3632, -1857.837891, 111.288147, 14.591300, 0.000000, 0.000000, 82.894028);
			MetaCompra[6] = CreateObject(3632, -1860.744751, 110.884758, 14.591300, 0.000000, 0.000000, 39.629650);
			MetaCompra[7] = CreateObject(3632, -1863.086792, 111.258713, 14.591300, 0.000000, 0.000000, 25.034269);
			MetaCompra[8] = CreateObject(3632, -1859.877441, 113.126198, 14.591300, 0.000000, 0.000000, 85.359444);
			MetaCompra[9] = CreateObject(3632, -1862.731934, 113.749191, 14.591300, 0.000000, 0.000000, 42.161259);
			MetaCompraText[5] = CreateDynamic3DTextLabel("Pulsa {DBED15}'H'{FFFFFF} para levantar el tanque.", -1, -1857.837891, 111.288147, 14.591300, 2.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0,-1,100.0);
            MetaCompraText[6] = CreateDynamic3DTextLabel("Pulsa {DBED15}'H'{FFFFFF} para levantar el tanque.", -1, -1860.744751, 110.884758, 14.591300, 2.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0,-1,100.0);
            MetaCompraText[7] = CreateDynamic3DTextLabel("Pulsa {DBED15}'H'{FFFFFF} para levantar el tanque.", -1, -1863.086792, 111.258713, 14.591300, 2.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0,-1,100.0);
            MetaCompraText[8] = CreateDynamic3DTextLabel("Pulsa {DBED15}'H'{FFFFFF} para levantar el tanque.", -1, -1859.877441, 113.126198, 14.591300, 2.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0,-1,100.0);
            MetaCompraText[9] = CreateDynamic3DTextLabel("Pulsa {DBED15}'H'{FFFFFF} para levantar el tanque.", -1, -1862.731934, 113.749191, 14.591300, 2.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0,-1,100.0);
		}
		case 3:
		{
		    Quimicos3 = 0;
			//SF
			MetaCompra[10] = CreateObject(3632, -1043.100586, 1554.120361, 32.809502, 0.000000, 0.000000, 301.762146);
			MetaCompra[11] = CreateObject(3632, -1045.420166, 1554.128418, 32.809502, 0.000000, 0.000000, 265.324707);
			MetaCompra[12] = CreateObject(3632, -1044.323853, 1551.946411, 32.869499, 0.000000, 0.000000, 325.070862);
			MetaCompra[13] = CreateObject(3632, -1047.568237, 1552.777954, 32.809502, 0.000000, 0.000000, 0.000000);
			MetaCompra[14] = CreateObject(3632, -1044.697388, 1549.801025, 32.809502, 0.000000, 0.000000, 315.720764);
			MetaCompraText[10] = CreateDynamic3DTextLabel("Pulsa {DBED15}'H'{FFFFFF} para levantar el tanque.", -1, -1043.100586, 1554.120361, 32.809502, 2.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0,-1,100.0);
            MetaCompraText[11] = CreateDynamic3DTextLabel("Pulsa {DBED15}'H'{FFFFFF} para levantar el tanque.", -1, -1045.420166, 1554.128418, 32.809502, 2.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0,-1,100.0);
            MetaCompraText[12] = CreateDynamic3DTextLabel("Pulsa {DBED15}'H'{FFFFFF} para levantar el tanque.", -1, -1044.323853, 1551.946411, 32.869499, 2.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0,-1,100.0);
            MetaCompraText[13] = CreateDynamic3DTextLabel("Pulsa {DBED15}'H'{FFFFFF} para levantar el tanque.", -1, -1047.568237, 1552.777954, 32.809502, 2.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0,-1,100.0);
            MetaCompraText[14] = CreateDynamic3DTextLabel("Pulsa {DBED15}'H'{FFFFFF} para levantar el tanque.", -1, -1044.697388, 1549.801025, 32.809502, 2.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0,-1,100.0);
		}
    }
}

public PagarSobornoFabricas()
{
	new day,month,year;
	getdate(day,month,year);
	if(day == 7 || day == 14 || day == 21 || day == 28 || day == 12)
	{
		for(new f = 0; f < MAX_FABRICAS; f++)
		{
		    if(Fabricas[f][FechaPaga] == day)
			{
				Fabricas[f][pSoborno] = 0;
			}
		}
    }
    return 1;
}

public MovimientosTiburon()
{
	MoveDynamicObject(Tiburon, 2788.8455, -2585.0376, 10.0100+0.0001, 0.00009, 93.0000, 0, 261.0000);
	SetTimer("MovimientosTiburon2",1000,false);
}

public MovimientosTiburon2()
{
	MoveDynamicObject(Tiburon, 2788.8455, -2585.0376, 10.0100-0.0001, 0.00009, 93.00000, -84.00000, 0);
	SetTimer("MovimientosTiburon",1050,false);
}
public MostrarBoxMedico(playerid)
{
    new string[360],string2[360], string3[360], string4[360];
    if(MEDICOSON == 0) { format(string3,sizeof(string3),"\n{00CC00}- {FFFFFF}Solicitar servicio médico\tUn médico irá a buscarte\t{00cc00}No{FFFFFF}"); }
    else { format(string3,sizeof(string3),"\n{00CC00}- {FFFFFF}Solicitar servicio médico\tUn médico irá a buscarte {FFFB00}(%d en servicio){FFFFFF}\t{00cc00}No{FFFFFF}",MEDICOSON); }

	format(string4,sizeof(string4),"\n{52b4be}-{FFFFFF} Ir al hospital\tTranslado directo al hospital\t{EB0000}Si{FFFFFF}");
	Loop(f,MAX_FABRICAS)
	{
	    if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda])
	    {
	        if(Fabricas[f][MedicoContratado] != 0)
	        {
	            if(IsPlayerInRangeOfPoint(playerid,500.0,Fabricas[f][pEntradaX],Fabricas[f][pEntradaY],Fabricas[f][pEntradaZ]))
	            {
	                if(Fabricas[f][EstadoMedico] == 0)
	                {
	                	format(string2,sizeof(string2),"\n{00CC00}- {FFFFFF}Atención clandestina\tTranslado directo a tu fábrica\t\t{00cc00}No{FFFFFF}");
	            	}
	            }
	        }
	    }
	}
	format(string,sizeof(string),"Acción\tDetalles\tPérdida de armas\n%s%s%s",string3,string4,string2);
	ShowPlayerDialog(playerid, MMEDICO, DIALOG_STYLE_TABLIST_HEADERS, "Necesitas atención médica, selecciona una opción.", string, "Aceptar","Cancelar");
	return 1;
}

public DestruirDineroColegiala(dinero)
{
	DestroyDynamicObject(DineroColegiala[dinero]);
}
public RutraTransportista(playerid)
{
	tcarga[playerid] = SetTimerEx("RutaTransportista",1000,true,"d",playerid);
	GameTextForPlayer(playerid, "~<~ ~w~Cargando camion ~>~", 10000, 5);
	TogglePlayerControllable(playerid, 0);
	SetPVarInt(playerid, "IsFrozen", 0);
	DisablePlayerCheckpoint(playerid);
	return 1;
}

public MandarMensajeTransportistas(playerid)
{
	switch(PlayerInfo[playerid][pNivelTransportista])
	{
		case 1:	{
			new punto = random(2);
			switch(punto) {
				case 0: {
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar una carga a la cantera de Hunter Quarry?");
					Transportistas[playerid][Ruta] = 1;
				}
				case 1:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar una carga en la fábrica de sprunk de Montgomery?");
					Transportistas[playerid][Ruta] = 2;
				}
			}
			PlayerInfo[playerid][Mobile] = 2540;
			if(PlayerInfo[playerid][Agonizando] != 1)	{  SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);   }
			return 1;
		}
		case 2:	{
			new punto = random(4);
			switch(punto) {
				case 0:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar una carga en Hunter Quarry?");
					Transportistas[playerid][Ruta] = 1;
				}
				case 1:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar una carga a la fábrica de sprunk de Montgomery?");
					Transportistas[playerid][Ruta] = 2;
				}
				case 2: {
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a la cantera hunter quarry  por un tubo para sf?");
					Transportistas[playerid][Ruta] = 3;
				}
				case 3: {
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a la maderera de Angel Pine?");
					Transportistas[playerid][Ruta] = 4;
				}
			}
			PlayerInfo[playerid][Mobile] = 2540;
			if(PlayerInfo[playerid][Agonizando] != 1)	{  SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);   }
			return 1;
		}
		case 3:	{
			new punto = random(6);
			switch(punto) {
				case 0:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar una carga en Hunter Quarry?");
					Transportistas[playerid][Ruta] = 1;
				}
				case 1:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar una carga a la Fábrica de sprunk de Montgomery?");
					Transportistas[playerid][Ruta] = 2;
				}
				case 2: {
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a la cantera hunter quarry  por un tubo para sf?");
					Transportistas[playerid][Ruta] = 3;
				}
				case 3: {
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a la maderera de Angel Pine?");
					Transportistas[playerid][Ruta] = 4;
				}
				case 4:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar una carga a la fabrica de Withehood states");
					Transportistas[playerid][Ruta] = 5;
				}
				case 5:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar un galpón en Explanade North?");
					Transportistas[playerid][Ruta] = 6;
				}
			}
			PlayerInfo[playerid][Mobile] = 2540;
			if(PlayerInfo[playerid][Agonizando] != 1)	{  SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);   }
			return 1;
		}
		case 4:	{
			new punto = random(8);
			switch(punto) {
				case 0:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar una carga en Hunter Quarry?");
					Transportistas[playerid][Ruta] = 1;
				}
				case 1:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar una carga a la Fábrica de sprunk de Montgomery?");
					Transportistas[playerid][Ruta] = 2;
				}
				case 2: {
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a a cantera hunter quarry  por un tubo para sf?");
					Transportistas[playerid][Ruta] = 3;
				}
				case 3: {
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a la maderera de Angel Pine?");
					Transportistas[playerid][Ruta] = 4;
				}
				case 4:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar una carga a la fabrica de Withehood states");
					Transportistas[playerid][Ruta] = 5;
				}
				case 5:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar un galpón en Explanade North?");
					Transportistas[playerid][Ruta] = 6;
				}
				case 6:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podria tubo concreto cantera bone country?");
					Transportistas[playerid][Ruta] = 7;
				}
				case 7:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar una carga a la fábrica de transformadores de Bayside?");
					Transportistas[playerid][Ruta] = 8;
				}
			}
			PlayerInfo[playerid][Mobile] = 2540;
			if(PlayerInfo[playerid][Agonizando] != 1)	{  SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);   }
			return 1;
		}
		case 5:	{
			new punto = random(10);
			switch(punto) {
				case 0:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar una carga en Hunter Quarry?");
					Transportistas[playerid][Ruta] = 1;
				}
				case 1:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar una carga a la Fábrica de sprunk de Montgomery?");
					Transportistas[playerid][Ruta] = 2;
				}
				case 2: {
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a la cantera hunter quarry  por un tubo para sf?");
					Transportistas[playerid][Ruta] = 3;
				}
				case 3: {
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a la maderera de Angel Pine?");
					Transportistas[playerid][Ruta] = 4;
				}
				case 4:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar una carga a la fabrica de Withehood states");
					Transportistas[playerid][Ruta] = 5;
				}
				case 5:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar un galpón en Explanade North?");
					Transportistas[playerid][Ruta] = 6;
				}
				case 6:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿Podria tubo concreto cantera bone country?");
					Transportistas[playerid][Ruta] = 7;
				}
				case 7:	{
                    SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar una carga a la fábrica de transformadores de Bayside?");
					Transportistas[playerid][Ruta] = 8;
				}
				case 8:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a Maquinas de casino a Bayside? 111 ");
					Transportistas[playerid][Ruta] = 9;
				}
				case 9: {
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a Maquinas de casino a Bayside? 222");
					Transportistas[playerid][Ruta] = 10;
				}
			}
			PlayerInfo[playerid][Mobile] = 2540;
			if(PlayerInfo[playerid][Agonizando] != 1)	{  SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);   }
			return 1;
		}
		case 6:	{
			new punto = random(12);
			switch(punto) {
				case 0:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar una carga en Hunter Quarry?");
					Transportistas[playerid][Ruta] = 1;
				}
				case 1:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar una carga a la Fábrica de sprunk de Montgomery?");
					Transportistas[playerid][Ruta] = 2;
				}
				case 2: {
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a la cantera hunter quarry  por un tubo para sf?");
					Transportistas[playerid][Ruta] = 3;
				}
				case 3: {
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a la maderera de Angel Pine?");
					Transportistas[playerid][Ruta] = 4;
				}
				case 4:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar una carga a la fabrica de Withehood states");
					Transportistas[playerid][Ruta] = 5;
				}
				case 5:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar un galpón en Explanade North?");
					Transportistas[playerid][Ruta] = 6;
				}
				case 6:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿Podria tubo concreto cantera bone country?");
					Transportistas[playerid][Ruta] = 7;
				}
				case 7:	{
                    SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar una carga a la fábrica de transformadores de Bayside?");
					Transportistas[playerid][Ruta] = 8;
				}
				case 8:	{
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a Maquinas de casino a Bayside? 111 ");
					Transportistas[playerid][Ruta] = 9;
				}
				case 9: {
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a Maquinas de casino a Bayside? 222");
					Transportistas[playerid][Ruta] = 10;
				}
				case 10: {
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿Galpon ferroviario?");
					Transportistas[playerid][Ruta] = 11;
				}
				case 11: {
					SendClientMessage(playerid,COLOR_DORADO,"Empresa de transporte(por celular): Hola, ¿podría ir a buscar una carga a la Fábrica de importaciones de Blue Berry?");
					Transportistas[playerid][Ruta] = 12;
				}
			}
			PlayerInfo[playerid][Mobile] = 2540;
			if(PlayerInfo[playerid][Agonizando] != 1)	{  SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);   }
			return 1;
		}
	}
	return 1;
}

public RutaTransportista(playerid)
{
	if(Cargando2[playerid] <= 10)
	{
		Cargando2[playerid]++;
		if(Cargando2[playerid] == 10) {
			new vehicleid = GetPlayerVehicleID(playerid);
			if(!IsPlayerInAnyVehicle(playerid)) return 1;
			if(DFT(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
				TogglePlayerControllable(playerid, 1);
				SetPVarInt(playerid, "IsFrozen", 1);
				KillTimer(tcarga[playerid]);
				Cargando2[playerid] = 0;
				switch(Transportistas[playerid][Ruta])	{
					case 1:	{
						Transportistas[playerid][Objeto1] = CreateDynamicObject(758,0,0,-1000,0,0,0);
						Transportistas[playerid][Objeto2] = CreateDynamicObject(758,0,0,-1000,0,0,0);
						AttachDynamicObjectToVehicle(Transportistas[playerid][Objeto1], GetPlayerVehicleID(playerid), 0.6750000,-0.1500000,-0.3000000,-2.7000000,2.7000000,-24.3000060);
						AttachDynamicObjectToVehicle(Transportistas[playerid][Objeto2], GetPlayerVehicleID(playerid), 0.7500000,-3.7500010,-0.3000000,-2.7000000,2.7000000,-24.3000060);
						SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado correctamente{FFFFFF}, entrega la carga en la obra de construcción de Market");
						MarcadoCamioneroGPS(playerid,1251.0417,-1258.1145,13.1514,7.0);
					}
					case 2:	{
						Transportistas[playerid][Objeto1] = CreateDynamicObject(955,0,0,-1000,0,0,0);
						Transportistas[playerid][Objeto2] = CreateDynamicObject(955,0,0,-1000,0,0,0);
						Transportistas[playerid][Objeto3] = CreateDynamicObject(955,0,0,-1000,0,0,0);
						AttachDynamicObjectToVehicle(Transportistas[playerid][Objeto1], GetPlayerVehicleID(playerid), -0.0750000,1.1250000,0.0000000,0.0000000,0.0000000,0.0000000);
						AttachDynamicObjectToVehicle(Transportistas[playerid][Objeto2], GetPlayerVehicleID(playerid), -0.0750000,-1.5750000,0.0000000,-0.0000010,0.0000000,18.8999990);
						AttachDynamicObjectToVehicle(Transportistas[playerid][Objeto3], GetPlayerVehicleID(playerid), -0.0750000,-4.1250010,0.0000000,-0.0000010,0.0000000,-0.0000020);
						SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado correctamente{FFFFFF}, entrega la carga en la distribuidora de Sprunk de Whitewood Estates");
						MarcadoCamioneroGPS(playerid,1048.7633,2111.3118,10.8203,7.0);
					}
					case 3:	{
						Transportistas[playerid][Objeto1] = CreateDynamicObject(3502,0,0,-1000,0,0,0);
						AttachDynamicObjectToVehicle(Transportistas[playerid][Objeto1], GetPlayerVehicleID(playerid), 0.0000000,-2.4000000,1.3500000,0.0000000,0.0000000,0.0000000);
						SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado correctamente{FFFFFF}, entrega la carga en la obra de construcción de Doherty");
						MarcadoCamioneroGPS(playerid,-2097.1208,208.2063,35.3177,7.0);
					}
					case 4:	{
						Transportistas[playerid][Objeto1] = CreateDynamicObject(684,0,0,-1000,0,0,0);
						Transportistas[playerid][Objeto2] = CreateDynamicObject(684,0,0,-1000,0,0,0);
						AttachDynamicObjectToVehicle(Transportistas[playerid][Objeto1], GetPlayerVehicleID(playerid), -0.4162200,-1.6781400,0.0417000,180.0000000,178.0000000,0.0000000);
						AttachDynamicObjectToVehicle(Transportistas[playerid][Objeto2], GetPlayerVehicleID(playerid), 0.3304200,-1.6368600,0.0417000,0.0000000,4.0000000,0.0000000);
						SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado correctamente{FFFFFF}, entrega la carga en el aserradero de Flint Country");
						MarcadoCamioneroGPS(playerid,-267.1364,-2151.0940,28.8347,7.0);
					}
					case 5:	{
						Transportistas[playerid][Objeto1] = CreateDynamicObject(2934,0,0,-1000,0,0,0);
						AttachDynamicObjectToVehicle(Transportistas[playerid][Objeto1], GetPlayerVehicleID(playerid), -0.0150000,-1.2660000,1.1910000,0.0000000,0.0000000,0.0000000);
						SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado correctamente{FFFFFF}, entrega la carga en el puerto de Easter Basin");
						MarcadoCamioneroGPS(playerid,-1733.7360,184.4388,3.5547,7.0);
					}
					case 6:	{
						Transportistas[playerid][Objeto1] = CreateDynamicObject(934,0,0,-1000,0,0,0);
						AttachDynamicObjectToVehicle(Transportistas[playerid][Objeto1], GetPlayerVehicleID(playerid), 0.0916400,-0.7947100,1.0587000,0.0000000,0.0000000,0.0000000);
						SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado correctamente{FFFFFF}, entrega la carga en el deposito ferroviario de Sobell Rail Yards");
						MarcadoCamioneroGPS(playerid,2811.3918,1654.1230,10.8203,7.0);
					}
					case 7:	{
						Transportistas[playerid][Objeto1] = CreateDynamicObject(3502,0,0,-1000,0,0,0);
						AttachDynamicObjectToVehicle(Transportistas[playerid][Objeto1], GetPlayerVehicleID(playerid), 0.0000000,-2.4000000,1.3500000,0.0000000,0.0000000,0.0000000);
						SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado correctamente{FFFFFF}, entrega la carga en la obra de construcción de Starfish Casino");
						MarcadoCamioneroGPS(playerid,2415.1252,1893.7064,6.0156,7.0);
					}
					case 8:	{
						Transportistas[playerid][Objeto1] = CreateDynamicObject(3273,0,0,-1000,0,0,0);
						AttachDynamicObjectToVehicle(Transportistas[playerid][Objeto1], GetPlayerVehicleID(playerid), -0.0711300,-1.5323400,-0.2663500,0.0000000,0.0000000,0.0000000);
						SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado correctamente{FFFFFF}, entrega la carga en la central eléctrica de Bone Country");
						MarcadoCamioneroGPS(playerid,789.2708,2028.4414,6.7109,7.0);
					}
					case 9:	{
						Transportistas[playerid][Objeto1] = CreateDynamicObject(2785,0,0,-1000,0,0,0);
						AttachDynamicObjectToVehicle(Transportistas[playerid][Objeto1], GetPlayerVehicleID(playerid), 0.0000000,-1.2750000,0.5999990,-0.0000010,0.0000000,89.0999830);
						SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado correctamente{FFFFFF}, entrega la carga en el casino Caligula de Caligula's Palace");
						MarcadoCamioneroGPS(playerid,2316.5032,1733.3368,10.8203,7.0);
					}
					case 10:	{
						Transportistas[playerid][Objeto1] = CreateDynamicObject(2785,0,0,-1000,0,0,0);
						AttachDynamicObjectToVehicle(Transportistas[playerid][Objeto1], GetPlayerVehicleID(playerid), 0.0000000,-1.2750000,0.5999990,-0.0000010,0.0000000,89.0999830);
						SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado correctamente{FFFFFF}, entrega la carga en el depósito de The Four Dragons Casino");
						MarcadoCamioneroGPS(playerid,1905.8856,958.5278,10.8203,7.0);
					}
					case 11:	{
						Transportistas[playerid][Objeto1] = CreateDynamicObject(3585,0,0,-1000,0,0,0);
						AttachDynamicObjectToVehicle(Transportistas[playerid][Objeto1], GetPlayerVehicleID(playerid), -0.0167000,-1.7397000,1.3390000,0.0000000,0.0000000,90.0000000);
						SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado correctamente{FFFFFF}, entrega la carga en el puerto de Ocean Docks");
						MarcadoCamioneroGPS(playerid,2609.3381,-2202.1799,13.5469,7.0);
					}
					case 12:	{
						Transportistas[playerid][Objeto1] = CreateDynamicObject(1348,0,0,-1000,0,0,0);
						Transportistas[playerid][Objeto2] = CreateDynamicObject(1348,0,0,-1000,0,0,0);
						AttachDynamicObjectToVehicle(Transportistas[playerid][Objeto1], GetPlayerVehicleID(playerid), 0.5249990,-2.1000000,0.4499990,-0.0000010,0.0000000,89.0999830);
						AttachDynamicObjectToVehicle(Transportistas[playerid][Objeto2], GetPlayerVehicleID(playerid), -0.5249990,-2.1000000,0.4499990,-0.0000010,0.0000000,89.0999830);
						SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado correctamente{FFFFFF}, entrega la carga en el hospital de Las Venturas Airport");
						MarcadoCamioneroGPS(playerid,1607.8633,1718.3813,10.8203,7.0);
					}
				}
				tviaje[playerid] = 2;
			}
		}
	}
	return 1;
}

public ResetCars()
{
	for(new i=0; i< MAX_VEHICLES; i++)
	{
	    if(!IsVehicleOccupied(i))
	    {
			SetVehicleToRespawn(i);
		}
	}
	return 1;
}

public Reportado1quit(playerid)
{
	Reportado1[playerid] = -1;
}

public Reportado2quit(playerid)
{
	Reportado2[playerid] = -1;
}

public Reportado3quit(playerid)
{
	Reportado3[playerid] = -1;
}

public Reportado4quit(playerid)
{
	Reportado4[playerid] = -1;
}

public Reportado5quit(playerid)
{
	Reportado5[playerid] = -1;
}

public QuitarPrendass(playerid)
{
    retornaprendas[playerid] = 1;
    new prendas[3], p_e, pe[5] = 0;
    // Objeto vacio
    prendas[0] = 19382;
    prendas[1] = 19382;
    // Objeto 1
    if(UsandoObj[playerid]  == 1 && p_e == 0) { prendas[0] = PlayerInfo[playerid][pObj];  p_e = 1; pe[0] = 1; }
    if(UsandoObj2[playerid] == 1 && p_e == 0) { prendas[0] = PlayerInfo[playerid][pObj2]; p_e = 1; pe[1] = 1; }
    if(UsandoObj3[playerid] == 1 && p_e == 0) { prendas[0] = PlayerInfo[playerid][pObj3]; p_e = 1; pe[2] = 1; }
    if(UsandoObj4[playerid] == 1 && p_e == 0) { prendas[0] = PlayerInfo[playerid][pObj4]; p_e = 1; pe[3] = 1; }
    // Objeto 2
    if(UsandoObj[playerid]  == 1 && pe[0] == 0) { prendas[1] = PlayerInfo[playerid][pObj];  }
    if(UsandoObj2[playerid] == 1 && pe[1] == 0) { prendas[1] = PlayerInfo[playerid][pObj2]; }
    if(UsandoObj3[playerid] == 1 && pe[2] == 0) { prendas[1] = PlayerInfo[playerid][pObj3]; }
    if(UsandoObj4[playerid] == 1 && pe[3] == 0) { prendas[1] = PlayerInfo[playerid][pObj4]; }

    PlayerTextDrawSetPreviewModel(playerid,QuitarPrendasx[playerid][0], prendas[0]);
    PlayerTextDrawSetPreviewModel(playerid,QuitarPrendasx[playerid][1], prendas[1]);
	TextDrawShowForPlayer(playerid, CuadroPrendasCorto);
    TextDrawShowForPlayer(playerid, CerrarPrenda);
    TextDrawShowForPlayer(playerid, TextoPrendas);
    PlayerTextDrawShow(playerid, QuitarPrendasx[playerid][0]);
    PlayerTextDrawShow(playerid, QuitarPrendasx[playerid][1]);
    SelectTextDraw(playerid,0x272828FF);
}

public CargarBots()
{
	if(npctoggle == 0)
	{
		ConnectNPC(".Motorman1",".Motorman1");
		ConnectNPC(".Motorman2",".Motorman2");
		ConnectNPC(".Motorman3",".Motorman3");
		ConnectNPC(".Motorman4",".Motorman4");
		ConnectNPC(".Motorman5",".Motorman5");
		ConnectNPC(".Miguel",".Miguel");
		ConnectNPC(".Marcelo",".Marcelo");
		ConnectNPC(".Alejandro",".Alejandro");
		ConnectNPC(".Camello1",".Camello1");
		ConnectNPC(".HippiePepe",".HippiePepe");
		ConnectNPC(".Angelica",".Angelica");
		ConnectNPC(".Jorge",".Jorge");
		ConnectNPC(".Ignacio",".Ignacio");
		ConnectNPC(".Hugo",".Hugo");
		ConnectNPC(".Mao",".Mao");
		ConnectNPC(".Sergio",".Sergio");
		npctoggle = 1;
	}
}

public AcomodarPrendass(playerid)
{
    retornaprendas[playerid] = 1;
    new prendas[3], p_e, pe[5] = 0;
    // Objeto vacio
    prendas[0] = 19382;
	prendas[1] = 19382;
    // Objeto 1
    if(UsandoObj[playerid]  == 1 && p_e == 0) { prendas[0] = PlayerInfo[playerid][pObj];  p_e = 1; pe[0] = 1; }
    if(UsandoObj2[playerid] == 1 && p_e == 0) { prendas[0] = PlayerInfo[playerid][pObj2]; p_e = 1; pe[1] = 1; }
    if(UsandoObj3[playerid] == 1 && p_e == 0) { prendas[0] = PlayerInfo[playerid][pObj3]; p_e = 1; pe[2] = 1; }
    if(UsandoObj4[playerid] == 1 && p_e == 0) { prendas[0] = PlayerInfo[playerid][pObj4]; p_e = 1; pe[3] = 1; }
    // Objeto 2
    if(UsandoObj[playerid]  == 1 && pe[0] == 0) { prendas[1] = PlayerInfo[playerid][pObj];  }
    if(UsandoObj2[playerid] == 1 && pe[1] == 0) { prendas[1] = PlayerInfo[playerid][pObj2]; }
    if(UsandoObj3[playerid] == 1 && pe[2] == 0) { prendas[1] = PlayerInfo[playerid][pObj3]; }
    if(UsandoObj4[playerid] == 1 && pe[3] == 0) { prendas[1] = PlayerInfo[playerid][pObj4]; }

    PlayerTextDrawSetPreviewModel(playerid,PrendasAcomodar[playerid][0], prendas[0]);
    PlayerTextDrawSetPreviewModel(playerid,PrendasAcomodar[playerid][1], prendas[1]);
	TextDrawShowForPlayer(playerid, CuadroPrendasCorto);
    TextDrawShowForPlayer(playerid, CerrarPrenda);
    TextDrawShowForPlayer(playerid, TextoPrendas);
    PlayerTextDrawShow(playerid, PrendasAcomodar[playerid][0]);
    PlayerTextDrawShow(playerid, PrendasAcomodar[playerid][1]);
    SelectTextDraw(playerid,0x272828FF);
}

public ResetAvion()
{
    MoveObject(Avion, 133.52789, 2329.73804, 1954.93250, 150.0);
    MoveObject(AvionInt, 133.52789, 2329.73804, 1954.93250, 150.0);
    AvionListo = 1;
}

public TiempoPlane()
{
	new string[128];
	Loop(i,MAX_PLAYERS)
	{
	    if(EnParacaidas[i] != 0)
	    {
	    	if(TiempoAvion > 60)
			{
		  		format(string, sizeof(string), "El avión arribará en {00CC00}%dm %ds{FFFFFF}.", TiempoAvion/60, TiempoAvion%(60));
				SendClientMessage(i,-1,string);
			}
			if(TiempoAvion < 60 && TiempoAvion > 0)
			{
				format(string, sizeof(string), "El avión arribará en {00CC00}%ds{FFFFFF}.", TiempoAvion);
				SendClientMessage(i,-1,string);
			}
			if(TiempoAvion < 2)
			{
				AvionListo = 1;
				RevisarAvion();
			}
		}
	}
}

public EventoOff(playerid)
{
	Evento[playerid] = 0;
}

public EstadoRobo(playerid)
{
	if(RobadoReciente[playerid] == 1)
	{
		RobadoReciente[playerid] = 0;
	}
}

public MusicaEventos()
{
    for(new playerid = 0, pj = GetMaxPlayers(); playerid < pj; playerid++) if(IsPlayerConnected(playerid))
    {
        if(PlayerInfo[playerid][pSonidos] == 0)
        {
	        if(IsPlayerInRangeOfPoint(playerid,50.0,1479.0646,-1678.0393,14.0469))
	        {
	            if(EventoActivo == true || HallX == true)
	            {
	                if(!GetPVarInt(playerid,"escuchafc"))
	                {
	                    SetPVarInt(playerid,"escuchafc",1);
	                    new Float:Pos[3];
	                    GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	                    PlayAudioStreamForPlayer(playerid,"http://"WEB_SONIDOS"/evento.m3u",Pos[0],Pos[1],Pos[2],50.0,1);
	                }
	            }
	            else
	            {
	                if(GetPVarInt(playerid,"escuchafc") == 1)
	                {
	                    DeletePVar(playerid,"escuchafc");
	                    StopAudioStreamForPlayer(playerid);
	                }
	            }
	        }
        }
    }
    return 1;
}

public GuardarCuentasAT()
{
	foreach(Player,i)
	{
		if(JugadorLogeado[i] == 1)
		{
			GuardarCuenta(i);
		}
	}
}

public NavidadActiva()
{
    new DiaCambio, MesCambio, AnoCambio;
	getdate(AnoCambio, MesCambio, DiaCambio);
    if(NidadX == true && YaEs24 == 0 && MesCambio == 12 && DiaCambio > 24)
    {
        YaEs24 = 1;
 	}
    return 1;
}

public CerrarServidor()
{
    SendRconCommand("exit");
}

public Reinicio(Tiempo)
{
	new string[200];
	if(TiempoReinicio == 1)
	{
		format(string, 128, "El servidor se reiniciará automáticamente en 1 minuto.", TiempoReinicio);
		SendClientMessageToAll(0xb5bfcbFF, string);
		SetTimerEx("Conteo", 10000, false, "i", 50);
		TiempoReinicio--;
		return 1;
	}
	if(TiempoReinicio > 0 && TiempoReinicio <= 10)
	{
		format(string, 128, "El servidor se reiniciará automáticamente en %d minutos.", TiempoReinicio);
		SendClientMessageToAll(0xb5bfcbFF, string);
		TiempoReinicio--;
		return 1;
	}
	if(TiempoReinicio == 0)
	{
	    SendClientMessageToAll(0xb5bfcbFF, "El servidor se reiniciara ahora.");
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			SaveAccount(i);
			NoQuitar[i] = 1;
			SetTimerEx("KickXD",500,0,"d",i);
		}
		KillTimer(TimerReinicio);
		SendRconCommand("exit");
	}
	return 1;
}

public Conteo(Tiempo)
{
	new string[200];
	if(Tiempo > 10)
	{
		format(string, 128, "El servidor se reiniciará automáticamente en %d segundos.", Tiempo);
		SendClientMessageToAll(0xb5bfcbFF, string);
		TimerReinicio2 = SetTimerEx("Conteo", 10000, false, "i", Tiempo-10);
	}
	if(Tiempo == 10)
	{
		format(string, 128, "El servidor se reiniciará automáticamente en %d segundos.", Tiempo);
		SendClientMessageToAll(0xb5bfcbFF, string);
		TimerReinicio2 = SetTimerEx("Conteo", 5000, false, "i", Tiempo-5);
	}
	if(Tiempo <= 5)
	{
		format(string, 128, "El servidor se reiniciará automáticamente en %d segundos.", Tiempo);
		SendClientMessageToAll(0xb5bfcbFF, string);
		TimerReinicio2 = SetTimerEx("Conteo", 1000, false, "i", Tiempo-1);
		SetTimerEx("Reinicio", 6000, false, "i", 50);
	}
	return 1;
}

public ReloadBandas()
{
 	CargarFacciones();
}

public AntiClones()
{
	new bool: occupied[MAX_VEHICLES];
	for (new v = 1; v < MAX_VEHICLES; v++)
	{
		if(v > AUTOS)
		{
			foreach(Player, i)
			{
			    if(AutoDeFabrica[v] == 1) occupied[v] = true;
				if(v == autos[i] || v == autos2[i] || v == autos3[i] || v == autos4[i] || v == GetPlayerVehicleID(i)) occupied[v] = true;
			}
			if(!occupied[v])
			{
				MotorAuto[v] = 0;
				DestroyVehicle(v);
			}
		}
	}
	return 1;
}

public CheckAutos(playerid)
{
	if(!IsPlayerConnected(playerid)) return KillTimer(VerAutos[playerid]);
	if(JugadorLogeado[playerid] == 0) return KillTimer(VerAutos[playerid]);
	new autoid  = GetVehicleModel(autos[playerid]);
	new autoid2 = GetVehicleModel(autos2[playerid]);
	new autoid3 = GetVehicleModel(autos3[playerid]);
	new autoid4 = GetVehicleModel(autos4[playerid]);
	if(Cambiando[playerid] == 0)
	{
		if(PlayerInfo[playerid][vModelo] != autoid && PlayerInfo[playerid][vModelo] > 0)
		{
			if(autos[playerid] > 0)
			{
				Cambiando[playerid] = 1;
				DestroyVehicle(autos[playerid]);
				SetTimerEx("Auto1",500,false,"d",playerid);
			}
		}
		if(PlayerInfo[playerid][vModelo2] != autoid2 && PlayerInfo[playerid][vModelo2] > 0)
		{
			if(autos2[playerid] > 0)
			{
				Cambiando[playerid] = 1;
				DestroyVehicle(autos2[playerid]);
				SetTimerEx("Auto2",500,false,"d",playerid);
			}
		}
		if(PlayerInfo[playerid][vModelo3] != autoid3 && PlayerInfo[playerid][vModelo3] > 0)
		{
			if(autos3[playerid] > 0)
			{
				Cambiando[playerid] = 1;
				DestroyVehicle(autos3[playerid]);
				SetTimerEx("Auto3",500,false,"d",playerid);
			}
		}
		if(PlayerInfo[playerid][vModelo4] != autoid4 && PlayerInfo[playerid][vModelo4] > 0)
		{
			if(autos4[playerid] > 0)
			{
				Cambiando[playerid] = 1;
				DestroyVehicle(autos4[playerid]);
				SetTimerEx("Auto4",500,false,"d",playerid);
			}
		}
	}
	return 1;
}

public DarSlap(playerid)
{
	new szMessage[200];
	new Float:health;
	GetPlayerHealth(Slapeo[playerid], health);
	format(szMessage, sizeof(szMessage), "["SERVER_COIN2":RP] Vida de {00CC00}%s{FFFFFF} después del slap: {00CC00}%f", PlayerName(Slapeo[playerid]), health);
	SendClientMessage(playerid, COLOR_WHITE, szMessage);
	return 1;
}

public DanoFabrica(playerid)
{
	new Float:Vida;
	GetPlayerHealth(playerid,Vida);
	EstablecerVida(playerid,Vida-10);
	return 1;
}

public CurandoHospital(playerid)
{
	if(ValueTimerBugH[playerid] == 0)
	{
		new Float:Vida;
		GetPlayerHealth(playerid,Vida);
		if(Vida < 100)
		{
			new animname[32],animlib[32];
			GetAnimationName(GetPlayerAnimationIndex(playerid),animlib,32,animname,32);
			EstablecerVida(playerid,Vida+2);
			if(strcmp(animlib,"INT_HOUSE",true))
			{
				if(strcmp(animname ,"BED_In_R",true))
				{
					ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,0,0,1,0,1);
				}
			}
		}
		else
		{
			new Float:Angle;
			if(Vida > 100) EstablecerVida(playerid, 100);
			HCalculo[playerid] = 0;
			GetPlayerFacingAngle(playerid,Angle);
			SetPlayerFacingAngle(playerid,Angle+180);
			ApplyAnimation(playerid,"INT_HOUSE","BED_Out_R",3.00,0,0,0,0,0,1);
			switch(FabricaMedica[playerid])
			{
			    case 0:
			    {
			    	SendClientMessage(playerid,-1,"Ya te has recuperado completamente, puedes ir a tu casa.");
					Camas3[PlayerInfo[playerid][pCama]-1][PlayerInfo[playerid][pVwCama]] = 0;
					Camas2[PlayerInfo[playerid][pCama]-1][PlayerInfo[playerid][pVwCama]] = 0;
					Camas[PlayerInfo[playerid][pCama]-1][PlayerInfo[playerid][pVwCama]] = 0;
					PlayerInfo[playerid][pCama] = 0;
					KillTimer(HCurando[playerid]);
					KillTimer(HCurando[playerid]);
					KillTimer(HCurando[playerid]);
					ValueTimerBugH[playerid] = 1;
					return 0;
	        	}
			    case 1:
				{
					SendClientMessage(playerid,-1,"Tu recuperación fue un éxito, puedes volver a trabajar.");
					FabricaMedica[playerid] = 0;
					KillTimer(HCurando[playerid]);
					KillTimer(HCurando[playerid]);
					KillTimer(HCurando[playerid]);
					ValueTimerBugH[playerid] = 1;
					return 0;
	            }
	        }
		}
	}
	return 0;
}

public ActivarTimerCH(playerid)
{
	AntiCarHacks[playerid] = SetTimerEx("VerAuto",300,true,"d",playerid);
}

public NoVerBaul(playerid)
{
	if(VerBaul[playerid] != INVALID_PLAYER_ID) VerBaul[playerid] = INVALID_PLAYER_ID;
}

public DescongelarCBUG(playerid)
{
	TogglePlayerControllable(playerid,1);
	SetPVarInt(playerid, "IsFrozen", 1);
}

public Robo2(playerid)
{
	SetPlayerFacingAngle(playerid,177.1942);
	ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 1,5000);
	return 1;
}

/*public VerAuto(playerid)
{
	if(JugadorLogeado[playerid] == 1)
	{
		new autoid = GetPlayerVehicleID(playerid);
		if(IsPlayerInAnyVehicle(playerid))
		{
		    if(IsPlayerNPC(playerid)) return 1;
			if(PlayerInfo[playerid][pAdmin] > ADMIN_LEVEL_USER) return 1;
			if(Evento[playerid] == 1) return 1;
			if(EnAuto[playerid] != autoid)
			{
				new string[200];
				if(BajandoV[playerid] == 1) return 1;
				if(EnCarreras[playerid] > 0) return 1;
				if(BuyingCar[playerid] == 1) return 1;
				if(MOTO(autoid) && GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return 1;
				format(string, 128,"El jugador {FF3300}%s(ID: %d){FFFFFF} fue baneado por el anticheat. Razón: {FF3300}Cheat de vehículos (1).",PlayerName(playerid),playerid);
				SendClientMessageToAll(-1,string);
				SetTimerEx("KickXD",500,0,"d",playerid);
			}
		}
	}
	return 1;
}*/

public MostrarLuegoDe(playerid)
{
	TextDrawShowForPlayer(playerid, LuegoDe);
	TextDrawShowForPlayer(playerid, Completonegro);
	return 1;
}

public LlevarClub(playerid)
{
	SetPlayerPos(playerid,1204.5544,17.5049,1000.9219);
	SetPlayerFacingAngle(playerid,146.0252);
	SetPlayerInterior(playerid,2);
	ApplyAnimation(playerid, "BLOWJOBZ","BJ_COUCH_LOOP_P", 4.0, 0, 1, 1, 1,0);
	return 1;
}

public SacarClub(playerid)
{
	SetPlayerPos(playerid,1204.8699,12.5584,1000.921);
	SetPlayerFacingAngle(playerid,181.6822);
	SetPlayerInterior(playerid,2);
	SetPlayerVirtualWorld(playerid,5);
	ClearAnimations(playerid);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	EnClub[playerid] = 0;
	return 1;
}





public OcultarLuegoDe(playerid)
{
	TextDrawHideForPlayer(playerid, LuegoDe);
	TextDrawHideForPlayer(playerid, Completonegro);
	return 1;
}

public LimpiarSombrero(playerid)
{
	PuestoUnityTiene[playerid][0] = 0;
	PuestoUnityTiene[playerid][1] = 0;
	PuestoUnityTiene[playerid][2] = 0;
	PuestoUnityTiene[playerid][3] = 0;
	PuestoUnityxTiene[playerid][0] = 0;
	PuestoUnityxTiene[playerid][1] = 0;
	PuestoUnityxTiene[playerid][2] = 0;
	PuestoUnityxTiene[playerid][3] = 0;
	PuestoCamioneroTiene[playerid][0] = 0;
	PuestoCamioneroTiene[playerid][1] = 0;
	PuestoCamioneroTiene[playerid][2] = 0;
	PuestoCamioneroTiene[playerid][3] = 0;
	PuestoEstMuniTiene[playerid][0] = 0;
	PuestoEstMuniTiene[playerid][1] = 0;
	PuestoEstMuniTiene[playerid][2] = 0;
	PuestoEstMuniTiene[playerid][3] = 0;
	GorrosSFBridgeTiene[playerid][0] = 0;
	GorrosSFBridgeTiene[playerid][1] = 0;
	GorrosSFBridgeTiene[playerid][2] = 0;
	GorrosSFBridgeTiene[playerid][3] = 0;
	PuestoMountTiene[playerid][0] = 0;
	PuestoMountTiene[playerid][1] = 0;
	PuestoMountTiene[playerid][2] = 0;
	PuestoMountTiene[playerid][3] = 0;
	GorrosBridgeTiene[playerid][0] = 0;
	GorrosBridgeTiene[playerid][1] = 0;
	GorrosBridgeTiene[playerid][2] = 0;
	GorrosBridgeTiene[playerid][3] = 0;
	PuestoCBTiene[playerid][0] = 0;
	PuestoCBTiene[playerid][1] = 0;
	PuestoCBTiene[playerid][2] = 0;
	PuestoCBTiene[playerid][3] = 0;
	PuestoWeelsTiene[playerid][0] = 0;
	PuestoWeelsTiene[playerid][1] = 0;
	PuestoWeelsTiene[playerid][2] = 0;
	PuestoWeelsTiene[playerid][3] = 0;
	PuestoColinasTiene[playerid][0] = 0;
	PuestoColinasTiene[playerid][1] = 0;
	PuestoColinasTiene[playerid][2] = 0;
	PuestoColinasTiene[playerid][3] = 0;
	PuestoCNNTiene[playerid][0] = 0;
	PuestoCNNTiene[playerid][1] = 0;
	PuestoCNNTiene[playerid][2] = 0;
	PuestoCNNTiene[playerid][3] = 0;
	PuestoBaysideTiene[playerid][0] = 0;
	PuestoBaysideTiene[playerid][1] = 0;
	PuestoBaysideTiene[playerid][2] = 0;
	PuestoBaysideTiene[playerid][3] = 0;
	PuestoQuebradoTiene[playerid][0] = 0;
	PuestoQuebradoTiene[playerid][1] = 0;
	PuestoQuebradoTiene[playerid][2] = 0;
	PuestoQuebradoTiene[playerid][3] = 0;
	PuestoEmeTiene[playerid][0] = 0;
	PuestoEmeTiene[playerid][1] = 0;
	PuestoEmeTiene[playerid][2] = 0;
	PuestoEmeTiene[playerid][3] = 0;
	PuestoTransTiene[playerid][0] = 0;
	PuestoTransTiene[playerid][1] = 0;
	PuestoTransTiene[playerid][2] = 0;
	PuestoTransTiene[playerid][3] = 0;
	PuestoEstaLVTiene[playerid][0] = 0;
	PuestoEstaLVTiene[playerid][1] = 0;
	PuestoEstaLVTiene[playerid][2] = 0;
	PuestoEstaLVTiene[playerid][3] = 0;
	PuestoMarketTiene[playerid][0] = 0;
	PuestoMarketTiene[playerid][1] = 0;
	PuestoMarketTiene[playerid][2] = 0;
	PuestoMarketTiene[playerid][3] = 0;
	PuestoSMBTiene[playerid][0] = 0;
	PuestoSMBTiene[playerid][1] = 0;
	PuestoSMBTiene[playerid][2] = 0;
	PuestoSMBTiene[playerid][3] = 0;
	PuestoLSFTiene[playerid][0] = 0;
	PuestoLSFTiene[playerid][1] = 0;
	PuestoLSFTiene[playerid][2] = 0;
	PuestoLSFTiene[playerid][3] = 0;
	PuestoMCTiene[playerid][0] = 0;
	PuestoMCTiene[playerid][1] = 0;
	PuestoMCTiene[playerid][2] = 0;
	PuestoMCTiene[playerid][3] = 0;
	PuestoJTTiene[playerid][0] = 0;
	PuestoJTTiene[playerid][1] = 0;
	PuestoJTTiene[playerid][2] = 0;
 	PuestoJTTiene[playerid][3] = 0;
	PuestoPPTiene[playerid][0] = 0;
	PuestoPPTiene[playerid][1] = 0;
	PuestoPPTiene[playerid][2] = 0;
	PuestoPPTiene[playerid][3] = 0;
	PuestoAATiene[playerid][0] = 0;
	PuestoAATiene[playerid][1] = 0;
	PuestoAATiene[playerid][2] = 0;
	PuestoAATiene[playerid][3] = 0;
	PuestoPayaTiene[playerid][0] = 0;
	PuestoPayaTiene[playerid][1] = 0;
	PuestoPayaTiene[playerid][2] = 0;
	PuestoPayaTiene[playerid][3] = 0;
	PuestoElqTiene[playerid][0] = 0;
	PuestoElqTiene[playerid][1] = 0;
	PuestoElqTiene[playerid][2] = 0;
    PuestoElqTiene[playerid][3] = 0;
	PuestoLeSFTiene[playerid][0] = 0;
	PuestoLeSFTiene[playerid][1] = 0;
	PuestoLeSFTiene[playerid][2] = 0;
	PuestoLeSFTiene[playerid][3] = 0;
	PuestoPGTiene[playerid][0] = 0;
	PuestoPGTiene[playerid][1] = 0;
	PuestoPGTiene[playerid][2] = 0;
	PuestoPGTiene[playerid][3] = 0;
	PuestoBasuTiene[playerid][0] = 0;
	PuestoBasuTiene[playerid][1] = 0;
	PuestoBasuTiene[playerid][2] = 0;
	PuestoBasuTiene[playerid][3] = 0;
	PuestoAGTiene[playerid][0] = 0;
	PuestoAGTiene[playerid][1] = 0;
	PuestoAGTiene[playerid][2] = 0;
	PuestoAGTiene[playerid][3] = 0;
	PuestoFaDoTiene[playerid][0] = 0;
	PuestoFaDoTiene[playerid][1] = 0;
	PuestoFaDoTiene[playerid][2] = 0;
	PuestoFaDoTiene[playerid][3] = 0;
	PuestoAESFTiene[playerid][0] = 0;
	PuestoAESFTiene[playerid][1] = 0;
	PuestoAESFTiene[playerid][2] = 0;
	PuestoAESFTiene[playerid][3] = 0;
	PuestoC1Tiene[playerid][0] = 0;
	PuestoC1Tiene[playerid][1] = 0;
	PuestoC1Tiene[playerid][2] = 0;
    PuestoC1Tiene[playerid][3] = 0;
	return 1;
}

public pVomitar(playerid)
{
	ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0); // Vomit BAH!
	PlayerInfo[playerid][pHambre] += 10;
	PlayerInfo[playerid][pSed] += 20;
	SetPlayerProgressBarValue(playerid,Progressbar[playerid][Hambre], PlayerInfo[playerid][pHambre]);
	SetPlayerProgressBarValue(playerid,Progressbar[playerid][Sed], PlayerInfo[playerid][pSed]);
}

public MostrarAfinidad(playerid)
{
	TextDrawShowForPlayer(playerid, Cuadroputi);
	TextDrawShowForPlayer(playerid, Cuadroputi1);
	TextDrawShowForPlayer(playerid, PuticlubMedia);
	TextDrawShowForPlayer(playerid, PuticlubAlta);
	TextDrawShowForPlayer(playerid, FlechasArribaPuti);
	TextDrawShowForPlayer(playerid, FlechasArribaPuti2);
	PlayerTextDrawShow(playerid, LineasPutiNivel[playerid]);
	PlayerTextDrawShow(playerid, AfinidadconX[playerid]);
	return 1;
}

public OcultarAfinidad(playerid)
{
	TextDrawHideForPlayer(playerid, Cuadroputi);
 	TextDrawHideForPlayer(playerid, Cuadroputi1);
	PlayerTextDrawHide(playerid, AfinidadconX[playerid]);
	PlayerTextDrawHide(playerid, LineasPutiNivel[playerid]);
	TextDrawHideForPlayer(playerid, PuticlubMedia);
	TextDrawHideForPlayer(playerid, PuticlubAlta);
	TextDrawHideForPlayer(playerid, FlechasArribaPuti);
	TextDrawHideForPlayer(playerid, FlechasArribaPuti2);
	return 1;
}

public cargarhora()
{
    new Float:vida;
    gettime(Hora, Minuto);
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i))
		{
			SetPlayerTime(i,Hora,Minuto);
		}
		if(PlayerInfo[i][pSed] == 100)
		{
			GetPlayerHealth(i,vida);
			EstablecerVida(i,vida-3);
		}
		if(PlayerInfo[i][pHambre] == 100)
		{
			GetPlayerHealth(i,vida);
			EstablecerVida(i,vida-3);
		}
	}
	return 1;
}

public QuitandoA(playerid)
{
	if(Quitando[playerid] == 1)
	{
		Quitando[playerid] = 0;
	}
}

public Revisado(playerid,id)
{
	new Float:CPos[3],Float:CPos2[3],Float:CPos3[3],Float:CPos4[3], string[200];
	GetVehiclePos(autos[id], CPos[0],CPos[1],CPos[2]);
	GetVehiclePos(autos2[id], CPos2[0],CPos2[1],CPos2[2]);
	GetVehiclePos(autos3[id], CPos3[0],CPos3[1],CPos3[2]);
	GetVehiclePos(autos4[id], CPos4[0],CPos4[1],CPos4[2]);
	if(IsPlayerInRangeOfPoint(playerid, 4.0,CPos[0],CPos[1],CPos[2]))
	{
		if(Baul[autos[id]] == 1)
		{
			if(IsPlayerInAnyVehicle(playerid)) return 1;
			if(BAUL8(autos[id]))
			{
				format(string, 500, "{DBED16}Maletero{FFFFFF}:");
				SendClientMessage(playerid, -1, string);
				format(string, 500, "Lugar {DBED16}1{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}2{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul[autos[id]]),GetWeaponNameEx(EspacioBaul2[autos[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}3{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}4{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul3[autos[id]]),GetWeaponNameEx(EspacioBaul4[autos[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}5{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}6{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul5[autos[id]]),GetWeaponNameEx(EspacioBaul6[autos[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}7{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}8{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul7[autos[id]]),GetWeaponNameEx(EspacioBaul8[autos[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
			}
			else if(BAUL6(autos[id]))
			{
				format(string, 500, "{DBED16}Maletero{FFFFFF}:");
				SendClientMessage(playerid, 0xafafafFF, string);
				format(string, 500, "Lugar {DBED16}1{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}2{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul[autos[id]]),GetWeaponNameEx(EspacioBaul2[autos[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}3{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}4{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul3[autos[id]]),GetWeaponNameEx(EspacioBaul4[autos[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}5{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}6{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul5[autos[id]]),GetWeaponNameEx(EspacioBaul6[autos[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
			}
			else if(BAUL2(autos[id]))
			{
				format(string, 500, "{DBED16}Maletero{FFFFFF}:");
				SendClientMessage(playerid, 0xafafafFF, string);
				format(string, 500, "Lugar {DBED16}1{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}2{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul[autos[id]]),GetWeaponNameEx(EspacioBaul2[autos[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
			}
			else
			{
				format(string, 500, "{DBED16}Maletero{FFFFFF}:");
				SendClientMessage(playerid, 0xafafafFF, string);
				format(string, 500, "Lugar {DBED16}1{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}2{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul[autos[id]]),GetWeaponNameEx(EspacioBaul2[autos[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}3{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}4{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul3[autos[id]]),GetWeaponNameEx(EspacioBaul4[autos[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
			}
			VerBaul[playerid] = id;
			AccionesRol(playerid,"revisa el interior del baúl.", 20);
		}
		else return SendClientMessage(playerid,-1,"Han cerrado el baul del vehículo");
	}
	else if(IsPlayerInRangeOfPoint(playerid,4.0,CPos2[0],CPos2[1],CPos2[2]))
	{
		if(Baul[autos2[id]] == 1)
		{
			if(IsPlayerInAnyVehicle(playerid)) return 1;
			if(BAUL8(autos2[id]))
			{
				format(string, 500, "{DBED16}Maletero{FFFFFF}:");
				SendClientMessage(playerid, 0xafafafFF, string);
				format(string, 500, "Lugar {DBED16}1{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}2{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul[autos2[id]]),GetWeaponNameEx(EspacioBaul2[autos2[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}3{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}4{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul3[autos2[id]]),GetWeaponNameEx(EspacioBaul4[autos2[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}5{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}6{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul5[autos2[id]]),GetWeaponNameEx(EspacioBaul6[autos2[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}7{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}8{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul7[autos2[id]]),GetWeaponNameEx(EspacioBaul8[autos2[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
			}
			else if(BAUL6(autos2[id]))
			{
				format(string, 500, "{DBED16}Maletero{FFFFFF}:");
				SendClientMessage(playerid, 0xafafafFF, string);
				format(string, 500, "Lugar {DBED16}1{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}2{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul[autos2[id]]),GetWeaponNameEx(EspacioBaul2[autos2[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}3{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}4{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul3[autos2[id]]),GetWeaponNameEx(EspacioBaul4[autos2[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}5{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}6{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul5[autos2[id]]),GetWeaponNameEx(EspacioBaul6[autos2[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
			}
			else if(BAUL2(autos2[id]))
			{
				format(string, 500, "{DBED16}Maletero{FFFFFF}:");
				SendClientMessage(playerid, 0xafafafFF, string);
				format(string, 500, "Lugar {DBED16}1{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}2{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul[autos2[id]]),GetWeaponNameEx(EspacioBaul2[autos2[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
			}
			else
			{
				format(string, 500, "{DBED16}Maletero{FFFFFF}:");
				SendClientMessage(playerid, 0xafafafFF, string);
				format(string, 500, "Lugar {DBED16}1{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}2{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul[autos2[id]]),GetWeaponNameEx(EspacioBaul2[autos2[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}3{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}4{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul3[autos2[id]]),GetWeaponNameEx(EspacioBaul4[autos2[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
			}
			VerBaul[playerid] = id;
			AccionesRol(playerid,"revisa el interior del baúl.", 20);
		}
		else return SendClientMessage(playerid,-1,"Han cerrado el baul del vehículo");
	}
	else if(IsPlayerInRangeOfPoint(playerid,4.0,CPos3[0],CPos3[1],CPos3[2]))
	{
		if(Baul[autos3[id]] == 1)
		{
			if(IsPlayerInAnyVehicle(playerid)) return 1;
			if(BAUL8(autos3[id]))
			{
				format(string, 500, "{DBED16}Maletero{FFFFFF}:");
				SendClientMessage(playerid, 0xafafafFF, string);
				format(string, 500, "Lugar {DBED16}1{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}2{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul[autos3[id]]),GetWeaponNameEx(EspacioBaul2[autos3[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}3{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}4{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul3[autos3[id]]),GetWeaponNameEx(EspacioBaul4[autos3[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}5{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}6{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul5[autos3[id]]),GetWeaponNameEx(EspacioBaul6[autos3[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}7{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}8{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul7[autos3[id]]),GetWeaponNameEx(EspacioBaul8[autos3[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
			}
			else if(BAUL6(autos3[id]))
			{
				format(string, 500, "{DBED16}Maletero{FFFFFF}:");
				SendClientMessage(playerid, 0xafafafFF, string);
				format(string, 500, "Lugar {DBED16}1{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}2{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul[autos3[id]]),GetWeaponNameEx(EspacioBaul2[autos3[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}3{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}4{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul3[autos3[id]]),GetWeaponNameEx(EspacioBaul4[autos3[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}5{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}6{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul5[autos3[id]]),GetWeaponNameEx(EspacioBaul6[autos3[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
			}
			else if(BAUL2(autos3[id]))
			{
				format(string, 500, "{DBED16}Maletero{FFFFFF}:");
				SendClientMessage(playerid, 0xafafafFF, string);
				format(string, 500, "Lugar {DBED16}1{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}2{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul[autos3[id]]),GetWeaponNameEx(EspacioBaul2[autos3[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
			}
			else
			{
				format(string, 500, "{DBED16}Maletero{FFFFFF}:");
				SendClientMessage(playerid, 0xafafafFF, string);
				format(string, 500, "Lugar {DBED16}1{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}2{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul[autos3[id]]),GetWeaponNameEx(EspacioBaul2[autos3[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}3{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}4{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul3[autos3[id]]),GetWeaponNameEx(EspacioBaul4[autos3[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
			}
			VerBaul[playerid] = id;
			AccionesRol(playerid,"revisa el interior del baúl.", 20);
		}
		else return SendClientMessage(playerid,-1,"Han cerrado el baul del vehículo");
	}
	else if(IsPlayerInRangeOfPoint(playerid,4.0,CPos4[0],CPos4[1],CPos4[2]))
	{
		if(Baul[autos4[id]] == 1)
		{
			if(IsPlayerInAnyVehicle(playerid)) return 1;
			if(BAUL8(autos4[id]))
			{
				format(string, 500, "{DBED16}Maletero{FFFFFF}:");
				SendClientMessage(playerid, 0xafafafFF, string);
				format(string, 500, "Lugar {DBED16}1{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}2{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul[autos4[id]]),GetWeaponNameEx(EspacioBaul2[autos4[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}3{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}4{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul3[autos4[id]]),GetWeaponNameEx(EspacioBaul4[autos4[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}5{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}6{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul5[autos4[id]]),GetWeaponNameEx(EspacioBaul6[autos4[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}7{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}8{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul7[autos4[id]]),GetWeaponNameEx(EspacioBaul8[autos4[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
			}
			else if(BAUL6(autos4[id]))
			{
				format(string, 500, "{DBED16}Maletero{FFFFFF}:");
				SendClientMessage(playerid, 0xafafafFF, string);
				format(string, 500, "Lugar {DBED16}1{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}2{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul[autos4[id]]),GetWeaponNameEx(EspacioBaul2[autos4[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}3{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}4{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul3[autos4[id]]),GetWeaponNameEx(EspacioBaul4[autos4[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}5{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}6{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul5[autos4[id]]),GetWeaponNameEx(EspacioBaul6[autos4[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
			}
			else if(BAUL2(autos4[id]))
			{
				format(string, 500, "{DBED16}Maletero{FFFFFF}:");
				SendClientMessage(playerid, 0xafafafFF, string);
				format(string, 500, "Lugar {DBED16}1{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}2{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul[autos4[id]]),GetWeaponNameEx(EspacioBaul2[autos4[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
			}
			else
			{
				format(string, 500, "{DBED16}Maletero{FFFFFF}:");
				SendClientMessage(playerid, 0xafafafFF, string);
				format(string, 500, "Lugar {DBED16}1{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}2{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul[autos4[id]]),GetWeaponNameEx(EspacioBaul2[autos4[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
				format(string, 500, "Lugar {DBED16}3{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}4{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul3[autos4[id]]),GetWeaponNameEx(EspacioBaul4[autos4[id]]));
				SendClientMessage(playerid, 0xafafafFF,string);
			}
			VerBaul[playerid] = id;
			AccionesRol(playerid,"revisa el interior del baúl.", 20);
		}
		else return SendClientMessage(playerid,-1,"Han cerrado el baul del vehículo");
	}
	else return SendClientMessage(playerid, -1, "Ya no estas cerca del vehiculo");
	return 1;
}

public QuitarReporte(playerid)
{
	if(reportar[playerid] != INVALID_PLAYER_ID)
	{
		reportar[playerid] = INVALID_PLAYER_ID;
	}
}

public Entrandos(playerid)
{
	if(Entrando[playerid] == 1)
	{
		GetPlayerPos(playerid, PosTP[playerid][0],PosTP[playerid][1],PosTP[playerid][2]);
		Entrando[playerid] = 0;
	}
}

public CerrarPuerta()
{
    EscaparLabel[0] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,-2277.9897,-10.2257,38.2993,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CasaAbierta = 0;
	MoveDynamicObject(PuertaRobo1, -2277.5667, -9.4666, 37.2482, 100.0, 0.0000, 0.0000, 269.1064);
}

public CerrarPuerta2()
{
    EscaparLabel[4] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,932.2437,1975.8787,11.6227,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
    CasaAbierta2 = 0;
	MoveDynamicObject(PuertaRobo2, 931.28186, 1974.06372, 10.61430, 100.0,   0.00000, 0.00000, 0.00000);
}

public CerrarPuerta3()
{
    EscaparLabel[1] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,-2396.0010,-13.0565,35.3486,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CasaAbierta3 = 0;
	MoveDynamicObject(PuertaRobo3,  -2394.86670, -12.35760, 34.27060, 100.0,  0.00000, 0.00000, 269.82654);
}

public CerrarPuerta4()
{
    EscaparLabel[2] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,2373.7302,-1136.8610,30.0583,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CasaAbierta4 = 0;
	MoveDynamicObject(PuertaRobo4, 2373.0024, -1138.5510, 29.0312, 100.0, 0.0000, 0.0000, 0.0000);
}

public CerrarPuerta5()
{
    EscaparLabel[5] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,-2729.9800,-50.8513,7.0453,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CasaAbierta5 = 0;
	MoveDynamicObject(PuertaRobo5, -2728.5708, -50.4009, 6.0173, 100.0, 0.0000, 0.0000, 269.9401);
}

public CerrarPuerta6()
{
    EscaparLabel[6] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,-2729.9695,-155.6657,7.2174,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CasaAbierta6 = 0;
	MoveDynamicObject(PuertaRobo6,-2728.5442, -155.0267, 6.2020, 100.0, 0.0000, 0.0000, 269.8600);
}

public CerrarPuerta7()
{
    EscaparLabel[8] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,1762.7701,-2098.9631,13.9989,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0); // C7
	CasaAbierta7 = 0;
	MoveDynamicObject(PuertaRobo7,1762.12488, -2100.72290, 12.96590, 100.0, 0.00000, 0.00000, 0.00000);
}

public CerrarPuerta8()
{
    EscaparLabel[7] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,2485.0527,-1995.0458,14.0434,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CasaAbierta8 = 0;
	MoveDynamicObject(PuertaRobo8,2484.4492, -1996.0295, 13.2080, 100.0, 0.0000, 0.0000,0.1800);
}

public CerrarPuerta9()
{
    EscaparLabel[9] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,1841.8738,770.7863,11.5959,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0); // C9
	CasaAbierta9 = 0;
	MoveDynamicObject(PuertaRobo9,1844.1000, 770.1200, 10.4400, 100.0, 0.0000, 0.0000, 90.0000);
}

public CerrarPuerta10()
{
    EscaparLabel[3] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,-1449.7598,2647.9287,56.5345,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CasaAbierta10 = 0;
	MoveDynamicObject(PuertaRobo10,-1449.19824, 2647.20459, 55.48900, 100.0,  0.00000, 0.00000, 90.00000);
}

public CerrarPuerta11()
{
    EscaparLabel[10] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,1344.4647,2612.5925,11.5559,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0); // C11
	CasaAbierta11 = 0;
	MoveDynamicObject(PuertaRobo11,1343.9200, 2610.7400, 10.4000, 100.0, 0.0000, 0.0000, 0.0000);
}

public CerrarPuerta12()
{
    EscaparLabel[11] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,1666.9180,2612.6965,11.5559,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0); // C12
	CasaAbierta12 = 0;
	MoveDynamicObject(PuertaRobo12,1666.2400, 2610.7400, 10.4000, 100.0, 0.0000, 0.0000, 0.0000);
}

public ColgarLlamada(playerid)
{
	if(PlayerInfo[playerid][MobileSub] == 2540)
	{
		Mobile2[playerid] = 0;
		SendClientMessage(playerid,-1,"Colgaron la llamada.");
		finllamada(playerid);
	}
}

public CurarON(playerid)
{
	Curando[playerid] = 1;
}

public PrimerP(playerid)
{
	RecorridoBasu[playerid] = 2;
	RecorridoBasu[Companero[playerid]] = 2;
 	SetPlayerCheckpoint(playerid,119.0534,-1600.7428,11.0364,5.0);
	return 1;
}

public CargarCasa1()
{
	if(!IsValidDynamicObject(T1) && !IsValidDynamicObject(T2) && !IsValidDynamicObject(T3) && !IsValidDynamicObject(T4) && !IsValidDynamicObject(T5) && !IsValidDynamicObject(T6) && !IsValidDynamicObject(T7))
	{
		T1 = CreateDynamicObject(1429, -2280.60376, -14.82680, 38.03000,   0.00000, 0.00000, 70.61990);
		T2 = CreateDynamicObject(1518, -2280.63721, -16.44526, 38.05420,   0.00000, 0.00000, 120.36000);
		T3 = CreateDynamicObject(2912, -2278.36792, -14.86620, 37.29990,   0.00000, 0.00000, -1.62000);
		T4 = CreateDynamicObject(2190, -2280.72827, -15.26394, 37.77455,   0.00000, 0.00000, 50.69999);
		T5 = CreateDynamicObject(1788, -2280.53418, -16.19723, 37.44304,   0.00000, 0.00000, -49.37999);
		T7 = CreateDynamicObject(1790, -2280.39893, -14.92786, 37.45214,   0.00000, 0.00000, 88.37997);
		T6 = CreateDynamicObject(2028, -2278.22900, -16.77450, 37.40304,   0.00000, 0.00000, 0.00000);
		Forzada1 = 0;
	}
	else
	{
		Forzada1 = 0;
	}
}

public CargarCasa2()
{
	if(!IsValidDynamicObject(T12) && !IsValidDynamicObject(T22) && !IsValidDynamicObject(T32) && !IsValidDynamicObject(T42) && !IsValidDynamicObject(T52) && !IsValidDynamicObject(T62) && !IsValidDynamicObject(T72))
	{
		T12 = CreateDynamicObject(1429, 942.56305, 1976.67395, 11.34690,   0.00000, 0.00000, -62.10000);
		T22 = CreateDynamicObject(1518, 942.44531, 1974.96301, 11.42232,   0.00000, 0.00000, -112.56001);
		T32 = CreateDynamicObject(2912, 939.79364, 1974.82947, 10.62529,   0.00000, 0.00000, 0.00000);
		T52 = CreateDynamicObject(1788, 942.32104, 1976.73279, 10.83022,   0.00000, 0.00000, -85.32000);
		T72 = CreateDynamicObject(1790, 942.38721, 1975.06116, 10.73031,   0.00000, 0.00000, -90.17999);
		T62 = CreateDynamicObject(2028, 940.09308, 1977.05005, 10.82510,   0.00000, 0.00000, 0.00000);
		T42 = CreateDynamicObject(2190, 939.99139, 1977.32190, 11.11951,   0.00000, 0.00000, 0.00000);
		Forzada2 = 0;
	}
	else
	{
		Forzada2 = 0;
	}
}

public CargarCasa3()
{
	if(!IsValidDynamicObject(T13) && !IsValidDynamicObject(T23) && !IsValidDynamicObject(T33) && !IsValidDynamicObject(T43) && !IsValidDynamicObject(T53) && !IsValidDynamicObject(T63) && !IsValidDynamicObject(T73))
	{
		T13 = CreateDynamicObject(1429, -2394.00562, -15.47150, 36.23100,   0.00000, 0.00000, 0.00000);
		T23 = CreateDynamicObject(1518, -2395.78857, -15.53133, 36.23100,   0.00000, 0.00000, 0.00000);
		T33 = CreateDynamicObject(2912, -2395.92505, -19.09909, 34.42548,   0.00000, 0.00000, 0.00000);
		T43 = CreateDynamicObject(2190, -2394.71484, -15.21817, 35.98800,   0.00000, 0.00000, 0.00000);
		T53 = CreateDynamicObject(1788, -2395.75928, -15.45650, 35.19190,   0.00000, 0.00000, 0.00000);
		T63 = CreateDynamicObject(2028, -2394.01709, -15.45650, 35.19190,   0.00000, 0.00000, 0.00000);
		T73 = CreateDynamicObject(1790, -2394.86279, -15.45650, 35.19190,   0.00000, 0.00000, 0.00000);
		Forzada3 = 0;
	}
	else
	{
		Forzada3 = 0;
	}
}

public CargarCasa4()
{
	if(!IsValidDynamicObject(T14) && !IsValidDynamicObject(T24) && !IsValidDynamicObject(T34) && !IsValidDynamicObject(T44) && !IsValidDynamicObject(T54) && !IsValidDynamicObject(T64) && !IsValidDynamicObject(T74))
	{
		T14 = CreateDynamicObject(1429, 2368.61401, -1131.40259, 30.97320,   0.00000, 0.00000, 160.32001);
		T24 = CreateDynamicObject(1518, 2370.30200, -1131.43127, 30.97320,   0.00000, 0.00000, 201.35999);
		T34 = CreateDynamicObject(2912, 2370.40674, -1129.14221, 28.96821,   0.00000, 0.00000, 0.00000);
		T44 = CreateDynamicObject(2190, 2369.12378, -1131.64221, 30.68020,   0.00000, 0.00000, 164.82001);
		T54 = CreateDynamicObject(1788, 2368.51880, -1131.42798, 29.94000,   0.00000, 0.00000, 0.00000);
		T64 = CreateDynamicObject(2028, 2370.12720, -1131.46106, 29.94000,   0.00000, 0.00000, 0.00000);
		T74 = CreateDynamicObject(1790, 2369.39893, -1131.51331, 29.46600,   0.00000, 0.00000, 0.00000);
		Forzada4 = 0;
	}
	else
	{
		Forzada4 = 0;
	}
}

public CargarCasa5()
{
	if(!IsValidDynamicObject(T15) && !IsValidDynamicObject(T25) && !IsValidDynamicObject(T35) && !IsValidDynamicObject(T45) && !IsValidDynamicObject(T55) && !IsValidDynamicObject(T65) && !IsValidDynamicObject(T75))
	{
		T15 = CreateDynamicObject(1429, -2730.06982, -59.74450, 7.20490,   0.00000, 0.00000, 196.14000);
		T25 = CreateDynamicObject(1518, -2731.72534, -59.64209, 7.20490,   0.00000, 0.00000, 178.20003);
		T35 = CreateDynamicObject(2912, -2731.85327, -57.35418, 6.03176,   0.00000, 0.00000, 0.00000);
		T45 = CreateDynamicObject(2190, -2731.16846, -59.89901, 6.93235,   0.00000, 0.00000, 174.30002);
		T55 = CreateDynamicObject(1788, -2730.06030, -59.85120, 6.16510,   0.00000, 0.00000, 0.00000);
		T65 = CreateDynamicObject(2028, -2730.97656, -59.74975, 6.60280,   0.00000, 0.00000, -2.40000);
		T75 = CreateDynamicObject(1790, -2731.64380, -59.69650, 6.16510,   0.00000, 0.00000, -5.64000);
		Forzada5 = 0;
	}
	else
	{
		Forzada5 = 0;
	}
}

public CargarCasa6()
{
	if(!IsValidDynamicObject(T16) && !IsValidDynamicObject(T26) && !IsValidDynamicObject(T36) && !IsValidDynamicObject(T46) && !IsValidDynamicObject(T56) && !IsValidDynamicObject(T66) && !IsValidDynamicObject(T76))
	{
		T16 = CreateDynamicObject(1429, -2731.07056, -164.54240, 7.68000,   0.00000, 0.00000, 196.80000);
		T26 = CreateDynamicObject(1518, -2732.74170, -164.46756, 7.68000,   0.00000, 0.00000, 164.58005);
		T36 = CreateDynamicObject(2912, -2733.24390, -163.87219, 6.20990,   0.00000, 0.00000, 0.00000);
		T46 = CreateDynamicObject(2190, -2732.13647, -164.68983, 7.42307,   0.00000, 0.00000, 182.57997);
		T56 = CreateDynamicObject(1788, -2731.10449, -164.46933, 7.08504,   0.00000, 0.00000, 0.00000);
		T66 = CreateDynamicObject(2028, -2731.81323, -164.44690, 6.67120,   0.00000, 0.00000, 0.00000);
		T76 = CreateDynamicObject(1790, -2732.57373, -164.33932, 7.12180,   0.00000, 0.00000, 0.00000);
		Forzada6 = 0;
	}
	else
	{
		Forzada6 = 0;
	}
}

public CargarCasa7()
{
	if(!IsValidDynamicObject(T17) && !IsValidDynamicObject(T27) && !IsValidDynamicObject(T37) && !IsValidDynamicObject(T47) && !IsValidDynamicObject(T57) && !IsValidDynamicObject(T67) && !IsValidDynamicObject(T77))
	{
		T17 = CreateDynamicObject(1429, 1758.10046, -2094.56860, 14.84190,   0.00000, 0.00000, 181.00000);
		T27 = CreateDynamicObject(1518, 1757.27979, -2094.54028, 14.86940,   0.00000, 0.00000, 185.00000);
		T37 = CreateDynamicObject(2912, 1756.40784, -2093.84546, 12.97720,   0.00000, 0.00000, 0.00000);
		T47 = CreateDynamicObject(2190, 1756.16321, -2094.66846, 14.58550,   0.00000, 0.00000, 160.00000);
		T57 = CreateDynamicObject(1788, 1757.77637, -2094.57056, 14.23650,   0.00000, 0.00000, 0.00000);
		T67 = CreateDynamicObject(2028, 1756.81677, -2094.56934, 14.25400,   0.00000, 0.00000, 0.00000);
		T77 = CreateDynamicObject(1790, 1757.29041, -2094.61108, 13.80020,   0.00000, 0.00000, 0.00000);
		Forzada7 = 0;
	}
	else
	{
		Forzada7 = 0;
	}
}

public CargarCasa9()
{
	if(!IsValidDynamicObject(T19) && !IsValidDynamicObject(T29) && !IsValidDynamicObject(T39) && !IsValidDynamicObject(T49) && !IsValidDynamicObject(T59) && !IsValidDynamicObject(T69) && !IsValidDynamicObject(T79))
	{
		T19 = CreateDynamicObject(1429, 1841.54749, 768.94519, 12.49500,   0.00000, 0.00000, 0.00000);
		T29 = CreateDynamicObject(1518, 1842.49048, 768.88428, 12.51880,   0.00000, 0.00000, 0.00000);
		T39 = CreateDynamicObject(2912, 1843.43506, 768.10840, 10.54610,   0.00000, 0.00000, 0.00000);
		T49 = CreateDynamicObject(2190, 1843.46643, 769.13379, 12.23620,   0.00000, 0.00000, 0.00000);
		T59 = CreateDynamicObject(1788, 1842.00537, 768.90112, 11.88750,   0.00000, 0.00000, 0.00000);
		T69 = CreateDynamicObject(2028, 1843.04565, 769.07501, 11.90490,   0.00000, 0.00000, 0.00000);
		T79 = CreateDynamicObject(1790, 1842.38196, 769.15088, 11.42320,   0.00000, 0.00000, 0.00000);
		Forzada9 = 0;
	}
	else
	{
		Forzada9 = 0;
	}
}

public CargarCasa11()
{
	if(!IsValidDynamicObject(T111) && !IsValidDynamicObject(T211) && !IsValidDynamicObject(T311) && !IsValidDynamicObject(T411) && !IsValidDynamicObject(T511) && !IsValidDynamicObject(T611) && !IsValidDynamicObject(T711))
	{
		T111 = CreateDynamicObject(1429, 1355.97156, 2613.77515, 12.45300,   0.00000, 0.00000, 0.00000);
		T211 = CreateDynamicObject(1518, 1356.83423, 2613.72314, 12.47980,   0.00000, 0.00000, 0.00000);
		T311 = CreateDynamicObject(2912, 1354.72119, 2613.42578, 11.02990,   0.00000, 0.00000, 0.00000);
		T411 = CreateDynamicObject(2190, 1357.78296, 2613.98975, 12.19500,   0.00000, 0.00000, 0.00000);
		T511 = CreateDynamicObject(1788, 1356.28943, 2613.73511, 11.84600,   0.00000, 0.00000, 0.00000);
		T611 = CreateDynamicObject(2028, 1357.32434, 2613.74854, 11.86400,   0.00000, 0.00000, 0.00000);
		T711 = CreateDynamicObject(1790, 1356.62915, 2613.61646, 11.40970,   0.00000, 0.00000, 0.00000);
		Forzada11 = 0;
	}
	else
	{
		Forzada11 = 0;
	}
}

public CargarCasa12()
{
	if(!IsValidDynamicObject(T112) && !IsValidDynamicObject(T212) && !IsValidDynamicObject(T312) && !IsValidDynamicObject(T412) && !IsValidDynamicObject(T512) && !IsValidDynamicObject(T612) && !IsValidDynamicObject(T712))
	{
		T112 = CreateDynamicObject(1429, 1678.29834, 2613.74878, 12.45260,   0.00000, 0.00000, 0.00000);
		T212 = CreateDynamicObject(1518, 1679.14563, 2613.73535, 12.48270,   0.00000, 0.00000, 0.00000);
		T312 = CreateDynamicObject(2912, 1677.09839, 2613.43970, 11.03870,   0.00000, 0.00000, 0.00000);
		T412 = CreateDynamicObject(2190, 1680.08850, 2613.91479, 12.19470,   0.00000, 0.00000, 0.00000);
		T512 = CreateDynamicObject(1788, 1678.56201, 2613.76880, 11.84410,   0.00000, 0.00000, 0.00000);
		T612 = CreateDynamicObject(2028, 1679.57751, 2613.75708, 11.86450,   0.00000, 0.00000, 0.00000);
		T712 = CreateDynamicObject(1790, 1678.98792, 2613.76904, 11.41040,   0.00000, 0.00000, 0.00000);
		Forzada12 = 0;
	}
	else
	{
		Forzada12 = 0;
	}
}

public CargarCasa8()
{
	if(!IsValidDynamicObject(T18) && !IsValidDynamicObject(T28) && !IsValidDynamicObject(T38) && !IsValidDynamicObject(T48) && !IsValidDynamicObject(T58) && !IsValidDynamicObject(T68) && !IsValidDynamicObject(T78) && !IsValidDynamicObject(T88))
	{
		T18 = CreateDynamicObject(1429, 2481.20239, -1987.11511, 14.57980,   0.00000, 0.00000, 7.80000);
		T28 = CreateDynamicObject(1518, 2482.81030, -1987.17395, 14.59980,   0.00000, 0.00000, -11.82000);
		T38 = CreateDynamicObject(2912, 2483.55371, -1988.90125, 12.62243,   0.00000, 0.00000, 0.00000);
		T48 = CreateDynamicObject(2190, 2482.27319, -1986.94861, 14.31840,   0.00000, 0.00000, 0.00000);
		T58 = CreateDynamicObject(1788, 2481.10767, -1987.15283, 13.52780,   0.00000, 0.00000, 0.00000);
		T68 = CreateDynamicObject(2028, 2481.93018, -1987.23987, 13.08109,   0.00000, 0.00000, 0.00000);
		T78 = CreateDynamicObject(1790, 2482.70459, -1987.20215, 13.52780,   0.00000, 0.00000, 0.00000);
		T88 = CreateDynamicObject(2226, 2481.90552, -1987.28687, 13.89582,   0.00000, 0.00000, 0.00000);
		Forzada8 = 0;
	}
	else
	{
		Forzada8 = 0;
	}
}

public CargarCasa10()
{
	if(!IsValidDynamicObject(T110) && !IsValidDynamicObject(T210) && !IsValidDynamicObject(T310) && !IsValidDynamicObject(T410) && !IsValidDynamicObject(T510) && !IsValidDynamicObject(T610) && !IsValidDynamicObject(T710) && !IsValidDynamicObject(T810))
	{
		T110 = CreateDynamicObject(1429, -1449.86682, 2645.77490, 56.87230,   0.00000, 0.00000, 8.10000);
		T210 = CreateDynamicObject(1518, -1448.15234, 2645.76807, 56.92000,   0.00000, 0.00000, -20.88000);
		T310 = CreateDynamicObject(2912, -1450.80640, 2642.91479, 55.52976,   0.00000, 0.00000, 0.00000);
		T410 = CreateDynamicObject(2190, -1447.24390, 2643.42358, 56.43425,   0.00000, 0.00000, -115.86000);
		T510 = CreateDynamicObject(1788, -1448.96399, 2645.68677, 56.28100,   0.00000, 0.00000, 0.00000);
		T610 = CreateDynamicObject(2028, -1449.89099, 2645.64771, 55.88598,   0.00000, 0.00000, 0.00000);
		T710 = CreateDynamicObject(1790, -1448.14539, 2645.64087, 55.85600,   0.00000, 0.00000, 0.00000);
		T810 = CreateDynamicObject(2226, -1449.01904, 2645.76733, 56.64311,   0.00000, 0.00000, 0.00000);
		Forzada10 = 0;
	}
	else
	{
		Forzada10 = 0;
	}
}

public BajarCargo(playerid)
{
	if(PlayerInfo[playerid][pCargos] == 1)
	{
		PlayerInfo[playerid][pCargos] = 0;
		SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pCargos]);
		CagoSeguro[playerid] = 0;
	}
}

public AdvertGolpes(playerid)
{
	if(GolpesAdv[playerid] == 1)
	{
		GolpesAdv[playerid] = 0;
	}
}

public Advert(playerid)
{
	if(Advertido[playerid] == 1)
	{
		Advertido[playerid] = 0;
	}
}

public Aviso(playerid)
{
	new string[200],caso = random(3),zone[MAX_ZONE_NAME];
	GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
	switch(caso)
	{
		case 0: SendClientMessage(playerid,-1,"Nadie ha avisado a la policía, puedes continuar robando.");
		case 1:
		{
			format(string, 200,"{3399FF}[Central de Policía] {FFFFFF}¡ATENCION! Informan de un robo a una propiedad en progreso en la ciudad de San Fierro (%s)",zone);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(playerid,-1,"Los vecinos han avisado a la policía, ¡date prisa!");
		}
		case 2: SendClientMessage(playerid,-1,"Nadie ha avisado a la policía, puedes continuar robando.");
	}
}

public Aviso2(playerid)
{
	new string[200],caso = random(3),zone[MAX_ZONE_NAME];
	GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
	switch(caso)
	{
		case 0: SendClientMessage(playerid,-1,"Nadie ha avisado a la policía, puedes continuar robando.");
		case 1:
		{
			format(string, 200,"{3399FF}[Central de Policía] {FFFFFF}¡ATENCION! Informan de un robo a una propiedad en progreso en la ciudad de Las Venturas (%s)",zone);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(playerid,-1,"Los vecinos han avisado a la policía, ¡date prisa!");
		}
		case 2: SendClientMessage(playerid,-1,"Nadie ha avisado a la policía, puedes continuar robando.");
	}
}

public Aviso3(playerid)
{
	new string[200],caso = random(3);
	switch(caso)
	{
		case 0:
		{
			SendClientMessage(playerid,-1,"Nadie ha avisado a la policía, puedes continuar robando.");
		}
		case 1:
		{
			format(string, 200,"{3399FF}[Central de Policía] {FFFFFF}¡ATENCION! Informan de un robo a una propiedad en progreso en la ciudad de Las Venturas (El Quebrados)");
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(playerid,-1,"Los vecinos han avisado a la policía, ¡date prisa!");
		}
		case 2:
		{
			SendClientMessage(playerid,-1,"Nadie ha avisado a la policía, puedes continuar robando.");
		}
	}
}

public Aviso4(playerid)
{
	new string[200],caso = random(3),zone[MAX_ZONE_NAME];
	GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
	switch(caso)
	{
		case 0:
		{
			SendClientMessage(playerid,-1,"Nadie ha avisado a la policía, puedes continuar robando.");
		}
		case 1:
		{
			format(string, 200,"{3399FF}[Central de Policía] {FFFFFF}¡ATENCION! Informan de un robo a una propiedad en progreso en la ciudad de Los Santos (%s)",zone);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(playerid,-1,"Los vecinos han avisado a la policía, ¡date prisa!");
		}
		case 2:
		{


			SendClientMessage(playerid,-1,"Nadie ha avisado a la policía, puedes continuar robando.");
		}
	}
}

public Reparando2(playerid)
{
	LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);

	if(PlayerInfo[playerid][pExpPiloto] < 49)
	{
		if(PlayerInfo[playerid][pVip] > 0)
		{
			new pago = random(3);
			switch(pago)
			{
				case 0:
				{
					PlayerInfo[playerid][pExpPiloto]++;
					SendClientMessage(playerid,0x2d8cecFF,"Habilidad de mecánico aumentada +1 punto.");
				}
				case 1:
				{
					PlayerInfo[playerid][pExpPiloto]++;
					SendClientMessage(playerid,0x2d8cecFF,"Habilidad de mecánico aumentada +1 punto.");
				}
				case 2:
				{
					PlayerInfo[playerid][pExpPiloto]+= 2;
					SendClientMessage(playerid,0x2d8cecFF,"Habilidad de mecánico aumentada +2 puntos.");
				}
			}
		}
		else
		{
			PlayerInfo[playerid][pExpPiloto]++;
			SendClientMessage(playerid,0x2d8cecFF,"Habilidad de mecánico aumentada +1 punto.");
		}
	}
	else if(PlayerInfo[playerid][pExpPiloto] >= 49)
	{
		PlayerInfo[playerid][pExpPiloto] = 0;
		PlayerInfo[playerid][pNivelPiloto]++;
		SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Aumentaste un nivel como mecánico.");
	}
}

public Reparando(vehicleid)
{
    vehaveriado[vehicleid] = 1;
	SetVehicleHealth(vehicleid, 1000.0);
}

public Taximetro(playerid)
{
	new veh = GetPlayerVehicleID(playerid);
	if(TAXI(veh) && GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
	{
		if(PlayerInfo[playerid][jDinero] >= Ficha[Taxista[playerid]])
		{
			new cuenta,string[256];
			cuenta = Monto[Taxista[playerid]]+Ficha[Taxista[playerid]];
			QuitarDinero(playerid, Ficha[Taxista[playerid]]);
			DarDinero(Taxista[playerid],Ficha[Taxista[playerid]]);
			Monto[Taxista[playerid]] = cuenta;
			format(string,256,"$%d",Monto[Taxista[playerid]]);
			TextDrawSetString(TAXIMET2[playerid], string);
			TextDrawSetString(TAXIMET2[Taxista[playerid]], string);
		}
		else
		{
			SendClientMessage(playerid,-1,"Te has quedado sin dinero para pagar el taxi");
			SendClientMessage(Taxista[playerid],-1,"Tu pasajero se ha quedado sin dinero");
			RemovePlayerFromVehicle(playerid);
			KillTimer(TM[playerid]);
		}
	}
	else
	{
		KillTimer(TM[playerid]);
	}
}

public PuntoB(playerid)
{
	switch(RecorridoBasu[playerid])
	{
	    case 1:
	    {
	    	switch(PBasura[playerid])
			{
			    case 2:
			    {
			     	SetPlayerCheckpoint(playerid,-346.30, -756.40, 29.59,2.0);
			     	PBasura[playerid]++;
			    }
			    case 3:
			    {
					SetPlayerCheckpoint(playerid,-427.09, -433.97, 16.63,2.0);
					PBasura[playerid]++;
			    }
			    case 4:
			    {
					SetPlayerCheckpoint(playerid,-916.01, -446.17, 28.50,2.0);
					PBasura[playerid]++;
			    }
			    case 5:
			    {
					SetPlayerCheckpoint(playerid,-1904.68, -567.53, 24.26,2.0);
					PBasura[playerid]++;
			    }
			    case 6:
			    {
					SetPlayerCheckpoint(playerid,-2245.15, -123.60, 34.83,2.0);
					PBasura[playerid]++;
			    }
			    case 7:
			    {
					SetPlayerCheckpoint(playerid,-2246.00, 84.55, 34.74,2.0);
					PBasura[playerid]++;
			    }
			    case 8:
			    {
					SetPlayerCheckpoint(playerid,-2167.08, 201.88, 34.72,2.0);
					PBasura[playerid]++;
			    }
			    case 9:
			    {
					SetPlayerCheckpoint(playerid,-2033.41, 313.70, 34.67,2.0);
					PBasura[playerid]++;
			    }
			    case 10:
			    {
					SetPlayerCheckpoint(playerid,-2013.50, 137.14, 27.09,2.0);
					PBasura[playerid]++;
			    }
			    case 11:
			    {
					SetPlayerCheckpoint(playerid,-1812.96, -123.07, 5.08,2.0);
					PBasura[playerid]++;
			    }
			    case 12:
			    {
					SetPlayerCheckpoint(playerid,-1824.87, -560.26, 15.88,2.0);
					PBasura[playerid]++;
			    }
			    case 13:
			    {
					SetPlayerCheckpoint(playerid,-120.47, -1160.25, 2.04,2.0);
					PBasura[playerid]++;
			    }
				case 14:
			    {
					SetPlayerCheckpoint(playerid,-142.9076,-1583.7258,8.4242,2.0);
			    }
		    }
		}
		case 2:
	    {
		 	switch(PBasura[playerid])
			{
			    case 1:
			    {
			    	SetPlayerCheckpoint(playerid,113.26455, -1603.06458, 10.01185,2.0);
			    }
			    case 2:
			    {
					SetPlayerCheckpoint(playerid,188.57368, -1741.20276, 3.91990,2.0);
			    }
			    case 3:
				{
					SetPlayerCheckpoint(playerid,339.93246, -1775.18286, 4.61736,2.0);
			    }
				case 4:
			    {
					SetPlayerCheckpoint(playerid,647.09186, -1679.55090, 14.29020,2.0);
			    }
			    case 5:
			    {
					SetPlayerCheckpoint(playerid,898.87762, -1579.15076, 13.15463,2.0);
			    }
			    case 6:
			    {
					SetPlayerCheckpoint(playerid, 925.01941, -1335.39722, 13.05267,2.0);
			    }
			    case 7:
			    {
					SetPlayerCheckpoint(playerid,781.98969, -1314.35901, 13.21057,2.0);
			    }
			    case 8:
			    {
					SetPlayerCheckpoint(playerid,641.44067, -1243.10571, 17.05386,2.0);
			    }
			    case 9:
			    {
					SetPlayerCheckpoint(playerid,448.74304, -1305.13831, 14.83350,2.0);
			    }
			    case 10:
			    {
					SetPlayerCheckpoint(playerid,209.86882, -1434.11890, 12.62387,2.0);
			    }
			    case 11:
			    {
					SetPlayerCheckpoint(playerid,-56.0625, -1575.6563, 1.5000,2.0);
	     		}
		    }
		}
	}
}

public Baul1(playerid)
{
	if(autos[playerid] > 0)
	{
		Baul[autos[playerid]] = 0;
		EspacioBaul[autos[playerid]] = PlayerInfo[playerid][vBaul];
		EspacioBaul2[autos[playerid]] = PlayerInfo[playerid][vBaul2];
		EspacioBaul3[autos[playerid]] = PlayerInfo[playerid][vBaul3];
		EspacioBaul4[autos[playerid]] = PlayerInfo[playerid][vBaul4];
		EspacioBaul5[autos[playerid]] = PlayerInfo[playerid][vBaul5];
		EspacioBaul6[autos[playerid]] = PlayerInfo[playerid][vBaul6];
		EspacioBaul7[autos[playerid]] = PlayerInfo[playerid][vBaul7];
		EspacioBaul8[autos[playerid]] = PlayerInfo[playerid][vBaul8];
		EspacioBaul9[autos[playerid]] = PlayerInfo[playerid][vBaul9];
		EspacioBaul10[autos[playerid]] = PlayerInfo[playerid][vBaul10];
	}
}

public Baul2(playerid)
{
	if(autos2[playerid] > 0)
	{
		Baul[autos2[playerid]] = 0;
		EspacioBaul[autos2[playerid]] = PlayerInfo[playerid][v2Baul];
		EspacioBaul2[autos2[playerid]] = PlayerInfo[playerid][v2Baul2];
		EspacioBaul3[autos2[playerid]] = PlayerInfo[playerid][v2Baul3];
		EspacioBaul4[autos2[playerid]] = PlayerInfo[playerid][v2Baul4];
		EspacioBaul5[autos2[playerid]] = PlayerInfo[playerid][v2Baul5];
		EspacioBaul6[autos2[playerid]] = PlayerInfo[playerid][v2Baul6];
		EspacioBaul7[autos2[playerid]] = PlayerInfo[playerid][v2Baul7];
		EspacioBaul8[autos2[playerid]] = PlayerInfo[playerid][v2Baul8];
		EspacioBaul9[autos2[playerid]] = PlayerInfo[playerid][v2Baul9];
		EspacioBaul10[autos2[playerid]] = PlayerInfo[playerid][v2Baul10];
	}
}

public Baul3(playerid)
{
	if(autos3[playerid] > 0)
	{
		Baul[autos3[playerid]] = 0;
		EspacioBaul[autos3[playerid]] = PlayerInfo[playerid][v3Baul];
		EspacioBaul2[autos3[playerid]] = PlayerInfo[playerid][v3Baul2];
		EspacioBaul3[autos3[playerid]] = PlayerInfo[playerid][v3Baul3];
		EspacioBaul4[autos3[playerid]] = PlayerInfo[playerid][v3Baul4];
		EspacioBaul5[autos3[playerid]] = PlayerInfo[playerid][v3Baul5];
		EspacioBaul6[autos3[playerid]] = PlayerInfo[playerid][v3Baul6];
		EspacioBaul7[autos3[playerid]] = PlayerInfo[playerid][v3Baul7];
		EspacioBaul8[autos3[playerid]] = PlayerInfo[playerid][v3Baul8];
		EspacioBaul9[autos3[playerid]] = PlayerInfo[playerid][v3Baul9];
		EspacioBaul10[autos3[playerid]] = PlayerInfo[playerid][v3Baul10];
	}
}

public Baul4(playerid)
{
	if(autos4[playerid] > 0)
	{
		Baul[autos4[playerid]] = 0;
		EspacioBaul[autos4[playerid]] = PlayerInfo[playerid][v4Baul];
		EspacioBaul2[autos4[playerid]] = PlayerInfo[playerid][v4Baul2];
		EspacioBaul3[autos4[playerid]] = PlayerInfo[playerid][v4Baul3];
		EspacioBaul4[autos4[playerid]] = PlayerInfo[playerid][v4Baul4];
		EspacioBaul5[autos4[playerid]] = PlayerInfo[playerid][v4Baul5];
		EspacioBaul6[autos4[playerid]] = PlayerInfo[playerid][v4Baul6];
		EspacioBaul7[autos4[playerid]] = PlayerInfo[playerid][v4Baul7];
		EspacioBaul8[autos4[playerid]] = PlayerInfo[playerid][v4Baul8];
		EspacioBaul9[autos4[playerid]] = PlayerInfo[playerid][v4Baul9];
		EspacioBaul10[autos4[playerid]] = PlayerInfo[playerid][v4Baul10];
	}
}

public LlamadaCops(playerid)
{
	new pName[32],string[200];
	GetPlayerName(playerid, pName, 32);
	SendClientMessage(playerid,-1,"{3399FF}[Central de policía]{FFFFFF} Romina: Hola, ya le transfiero con un oficial, aguarde un momento por favor.");
	format(string, 200,"{3399FF}[Central de policía]{FFFFFF} Romina: Hola, %s (%d) está llamando al 911.",pName, playerid);
	SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
	SendRadioMessage(1,-1,"Cualquier oficial disponible, por favor {DBED16}/atender{FFFFFF} la llamada",INVALID_PLAYER_ID);
}

public LlamadaGrua(playerid)
{
	new pName[32],string[500];
	GetPlayerName(playerid, pName, 32);
	SendClientMessage(playerid,-1,"{33CCFF}[Servicio de grúa]{FFFFFF} Angélica: Hola, ¿quieres utilizar nuestro servicio de grúas?.");
	format(string,sizeof(string),"{FFFFFF}El servicio de grúa sirve para recuperar el vehículo, en caso de que haya quedado\nen un lugar inaccesible.\nPor ejemplo: en el agua, dentro del estacionamiento de una propiedad, en una pileta, etc.\n\nNota: Los jugadores {40FF00}VIP{FFFFFF} tienen este servicio de manera gratuita.\n\n{FFEE00}¿Quieres utilizar este servicio?");
	ShowPlayerDialog(playerid, DIALOGO_GRUA, DIALOG_STYLE_MSGBOX, "Información sobre el servicio de grúa",string,"Si","No");
}

public ServicioGrua1(playerid)
{
	SendClientMessage(playerid,-1,"{33CCFF}[Servicio de grúa]{FFFFFF} Angélica: Perfecto, ¿a dónde quiere que llevemos su vehículo?.");
	new stringo[256];
	if(BOTE(autos[playerid]) || BOTE(autos2[playerid]) || BOTE(autos3[playerid]) || BOTE(autos4[playerid])) format(stringo, 256, "Ultimo lugar estacionado\nEstacionamiento municipal\nEstacionamiento marítimo.");
	else format(stringo, 256, "Ultimo lugar estacionado\nEstacionamiento municipal");
	ShowPlayerDialog(playerid, DIALOGO_GRUA3, DIALOG_STYLE_LIST,"¿Dónde quieres que enviemos tu vehículo?",stringo,"Aceptar","Cancelar");
}

public ServicioGrua2(playerid)
{
	if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
	{
		new vehiculo1[150],vehiculo2[150],vehiculo3[150],vehiculo4[150],mensaje[600];
		if(PlayerInfo[playerid][vModelo] > 0)
		{
			format(vehiculo1, sizeof(vehiculo1), "Vehículo: {F6E200}%s{FFFFFF}  | Patente: {00CCFF}%s{FFFFFF} | Costo del servicio: {F81414}$%d", NombreAuto[GetVehicleModel(autos[playerid])-400], PlayerInfo[playerid][vpatente],PlayerInfo[playerid][vPrecio]/100);
		}
		else { vehiculo1="Vacio"; }
		if(PlayerInfo[playerid][vModelo2] > 0)
		{
			format(vehiculo2, sizeof(vehiculo2), "Vehículo: {F6E200}%s{FFFFFF}  | Patente: {00CCFF}%s{FFFFFF} | Costo del servicio: {F81414}$%d", NombreAuto[GetVehicleModel(autos2[playerid])-400], PlayerInfo[playerid][v2patente],PlayerInfo[playerid][v2Precio]/100);
		}
		else { vehiculo2="Vacio"; }
		if(PlayerInfo[playerid][vModelo3] > 0)
		{
			format(vehiculo3, sizeof(vehiculo3), "Vehículo: {F6E200}%s{FFFFFF}  | Patente: {00CCFF}%s{FFFFFF} | Costo del servicio: {F81414}$%d", NombreAuto[GetVehicleModel(autos3[playerid])-400], PlayerInfo[playerid][v3patente],PlayerInfo[playerid][v3Precio]/100);
		}
		else { vehiculo3="Vacio"; }
		if(PlayerInfo[playerid][vModelo4] > 0)
		{
			format(vehiculo4, sizeof(vehiculo4), "Vehículo: {F6E200}%s{FFFFFF}  | Patente: {00CCFF}%s{FFFFFF} | Costo del servicio: {F81414}$%d", NombreAuto[GetVehicleModel(autos4[playerid])-400], PlayerInfo[playerid][v4patente],PlayerInfo[playerid][v4Precio]/100);
		}
		else { vehiculo4="Vacio"; }
		format(mensaje, sizeof(mensaje),     "%s", 			vehiculo1);
		format(mensaje, sizeof(mensaje), "%s\n%s",mensaje,	vehiculo2);
		format(mensaje, sizeof(mensaje), "%s\n%s",mensaje,	vehiculo3);
		format(mensaje, sizeof(mensaje), "%s\n%s",mensaje,	vehiculo4);
		ShowPlayerDialog(playerid, DIALOGO_GRUA4, DIALOG_STYLE_LIST, "Selecciona un vehiculo para remolcar", mensaje, "Aceptar","Cancelar");
		SendClientMessage(playerid,-1,"{33CCFF}[Servicio de grúa]{FFFFFF} Angélica: ¿Podría decirme la matrícula?");
	}
}

public CheckVIP(playerid)
{
	new day,month,year,Query[200],pName[50];
	GetPlayerName(playerid,pName,50);
	getdate(day,month,year);
	if(month >= 13)
	{
 		month = 1;
	}
 	if(day >= PlayerInfo[playerid][findia]  && month >= PlayerInfo[playerid][finmes] && year >= PlayerInfo[playerid][finano])
	{
		PlayerInfo[playerid][pVip] = 0;
		format(Query, sizeof(Query), "UPDATE `usuarios` SET `FinDia`='0',`FinMes`='0',`FinAno`='0' WHERE `Username`='%s'",pName);
		mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	if(day >= PlayerInfo[playerid][findialicencia]  && month >= PlayerInfo[playerid][finmeslicencia] && year >= PlayerInfo[playerid][finanolicencia])
	{
		PlayerInfo[playerid][pLicencia] = 0;
		format(Query, sizeof(Query), "UPDATE `usuarios` SET `FinMesL`='0',`FinMesL`='0',`FinAnoL`='0' WHERE `Username`='%s'",pName);
		mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
	}
}

public Recolectar(playerid)
{
	new item = random(10);
	switch(item)
	{
	    case 2:
	    {
	        SendClientMessage(playerid,-1,"Has encontrado {F00000}6g{FFFFFF} de {F00000}crack{FFFFFF}, y compartes {00FF00}3{FFFFFF} con tu compañero.");
	        SendClientMessage(Companero[playerid],-1,"Tu compañero ha encontrado {F00000}6g{FFFFFF} de {F00000}crack{FFFFFF}, y te ha entregado {00FF00}3{FFFFFF}.");
	        PlayerInfo[playerid][pCrack] += 3;
	        PlayerInfo[Companero[playerid]][pCrack] += 3;
	    }
	    case 5:
	    {
	        SendClientMessage(playerid,-1,"Has encontrado un {F00000}par de cuchillos{FFFFFF}, y le entregas uno con tu compañero.");
	        SendClientMessage(Companero[playerid],-1,"Tu compañero ha encontrado un {F00000}par de cuchillos{FFFFFF}, y te entregó uno.");
			DarArma(playerid,4);
			DarArma(Companero[playerid],4);
	    }
	    case 8:
	    {
	        SendClientMessage(playerid,-1,"Has encontrado {00FF00}$600{FFFFFF}, y le entregas {00FF00}$300{FFFFFF} a tu compañero.");
	        SendClientMessage(Companero[playerid],-1,"Tu compañero ha encontrado {00FF00}$600{FFFFFF}, y te entregó {00FF00}$300{FFFFFF}.");
			DarDinero(playerid,300);
			DarDinero(Companero[playerid],300);
	    }
	}
	SendClientMessage(playerid,-1,"Vuelve al camion para ir al siguiente lugar de recoleccion");
	recogiendo[playerid] = 0;
	PBasura[playerid]++;
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	switch(RecorridoBasu[playerid])
	{
	    case 1:
	    {
			switch(PBasura[playerid])
			{
			    case 1:
			    {
					SetPlayerCheckpoint(Companero[playerid],-427.09, -433.97, 16.63,5.0);
			    }
			    case 4:
			    {
					SetPlayerCheckpoint(Companero[playerid],-916.01, -446.17, 28.50,5.0);
			    }
			    case 5:
			    {
					SetPlayerCheckpoint(Companero[playerid],-1904.68, -567.53, 24.26,5.0);
			    }
			    case 6:
			    {
					SetPlayerCheckpoint(Companero[playerid],-2245.15, -123.60, 34.83,5.0);
			    }
			    case 7:
			    {
					SetPlayerCheckpoint(Companero[playerid],-2246.00, 84.55, 34.74,5.0);
			    }
			    case 8:
			    {
					SetPlayerCheckpoint(Companero[playerid],-2167.08, 201.88, 34.72,5.0);
			    }
			    case 9:
			    {
					SetPlayerCheckpoint(Companero[playerid],-2033.41, 313.70, 34.67,5.0);
			    }
			    case 10:
			    {
					SetPlayerCheckpoint(Companero[playerid],-2013.50, 137.14, 27.09,5.0);
			    }
			    case 11:
			    {
					SetPlayerCheckpoint(Companero[playerid],-1812.96, -123.07, 5.08,5.0);
			    }
			    case 12:
			    {
					SetPlayerCheckpoint(Companero[playerid],-1824.87, -560.26, 15.88,5.0);
			    }
			    case 13:
			    {
					SetPlayerCheckpoint(Companero[playerid],-120.47, -1160.25, 2.04,5.0);
		     	}
		 		case 14:
			    {
					SetPlayerCheckpoint(Companero[playerid],-142.9076,-1583.7258,8.4242,5.0);
		   	    }
			}
		}
		case 2:
		{
			switch(PBasura[playerid])
			{
			    case 2:
			    {
					SetPlayerCheckpoint(Companero[playerid],184.4504,-1737.3945,4.7637,5.0);
			    }
			    case 3:
			    {
					SetPlayerCheckpoint(Companero[playerid],342.3801,-1768.1283,5.6387,5.0);
			    }
			    case 4:
			    {
					SetPlayerCheckpoint(Companero[playerid],643.4162,-1679.9646,15.4936,5.0);
			    }
			    case 5:
			    {
					SetPlayerCheckpoint(Companero[playerid],896.4399,-1575.7798,13.9204,5.0);
			    }
			    case 6:
			    {
					SetPlayerCheckpoint(Companero[playerid],920.3666,-1339.1666,13.9063,5.0);
			    }
			    case 7:
			    {
					SetPlayerCheckpoint(Companero[playerid],785.8536,-1317.6593,13.9302,5.0);
			    }
			    case 8:
			    {
					SetPlayerCheckpoint(Companero[playerid],637.4422,-1247.6637,17.7399,5.0);
			    }
			    case 9:
			    {
					SetPlayerCheckpoint(Companero[playerid],454.3181,-1306.5016,15.6536,5.0);
			    }
			    case 10:
			    {
					SetPlayerCheckpoint(Companero[playerid],226.2434,-1443.0890,13.6835,5.0);
			    }
			    case 11:
			    {
					SetPlayerCheckpoint(Companero[playerid],-56.2857,-1594.8873,3.3326,5.0);
		     	}
		   	    case 12:
			    {
					SetPlayerCheckpoint(Companero[playerid],-142.9076,-1583.7258,8.4242,5.0);
		   	    }
			}
		}
	}
}

public DarGasolina(autoid, petroleo)
{
	if(VehicleFuel[autoid] < petroleo)
	{
		VehicleFuel[autoid]++;
	}
	else if(VehicleFuel[autoid] >= petroleo)
	{
		VehicleFuel[autoid] = petroleo;
		KillTimer(llenado[autoid]);
	}
}

public DarGasolinaBarra(playerid, petroleo)
{
	new autoid = GetPlayerVehicleID(playerid);
	if(IsPlayerInAnyVehicle(playerid))
	{
		if(VehicleFuel[autoid] < petroleo)
		{
			SetPlayerProgressBarValue(playerid,Progressbar[playerid][Combustible],VehicleFuel[autoid]);
			UpdatePlayerProgressBar(playerid,Progressbar[playerid][Combustible]);
		}
		else if(VehicleFuel[autoid] >= petroleo)
		{
			TogglePlayerControllable(playerid, 1);
			SetPVarInt(playerid, "IsFrozen", 1);
			KillTimer(llenadobarra[playerid]);
		}
	}
}

public Maneja(playerid)
{
	Manejando[playerid] = 0;
}

public TiempoCreacionArma(playerid)
{
	TiempoCreacion[playerid] = 0;
}

public Auto1(playerid)
{
	if(!IsPlayerConnected(playerid)) return 1;
	if(JugadorLogeado[playerid] == 0) return 1;
	autos[playerid] = CreateVehicle(PlayerInfo[playerid][vModelo],PlayerInfo[playerid][vX],PlayerInfo[playerid][vY],PlayerInfo[playerid][vZ],PlayerInfo[playerid][vA],PlayerInfo[playerid][vColor1],PlayerInfo[playerid][vColor2],-1);
	SetVehicleNumberPlate(autos[playerid], PlayerInfo[playerid][vpatente]);
	Cambiando[playerid] = 0;
	return 1;
}

public Auto2(playerid)
{
	if(!IsPlayerConnected(playerid)) return 1;
	if(JugadorLogeado[playerid] == 0) return 1;
	autos2[playerid] = CreateVehicle(PlayerInfo[playerid][vModelo2],PlayerInfo[playerid][v2X],PlayerInfo[playerid][v2Y],PlayerInfo[playerid][v2Z],PlayerInfo[playerid][v2A],PlayerInfo[playerid][v2Color1],PlayerInfo[playerid][v2Color2],-1);
	SetVehicleNumberPlate(autos2[playerid], PlayerInfo[playerid][v2patente]);
	Cambiando[playerid] = 0;
	return 1;
}

public Auto3(playerid)
{
	if(!IsPlayerConnected(playerid)) return 1;
	if(JugadorLogeado[playerid] == 0) return 1;
	autos3[playerid] = CreateVehicle(PlayerInfo[playerid][vModelo3],PlayerInfo[playerid][v3X],PlayerInfo[playerid][v3Y],PlayerInfo[playerid][v3Z],PlayerInfo[playerid][v3A],PlayerInfo[playerid][v3Color1],PlayerInfo[playerid][v3Color2],-1);
	SetVehicleNumberPlate(autos3[playerid], PlayerInfo[playerid][v3patente]);
	Cambiando[playerid] = 0;
	return 1;
}

public Auto4(playerid)
{
	if(!IsPlayerConnected(playerid)) return 1;
	if(JugadorLogeado[playerid] == 0) return 1;
	autos4[playerid] = CreateVehicle(PlayerInfo[playerid][vModelo4],PlayerInfo[playerid][v4X],PlayerInfo[playerid][v4Y],PlayerInfo[playerid][v4Z],PlayerInfo[playerid][v4A],PlayerInfo[playerid][v4Color1],PlayerInfo[playerid][v4Color2],-1);
	SetVehicleNumberPlate(autos4[playerid], PlayerInfo[playerid][v4patente]);
	Cambiando[playerid] = 0;
	return 1;
}

public DArmas(playerid)
{
	DarArmas(playerid);
	return 1;
}

public CheckAuto(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid))
	{
		EnAuto[playerid] = 0;
	}
}

public LlamadaAceptada(playerid)
{
	PlayerInfo[playerid][MobileSub] = INVALID_PLAYER_ID;
	EnLlamada[playerid] = 0;
	SendClientMessage(playerid, COLOR_DORADO, "Lo estan esperando, vaya con su camión en buenas condiciones.");
	SetPVarInt(playerid, "Transportista", 1);
	switch(Transportistas[playerid][Ruta])
	{
		case 1: MarcadoCamioneroGPS(playerid,586.4625,856.0408,-42.9917,7.0); //Cantera Hunter Quarry - Rocas a Hospital LS.
		case 2: MarcadoCamioneroGPS(playerid,1335.5570,286.8253,19.5615,7.0); //Sprunk - Montgomery a Fabrica LV.
		case 3: MarcadoCamioneroGPS(playerid,684.1342,896.0093,-39.7265,7.0); //Tubo de cantera a Obra SF
		case 4: MarcadoCamioneroGPS(playerid,-2003.7317,-2413.3181,30.6250,7.0); //Maderera Angel Pine
		case 5: MarcadoCamioneroGPS(playerid,1023.9153,2110.9341,10.8203,7.0); //Contenedor Whitewood States a Camionero
		case 6: MarcadoCamioneroGPS(playerid,-1741.5210,1425.7820,7.1875,7.0); //Galpon Explanade North
		case 7: MarcadoCamioneroGPS(playerid,305.6055,887.2976,20.4063,7.0); //Cantera Bone Country a Obra LV
		case 8: MarcadoCamioneroGPS(playerid,-2458.4258,2292.2588,4.9844,7.0); //Transformadores Bayside
		case 9: MarcadoCamioneroGPS(playerid,-2473.1599,2303.7029,4.9844,7.0); //Maquinas de casino 1
		case 10: MarcadoCamioneroGPS(playerid,-2473.1599,2303.7029,4.9844,7.0); //Maquinas de casino 2
		case 11: MarcadoCamioneroGPS(playerid,2880.5110,1751.4082,10.8203,7.0); //Vagon a LS desde LV
		case 12: MarcadoCamioneroGPS(playerid,208.3321,-28.7516,1.5781,7.0); //Bidones BlueBerry a Aereopuerto LV
	}
	tviaje[playerid] = 1;
	PlayerInfo[playerid][Mobile] = INVALID_PLAYER_ID;
	SendClientMessage(playerid,-1,"Cortaron la comunicación.");
	RemovePlayerAttachedObject(playerid, 1);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
	Mobile2[playerid] = 0;
}

public LlamadaCancelada(playerid)
{
	EnLlamada[playerid] = 0;
	SendClientMessage(playerid, COLOR_DORADO, "Le volveremos a llamar dentro de 2 horas. (5 minutos reales)");
	PlayerInfo[playerid][Mobile] = INVALID_PLAYER_ID;
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
	SendClientMessage(playerid,-1,"Cortaron la comunicación.");
	RemovePlayerAttachedObject(playerid, 1);
	Mobile2[playerid] = 0;
	PlayerInfo[playerid][MobileSub] = INVALID_PLAYER_ID;
}



public OfertaPerdida(playerid)
{
	if(ofertador[playerid] != INVALID_PLAYER_ID)
	{
		ofertador[playerid] = INVALID_PLAYER_ID;
		GuardaEspalda[playerid] = INVALID_PLAYER_ID;
	}
}

public TiempoVender(playerid)
{
	TiempoVenta[playerid] = 0;
}

public Autos(playerid)
{
	if(!IsPlayerConnected(playerid)) return 1;
	if(JugadorLogeado[playerid] != 1) return 1;
	if(PlayerInfo[playerid][vModelo] > 0)
	{
		autos[playerid] = CreateVehicle(PlayerInfo[playerid][vModelo],PlayerInfo[playerid][vX],PlayerInfo[playerid][vY],PlayerInfo[playerid][vZ],PlayerInfo[playerid][vA],PlayerInfo[playerid][vColor1],PlayerInfo[playerid][vColor2],-1);
		SetVehicleNumberPlate(autos[playerid], PlayerInfo[playerid][vpatente]);
		LinkVehicleToInterior(autos[playerid], PlayerInfo[playerid][vinterior]);
		SetVehicleVirtualWorld(autos[playerid], PlayerInfo[playerid][vvw]);
		SetVehicleHealth(autos[playerid], PlayerInfo[playerid][pVidaV]);
  		AddVehicleComponent(autos[playerid], PlayerInfo[playerid][vComponentes0]);
		AddVehicleComponent(autos[playerid], PlayerInfo[playerid][vComponentes1]);
		AddVehicleComponent(autos[playerid], PlayerInfo[playerid][vComponentes2]);
		AddVehicleComponent(autos[playerid], PlayerInfo[playerid][vComponentes3]);
		AddVehicleComponent(autos[playerid], PlayerInfo[playerid][vComponentes4]);
		AddVehicleComponent(autos[playerid], PlayerInfo[playerid][vComponentes5]);
		AddVehicleComponent(autos[playerid], PlayerInfo[playerid][vComponentes6]);
		AddVehicleComponent(autos[playerid], PlayerInfo[playerid][vComponentes7]);
		AddVehicleComponent(autos[playerid], PlayerInfo[playerid][vComponentes8]);
		AddVehicleComponent(autos[playerid], PlayerInfo[playerid][vComponentes9]);
		AddVehicleComponent(autos[playerid], PlayerInfo[playerid][vComponentes10]);
		AddVehicleComponent(autos[playerid], PlayerInfo[playerid][vComponentes11]);
		AddVehicleComponent(autos[playerid], PlayerInfo[playerid][vComponentes12]);
		AddVehicleComponent(autos[playerid], PlayerInfo[playerid][vComponentes13]);
		new modelo = PlayerInfo[playerid][vModelo];
		new gasomax = CombustibleCoche(modelo);
  		if(PlayerInfo[playerid][vGas] > gasomax)
  		{
  		    PlayerInfo[playerid][vGas] = gasomax;
  		    VehicleFuel[autos[playerid]] = PlayerInfo[playerid][vGas];
		}
		else VehicleFuel[autos[playerid]] = PlayerInfo[playerid][vGas];
		SetTimerEx("Baul1",2000,false,"d",playerid);
		UpdateVehicleDamageStatus(autos[playerid], PlayerInfo[playerid][VE1], PlayerInfo[playerid][VE2], PlayerInfo[playerid][VE3], PlayerInfo[playerid][VE4]);
		if(PlayerInfo[playerid][vPJ] >= 0) ChangeVehiclePaintjob(autos[playerid], PlayerInfo[playerid][vPJ]);
		if(PlayerInfo[playerid][vSeguro] == 1)
		{
			GetVehicleParamsEx(autos[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos[playerid], engine, lights, alarm, 1, bonnet, boot, objective);
			bloqueado[autos[playerid]] = 1;
		}
		else if(PlayerInfo[playerid][vSeguro] == 0)
		{
			bloqueado[autos[playerid]] = 0;
			GetVehicleParamsEx(autos[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos[playerid], engine, lights, alarm, 0, bonnet, boot, objective);
		}
		if(PlayerInfo[playerid][vAAlarma] == 1)
		{
			GetVehicleParamsEx(autos[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos[playerid], engine, lights, 1, doors, bonnet, boot, objective);
			alarma[autos[playerid]] = 1;
		}
		else if(PlayerInfo[playerid][vAAlarma] == 0)
		{
			alarma[autos[playerid]] = 0;
			GetVehicleParamsEx(autos[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos[playerid], engine, lights, 0, doors, bonnet, boot, objective);
		}
	}
	if(PlayerInfo[playerid][vModelo2] > 0)
	{
		autos2[playerid] = CreateVehicle(PlayerInfo[playerid][vModelo2],PlayerInfo[playerid][v2X],PlayerInfo[playerid][v2Y],PlayerInfo[playerid][v2Z],PlayerInfo[playerid][v2A],PlayerInfo[playerid][v2Color1],PlayerInfo[playerid][v2Color2],-1);
		SetVehicleNumberPlate(autos2[playerid], PlayerInfo[playerid][v2patente]);
		LinkVehicleToInterior(autos2[playerid], PlayerInfo[playerid][v2interior]);
		SetVehicleVirtualWorld(autos2[playerid], PlayerInfo[playerid][v2vw]);
		SetVehicleHealth(autos2[playerid], PlayerInfo[playerid][pVidaV2]);
		AddVehicleComponent(autos2[playerid], PlayerInfo[playerid][v2Componentes0]);
		AddVehicleComponent(autos2[playerid], PlayerInfo[playerid][v2Componentes1]);
		AddVehicleComponent(autos2[playerid], PlayerInfo[playerid][v2Componentes2]);
		AddVehicleComponent(autos2[playerid], PlayerInfo[playerid][v2Componentes3]);
		AddVehicleComponent(autos2[playerid], PlayerInfo[playerid][v2Componentes4]);
		AddVehicleComponent(autos2[playerid], PlayerInfo[playerid][v2Componentes5]);
		AddVehicleComponent(autos2[playerid], PlayerInfo[playerid][v2Componentes6]);
		AddVehicleComponent(autos2[playerid], PlayerInfo[playerid][v2Componentes7]);
		AddVehicleComponent(autos2[playerid], PlayerInfo[playerid][v2Componentes8]);
		AddVehicleComponent(autos2[playerid], PlayerInfo[playerid][v2Componentes9]);
		AddVehicleComponent(autos2[playerid], PlayerInfo[playerid][v2Componentes10]);
		AddVehicleComponent(autos2[playerid], PlayerInfo[playerid][v2Componentes11]);
		AddVehicleComponent(autos2[playerid], PlayerInfo[playerid][v2Componentes12]);
		AddVehicleComponent(autos2[playerid], PlayerInfo[playerid][v2Componentes13]);
		new modelo = PlayerInfo[playerid][vModelo2];
		new gasomax = CombustibleCoche(modelo);
  		if(PlayerInfo[playerid][v2Gas] > gasomax)
  		{
  		    PlayerInfo[playerid][v2Gas] = gasomax;
  		    VehicleFuel[autos2[playerid]] = PlayerInfo[playerid][v2Gas];
		}
		else VehicleFuel[autos2[playerid]] = PlayerInfo[playerid][v2Gas];
		SetTimerEx("Baul2",2000,false,"d",playerid);
		UpdateVehicleDamageStatus(autos2[playerid], PlayerInfo[playerid][V2E1], PlayerInfo[playerid][V2E2], PlayerInfo[playerid][V2E3], PlayerInfo[playerid][V2E4]);
		if(PlayerInfo[playerid][vPJ2] >= 0) ChangeVehiclePaintjob(autos2[playerid], PlayerInfo[playerid][vPJ2]);
		if(PlayerInfo[playerid][vSeguro2] == 1)
		{
			GetVehicleParamsEx(autos2[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos2[playerid], engine, lights, alarm, 1, bonnet, boot, objective);
			bloqueado[autos2[playerid]] = 1;
		}
		else if(PlayerInfo[playerid][vSeguro2] == 0)
		{
			bloqueado[autos2[playerid]] = 0;
			GetVehicleParamsEx(autos2[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos2[playerid], engine, lights, alarm, 0, bonnet, boot, objective);
		}
		if(PlayerInfo[playerid][vAAlarma2] == 1)
		{
			GetVehicleParamsEx(autos2[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos2[playerid], engine, lights, 1, doors, bonnet, boot, objective);
			alarma[autos2[playerid]] = 1;
		}
		else if(PlayerInfo[playerid][vAAlarma2] == 0)
		{
			alarma[autos2[playerid]] = 0;
			GetVehicleParamsEx(autos2[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos2[playerid], engine, lights, 0, doors, bonnet, boot, objective);
		}
	}
	if(PlayerInfo[playerid][vModelo3] > 0)
	{
		autos3[playerid] = CreateVehicle(PlayerInfo[playerid][vModelo3],PlayerInfo[playerid][v3X],PlayerInfo[playerid][v3Y],PlayerInfo[playerid][v3Z],PlayerInfo[playerid][v3A],PlayerInfo[playerid][v3Color1],PlayerInfo[playerid][v3Color2],-1);
		SetVehicleNumberPlate(autos3[playerid], PlayerInfo[playerid][v3patente]);
		LinkVehicleToInterior(autos3[playerid], PlayerInfo[playerid][v3interior]);
		SetVehicleVirtualWorld(autos3[playerid], PlayerInfo[playerid][v3vw]);
		SetVehicleHealth(autos3[playerid], PlayerInfo[playerid][pVidaV3]);
		AddVehicleComponent(autos3[playerid], PlayerInfo[playerid][v3Componentes0]);
		AddVehicleComponent(autos3[playerid], PlayerInfo[playerid][v3Componentes1]);
		AddVehicleComponent(autos3[playerid], PlayerInfo[playerid][v3Componentes2]);
		AddVehicleComponent(autos3[playerid], PlayerInfo[playerid][v3Componentes3]);
		AddVehicleComponent(autos3[playerid], PlayerInfo[playerid][v3Componentes4]);
		AddVehicleComponent(autos3[playerid], PlayerInfo[playerid][v3Componentes5]);
		AddVehicleComponent(autos3[playerid], PlayerInfo[playerid][v3Componentes6]);
		AddVehicleComponent(autos3[playerid], PlayerInfo[playerid][v3Componentes7]);
		AddVehicleComponent(autos3[playerid], PlayerInfo[playerid][v3Componentes8]);
		AddVehicleComponent(autos3[playerid], PlayerInfo[playerid][v3Componentes9]);
		AddVehicleComponent(autos3[playerid], PlayerInfo[playerid][v3Componentes10]);
		AddVehicleComponent(autos3[playerid], PlayerInfo[playerid][v3Componentes11]);
		AddVehicleComponent(autos3[playerid], PlayerInfo[playerid][v3Componentes12]);
		AddVehicleComponent(autos3[playerid], PlayerInfo[playerid][v3Componentes13]);
		new modelo = PlayerInfo[playerid][vModelo3];
		new gasomax = CombustibleCoche(modelo);
  		if(PlayerInfo[playerid][v3Gas] > gasomax)
  		{
  		    PlayerInfo[playerid][v3Gas] = gasomax;
  		    VehicleFuel[autos3[playerid]] = PlayerInfo[playerid][v3Gas];
		}
		else VehicleFuel[autos3[playerid]] = PlayerInfo[playerid][v3Gas];
		SetTimerEx("Baul3",2000,false,"d",playerid);
		UpdateVehicleDamageStatus(autos3[playerid], PlayerInfo[playerid][V3E1], PlayerInfo[playerid][V3E2], PlayerInfo[playerid][V3E3], PlayerInfo[playerid][V3E4]);
		if(PlayerInfo[playerid][vPJ3] >= 0) ChangeVehiclePaintjob(autos3[playerid], PlayerInfo[playerid][vPJ3]);
		if(PlayerInfo[playerid][vSeguro3] == 1)
		{
			GetVehicleParamsEx(autos3[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos3[playerid], engine, lights, alarm, 1, bonnet, boot, objective);
			bloqueado[autos3[playerid]] = 1;
		}
		else if(PlayerInfo[playerid][vSeguro3] == 0)
		{
			bloqueado[autos3[playerid]] = 0;
			GetVehicleParamsEx(autos3[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos3[playerid], engine, lights, alarm, 0, bonnet, boot, objective);
		}
		if(PlayerInfo[playerid][vAAlarma3] == 1)
		{
			GetVehicleParamsEx(autos3[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos3[playerid], engine, lights, 1, doors, bonnet, boot, objective);
			alarma[autos3[playerid]] = 1;
		}
		else if(PlayerInfo[playerid][vAAlarma3] == 0)
		{
			alarma[autos3[playerid]] = 0;
			GetVehicleParamsEx(autos3[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos3[playerid], engine, lights, 0, doors, bonnet, boot, objective);
		}
	}
	if(PlayerInfo[playerid][vModelo4] > 0)
	{
		autos4[playerid] = CreateVehicle(PlayerInfo[playerid][vModelo4],PlayerInfo[playerid][v4X],PlayerInfo[playerid][v4Y],PlayerInfo[playerid][v4Z],PlayerInfo[playerid][v4A],PlayerInfo[playerid][v4Color1],PlayerInfo[playerid][v4Color2],-1);
		SetVehicleNumberPlate(autos4[playerid], PlayerInfo[playerid][v4patente]);
		LinkVehicleToInterior(autos4[playerid], PlayerInfo[playerid][v4interior]);
		SetVehicleVirtualWorld(autos4[playerid], PlayerInfo[playerid][v4vw]);
		SetVehicleHealth(autos4[playerid], PlayerInfo[playerid][pVidaV4]);
		AddVehicleComponent(autos4[playerid], PlayerInfo[playerid][v4Componentes0]);
		AddVehicleComponent(autos4[playerid], PlayerInfo[playerid][v4Componentes1]);
		AddVehicleComponent(autos4[playerid], PlayerInfo[playerid][v4Componentes2]);
		AddVehicleComponent(autos4[playerid], PlayerInfo[playerid][v4Componentes3]);
		AddVehicleComponent(autos4[playerid], PlayerInfo[playerid][v4Componentes4]);
		AddVehicleComponent(autos4[playerid], PlayerInfo[playerid][v4Componentes5]);
		AddVehicleComponent(autos4[playerid], PlayerInfo[playerid][v4Componentes6]);
		AddVehicleComponent(autos4[playerid], PlayerInfo[playerid][v4Componentes7]);
		AddVehicleComponent(autos4[playerid], PlayerInfo[playerid][v4Componentes8]);
		AddVehicleComponent(autos4[playerid], PlayerInfo[playerid][v4Componentes9]);
		AddVehicleComponent(autos4[playerid], PlayerInfo[playerid][v4Componentes10]);
		AddVehicleComponent(autos4[playerid], PlayerInfo[playerid][v4Componentes11]);
		AddVehicleComponent(autos4[playerid], PlayerInfo[playerid][v4Componentes12]);
		AddVehicleComponent(autos4[playerid], PlayerInfo[playerid][v4Componentes13]);
		new modelo = PlayerInfo[playerid][vModelo4];
		new gasomax = CombustibleCoche(modelo);
  		if(PlayerInfo[playerid][v4Gas] > gasomax)
  		{
  		    PlayerInfo[playerid][v4Gas] = gasomax;
  		    VehicleFuel[autos4[playerid]] = PlayerInfo[playerid][v4Gas];
		}
		else VehicleFuel[autos4[playerid]] = PlayerInfo[playerid][v4Gas];
  		SetTimerEx("Baul4",2000,false,"d",playerid);
		UpdateVehicleDamageStatus(autos4[playerid], PlayerInfo[playerid][V4E1], PlayerInfo[playerid][V4E2], PlayerInfo[playerid][V4E3], PlayerInfo[playerid][V4E4]);
		if(PlayerInfo[playerid][vPJ4] >= 0)	ChangeVehiclePaintjob(autos4[playerid], PlayerInfo[playerid][vPJ4]);
		if(PlayerInfo[playerid][vSeguro4] == 1)
		{
			GetVehicleParamsEx(autos4[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos4[playerid], engine, lights, alarm, 1, bonnet, boot, objective);
			bloqueado[autos4[playerid]] = 1;
		}
		else if(PlayerInfo[playerid][vSeguro4] == 0)
		{
			bloqueado[autos4[playerid]] = 0;
			GetVehicleParamsEx(autos4[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos4[playerid], engine, lights, alarm, 0, bonnet, boot, objective);
		}
		if(PlayerInfo[playerid][vAAlarma4] == 1)
		{
			GetVehicleParamsEx(autos4[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos4[playerid], engine, lights, 1, doors, bonnet, boot, objective);
			alarma[autos[playerid]] = 1;
		}
		else if(PlayerInfo[playerid][vAAlarma4] == 0)
		{
			alarma[autos4[playerid]] = 0;
			GetVehicleParamsEx(autos4[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos4[playerid], engine, lights, 0, doors, bonnet, boot, objective);
		}
	}
	return 1;
}

public ConsumirMa(playerid)
{
	TiempoMarihuana[playerid] = 0;
}

public ConsumirCaramelosx(playerid)
{
	ConsumirCaramelos[playerid] = 0;
}

public ConsumirC(playerid)
{
	ConsumirCrack[playerid] = 0;
}

public ConsumirM(playerid)
{
	ConsumirMedicamento[playerid] = 0;
}

public Consumiendo(playerid)
{
	Consumible[playerid] = 0;
}

public RespawnearV(vehicleid)
{
	SetVehicleToRespawn(vehicleid);
}

public RespawnearVF(vehicleid)
{
 	SetVehicleToRespawn(vehicleid);
	SetVehicleHealth(vehicleid, 5000.0);
}

public RespawnearVF2(vehicleid)
{
 	SetVehicleToRespawn(vehicleid);
	SetVehicleHealth(vehicleid, 5000.0);
}

public TPV(vehicleid)
{
	SetVehiclePos(vehicleid, cpo[vehicleid][0],cpo[vehicleid][1],cpo[vehicleid][2]);
}

public TiempoBaulBar(playerid)
{
	if(VarBaul[playerid] <= 5) VarBaul[playerid]++;
	if(VarBaul[playerid] > 5)
	{
		VarBaul[playerid] = 0;
		KillTimer(BaulPB[playerid]);
	}
}

public Legal1(playerid)
{
	if(Cargando2[playerid] <= 11)
	{
		SetPlayerProgressBarValue(playerid,Progressbar[playerid][Camionero], Cargando2[playerid]);
		UpdatePlayerProgressBar(playerid,Progressbar[playerid][Camionero]);
		Cargando2[playerid]++;
		if(Cargando2[playerid] == 11)
		{
			if(CamionID[playerid] != INVALID_PLAYER_ID)
			{
				Cargando2[playerid] = 0;
				KillTimer(Cargas[playerid]);
				MarcadoCamioneroGPS(playerid,1318.1506,-873.8191,39.5781,7.0);
				SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado con éxito{FFFFFF}, se marcó en el mapa la ubicación de entrega.");
				CargandoC[playerid] = 0;
				TogglePlayerControllable(playerid, 1);
				SetPVarInt(playerid, "IsFrozen", 1);
				CamionCargado[CamionID[playerid]] = 1;
				HidePlayerProgressBar(playerid, Progressbar[playerid][Camionero]);
				Chofer[CamionID[playerid]] = playerid;
				Carga[playerid] = 1;
				ActualizarPuerta(GetPlayerVehicleID(playerid), 2);
				ActualizarPuerta(GetPlayerVehicleID(playerid), 3);
				GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, 0, objective);
				SetPVarInt(playerid, "Camionero", 1);
			}
		}
	}
}

public Legal2(playerid)
{
	if(Cargando2[playerid] <= 11)
	{
		SetPlayerProgressBarValue(playerid,Progressbar[playerid][Camionero], Cargando2[playerid]);
		UpdatePlayerProgressBar(playerid,Progressbar[playerid][Camionero]);
		Cargando2[playerid]++;
		if(Cargando2[playerid] == 11)
		{
			if(CamionID[playerid] != INVALID_PLAYER_ID)
			{
				Cargando2[playerid] = 0;
				KillTimer(Cargas[playerid]);
				MarcadoCamioneroGPS(playerid,1851.4362,-1862.8409,13.5781,7.0);
				SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado con éxito{FFFFFF}, se marcó en el mapa la ubicación de entrega.");
				CargandoC[playerid] = 0;
				TogglePlayerControllable(playerid, 1);
				SetPVarInt(playerid, "IsFrozen", 1);
				CamionCargado[CamionID[playerid]] = 1;
				HidePlayerProgressBar(playerid, Progressbar[playerid][Camionero]);
				Chofer[CamionID[playerid]] = playerid;
				Carga[playerid] = 1;
				ActualizarPuerta(GetPlayerVehicleID(playerid), 2);
				ActualizarPuerta(GetPlayerVehicleID(playerid), 3);
				GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, 0, objective);
				SetPVarInt(playerid, "Camionero", 1);
			}
		}
	}
}

public Legal3(playerid)
{
	if(Cargando2[playerid] <= 11)
	{
		SetPlayerProgressBarValue(playerid,Progressbar[playerid][Camionero], Cargando2[playerid]);
		UpdatePlayerProgressBar(playerid,Progressbar[playerid][Camionero]);
		Cargando2[playerid]++;
		if(Cargando2[playerid] == 11)
		{
			if(CamionID[playerid] != INVALID_PLAYER_ID)
			{
				Cargando2[playerid] = 0;
				KillTimer(Cargas[playerid]);
				MarcadoCamioneroGPS(playerid,454.2390,-1501.8813,30.8736,7.0);
				SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado con éxito{FFFFFF}, se marcó en el mapa la ubicación de entrega.");
				CargandoC[playerid] = 0;
				TogglePlayerControllable(playerid, 1);
				SetPVarInt(playerid, "IsFrozen", 1);
				CamionCargado[CamionID[playerid]] = 2;
				HidePlayerProgressBar(playerid, Progressbar[playerid][Camionero]);
				Chofer[CamionID[playerid]] = playerid;
				Carga[playerid] = 2;
				ActualizarPuerta(GetPlayerVehicleID(playerid), 2);
				ActualizarPuerta(GetPlayerVehicleID(playerid), 3);
				GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, 0, objective);
				SetPVarInt(playerid, "Camionero", 1);
			}
		}
	}
}

public Legal4(playerid)
{
	if(Cargando2[playerid] <= 11)
	{
		SetPlayerProgressBarValue(playerid,Progressbar[playerid][Camionero], Cargando2[playerid]);
		UpdatePlayerProgressBar(playerid,Progressbar[playerid][Camionero]);
		Cargando2[playerid]++;
		if(Cargando2[playerid] == 11)
		{
			if(CamionID[playerid] != INVALID_PLAYER_ID)
			{
				Cargando2[playerid] = 0;
				KillTimer(Cargas[playerid]);
				MarcadoCamioneroGPS(playerid,2112.9612,-1216.6085,23.8047,7.0);
				SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado con éxito{FFFFFF}, se marcó en el mapa la ubicación de entrega.");
				CargandoC[playerid] = 0;
				TogglePlayerControllable(playerid, 1);
				SetPVarInt(playerid, "IsFrozen", 1);
				CamionCargado[CamionID[playerid]] = 2;
				HidePlayerProgressBar(playerid, Progressbar[playerid][Camionero]);
				Chofer[CamionID[playerid]] = playerid;
				Carga[playerid] = 2;
				ActualizarPuerta(GetPlayerVehicleID(playerid), 2);
				ActualizarPuerta(GetPlayerVehicleID(playerid), 3);
				GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, 0, objective);
				SetPVarInt(playerid, "Camionero", 1);
			}
		}
	}
}

public Legal5(playerid)
{
	if(Cargando2[playerid] <= 11)
	{
		SetPlayerProgressBarValue(playerid,Progressbar[playerid][Camionero], Cargando2[playerid]);
		UpdatePlayerProgressBar(playerid,Progressbar[playerid][Camionero]);
		Cargando2[playerid]++;
		if(Cargando2[playerid] == 11)
		{
			if(CamionID[playerid] != INVALID_PLAYER_ID)
			{
				Cargando2[playerid] = 0;
				KillTimer(Cargas[playerid]);
				MarcadoCamioneroGPS(playerid,488.1939,-1277.0747,15.9604,7.0);
				SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado con éxito{FFFFFF}, se marcó en el mapa la ubicación de entrega.");
				CargandoC[playerid] = 0;
				TogglePlayerControllable(playerid, 1);
				SetPVarInt(playerid, "IsFrozen", 1);
				CamionCargado[CamionID[playerid]] = 2;
				HidePlayerProgressBar(playerid, Progressbar[playerid][Camionero]);
				Chofer[CamionID[playerid]] = playerid;
				Carga[playerid] = 2;
				ActualizarPuerta(GetPlayerVehicleID(playerid), 2);
				ActualizarPuerta(GetPlayerVehicleID(playerid), 3);
				GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, 0, objective);
				SetPVarInt(playerid, "Camionero", 1);
			}
		}
	}
}

public Ilegal1(playerid)
{
	if(Cargando2[playerid] <= 11)
	{
		SetPlayerProgressBarValue(playerid,Progressbar[playerid][Camionero], Cargando2[playerid]);
		UpdatePlayerProgressBar(playerid,Progressbar[playerid][Camionero]);
		Cargando2[playerid]++;
		if(Cargando2[playerid] == 11)
		{
			if(CamionID[playerid] != INVALID_PLAYER_ID)
			{
				Cargando2[playerid] = 0;
				KillTimer(Cargas[playerid]);
				MarcadoCamioneroGPS(playerid,2169.3521,-2275.2957,13.1360,7.0);
				SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado con éxito{FFFFFF}, se marcó en el mapa la ubicación de entrega.");
				CargandoC[playerid] = 0;
				TogglePlayerControllable(playerid, 1);
				SetPVarInt(playerid, "IsFrozen", 1);
				CamionCargado[CamionID[playerid]] = 3;
				HidePlayerProgressBar(playerid, Progressbar[playerid][Camionero]);
				Chofer[CamionID[playerid]] = playerid;
				Carga[playerid] = 3;
				ActualizarPuerta(GetPlayerVehicleID(playerid), 2);
				ActualizarPuerta(GetPlayerVehicleID(playerid), 3);
				GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, 0, objective);
				SetPVarInt(playerid, "Camionero", 1);
			}
		}
	}
}

public Ilegal2(playerid)
{
	if(Cargando2[playerid] <= 11)
	{
		SetPlayerProgressBarValue(playerid,Progressbar[playerid][Camionero], Cargando2[playerid]);
		UpdatePlayerProgressBar(playerid,Progressbar[playerid][Camionero]);
		Cargando2[playerid]++;
		if(Cargando2[playerid] == 11)
		{
			if(CamionID[playerid] != INVALID_PLAYER_ID)
			{
				Cargando2[playerid] = 0;
				KillTimer(Cargas[playerid]);
				MarcadoCamioneroGPS(playerid,2443.0161,-1426.0720,24.0000,7.0);
				SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado con éxito{FFFFFF}, se marcó en el mapa la ubicación de entrega.");
				CargandoC[playerid] = 0;
				TogglePlayerControllable(playerid, 1);
				SetPVarInt(playerid, "IsFrozen", 1);
				CamionCargado[CamionID[playerid]] = 3;
				HidePlayerProgressBar(playerid, Progressbar[playerid][Camionero]);
				Chofer[CamionID[playerid]] = playerid;
				Carga[playerid] = 3;
				ActualizarPuerta(GetPlayerVehicleID(playerid), 2);
				ActualizarPuerta(GetPlayerVehicleID(playerid), 3);
				GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, 0, objective);
				SetPVarInt(playerid, "Camionero", 1);
			}
		}
	}
}

public Ilegal3(playerid)
{
	if(Cargando2[playerid] <= 11)
	{
		SetPlayerProgressBarValue(playerid,Progressbar[playerid][Camionero], Cargando2[playerid]);
		UpdatePlayerProgressBar(playerid,Progressbar[playerid][Camionero]);
		Cargando2[playerid]++;
		if(Cargando2[playerid] == 11)
		{
			if(CamionID[playerid] != INVALID_PLAYER_ID)
			{
				Cargando2[playerid] = 0;
				KillTimer(Cargas[playerid]);
				MarcadoCamioneroGPS(playerid,2508.4253,-2114.6299,13.5469,7.0);
				SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado con éxito{FFFFFF}, se marcó en el mapa la ubicación de entrega.");
				CargandoC[playerid] = 0;
				TogglePlayerControllable(playerid, 1);
				SetPVarInt(playerid, "IsFrozen", 1);
				CamionCargado[CamionID[playerid]] = 3;
				HidePlayerProgressBar(playerid, Progressbar[playerid][Camionero]);
				Chofer[CamionID[playerid]] = playerid;
				Carga[playerid] = 3;
				ActualizarPuerta(GetPlayerVehicleID(playerid), 2);
				ActualizarPuerta(GetPlayerVehicleID(playerid), 3);
				GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, 0, objective);
				SetPVarInt(playerid, "Camionero", 1);
			}
		}
	}
}

public Ilegal4(playerid)
{
	if(Cargando2[playerid] <= 11)
	{
		SetPlayerProgressBarValue(playerid,Progressbar[playerid][Camionero], Cargando2[playerid]);
		UpdatePlayerProgressBar(playerid,Progressbar[playerid][Camionero]);
		Cargando2[playerid]++;
		if(Cargando2[playerid] == 11)
		{
			if(CamionID[playerid] != INVALID_PLAYER_ID)
			{
				Cargando2[playerid] = 0;
				KillTimer(Cargas[playerid]);
				MarcadoCamioneroGPS(playerid,2508.4253,-2114.6299,13.5469,7.0);
				SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado con éxito{FFFFFF}, se marcó en el mapa la ubicación de entrega.");
				CargandoC[playerid] = 0;
				TogglePlayerControllable(playerid, 1);
				SetPVarInt(playerid, "IsFrozen", 1);
				CamionCargado[CamionID[playerid]] = 4;
				HidePlayerProgressBar(playerid, Progressbar[playerid][Camionero]);
				Chofer[CamionID[playerid]] = playerid;
				Carga[playerid] = 4;
				ActualizarPuerta(GetPlayerVehicleID(playerid), 2);
				ActualizarPuerta(GetPlayerVehicleID(playerid), 3);
				GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, 0, objective);
				SetPVarInt(playerid, "Camionero", 1);
			}
		}
	}
}

public Ilegal5(playerid)
{
	if(Cargando2[playerid] <= 11)
	{
		SetPlayerProgressBarValue(playerid,Progressbar[playerid][Camionero], Cargando2[playerid]);
		UpdatePlayerProgressBar(playerid,Progressbar[playerid][Camionero]);
  		Cargando2[playerid]++;
		if(Cargando2[playerid] == 11)
		{
			if(CamionID[playerid] != INVALID_PLAYER_ID)
			{
				Cargando2[playerid] = 0;
				KillTimer(Cargas[playerid]);
				MarcadoCamioneroGPS(playerid,2166.8220,-2273.5928,13.3727,7.0);
				SendClientMessage(playerid,-1,"El camión fue {00CC00}cargado con éxito{FFFFFF}, se marcó en el mapa la ubicación de entrega.");
				CargandoC[playerid] = 0;
				TogglePlayerControllable(playerid, 1);
				SetPVarInt(playerid, "IsFrozen", 1);
				CamionCargado[CamionID[playerid]] = 4;
				HidePlayerProgressBar(playerid, Progressbar[playerid][Camionero]);
				Chofer[CamionID[playerid]] = playerid;
				Carga[playerid] = 4;
				ActualizarPuerta(GetPlayerVehicleID(playerid), 2);
				ActualizarPuerta(GetPlayerVehicleID(playerid), 3);
				GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, 0, objective);
				SetPVarInt(playerid, "Camionero", 1);
			}
		}
	}
}

public DescargandoCamion(playerid)
{
	if(CamionID[playerid] != INVALID_PLAYER_ID)
	{
		Descargando2[playerid] = 10;
		TogglePlayerControllable(playerid, 1);
		SetPVarInt(playerid, "IsFrozen", 1);
		SendClientMessage(playerid, -1, "{00CC00}Bien hecho{FFFFFF}, ahora regresa al depósito con el camión para recibir el pago.");
		MarcadoCamioneroGPS(playerid, -1699.9927,10.2943,3.5547, 7.0);
		ActualizarPuerta(GetPlayerVehicleID(playerid), 2);
		ActualizarPuerta(GetPlayerVehicleID(playerid), 3);
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, 0, objective);
	}
	return 1;
}

public RevisarLogroCosecha(playerid)
{
    new day,month,year,query[700];
    PlayerInfo[playerid][pCosecha] ++;
	if(PlayerInfo[playerid][pCosecha])
	{
		format(query, sizeof(query), "INSERT INTO achievements (Titulo,Descripcion,Nombre_Jugador,Etapa,Progreso,Completado,Tipo) VALUES ('Negocio redondo','Cosechar 10 plantas de marihuana.', '%s','%d','%d', '0','8')", PlayerName(playerid),Logros[playerid][Marihuana],PlayerInfo[playerid][pCosecha]);
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	else
	{
		format(query, sizeof(query), "UPDATE achievements SET `Progreso` = '%d' WHERE Nombre_Jugador = '%s' AND `Tipo` = '8'", PlayerInfo[playerid][pCosecha], PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	if(PlayerInfo[playerid][pNegocioRedondo] == 0 && PlayerInfo[playerid][pCosecha] == 10)
	{
	    getdate(day,month,year);
	    GameTextForPlayer(playerid, "~g~] ~w~LOGRO CONSEGUIDO ~g~]", 5000, 4);
    	SendClientMessage(playerid,0xA385CBFF,"Conseguiste un logro, puedes ver tus logros y los de otras personas en la web.");
    	if(PlayerInfo[playerid][pSonidos] == 0)
    	{
    		PlayAudioStreamForPlayer(playerid, "http://"AUDIO_LOGRO"");
		}
		MostrarLogro(playerid,"Negocio redondo","~n~_~n~_~n~Cosechar 10 plantas de~n~marihuana.~n~_","10");
		PlayerInfo[playerid][pNegocioRedondo] = 1;
		if(PlayerInfo[playerid][pFaccion] == 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{3399FF}[Radio]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Negocio redondo *{FFFFFF} (10 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		if(PlayerInfo[playerid][pFaccion] > 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{FF9900}[Banda]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Negocio redondo *{FFFFFF} (10 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		format(query, sizeof(query), "UPDATE `achievements` SET `Fecha`= CURRENT_TIMESTAMP(),`Completado`='1' WHERE Nombre_Jugador='%s' AND Tipo = '8'", PlayerName(playerid));
       	mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		SetTimerEx("QuitarLogro",6000,false,"d",playerid);
	}
}

public RevisarLogroAfinidad(playerid)
{
    new day,month,year,query[700];
	if(PlayerInfo[playerid][pLogroPutiClub] == 0 && PlayerInfo[playerid][pAfinidad1] > 89 && PlayerInfo[playerid][pAfinidad2] > 89 && PlayerInfo[playerid][pAfinidad3] > 89 && PlayerInfo[playerid][pAfinidad4] > 89 && PlayerInfo[playerid][pAfinidad5] > 89 && PlayerInfo[playerid][pAfinidad6] > 89)
	{
	    CerrarAviso(playerid);
	    getdate(day,month,year);
	    GameTextForPlayer(playerid, "~g~] ~w~LOGRO CONSEGUIDO ~g~]", 5000, 4);
    	SendClientMessage(playerid,0xA385CBFF,"Conseguiste un logro, puedes ver tus logros y los de otras personas en la web.");
    	if(PlayerInfo[playerid][pSonidos] == 0)
    	{
    		PlayAudioStreamForPlayer(playerid, "http://"AUDIO_LOGRO"");
		}
		MostrarLogro(playerid,"Ganador","~n~_~n~_~n~Consigue afinidad m˜xima con~n~todas las bailarinas del club de~n~Las Venturas.~n~_","20");
		PlayerInfo[playerid][pLogroPutiClub] = 1;
		if(PlayerInfo[playerid][pFaccion] == 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{3399FF}[Radio]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Ganador *{FFFFFF} (20 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		if(PlayerInfo[playerid][pFaccion] > 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{FF9900}[Banda]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Ganador *{FFFFFF} (20 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		format(query, sizeof(query), "INSERT INTO achievements (Titulo,Descripcion,Nombre_Jugador,Completado,Tipo) VALUES ('Ganador','Consigue afinidad máxima con todas las bailarinas del club de Las Venturas.', '%s', '1','17')", PlayerName(playerid));
       	mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		SetTimerEx("QuitarLogro",5000,false,"d",playerid);
	}
	return 1;
}

public RevisarLogroCerveza(playerid)
{
    new day,month,year,query[700];
	if(PlayerInfo[playerid][pFiestaCerveza] == 0)
	{
	    getdate(day,month,year);
	    GameTextForPlayer(playerid, "~g~] ~w~LOGRO CONSEGUIDO ~g~]", 5000, 4);
    	SendClientMessage(playerid,0xA385CBFF,"Conseguiste un logro, puedes ver tus logros y los de otras personas en la web.");
    	if(PlayerInfo[playerid][pSonidos] == 0)
    	{
    		PlayAudioStreamForPlayer(playerid, "http://"AUDIO_LOGRO"");
		}
		MostrarLogro(playerid,"Maestro cervecero","~n~_~n~_~n~Participar en la fiesta de la~n~cerveza.~n~_","10");
		PlayerInfo[playerid][pFiestaCerveza] = 1;
		if(PlayerInfo[playerid][pFaccion] == 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{3399FF}[Radio]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Maestro cervecero *{FFFFFF} (10 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		if(PlayerInfo[playerid][pFaccion] > 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{FF9900}[Banda]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Maestro cervecero *{FFFFFF} (10 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		format(query, sizeof(query), "INSERT INTO achievements (Titulo,Descripcion,PlayerName,Completado,Tipo) VALUES ('Maestro cervecero','Participar en la fiesta de la cerveza.','%s','1','14')", PlayerName(playerid));
       	mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		SetTimerEx("QuitarLogro",6000,false,"d",playerid);
	}
}

public RevisarLogroDescartable(playerid)
{
    new day,month,year,query[700];
	if(PlayerInfo[playerid][pHechizado] == 0)
    {
	    getdate(day,month,year);
     	GameTextForPlayer(playerid, "~g~] ~w~LOGRO CONSEGUIDO ~g~]", 5000, 4);
    	SendClientMessage(playerid,0xA385CBFF,"Conseguiste un logro, puedes ver tus logros y los de otras personas en la web.");
    	if(PlayerInfo[playerid][pSonidos] == 0)
    	{
    		PlayAudioStreamForPlayer(playerid, "http://"AUDIO_LOGRO"");
		}
		MostrarLogro(playerid,"Hechizado","~n~_~n~_~n~Consigue un sombrero~n~descartable durante Halloween.~n~_","10");
		PlayerInfo[playerid][pHechizado] = 1;
		if(PlayerInfo[playerid][pFaccion] == 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{3399FF}[Radio]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Hechizado *{FFFFFF} (10 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		if(PlayerInfo[playerid][pFaccion] > 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{FF9900}[Banda]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Hechizado *{FFFFFF} (10 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		format(query, sizeof(query), "INSERT INTO achievements (Titulo,Descripcion,Nombre_Jugador,Completado,Tipo) VALUES ('Hechizado','Consigue un sombrero descartable durante Halloween.','%s','1','16')", PlayerName(playerid));
       	mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		SetTimerEx("QuitarLogro",5000,false,"d",playerid);
	}
}

public RevisarLogroTrucoTrato(playerid)
{
    new day,month,year,query[700];
	if(PlayerInfo[playerid][pTrucoTrato] == 0)
	{
	    if(Halloween[playerid][P1Hora] > 0 && Halloween[playerid][P2Hora] > 0 && Halloween[playerid][P3Hora] > 0 && Halloween[playerid][P4Hora] > 0 && Halloween[playerid][P5Hora] > 0 && Halloween[playerid][P6Hora] > 0 && Halloween[playerid][P7Hora] > 0 && Halloween[playerid][P8Hora] > 0 && Halloween[playerid][P9Hora] > 0 && Halloween[playerid][P10Hora] > 0 && Halloween[playerid][P11Hora] > 0 && Halloween[playerid][P12Hora] > 0 && Halloween[playerid][P13Hora] > 0 && Halloween[playerid][P14Hora] > 0 && Halloween[playerid][P15Hora] > 0 && Halloween[playerid][P16Hora] > 0 && Halloween[playerid][P17Hora] > 0 && Halloween[playerid][P18Hora] > 0 && Halloween[playerid][P19Hora] > 0 && Halloween[playerid][P20Hora] > 0 && Halloween[playerid][P21Hora] > 0 && Halloween[playerid][P22Hora] > 0 && Halloween[playerid][P23Hora] > 0 && Halloween[playerid][P24Hora] > 0 && Halloween[playerid][P25Hora] > 0 && Halloween[playerid][P26Hora] > 0 && Halloween[playerid][P27Hora] > 0 && Halloween[playerid][P28Hora] > 0 && Halloween[playerid][P29Hora] > 0 && Halloween[playerid][P30Hora] > 0 && Halloween[playerid][P31Hora] > 0 && Halloween[playerid][P32Hora] > 0)
		{
	        getdate(day,month,year);
		    GameTextForPlayer(playerid, "~g~] ~w~LOGRO CONSEGUIDO ~g~]", 5000, 4);
	    	SendClientMessage(playerid,0xA385CBFF,"Conseguiste un logro, puedes ver tus logros y los de otras personas en la web.");
	    	if(PlayerInfo[playerid][pSonidos] == 0)
	    	{
	    		PlayAudioStreamForPlayer(playerid, "http://"AUDIO_LOGRO"");
			}
			MostrarLogro(playerid,"Truco o trato","~n~_~n~_~n~Consigue dulces de todos los~n~puestos de Haloween.~n~_","10");
			PlayerInfo[playerid][pTrucoTrato] = 1;
			if(PlayerInfo[playerid][pFaccion] == 1)
			{
				new logro[350];
				format(logro,sizeof(logro),"{3399FF}[Radio]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Truco o trato *{FFFFFF} (10 puntos).",PlayerName(playerid));
				foreach(Player, u)
				if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
				SendClientMessage(u,-1,logro);
			}
			if(PlayerInfo[playerid][pFaccion] > 1)
			{
				new logro[350];
				format(logro,sizeof(logro),"{FF9900}[Banda]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Truco o trato *{FFFFFF} (10 puntos).",PlayerName(playerid));
				foreach(Player, u)
				if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
				SendClientMessage(u,-1,logro);
			}
			format(query, sizeof(query), "INSERT INTO achievements (Titulo,Descripcion,Nombre_Jugador,Completado,Tipo) VALUES ('Truco o trato','Consigue dulces de todos los puestos de Haloween','%s','1','15')", PlayerName(playerid));
	       	mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
			SetTimerEx("QuitarLogro",6000,false,"d",playerid);
		}
	}
}

public RevisarLogroPorro(playerid)
{
    new day,month,year,query[700];
    PlayerInfo[playerid][pPorros]++;
    if(PlayerInfo[playerid][pPorros] == 0)
	{
		format(query, sizeof(query), "INSERT INTO achievements (Titulo,Descripcion,Nombre_Jugador,Etapa,Progreso,Completado,Tipo) VALUES ('Marihuanero','Fuma porros', '%s','%d','%d', '0','6')", PlayerName(playerid),Logros[playerid][Porros],PlayerInfo[playerid][pPorros]);
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	else
	{
		format(query, sizeof(query), "UPDATE achievements SET `Progreso` = '%d' WHERE Nombre_Jugador = '%s' AND `Tipo` = '6'", PlayerInfo[playerid][pPorros], PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	if(PlayerInfo[playerid][pMarihuanero] == 0 && PlayerInfo[playerid][pPorros] == 30)
	{
	    getdate(day,month,year);
	    GameTextForPlayer(playerid, "~g~] ~w~LOGRO CONSEGUIDO ~g~]", 5000, 4);
    	SendClientMessage(playerid,0xA385CBFF,"Conseguiste un logro, puedes ver tus logros y los de otras personas en la web.");
    	if(PlayerInfo[playerid][pSonidos] == 0)
    	{
    		PlayAudioStreamForPlayer(playerid, "http://"AUDIO_LOGRO"");
		}
    	MostrarLogro(playerid,"Marihuanero","~n~_~n~_~n~Fuma 70 porros~n~_","10");
		if(PlayerInfo[playerid][pFaccion] == 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{3399FF}[Radio]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Marihuanero *{FFFFFF} (30 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		if(PlayerInfo[playerid][pFaccion] > 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{FF9900}[Banda]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Marihuanero *{FFFFFF} (30 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		format(query, sizeof(query), "UPDATE `achievements` SET `Fecha`=CURRENT_TIMESTAMP(),`Completado`='1' WHERE Nombre_Jugador = '%s' AND Slot '6'", PlayerName(playerid));
       	mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		SetTimerEx("QuitarLogro",6000,false,"d",playerid);
	}
}

public RevisarLogroCarrera(playerid)
{
    new day,month,year,query[700];
    PlayerInfo[playerid][pGanadas] ++;
	if(PlayerInfo[playerid][pGanadas] == 0)
	{
		format(query, sizeof(query), "INSERT INTO achievements (Titulo,Descripcion,Nombre_Jugador,Etapa,Progreso,Completado,Tipo) VALUES ('Piloto experto','Gana carreras en el estadio de Las Venturas.', '%s','%d','%d', '0','7')", PlayerName(playerid),Logros[playerid][Carreras],PlayerInfo[playerid][pGanadas]);
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	else
	{
		format(query, sizeof(query), "UPDATE achievements SET `Progreso` = '%d' WHERE Nombre_Jugador = '%s' AND `Tipo` = '7'", PlayerInfo[playerid][pGanadas], PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	if(PlayerInfo[playerid][pPilotoExperto] == 0 && PlayerInfo[playerid][pGanadas] == 10)
	{
	    getdate(day,month,year);
	    GameTextForPlayer(playerid, "~g~] ~w~LOGRO CONSEGUIDO ~g~]", 5000, 4);
    	SendClientMessage(playerid,0xA385CBFF,"Conseguiste un logro, puedes ver tus logros y los de otras personas en la web.");
    	if(PlayerInfo[playerid][pSonidos] == 0)
    	{
    		PlayAudioStreamForPlayer(playerid, "http://"AUDIO_LOGRO"");
		}
		MostrarLogro(playerid,"Piloto experto","~n~_~n~_~n~Gana 10 carreras en el estadio~n~de Las Venturas.~n~_","30");

		PlayerInfo[playerid][pPilotoExperto] = 1;
		if(PlayerInfo[playerid][pFaccion] == 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{3399FF}[Radio]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Piloto experto *{FFFFFF} (30 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		if(PlayerInfo[playerid][pFaccion] > 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{FF9900}[Banda]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Piloto experto *{FFFFFF} (30 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		format(query, sizeof(query), "UPDATE `achievements` SET `Fecha`= CURRENT_TIMESTAMP(),`Completado`='1' WHERE Nombre_Jugador ='%s' AND Tipo = '7'", PlayerName(playerid));
       	mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		SetTimerEx("QuitarLogro",6000,false,"d",playerid);
	}
}

public RevisarLogroMedico(playerid)
{
    new day,month,year,query[700];
    PlayerInfo[playerid][pReanimados]++;
	if(PlayerInfo[playerid][pReanimados] == 0)
	{
		format(query, sizeof(query), "INSERT INTO achievements (Titulo,Descripcion,Nombre_Jugador,Etapa,Progreso,Completado,Tipo) VALUES ('Medico profesional','Salva la vida de personas.', '%s','%d','%d', '0','13')", PlayerName(playerid),Logros[playerid][Salvados],PlayerInfo[playerid][pReanimados]);
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	else
	{
		format(query, sizeof(query), "UPDATE achievements SET `Progreso` = '%d' WHERE Nombre_Jugador = '%s' AND `Tipo` = '13'", PlayerInfo[playerid][pReanimados], PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	if(PlayerInfo[playerid][pMedico] == 0 && PlayerInfo[playerid][pReanimados] == 15)
	{
	    getdate(day,month,year);
     	GameTextForPlayer(playerid, "~g~] ~w~LOGRO CONSEGUIDO ~g~]", 5000, 4);
    	SendClientMessage(playerid,0xA385CBFF,"Conseguiste un logro, puedes ver tus logros y los de otras personas en la web.");
    	if(PlayerInfo[playerid][pSonidos] == 0)
    	{
    		PlayAudioStreamForPlayer(playerid, "http://"AUDIO_LOGRO"");
		}
		MostrarLogro(playerid,"Medico profesional","~n~_~n~_~n~Salva la vida de 15 personas.~n~_","10");

		PlayerInfo[playerid][pMedico] = 1;
		if(PlayerInfo[playerid][pFaccion] == 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{3399FF}[Radio]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Médico profesional *{FFFFFF} (30 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		if(PlayerInfo[playerid][pFaccion] > 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{FF9900}[Banda]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Médico profesional *{FFFFFF} (30 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		format(query, sizeof(query), "UPDATE `achievements` SET `Fecha`= CURRENT_TIMESTAMP(),`Completado`='1' WHERE Nombre_Jugador ='%s' AND Tipo = '13'", PlayerName(playerid));
       	mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		SetTimerEx("QuitarLogro",6000,false,"d",playerid);
	}
}

public RevisarLogroRemedio(playerid)
{
    new day,month,year,query[700];
    PlayerInfo[playerid][pRemedios] ++;
    if(PlayerInfo[playerid][pRemedios] == 0)
	{
		format(query, sizeof(query), "INSERT INTO achievements (Titulo,Descripcion,Nombre_Jugador,Etapa,Progreso,Completado,Tipo) VALUES ('Automedicado','Consume medicamentos.', '%s','%d','%d', '0','3')", PlayerName(playerid),Logros[playerid][Medicamentos],PlayerInfo[playerid][pRemedios]);
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	else
	{
		format(query, sizeof(query), "UPDATE achievements SET `Progreso` = '%d' WHERE Nombre_Jugador = '%s' AND `Tipo` = '3'", PlayerInfo[playerid][pRemedios], PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	if(PlayerInfo[playerid][pAutomedicado] == 0 && PlayerInfo[playerid][pRemedios] == 50)
	{
	    getdate(day,month,year);
    	GameTextForPlayer(playerid, "~g~] ~w~LOGRO CONSEGUIDO ~g~]", 5000, 4);
    	SendClientMessage(playerid,0xA385CBFF,"Conseguiste un logro, puedes ver tus logros y los de otras personas en la web.");
    	if(PlayerInfo[playerid][pSonidos] == 0)
    	{
    		PlayAudioStreamForPlayer(playerid, "http://"AUDIO_LOGRO"");
		}
		MostrarLogro(playerid,"Automedicado","~n~_~n~_~n~Consume 50 medicamentos~n~_","10");
		PlayerInfo[playerid][pAutomedicado] = 1;
		if(PlayerInfo[playerid][pFaccion] == 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{3399FF}[Radio]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Automedicado *{FFFFFF} (20 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		if(PlayerInfo[playerid][pFaccion] > 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{FF9900}[Banda]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Automedicado *{FFFFFF} (20 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		format(query, sizeof(query), "UPDATE `achievements` SET `Fecha`= CURRENT_TIMESTAMP(),`Completado`='1' WHERE Nombre_Jugador ='%s' AND Tipo = '3'", PlayerName(playerid));
       	mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		SetTimerEx("QuitarLogro",6000,false,"d",playerid);
	}
}

public RevisarLogroCrack(playerid)
{
    new day,month,year,query[700];
    PlayerInfo[playerid][pCracks] ++;
    if(PlayerInfo[playerid][pCracks] == 0)
	{
		format(query, sizeof(query), "INSERT INTO achievements (Titulo,Descripcion,Nombre_Jugador,Etapa,Progreso,Completado,Tipo) VALUES ('Adicto al crack','Consume gramos de Crack.', '%s','%d','%d', '0','4')", PlayerName(playerid),Logros[playerid][Crack],PlayerInfo[playerid][pCracks]);
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	else
	{
		format(query, sizeof(query), "UPDATE achievements SET `Progreso` = '%d' WHERE Nombre_Jugador = '%s' AND `Tipo` = '4'", PlayerInfo[playerid][pCracks], PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	if(PlayerInfo[playerid][pAdicto] == 0 && PlayerInfo[playerid][pCracks] == 50)
	{
	    getdate(day,month,year);
	    GameTextForPlayer(playerid, "~g~] ~w~LOGRO CONSEGUIDO ~g~]", 5000, 4);
    	SendClientMessage(playerid,0xA385CBFF,"Conseguiste un logro, puedes ver tus logros y los de otras personas en la web.");
    	if(PlayerInfo[playerid][pSonidos] == 0)
    	{
    		PlayAudioStreamForPlayer(playerid, "http://"AUDIO_LOGRO"");
		}
		MostrarLogro(playerid,"Adicto al crack","~n~_~n~_~n~Consume 50 gramos de Crack.~n~_","10");
		PlayerInfo[playerid][pAdicto] = 1;
		if(PlayerInfo[playerid][pFaccion] == 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{3399FF}[Radio]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Adicto al crack *{FFFFFF} (20 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		if(PlayerInfo[playerid][pFaccion] > 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{FF9900}[Banda]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Adicto al crack *{FFFFFF} (20 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		format(query, sizeof(query), "UPDATE `achievements` SET `Fecha`= CURRENT_TIMESTAMP(),`Completado`='1' WHERE Nombre_Jugador ='%s' AND Tipo = '4'", PlayerName(playerid));
       	mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		SetTimerEx("QuitarLogro",6000,false,"d",playerid);
	}
}

public RevisarLogroLadron(playerid)
{
    new day,month,year,query[700];
    PlayerInfo[playerid][pForzadas] ++;
    if(PlayerInfo[playerid][pForzadas] == 0)
	{
		format(query, sizeof(query), "INSERT INTO achievements (Titulo,Descripcion,Nombre_Jugador,Etapa,Progreso,Completado,Tipo) VALUES ('Cerrajero nocturno','Fuerza la cerradura de casas', '%s','%d','%d', '0','12')", PlayerName(playerid),Logros[playerid][Cerraduras],PlayerInfo[playerid][pForzadas]);
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	else
	{
		format(query, sizeof(query), "UPDATE achievements SET `Progreso` = '%d' WHERE Nombre_Jugador = '%s' AND `Tipo` = '12'", PlayerInfo[playerid][pForzadas], PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	if(PlayerInfo[playerid][pCerrajero] == 0 && PlayerInfo[playerid][pForzadas] == 10)
	{
	    getdate(day,month,year);
	    GameTextForPlayer(playerid, "~g~] ~w~LOGRO CONSEGUIDO ~g~]", 5000, 4);
    	SendClientMessage(playerid,0xA385CBFF,"Conseguiste un logro, puedes ver tus logros y los de otras personas en la web.");
    	if(PlayerInfo[playerid][pSonidos] == 0)
    	{
    		PlayAudioStreamForPlayer(playerid, "http://"AUDIO_LOGRO"");
		}
		MostrarLogro(playerid,"Cerrajero nocturno","~n~_~n~_~n~Fuerza la cerradura de 10~n~casas.~n~_","10");
		PlayerInfo[playerid][pCerrajero] = 1;
	 	if(PlayerInfo[playerid][pFaccion] == 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{3399FF}[Radio]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Cerrajero nocturno *{FFFFFF} (10 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		if(PlayerInfo[playerid][pFaccion] > 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{FF9900}[Banda]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Cerrajero nocturno *{FFFFFF} (10 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		format(query, sizeof(query), "UPDATE `achievements` SET `Fecha`= CURRENT_TIMESTAMP(),`Completado`='1' WHERE Nombre_Jugador ='%s' AND Tipo = '12'", PlayerName(playerid));
       	mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		SetTimerEx("QuitarLogro",6000,false,"d",playerid);
	}
}

public RevisarLogroAuto(playerid)
{
	if(PlayerInfo[playerid][pSobreRuedas] == 0)
	{
	    new day,month,year,query[700];
	    getdate(day,month,year);
	    GameTextForPlayer(playerid, "~g~] ~w~LOGRO CONSEGUIDO ~g~]", 5000, 4);
    	SendClientMessage(playerid,0xA385CBFF,"Conseguiste un logro, puedes ver tus logros y los de otras personas en la web.");
    	if(PlayerInfo[playerid][pSonidos] == 0)
    	{
    		PlayAudioStreamForPlayer(playerid, "http://"AUDIO_LOGRO"");
		}
		MostrarLogro(playerid,"Sobre ruedas","~n~_~n~_~n~Compra su primer vehiculo.~n~_","10");
		PlayerInfo[playerid][pSobreRuedas] = 1;
		if(PlayerInfo[playerid][pFaccion] == 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{3399FF}[Radio]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Sobre ruedas *{FFFFFF} (10 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])	SendClientMessage(u,-1,logro);
		}
		if(PlayerInfo[playerid][pFaccion] > 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{FF9900}[Banda]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Sobre ruedas *{FFFFFF} (10 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])	SendClientMessage(u,-1,logro);
		}
 		format(query, sizeof(query), "INSERT INTO `achievements` (Nombre_Jugador,Tipo,Etapa,Completado,Titulo,Descripcion,Fecha) VALUES ('%s','2','1','1','Sobre ruedas','Compra su primer vehiculo.',CURRENT_TIMESTAMP());", PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		SetTimerEx("QuitarLogro",6000,false,"d",playerid);
	}
}

public RevisarLogroNivel(playerid)
{
    DisableRemoteVehicleCollisions(playerid,0);
    new day,month,year,query[700];
    new newtext[20], newtext2[60],newtext3[10];
    getdate(day,month,year);
    GameTextForPlayer(playerid, "~g~] ~w~LOGRO CONSEGUIDO ~g~]", 5000, 4);
    SendClientMessage(playerid,0xA385CBFF,"Conseguiste un logro, puedes ver tus logros y los de otras personas en la web.");
    if(PlayerInfo[playerid][pSonidos] == 0)
    {
    	PlayAudioStreamForPlayer(playerid, "http://"AUDIO_LOGRO"");
	}
    format(newtext3, sizeof(newtext), "%d0", PlayerInfo[playerid][@Nivel]);
	format(newtext, sizeof(newtext), "Nivel %d", PlayerInfo[playerid][@Nivel]);
    format(newtext2, sizeof(newtext2), "~n~_~n~_~n~Alcanzar el nivel %d.~n~_", PlayerInfo[playerid][@Nivel]);
	MostrarLogro(playerid,newtext,newtext2,newtext3);
	if(PlayerInfo[playerid][pFaccion] == 1)
	{
		new logro[350];
		format(logro,sizeof(logro),"{3399FF}[Radio]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Alcanzar el nivel %d *{FFFFFF} (%d0 puntos).",PlayerName(playerid),PlayerInfo[playerid][@Nivel],PlayerInfo[playerid][@Nivel]);
		foreach(Player, u)
		if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
		SendClientMessage(u,-1,logro);
	}
 	if(PlayerInfo[playerid][pFaccion] > 1)
	{
		new logro[350];
		format(logro,sizeof(logro),"{FF9900}[Banda]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Alcanzar el nivel %d *{FFFFFF} (%d0 puntos).",PlayerName(playerid),PlayerInfo[playerid][@Nivel],PlayerInfo[playerid][@Nivel]);
		foreach(Player, u)
		if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
		SendClientMessage(u,-1,logro);
	}
	format(query, sizeof(query), "UPDATE `achievements` SET `Fecha`= CURRENT_TIMESTAMP(), `Titulo` = 'Nivel %d',`Descripcion` = 'Alcanza el nivel %d', `Valor` = '%d' WHERE Nombre_Jugador = '%s' AND Tipo = 1",PlayerInfo[playerid][@Nivel], PlayerInfo[playerid][@Nivel],PlayerInfo[playerid][@Nivel],PlayerName(playerid));
	mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

	format(query, sizeof(query), "UPDATE `"PREFIX_DB"members` SET `is_activated`='1' WHERE member_name='%s'", PlayerName(playerid));
	mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

	SetTimerEx("QuitarLogro",6000,false,"d",playerid);
}

public RevisarLogroPesca(playerid, peso, tortuga)
{
	if(PlayerInfo[playerid][pTortuga] == 0 && peso == 310 && tortuga == 1)
	{
	    new day,month,year,query[700];
	    getdate(day,month,year);
	    GameTextForPlayer(playerid, "~g~] ~w~LOGRO CONSEGUIDO ~g~]", 5000, 4);
    	SendClientMessage(playerid,0xA385CBFF,"Conseguiste un logro, puedes ver tus logros y los de otras personas en la web.");
    	if(PlayerInfo[playerid][pSonidos] == 0)
    	{
    		PlayAudioStreamForPlayer(playerid, "http://"AUDIO_LOGRO"");
		}
		MostrarLogro(playerid,"Tortuga mayor","~n~_~n~_~n~Pesca una tortuga de 310Kg en~n~el sur de Los Santos.~n~_","10");
		PlayerInfo[playerid][pTortuga] = 1;
		if(PlayerInfo[playerid][pFaccion] == 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{3399FF}[Radio]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Pesca mayor *{FFFFFF} (50 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		if(PlayerInfo[playerid][pFaccion] > 1)
		{
			new logro[350];
			format(logro,sizeof(logro),"{FF9900}[Banda]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Pesca mayor *{FFFFFF} (50 puntos).",PlayerName(playerid));
			foreach(Player, u)
			if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
			SendClientMessage(u,-1,logro);
		}
		format(query, sizeof(query), "INSERT INTO `achievements` (Nombre_Jugador,Tipo,Etapa,Completado,Titulo,Descripcion) VALUES ('%s','5','1','1','Tortuga mayor','Pesca una tortuga de 310Kg en el sur de Los Santos.');", PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		SetTimerEx("QuitarLogro",6000,false,"d",playerid);
	}
}

public RevisarLogroPropiedad(playerid, propiedad)
{
    new day,month,year,query[700];
    getdate(day,month,year);
	if(propiedad == 1)
	{
		if(PlayerInfo[playerid][pCasa] == 0)
		{
            GameTextForPlayer(playerid, "~g~] ~w~LOGRO CONSEGUIDO ~g~]", 5000, 4);
	    	SendClientMessage(playerid,0xA385CBFF,"Conseguiste un logro, puedes ver tus logros y los de otras personas en la web.");
	    	if(PlayerInfo[playerid][pSonidos] == 0)
	    	{
	    		PlayAudioStreamForPlayer(playerid, "http://"AUDIO_LOGRO"");
			}
			MostrarLogro(playerid,"Techo propio","~n~_~n~_~n~Compra una casa en cualquier~n~lugar de San Andreas.~n~_","20");
			PlayerInfo[playerid][pCasa] = 1;
			if(PlayerInfo[playerid][pFaccion] == 1)
			{
				new logro[350];
				format(logro,sizeof(logro),"{3399FF}[Radio]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Techo propio *{FFFFFF} (20 puntos).",PlayerName(playerid));
				foreach(Player, u)
				if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
				SendClientMessage(u,-1,logro);
			}
			if(PlayerInfo[playerid][pFaccion] > 1)
			{
				new logro[350];
				format(logro,sizeof(logro),"{FF9900}[Banda]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Techo propio *{FFFFFF} (20 puntos).",PlayerName(playerid));
				foreach(Player, u)
				if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
				SendClientMessage(u,-1,logro);
			}
			format(query, sizeof(query), "INSERT INTO `achievements` (Nombre_Jugador,Tipo,Etapa,Completado,Titulo,Descripcion) VALUES ('%s','9','1','1','Techo propio','Compra una casa en cualquier lugar de San Andreas.');", PlayerName(playerid));
			mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
			SetTimerEx("QuitarLogro",6000,false,"d",playerid);
		}
	}
	if(propiedad == 2)
	{
		if(PlayerInfo[playerid][pOficina] == 0)
		{
            GameTextForPlayer(playerid, "~g~] ~w~LOGRO CONSEGUIDO ~g~]", 5000, 4);
	    	SendClientMessage(playerid,0xA385CBFF,"Conseguiste un logro, puedes ver tus logros y los de otras personas en la web.");
	    	if(PlayerInfo[playerid][pSonidos] == 0)
    		{
    			PlayAudioStreamForPlayer(playerid, "http://"AUDIO_LOGRO"");
			}
			MostrarLogro(playerid,"Lugar de trabajo","~n~_~n~_~n~Compra una oficina  en~n~cualquier lugar de San Andreas.~n~_","20");
			PlayerInfo[playerid][pOficina] = 1;
			if(PlayerInfo[playerid][pFaccion] == 1)
			{
				new logro[350];
				format(logro,350,"{3399FF}[Radio]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Lugar de trabajo *{FFFFFF} (20 puntos).",PlayerName(playerid));
				foreach(Player, u)
				if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
				SendClientMessage(u,-1,logro);
			}
			if(PlayerInfo[playerid][pFaccion] > 1)
			{
				new logro[350];
				format(logro,350,"{FF9900}[Banda]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Lugar de trabajo *{FFFFFF} (20 puntos).",PlayerName(playerid));
				foreach(Player, u)
				if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
				SendClientMessage(u,-1,logro);
			}
			format(query, sizeof(query), "INSERT INTO `achievements` (Nombre_Jugador,Tipo,Etapa,Completado,Titulo,Descripcion) VALUES ('%s','10','1','1','Lugar de trabajo','Compra una oficina en cualquier lugar de San Andreas.');", PlayerName(playerid));
			mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
			SetTimerEx("QuitarLogro",6000,false,"d",playerid);
		}
	}
	if(propiedad == 3)
	{
		if(PlayerInfo[playerid][pRestaurante] == 0)
		{
            GameTextForPlayer(playerid, "~g~] ~w~LOGRO CONSEGUIDO ~g~]", 5000, 4);
	    	SendClientMessage(playerid,0xA385CBFF,"Conseguiste un logro, puedes ver tus logros y los de otras personas en la web.");
	    	if(PlayerInfo[playerid][pSonidos] == 0)
	    	{
	    		PlayAudioStreamForPlayer(playerid, "http://"AUDIO_LOGRO"");
			}
			MostrarLogro(playerid,"Iniciando negocios","~n~_~n~_~n~Compra un restaurante en~n~cualquier lugar de San Andreas.~n~_","30");
			PlayerInfo[playerid][pRestaurante] = 1;
			if(PlayerInfo[playerid][pFaccion] == 1)
			{
				new logro[350];
				format(logro,350,"{3399FF}[Radio]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Iniciando negocios *{FFFFFF} (30 puntos).",PlayerName(playerid));
				foreach(Player, u)
				if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
				SendClientMessage(u,-1,logro);
			}
			if(PlayerInfo[playerid][pFaccion] > 1)
			{
				new logro[350];
				format(logro,350,"{FF9900}[Banda]{FFFFFF} El jugador {00CCFF}%s{FFFFFF} consiguió el logro {A385CB}* Iniciando negocios *{FFFFFF} (30 puntos).",PlayerName(playerid));
				foreach(Player, u)
				if(PlayerInfo[u][pFaccion] == PlayerInfo[playerid][pFaccion])
				SendClientMessage(u,-1,logro);
			}
			format(query, sizeof(query), "INSERT INTO `achievements` (Nombre_Jugador,Tipo,Etapa,Completado,Titulo,Descripcion) VALUES ('%s','11','1','1','Iniciando negocios','Compra un restaurante en cualquier lugar de San Andreas.');", PlayerName(playerid));
			mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
			SetTimerEx("QuitarLogro",6000,false,"d",playerid);
		}
	}
}

public QuitarLogro(playerid)
{
	PlayerTextDrawHide(playerid, LogroRueda[playerid]);
	PlayerTextDrawHide(playerid, LogroLinea[playerid]);
	PlayerTextDrawHide(playerid, LogroNumero[playerid]);
	PlayerTextDrawHide(playerid, LogroTitulo[playerid]);
	PlayerTextDrawHide(playerid, LogroTexto1[playerid]);
	PlayerTextDrawHide(playerid, LogroTexto2[playerid]);
}

public Descongelar(playerid)
{
	TogglePlayerControllable(playerid,1);
	SetPVarInt(playerid, "IsFrozen", 1);
}

public EnviarAuto(playerid)
{
	new mensaje[60];
	EnAuto[playerid] = autos[playerid];
	PutPlayerInVehicle(playerid, autos[playerid], 0);
	SendClientMessage(playerid, -1, "Compraste el vehículo, ahora estacionalo en un lugar seguro usando {DBED16}/estacionar{FFFFFF}.");
	format(mensaje, sizeof(mensaje), "La patente de tu vehículo es {00CCFF}%s{FFFFFF}.", PlayerInfo[playerid][vpatente]);
	SendClientMessage(playerid,-1, mensaje);
	SendClientMessage(playerid, -1, "En caso de que tu vehículo sea robado, llama a la policía y comunícales la patente.");
	RevisarLogroAuto(playerid);
	MostrarInfoVehiculo(playerid);
	VehicleFuel[autos[playerid]] = 50;
	PlayerInfo[playerid][vGas] = 50;
	SetPlayerProgressBarValue(playerid,Progressbar[playerid][Combustible],VehicleFuel[autos[playerid]]);
	UpdatePlayerProgressBar(playerid,Progressbar[playerid][Combustible]);
}

public EnviarAuto2(playerid)
{
	new mensaje[60];
	EnAuto[playerid] = autos2[playerid];
	PutPlayerInVehicle(playerid, autos2[playerid], 0);
	SendClientMessage(playerid, -1, "Compraste el vehículo, ahora estacionalo en un lugar seguro usando {DBED16}/estacionar{FFFFFF}.");
	format(mensaje, sizeof(mensaje), "La patente de tu vehículo es {00CCFF}%s{FFFFFF}.", PlayerInfo[playerid][v2patente]);
	SendClientMessage(playerid,-1, mensaje);
	SendClientMessage(playerid, -1, "En caso de que tu vehículo sea robado, llama a la policía y comunícales la patente.");
	RevisarLogroAuto(playerid);
	MostrarInfoVehiculo(playerid);
	VehicleFuel[autos2[playerid]] = 50;
	PlayerInfo[playerid][v2Gas] = 50;
	SetPlayerProgressBarValue(playerid,Progressbar[playerid][Combustible],VehicleFuel[autos2[playerid]]);
	UpdatePlayerProgressBar(playerid,Progressbar[playerid][Combustible]);
}

public EnviarAuto3(playerid)
{
	new mensaje[60];
	EnAuto[playerid] = autos3[playerid];
	PutPlayerInVehicle(playerid, autos3[playerid], 0);
	SendClientMessage(playerid, -1, "Compraste el vehículo, ahora estacionalo en un lugar seguro usando {DBED16}/estacionar{FFFFFF}.");
	format(mensaje, sizeof(mensaje), "La patente de tu vehículo es {00CCFF}%s{FFFFFF}.", PlayerInfo[playerid][v3patente]);
	SendClientMessage(playerid,-1, mensaje);
	SendClientMessage(playerid, -1, "En caso de que tu vehículo sea robado, llama a la policía y comunícales la patente.");
	RevisarLogroAuto(playerid);
	MostrarInfoVehiculo(playerid);
	VehicleFuel[autos3[playerid]] = 50;
	PlayerInfo[playerid][v3Gas] = 50;
	SetPlayerProgressBarValue(playerid,Progressbar[playerid][Combustible],VehicleFuel[autos3[playerid]]);
	UpdatePlayerProgressBar(playerid,Progressbar[playerid][Combustible]);
}

public EnviarAuto4(playerid)
{
	new mensaje[60];
	EnAuto[playerid] = autos4[playerid];
	PutPlayerInVehicle(playerid, autos4[playerid], 0);
	SendClientMessage(playerid, -1, "Compraste el vehículo, ahora estacionalo en un lugar seguro usando {DBED16}/estacionar{FFFFFF}.");
	format(mensaje, sizeof(mensaje), "La patente de tu vehículo es {00CCFF}%s{FFFFFF}.", PlayerInfo[playerid][v4patente]);
	SendClientMessage(playerid,-1, mensaje);
	SendClientMessage(playerid, -1, "En caso de que tu vehículo sea robado, llama a la policía y comunícales la patente.");
	RevisarLogroAuto(playerid);
	MostrarInfoVehiculo(playerid);
	VehicleFuel[autos4[playerid]] = 50;
	PlayerInfo[playerid][v4Gas] = 50;
	SetPlayerProgressBarValue(playerid,Progressbar[playerid][Combustible],VehicleFuel[autos4[playerid]]);
	UpdatePlayerProgressBar(playerid,Progressbar[playerid][Combustible]);
}

public OcultarAnim(playerid)
{
	LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	SendClientMessage(playerid, -1, "El paciente está listo para ser trasladado al hospital.");
	SendClientMessage(playerid, -1, "Sube a tu ambulancia y escribe {DBED16}/subir paciente{FFFFFF}, luego conduce al hospital más cercano.");
	SendClientMessage(playerid, -1, "Apresúrate porque está perdiendo mucha sangre y puede morir en el camino.");
}

public StopCell(playerid)
{
	if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USECELLPHONE)
	{
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
	}
}

public RestaVida()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	if(PlayerInfo[i][Agonizando] == 1)
	{
		new Float:vida[MAX_PLAYERS];
		GetPlayerHealth(i, vida[i]);
		EstablecerVida(i,vida[i] -1.00);
	}
}

public BajarCuentaDinero()
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(CuentaDinero[i] > 0 && JugadorLogeado[i] == 1)
		{
			CuentaDinero[i]--;
		}
	}
}

public DarGas()
{
	for(new i=0;i<MAX_VEHICLES;i++)
	{
		Gasolin[i] = 100;
		VehicleFuel[i] = 100;
	}
	return 1;
}

public DarDineroLogin(playerid)
{
	GivePlayerMoney(playerid,PlayerInfo[playerid][jDinero]);
}

public DarDinero(playerid,cantidad)
{
	if(cantidad < 0) return 1;
	PlayerInfo[playerid][jDinero] += cantidad;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid,PlayerInfo[playerid][jDinero]);
	return 1;
}

public QuitarDinero(playerid,cantidad)
{
	if(cantidad < 0) return 1;
	PlayerInfo[playerid][jDinero] -= cantidad;
	GivePlayerMoney(playerid,-cantidad);
	return 1;
}

public TiempoJail(playerid)
{
	if(San[playerid] == 1)
	{
		San[playerid] = 0;
		PlayerInfo[playerid][pTiempoJail] = 0;
		SendClientMessage(playerid, -1, "Has cumplido tu tiempo de sancion, ten en cuenta las reglas para no volver a ser sancionado");
		SetPosEx(playerid, 1444.2815,-1663.9086,13.5530,0,0,0);
		SancionadoOPricion[playerid] = 0;
	}
}

public EnviarJail(playerid)
{
	new string[256];
	if(PlayerInfo[playerid][pTiempoJailS] < 60) format(string, sizeof(string), "Faltan {00CC00}%ds{FFFFFF} segundos para cumplir la sanción.", PlayerInfo[playerid][pTiempoJailS]);
	else if(PlayerInfo[playerid][pTiempoJailS] >= 60) format(string, sizeof(string), "Faltan {00CC00}%dm %ds para cumplir la sanción.", PlayerInfo[playerid][pTiempoJailS]/60, PlayerInfo[playerid][pTiempoJailS]%(60));
	SendClientMessage(playerid,-1,string);
	SetPlayerPos(playerid, 346.870025,309.259033,999.155700);
	SetPlayerInterior(playerid, 6);
	San[playerid] = 1;
	SetPlayerVirtualWorld(playerid, playerid);
	QuitarArmas(playerid);
}

public EncerrandoNombre(playerid,i)
{
	new string[128];
    format(string, sizeof(string), "%s encierra a %s en la celda.", PlayerName(playerid),PlayerName(i));
	ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
}
public Encerrando(playerid)
{
	if(JugadorLogeado[playerid] != 1) return 1;
	new vw = GetPlayerVirtualWorld(playerid);
	if(Entrando[playerid] == 0)
	{
		Entrando[playerid] = 1;
		SetTimerEx("Entrandos",3000,false,"d",playerid);
	}
	BajandoV[playerid] = 1;
	EstablecerVida(playerid,100.0);
	if(PlayerInfo[playerid][pCargos] == 1)
	{
		new celda = random(4);
		PlayerInfo[playerid][pTiempoCarcelM] = 1;
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{FF3300}Fuiste detenido{FFFFFF}, tendrás que cumplir una condena de {DBED16}1 minuto {FFFFFF}para ser liberado.");
		SendClientMessage(playerid,-1,"La sentencia puede ser reducida si consigues un abogado.");
		SendClientMessage(playerid, -1, "Puedes pagar para cumplir la condena en prisión {DBED15}/domiciliaria");
  		SendClientMessage(playerid,-1,"Para ver cuanto tiempo te falta para cumplir la condena, escribe {DBED16}/tiempo{FFFFFF}.");
  		SendClientMessage(playerid,-1,"La policia le quita a los detenidos sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][pCargos] = 0;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
		SetPlayerColor(playerid, COLOR_WHITE);
		Jail[playerid] = 1;
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		QuitarArmas(playerid);
		VariableCaido[playerid] = 0;

		if(IsPlayerInRangeOfPoint(playerid,15.0,1564.5568,-1694.7732,5.8906) || IsPlayerInRangeOfPoint(playerid,7.0,240.4520,112.8195,1003.2188) && vw == 1)
		{
		    PlayerInfo[playerid][pTipoCarcel] = 1;
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 10);
   			if(celda == 0)
			{
				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
			}
			else if(celda == 1)
			{
				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
			}
			else if(celda == 2)
			{
				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
			}
			else if(celda == 3)
			{
				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,-1589.5292,716.2191,-5.6688) || IsPlayerInRangeOfPoint(playerid,7.0,240.4520,112.8195,1003.2188) && vw == 5)
		{
		    PlayerInfo[playerid][pTipoCarcel] = 2;
		    SetPlayerVirtualWorld(playerid, 5);
		    SetPlayerInterior(playerid, 10);
   			if(celda == 0)
			{
				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
			}
			else if(celda == 1)
			{
				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
			}
			else if(celda == 2)
			{
				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
			}
			else if(celda == 3)
			{
				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,2293.1904,2451.6099,10.3875) || IsPlayerInRangeOfPoint(playerid,7.0,235.2946,166.3358,1003.0300))
		{
		    PlayerInfo[playerid][pTipoCarcel] = 3;
		    SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 7);
   			if(celda == 0)
			{
				SetPlayerPos(playerid, 197.6199, 174.8677, 1002.6390);
			}
			else if(celda == 1)
			{
				SetPlayerPos(playerid, 193.5631, 174.8843, 1002.6390);
			}
			else if(celda == 2)
			{
				SetPlayerPos(playerid, 194.5337, 163.1250, 1002.6390);
			}
			else if(celda == 3)
			{
				SetPlayerPos(playerid, 198.6272, 162.4750, 1002.6390);
			}
		}
	}
	else if(PlayerInfo[playerid][pCargos] == 2)
	{
		new celda = random(4);
		PlayerInfo[playerid][pTiempoCarcelM] = 2;
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{FF3300}Fuiste detenido{FFFFFF}, tendrás que cumplir una condena de {DBED16}2 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid,-1,"La sentencia puede ser reducida si consigues un abogado.");
		SendClientMessage(playerid, -1, "Puedes pagar para cumplir la condena en prisión {DBED15}/domiciliaria");
  		SendClientMessage(playerid,-1,"Para ver cuanto tiempo te falta para cumplir la condena, escribe {DBED16}/tiempo{FFFFFF}.");
  		SendClientMessage(playerid,-1,"La policia le quita a los detenidos sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][pCargos] = 0;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		SetPlayerColor(playerid, COLOR_WHITE);
		QuitarArmas(playerid);
		Jail[playerid] = 1;

		if(IsPlayerInRangeOfPoint(playerid,15.0,1564.5568,-1694.7732,5.8906) || IsPlayerInRangeOfPoint(playerid,7.0,240.4520,112.8195,1003.2188) && vw == 1)
		{
		    PlayerInfo[playerid][pTipoCarcel] = 1;
		    SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 1);
			if(celda == 0)
			{
				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
			}
			else if(celda == 1)
			{
				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
			}
			else if(celda == 2)
			{
				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
			}
			else if(celda == 3)
			{
				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,-1589.5292,716.2191,-5.6688) || IsPlayerInRangeOfPoint(playerid,7.0,240.4520,112.8195,1003.2188) && vw == 5)
		{
		    PlayerInfo[playerid][pTipoCarcel] = 2;
		    SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 5);
			if(celda == 0)
			{
				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
			}
			else if(celda == 1)
			{
				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
			}
			else if(celda == 2)
			{
				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
			}
			else if(celda == 3)
			{
				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,2293.1904,2451.6099,10.3875) || IsPlayerInRangeOfPoint(playerid,7.0,235.2946,166.3358,1003.0300))
		{
		    PlayerInfo[playerid][pTipoCarcel] = 3;
            SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 7);
			if(celda == 0)
			{
				SetPlayerPos(playerid, 197.6199, 174.8677, 1002.6390);
			}
			else if(celda == 1)
			{
				SetPlayerPos(playerid, 193.5631, 174.8843, 1002.6390);
			}
			else if(celda == 2)
			{
				SetPlayerPos(playerid, 194.5337, 163.1250, 1002.6390);
			}
			else if(celda == 3)
			{
				SetPlayerPos(playerid, 198.6272, 162.4750, 1002.6390);
			}
		}
	}
	else if(PlayerInfo[playerid][pCargos] == 3)
	{
		new celda = random(4);
		PlayerInfo[playerid][pTiempoCarcelM] = 3;
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{FF3300}Fuiste detenido{FFFFFF}, tendrás que cumplir una condena de {DBED16}3 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid,-1,"La sentencia puede ser reducida si consigues un abogado.");
		SendClientMessage(playerid, -1, "Puedes pagar para cumplir la condena en prisión {DBED15}/domiciliaria");
  		SendClientMessage(playerid,-1,"Para ver cuanto tiempo te falta para cumplir la condena, escribe {DBED16}/tiempo{FFFFFF}.");
  		SendClientMessage(playerid,-1,"La policia le quita a los detenidos sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][pCargos] = 0;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
		QuitarArmas(playerid);
		SetPlayerColor(playerid, COLOR_WHITE);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		Jail[playerid] = 1;

		if(IsPlayerInRangeOfPoint(playerid,15.0,1564.5568,-1694.7732,5.8906) || IsPlayerInRangeOfPoint(playerid,7.0,240.4520,112.8195,1003.2188) && vw == 1)
		{
		    PlayerInfo[playerid][pTipoCarcel] = 1;
			SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 1);
			if(celda == 0)
			{
				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
			}
			else if(celda == 1)
			{
				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
			}
			else if(celda == 2)
			{
				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
			}
			else if(celda == 3)
			{
				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,-1589.5292,716.2191,-5.6688) || IsPlayerInRangeOfPoint(playerid,7.0,240.4520,112.8195,1003.2188) && vw == 5)
		{
		    PlayerInfo[playerid][pTipoCarcel] = 2;
			SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 5);
			if(celda == 0)
			{
				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
			}
			else if(celda == 1)
			{
				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
			}
			else if(celda == 2)
			{
				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
			}
			else if(celda == 3)
			{
				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,2293.1904,2451.6099,10.3875) || IsPlayerInRangeOfPoint(playerid,7.0,235.2946,166.3358,1003.0300))
		{
		    PlayerInfo[playerid][pTipoCarcel] = 3;
			SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 7);
			if(celda == 0)
			{
				SetPlayerPos(playerid, 197.6199, 174.8677, 1002.6390);
			}
			else if(celda == 1)
			{
				SetPlayerPos(playerid, 193.5631, 174.8843, 1002.6390);
			}
			else if(celda == 2)
			{
				SetPlayerPos(playerid, 194.5337, 163.1250, 1002.6390);
			}
			else if(celda == 3)
			{
				SetPlayerPos(playerid, 198.6272, 162.4750, 1002.6390);
			}
		}
	}
	else if(PlayerInfo[playerid][pCargos] == 4)
	{
		new celda = random(4);
		PlayerInfo[playerid][pTiempoCarcelM] = 4;
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{FF3300}Fuiste detenido{FFFFFF}, tendrás que cumplir una condena de {DBED16}4 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid,-1,"La sentencia puede ser reducida si consigues un abogado.");
		SendClientMessage(playerid, -1, "Puedes pagar para cumplir la condena en prisión {DBED15}/domiciliaria");
  		SendClientMessage(playerid,-1,"Para ver cuanto tiempo te falta para cumplir la condena, escribe {DBED16}/tiempo{FFFFFF}.");
  		SendClientMessage(playerid,-1,"La policia le quita a los detenidos sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][pCargos] = 0;
		QuitarArmas(playerid);
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		SetPlayerColor(playerid, COLOR_WHITE);
		Jail[playerid] = 1;

		if(IsPlayerInRangeOfPoint(playerid,15.0,1564.5568,-1694.7732,5.8906) || IsPlayerInRangeOfPoint(playerid,7.0,240.4520,112.8195,1003.2188) && vw == 1)
		{
		    PlayerInfo[playerid][pTipoCarcel] = 1;
			SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 1);
			if(celda == 0)
			{
				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
			}
			else if(celda == 1)
			{
				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
			}
			else if(celda == 2)
			{
				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
			}
			else if(celda == 3)
			{
				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,-1589.5292,716.2191,-5.6688) || IsPlayerInRangeOfPoint(playerid,7.0,240.4520,112.8195,1003.2188) && vw == 5)
		{
		    PlayerInfo[playerid][pTipoCarcel] = 2;
		    SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 5);
			if(celda == 0)
			{
				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
			}
			else if(celda == 1)
			{
				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
			}
			else if(celda == 2)
			{
				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
			}
			else if(celda == 3)
			{
				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,2293.1904,2451.6099,10.3875) || IsPlayerInRangeOfPoint(playerid,7.0,235.2946,166.3358,1003.0300))
		{
		    PlayerInfo[playerid][pTipoCarcel] = 3;
		    SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 7);
			if(celda == 0)
			{
				SetPlayerPos(playerid, 197.6199, 174.8677, 1002.6390);
			}
			else if(celda == 1)
			{
				SetPlayerPos(playerid, 193.5631, 174.8843, 1002.6390);
			}
			else if(celda == 2)
			{
				SetPlayerPos(playerid, 194.5337, 163.1250, 1002.6390);
			}
			else if(celda == 3)
			{
				SetPlayerPos(playerid, 198.6272, 162.4750, 1002.6390);
			}
		}
	}
	else if(PlayerInfo[playerid][pCargos] == 5)
	{
		new celda = random(4);
		PlayerInfo[playerid][pTiempoCarcelM] = 5;
		QuitarArmas(playerid);
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{FF3300}Fuiste detenido{FFFFFF}, tendrás que cumplir una condena de {DBED16}5 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid,-1,"La sentencia puede ser reducida si consigues un abogado.");
		SendClientMessage(playerid, -1, "Puedes pagar para cumplir la condena en prisión {DBED15}/domiciliaria");
  		SendClientMessage(playerid,-1,"Para ver cuanto tiempo te falta para cumplir la condena, escribe {DBED16}/tiempo{FFFFFF}.");
  		SendClientMessage(playerid,-1,"La policia le quita a los detenidos sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][pCargos] = 0;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		SetPlayerColor(playerid, COLOR_WHITE);
		Jail[playerid] = 1;

		if(IsPlayerInRangeOfPoint(playerid,15.0,1564.5568,-1694.7732,5.8906) || IsPlayerInRangeOfPoint(playerid,7.0,240.4520,112.8195,1003.2188) && vw == 1)
		{
		    PlayerInfo[playerid][pTipoCarcel] = 1;
		    SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 1);
			if(celda == 0)
			{
				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
			}
			else if(celda == 1)
			{
				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
			}
			else if(celda == 2)
			{
				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
			}
			else if(celda == 3)
			{
				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,-1589.5292,716.2191,-5.6688) || IsPlayerInRangeOfPoint(playerid,7.0,240.4520,112.8195,1003.2188) && vw == 5)
		{
		    PlayerInfo[playerid][pTipoCarcel] = 2;
		    SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 5);
			if(celda == 0)
			{
				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
			}
			else if(celda == 1)
			{
				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
			}
			else if(celda == 2)
			{
				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
			}
			else if(celda == 3)
			{
				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,2293.1904,2451.6099,10.3875) || IsPlayerInRangeOfPoint(playerid,7.0,235.2946,166.3358,1003.0300))
		{
		    PlayerInfo[playerid][pTipoCarcel] = 3;
		    SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 7);
			if(celda == 0)
			{
				SetPlayerPos(playerid, 197.6199, 174.8677, 1002.6390);
			}
			else if(celda == 1)
			{
				SetPlayerPos(playerid, 193.5631, 174.8843, 1002.6390);
			}
			else if(celda == 2)
			{
				SetPlayerPos(playerid, 194.5337, 163.1250, 1002.6390);
			}
			else if(celda == 3)
			{
				SetPlayerPos(playerid, 198.6272, 162.4750, 1002.6390);
			}
		}
	}
	else if(PlayerInfo[playerid][pCargos] == 6)
	{
		new celda = random(4);
		PlayerInfo[playerid][pTiempoCarcelM] = 6;
		QuitarArmas(playerid);
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{FF3300}Fuiste detenido{FFFFFF}, tendrás que cumplir una condena de {DBED16}6 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid,-1,"La sentencia puede ser reducida si consigues un abogado.");
		SendClientMessage(playerid, -1, "Puedes pagar para cumplir la condena en prisión {DBED15}/domiciliaria");
  		SendClientMessage(playerid,-1,"Para ver cuanto tiempo te falta para cumplir la condena, escribe {DBED16}/tiempo{FFFFFF}.");
  		SendClientMessage(playerid,-1,"La policia le quita a los detenidos sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][pCargos] = 0;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		SetPlayerColor(playerid, COLOR_WHITE);
		Jail[playerid] = 1;
		if(IsPlayerInRangeOfPoint(playerid,15.0,1564.5568,-1694.7732,5.8906) || IsPlayerInRangeOfPoint(playerid,7.0,240.4520,112.8195,1003.2188) && vw == 1)
		{
		    PlayerInfo[playerid][pTipoCarcel] = 1;
		    SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 1);
			if(celda == 0)
			{
				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
			}
			else if(celda == 1)
			{
				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
			}
			else if(celda == 2)
			{
				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);

			}
			else if(celda == 3)
			{
				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,-1589.5292,716.2191,-5.6688) || IsPlayerInRangeOfPoint(playerid,7.0,240.4520,112.8195,1003.2188) && vw == 5)
		{
		    PlayerInfo[playerid][pTipoCarcel] = 2;
		    SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 5);
			if(celda == 0)
			{
				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
			}
			else if(celda == 1)
			{
				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
			}
			else if(celda == 2)
			{
				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
			}
			else if(celda == 3)
			{
				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,2293.1904,2451.6099,10.3875) || IsPlayerInRangeOfPoint(playerid,7.0,235.2946,166.3358,1003.0300))
		{
		    PlayerInfo[playerid][pTipoCarcel] = 3;
		    SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 7);
			if(celda == 0)
			{
				SetPlayerPos(playerid, 197.6199, 174.8677, 1002.6390);
			}
			else if(celda == 1)
			{
				SetPlayerPos(playerid, 193.5631, 174.8843, 1002.6390);
			}
			else if(celda == 2)
			{
				SetPlayerPos(playerid, 194.5337, 163.1250, 1002.6390);
			}
			else if(celda == 3)
			{
				SetPlayerPos(playerid, 198.6272, 162.4750, 1002.6390);
			}
		}
	}
	return 1;
}

public Encerrando2(playerid)
{
	if(JugadorLogeado[playerid] != 1) return 1;
	if(Entrando[playerid] == 0)
	{
		Entrando[playerid] = 1;
		SetTimerEx("Entrandos",3000,false,"d",playerid);
	}
	if(PlayerInfo[playerid][pCargos] == 1)
	{
	    PlayerInfo[playerid][pTipoCarcel] = 1;
		PlayerInfo[playerid][pTiempoCarcelM] = 1;
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{FF3300}Fuiste detenido{FFFFFF}, tendrás que cumplir una condena de {DBED16}1 minuto {FFFFFF}para ser liberado.");
		SendClientMessage(playerid,-1,"La sentencia puede ser reducida si consigues un abogado.");
		SendClientMessage(playerid, -1, "Puedes pagar para cumplir la condena en prisión {DBED15}/domiciliaria");
  		SendClientMessage(playerid,-1,"Para ver cuanto tiempo te falta para cumplir la condena, escribe {DBED16}/tiempo{FFFFFF}.");
  		SendClientMessage(playerid,-1,"La policia le quita a los detenidos sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][pCargos] = 0;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
		SetPlayerColor(playerid, COLOR_WHITE);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		QuitarArmas(playerid);
		Jail[playerid] = 1;
		if(PlayerInfo[playerid][pEnFC] == 0)
		{
	        new celda = random(4);
			switch(celda)
			{
				case 0:	SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
				case 1:	SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
				case 2:	SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
				case 3:	SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
			}
		}
		else
		{
		    new rand = random(sizeof(FCSPAWN));
			SetPlayerPos(playerid, FCSPAWN[rand][0], FCSPAWN[rand][1], FCSPAWN[rand][2]);
			SetPlayerFacingAngle(playerid, FCSPAWN[rand][3]);
			FortCarsonX[playerid][0] = FCSPAWN[rand][0];
			FortCarsonX[playerid][1] = FCSPAWN[rand][1];
			FortCarsonX[playerid][2] = FCSPAWN[rand][2];
			FortCarsonX[playerid][3] = FCSPAWN[rand][3];
		}
	}
	else if(PlayerInfo[playerid][pCargos] == 2)
	{
	    PlayerInfo[playerid][pTipoCarcel] = 1;
		PlayerInfo[playerid][pTiempoCarcelM] = 2;
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{FF3300}Fuiste detenido{FFFFFF}, tendrás que cumplir una condena de {DBED16}2 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid,-1,"La sentencia puede ser reducida si consigues un abogado.");
		SendClientMessage(playerid, -1, "Puedes pagar para cumplir la condena en prisión {DBED15}/domiciliaria");
  		SendClientMessage(playerid,-1,"Para ver cuanto tiempo te falta para cumplir la condena, escribe {DBED16}/tiempo{FFFFFF}.");
  		SendClientMessage(playerid,-1,"La policia le quita a los detenidos sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][pCargos] = 0;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		SetPlayerColor(playerid, COLOR_WHITE);
		QuitarArmas(playerid);
		Jail[playerid] = 1;
		if(PlayerInfo[playerid][pEnFC] == 0)
		{
	        new celda = random(4);
			switch(celda)
			{
				case 0:	SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
				case 1:	SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
				case 2:	SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
				case 3:	SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
			}
		}
		else
		{
		    new rand = random(sizeof(FCSPAWN));
			SetPlayerPos(playerid, FCSPAWN[rand][0], FCSPAWN[rand][1], FCSPAWN[rand][2]);
			SetPlayerFacingAngle(playerid, FCSPAWN[rand][3]);
			FortCarsonX[playerid][0] = FCSPAWN[rand][0];
			FortCarsonX[playerid][1] = FCSPAWN[rand][1];
			FortCarsonX[playerid][2] = FCSPAWN[rand][2];
			FortCarsonX[playerid][3] = FCSPAWN[rand][3];
		}
	}
	else if(PlayerInfo[playerid][pCargos] == 3)
	{
	    PlayerInfo[playerid][pTipoCarcel] = 1;
		PlayerInfo[playerid][pTiempoCarcelM] = 3;
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{FF3300}Fuiste detenido{FFFFFF}, tendrás que cumplir una condena de {DBED16}3 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid,-1,"La sentencia puede ser reducida si consigues un abogado.");
		SendClientMessage(playerid, -1, "Puedes pagar para cumplir la condena en prisión {DBED15}/domiciliaria");
  		SendClientMessage(playerid,-1,"Para ver cuanto tiempo te falta para cumplir la condena, escribe {DBED16}/tiempo{FFFFFF}.");
  		SendClientMessage(playerid,-1,"La policia le quita a los detenidos sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][pCargos] = 0;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
		QuitarArmas(playerid);
		SetPlayerColor(playerid, COLOR_WHITE);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		Jail[playerid] = 1;
		if(PlayerInfo[playerid][pEnFC] == 0)
		{
	        new celda = random(4);
			switch(celda)
			{
				case 0:	SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
				case 1:	SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
				case 2:	SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
				case 3:	SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
			}
		}
		else
		{
		    new rand = random(sizeof(FCSPAWN));
			SetPlayerPos(playerid, FCSPAWN[rand][0], FCSPAWN[rand][1], FCSPAWN[rand][2]);
			SetPlayerFacingAngle(playerid, FCSPAWN[rand][3]);
			FortCarsonX[playerid][0] = FCSPAWN[rand][0];
			FortCarsonX[playerid][1] = FCSPAWN[rand][1];
			FortCarsonX[playerid][2] = FCSPAWN[rand][2];
			FortCarsonX[playerid][3] = FCSPAWN[rand][3];
		}
	}
	else if(PlayerInfo[playerid][pCargos] == 4)
	{
	    PlayerInfo[playerid][pTipoCarcel] = 1;
		PlayerInfo[playerid][pTiempoCarcelM] = 4;
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{FF3300}Fuiste detenido{FFFFFF}, tendrás que cumplir una condena de {DBED16}4 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid,-1,"La sentencia puede ser reducida si consigues un abogado.");
		SendClientMessage(playerid, -1, "Puedes pagar para cumplir la condena en prisión {DBED15}/domiciliaria");
  		SendClientMessage(playerid,-1,"Para ver cuanto tiempo te falta para cumplir la condena, escribe {DBED16}/tiempo{FFFFFF}.");
  		SendClientMessage(playerid,-1,"La policia le quita a los detenidos sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][pCargos] = 0;
		QuitarArmas(playerid);
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		SetPlayerColor(playerid, COLOR_WHITE);
		Jail[playerid] = 1;
        if(PlayerInfo[playerid][pEnFC] == 0)
		{
	        new celda = random(4);
			switch(celda)
			{
				case 0:	SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
				case 1:	SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
				case 2:	SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
				case 3:	SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
			}
		}
		else
		{
		    new rand = random(sizeof(FCSPAWN));
			SetPlayerPos(playerid, FCSPAWN[rand][0], FCSPAWN[rand][1], FCSPAWN[rand][2]);
			SetPlayerFacingAngle(playerid, FCSPAWN[rand][3]);
			FortCarsonX[playerid][0] = FCSPAWN[rand][0];
			FortCarsonX[playerid][1] = FCSPAWN[rand][1];
			FortCarsonX[playerid][2] = FCSPAWN[rand][2];
			FortCarsonX[playerid][3] = FCSPAWN[rand][3];
		}
	}
	else if(PlayerInfo[playerid][pCargos] == 5)
	{
	    PlayerInfo[playerid][pTipoCarcel] = 1;
		PlayerInfo[playerid][pTiempoCarcelM] = 5;
		QuitarArmas(playerid);
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{FF3300}Fuiste detenido{FFFFFF}, tendrás que cumplir una condena de {DBED16}5 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid,-1,"La sentencia puede ser reducida si consigues un abogado.");
		SendClientMessage(playerid, -1, "Puedes pagar para cumplir la condena en prisión {DBED15}/domiciliaria");
  		SendClientMessage(playerid,-1,"Para ver cuanto tiempo te falta para cumplir la condena, escribe {DBED16}/tiempo{FFFFFF}.");
  		SendClientMessage(playerid,-1,"La policia le quita a los detenidos sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][pCargos] = 0;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		SetPlayerColor(playerid, COLOR_WHITE);
		Jail[playerid] = 1;
		if(PlayerInfo[playerid][pEnFC] == 0)
		{
	        new celda = random(4);
			switch(celda)
			{
				case 0:	SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
				case 1:	SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
				case 2:	SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
				case 3:	SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
			}
		}
		else
		{
		    new rand = random(sizeof(FCSPAWN));
			SetPlayerPos(playerid, FCSPAWN[rand][0], FCSPAWN[rand][1], FCSPAWN[rand][2]);
			SetPlayerFacingAngle(playerid, FCSPAWN[rand][3]);
			FortCarsonX[playerid][0] = FCSPAWN[rand][0];
			FortCarsonX[playerid][1] = FCSPAWN[rand][1];
			FortCarsonX[playerid][2] = FCSPAWN[rand][2];
			FortCarsonX[playerid][3] = FCSPAWN[rand][3];
		}
	}
	else if(PlayerInfo[playerid][pCargos] == 6)
	{
	    PlayerInfo[playerid][pTipoCarcel] = 1;
		PlayerInfo[playerid][pTiempoCarcelM] = 6;
		QuitarArmas(playerid);
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{FF3300}Fuiste detenido{FFFFFF}, tendrás que cumplir una condena de {DBED16}6 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid,-1,"La sentencia puede ser reducida si consigues un abogado.");
		SendClientMessage(playerid, -1, "Puedes pagar para cumplir la condena en prisión {DBED15}/domiciliaria");
  		SendClientMessage(playerid,-1,"Para ver cuanto tiempo te falta para cumplir la condena, escribe {DBED16}/tiempo{FFFFFF}.");
  		SendClientMessage(playerid,-1,"La policia le quita a los detenidos sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][pCargos] = 0;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		SetPlayerColor(playerid, COLOR_WHITE);
		Jail[playerid] = 1;
        if(PlayerInfo[playerid][pEnFC] == 0)
		{
	        new celda = random(4);
			switch(celda)
			{
				case 0:	SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
				case 1:	SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
				case 2:	SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
				case 3:	SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
			}
		}
		else
		{
		    new rand = random(sizeof(FCSPAWN));
			SetPlayerPos(playerid, FCSPAWN[rand][0], FCSPAWN[rand][1], FCSPAWN[rand][2]);
			SetPlayerFacingAngle(playerid, FCSPAWN[rand][3]);
			FortCarsonX[playerid][0] = FCSPAWN[rand][0];
			FortCarsonX[playerid][1] = FCSPAWN[rand][1];
			FortCarsonX[playerid][2] = FCSPAWN[rand][2];
			FortCarsonX[playerid][3] = FCSPAWN[rand][3];
		}
	}
	return 1;
}

public OnQueryFinish(resultid, extraid, ConnectionHandle)
{
	new Rows, Field, string[256];
	if(resultid != 0)
	{
		cache_get_data(Rows, Field);
	}
	switch(resultid)
	{
		case 1:
		{
			if(Rows == 1)
			{
			    LoadPerfiles(extraid);
  				new content[29];
  				cache_get_field_content(0, "Bloqueado", content);           PlayerInfo[extraid][pBloqueado] = strval(content);
				cache_get_field_content(0, "TieneEmisora", content);		Emisoras[extraid][TieneEmisora] = strval(content);
				cache_get_field_content(0, "ID", content);					PlayerInfo[extraid][pID] = strval(content);
				cache_get_field_content(0, "Online", content);				PlayerInfo[extraid][pOnline] = strval(content);
				cache_get_field_content(0, "Patines", content);				PlayerInfo[extraid][pPatines] = strval(content);
				cache_get_field_content(0, "Baneado", content);				PlayerInfo[extraid][pBan] = strval(content);
				cache_get_field_content(0, "Sed", content);					PlayerInfo[extraid][pSed] = strval(content);
				cache_get_field_content(0, "Licencia", content);			PlayerInfo[extraid][pLicencia] = strval(content);
				cache_get_field_content(0, "Hambre", content);				PlayerInfo[extraid][pHambre] = strval(content);
				cache_get_field_content(0, "SocioHP", content);				PlayerInfo[extraid][pSocioHP] = strval(content);
				cache_get_field_content(0, "TipoCarcel", content);			PlayerInfo[extraid][pTipoCarcel] = strval(content);
				cache_get_field_content(0, "TiempoCarcelM", content);		PlayerInfo[extraid][pTiempoCarcelM] = strval(content);
				cache_get_field_content(0, "TiempoCarcelS", content);		PlayerInfo[extraid][pTiempoCarcelS] = strval(content);
				cache_get_field_content(0, "Numero", content);				PlayerInfo[extraid][pNumero] = strval(content);
				cache_get_field_content(0, "Guia", content);				PlayerInfo[extraid][pGuia] = strval(content);
				cache_get_field_content(0, "Sonidos", content);				PlayerInfo[extraid][pSonidos] = strval(content);
				cache_get_field_content(0, "Muteos", content);				PlayerInfo[extraid][pMuteos] = strval(content);
				cache_get_field_content(0, "Barras", content);				PlayerInfo[extraid][pBarras] = strval(content);
				cache_get_field_content(0, "Alerta", content);				PlayerInfo[extraid][pAlerta] = strval(content);
				cache_get_field_content(0, "Velocimetro", content);			PlayerInfo[extraid][pVelocimetro] = strval(content);
				cache_get_field_content(0, "TiempoJail", content);			PlayerInfo[extraid][pTiempoJail] = strval(content);
				cache_get_field_content(0, "Cargos", content);				PlayerInfo[extraid][pCargos] = strval(content);
				cache_get_field_content(0, "Duty", content);				PlayerInfo[extraid][pDuty] = strval(content);
				cache_get_field_content(0, "SkinTrabajo", content);			PlayerInfo[extraid][pModelo] = strval(content);
				cache_get_field_content(0, "Agenda", content);				PlayerInfo[extraid][pAgenda] = strval(content);
				cache_get_field_content(0, "Stats", content);				PlayerInfo[extraid][pStats] = strval(content);
				cache_get_field_content(0, "NivelPiloto", content);			PlayerInfo[extraid][pNivelPiloto] = strval(content);
				cache_get_field_content(0, "ExpPiloto", content);			PlayerInfo[extraid][pExpPiloto] = strval(content);
				cache_get_field_content(0, "EMS", content);					PlayerInfo[extraid][pEMS] = strval(content);
				cache_get_field_content(0, "Radio", content);				PlayerInfo[extraid][pRadio] = strval(content);
				cache_get_field_content(0, "GPS", content);					PlayerInfo[extraid][pGPS] = strval(content);
				cache_get_field_content(0, "Rango", content);				PlayerInfo[extraid][pRango] = strval(content);
				cache_get_field_content(0, "Edad", content);				PlayerInfo[extraid][jEdad] = strval(content);
				cache_get_field_content(0, "Experiencia", content);			PlayerInfo[extraid][jExperiencia] = strval(content);
				cache_get_field_content(0, "Skin", content);				PlayerInfo[extraid][jRopa] = strval(content);
				cache_get_field_content(0, "Nivel", content);				PlayerInfo[extraid][@Nivel] = strval(content);
				cache_get_field_content(0, "Sexo", content);				PlayerInfo[extraid][jSexo] = strval(content);
				cache_get_field_content(0, "Martillo", content);			PlayerInfo[extraid][jMartillo] = strval(content);
				cache_get_field_content(0, "Destornillador", content);		PlayerInfo[extraid][jDestornillador] = strval(content);
				cache_get_field_content(0, "Barreta", content);				PlayerInfo[extraid][jBarreta] = strval(content);
				cache_get_field_content(0, "Balde", content);				PlayerInfo[extraid][jBalde] = strval(content);
				cache_get_field_content(0, "Faccion", content);				PlayerInfo[extraid][pFaccion] = strval(content);
				cache_get_field_content(0, "hprecio", content);				PlayerInfo[extraid][hprecio] = strval(content);
				cache_get_field_content(0, "hmoneda", content);				PlayerInfo[extraid][hmoneda] = strval(content);
				cache_get_field_content(0, "h2precio", content);			PlayerInfo[extraid][h2precio] = strval(content);
				cache_get_field_content(0, "h2moneda", content);			PlayerInfo[extraid][h2moneda] = strval(content);
				cache_get_field_content(0, "Repuestos", content);			PlayerInfo[extraid][Repuestos] = strval(content);
				cache_get_field_content(0, "FinMes", content);				PlayerInfo[extraid][finmes] = strval(content);
				cache_get_field_content(0, "FinDia", content);				PlayerInfo[extraid][findia] = strval(content);
				cache_get_field_content(0, "FinAno", content);				PlayerInfo[extraid][finano] = strval(content);
				cache_get_field_content(0, "FinMesL", content);				PlayerInfo[extraid][finmeslicencia] = strval(content);
				cache_get_field_content(0, "FinDiaL", content);				PlayerInfo[extraid][findialicencia] = strval(content);
				cache_get_field_content(0, "FinAnoL", content);				PlayerInfo[extraid][finanolicencia] = strval(content);
				cache_get_field_content(0, "EnCasa", content);				PlayerInfo[extraid][EnCasa] = strval(content);
				cache_get_field_content(0, "EnRopero", content);			PlayerInfo[extraid][EnRopero] = strval(content);
				cache_get_field_content(0, "EnGarage", content);			PlayerInfo[extraid][EnGarage] = strval(content);
				cache_get_field_content(0, "CasaID", content);				PlayerInfo[extraid][CasaID] = strval(content);
				cache_get_field_content(0, "CasaID2", content);				PlayerInfo[extraid][CasaID2] = strval(content);
				cache_get_field_content(0, "EstacionamientoID", content);	PlayerInfo[extraid][EstacionamientoID] = strval(content);
				cache_get_field_content(0, "Estacionado1", content);		PlayerInfo[extraid][vEstacionado1] = strval(content);
				cache_get_field_content(0, "Estacionado2", content);		PlayerInfo[extraid][vEstacionado2] = strval(content);
				cache_get_field_content(0, "Estacionado3", content);		PlayerInfo[extraid][vEstacionado3] = strval(content);
				cache_get_field_content(0, "Estacionado4", content);		PlayerInfo[extraid][vEstacionado4] = strval(content);
				cache_get_field_content(0, "EnEstacionamiento", content);	PlayerInfo[extraid][pEnEstacionamiento] = strval(content);
				cache_get_field_content(0, "Agonizando", content);			PlayerInfo[extraid][Agonizando] = strval(content);
				cache_get_field_content(0, "totems", content);				PlayerInfo[extraid][Totems] = strval(content);
				cache_get_field_content(0, "ent_totem", content);			PlayerInfo[extraid][Ent_Totem] = strval(content);
				cache_get_field_content(0, "VIP", content);					PlayerInfo[extraid][pVip] = strval(content);
				cache_get_field_content(0, "Banco", content);				PlayerInfo[extraid][pBanco] = strval(content);
				cache_get_field_content(0, "Moneda", content);				PlayerInfo[extraid][Moneda] = strval(content);
				cache_get_field_content(0, "Money", content);				PlayerInfo[extraid][jDinero] = strval(content);
				cache_get_field_content(0, "Medicamentos", content);		PlayerInfo[extraid][pMedicamentos] = strval(content);
				cache_get_field_content(0, "Marihuana", content);			PlayerInfo[extraid][pMarihuana] = strval(content);
				cache_get_field_content(0, "Crack", content);				PlayerInfo[extraid][pCrack] = strval(content);
				cache_get_field_content(0, "Materiales", content);			PlayerInfo[extraid][pMateriales] = strval(content);
				cache_get_field_content(0, "Semillas", content);			PlayerInfo[extraid][pSemillas] = strval(content);
				cache_get_field_content(0, "Trabajo", content);				PlayerInfo[extraid][pTrabajo] = strval(content);
				cache_get_field_content(0, "Trabajo2", content);			PlayerInfo[extraid][pTrabajo2] = strval(content);
				cache_get_field_content(0, "Admin", content);				PlayerInfo[extraid][pAdmin] = strval(content);
				cache_get_field_content(0, "Regalo", content);              PlayerInfo[extraid][jRegalo] = strval(content);
				cache_get_field_content(0, "Caramelos", content);			PlayerInfo[extraid][pCaramelos] = strval(content);
				cache_get_field_content(0, "NMute", content);				TiempoDuda[extraid] = strval(content);
				cache_get_field_content(0, "TiempoPD", content);			PlayerInfo[extraid][TiempoPD] = strval(content);
				cache_get_field_content(0, "RopaBasu", content);			RopaBasu[extraid] = strval(content);
				cache_get_field_content(0, "RopaMedi", content);			RopaMedi[extraid] = strval(content);
				cache_get_field_content(0, "RopaMeca", content);			RopaMeca[extraid] = strval(content);
				cache_get_field_content(0, "RopaMine", content);			RopaMine[extraid] = strval(content);
				cache_get_field_content(0, "Afinidad1", content);			PlayerInfo[extraid][pAfinidad1] = strval(content);
				cache_get_field_content(0, "Afinidad2", content);			PlayerInfo[extraid][pAfinidad2] = strval(content);
				cache_get_field_content(0, "Afinidad3", content);			PlayerInfo[extraid][pAfinidad3] = strval(content);
				cache_get_field_content(0, "Afinidad4", content);			PlayerInfo[extraid][pAfinidad4] = strval(content);
				cache_get_field_content(0, "Afinidad5", content);			PlayerInfo[extraid][pAfinidad5] = strval(content);
				cache_get_field_content(0, "Afinidad6", content);			PlayerInfo[extraid][pAfinidad6] = strval(content);
				cache_get_field_content(0, "Vida", content);				PlayerInfo[extraid][@Salud] = floatstr(content);
				cache_get_field_content(0, "Chaleco", content);				PlayerInfo[extraid][@Chaleco] = floatstr(content);
				cache_get_field_content(0, "posX", content);				PlayerInfo[extraid][@X] = floatstr(content);
				cache_get_field_content(0, "posY", content);				PlayerInfo[extraid][@Y] = floatstr(content);
				cache_get_field_content(0, "posZ", content);				PlayerInfo[extraid][@Z] = floatstr(content);
				cache_get_field_content(0, "XE", content);    				PlayerInfo[extraid][jPosE_x] = floatstr(content);
				cache_get_field_content(0, "YE", content);					PlayerInfo[extraid][jPosE_y] = floatstr(content);
				cache_get_field_content(0, "ZE", content);					PlayerInfo[extraid][jPosE_z] = floatstr(content);
				cache_get_field_content(0, "Interior", content);			PlayerInfo[extraid][pInterior] = strval(content);
				cache_get_field_content(0, "MundoVirtual", content);		PlayerInfo[extraid][pMundoVirtual] = strval(content);
				cache_get_field_content(0, "arrestado", content);			PlayerInfo[extraid][arrestado] = strval(content);
				cache_get_field_content(0, "horasjugadas", content);		PlayerInfo[extraid][horasjugadas] =	strval(content);
				cache_get_field_content(0, "PuntosCarrera", content);		PlayerInfo[extraid][pPuntosCarrera] = strval(content);
				cache_get_field_content(0, "NombreEmisora", content);		strmid(Emisoras[extraid][NombreEmisora],  content, 0, strlen(content), 90);
                cache_get_field_content(0, "Conexion", content);			strmid(PlayerInfo[extraid][jConexion],  content, 0, strlen(content), 90);
                cache_get_field_content(0, "razon", content);				strmid(PlayerInfo[extraid][pRazon],  content, 0, strlen(content), 32);
				cache_get_field_content(0, "Totem_Name", content);			strmid(PlayerInfo[extraid][Totem],  content, 0, strlen(content), 32);
				cache_get_field_content(0, "Email", content);				strmid(PlayerInfo[extraid][pEmail], content, 0, strlen(content), 32);
				cache_get_field_content(0, "CodigoKEY", content);			strmid(PlayerInfo[extraid][CodigoEmail], content, 0, strlen(content), 32);
   				cache_get_field_content(0, "EstadoKEY", content);			PlayerInfo[extraid][EstadoCorreo] = strval(content);
    			cache_get_field_content(0, "FinDiaC", content);				PlayerInfo[extraid][PuedeCambiar] = strval(content);
    			cache_get_field_content(0, "CodigoC", content);				PlayerInfo[extraid][CodigoAdmin] = strval(content);
    			cache_get_field_content(0, "IpReg", content);               PlayerInfo[extraid][pIpRegistro] = strval(content);
				cache_get_field_content(0, "WP0", content);					PlayerInfo[extraid][pWP0] = strval(content);
				cache_get_field_content(0, "WP1", content);					PlayerInfo[extraid][pWP1] = strval(content);
				cache_get_field_content(0, "WP2", content);					PlayerInfo[extraid][pWP2] = strval(content);
				cache_get_field_content(0, "WP3", content);					PlayerInfo[extraid][pWP3] = strval(content);
				cache_get_field_content(0, "WP4", content);					PlayerInfo[extraid][pWP4] = strval(content);
				cache_get_field_content(0, "WP5", content);					PlayerInfo[extraid][pWP5] = strval(content);
				cache_get_field_content(0, "WP6", content);					PlayerInfo[extraid][pWP6] = strval(content);
				cache_get_field_content(0, "WP7", content);					PlayerInfo[extraid][pWP7] = strval(content);
				cache_get_field_content(0, "WP8", content);					PlayerInfo[extraid][pWP8] = strval(content);
				cache_get_field_content(0, "WP9", content);					PlayerInfo[extraid][pWP9] = strval(content);
				cache_get_field_content(0, "WP10", content);				PlayerInfo[extraid][pWP10] = strval(content);
				cache_get_field_content(0, "WP11", content);				PlayerInfo[extraid][pWP11] = strval(content);
				cache_get_field_content(0, "WP12", content);				PlayerInfo[extraid][pWP12] = strval(content);
				cache_get_field_content(0, "NivelArmero", content);			PlayerInfo[extraid][pNivelArmero] = strval(content);
				cache_get_field_content(0, "ExpArmero", content);			PlayerInfo[extraid][pExpArmero] = strval(content);
				cache_get_field_content(0, "NivelCamionero", content);		PlayerInfo[extraid][pNivelCamionero] = strval(content);
				cache_get_field_content(0, "ExpCamionero", content);		PlayerInfo[extraid][pExpCamionero] = strval(content);
				cache_get_field_content(0, "NivelBasurero", content);		PlayerInfo[extraid][pNivelBasurero] = strval(content);
				cache_get_field_content(0, "ExpBasurero", content);			PlayerInfo[extraid][pExpBasurero] = strval(content);
				cache_get_field_content(0, "NivelLadron", content);			PlayerInfo[extraid][pNivelLadron] = strval(content);
				cache_get_field_content(0, "ExpLadron", content);			PlayerInfo[extraid][pExpLadron] = strval(content);
				cache_get_field_content(0, "NivelPescador", content);		PlayerInfo[extraid][pNivelPescador] = strval(content);
				cache_get_field_content(0, "ExpPescador", content);			PlayerInfo[extraid][pExpPescador] = strval(content);
				cache_get_field_content(0, "NivelMedico", content);			PlayerInfo[extraid][pNivelMedico] = strval(content);
				cache_get_field_content(0, "ExpMedico", content);			PlayerInfo[extraid][pExpMedico] = strval(content);
				cache_get_field_content(0, "NivelMinero", content);			PlayerInfo[extraid][pNivelMinero] = strval(content);
				cache_get_field_content(0, "ExpMinero", content);			PlayerInfo[extraid][pExpMinero] = strval(content);
				cache_get_field_content(0, "NivelTransportista", content);	PlayerInfo[extraid][pNivelTransportista] = strval(content);
				cache_get_field_content(0, "ExpTransportista", content);	PlayerInfo[extraid][pExpTransportista] = strval(content);
				
				cache_get_field_content(0, "Puesto1H", content);		Halloween[extraid][P1Hora] = strval(content);
				cache_get_field_content(0, "Puesto2H", content);		Halloween[extraid][P2Hora] = strval(content);
				cache_get_field_content(0, "Puesto3H", content);		Halloween[extraid][P3Hora] = strval(content);
				cache_get_field_content(0, "Puesto4H", content);		Halloween[extraid][P4Hora] = strval(content);
				cache_get_field_content(0, "Puesto5H", content);		Halloween[extraid][P5Hora] = strval(content);
				cache_get_field_content(0, "Puesto6H", content);		Halloween[extraid][P6Hora] = strval(content);
				cache_get_field_content(0, "Puesto7H", content);		Halloween[extraid][P7Hora] = strval(content);
				cache_get_field_content(0, "Puesto8H", content);		Halloween[extraid][P8Hora] = strval(content);
				cache_get_field_content(0, "Puesto9H", content);		Halloween[extraid][P9Hora] = strval(content);
				cache_get_field_content(0, "Puesto10H", content);		Halloween[extraid][P10Hora] = strval(content);
				cache_get_field_content(0, "Puesto11H", content);		Halloween[extraid][P11Hora] = strval(content);
				cache_get_field_content(0, "Puesto12H", content);		Halloween[extraid][P12Hora] = strval(content);
				cache_get_field_content(0, "Puesto13H", content);		Halloween[extraid][P13Hora] = strval(content);
				cache_get_field_content(0, "Puesto14H", content);		Halloween[extraid][P14Hora] = strval(content);
				cache_get_field_content(0, "Puesto15H", content);		Halloween[extraid][P15Hora] = strval(content);
				cache_get_field_content(0, "Puesto16H", content);		Halloween[extraid][P16Hora] = strval(content);
				cache_get_field_content(0, "Puesto17H", content);		Halloween[extraid][P17Hora] = strval(content);
				cache_get_field_content(0, "Puesto18H", content);		Halloween[extraid][P18Hora] = strval(content);
				cache_get_field_content(0, "Puesto19H", content);		Halloween[extraid][P19Hora] = strval(content);
				cache_get_field_content(0, "Puesto20H", content);		Halloween[extraid][P20Hora] = strval(content);
				cache_get_field_content(0, "Puesto21H", content);		Halloween[extraid][P21Hora] = strval(content);
				cache_get_field_content(0, "Puesto22H", content);		Halloween[extraid][P22Hora] = strval(content);
				cache_get_field_content(0, "Puesto23H", content);		Halloween[extraid][P23Hora] = strval(content);
				cache_get_field_content(0, "Puesto24H", content);		Halloween[extraid][P24Hora] = strval(content);
				cache_get_field_content(0, "Puesto25H", content);		Halloween[extraid][P25Hora] = strval(content);
				cache_get_field_content(0, "Puesto26H", content);		Halloween[extraid][P26Hora] = strval(content);
				cache_get_field_content(0, "Puesto27H", content);		Halloween[extraid][P27Hora] = strval(content);
				cache_get_field_content(0, "Puesto28H", content);		Halloween[extraid][P28Hora] = strval(content);
				cache_get_field_content(0, "Puesto29H", content);		Halloween[extraid][P29Hora] = strval(content);
				cache_get_field_content(0, "Puesto30H", content);		Halloween[extraid][P30Hora] = strval(content);
				cache_get_field_content(0, "Puesto31H", content);		Halloween[extraid][P31Hora] = strval(content);
				cache_get_field_content(0, "Puesto32H", content);		Halloween[extraid][P32Hora] = strval(content);


				SetSpawnInfo(extraid,0,PlayerInfo[extraid][jRopa],PlayerInfo[extraid][@X], PlayerInfo[extraid][@Y], PlayerInfo[extraid][@Z],5,0,0,0,0,0,0);

                SetPlayerName(extraid, PlayerInfo[extraid][NombreTemporal]);
				SetPlayerScore(extraid,  PlayerInfo[extraid][@Nivel]);
				EstablecerChaleco(extraid, PlayerInfo[extraid][@Chaleco]);
				EstablecerVida(extraid, PlayerInfo[extraid][@Salud]);

				/*if(PlayerInfo[extraid][pBloqueado] == 1)
				{
				    KillTimer(LCHAT[extraid]);
				    new str[220];
					format(str, sizeof(str), "— Su cuenta se encuentra bloqueada por ingresar desde un país distinto.", PlayerInfo[extraid][pRazon]);
					SendClientMessage(extraid, COLOR_MUTE, str);
					format(str, sizeof(str), "— Contacte a un administrador en https://"WEB_ROL"/foro/index.php para realizar", PlayerInfo[extraid][pRazon]);
					SendClientMessage(extraid, COLOR_MUTE, str);
					format(str, sizeof(str), "el proceso de desbloqueo de su cuenta.", PlayerInfo[extraid][pRazon]);
					SendClientMessage(extraid, COLOR_MUTE, str);
					SetTimerEx("KickXD",500,false,"d",extraid);
     				return 1;
				}*/
				if(PlayerInfo[extraid][pBan] == 1) return SetTimerEx("KickXD",500,false,"d",extraid);
				if(PlayerInfo[extraid][pTiempoJail] > 0)
				{
				    LoadVehicles(extraid);
					PlayerInfo[extraid][pTiempoJailS] = PlayerInfo[extraid][pTiempoJail]/1000;
					SpawnPlayer(extraid);
				}
				if(PlayerInfo[extraid][pCargos] > 0)
				{
				    LoadVehicles(extraid);
				    new dineroquitado = PlayerInfo[extraid][pCargos]*500+200;
				    QuitarDinero(extraid, dineroquitado);
					SetTimerEx("Encerrando2",2000,false,"d",extraid);
					SpawnPlayer(extraid);
				}
				if(PlayerInfo[extraid][pEMS] == 0)
				{
				    LoadVehicles(extraid);
					format(string,sizeof(string),"Ingresa un e-mail válido para recuperar tu contraseña en caso de perderla.\n\nTu e-mail:");
					ShowPlayerDialog(extraid, DEMAIL,DIALOG_STYLE_INPUT,"Ingresa tu dirección de e-mail",string,"Siguiente","");
				}
				if(PlayerInfo[extraid][jSexo] == -1) ShowPlayerDialog(extraid,SEXO, DIALOG_STYLE_LIST,"¿Eres hombre o mujer?","Hombre\nMujer","Seleccionar","Salir");
				else
				{
				    JugadorLogeado[extraid] = 1;
					SpawnPlayer(extraid);
					LoadVehicles(extraid);
				}
			}
			else/* if(!Rows)*/
			{
				if(IsPlayerConnected(extraid))
				{
				    new xsjsjsjsjjs = random(30);
					switch(xsjsjsjsjjs)
				    {
				        case 3:
						{
				            SetPlayerCameraPos(extraid, 1705.5706, -1873.5565, 14.2863);
							SetPlayerCameraLookAt(extraid, 1706.1556, -1874.3593, 14.2513);
							SetPlayerPos(extraid, 1683.3660,-1863.4912,-13.7529);
				 		}
				 	}
				 	new content[20], plrIP[16];
					cache_get_field_content(0, "Password", content);
					PlayerInfo[extraid][pPassword] = strval(content);
					GetPlayerIp(extraid, plrIP, sizeof(plrIP));
				 	if(ContraVacia[extraid] == 1)	{	ShowPlayerDialog(extraid, LOGIN, DIALOG_STYLE_INPUT,"Entrar","Ingresa tu contraseña","Entrar","Salir");	}
					else if(ContraVacia[extraid] == 0)	{	ShowPlayerDialog(extraid, LOGIN, DIALOG_STYLE_INPUT,"Contraseña Incorrecta - Intenta","Ingresa tu contraseña:","Entrar","Salir");	}
                    ContraVacia[extraid] = 0;
					printf("[A-C]: El jugador %s se equivocó al poner su contraseña. (IP: %s)", PlayerInfo[extraid][NombreTemporal], plrIP);
				}
			}
		}
		case 2:
		{
			if(Rows == 1)
			{
				LimpiarChat(extraid, 25, 1);
				new pName[50]; GetPlayerName(extraid, pName, 50);
				format(string, sizeof(string), "Ingresa tu contraseña:", pName);
				ShowPlayerDialog(extraid, LOGIN, DIALOG_STYLE_PASSWORD,"Esta cuenta está registrada.",string,"Entrar","Salir");
			}
			else if(!Rows)
			{
				LimpiarChat(extraid, 25, 1);
				new pName[50]; GetPlayerName(extraid, pName, 50);
				format(string, sizeof(string), "Ingresa tu contraseña:", pName);
				if(HABILITAR_REGISTRO == 1)
				{
				    new randx = random(24);
				    if(randx == 14)
				    {
				    	SetPlayerCameraPos(extraid, 1705.5706, -1873.5565, 14.2863);
						SetPlayerCameraLookAt(extraid, 1706.1556, -1874.3593, 14.2513);
						SetPosEx(extraid, 1734.4572,-1873.3223,21.6581,262.0000, 0, 0);
					}
					ShowPlayerDialog(extraid, REGISTRO, DIALOG_STYLE_PASSWORD,"Registra una nueva cuenta.",string,"Siguiente","Salir");
				}
				else
				{
				    new registr0[730];
				    format(registr0,sizeof(registr0),"{FFFFFF}Para crear una cuenta en este servidor, necesitas una cuenta nivel 5 o superior en alguno de los\notros servidores de {ff9a00}"SERVER_NAME"{FFFFFF}.\n\nLos pasos a seguir son los siguientes:\n- Ingresar a http://"WEB_ROL" o http://"WEB_ROL2" (Según el servidor que juegues)\nInicia sesión con tu cuenta y cliquea en el botón que se encuentra a la derecha (Registrar cuenta en "SERVER_NAME3" S3)\n\n\n----------------------------------------------------------------------\nEn caso de no tener cuenta en los otros servidores, puedes crear una ingresando a\n{ff9a00}http://"WEB_ROL2"/nuevo.php{FFFFFF}\n                                                                              ¡TE ESPERAMOS!");
					ShowPlayerDialog(extraid, REGISTROOFF, DIALOG_STYLE_MSGBOX,"Registro privado",registr0,"Salir","");
				}
			}
		}
		case 6:
		{
			if(Rows >= 1)
			{
				if(Rows > 50) Rows = 50;
				new type, queryString[180];
				for(new i = 0; i < Rows ; i++)
				{
					ActionQueue[i][qID] = cache_get_field_content_int(0, "ID");
					ActionQueue[i][qfaccj] = cache_get_field_content_int(0, "faccj");
					cache_get_field_content(0, "user_ses", ActionQueue[i][quser_ses], Conecction, 23);
					cache_get_field_content(0, "jugname", ActionQueue[i][qjugname], Conecction, 23);
					cache_get_field_content(0, "queue_params", ActionQueue[i][qparams], Conecction, 23);
					ActionQueue[i][qstatus] = cache_get_field_content_int(0, "status");
					type = cache_get_field_content_int(0, "type");
					ActionQueue[i][NRango] = cache_get_field_content_int(0, "NRango");
					if(ActionQueue[i][qstatus] == 0)
					{
						new qString[200];
						switch(type)
						{
							case 1: // Aceptar invitacion
							{
								ActionQueue[i][qstatus] = 1;
								format(qString, 128, "jugadorinvitacion %d %s", ActionQueue[i][qfaccj], ActionQueue[i][quser_ses]);
								CustomProc(qString);
							}
							case 2: // Cambiar de rango
							{
								if(!strcmp(ActionQueue[i][qparams], "nada", true))
								{
									ActionQueue[i][qstatus] = 2;
								}
								new gRank;
								sscanf(ActionQueue[i][qparams], "p<|>d", gRank);
								format(qString, 128, "gMemberRank %d %d %s %s", ActionQueue[i][qfaccj], gRank, ActionQueue[i][quser_ses], ActionQueue[i][qjugname]);
								CustomProc(qString);
							}
							case 3: // Expulsar
							{
								ActionQueue[i][qstatus] = 1;
								format(qString, 128, "expulsarmiembro %d %s %s", ActionQueue[i][qfaccj], ActionQueue[i][quser_ses], ActionQueue[i][qjugname]);
								CustomProc(qString);
							}
							case 4: // Abandonar banda
							{
								ActionQueue[i][qstatus] = 1;
								format(qString, 128, "abandonarbanda %d %s", ActionQueue[i][qfaccj], ActionQueue[i][quser_ses]);
								CustomProc(qString);
							}
							case 5: // Cargar banda
							{
								ActionQueue[i][qstatus] = 1;
								format(qString, 128, "recargarbandas");
								CustomProc(qString);
							}
							case 7: // Cambiar nombre rango
							{
								ActionQueue[i][qstatus] = 1;
								format(qString, 128, "gRankName %s %d %d %s",ActionQueue[i][quser_ses], ActionQueue[i][qfaccj], ActionQueue[i][NRango],ActionQueue[i][qparams]);
								CustomProc(qString);
							}
							case 8: // ban jugador
						    {
						    	ActionQueue[i][qstatus] = 1;
						    	format(qString, 128, "banpanel %s %s %s",ActionQueue[i][quser_ses],ActionQueue[i][qjugname],ActionQueue[i][qparams]);
			        			CustomProc(qString);
						    }
						    case 9: //mutear panel 1
						    {
						    	ActionQueue[i][qstatus] = 1;
						    	format(qString, 128, "mutepanelx %s %s %s %d",ActionQueue[i][quser_ses],ActionQueue[i][qjugname],ActionQueue[i][qparams],ActionQueue[i][NRango]);
			        			CustomProc(qString);
						    }
						    case 10: //mutear panel 2
						    {
						    	ActionQueue[i][qstatus] = 1;
						    	format(qString, 128, "mutepanely %s %s %s %d",ActionQueue[i][quser_ses],ActionQueue[i][qjugname],ActionQueue[i][qparams],ActionQueue[i][NRango]);
			        			CustomProc(qString);
						    }
						    case 11: //mutear panel 3
						    {
						    	ActionQueue[i][qstatus] = 1;
						    	format(qString, 128, "mutepanelz %s %s %s %d",ActionQueue[i][quser_ses],ActionQueue[i][qjugname],ActionQueue[i][qparams],ActionQueue[i][NRango]);
			        			CustomProc(qString);
						    }
                        	case 12: // Cambiar nombre rango
							{
								ActionQueue[i][qstatus] = 1;
								format(qString, 128, "agregarrango %s %d %d %s",ActionQueue[i][quser_ses], ActionQueue[i][qfaccj], ActionQueue[i][NRango],ActionQueue[i][qparams]);
								CustomProc(qString);
							}
							case 13: // Dar moneda desde el panel
							{
								ActionQueue[i][qstatus] = 1;
								format(qString, 128, "darmoneda %s %d %d %s",ActionQueue[i][quser_ses], ActionQueue[i][qfaccj], ActionQueue[i][NRango],ActionQueue[i][qparams]);
								CustomProc(qString);
							}

						}
						mysql_format(Conecction, queryString, 128, "DELETE FROM `action_queue` WHERE `ID` = '%d'", ActionQueue[i][qID]);
						mysql_tquery(Conecction, queryString, "");
					}
				}
			}
		}
		//
		case 7:
		{
			new playerid = extraid;
			if(Rows < 1)
			{
				new Query[1024], pName[24], day, month, year;
				getdate(year,month,day);
				GetPlayerName(playerid,pName,24);

				new rplName[32];
				GetPlayerName(playerid, rplName, sizeof(rplName));
				for(new i = 0; i < strlen(rplName); i++)
				{
					if(rplName[i] == '_')
					{
						rplName[i] = ' ';
					}
				}
				new Pais[30],dayR,monthR,yearR,FechaRegistro[30];
				getdate(yearR, monthR, dayR);
				GetPlayerCountry(playerid, Pais, sizeof(Pais));
				format(PlayerInfo[playerid][pPaisRegistro], 32, "%s", Pais);
				format(FechaRegistro, sizeof(FechaRegistro), "%d/%d/%d", dayR,monthR,yearR);

				format(Query, sizeof(Query), "INSERT INTO `usuarios` (username, password,posX,posY,posZ,vida,Registro,Email,EMS,Edad,Pais_Registro,Registro_U,username_low) VALUES ('%s',md5('%s'),'1715.5295','-1900.1307','13.5664','95','%02d/%02d/%02d','%s',1,%d,'%s','%s','ninguno')",PlayerInfo[playerid][NombreTemporal],PlayerInfo[playerid][pPassword],day,month,year,PlayerInfo[playerid][pEmail],PlayerInfo[playerid][jEdad],PlayerInfo[playerid][pPaisRegistro],FechaRegistro);
				mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);

				//LOGROS
				format(Query, sizeof(Query), "INSERT INTO `achievements` (Nombre_Jugador,Tipo,Etapa,Completado,Titulo,Descripcion) VALUES ('%s','1','1','1','Nivel','Alcanza el nivel %d')", PlayerInfo[playerid][NombreTemporal], PlayerInfo[playerid][@Nivel]);
				mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);

				//Perfiles
				format(Query, sizeof(Query), "INSERT INTO `perfiles` (Nombre,Pais_Actual,Avatar,Color) VALUES ('%s','%s','32','1')", PlayerInfo[playerid][NombreTemporal],Pais);
				mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);

				//FIN LOGROS
				format(Query, sizeof(Query), "INSERT INTO `"PREFIX_DB"members` (member_name, passwd, real_name, date_registered, id_group, email_address,buddy_list, is_activated) VALUES ('%s', SHA1(CONCAT(LOWER('%s'), '%s')),'%s',UNIX_TIMESTAMP(now()), 0, '%s','0', '0')",PlayerInfo[playerid][NombreTemporal],PlayerInfo[playerid][NombreTemporal],PlayerInfo[playerid][pPassword],rplName,PlayerInfo[playerid][pEmail]);
				mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);

				switch(PlayerInfo[playerid][jSexo])
				{
					case 2:
					{
						format(Query, 200, "UPDATE `usuarios` SET `Skin`='11',`Sexo`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][jSexo],PlayerInfo[playerid][NombreTemporal]);
						mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
					}
					default:
					{
						format(Query, 200, "UPDATE `usuarios` SET `Skin`='250',`Sexo`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][jSexo],PlayerInfo[playerid][NombreTemporal]);
						mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
					}
				}

				new query[1000];
				Usuarios[Cantidad]++;
				format(query, 200, "UPDATE `registros` SET `Cantidad`='%d'",Usuarios[Cantidad]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

				format(query, 200, "UPDATE `"PREFIX_DB"settings` SET `Value`='%s' WHERE `Variable`='latestRealName'",	PlayerInfo[playerid][NombreTemporal]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

				format(query, 200, "UPDATE `"PREFIX_DB"settings` SET `Value`='%d' WHERE `Variable`='totalMembers'",	Usuarios[Cantidad]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

				format(query, 200, "UPDATE `"PREFIX_DB"settings` SET `Value`='%d' WHERE `Variable`='latestMember'",	Usuarios[Cantidad]);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

				format(Query, sizeof(Query), "SELECT * FROM `usuarios` WHERE `Username` = '%s' AND `Password` = md5('%s')", PlayerInfo[playerid][NombreTemporal], PlayerInfo[playerid][pPassword]);
				mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 1, playerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_ORANGE, "Ya hay una cuenta registrada con ese email.");
				SendClientMessage(playerid, COLOR_ORANGE, "Para recuperar tu contraseña, ingresa a http://"WEB_ROL"/perdida.php");
		    	SetTimerEx("KickXD",500,0,"d",playerid);
			}
		}
	}
	return 1;
}
public OnPlayerUpdate(playerid)
{
	if(!IsPlayerNPC(playerid))
	{
	 	new player_state = GetPlayerState(playerid);
		if(player_state == PLAYER_STATE_SPAWNED || player_state == PLAYER_STATE_SPECTATING) return 1;
		new current_gettime = gettime(),Float:player_health, Float:player_armour, player_action = GetPlayerSpecialAction(playerid)/*,player_weapon = GetPlayerWeapon(playerid)*/;
		GetPlayerHealth(playerid, player_health);
		GetPlayerArmour(playerid, player_armour);
		if(player_action == SPECIAL_ACTION_USEJETPACK && PlayerInfo[playerid][pAdmin] != ADMIN_LEVEL_ADM)
		{
			if(current_gettime > PlayerAnticheat[playerid][@Imunidad])
			{
				new string[128];
				format(string, 128,"El jugador {FF3300}%s(ID: %d){FFFFFF} fue baneado por el anticheat. Razón: {FF3300}Volar con cheats.",PlayerName(playerid),playerid);
				SendClientMessageToAll(-1,string);
				SetTimerEx("KickXD",500,0,"d",playerid);
				return 0;
			}
		}
		new Float:dis, Float:vehicle_health, vehicleid = GetPlayerVehicleID(playerid);
		if(!vehicleid) dis = GetPlayerDistanceFromPoint(playerid, PlayerInfo[playerid][@X], PlayerInfo[playerid][@Y], PlayerInfo[playerid][@Z]);
		else
		{
			new Float:vposx,Float:vposy,Float:vposz;
			GetVehiclePos(vehicleid,vposx,vposy,vposz);
			dis = GetVehicleDistanceFromPoint(vehicleid, vposx, vposy, vposz);
			GetVehicleHealth(vehicleid, vehicle_health);
		}
		if(current_gettime > PlayerAnticheat[playerid][@Imunidad])
		{
			if(current_gettime > PlayerAnticheat[playerid][@Imunidad])
			{
				new Float:x2,Float:y2,Float:z2;
				GetPlayerPos(playerid,x2,y2,z2);
				if(floatabs(dis) > 80.0 && x2 > -97.0)
				{
					if(JugadorLogeado[playerid] == 1)
					{
						if(player_state != PLAYER_STATE_PASSENGER && Curando[playerid] == 0 && PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_DUDAS && TiempoEntrada[playerid] == 0 && Muriendo[playerid] == 0 && PlayerInfo[playerid][pTiempoJailS] == 0 && PlayerInfo[playerid][pTiempoJail] == 0 && TiempoEntrada[playerid] == 0 && Muriendo[playerid] == 0)
						{
							new string[128];
							if(dis > 1000) format(string, sizeof(string),"* [PRUEBA] TP - J: %s(ID:%d) - D: %f - N: %d",PlayerName(playerid),playerid,dis,PlayerInfo[playerid][@Nivel]);
							else if (dis < 1000) format(string, sizeof(string),"[PRUEBA] TELEPORT - Jugador: %s(ID:%d) - Distancia: %f - Nivel: %d",PlayerName(playerid),playerid,dis,PlayerInfo[playerid][@Nivel]);
							MensajeAdmin(COLOR_SAMP,string, ADMIN_LEVEL_BANEOS);
						}
					}
				}
			}
		}
		switch(player_state)
		{
			case PLAYER_STATE_DRIVER:
			{
				new Float:Vehicle_Speed = GetVehicleSpeed(vehicleid);
				if(current_gettime > PlayerAnticheat[playerid][@Imunidad])
				{
					new Float:x,Float:y,Float:z;
					GetVehiclePos(vehicleid,x,y,z);
					if(Vehicle_Speed < 20.0 && floatabs(dis) >= 10.0 && x > -97.0)
					{
						new string[128];
						format(string, 128,"[PRUEBA] Jugador: %s (ID:%d) Distancia: %f / Vehículo: %d / Ping: %d",PlayerName(playerid),playerid,dis, vehicleid, GetPlayerPing(playerid));
						MensajeAdmin(COLOR_SAMP,string,ADMIN_LEVEL_BANEOS);
					}
				}
			}
			case PLAYER_STATE_ONFOOT:
			{
				if(current_gettime > PlayerAnticheat[playerid][@Imunidad])
				{
					new speed = GetPlayerSpeed(playerid);
					if(speed > 1000) Kick(playerid);
					if(GetPlayerSurfingVehicleID(playerid) == INVALID_VEHICLE_ID && GetPlayerSurfingObjectID(playerid) == INVALID_OBJECT_ID && player_action != SPECIAL_ACTION_ENTER_VEHICLE && player_action != SPECIAL_ACTION_EXIT_VEHICLE && TiempoEntrada[playerid] == 0)
					{
						if(floatabs(dis) > 6.0 && PlayerInfo[playerid][@X] > -97.0)
						{
						    if(GetPlayerAnimationIndex(playerid) == 1196 || GetPlayerAnimationIndex(playerid) == 1231 || GetPlayerAnimationIndex(playerid) == 1141)
						    {
							    if(PlayerAnticheat[playerid][@Teleport] == 0 && PlayerInfo[playerid][pAdmin] == ADMIN_LEVEL_USER)
							    {
									new string[128];
									if(PlayerInfo[playerid][@Nivel] == 1) format(string, 128,"Jugador: %s (ID:%d) Distancia: %f / Animación: %d / Ping: %d",PlayerName(playerid),playerid,dis, GetPlayerAnimationIndex(playerid), GetPlayerPing(playerid));
									else format(string, 128,"[PRUEBA] Jugador: %s (ID:%d) Distancia: %f / Animación: %d / Ping: %d",PlayerName(playerid),playerid,dis, GetPlayerAnimationIndex(playerid), GetPlayerPing(playerid));
									MensajeAdmin(COLOR_SAMP,string,3);
								}
							}
						}
					}
				}
			}
		}
	 	IsPlayerSurfingAVehicle(playerid);
		if(PlayerInfo[playerid][jDinero] != GetPlayerMoney(playerid))
		{
		    ResetPlayerMoney(playerid);
			GivePlayerMoney(playerid,PlayerInfo[playerid][jDinero]);
		}
		if(VariableCaido[playerid] != 0) SetPlayerArmedWeapon(playerid, 0);
		if(TieneEncargo[playerid] > 0 && PlayerInfo[playerid][pWP2] == 23  && Encargo[TieneEncargo[playerid]][Tiene9mm] == 0)
		{
			Encargo[TieneEncargo[playerid]][Tiene9mm] = 1;
			TextDrawSetString(MisionCriminal[TieneEncargo[playerid]], "~g~Reªnete~w~ con tu colega en el punto marcado.");
		}
	    if(GetPlayerSpeed(playerid) > 170 && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_ONFOOT))
	    {
		    new string[256];
			format(string, sizeof(string), "{CE381B}%s(ID: %d){FFFFFF}posible[(%d)Cheat de aceleración].",PlayerName(playerid),playerid,GetPlayerSpeed(playerid));
	    }
	    if(GetPlayerWeapon(playerid) == 38 && PlayerInfo[playerid][pAdmin] <= ADMIN_LEVEL_GLOBAL)
		{
		    new string[256];
			format(string, sizeof(string), "El jugador {FF3300}%s(ID: %d){FFFFFF} fue baneado por el anticheat.  Razón: {FF3300}Cheat de armas{FFFFFF} (38).",PlayerName(playerid),playerid);
			SendClientMessageToAll(-1, string);
			SetTimerEx("KickXD",500,0,"d",playerid);
	    }
		if(GetPlayerWeapon(playerid) == 4)
		{
			new Animacionn[32], Libreriaa[32];
	    	GetAnimationName(GetPlayerAnimationIndex(playerid), Libreriaa, sizeof(Libreriaa), Animacionn, sizeof(Animacionn));
	    	if(strcmp(Libreriaa,"KNIFE") == 0 && strcmp(Animacionn,"KILL_PARTIAL") == 0)
	    	{
	        	SetPlayerArmedWeapon(playerid, 0);
	        	ClearAnimations(playerid);
		 	}
		}
		PlayerInfo[playerid][@Salud] = player_health;
		PlayerInfo[playerid][@Chaleco] = player_armour;
		GetPlayerPos(playerid, PlayerInfo[playerid][@X], PlayerInfo[playerid][@Y], PlayerInfo[playerid][@Z]);

		if(vehicleid)
    	{
    	    if(PlayerInfo[playerid][pDuty] == 0 && (SAPD(vehicleid) || HELISAPD(vehicleid) || MOTOSAPD(vehicleid)) && player_state != PLAYER_STATE_PASSENGER) Kick(playerid);
    	    if(PlayerInfo[playerid][pTrabajo] != T_Camionero && PlayerInfo[playerid][pTrabajo2] != T_Camionero && CAMION(vehicleid) && player_state != PLAYER_STATE_PASSENGER) Kick(playerid);
    	    if(PlayerInfo[playerid][pTrabajo] != T_Taxista && PlayerInfo[playerid][pTrabajo2] != T_Taxista && TAXI(vehicleid) && player_state != PLAYER_STATE_PASSENGER) Kick(playerid);
    	}
    }
	return 1;
}

public CargarAutos(resultid, extraid, ConnectionHandle)
{
	new Rows, Field;
	if(resultid != 0)
	{
		cache_get_data(Rows, Field);
	}
	switch(resultid)
	{
		case 3:
		{
			for( new i = 19; i < Rows; i++)
			{

				new content[39], stringinfovehiculo[70];
				cache_get_field_content(i, "propietario",			VehiculosInfo[i][vpropietario]);
				cache_get_field_content(i, "precio", content);		VehiculosInfo[i][vprecio] = strval(content);
				cache_get_field_content(i, "modelo", content);		VehiculosInfo[i][vmodelo] = strval(content);
				cache_get_field_content(i, "moneda", content);		VehiculosInfo[i][vmoneda] = strval(content);
				cache_get_field_content(i, "x", content);			VehiculosInfo[i][vx] = floatstr(content);
				cache_get_field_content(i, "y", content);			VehiculosInfo[i][vy] = floatstr(content);
				cache_get_field_content(i, "z", content);			VehiculosInfo[i][vz] = floatstr(content);
				cache_get_field_content(i, "a", content);			VehiculosInfo[i][va] = floatstr(content);
				cache_get_field_content(i, "color1", content);		VehiculosInfo[i][vcolor1] = strval(content);
				cache_get_field_content(i, "color2", content);		VehiculosInfo[i][vcolor2] = strval(content);
				cache_get_field_content(i, "comprable", content);	VehiculosInfo[i][vcomprable] = strval(content);
				cache_get_field_content(i, "faccion", content);		VehiculosInfo[i][vfaccion] = strval(content);
				cache_get_field_content(i, "trabajo", content);		VehiculosInfo[i][vtrabajo] = strval(content);
				VehiculosInfo[i][vID] = i;
				CreateVehicle(VehiculosInfo[i][vmodelo], VehiculosInfo[i][vx], VehiculosInfo[i][vy], VehiculosInfo[i][vz], VehiculosInfo[i][va], VehiculosInfo[i][vcolor1], VehiculosInfo[i][vcolor2], 900);
				if(VehiculosInfo[i][vcomprable] == 1)
   				{
					switch(VehiculosInfo[i][vmoneda])
					{
						case 0:
						{
							format(stringinfovehiculo, sizeof(stringinfovehiculo), "{DBED16}%s\nPrecio: $%d", NombreAuto[VehiculosInfo[i][vmodelo]-400],VehiculosInfo[i][vprecio]);
							CreateDynamic3DTextLabel(stringinfovehiculo,0xDBED16FF,0.0,0.0,1.0,10.0,INVALID_PLAYER_ID,VehiculosInfo[i][vID], 1, 0,0,-1, 100.0);
						}
						case 1:
						{
							format(stringinfovehiculo, sizeof(stringinfovehiculo), "{DBED16}%s\nPrecio: {DBED16}%d "SERVER_COIN"", NombreAuto[VehiculosInfo[i][vmodelo]-400],VehiculosInfo[i][vprecio]);
							CreateDynamic3DTextLabel(stringinfovehiculo,0xDBED16FF,0.0,0.0,1.0,10.0,INVALID_PLAYER_ID,VehiculosInfo[i][vID], 1, 0,0,-1, 100.0);
						}
					}
				}
			}
		}
	}
	return 1;
}
public cargar_logros(resultid, extraid, ConnectionHandle)
{
    new Rows, Field;
    if(resultid != 0) {
        cache_get_data(Rows, Field);
    }
    switch(resultid) {
        case 1: return 1;
        case 2:
        {
			if(Rows == 1) {
			    PlayerInfo[extraid][pSobreRuedas] =	cache_get_field_content_int(0, "Completado");
				return 1;
			}
			else return PlayerInfo[extraid][pSobreRuedas] = 0;
		}
        case 3:
        {
			if(Rows == 1) {
			    PlayerInfo[extraid][pAutomedicado] = cache_get_field_content_int(0, "Completado");
			    PlayerInfo[extraid][pRemedios] = cache_get_field_content_int(0, "Progreso");
			    Logros[extraid][Medicamentos] = cache_get_field_content_int(0, "Etapa");
				return 1;
			}
			else return PlayerInfo[extraid][pAutomedicado] = 0;
		}
        case 4:
        {
			if(Rows == 1) {
			    PlayerInfo[extraid][pAdicto] = cache_get_field_content_int(0, "Completado");
			    PlayerInfo[extraid][pCracks] = cache_get_field_content_int(0, "Progreso");
			    Logros[extraid][Crack] = cache_get_field_content_int(0, "Etapa");
				return 1;
			}
			else return PlayerInfo[extraid][pAdicto] = 0;
		}
		case 5:
        {
			if(Rows == 1) {
			    PlayerInfo[extraid][pTortuga] =	cache_get_field_content_int(0, "Completado");
				return 1;
			}
			else return PlayerInfo[extraid][pTortuga] = 0;
		}
        case 6:
        {
			if(Rows == 1) {
			    PlayerInfo[extraid][pMarihuanero] =	cache_get_field_content_int(0, "Completado");
			    PlayerInfo[extraid][pPorros] = cache_get_field_content_int(0, "Progreso");
			    Logros[extraid][Porros] = cache_get_field_content_int(0, "Etapa");
				return 1;
			}
			else return PlayerInfo[extraid][pMarihuanero] = 0;
		}
		case 7:
        {
			if(Rows == 1) {
			    PlayerInfo[extraid][pPilotoExperto] =	cache_get_field_content_int(0, "Completado");
			    PlayerInfo[extraid][pGanadas] = cache_get_field_content_int(0, "Progreso");
			    Logros[extraid][Carreras] = cache_get_field_content_int(0, "Etapa");
				return 1;
			}
			else return PlayerInfo[extraid][pPilotoExperto] = 0;
		}
		case 8:
        {
			if(Rows == 1) {
			    PlayerInfo[extraid][pNegocioRedondo] =	cache_get_field_content_int(0, "Completado");
			    PlayerInfo[extraid][pCosecha] = cache_get_field_content_int(0, "Progreso");
			    Logros[extraid][Marihuana] = cache_get_field_content_int(0, "Etapa");
				return 1;
			}
			else return PlayerInfo[extraid][pNegocioRedondo] = 0;
		}
		case 9:
        {
			if(Rows == 1) {
			    PlayerInfo[extraid][pCasa] = cache_get_field_content_int(0, "Completado");
				return 1;
			}
			else return PlayerInfo[extraid][pCasa] = 0;
		}
		case 10:
        {
			if(Rows == 1) {
			    PlayerInfo[extraid][pOficina] = cache_get_field_content_int(0, "Completado");
				return 1;
			}
			else return PlayerInfo[extraid][pOficina] = 0;
		}
		case 11:
        {
			if(Rows == 1) {
			    PlayerInfo[extraid][pRestaurante] = cache_get_field_content_int(0, "Completado");
				return 1;
			}
			else return PlayerInfo[extraid][pRestaurante] = 0;
		}
		case 12:
        {
			if(Rows == 1) {
			    PlayerInfo[extraid][pCerrajero] = cache_get_field_content_int(0, "Completado");
			    PlayerInfo[extraid][pForzadas] = cache_get_field_content_int(0, "Progreso");
			    Logros[extraid][Cerraduras] = cache_get_field_content_int(0, "Etapa");
				return 1;
			}
			else return PlayerInfo[extraid][pCerrajero] = 0;
		}
		case 13:
        {
			if(Rows == 1) {
			    PlayerInfo[extraid][pMedico] = cache_get_field_content_int(0, "Completado");
			    PlayerInfo[extraid][pReanimados] = cache_get_field_content_int(0, "Progreso");
			    Logros[extraid][Salvados] = cache_get_field_content_int(0, "Etapa");
				return 1;
			}
			else return PlayerInfo[extraid][pMedico] = 0;
		}
		case 14:
        {
			if(Rows == 1) {
			    PlayerInfo[extraid][pFiestaCerveza] = cache_get_field_content_int(0, "Completado");
			    PlayerInfo[extraid][pCervezas] = cache_get_field_content_int(0, "Progreso");
				return 1;
			}
			else return PlayerInfo[extraid][pFiestaCerveza] = 0;
		}
		case 15:
        {
			if(Rows == 1) {
			    PlayerInfo[extraid][pTrucoTrato] = cache_get_field_content_int(0, "Completado");
			    PlayerInfo[extraid][PuestosConseguidos] = cache_get_field_content_int(0, "Progreso");
				return 1;
			}
			else return PlayerInfo[extraid][pTrucoTrato] = 0;
		}
		case 16:
        {
			if(Rows == 1) {
			    PlayerInfo[extraid][pHechizado] = cache_get_field_content_int(0, "Completado");
				return 1;
			}
			else return PlayerInfo[extraid][pHechizado] = 0;
		}
		case 17:
        {
			if(Rows == 1) {
			    PlayerInfo[extraid][pLogroPutiClub] = cache_get_field_content_int(0, "Completado");
				return 1;
			}
			else return PlayerInfo[extraid][pLogroPutiClub] = 0;
		}
	}
    return 1;
}

public CargarPerfiles(resultid,extraid,ConnectionHandle)
{
	new Rows, Field, content[30];
	if(resultid != 0) {
	    cache_get_data(Rows,Field);
    }
    cache_get_field_content(0, "Pais_Actual", content);		strmid(PlayerInfo[extraid][pPaisRegistro], content, 0, strlen(content), 32);
}

public L_Vehicles(resultid, extraid, ConnectionHandle)
{
    new Rows, Field, content[29];
    if(resultid != 0) {
        cache_get_data(Rows, Field);
    }
    switch(resultid) {
	    case 1: {
			if(Rows == 1) {
			    cache_get_field_content(0, "EstacionadoX", content);		PlayerInfo[extraid][pOX] = floatstr(content);
				cache_get_field_content(0, "EstacionadoY", content);		PlayerInfo[extraid][pOY] = floatstr(content);
				cache_get_field_content(0, "EstacionadoZ", content);		PlayerInfo[extraid][pOZ] = floatstr(content);
				cache_get_field_content(0, "EstacionadoA", content);		PlayerInfo[extraid][pOA] = floatstr(content);
				cache_get_field_content(0, "VE1", content);					PlayerInfo[extraid][VE1] = strval(content);
				cache_get_field_content(0, "VE2", content);					PlayerInfo[extraid][VE2] = strval(content);
				cache_get_field_content(0, "VE3", content);					PlayerInfo[extraid][VE3] = strval(content);
				cache_get_field_content(0, "VE4", content);					PlayerInfo[extraid][VE4] = strval(content);
				cache_get_field_content(0, "vMoneda", content);				PlayerInfo[extraid][vMonedaa] = strval(content);
				cache_get_field_content(0, "Modelo", content);				PlayerInfo[extraid][vModelo] = strval(content);
				cache_get_field_content(0, "Combustible", content);			PlayerInfo[extraid][vGas] = strval(content);
				cache_get_field_content(0, "Interior", content);			PlayerInfo[extraid][vinterior] = strval(content);
				cache_get_field_content(0, "VW", content);					PlayerInfo[extraid][vvw] = strval(content);
				cache_get_field_content(0, "Color1", content);				PlayerInfo[extraid][vColor1] = strval(content);
				cache_get_field_content(0, "Color2", content);				PlayerInfo[extraid][vColor2] = strval(content);
				cache_get_field_content(0, "Vida", content);				PlayerInfo[extraid][pVidaV] = floatstr(content);
				cache_get_field_content(0, "vBaul", content);				PlayerInfo[extraid][vBaul] = strval(content);
				cache_get_field_content(0, "vBaul2", content);				PlayerInfo[extraid][vBaul2] = strval(content);
				cache_get_field_content(0, "vBaul3", content);				PlayerInfo[extraid][vBaul3] = strval(content);
				cache_get_field_content(0, "vBaul4", content);				PlayerInfo[extraid][vBaul4] = strval(content);
				cache_get_field_content(0, "vBaul5", content);				PlayerInfo[extraid][vBaul5] = strval(content);
				cache_get_field_content(0, "vBaul6", content);				PlayerInfo[extraid][vBaul6] = strval(content);
				cache_get_field_content(0, "vBaul7", content);				PlayerInfo[extraid][vBaul7] = strval(content);
				cache_get_field_content(0, "vBaul8", content);				PlayerInfo[extraid][vBaul8] = strval(content);
				cache_get_field_content(0, "vBaul9", content);				PlayerInfo[extraid][vBaul9] = strval(content);
				cache_get_field_content(0, "vBaul10", content);				PlayerInfo[extraid][vBaul10] = strval(content);
				cache_get_field_content(0, "PaintJob", content);			PlayerInfo[extraid][vPJ] = strval(content);
				cache_get_field_content(0, "Componentes0", content);		PlayerInfo[extraid][vComponentes0] = strval(content);
				cache_get_field_content(0, "Componentes1", content);		PlayerInfo[extraid][vComponentes1] = strval(content);
				cache_get_field_content(0, "Componentes2", content);		PlayerInfo[extraid][vComponentes2] = strval(content);
				cache_get_field_content(0, "Componentes3", content);		PlayerInfo[extraid][vComponentes3] = strval(content);
				cache_get_field_content(0, "Componentes4", content);		PlayerInfo[extraid][vComponentes4] = strval(content);
				cache_get_field_content(0, "Componentes5", content);		PlayerInfo[extraid][vComponentes5] = strval(content);
				cache_get_field_content(0, "Componentes6", content);		PlayerInfo[extraid][vComponentes6] = strval(content);
				cache_get_field_content(0, "Componentes7", content);		PlayerInfo[extraid][vComponentes7] = strval(content);
				cache_get_field_content(0, "Componentes8", content);		PlayerInfo[extraid][vComponentes8] = strval(content);
				cache_get_field_content(0, "Componentes9", content);		PlayerInfo[extraid][vComponentes9] = strval(content);
				cache_get_field_content(0, "Componentes10", content);		PlayerInfo[extraid][vComponentes10] = strval(content);
				cache_get_field_content(0, "Componentes11", content);		PlayerInfo[extraid][vComponentes11] = strval(content);
				cache_get_field_content(0, "Componentes12", content);		PlayerInfo[extraid][vComponentes12] = strval(content);
				cache_get_field_content(0, "Componentes13", content);		PlayerInfo[extraid][vComponentes13] = strval(content);
				cache_get_field_content(0, "Precio", content);				PlayerInfo[extraid][vPrecio] = strval(content);
				cache_get_field_content(0, "X", content);					PlayerInfo[extraid][vX] = floatstr(content);
				cache_get_field_content(0, "Y", content);					PlayerInfo[extraid][vY] = floatstr(content);
				cache_get_field_content(0, "Z", content);					PlayerInfo[extraid][vZ] = floatstr(content);
				cache_get_field_content(0, "A", content);					PlayerInfo[extraid][vA] = floatstr(content);
				cache_get_field_content(0, "O_VW", content);				PlayerInfo[extraid][vOvw] = strval(content);
				cache_get_field_content(0, "Seguro", content);				PlayerInfo[extraid][vSeguro] = strval(content);
				cache_get_field_content(0, "O_Interior", content);			PlayerInfo[extraid][vOinterior] = strval(content);
				cache_get_field_content(0, "Patente", content);				format(PlayerInfo[extraid][vpatente],10,"%s",content);
				cache_get_field_content(0, "vAlarma", content);             PlayerInfo[extraid][vAlarma] = strval(content);
				cache_get_field_content(0, "Traba", content);				PlayerInfo[extraid][vTraba] = strval(content);
				cache_get_field_content(0, "Estado_Alarma", content);		alarma[autos[extraid]] = strval(content);   PlayerInfo[extraid][vAAlarma] = strval(content);
				cache_get_field_content(0, "Estado_Seguro", content);		bloqueado[autos[extraid]] = strval(content);    PlayerInfo[extraid][vSeguro] = strval(content);
				return 1;
			}
			else return 1;
		}
        case 2: {
			if(Rows == 1) {
			    cache_get_field_content(0, "EstacionadoX", content);		PlayerInfo[extraid][pOX2] = floatstr(content);
				cache_get_field_content(0, "EstacionadoY", content);		PlayerInfo[extraid][pOY2] = floatstr(content);
				cache_get_field_content(0, "EstacionadoZ", content);		PlayerInfo[extraid][pOZ2] = floatstr(content);
				cache_get_field_content(0, "EstacionadoA", content);		PlayerInfo[extraid][pOA2] = floatstr(content);
				cache_get_field_content(0, "VE1", content);					PlayerInfo[extraid][V2E1] = strval(content);
				cache_get_field_content(0, "VE2", content);					PlayerInfo[extraid][V2E2] = strval(content);
				cache_get_field_content(0, "VE3", content);					PlayerInfo[extraid][V2E3] = strval(content);
				cache_get_field_content(0, "VE4", content);					PlayerInfo[extraid][V2E4] = strval(content);
				cache_get_field_content(0, "vMoneda", content);				PlayerInfo[extraid][v2Monedaa] = strval(content);
				cache_get_field_content(0, "Modelo", content);				PlayerInfo[extraid][vModelo2] = strval(content);
				cache_get_field_content(0, "Combustible", content);			PlayerInfo[extraid][v2Gas] = strval(content);
				cache_get_field_content(0, "Interior", content);			PlayerInfo[extraid][v2interior] = strval(content);
				cache_get_field_content(0, "VW", content);					PlayerInfo[extraid][v2vw] = strval(content);
				cache_get_field_content(0, "Color1", content);				PlayerInfo[extraid][v2Color1] = strval(content);
				cache_get_field_content(0, "Color2", content);				PlayerInfo[extraid][v2Color2] = strval(content);
				cache_get_field_content(0, "Vida", content);				PlayerInfo[extraid][pVidaV2] = floatstr(content);
				cache_get_field_content(0, "vBaul", content);				PlayerInfo[extraid][v2Baul] = strval(content);
				cache_get_field_content(0, "vBaul2", content);				PlayerInfo[extraid][v2Baul2] = strval(content);
				cache_get_field_content(0, "vBaul3", content);				PlayerInfo[extraid][v2Baul3] = strval(content);
				cache_get_field_content(0, "vBaul4", content);				PlayerInfo[extraid][v2Baul4] = strval(content);
				cache_get_field_content(0, "vBaul5", content);				PlayerInfo[extraid][v2Baul5] = strval(content);
				cache_get_field_content(0, "vBaul6", content);				PlayerInfo[extraid][v2Baul6] = strval(content);
				cache_get_field_content(0, "vBaul7", content);				PlayerInfo[extraid][v2Baul7] = strval(content);
				cache_get_field_content(0, "vBaul8", content);				PlayerInfo[extraid][v2Baul8] = strval(content);
				cache_get_field_content(0, "vBaul9", content);				PlayerInfo[extraid][v2Baul9] = strval(content);
				cache_get_field_content(0, "vBaul10", content);				PlayerInfo[extraid][v2Baul10] = strval(content);
				cache_get_field_content(0, "PaintJob", content);			PlayerInfo[extraid][vPJ2] = strval(content);
				cache_get_field_content(0, "Componentes0", content);		PlayerInfo[extraid][v2Componentes0] = strval(content);
				cache_get_field_content(0, "Componentes1", content);		PlayerInfo[extraid][v2Componentes1] = strval(content);
				cache_get_field_content(0, "Componentes2", content);		PlayerInfo[extraid][v2Componentes2] = strval(content);
				cache_get_field_content(0, "Componentes3", content);		PlayerInfo[extraid][v2Componentes3] = strval(content);
				cache_get_field_content(0, "Componentes4", content);		PlayerInfo[extraid][v2Componentes4] = strval(content);
				cache_get_field_content(0, "Componentes5", content);		PlayerInfo[extraid][v2Componentes5] = strval(content);
				cache_get_field_content(0, "Componentes6", content);		PlayerInfo[extraid][v2Componentes6] = strval(content);
				cache_get_field_content(0, "Componentes7", content);		PlayerInfo[extraid][v2Componentes7] = strval(content);
				cache_get_field_content(0, "Componentes8", content);		PlayerInfo[extraid][v2Componentes8] = strval(content);
				cache_get_field_content(0, "Componentes9", content);		PlayerInfo[extraid][v2Componentes9] = strval(content);
				cache_get_field_content(0, "Componentes10", content);		PlayerInfo[extraid][v2Componentes10] = strval(content);
				cache_get_field_content(0, "Componentes11", content);		PlayerInfo[extraid][v2Componentes11] = strval(content);
				cache_get_field_content(0, "Componentes12", content);		PlayerInfo[extraid][v2Componentes12] = strval(content);
				cache_get_field_content(0, "Componentes13", content);		PlayerInfo[extraid][v2Componentes13] = strval(content);
				cache_get_field_content(0, "Precio", content);				PlayerInfo[extraid][v2Precio] = strval(content);
				cache_get_field_content(0, "X", content);					PlayerInfo[extraid][v2X] = floatstr(content);
				cache_get_field_content(0, "Y", content);					PlayerInfo[extraid][v2Y] = floatstr(content);
				cache_get_field_content(0, "Z", content);					PlayerInfo[extraid][v2Z] = floatstr(content);
				cache_get_field_content(0, "A", content);					PlayerInfo[extraid][v2A] = floatstr(content);
				cache_get_field_content(0, "O_VW", content);				PlayerInfo[extraid][v2Ovw] = strval(content);
				cache_get_field_content(0, "Seguro", content);				PlayerInfo[extraid][vSeguro2] = strval(content);
				cache_get_field_content(0, "O_Interior", content);			PlayerInfo[extraid][v2Ointerior] = strval(content);
				cache_get_field_content(0, "Patente", content);				format(PlayerInfo[extraid][v2patente],10,"%s",content);
				cache_get_field_content(0, "vAlarma", content);             PlayerInfo[extraid][v2Alarma] = strval(content);
				cache_get_field_content(0, "Traba", content);				PlayerInfo[extraid][v2Traba] = strval(content);
				cache_get_field_content(0, "Estado_Alarma", content);		alarma[autos2[extraid]] = strval(content);  PlayerInfo[extraid][vAAlarma2] = strval(content);
				cache_get_field_content(0, "Estado_Seguro", content);		bloqueado[autos2[extraid]] = strval(content);   PlayerInfo[extraid][vSeguro2] = strval(content);
				return 1;
			}
			else return 1;
		}
        case 3: {
			if(Rows == 1) {
			    cache_get_field_content(0, "EstacionadoX", content);		PlayerInfo[extraid][pOX3] = floatstr(content);
				cache_get_field_content(0, "EstacionadoY", content);		PlayerInfo[extraid][pOY3] = floatstr(content);
				cache_get_field_content(0, "EstacionadoZ", content);		PlayerInfo[extraid][pOZ3] = floatstr(content);
				cache_get_field_content(0, "EstacionadoA", content);		PlayerInfo[extraid][pOA3] = floatstr(content);
				cache_get_field_content(0, "VE1", content);					PlayerInfo[extraid][V3E1] = strval(content);
				cache_get_field_content(0, "VE2", content);					PlayerInfo[extraid][V3E2] = strval(content);
				cache_get_field_content(0, "VE3", content);					PlayerInfo[extraid][V3E3] = strval(content);
				cache_get_field_content(0, "VE4", content);					PlayerInfo[extraid][V3E4] = strval(content);
				cache_get_field_content(0, "vMoneda", content);				PlayerInfo[extraid][v3Monedaa] = strval(content);
				cache_get_field_content(0, "Modelo", content);				PlayerInfo[extraid][vModelo3] = strval(content);
				cache_get_field_content(0, "Combustible", content);			PlayerInfo[extraid][v3Gas] = strval(content);
				cache_get_field_content(0, "Interior", content);			PlayerInfo[extraid][v3interior] = strval(content);
				cache_get_field_content(0, "VW", content);					PlayerInfo[extraid][v3vw] = strval(content);
				cache_get_field_content(0, "Color1", content);				PlayerInfo[extraid][v3Color1] = strval(content);
				cache_get_field_content(0, "Color2", content);				PlayerInfo[extraid][v3Color2] = strval(content);
				cache_get_field_content(0, "Vida", content);				PlayerInfo[extraid][pVidaV3] = floatstr(content);
				cache_get_field_content(0, "vBaul", content);				PlayerInfo[extraid][v3Baul] = strval(content);
				cache_get_field_content(0, "vBaul2", content);				PlayerInfo[extraid][v3Baul2] = strval(content);
				cache_get_field_content(0, "vBaul3", content);				PlayerInfo[extraid][v3Baul3] = strval(content);
				cache_get_field_content(0, "vBaul4", content);				PlayerInfo[extraid][v3Baul4] = strval(content);
				cache_get_field_content(0, "vBaul5", content);				PlayerInfo[extraid][v3Baul5] = strval(content);
				cache_get_field_content(0, "vBaul6", content);				PlayerInfo[extraid][v3Baul6] = strval(content);
				cache_get_field_content(0, "vBaul7", content);				PlayerInfo[extraid][v3Baul7] = strval(content);
				cache_get_field_content(0, "vBaul8", content);				PlayerInfo[extraid][v3Baul8] = strval(content);
				cache_get_field_content(0, "vBaul9", content);				PlayerInfo[extraid][v3Baul9] = strval(content);
				cache_get_field_content(0, "vBaul10", content);				PlayerInfo[extraid][v3Baul10] = strval(content);
				cache_get_field_content(0, "PaintJob", content);			PlayerInfo[extraid][vPJ3] = strval(content);
				cache_get_field_content(0, "Componentes0", content);		PlayerInfo[extraid][v3Componentes0] = strval(content);
				cache_get_field_content(0, "Componentes1", content);		PlayerInfo[extraid][v3Componentes1] = strval(content);
				cache_get_field_content(0, "Componentes2", content);		PlayerInfo[extraid][v3Componentes2] = strval(content);
				cache_get_field_content(0, "Componentes3", content);		PlayerInfo[extraid][v3Componentes3] = strval(content);
				cache_get_field_content(0, "Componentes4", content);		PlayerInfo[extraid][v3Componentes4] = strval(content);
				cache_get_field_content(0, "Componentes5", content);		PlayerInfo[extraid][v3Componentes5] = strval(content);
				cache_get_field_content(0, "Componentes6", content);		PlayerInfo[extraid][v3Componentes6] = strval(content);
				cache_get_field_content(0, "Componentes7", content);		PlayerInfo[extraid][v3Componentes7] = strval(content);
				cache_get_field_content(0, "Componentes8", content);		PlayerInfo[extraid][v3Componentes8] = strval(content);
				cache_get_field_content(0, "Componentes9", content);		PlayerInfo[extraid][v3Componentes9] = strval(content);
				cache_get_field_content(0, "Componentes10", content);		PlayerInfo[extraid][v3Componentes10] = strval(content);
				cache_get_field_content(0, "Componentes11", content);		PlayerInfo[extraid][v3Componentes11] = strval(content);
				cache_get_field_content(0, "Componentes12", content);		PlayerInfo[extraid][v3Componentes12] = strval(content);
				cache_get_field_content(0, "Componentes13", content);		PlayerInfo[extraid][v3Componentes13] = strval(content);
				cache_get_field_content(0, "Precio", content);				PlayerInfo[extraid][v3Precio] = strval(content);
				cache_get_field_content(0, "X", content);					PlayerInfo[extraid][v3X] = floatstr(content);
				cache_get_field_content(0, "Y", content);					PlayerInfo[extraid][v3Y] = floatstr(content);
				cache_get_field_content(0, "Z", content);					PlayerInfo[extraid][v3Z] = floatstr(content);
				cache_get_field_content(0, "A", content);					PlayerInfo[extraid][v3A] = floatstr(content);
				cache_get_field_content(0, "O_VW", content);				PlayerInfo[extraid][v3Ovw] = strval(content);
				cache_get_field_content(0, "Seguro", content);				PlayerInfo[extraid][vSeguro3] = strval(content);
				cache_get_field_content(0, "O_Interior", content);			PlayerInfo[extraid][v3Ointerior] = strval(content);
				cache_get_field_content(0, "Patente", content);				format(PlayerInfo[extraid][v3patente],10,"%s",content);
				cache_get_field_content(0, "vAlarma", content);             PlayerInfo[extraid][v3Alarma] = strval(content);
				cache_get_field_content(0, "Traba", content);				PlayerInfo[extraid][v3Traba] = strval(content);
				cache_get_field_content(0, "Estado_Alarma", content);		alarma[autos3[extraid]] = strval(content);  PlayerInfo[extraid][vAAlarma3] = strval(content);
				cache_get_field_content(0, "Estado_Seguro", content);		bloqueado[autos3[extraid]] = strval(content);   PlayerInfo[extraid][vSeguro3] = strval(content);
				return 1;
			}
			else return 1;
		}
        case 4: {
			if(Rows == 1) {
			    cache_get_field_content(0, "EstacionadoX", content);		PlayerInfo[extraid][pOX4] = floatstr(content);
				cache_get_field_content(0, "EstacionadoY", content);		PlayerInfo[extraid][pOY4] = floatstr(content);
				cache_get_field_content(0, "EstacionadoZ", content);		PlayerInfo[extraid][pOZ4] = floatstr(content);
				cache_get_field_content(0, "EstacionadoA", content);		PlayerInfo[extraid][pOA4] = floatstr(content);
				cache_get_field_content(0, "VE1", content);					PlayerInfo[extraid][V4E1] = strval(content);
				cache_get_field_content(0, "VE2", content);					PlayerInfo[extraid][V4E2] = strval(content);
				cache_get_field_content(0, "VE3", content);					PlayerInfo[extraid][V4E3] = strval(content);
				cache_get_field_content(0, "VE4", content);					PlayerInfo[extraid][V4E4] = strval(content);
				cache_get_field_content(0, "vMoneda", content);				PlayerInfo[extraid][v4Monedaa] = strval(content);
				cache_get_field_content(0, "Modelo", content);				PlayerInfo[extraid][vModelo4] = strval(content);
				cache_get_field_content(0, "Combustible", content);			PlayerInfo[extraid][v4Gas] = strval(content);
				cache_get_field_content(0, "Interior", content);			PlayerInfo[extraid][v4interior] = strval(content);
				cache_get_field_content(0, "VW", content);					PlayerInfo[extraid][v4vw] = strval(content);
				cache_get_field_content(0, "Color1", content);				PlayerInfo[extraid][v4Color1] = strval(content);
				cache_get_field_content(0, "Color2", content);				PlayerInfo[extraid][v4Color2] = strval(content);
				cache_get_field_content(0, "Vida", content);				PlayerInfo[extraid][pVidaV4] = floatstr(content);
				cache_get_field_content(0, "vBaul", content);				PlayerInfo[extraid][v4Baul] = strval(content);
				cache_get_field_content(0, "vBaul2", content);				PlayerInfo[extraid][v4Baul2] = strval(content);
				cache_get_field_content(0, "vBaul3", content);				PlayerInfo[extraid][v4Baul3] = strval(content);
				cache_get_field_content(0, "vBaul4", content);				PlayerInfo[extraid][v4Baul4] = strval(content);
				cache_get_field_content(0, "vBaul5", content);				PlayerInfo[extraid][v4Baul5] = strval(content);
				cache_get_field_content(0, "vBaul6", content);				PlayerInfo[extraid][v4Baul6] = strval(content);
				cache_get_field_content(0, "vBaul7", content);				PlayerInfo[extraid][v4Baul7] = strval(content);
				cache_get_field_content(0, "vBaul8", content);				PlayerInfo[extraid][v4Baul8] = strval(content);
				cache_get_field_content(0, "vBaul9", content);				PlayerInfo[extraid][v4Baul9] = strval(content);
				cache_get_field_content(0, "vBaul10", content);				PlayerInfo[extraid][v4Baul10] = strval(content);
				cache_get_field_content(0, "PaintJob", content);			PlayerInfo[extraid][vPJ4] = strval(content);
				cache_get_field_content(0, "Componentes0", content);		PlayerInfo[extraid][v4Componentes0] = strval(content);
				cache_get_field_content(0, "Componentes1", content);		PlayerInfo[extraid][v4Componentes1] = strval(content);
				cache_get_field_content(0, "Componentes2", content);		PlayerInfo[extraid][v4Componentes2] = strval(content);
				cache_get_field_content(0, "Componentes3", content);		PlayerInfo[extraid][v4Componentes3] = strval(content);
				cache_get_field_content(0, "Componentes4", content);		PlayerInfo[extraid][v4Componentes4] = strval(content);
				cache_get_field_content(0, "Componentes5", content);		PlayerInfo[extraid][v4Componentes5] = strval(content);
				cache_get_field_content(0, "Componentes6", content);		PlayerInfo[extraid][v4Componentes6] = strval(content);
				cache_get_field_content(0, "Componentes7", content);		PlayerInfo[extraid][v4Componentes7] = strval(content);
				cache_get_field_content(0, "Componentes8", content);		PlayerInfo[extraid][v4Componentes8] = strval(content);
				cache_get_field_content(0, "Componentes9", content);		PlayerInfo[extraid][v4Componentes9] = strval(content);
				cache_get_field_content(0, "Componentes10", content);		PlayerInfo[extraid][v4Componentes10] = strval(content);
				cache_get_field_content(0, "Componentes11", content);		PlayerInfo[extraid][v4Componentes11] = strval(content);
				cache_get_field_content(0, "Componentes12", content);		PlayerInfo[extraid][v4Componentes12] = strval(content);
				cache_get_field_content(0, "Componentes13", content);		PlayerInfo[extraid][v4Componentes13] = strval(content);
				cache_get_field_content(0, "Precio", content);				PlayerInfo[extraid][v4Precio] = strval(content);
				cache_get_field_content(0, "X", content);					PlayerInfo[extraid][v4X] = floatstr(content);
				cache_get_field_content(0, "Y", content);					PlayerInfo[extraid][v4Y] = floatstr(content);
				cache_get_field_content(0, "Z", content);					PlayerInfo[extraid][v4Z] = floatstr(content);
				cache_get_field_content(0, "A", content);					PlayerInfo[extraid][v4A] = floatstr(content);
				cache_get_field_content(0, "O_VW", content);				PlayerInfo[extraid][v4Ovw] = strval(content);
				cache_get_field_content(0, "Seguro", content);				PlayerInfo[extraid][vSeguro4] = strval(content);
				cache_get_field_content(0, "O_Interior", content);			PlayerInfo[extraid][v4Ointerior] = strval(content);
				cache_get_field_content(0, "Patente", content);				format(PlayerInfo[extraid][v4patente],10,"%s",content);
				cache_get_field_content(0, "vAlarma", content);             PlayerInfo[extraid][v4Alarma] = strval(content);
				cache_get_field_content(0, "Traba", content);				PlayerInfo[extraid][v4Traba] = strval(content);
				cache_get_field_content(0, "Estado_Alarma", content);		alarma[autos4[extraid]] = strval(content);  PlayerInfo[extraid][vAAlarma4] = strval(content);
				cache_get_field_content(0, "Estado_Seguro", content);		bloqueado[autos4[extraid]] = strval(content);   PlayerInfo[extraid][vSeguro4] = strval(content);
				return 1;
			}
			else return 1;
		}
	}
    return 1;
}

public cargarprendas(resultid, extraid, ConnectionHandle)
{
    new Rows, Field, content[29];
    if(resultid != 0)
    {
        cache_get_data(Rows, Field);
    }
    switch(resultid)
    {
        case 1:
        {
			if(Rows == 1)
			{
               	cache_get_field_content(0, "Objeto", content);		PlayerInfo[extraid][pObj] = strval(content);
               	cache_get_field_content(0, "fOffsetX", content);	PlayerInfo[extraid][pfOffsetX] = floatstr(content);
               	cache_get_field_content(0, "fOffsetY", content);	PlayerInfo[extraid][pfOffsetY] = floatstr(content);
               	cache_get_field_content(0, "fOffsetZ", content);	PlayerInfo[extraid][pfOffsetZ] = floatstr(content);
               	cache_get_field_content(0, "fRotX", content);		PlayerInfo[extraid][pfRotX] = floatstr(content);
               	cache_get_field_content(0, "fRotY", content);		PlayerInfo[extraid][pfRotY] = floatstr(content);
               	cache_get_field_content(0, "fRotZ", content);		PlayerInfo[extraid][pfRotZ] = floatstr(content);
               	cache_get_field_content(0, "fScaleX", content);		PlayerInfo[extraid][pfScaleX] = floatstr(content);
               	cache_get_field_content(0, "fScaleY", content);		PlayerInfo[extraid][pfScaleY] = floatstr(content);
               	cache_get_field_content(0, "fScaleZ", content);		PlayerInfo[extraid][pfScaleZ] = floatstr(content);
               	cache_get_field_content(0, "ObjUsed", content);		UsandoObj[extraid] = strval(content);
               	cache_get_field_content(0, "ATH", content); 		SlotP2[0][extraid] = strval(content);
               	NPrendas[extraid]++;
               	if(UsandoObj[extraid] == 1)
		  		{
		  			UsandoP[extraid]++;
		  			SetPlayerAttachedObject(extraid, SlotP2[0][extraid], PlayerInfo[extraid][pObj], 2, PlayerInfo[extraid][pfOffsetX], PlayerInfo[extraid][pfOffsetY],  PlayerInfo[extraid][pfOffsetZ], PlayerInfo[extraid][pfRotX], PlayerInfo[extraid][pfRotY], PlayerInfo[extraid][pfRotZ], PlayerInfo[extraid][pfScaleX], PlayerInfo[extraid][pfScaleY], PlayerInfo[extraid][pfScaleZ]);
				}
				return 1;
			}
			else return PlayerInfo[extraid][pObj] = 19382;
		}
        case 2:
        {
			if(Rows == 1)
			{
               	cache_get_field_content(0, "Objeto", content); 		PlayerInfo[extraid][pObj2] = strval(content);
               	cache_get_field_content(0, "fOffsetX", content); 	PlayerInfo[extraid][pfOffsetX2] = floatstr(content);
               	cache_get_field_content(0, "fOffsetY", content); 	PlayerInfo[extraid][pfOffsetY2] = floatstr(content);
               	cache_get_field_content(0, "fOffsetZ", content); 	PlayerInfo[extraid][pfOffsetZ2] = floatstr(content);
               	cache_get_field_content(0, "fRotX", content); 		PlayerInfo[extraid][pfRotX2] = floatstr(content);
               	cache_get_field_content(0, "fRotY", content); 		PlayerInfo[extraid][pfRotY2] = floatstr(content);
               	cache_get_field_content(0, "fRotZ", content); 		PlayerInfo[extraid][pfRotZ2] = floatstr(content);
               	cache_get_field_content(0, "fScaleX", content); 	PlayerInfo[extraid][pfScaleX2] = floatstr(content);
               	cache_get_field_content(0, "fScaleY", content); 	PlayerInfo[extraid][pfScaleY2] = floatstr(content);
               	cache_get_field_content(0, "fScaleZ", content); 	PlayerInfo[extraid][pfScaleZ2] = floatstr(content);
               	cache_get_field_content(0, "ObjUsed", content); 	UsandoObj2[extraid] = strval(content);
               	cache_get_field_content(0, "ATH", content); 		SlotP2[1][extraid] = strval(content);
               	NPrendas[extraid]++;
               	if(UsandoObj2[extraid] == 1)
		  		{
		  			UsandoP[extraid]++;
		  			SetPlayerAttachedObject(extraid, SlotP2[1][extraid], PlayerInfo[extraid][pObj2], 2, PlayerInfo[extraid][pfOffsetX2], PlayerInfo[extraid][pfOffsetY2],  PlayerInfo[extraid][pfOffsetZ2], PlayerInfo[extraid][pfRotX2], PlayerInfo[extraid][pfRotY2], PlayerInfo[extraid][pfRotZ2], PlayerInfo[extraid][pfScaleX2], PlayerInfo[extraid][pfScaleY2], PlayerInfo[extraid][pfScaleZ2]);
				}
				return 1;
			}
			else return PlayerInfo[extraid][pObj2] = 19382;
		}
        case 3:
        {
			if(Rows == 1)
			{
               	cache_get_field_content(0, "Objeto", content); 		PlayerInfo[extraid][pObj3] = strval(content);
               	cache_get_field_content(0, "fOffsetX", content); 	PlayerInfo[extraid][pfOffsetX3] = floatstr(content);
               	cache_get_field_content(0, "fOffsetY", content); 	PlayerInfo[extraid][pfOffsetY3] = floatstr(content);
               	cache_get_field_content(0, "fOffsetZ", content); 	PlayerInfo[extraid][pfOffsetZ3] = floatstr(content);
               	cache_get_field_content(0, "fRotX", content); 		PlayerInfo[extraid][pfRotX3] = floatstr(content);
               	cache_get_field_content(0, "fRotY", content); 		PlayerInfo[extraid][pfRotY3] = floatstr(content);
               	cache_get_field_content(0, "fRotZ", content); 		PlayerInfo[extraid][pfRotZ3] = floatstr(content);
               	cache_get_field_content(0, "fScaleX", content); 	PlayerInfo[extraid][pfScaleX3] = floatstr(content);
               	cache_get_field_content(0, "fScaleY", content); 	PlayerInfo[extraid][pfScaleY3] = floatstr(content);
               	cache_get_field_content(0, "fScaleZ", content); 	PlayerInfo[extraid][pfScaleZ3] = floatstr(content);
               	cache_get_field_content(0, "ObjUsed", content); 	UsandoObj3[extraid] = strval(content);
               	cache_get_field_content(0, "ATH", content); 		SlotP2[2][extraid] = strval(content);
               	NPrendas[extraid]++;
               	if(UsandoObj3[extraid] == 1)
		  		{
		  			UsandoP[extraid]++;
		  			SetPlayerAttachedObject(extraid, SlotP2[2][extraid], PlayerInfo[extraid][pObj3], 2, PlayerInfo[extraid][pfOffsetX3], PlayerInfo[extraid][pfOffsetY3],  PlayerInfo[extraid][pfOffsetZ3], PlayerInfo[extraid][pfRotX3], PlayerInfo[extraid][pfRotY3], PlayerInfo[extraid][pfRotZ3], PlayerInfo[extraid][pfScaleX3], PlayerInfo[extraid][pfScaleY3], PlayerInfo[extraid][pfScaleZ3]);
				}
				return 1;
			}
			else return PlayerInfo[extraid][pObj3] = 19382;
		}
        case 4:
        {
			if(Rows == 1)
			{
               	cache_get_field_content(0, "Objeto", content); 		PlayerInfo[extraid][pObj4] = strval(content);
               	cache_get_field_content(0, "fOffsetX", content); 	PlayerInfo[extraid][pfOffsetX4] = floatstr(content);
               	cache_get_field_content(0, "fOffsetY", content); 	PlayerInfo[extraid][pfOffsetY4] = floatstr(content);
               	cache_get_field_content(0, "fOffsetZ", content); 	PlayerInfo[extraid][pfOffsetZ4] = floatstr(content);
               	cache_get_field_content(0, "fRotX", content); 		PlayerInfo[extraid][pfRotX4] = floatstr(content);
              	cache_get_field_content(0, "fRotY", content); 		PlayerInfo[extraid][pfRotY4] = floatstr(content);
            	cache_get_field_content(0, "fRotZ", content); 		PlayerInfo[extraid][pfRotZ4] = floatstr(content);
              	cache_get_field_content(0, "fScaleX", content); 	PlayerInfo[extraid][pfScaleX4] = floatstr(content);
               	cache_get_field_content(0, "fScaleY", content); 	PlayerInfo[extraid][pfScaleY4] = floatstr(content);
               	cache_get_field_content(0, "fScaleZ", content); 	PlayerInfo[extraid][pfScaleZ4] = floatstr(content);
               	cache_get_field_content(0, "ObjUsed", content); 	UsandoObj4[extraid] = strval(content);
               	cache_get_field_content(0, "ATH", content); 		SlotP2[3][extraid] = strval(content);
               	NPrendas[extraid]++;
               	if(UsandoObj4[extraid] == 1)
		  		{
		  			UsandoP[extraid]++;
		  			SetPlayerAttachedObject(extraid, SlotP2[3][extraid], PlayerInfo[extraid][pObj4], 2, PlayerInfo[extraid][pfOffsetX4], PlayerInfo[extraid][pfOffsetY4],  PlayerInfo[extraid][pfOffsetZ4], PlayerInfo[extraid][pfRotX4], PlayerInfo[extraid][pfRotY4], PlayerInfo[extraid][pfRotZ4], PlayerInfo[extraid][pfScaleX4], PlayerInfo[extraid][pfScaleY4], PlayerInfo[extraid][pfScaleZ4]);
				}
				return 1;
			}
			else return PlayerInfo[extraid][pObj4] = 19382;
		}

	}
    return 1;
}

public CargarBandas()
{
	new count;
	for(new i = 0; i < cache_get_row_count(); i++)
	{
		new content[40],p;
		cache_get_field_content(i, "id", content); p = strval(content); BandasInfo[p][bID] = strval(content);
		if(p != 0)
		{
		    cache_get_field_content(i, "Nombre", content);
			format(BandasInfo[p][BNombre],sizeof(content),"%s",content);

			cache_get_field_content(i, "Lider", content);
			format(BandasInfo[p][BLider],sizeof(content),"%s",content);

			cache_get_field_content(i, "Rango1", content);
			format(BandasInfo[p][BRango1],sizeof(content),"%s",content);

			cache_get_field_content(i, "Rango2", content);
			format(BandasInfo[p][BRango2],sizeof(content),"%s",content);

			cache_get_field_content(i, "Rango3", content);
			format(BandasInfo[p][BRango3],sizeof(content),"%s",content);

			cache_get_field_content(i, "Rango4", content);
			format(BandasInfo[p][BRango4],sizeof(content),"%s",content);

			cache_get_field_content(i, "Rango5", content);
			format(BandasInfo[p][BRango5],sizeof(content),"%s",content);

			cache_get_field_content(i, "Rango6", content);
			format(BandasInfo[p][BRango6],sizeof(content),"%s",content);

			cache_get_field_content(i, "Rango7", content);
			format(BandasInfo[p][BRango7],sizeof(content),"%s",content);

			cache_get_field_content(i, "Rango8", content);
			format(BandasInfo[p][BRango8],sizeof(content),"%s",content);

			cache_get_field_content(i, "EnUso", content);
			BandasInfo[p][EnUso] = strval(content);

			cache_get_field_content(i, "territorio", content);
			format(BandasInfo[p][territorio],sizeof(content),"%s",content);
			count++;
        }
	}
	return true;
}

public CargarRegistros(resultid, extraid, ConnectionHandle)
{
	new Rows, Field;
	if(resultid != 0)
	{
		cache_get_data(Rows, Field);
	}
	switch(resultid)
	{
		case 3:
		{
			for(new i = 0; i < 1; i++)
			{
				new content[30];
				cache_get_field_content(i, "Cantidad",  content); Usuarios[Cantidad] = strval(content);
			}
		}
	}
	return 1;
}
public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
	if(response)
	{
		if(fScaleX > 2.0 || fScaleY > 2.0 || fScaleZ > 2.0 || fScaleX < 0.5 || fScaleY < 0.5 || fScaleZ < 0.5) return SendClientMessage(playerid, COLOR_WHITE, "No puedes tener una prenda tan grande.");
		if(modelid == PlayerInfo[playerid][pObj])
		{
			new Query[1000],pName[24];
			GetPlayerName(playerid,pName,24);
			PlayerInfo[playerid][pfOffsetX] = fOffsetX;
			PlayerInfo[playerid][pfOffsetY] = fOffsetY;
			PlayerInfo[playerid][pfOffsetZ] = fOffsetZ;
			PlayerInfo[playerid][pfRotX] = fRotX;
			PlayerInfo[playerid][pfRotY] = fRotY;
			PlayerInfo[playerid][pfRotZ] = fRotZ;
			PlayerInfo[playerid][pfScaleX] = fScaleX;
			PlayerInfo[playerid][pfScaleY] = fScaleY;
			PlayerInfo[playerid][pfScaleZ] = fScaleZ;
			format(Query, 500, "UPDATE `prendas` SET `fOffsetX`='%f',`fOffsetY`='%f',`fOffsetZ`='%f',`fRotX`='%f',`fRotY`='%f',`fRotZ`='%f',`fScaleX`='%f',`fScaleY`='%f',`fScaleZ`='%f' WHERE `Propietario`='%s' AND `Slot`='1'",fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ,pName);
			mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
			SendClientMessage(playerid,-1,"Se ha modificado la posición del objeto.");
			//
			RemovePlayerAttachedObject(playerid, SlotP2[0][playerid]);
			SetPlayerAttachedObject(playerid, SlotP2[0][playerid], PlayerInfo[playerid][pObj], 2, PlayerInfo[playerid][pfOffsetX], PlayerInfo[playerid][pfOffsetY],  PlayerInfo[playerid][pfOffsetZ], PlayerInfo[playerid][pfRotX], PlayerInfo[playerid][pfRotY], PlayerInfo[playerid][pfRotZ], PlayerInfo[playerid][pfScaleX], PlayerInfo[playerid][pfScaleY], PlayerInfo[playerid][pfScaleZ]);
			//
		}
		if(modelid == PlayerInfo[playerid][pObj2])
		{
			new Query[1000],pName[24];
			GetPlayerName(playerid,pName,24);
			PlayerInfo[playerid][pfOffsetX2] = fOffsetX;
			PlayerInfo[playerid][pfOffsetY2] = fOffsetY;
			PlayerInfo[playerid][pfOffsetZ2] = fOffsetZ;
			PlayerInfo[playerid][pfRotX2] = fRotX;
			PlayerInfo[playerid][pfRotY2] = fRotY;
			PlayerInfo[playerid][pfRotZ2] = fRotZ;
			PlayerInfo[playerid][pfScaleX2] = fScaleX;
			PlayerInfo[playerid][pfScaleY2] = fScaleY;
			PlayerInfo[playerid][pfScaleZ2] = fScaleZ;
			format(Query, 500, "UPDATE `prendas` SET `fOffsetX`='%f',`fOffsetY`='%f',`fOffsetZ`='%f',`fRotX`='%f',`fRotY`='%f',`fRotZ`='%f',`fScaleX`='%f',`fScaleY`='%f',`fScaleZ`='%f' WHERE `Propietario`='%s' AND `Slot`='2'",fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ,pName);
			mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
			SendClientMessage(playerid,-1,"Se ha modificado la posición del objeto.");
			RemovePlayerAttachedObject(playerid, SlotP2[1][playerid]);
			SetPlayerAttachedObject(playerid, SlotP2[1][playerid], PlayerInfo[playerid][pObj2], 2, PlayerInfo[playerid][pfOffsetX2], PlayerInfo[playerid][pfOffsetY2],  PlayerInfo[playerid][pfOffsetZ2], PlayerInfo[playerid][pfRotX2], PlayerInfo[playerid][pfRotY2], PlayerInfo[playerid][pfRotZ2], PlayerInfo[playerid][pfScaleX2], PlayerInfo[playerid][pfScaleY2], PlayerInfo[playerid][pfScaleZ2]);
		}
		if(modelid == PlayerInfo[playerid][pObj3])
		{
			new Query[10000],pName[24];
			GetPlayerName(playerid,pName,24);
			PlayerInfo[playerid][pfOffsetX3] = fOffsetX;
			PlayerInfo[playerid][pfOffsetY3] = fOffsetY;
			PlayerInfo[playerid][pfOffsetZ3] = fOffsetZ;
			PlayerInfo[playerid][pfRotX3] = fRotX;
			PlayerInfo[playerid][pfRotY3] = fRotY;
			PlayerInfo[playerid][pfRotZ3] = fRotZ;
			PlayerInfo[playerid][pfScaleX3] = fScaleX;
			PlayerInfo[playerid][pfScaleY3] = fScaleY;
			PlayerInfo[playerid][pfScaleZ3] = fScaleZ;
			format(Query, 500, "UPDATE `prendas` SET `fOffsetX`='%f',`fOffsetY`='%f',`fOffsetZ`='%f',`fRotX`='%f',`fRotY`='%f',`fRotZ`='%f',`fScaleX`='%f',`fScaleY`='%f',`fScaleZ`='%f' WHERE `Propietario`='%s' AND `Slot`='3'",fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ,pName);
			mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
			SendClientMessage(playerid,-1,"Se ha modificado la posición del objeto.");
			//
			RemovePlayerAttachedObject(playerid,  SlotP2[2][playerid]);
			SetPlayerAttachedObject(playerid,  SlotP2[2][playerid], PlayerInfo[playerid][pObj3], 2, PlayerInfo[playerid][pfOffsetX3], PlayerInfo[playerid][pfOffsetY3],  PlayerInfo[playerid][pfOffsetZ3], PlayerInfo[playerid][pfRotX3], PlayerInfo[playerid][pfRotY3], PlayerInfo[playerid][pfRotZ3], PlayerInfo[playerid][pfScaleX3], PlayerInfo[playerid][pfScaleY3], PlayerInfo[playerid][pfScaleZ3]);
			//
		}
		if(modelid == PlayerInfo[playerid][pObj4])
		{
			new Query[1000],pName[24];
			GetPlayerName(playerid,pName,24);
			PlayerInfo[playerid][pfOffsetX4] = fOffsetX;
			PlayerInfo[playerid][pfOffsetY4] = fOffsetY;
			PlayerInfo[playerid][pfOffsetZ4] = fOffsetZ;
			PlayerInfo[playerid][pfRotX4] = fRotX;
			PlayerInfo[playerid][pfRotY4] = fRotY;
			PlayerInfo[playerid][pfRotZ4] = fRotZ;
			PlayerInfo[playerid][pfScaleX4] = fScaleX;
			PlayerInfo[playerid][pfScaleY4] = fScaleY;
			PlayerInfo[playerid][pfScaleZ4] = fScaleZ;
			format(Query, 500, "UPDATE `prendas` SET `fOffsetX`='%f',`fOffsetY`='%f',`fOffsetZ`='%f',`fRotX`='%f',`fRotY`='%f',`fRotZ`='%f',`fScaleX`='%f',`fScaleY`='%f',`fScaleZ`='%f' WHERE `Propietario`='%s' AND `Slot`='4'",fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ,pName);
			mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
			SendClientMessage(playerid,-1,"Se ha modificado la posición del objeto.");
			//
			RemovePlayerAttachedObject(playerid,  SlotP2[3][playerid]);
			SetPlayerAttachedObject(playerid,  SlotP2[3][playerid], PlayerInfo[playerid][pObj4], 2, PlayerInfo[playerid][pfOffsetX4], PlayerInfo[playerid][pfOffsetY4],  PlayerInfo[playerid][pfOffsetZ4], PlayerInfo[playerid][pfRotX4], PlayerInfo[playerid][pfRotY4], PlayerInfo[playerid][pfRotZ4], PlayerInfo[playerid][pfScaleX4], PlayerInfo[playerid][pfScaleY4], PlayerInfo[playerid][pfScaleZ4]);
		}
	}
	return 1;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	new string[1500];
	new pName[50], Query[256]; GetPlayerName(playerid, pName, 50);
	switch(dialogid)
	{
		case COMPRARRADIO:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pVip] != 2) return SendClientMessage(playerid, COLOR_WHITE, "Necesitas ser VIP para crear una estación de radio");
            	if(strfind(inputtext,"=",true) != -1 || strfind(inputtext,"´",true) != -1 || strfind(inputtext,"'",true) != -1 || strfind(inputtext,"`",true) != -1 || strfind(inputtext,",",true) != -1 || strfind(inputtext,"¨",true) != -1) return SendClientMessage(playerid,-1,"Error, intentalo nuevamente y ten cuidado con lo que escribes.");
				if(PlayerInfo[playerid][jDinero] >= 15000)
				{
					Emisoras[playerid][TieneEmisora] = 1;
					Emisoras[playerid][EmisoraID] = -1;
					Emisoras[playerid][TransEmisora] = 0;
					Emisoras[playerid][CabinaOcupada] = -1;
					format(Emisoras[playerid][NombreEmisora], 90, "%s", inputtext);
					format(Emisoras[playerid][URLEmisora], 128, "http://"EMISORA_URL"");
					QuitarDinero(playerid, 15000);
					format(string, sizeof(string), "{00CC00}¡Felicidades! {FFFFFF}Has creado una estación de radio llamada {DBED16}%s", inputtext);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "Necesitas {00CC00}$15000{FFFFFF} para crear una estación de radio");
			}
		}
		case DMISION:
		{
			if(response)
			{
				QueMarco[playerid] = 1;
				MandoAceptar[playerid] = 0;
				TiempoAceptar[playerid] = 0;
				YaMandaron[playerid] = 1;
				format(PuntosMision,200,"%s~g~.",PuntosMision);
				new str8[200];
				format(str8, 200, "%s", PuntosMision);
				TextDrawSetString(EsperandoI3, str8);
			}
			else
			{
				format(PuntosMision,200,"%s~r~.",PuntosMision);
				new str8[200];
				format(str8, 200, "%s", PuntosMision);
				TextDrawSetString(EsperandoI3, str8);
				YaMandaron[playerid] = 0;
				QueMarco[playerid] = 2;
				TextDrawHideForPlayer(playerid, EsperandoMision1);
				TextDrawHideForPlayer(playerid, EsperandoMision2);
				TextDrawHideForPlayer(playerid, EsperandoI);
				TextDrawHideForPlayer(playerid, EsperandoI2);
				TextDrawHideForPlayer(playerid, EsperandoI3);
				if(Grupo[playerid] == 1) Ladrones -= 1;
				if(Grupo[playerid] == 2) Guardias -= 1;
				if(Grupo[playerid] == 3) Mafiosos -= 1;
				Grupo[playerid] = 0;
				MandoAceptar[playerid] = 0;
			}
		}
		case DROBO:
		{
			if(response)
			{
				new mensaje[300];
				format(mensaje, sizeof(mensaje), "Grupo\tPersonas en cola\n{ff0000}- {FFFFFF}Ladrones.\t%d\n{364eff}- {FFFFFF}Guardias.\t%d\n{00CC00}- {FFFFFF}Mafiosos.\t%d",	Ladrones, Guardias, Mafiosos);
				ShowPlayerDialog(playerid, DROBO2, DIALOG_STYLE_TABLIST_HEADERS, "Selecciona tu grupo", mensaje, "Aceptar", "Cerrar");
			}
		}
		case DROBO2:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(Ladrones == MAX_LADRONES) return SendClientMessage(playerid,-1,"Espera la siguiente misión o elige otro grupo que no este lleno.");
						new string77[200];
						if(Grupo[playerid] == 1) Ladrones -= 1;
						if(Grupo[playerid] == 2) Guardias -= 1;
						if(Grupo[playerid] == 3) Mafiosos -= 1;
						Ladrones += 1;
						Grupo[playerid] = 1;
						format(string77, sizeof(string77), "Estás en cola en el puesto {FFCC00}%d{FFFFFF} para unirte a la misión {8baab7}Asalto al blindado{FFFFFF}.",Ladrones);
						SendClientMessage(playerid,-1,string77);
					}
					case 1:
					{
						if(Guardias == MAX_GUARDIAS) return SendClientMessage(playerid,-1,"Espera la siguiente misión o elige otro grupo que no este lleno.");
						new string88[200];
						if(Grupo[playerid] == 1) Ladrones -= 1;
						if(Grupo[playerid] == 2) Guardias -= 1;
						if(Grupo[playerid] == 3) Mafiosos -= 1;
						Guardias += 1;
						Grupo[playerid] = 2;
						format(string88, sizeof(string88), "Estás en cola en el puesto {FFCC00}%d{FFFFFF} para unirte a la misión {8baab7}Asalto al blindado{FFFFFF}.",Guardias);
						SendClientMessage(playerid,-1,string88);
					}
    				case 2:
					{
						if(Mafiosos == MAX_MAFIOSOS) return SendClientMessage(playerid,-1,"Espera la siguiente misión o elige otro grupo que no este lleno.");
						new string99[200];
						if(Grupo[playerid] == 1) Ladrones -= 1;
						if(Grupo[playerid] == 2) Guardias -= 1;
						if(Grupo[playerid] == 3) Mafiosos -= 1;
						Mafiosos += 1;
						Grupo[playerid] = 3;
						format(string99, sizeof(string99), "Estás en cola en el puesto {FFCC00}%d{FFFFFF} para unirte a la misión {8baab7}Asalto al blindado{FFFFFF}.",Mafiosos);
						SendClientMessage(playerid,-1,string99);
					}
				}
			}
		}
		case C_ARMASF:
		{
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            Loop(f,MAX_FABRICAS)
						if(Fabricas[f][pBanda] == PlayerInfo[playerid][pFaccion])
						{
							if(Fabricas[f][pCantidadDinero] >= 10000000)
							{
							    if(Fabricas[f][pSniper] > 0)
								{
								    SendClientMessage(playerid,-1,"No puedes comprar más armas, el límite es de 10");
								 	return SendClientMessage(playerid,-1,"Si quieres comprar más armas, saca todos los Snipers de el estante.");
								}
							    Fabricas[f][pCantidadDinero] -= 10000000;
							    Fabricas[f][pSniper] = 10;
								ActualizarDineroPared(f);
								ResetSnipers(f);
								UpdateAllBagsMoney(f);
								GuardarFabrica(f);
								SendClientMessage(playerid,-1,"Compraste un paquete de armas para la fábrica.");
							}
							else SendClientMessage(playerid,-1,"No tienes el suficiente dinero para comprar el paquete de armas.");
						}
			        }
			        case 1:
			        {
			            Loop(f,MAX_FABRICAS)
						if(Fabricas[f][pBanda] == PlayerInfo[playerid][pFaccion])
						{
							if(Fabricas[f][pCantidadDinero] >= 4000000)
							{
							    if(Fabricas[f][pRecortada] > 0)
								{
								    SendClientMessage(playerid,-1,"No puedes comprar más armas, el límite es de 10");
								 	return SendClientMessage(playerid,-1,"Si quieres comprar más armas, saca todos las Escopetas recortadas de el estante.");
								}
							    Fabricas[f][pCantidadDinero] -= 4000000;
							    Fabricas[f][pRecortada] = 10;
								ActualizarDineroPared(f);
								ResetRecortada(f);
								UpdateAllBagsMoney(f);
								GuardarFabrica(f);
								SendClientMessage(playerid,-1,"Compraste un paquete de armas para la fábrica.");
							}
							else SendClientMessage(playerid,-1,"No tienes el suficiente dinero para comprar el paquete de armas.");
						}
			        }
			        case 2:
			        {
			            Loop(f,MAX_FABRICAS)
						if(Fabricas[f][pBanda] == PlayerInfo[playerid][pFaccion])
						{
							if(Fabricas[f][pCantidadDinero] >= 2000000)
							{
							    if(Fabricas[f][pUzi] > 0)
								{
								    SendClientMessage(playerid,-1,"No puedes comprar más armas, el límite es de 10");
								 	return SendClientMessage(playerid,-1,"Si quieres comprar más armas, saca todos las Uzi de el estante.");
								}
							    Fabricas[f][pCantidadDinero] -= 2000000;
							    Fabricas[f][pUzi] = 10;
								ActualizarDineroPared(f);
								ResetUzi(f);
								UpdateAllBagsMoney(f);
								GuardarFabrica(f);
								SendClientMessage(playerid,-1,"Compraste un paquete de armas para la fábrica.");
							}
							else SendClientMessage(playerid,-1,"No tienes el suficiente dinero para comprar el paquete de armas.");
						}
			        }
			        case 3:
			        {
			            Loop(f,MAX_FABRICAS)
						if(Fabricas[f][pBanda] == PlayerInfo[playerid][pFaccion])
						{
							if(Fabricas[f][pCantidadDinero] >= 2500000)
							{
							    if(Fabricas[f][pTec9] < 1)
								{
								    SendClientMessage(playerid,-1,"No puedes comprar más armas, el límite es de 10");
								 	return SendClientMessage(playerid,-1,"Si quieres comprar más armas, saca todos las Tec9 de el estante.");
								}
							    Fabricas[f][pCantidadDinero] -= 2500000;
							    Fabricas[f][pTec9] = 10;
								ActualizarDineroPared(f);
								ResetTec(f);
								UpdateAllBagsMoney(f);
								GuardarFabrica(f);
								SendClientMessage(playerid,-1,"Compraste un paquete de armas para la fábrica.");
							}
							else SendClientMessage(playerid,-1,"No tienes el suficiente dinero para comprar el paquete de armas.");
						}
			        }
                }
            }
        }
        case C_EMPLEADOS2:
        {
        	if(response)
		    {
		        switch(listitem)
				{
				    case 0:
					{
						Loop(f,MAX_FABRICAS)
					    if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda])
					    {
							if(PlayerInfo[playerid][pRango] != 8) return 1;
							if(Fabricas[f][pCantidadDinero] >= 1000000)
							{
			                    if(Fabricas[f][TieneCocinero1] == 0)
								{
									Fabricas[f][TieneCocinero1] = 1;
									Fabricas[f][ActorCocinero1] = CreateActor(146, -2016.4310,227.9705,1035.8162,180.0000);
									SetActorVirtualWorld(Fabricas[f][ActorCocinero1], Fabricas[f][pVW]);
									SendClientMessage(playerid,-1,"Has contratado {3399FF}un moledor de cristal{FFFFFF}, el costo fue de {00CC00}$1.000.000{FFFFFF}.");
								    if(Fabricas[f][StatoCuoco1] == 0 && Fabricas[f][PorcentajeCocinero1] == 0) Fabricas[f][StatoCuoco1] = 2;
                                    ActualizarLabelMoledores(f,1);
                                    SetActorHealth(Fabricas[f][ActorCocinero1], 100.0);
								}
			                    else if(Fabricas[f][TieneCocinero2] == 0)
								{
									Fabricas[f][TieneCocinero2] = 1;
									Fabricas[f][ActorCocinero2] = CreateActor(146, -2012.5667,226.0623,1035.8225,0.0000);
									SetActorVirtualWorld(Fabricas[f][ActorCocinero2], Fabricas[f][pVW]);
									SendClientMessage(playerid,-1,"Has contratado {3399FF}un moledor de cristal{FFFFFF}, el costo fue de {00CC00}$1.000.000{FFFFFF}.");
									if(Fabricas[f][StatoCuoco2] == 0 && Fabricas[f][PorcentajeCocinero2] == 0) Fabricas[f][StatoCuoco2] = 2;
                                    ActualizarLabelMoledores(f,2);
                                    SetActorHealth(Fabricas[f][ActorCocinero2], 100.0);
								}
			                    else if(Fabricas[f][TieneCocinero3] == 0)
								{
									Fabricas[f][TieneCocinero3] = 1;
									Fabricas[f][ActorCocinero3] = CreateActor(146, -2008.7354,227.9745,1035.8162,180.0000);
									SetActorVirtualWorld(Fabricas[f][ActorCocinero3], Fabricas[f][pVW]);
									SendClientMessage(playerid,-1,"Has contratado {3399FF}un moledor de cristal{FFFFFF}, el costo fue de {00CC00}$1.000.000{FFFFFF}.");
                                    if(Fabricas[f][StatoCuoco3] == 0 && Fabricas[f][PorcentajeCocinero3] == 0) Fabricas[f][StatoCuoco3] = 2;
                                    ActualizarLabelMoledores(f,3);
                                    SetActorHealth(Fabricas[f][ActorCocinero3], 100.0);
								}
			                    else if(Fabricas[f][TieneCocinero4] == 0)
								{
									Fabricas[f][TieneCocinero4] = 1;
									Fabricas[f][ActorCocinero4] = CreateActor(146, -2004.8615,226.0628,1035.8162,0.0000);
									SetActorVirtualWorld(Fabricas[f][ActorCocinero4], Fabricas[f][pVW]);
									SendClientMessage(playerid,-1,"Has contratado {3399FF}un moledor de cristal{FFFFFF}, el costo fue de {00CC00}$1.000.000{FFFFFF}.");
                                    if(Fabricas[f][StatoCuoco4] == 0 && Fabricas[f][PorcentajeCocinero4] == 0) Fabricas[f][StatoCuoco4] = 2;
                                    ActualizarLabelMoledores(f,4);
                                    SetActorHealth(Fabricas[f][ActorCocinero4], 100.0);
								}
			                    else if(Fabricas[f][TieneCocinero5] == 0)
								{
									Fabricas[f][TieneCocinero5] = 1;
									Fabricas[f][ActorCocinero5] = CreateActor(146, -2001.0369,227.9719,1035.8162,180.0000);
									SetActorVirtualWorld(Fabricas[f][ActorCocinero5], Fabricas[f][pVW]);
									SendClientMessage(playerid,-1,"Has contratado {3399FF}un moledor de cristal{FFFFFF}, el costo fue de {00CC00}$1.000.000{FFFFFF}.");
                                    if(Fabricas[f][StatoCuoco5] == 0 && Fabricas[f][PorcentajeCocinero5] == 0) Fabricas[f][StatoCuoco5] = 2;
                                    ActualizarLabelMoledores(f,5);
                                    SetActorHealth(Fabricas[f][ActorCocinero5], 100.0);
								}
			                    else return SendClientMessage(playerid,-1,"{EB0000}No puedes{FFFFFF}contratar más empleados de esta clase.");
			                    QuitarDineroFabrica(f,1000000);
			                    GuardarFabrica(f);
                            }
					    }
       				}
					case 1:
					{
					    Loop(f,MAX_FABRICAS)
					    if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda])
					    {
							if(PlayerInfo[playerid][pRango] != 8) return 1;
							if(Fabricas[f][pCantidadDinero] >= 1000000)
							{
							    Fabricas[f][pCantidadDinero] -= 1000000;
			                    ActualizarBolsos(f, 2);
			                    ActualizarDineroPared(f);
			                    if(Fabricas[f][TieneCocinero1] == 0)
								{
									Fabricas[f][TieneCocinero1] = 2;
									Fabricas[f][ActorCocinero1] = CreateActor(145, -2016.4310,227.9705,1035.8162,180.0000);
									SetActorVirtualWorld(Fabricas[f][ActorCocinero1], Fabricas[f][pVW]);
									SendClientMessage(playerid,-1,"Has contratado {3399FF}un moledor de cristal{FFFFFF}, el costo fue de {00CC00}$1.000.000{FFFFFF}.");
                                    if(Fabricas[f][StatoCuoco1] == 0 && Fabricas[f][PorcentajeCocinero1] == 0) Fabricas[f][StatoCuoco1] = 2;
                                    ActualizarLabelMoledores(f,1);
                                    SetActorHealth(Fabricas[f][ActorCocinero1], 100.0);
								}
			                    else if(Fabricas[f][TieneCocinero2] == 0)
								{
									Fabricas[f][TieneCocinero2] = 2;
									Fabricas[f][ActorCocinero2] = CreateActor(145, -2012.5667,226.0623,1035.8225,0.0000);
									SetActorVirtualWorld(Fabricas[f][ActorCocinero2], Fabricas[f][pVW]);
									SendClientMessage(playerid,-1,"Has contratado {3399FF}un moledor de cristal{FFFFFF}, el costo fue de {00CC00}$1.000.000{FFFFFF}.");
                                    if(Fabricas[f][StatoCuoco2] == 0 && Fabricas[f][PorcentajeCocinero2] == 0) Fabricas[f][StatoCuoco2] = 2;
                                    ActualizarLabelMoledores(f,2);
                                    SetActorHealth(Fabricas[f][ActorCocinero2], 100.0);
								}
			                    else if(Fabricas[f][TieneCocinero3] == 0)
								{
									Fabricas[f][TieneCocinero3] = 2;
									Fabricas[f][ActorCocinero3] = CreateActor(145, -2008.7354,227.9745,1035.8162,180.0000);
									SetActorVirtualWorld(Fabricas[f][ActorCocinero3], Fabricas[f][pVW]);
									SendClientMessage(playerid,-1,"Has contratado {3399FF}un moledor de cristal{FFFFFF}, el costo fue de {00CC00}$1.000.000{FFFFFF}.");
                                    if(Fabricas[f][StatoCuoco3] == 0 && Fabricas[f][PorcentajeCocinero3] == 0) Fabricas[f][StatoCuoco3] = 2;
                                    ActualizarLabelMoledores(f,3);
                                    SetActorHealth(Fabricas[f][ActorCocinero3], 100.0);
								}
			                    else if(Fabricas[f][TieneCocinero4] == 0)
								{
									Fabricas[f][TieneCocinero4] = 2;
									Fabricas[f][ActorCocinero4] = CreateActor(145, -2004.8615,226.0628,1035.8162,0.0000);
									SetActorVirtualWorld(Fabricas[f][ActorCocinero4], Fabricas[f][pVW]);
									SendClientMessage(playerid,-1,"Has contratado {3399FF}un moledor de cristal{FFFFFF}, el costo fue de {00CC00}$1.000.000{FFFFFF}.");
                                    if(Fabricas[f][StatoCuoco4] == 0 && Fabricas[f][PorcentajeCocinero4] == 0) Fabricas[f][StatoCuoco4] = 2;
                                    ActualizarLabelMoledores(f,4);
                                    SetActorHealth(Fabricas[f][ActorCocinero4], 100.0);
								}
			                    else if(Fabricas[f][TieneCocinero5] == 0)
								{
									Fabricas[f][TieneCocinero5] = 2;
									Fabricas[f][ActorCocinero5] = CreateActor(145, -2001.0369,227.9719,1035.8162,180.0000);
									SetActorVirtualWorld(Fabricas[f][ActorCocinero5], Fabricas[f][pVW]);
									SendClientMessage(playerid,-1,"Has contratado {3399FF}un moledor de cristal{FFFFFF}, el costo fue de {00CC00}$1.000.000{FFFFFF}.");
                                    if(Fabricas[f][StatoCuoco5] == 0 && Fabricas[f][PorcentajeCocinero5] == 0) Fabricas[f][StatoCuoco5] = 2;
                                    ActualizarLabelMoledores(f,5);
                                    SetActorHealth(Fabricas[f][ActorCocinero5], 100.0);
								}
			                    else return SendClientMessage(playerid,-1,"{EB0000}No puedes{FFFFFF}contratar más empleados de esta clase.");
			                    GuardarFabrica(f);
                            }
					    }
					}
                }
            }
        }
        case C_EMPLEADOS:
		{
		    if(response)
		    {
		        switch(listitem)
				{
				    case 0:
					{
						new textbuy[256];
						format(textbuy,sizeof(textbuy),"{FFFFFF}Sexo\tCosto\nMasculino\t{00CC00}$1.000.000{FFFFFF}\nFemenino\t{00CC00}$1.000.000");
                        ShowPlayerDialog(playerid,C_EMPLEADOS2,DIALOG_STYLE_TABLIST_HEADERS,"Moledor de cristal",textbuy,"Aceptar","Salir");
					}
					case 1:
					{
					    new textbuy[256];
						format(textbuy,sizeof(textbuy),"{FFFFFF}Origen\tCosto\nLos Santos\t{00CC00}$2.800.000{FFFFFF}\nSan Fierro\t{00CC00}$2.000.000{FFFFFF}\nLas Venturas\t{00CC00}$4.000.000{FFFFFF}");
                        ShowPlayerDialog(playerid,FMEDICO,DIALOG_STYLE_TABLIST_HEADERS,"Médico",textbuy,"Aceptar","Salir");
					}
					case 2:
					{
                        Loop(f,MAX_FABRICAS)
					    if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda])
					    {
							if(PlayerInfo[playerid][pRango] != 8) return 1;
							if(Fabricas[f][pCantidadDinero] >= 800000)
							{
			                    if(Fabricas[f][TieneGuardia1] == 0)
								{
									Fabricas[f][TieneGuardia1] = 1;
									Fabricas[f][ActorGuardia1] = CreateActor(66, -1983.3815,207.0429,1040.0468,76.4343);
									SetActorVirtualWorld(Fabricas[f][ActorGuardia1], Fabricas[f][pVW]);
									SendClientMessage(playerid,-1,"Contrataste un {00CC00}nuevo empleado {FFFFFF}para la fábrica.");
									SetActorHealth(Fabricas[f][ActorGuardia1], 200.0);
								}
			                    else if(Fabricas[f][TieneGuardia2] == 0)
								{
									Fabricas[f][TieneGuardia2] = 1;
									Fabricas[f][ActorGuardia2] = CreateActor(163, -2010.1060,208.9797,1035.8162,272.1400);
									SetActorVirtualWorld(Fabricas[f][ActorGuardia2], Fabricas[f][pVW]);
                                    SendClientMessage(playerid,-1,"Contrataste un {00CC00}nuevo empleado {FFFFFF}para la fábrica.");
                                    SetActorHealth(Fabricas[f][ActorGuardia2], 200.0);
								}
			                    else if(Fabricas[f][TieneGuardia3] == 0)
								{
									Fabricas[f][TieneGuardia3] = 1;
									Fabricas[f][ActorGuardia3] = CreateActor(223, -2016.1063,233.2106,1035.8162,229.3722);
									SetActorVirtualWorld(Fabricas[f][ActorGuardia3], Fabricas[f][pVW]);
                                    SendClientMessage(playerid,-1,"Contrataste un {00CC00}nuevo empleado {FFFFFF}para la fábrica.");
                                    SetActorHealth(Fabricas[f][ActorGuardia3], 200.0);
								}
			                    else if(Fabricas[f][TieneGuardia4] == 0)
								{
									Fabricas[f][TieneGuardia4] = 1;
									Fabricas[f][ActorGuardia4] = CreateActor(166, -2022.6560,243.8168,1035.8162,145.2300);
									SetActorVirtualWorld(Fabricas[f][ActorGuardia4], Fabricas[f][pVW]);
                                    SendClientMessage(playerid,-1,"Contrataste un {00CC00}nuevo empleado {FFFFFF}para la fábrica.");
                                    SetActorHealth(Fabricas[f][ActorGuardia4], 200.0);
								}
			                    else if(Fabricas[f][TieneGuardia5] == 0)
								{
									Fabricas[f][TieneGuardia5] = 1;
									Fabricas[f][ActorGuardia5] = CreateActor(124, -2023.5002,244.8579,1035.8389,1.5771);
									SetActorVirtualWorld(Fabricas[f][ActorGuardia5], Fabricas[f][pVW]);
                                    SendClientMessage(playerid,-1,"Contrataste un {00CC00}nuevo empleado {FFFFFF}para la fábrica.");
                                    SetActorHealth(Fabricas[f][ActorGuardia5], 200.0);
								}
			                    else return SendClientMessage(playerid,-1,"{EB0000}No puedes{FFFFFF}contratar más empleados de esta clase.");
			                    QuitarDineroFabrica(f,800000);
			                    GuardarFabrica(f);
                            }
					    }
					}
                }
            }
     	}
		case F_SACARMA:
		{
		    if(response)
		    {
		        switch(listitem)
				{
				    case 0:
					{
					    Loop(f,MAX_FABRICAS)
					    if(Fabricas[f][pBanda] == PlayerInfo[playerid][pFaccion])
					    {
					        if(PlayerInfo[playerid][@Nivel] == 1) return SendClientMessage(playerid,-1,"Necesitas mínimo nivel 2 para sacar un arma de la estantería.");
					        if(Fabricas[f][pSniper] > 0)
					        {
					            if(GetPlayerWeapon(playerid) == 34) return SendClientMessage(playerid,-1,"Ya tienes equipada un arma de estas.");
					            Fabricas[f][pSniper] --;
					            ActualizarSnipers(f,2);
                                DarArma(playerid,34);
                                ActualizarLabelArmas(f);
                                GuardarFabrica(f);
					        }
					        else SendClientMessage(playerid,-1,"No más de este arma en el estante.");
					    }
					}
					case 1:
					{
					    Loop(f,MAX_FABRICAS)
					    if(Fabricas[f][pBanda] == PlayerInfo[playerid][pFaccion])
					    {
					        if(PlayerInfo[playerid][@Nivel] == 1) return SendClientMessage(playerid,-1,"Necesitas mínimo nivel 2 para sacar un arma de la estantería.");
					        if(Fabricas[f][pRecortada] > 0)
					        {
					            if(GetPlayerWeapon(playerid) == 26) return SendClientMessage(playerid,-1,"Ya tienes equipada un arma de estas.");
					            Fabricas[f][pRecortada] --;
					            ActualizarRecortadas(f,2);
                                DarArma(playerid,26);
                                ActualizarLabelArmas(f);
                                GuardarFabrica(f);
					        }
					        else SendClientMessage(playerid,-1,"No más de este arma en el estante.");
					    }
					}
					case 2:
					{
					    Loop(f,MAX_FABRICAS)
					    if(Fabricas[f][pBanda] == PlayerInfo[playerid][pFaccion])
					    {
					        if(PlayerInfo[playerid][@Nivel] == 1) return SendClientMessage(playerid,-1,"Necesitas mínimo nivel 2 para sacar un arma de la estantería.");
					        if(Fabricas[f][pUzi] > 0)
					        {
					            if(GetPlayerWeapon(playerid) == 28) return SendClientMessage(playerid,-1,"Ya tienes equipada un arma de estas.");
					            Fabricas[f][pUzi] --;
					            ActualizarUzi(f,2);
                                DarArma(playerid,28);
                                ActualizarLabelArmas(f);
                                GuardarFabrica(f);
					        }
					        else SendClientMessage(playerid,-1,"No más de este arma en el estante.");
					    }
					}
					case 3:
					{
					    Loop(f,MAX_FABRICAS)
					    if(Fabricas[f][pBanda] == PlayerInfo[playerid][pFaccion])
					    {
					        if(PlayerInfo[playerid][@Nivel] == 1) return SendClientMessage(playerid,-1,"Necesitas mínimo nivel 2 para sacar un arma de la estantería.");
					        if(Fabricas[f][pTec9] > 0)
					        {
					            if(GetPlayerWeapon(playerid) == 32) return SendClientMessage(playerid,-1,"Ya tienes equipada un arma de estas.");
					            Fabricas[f][pTec9] --;
					            ActualizarTec(f,2);
                                DarArma(playerid,32);
                                ActualizarLabelArmas(f);
                                GuardarFabrica(f);
					        }
					        else SendClientMessage(playerid,-1,"No más de este arma en el estante.");
					    }
					}
                }
            }
        }
		case DCONFIG:
		{
			if(response)
			{
				switch(listitem)
				{
					//-----------
					case 0:
					{
						if(CanalDudas[playerid] == 1)
						{
							CanalDudas[playerid] = 0;
							MostrarOpciones(playerid);
						}
						else if(CanalDudas[playerid] == 0)
						{
							CanalDudas[playerid] = 1;
							MostrarOpciones(playerid);
						}
					}
					case 1:
					{
						if(PlayerInfo[playerid][pMuteos] == 1)
						{
							PlayerInfo[playerid][pMuteos] = 0;
							MostrarOpciones(playerid);
						}
						else if(PlayerInfo[playerid][pMuteos] == 0)
						{
							PlayerInfo[playerid][pMuteos] = 1;
							MostrarOpciones(playerid);
						}
					}
					case 2:
					{
						if(PlayerInfo[playerid][pSonidos] == 1)
						{
							PlayerInfo[playerid][pSonidos] = 0;
							MostrarOpciones(playerid);
						}
						else if(PlayerInfo[playerid][pSonidos] == 0)
						{
							PlayerInfo[playerid][pSonidos] = 1;
							MostrarOpciones(playerid);
						}
					}
					case 3:
					{
						if(PlayerInfo[playerid][pAlerta] == 1)
						{
							PlayerInfo[playerid][pAlerta] = 0;
							MostrarOpciones(playerid);
						}
						else if(PlayerInfo[playerid][pAlerta] == 0)
						{
							PlayerInfo[playerid][pAlerta] = 1;
							MostrarOpciones(playerid);
						}
					}
					case 4:
					{
						if(PlayerInfo[playerid][pGuia] == 1)
						{
							PlayerInfo[playerid][pGuia] = 0;
							MostrarOpciones(playerid);
						}
						else if(PlayerInfo[playerid][pGuia] == 0)
						{
							PlayerInfo[playerid][pGuia] = 1;
							MostrarOpciones(playerid);
						}
					}
					case 5:
					{
						if(PlayerInfo[playerid][pBarras] == 0)
						{
							HidePlayerProgressBar(playerid, Progressbar[playerid][Sed]);
							HidePlayerProgressBar(playerid, Progressbar[playerid][Hambre]);
							PlayerInfo[playerid][pBarras] = 1;
							MostrarOpciones(playerid);
						}
						else if(PlayerInfo[playerid][pBarras] == 1)
						{
							SetPlayerProgressBarValue(playerid,Progressbar[playerid][Sed], PlayerInfo[playerid][pSed]);
							UpdatePlayerProgressBar(playerid,Progressbar[playerid][Sed]);
							SetPlayerProgressBarMaxValue(playerid,Progressbar[playerid][Sed], 100);
							ShowPlayerProgressBar(playerid, Progressbar[playerid][Sed]);
							SetPlayerProgressBarValue(playerid,Progressbar[playerid][Hambre], PlayerInfo[playerid][pHambre]);
							UpdatePlayerProgressBar(playerid,Progressbar[playerid][Hambre]);
							SetPlayerProgressBarMaxValue(playerid,Progressbar[playerid][Hambre], 100);
							ShowPlayerProgressBar(playerid, Progressbar[playerid][Hambre]);
							PlayerInfo[playerid][pBarras] = 0;
							MostrarOpciones(playerid);
						}
					}
					case 6:
					{
					    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
					    {
							if(PlayerInfo[playerid][pVelocimetro] == 0)
							{
							    PlayerInfo[playerid][pVelocimetro] = 1;
							    TextDrawHideForPlayer(playerid, text1prueba[0]);
								TextDrawHideForPlayer(playerid, text1prueba[1]);
								TextDrawHideForPlayer(playerid, TEXTDRAWBOX1);
								TextDrawHideForPlayer(playerid, TEXTDRAWBOX2);
								TextDrawHideForPlayer(playerid, TEXTDRAWBOX3);
								TextDrawHideForPlayer(playerid, TEXTDRAWBOX4);
								PlayerTextDrawHide(playerid, ContadorVelocimetro[playerid][0]);
								TextDrawHideForPlayer(playerid, velocimetro6);
								PlayerTextDrawHide(playerid, ContadorVelocimetro[playerid][1]);
								TextDrawHideForPlayer(playerid, Velocimetrotd[0]);
								TextDrawHideForPlayer(playerid, Velocimetrotd[1]);
								HidePlayerProgressBar(playerid, Progressbar[playerid][Combustible]);
								KillTimer(Bajando[playerid]);
								HidePlayerProgressBar(playerid, Progressbar[playerid][Velocimetro]);
								MostrarOpciones(playerid);
							}
							else if(PlayerInfo[playerid][pVelocimetro] == 1)
							{
							    PlayerInfo[playerid][pVelocimetro] = 0;
							    MostrarOpciones(playerid);
							    MostrarVelocimetro(playerid);
           					}
						}
      					if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
						{
							if(PlayerInfo[playerid][pVelocimetro] == 0)
							{
								PlayerInfo[playerid][pVelocimetro] = 1;
						    	MostrarOpciones(playerid);
							}
							else if(PlayerInfo[playerid][pVelocimetro] == 1)
							{
			    				PlayerInfo[playerid][pVelocimetro] = 0;
						    	MostrarOpciones(playerid);
							}
						}
					}
				}
			}
		}
		case AlquilarSalon1:
		{
	    	if(!response)
			{
				format(Alquilador,sizeof(Alquilador),"Nadie");
				Alquilado = false;
				HorasSalon = 0;
				Personas = 0;
				PrecioSalon = 0;
				NivelSalon = 0;
				format(NombreEvento,sizeof(NombreEvento),"Sin Nombre");
				format(DescriEvento,sizeof(DescriEvento),"Sin Descripción");
				TipoEvento = 0;
				return 0;
			}
			if(IsNumeric(inputtext) == 0 || isnull(inputtext)) return ShowPlayerDialog(playerid,AlquilarSalon1,DIALOG_STYLE_INPUT,"Alquiler de salón","Tiempo en horas:","Siguiente","Salir");
		    if(strval(inputtext) <= 0) return 1;
			if(strval(inputtext) > 8)
			{
				SendClientMessage(playerid,-1,"");
				ShowPlayerDialog(playerid,AlquilarSalon1,DIALOG_STYLE_INPUT,"Alquiler de salón","Tiempo en horas:","Siguiente","Salir");
				return true;
			}
			new Precio = 20000 * HorasSalon;
			if(GetPlayerMoney(playerid) < Precio)
			{
				SendClientMessage(playerid,-1,"Necesitas {00D61C}$20.000{FFFFFF} para pagar el contrato del alquiler.");
				format(Alquilador,sizeof(Alquilador),"Nadie");
				Alquilado = false;
				HorasSalon = 0;
				Personas = 0;
				PrecioSalon = 0;
				NivelSalon = 0;
				format(NombreEvento,sizeof(NombreEvento),"Sin Nombre");
				format(DescriEvento,sizeof(DescriEvento),"Sin Descripción");
				TipoEvento = 0;
				return 1;
			}
			HorasSalon = strval(inputtext);
			ShowPlayerDialog(playerid,AlquilarSalon2,DIALOG_STYLE_INPUT,"Nombre del evento","Máximo 100 caracteres:","Siguiente","Salir");
		}
		case AlquilarSalon2:
		{
	    	if(!response)
			{
				format(Alquilador,sizeof(Alquilador),"Nadie");
				Alquilado = false;
				HorasSalon = 0;
				Personas = 0;
				PrecioSalon = 0;
				NivelSalon = 0;
				format(NombreEvento,sizeof(NombreEvento),"Sin Nombre");
				format(DescriEvento,sizeof(DescriEvento),"Sin Descripción");
				TipoEvento = 0;
				return 0;
			}
	    	if(strlen(inputtext) > 100 || isnull(inputtext)) return ShowPlayerDialog(playerid,AlquilarSalon2,DIALOG_STYLE_INPUT,"Nombre del evento","Máximo 100 caracteres:","Siguiente","Salir");
			format(NombreEvento,sizeof(NombreEvento),"%s",inputtext);
			ShowPlayerDialog(playerid,AlquilarSalon3,DIALOG_STYLE_INPUT,"Descripción del evento","Máximo 150 caracteres:","Siguiente","Salir");
		}
		case AlquilarSalon3:
		{
	    	if(!response)
			{
				format(Alquilador,sizeof(Alquilador),"Nadie");
				Alquilado = false;
				HorasSalon = 0;
				Personas = 0;
				PrecioSalon = 0;
				NivelSalon = 0;
				format(NombreEvento,sizeof(NombreEvento),"Sin Nombre");
				format(DescriEvento,sizeof(DescriEvento),"Sin Descripción");
				TipoEvento = 0;
				return 0;
			}
		    if(strlen(inputtext) > 150 || isnull(inputtext)) return ShowPlayerDialog(playerid,AlquilarSalon3,DIALOG_STYLE_INPUT,"Descripción del evento","Máximo 150 caracteres:","Siguiente","Salir");
			format(DescriEvento,sizeof(DescriEvento),"%s",inputtext);
			ShowPlayerDialog(playerid,AlquilarSalon4,DIALOG_STYLE_INPUT,"Precio de las entradas","Costo de la entrada","Siguiente","Salir");
		}
		case AlquilarSalon4:
		{
	    	if(!response)
			{
				format(Alquilador,sizeof(Alquilador),"Nadie");
				Alquilado = false;
				HorasSalon = 0;
				Personas = 0;
				PrecioSalon = 0;
				NivelSalon = 0;
				format(NombreEvento,sizeof(NombreEvento),"Sin Nombre");
				format(DescriEvento,sizeof(DescriEvento),"Sin Descripción");
				TipoEvento = 0;
				return 0;
			}
		    if(isnull(inputtext) || IsNumeric(inputtext) == 0) return ShowPlayerDialog(playerid,AlquilarSalon4,DIALOG_STYLE_INPUT,"Precio de las entradas","Costo de la entrada","Siguiente","Salir");
		    if(strval(inputtext) <= 0)
			{
				SendClientMessage(playerid,-1,"El precio de las entradas {FF3300}tiene que ser superior{FFFFFF} a {00CC00}$0{FFFFFF}.");
				ShowPlayerDialog(playerid,AlquilarSalon4,DIALOG_STYLE_INPUT,"Precio de las entradas","Costo de la entrada","Siguiente","Salir");
				return 1;
			}
		    if(strval(inputtext) > 900)
			{
		    	SendClientMessage(playerid,-1,"El precio de las entradas {FF3300}tiene que ser menor{FFFFFF} a {00CC00}$900{FFFFFF}.");
				ShowPlayerDialog(playerid,AlquilarSalon4,DIALOG_STYLE_INPUT,"Precio de las entradas","Costo de la entrada","Siguiente","Salir");
				return 1;
			}
			PrecioSalon = strval(inputtext);
			ShowPlayerDialog(playerid,AlquilarSalon5,DIALOG_STYLE_INPUT,"Nivel necesario","Nivel mínimo necesario para ingresar:","Siguiente","Salir");
		}
		case AlquilarSalon5:
		{
	    	if(!response)
			{
				format(Alquilador,sizeof(Alquilador),"Nadie");
				Alquilado = false;
				HorasSalon = 0;
				Personas = 0;
				PrecioSalon = 0;
				NivelSalon = 0;
				format(NombreEvento,sizeof(NombreEvento),"Sin Nombre");
				format(DescriEvento,sizeof(DescriEvento),"Sin Descripción");
				TipoEvento = 0;
				return 0;
			}
	    	if(isnull(inputtext) || IsNumeric(inputtext) == 0) return ShowPlayerDialog(playerid,AlquilarSalon5,DIALOG_STYLE_INPUT,"Nivel necesario","Nivel mínimo necesario para ingresar:","Siguiente","Salir");
			if(strval(inputtext) <= 1)
			{
			    SendClientMessage(playerid,-1,"El nivel requerido para ingresar {FF3300}tiene que ser superior{FFFFFF} a {00CC00}1{FFFFFF}.");
		    	ShowPlayerDialog(playerid,AlquilarSalon5,DIALOG_STYLE_INPUT,"Nivel necesario","Nivel mínimo necesario para ingresar:","Siguiente","Salir");
			    return 1;
			}
			NivelSalon = strval(inputtext);
			ShowPlayerDialog(playerid,AlquilarSalon6,DIALOG_STYLE_LIST,"Tipo de evento:","General\nArtes marciales\nExposición de autos\nConcierto","Siguiente","Salir");
		}
		case AlquilarSalon6:
		{
	    	if(!response)
			{
				format(Alquilador,sizeof(Alquilador),"Nadie");
				Alquilado = false;
				HorasSalon = 0;
				Personas = 0;
				PrecioSalon = 0;
				NivelSalon = 0;
				format(NombreEvento,sizeof(NombreEvento),"Sin Nombre");
				format(DescriEvento,sizeof(DescriEvento),"Sin Descripción");
				TipoEvento = 0;
				return 0;
			}
		    TipoEvento = listitem+1;
		    format(string,sizeof(string),"{FFFFFF}Nombre del evento: %s",NombreEvento);
	    	format(string,sizeof(string),"%s\nDescripción: %s",string,DescriEvento);
	    	format(string,sizeof(string),"%s\nCosto de las entradas: {00CC00}$%d{FFFFFF}.",string,PrecioSalon);
		    format(string,sizeof(string),"%s\nNivel requerido: %d",string,NivelSalon);
		    format(string,sizeof(string),"%s\nDuración del contrato de alquiler: %d",string,HorasSalon);
	    	if(TipoEvento == 1) format(string,sizeof(string),"%s\nTipo de evento: General",string);
		    if(TipoEvento == 2) format(string,sizeof(string),"%s\nTipo de evento: Artes marciales",string);
		    if(TipoEvento == 3) format(string,sizeof(string),"%s\nTipo de evento: Exposición de autos",string);
	    	if(TipoEvento == 4) format(string,sizeof(string),"%s\nTipo de evento: Concierto",string);
		    ShowPlayerDialog(playerid,AlquilarSalon7,DIALOG_STYLE_MSGBOX,"Confirmar",string,"Crear","Cancelar");
		}
		case AlquilarSalon7:
		{
	    	if(!response)
			{
				format(Alquilador,sizeof(Alquilador),"Nadie");
				Alquilado = false;
				HorasSalon = 0;
				Personas = 0;
				PrecioSalon = 0;
				NivelSalon = 0;
				format(NombreEvento,sizeof(NombreEvento),"Sin Nombre");
				format(DescriEvento,sizeof(DescriEvento),"Sin Descripción");
				TipoEvento = 0;
				return 0;
			}
			if(Alquilado == true) return SendClientMessage(playerid,-1,"Acaban de alquilar el salón de eventos.");
			new Precio = 20000 * HorasSalon;
			if(GetPlayerMoney(playerid) < Precio)
			{
				SendClientMessage(playerid,-1,"Necesitas {00D61C}$20.000{FFFFFF} para pagar el contrato del alquiler.");
				format(Alquilador,sizeof(Alquilador),"Nadie");
				Alquilado = false;
				HorasSalon = 0;
				Personas = 0;
				PrecioSalon = 0;
				NivelSalon = 0;
				format(NombreEvento,sizeof(NombreEvento),"Sin Nombre");
				format(DescriEvento,sizeof(DescriEvento),"Sin Descripción");
				TipoEvento = 0;
				return 1;
			}
    		SetTimer("SalonTimer",1000*60*60*HorasSalon,0);
	     	Delete3DTextLabel(TextoSalon);
			format(string,sizeof(string),"Alquilaste el salón por {00CC00}%d hora(s){FFFFFF}.",HorasSalon);
  			SendClientMessage(playerid,-1,string);
			SendClientMessage(playerid,-1,"Para recibir ayuda sobre el funcionamiento del salón, escribe {DBED16}/ayuda salon");
			format(string,sizeof(string),"Stream ID: {DBED16}50");
			SendClientMessage(playerid,-1,string);
			SendClientMessage(playerid, -1, "Si se pierde la conexion escribe {DBED16}/sincronizar{FFFFFF}.");
			format(Alquilador,sizeof(Alquilador),"%s", PlayerName(playerid));
			format(string,sizeof(string),"{F6F61D}/comprar entrada{FFFFFF}\nCosto:{00D61C} $%d",PrecioSalon);
			TextoSalon2 = Create3DTextLabel(string, 0xFFFFFF00, -1253.2917,2116.7095,1246.5457, 5, 1, 0);
			Alquilado = true;

			if(TipoEvento == 2)
			{
    			if(BoxObj == 1) return SendClientMessage(playerid, -1, "Los objetos de box ya fueron cargados.");
				ObjBox[0] = CreateDynamicObject(2773, -1243.44995, 2091.02002, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[1] = CreateDynamicObject(2773, -1240.93005, 2091.02002, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[2] = CreateDynamicObject(2773, -1238.37000, 2091.02002, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[3] = CreateDynamicObject(2773, -1235.81006, 2091.02002, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[4] = CreateDynamicObject(2773, -1233.25000, 2091.02002, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[5] = CreateDynamicObject(2773, -1230.63000, 2091.02002, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[6] = CreateDynamicObject(2773, -1231.15002, 2087.80005, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[7] = CreateDynamicObject(2773, -1227.96997, 2091.02002, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[8] = CreateDynamicObject(2773, -1228.56995, 2087.80005, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[9] = CreateDynamicObject(2773, -1225.34998, 2091.02002, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[10] = CreateDynamicObject(2773, -1226.05005, 2087.80005, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[11] = CreateDynamicObject(2773, -1222.77002, 2091.02002, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[12] = CreateDynamicObject(2773, -1223.46997, 2087.80005, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[13] = CreateDynamicObject(2773, -1222.52002, 2086.32007, 1246.04602,   0.00000, 0.00000, 0.00000);
				ObjBox[14] = CreateDynamicObject(2773, -1220.20996, 2091.02002, 1246.04602,   0.00000, 0.00000, 90.00000);
				ObjBox[15] = CreateDynamicObject(2773, -1219.27002, 2089.63989, 1246.04602,   0.00000, 0.00000, 0.00000);
				ObjBox[16] = CreateDynamicObject(2773, -1219.27002, 2087.71997, 1246.04602,   0.00000, 0.00000, 0.00000);
				ObjBox[17] = CreateDynamicObject(3398, -1214.26001, 2093.91992, 1263.19202,   180.00000, 0.00000, 229.00000);
				ObjBox[18] = CreateDynamicObject(3398, -1214.22998, 2080.51001, 1263.19202,   180.00000, 0.00000, 316.00000);
				ObjBox[19] = CreateDynamicObject(3398, -1199.35999, 2093.89990, 1263.19202,   180.00000, 0.00000, 141.00000);
				ObjBox[20] = CreateDynamicObject(3398, -1199.22998, 2080.56006, 1263.19202,   0.00000, 180.00000, 222.00000);
				ObjBox[21] = CreateDynamicObject(3819, -1210.98999, 2099.10010, 1246.53601,   0.00000, 0.00000, 90.00000);
				ObjBox[22] = CreateDynamicObject(3819, -1210.98999, 2075.88989, 1246.53601,   0.00000, 0.00000, -90.00000);
				ObjBox[23] = CreateDynamicObject(3819, -1202.37000, 2099.10010, 1246.53601,   0.00000, 0.00000, 90.00000);
				ObjBox[24] = CreateDynamicObject(3819, -1202.37000, 2075.88989, 1246.53601,   0.00000, 0.00000, -90.00000);
				ObjBox[25] = CreateDynamicObject(3819, -1195.04004, 2091.72998, 1246.53601,   0.00000, 0.00000, 0.00000);
				ObjBox[26] = CreateDynamicObject(3819, -1195.04004, 2083.11011, 1246.53601,   0.00000, 0.00000, 0.00000);
				ObjBox[27] = CreateDynamicObject(11472, -1215.58997, 2085.83008, 1243.38000,   0.00000, 0.00000, -90.00000);
				ObjBox[28] = CreateDynamicObject(14434, -1212.78003, 2083.34009, 1253.18994,   0.00000, 0.00000, 90.00000);
				ObjBox[29] = CreateDynamicObject(14434, -1200.83997, 2091.01001, 1253.18994,   0.00000, 0.00000, -90.00000);
				ObjBox[30] = CreateDynamicObject(14791, -1206.72998, 2087.78003, 1247.57202,   0.00000, 0.00000, 0.00000);
				ObjBox[31] = CreateDynamicObject(16089, -1206.79004, 2088.67993, 1254.18005,   0.00000, -90.00000, 90.00000);
				ObjBox[32] = CreateDynamicObject(16089, -1206.80005, 2085.70996, 1254.18005,   0.00000, 90.00000, 90.00000);
				BoxObj = 1;
			}
			if(TipoEvento == 3)
			{
    	        if(ExpObj == 1) return SendClientMessage(playerid, -1, "Los objetos de la exposición ya fueron cargados.");
				ObjExp[0] = CreateDynamicObject(13646, -1223.97998, 2057.28003, 1245.06580,   0.00000, 0.00000, 0.00000);
				ObjExp[1] = CreateDynamicObject(13646, -1214.02002, 2057.28003, 1245.06580,   0.00000, 0.00000, 0.00000);
				ObjExp[2] = CreateDynamicObject(13646, -1223.97998, 2047.28003, 1245.06580,   0.00000, 0.00000, 0.00000);
				ObjExp[3] = CreateDynamicObject(13646, -1214.02002, 2047.28003, 1245.06580,   0.00000, 0.00000, 0.00000);
				ObjExp[4] = CreateDynamicObject(13646, -1204.02002, 2057.28003, 1245.06580,   0.00000, 0.00000, 0.00000);
				ObjExp[5] = CreateDynamicObject(13646, -1223.97998, 2037.28003, 1245.06580,   0.00000, 0.00000, 0.00000);
				ObjExp[6] = CreateDynamicObject(13646, -1204.02002, 2047.28003, 1245.06580,   0.00000, 0.00000, 0.00000);
				ObjExp[7] = CreateDynamicObject(13646, -1214.02002, 2037.28003, 1245.06580,   0.00000, 0.00000, 0.00000);
				ObjExp[8] = CreateDynamicObject(13646, -1204.02002, 2037.28003, 1245.06580,   0.00000, 0.00000, 0.00000);
				ObjExp[9] = CreateDynamicObject(13646, -1179.35999, 2057.28003, 1245.06580,   0.00000, 0.00000, 0.00000);
				ObjExp[10] = CreateDynamicObject(13646, -1179.35999, 2047.28003, 1245.06580,   0.00000, 0.00000, 0.00000);
				ObjExp[11] = CreateDynamicObject(13646, -1169.35999, 2057.28003, 1245.08984,   0.00000, 0.00000, 0.00000);
				ObjExp[12] = CreateDynamicObject(13646, -1179.35999, 2037.28003, 1245.06580,   0.00000, 0.00000, 0.00000);
				ObjExp[13] = CreateDynamicObject(13646, -1169.35999, 2047.28003, 1245.06580,   0.00000, 0.00000, 0.00000);
				ObjExp[14] = CreateDynamicObject(13646, -1159.35999, 2057.28003, 1245.06580,   0.00000, 0.00000, 0.00000);
				ObjExp[15] = CreateDynamicObject(13646, -1169.38770, 2037.27405, 1245.06580,   0.00000, 0.00000, 0.00000);
				ObjExp[16] = CreateDynamicObject(13646, -1159.35999, 2047.28003, 1245.06580,   0.00000, 0.00000, 0.00000);
				ObjExp[17] = CreateDynamicObject(13646, -1159.35999, 2037.28003, 1245.06580,   0.00000, 0.00000, 0.00000);
	    		ExpObj = 1;
			}
			if(TipoEvento == 4)
			{
    			if(ConObj == 1) return SendClientMessage(playerid, -1, "Los objetos del concierto ya fueron cargados.");
				ObjCon[0] = CreateDynamicObject(19609, -1188.19055, 2031.88159, 1247.32886,   0.00000, 0.00000, 180.00000);
				ObjCon[1] = CreateDynamicObject(19317, -1192.71997, 2027.67627, 1248.13135,   0.00000, 0.00000, 180.00000);
				ObjCon[2] = CreateDynamicObject(19319, -1193.42944, 2027.67627, 1248.05945,   0.00000, 0.00000, 180.00000);
				ObjCon[3] = CreateDynamicObject(1806, -1188.17456, 2030.85193, 1247.32776,   0.00000, 0.00000, 0.00000);
  			  	ConObj = 1;
			}
		}
	
		case DSEXOO:
		{
			if(response)
			{
			    new stringas[200],string2[200];
			    format(stringas, sizeof(stringas), "%s comenzó a practicarle sexo oral a %s.", PlayerName(SexoOral[playerid]), PlayerName(playerid));
				ProxDetector(20.0, playerid, stringas, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				new Float:armadura;
				GetPlayerArmour(SexoOral[playerid], armadura);
				if(ESPROSTI[playerid] == 0)
				{
				    if(armadura <= 40) EstablecerChaleco(playerid,armadura+10);
					else if(armadura >= 40 && armadura <= 50) EstablecerChaleco(playerid,50);
				}
				else if(ESPROSTI[playerid] == 1)
				{
				    if(armadura <= 60) EstablecerChaleco(playerid,armadura+20);
					else if(armadura >= 60 && armadura <= 80) EstablecerChaleco(playerid,80);
				}
				DarDinero(SexoOral[playerid],precioofertax[playerid]);
				QuitarDinero(playerid,precioofertax[playerid]);
				format(string2,sizeof(string2),"Pagaste $%d por el servicio.",precioofertax[playerid]);
			    SendClientMessage(playerid,-1,string2);
				ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_START_P", 4.0, 0, 0, 0, 1, 0, 1);
				SetTimerEx("Sexo1",1000,false,"d",SexoOral[playerid]);
				SetTimerEx("Sexo2",3000,false,"d",SexoOral[playerid]);
				SetTimerEx("Sexo3",5000,false,"d",SexoOral[playerid]);
				SetTimerEx("Sexo4",7000,false,"d",SexoOral[playerid]);
				SetTimerEx("Sexo5",10000,false,"d",SexoOral[playerid]);
				SetTimerEx("Sexo6",12000,false,"d",playerid);
				precioofertax[playerid] = 0;
				ESPROSTI[playerid] = -1;
				SexoOral[playerid] = -1;
			}
			else
			{
				new rechazo[38+MAX_PLAYER_NAME];
				format(rechazo,sizeof(rechazo),"{00CCFF}%s{FFFFFF} rechazó tu oferta.", PlayerName(playerid));
			 	SendClientMessage(SexoOral[playerid],-1,rechazo);
			 	precioofertax[playerid] = 0;
				ESPROSTI[playerid] = -1;
				SexoOral[playerid] = -1;
		 	}
		}
		case DGUIA:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:	cmd_llamar(playerid,"911");
					case 1: cmd_llamar(playerid,"71");
					case 2: cmd_llamar(playerid,"815");
					case 3: cmd_llamar(playerid,"80");
					case 4: cmd_llamar(playerid,"82");
				}
			}
		}
		case MMEDICO:
		{
			if(response)
			{
				switch(listitem)    {
					case 0:
					{
						cmd_servicio(playerid,"medico");
						TextDrawShowForPlayer(playerid, NewPlayer[2]); TextDrawShowForPlayer(playerid, NewPlayer[0]);
                    }
					case 1: cmd_aceptar(playerid,"muerte");
					case 2:
					{
					    for(new f = 0; f < MAX_FABRICAS; f++)
						{
						    if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda])
						    {
						        if(Fabricas[f][MedicoContratado] != 0)
						        {
						            SendClientMessage(playerid,-1,"Fuiste trasladado a la {f8345c}fábrica{FFFFFF} y el {20c126}médico{FFFFFF} te está atendiendo.");
									new x = random(4);
									switch(x)
									{
									    case 0:
									    {
									    	SetPosEx(playerid,-2016.0607,217.8159,1035.8162,2.4527,Fabricas[f][pInt],Fabricas[f][pVW]);
									    	SetActorPos(Fabricas[f][ActorMedico],-2021.8250,217.5037,1035.8162);
									    }
									    case 1:
									    {
									    	SetPosEx(playerid,-2016.0607,217.8159,1035.8162,2.4527,Fabricas[f][pInt],Fabricas[f][pVW]);
									    	SetActorPos(Fabricas[f][ActorMedico],-2021.8250,217.5037,1035.8162);
									    }
									    case 2:
									    {
									    	SetPosEx(playerid,-2016.0607,217.8159,1035.8162,2.4527,Fabricas[f][pInt],Fabricas[f][pVW]);
									    	SetActorPos(Fabricas[f][ActorMedico],-2021.8250,217.5037,1035.8162);
									    }
									    case 3:
									    {
									    	SetPosEx(playerid,-2016.0607,217.8159,1035.8162,2.4527,Fabricas[f][pInt],Fabricas[f][pVW]);
									    	SetActorPos(Fabricas[f][ActorMedico],-2021.8250,217.5037,1035.8162);
									    }
                                    }
									FabricaMedica[playerid] = 1;
									EstablecerVida(playerid, 50);
									HCurando[playerid] = SetTimerEx("CurandoHospital",1000,true,"d",playerid);
									ValueTimerBugH[playerid] = 0;
									TextDrawHideForPlayer(playerid, Sangre);
								    TextDrawHideForPlayer(playerid, NewPlayer[2]);
								    TextDrawHideForPlayer(playerid, NewPlayer[0]);
									PlayerInfo[playerid][Agonizando] = 0;
									Muriendo[playerid] = 0;
									VariableCaido[playerid] = 0;
									Esposando[playerid] = 0;
						        }
							}
						}
					}
				}
			}
			else
			{
				TextDrawShowForPlayer(playerid, NewPlayer[2]);
				TextDrawShowForPlayer(playerid, NewPlayer[0]);
            }
		}
		case ACTIVIDAD:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					    Loop(f,MAX_FABRICAS)
						if(Fabricas[f][pBanda] == PlayerInfo[playerid][pFaccion])
						{
					        switch(Fabricas[f][pID])
					        {
					            case 3:
								{
									if(Quimicos1 == 1) return SendClientMessage(playerid,-1,"No hay químicos disponibles, intenta de nuevo más tarde.");
									SetPlayerCheckpoint(playerid,-27.3778,2337.5212,24.1406,5.0);
									SendClientMessage(playerid,-1,"Ve con el {00CCFF}vehículo de la fábrica {FFFFFF}hasta el {EB0000}punto marcado{FFFFFF} en el mapa.");
									QuimicosActivo[f] = 2;
									return 1;
								}
					            case 1:
								{
									if(Quimicos2 == 1) return SendClientMessage(playerid,-1,"No hay químicos disponibles, intenta de nuevo más tarde.");
									SetPlayerCheckpoint(playerid,-1853.9966,123.2759,15.1172,5.0);
									SendClientMessage(playerid,-1,"Ve con el {00CCFF}vehículo de la fábrica {FFFFFF}hasta el {EB0000}punto marcado{FFFFFF} en el mapa.");
									QuimicosActivo[f] = 3;
									return 1;
								}
					            case 2:
								{
									if(Quimicos3 == 1) return SendClientMessage(playerid,-1,"No hay químicos disponibles, intenta de nuevo más tarde.");
									SetPlayerCheckpoint(playerid,-1043.5349,1546.3799,33.0007,5.0);
									SendClientMessage(playerid,-1,"Ve con el {00CCFF}vehículo de la fábrica {FFFFFF}hasta el {EB0000}punto marcado{FFFFFF} en el mapa.");
									QuimicosActivo[f] = 1;
		 							return 1;
								}
					            default: return 1;
					        }
			    		}
					}
					case 1:
					{
						Loop(f,MAX_FABRICAS)
					    if(Fabricas[f][pBanda] == PlayerInfo[playerid][pFaccion])
					    {
					        if(MetanfetaminaEnVenta[f] != 0)
					        {
						        switch(MetanfetaminaEnVenta[f])
						        {
						            case 0: { SetPlayerCheckpoint(playerid,2431.9109,-1672.5043,13.6113,7.0); MetanfetaminaEnSlot[f] = 1; }
						            case 1: { SetPlayerCheckpoint(playerid,1520.5901,-1473.3662,9.5000,7.0); MetanfetaminaEnSlot[f] = 2; }
						            case 2: { SetPlayerCheckpoint(playerid,1091.5337,-1245.3550,15.8272,7.0); MetanfetaminaEnSlot[f] = 3; }
						            case 3: { SetPlayerCheckpoint(playerid,2206.5029,-2296.2642,14.7647,7.0); MetanfetaminaEnSlot[f] = 4; }
						            default: { SetPlayerCheckpoint(playerid,1091.5337,-1245.3550,15.8272,7.0); MetanfetaminaEnSlot[f] = 3; }
	                            }
                                SendClientMessage(playerid,-1,"Carga el {00CCFF}vehículo de la fábrica{FFFFFF} con metanfetamina y llévalo al {EB0000}punto marcado{FFFFFF} en el mapa.");
                                return 1;
                            }
					        MetanfetaminaEnVenta[f] = 1;
					        ActualizarCajasMeta(f);
					        SendClientMessage(playerid,-1,"Carga el {00CCFF}vehículo de la fábrica{FFFFFF} con metanfetamina y llévalo al {EB0000}punto marcado{FFFFFF} en el mapa.");
					        new randomzone = random(4);
					        switch(randomzone) {
					            case 0:	{
									MarcadoCamioneroGPS(playerid,2431.9109,-1672.5043,13.6113,7.0);
									MetanfetaminaEnSlot[f] = 1;
								}
								case 1:	{
									MarcadoCamioneroGPS(playerid,1520.5901,-1473.3662,9.5000,7.0);
					            	MetanfetaminaEnSlot[f] = 2;
								}
								case 2:	{
									MarcadoCamioneroGPS(playerid,1091.533,-1245.3550,15.8272,7.0);
					            	MetanfetaminaEnSlot[f] = 3;
								}
								case 3:	{
									MarcadoCamioneroGPS(playerid,2206.5029, -2296.2642,14.7647,7.0);
					            	MetanfetaminaEnSlot[f] = 4;
								}
					            default: {
									MarcadoCamioneroGPS(playerid,1091.5337,-1245.3550,15.8272,7.0);
					            	MetanfetaminaEnSlot[f] = 3;
								}
                            }
						}
					}
					case 2:
					{
					    for(new f = 0; f < MAX_FABRICAS; f++)
						{
						    if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda])
						    {
								if(Fabricas[f][pSoborno] == 0 && Fabricas[f][PagarActiva] == 0)
								{
								    SendClientMessage(playerid,-1,"Agarra un {00CC00}bolso de dinero{FFFFFF} y llévalo a la{3399FF} oficina del comandante{FFFFFF} en el Departamento de policía de Los Santos.");
								    Fabricas[f][PagarActiva] = 1;
									SetPlayerCheckpoint(playerid,1543.1437,-1675.5537,13.5559,5.0);
                                }
                                else SendClientMessage(playerid,-1,"Aún no puedes pagar el soborno, {EB0000}intenta otro día{FFFFFF}.");
						    }
                        }
					}
				}
			}
		}
		case FMEDICO:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					    for(new f = 0; f < MAX_FABRICAS; f++)
						{
						    if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda])
						    {
						        if(PlayerInfo[playerid][pRango] != 8) return SendClientMessage(playerid,-1,"No puedes hacer eso.");
						        if(Fabricas[f][MedicoContratado] != 0) return SendClientMessage(playerid,-1,"Tu fábrica ya cuenta con atención médica.");
						        Fabricas[f][MedicoContratado] = 276;
						        Fabricas[f][ActorMedico] = CreateActor(Fabricas[f][MedicoContratado], -2022.5638,215.6430,1035.8162,302.6615);
						        SetActorVirtualWorld(Fabricas[f][ActorMedico], Fabricas[f][pVW]);
                                QuitarDineroFabrica(f,2800000);
                                SendClientMessage(playerid,-1,"Contrataste un {00CC00}nuevo empleado {FFFFFF}para la fábrica.");
                                GuardarFabrica(f);
                                SetActorHealth(Fabricas[f][ActorMedico], 100.0);
							}
					    }
					}
					case 1:
                    {
                        for(new f = 0; f < MAX_FABRICAS; f++)
						{
						    if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda])
						    {
						        if(PlayerInfo[playerid][pRango] != 8) return SendClientMessage(playerid,-1,"No puedes hacer eso.");
						    	if(Fabricas[f][MedicoContratado] != 0) return SendClientMessage(playerid,-1,"Tu fábrica ya cuenta con atención médica.");
						        Fabricas[f][MedicoContratado] = 275;
						        Fabricas[f][ActorMedico] = CreateDynamicActor(Fabricas[f][MedicoContratado], -2022.5638,215.6430,1035.8162,302.6615);
						        SetActorVirtualWorld(Fabricas[f][ActorMedico], Fabricas[f][pVW]);
								QuitarDineroFabrica(f,2000000);
								SendClientMessage(playerid,-1,"Contrataste un {00CC00}nuevo empleado {FFFFFF}para la fábrica.");
								GuardarFabrica(f);
								SetActorHealth(Fabricas[f][ActorMedico], 100.0);
							}
					    }
					}
					case 2:
					{
                        for(new f = 0; f < MAX_FABRICAS; f++)
						{
						    if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda])
						    {
						        if(PlayerInfo[playerid][pRango] != 8) return SendClientMessage(playerid,-1,"No puedes hacer eso.");
						        if(Fabricas[f][MedicoContratado] != 0) return SendClientMessage(playerid,-1,"Tu fábrica ya cuenta con atención médica.");
						        Fabricas[f][MedicoContratado] = 274;
						        Fabricas[f][ActorMedico] = CreateDynamicActor(Fabricas[f][MedicoContratado], -2022.5638,215.6430,1035.8162,302.6615);
						        SetActorVirtualWorld(Fabricas[f][ActorMedico], Fabricas[f][pVW]);
                                QuitarDineroFabrica(f,4000000);
                                SendClientMessage(playerid,-1,"Contrataste un {00CC00}nuevo empleado {FFFFFF}para la fábrica.");
                                GuardarFabrica(f);
                                SetActorHealth(Fabricas[f][ActorMedico], 100.0);
							}
					    }
					}
				}
			}
		}
		case REGISTROOFF:
		{
		    if(response) return Kick(playerid);
		    else return Kick(playerid);
        }
		case CVEHICULO:
		{
			if(response) cmd_comprar(playerid,"vehiculo");
			else
			{
				RemovePlayerFromVehicle(playerid);
				SetTimerEx("RespawnearV",3000,false,"d",GetPlayerVehicleID(playerid));
			}
		}
		case ADMINISTRACION:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: ShowPlayerDialog(playerid, C_EMPLEADOS, DIALOG_STYLE_TABLIST,"Elige el tipo de empleado", "Moledor de cristal\nMédico\nSeguridad", "Siguiente", "Salir");
					case 1: {
                        new stringas[512];
                        format(stringas,sizeof(stringas),"Modelo\tCantidad\tPrecio{FFFFFF}\nSniper rifle\t10\t{00CC00}$10.000.000\n{FFFFFF}Escopeta recortada\t10\t{00CC00}$4.000.000\n{FFFFFF}Micro UZI\t10\t{00CC00}$2.000.000\n{FFFFFF}Tec-9\t10\t{00CC00}$2.500.000");
                        ShowPlayerDialog(playerid, C_ARMASF, DIALOG_STYLE_TABLIST_HEADERS,"Armas", stringas, "Comprar", "Salir");
					}
					case 2: ShowPlayerDialog(playerid, COMPRACHALE, DIALOG_STYLE_MSGBOX, "{FFFFFF}Chalecos antibalas", "{FFFFFF}¿Desea comprar {00CCFF}10 chalecos antibalas{FFFFFF} por{00CC00} $500.000{FFFFFF}?","Comprar","Salir");
					case 3:	{
					    new regresar[256];
					    format(regresar,sizeof(regresar),"{FFFFFF}Si regresas {00CCFF}el vehículo{FFFFFF} a la fábrica, {EB0000}se perderá{FFFFFF} lo que tenga cargado.\n\n¿Estás seguro de hacer esto?");
					    ShowPlayerDialog(playerid, REG_AFABRICA, DIALOG_STYLE_MSGBOX, "Regresar vehículo", regresar,"Si","No");
					}
					case 4: {
                    	for(new f = 0; f < MAX_FABRICAS; f++) {
						    if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda]) {
                        		if(IsVehicleOccupied(Fabricas[f][Auto2F])) return SendClientMessage(playerid,-1,"Este auto está ocupado.");
                                RespawnearVF2(Fabricas[f][Auto2F]);
                                ObjetoDistraccion(Fabricas[f][Auto2F],f);
        						SendClientMessage(playerid,-1,"Regresaste el vehículo de {00CCFF}distracción{FFFFFF} a la {d42939}fábrica de metanfetamina{FFFFFF}.");
                          	}
                        }
					}
				}
			}
		}
		case REG_AFABRICA:
		{
		    if(response)
		    {
		    	for(new f = 0; f < MAX_FABRICAS; f++)
				{
				    if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda])
				    {
				        if(IsVehicleOccupied(Fabricas[f][Auto1F])) return SendClientMessage(playerid,-1,"Este auto está ocupado.");
                        {
                         	SetVehicleToRespawn(Fabricas[f][Auto1F]);
                            LinkVehicleToInterior(Fabricas[f][Auto1F], Fabricas[f][pInt]);
        					SetVehicleVirtualWorld(Fabricas[f][Auto1F], Fabricas[f][pVW]);
        					SetVehicleHealth(Fabricas[f][Auto1F], 5000.0);
        					DestroyDynamicObject(CajaMeta[f][0]);
							CajaMeta[f][0] = CreateDynamicObject(1271,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000);
							DestroyDynamicObject(CajaMeta[f][1]);
							CajaMeta[f][1] = CreateDynamicObject(1271,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000);
							DestroyDynamicObject(CajaMeta[f][2]);
							CajaMeta[f][2] = CreateDynamicObject(1271,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000);
							DestroyDynamicObject(CajaMeta[f][3]);
							CajaMeta[f][3] = CreateDynamicObject(1271,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000);
							DestroyDynamicObject(CajaMeta[f][4]);
							CajaMeta[f][4] = CreateDynamicObject(1271,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000);
							DestroyDynamicObject(BarrilMeta[f][0]);
							BarrilMeta[f][0] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000);
							DestroyDynamicObject(BarrilMeta[f][1]);
							BarrilMeta[f][1] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000);
							DestroyDynamicObject(BarrilMeta[f][2]);
							BarrilMeta[f][2] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000);
							DestroyDynamicObject(BarrilMeta[f][3]);
							BarrilMeta[f][3] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000);
							DestroyDynamicObject(BarrilMeta[f][4]);
							BarrilMeta[f][4] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000);
							VehiculoConBarril[Fabricas[f][Auto1F]] = 0;
							VehiculoConCajas[Fabricas[f][Auto1F]] = 0;
        					SendClientMessage(playerid,-1,"Regresaste {00CCFF}el vehículo{FFFFFF} a la {d42939}fábrica de metanfetamina{FFFFFF}.");
                        }
             		}
				}
        	}
    	}
		case COMPRACHALE:
		{
		    if(response)
		    {
				for(new f = 0; f < MAX_FABRICAS; f++)
				{
				    if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda])
				    {
				        if(PlayerInfo[playerid][pRango] == 8)
				        {
				            if(Fabricas[f][pCantidadDinero] >= 500000)
				            {
								new cantidadchale, cantidadmaxima = 24, cantidadxchale = 50000;
				                if(Fabricas[f][pChalecos] >= 24) return SendClientMessage(playerid,-1,"La chalequería está llena.");
				                if(Fabricas[f][pChalecos] > 14 && Fabricas[f][pChalecos] < 24)
				                {
				                    cantidadchale = cantidadmaxima - Fabricas[f][pChalecos]; 	cantidadxchale = cantidadchale;
				                }
				                else { cantidadchale = 10; cantidadxchale = 500000; }
				                SendClientMessage(playerid,-1,"Compraste un paquete de chalecos anti-balas para la fábrica.");
								Fabricas[f][pCantidadDinero] -= cantidadxchale;
								Fabricas[f][pChalecos] += cantidadchale;
								ActualizarCantidadChalecos(f);
								ActualizarDineroPared(f);
								UpdateAllBagsMoney(f);
								ActualizarCantidadTChale(f);
								GuardarFabrica(f);
							}
							else SendClientMessage(playerid,-1,"No hay el dinero suficiente en tu {d42939}fabrica de metanfetamina{FFFFFF}.");
                        }
                    }
                }
		    }
        }
		case DIALOG_SALON:
		if(response)
		{
			switch(listitem)
		    {
	    	    case 0:	{
	            	if(PlayerInfo[playerid][jDinero] < 110) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($110)");
					QuitarDinero(playerid, 110);
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
					SendClientMessage(playerid, -1, "Compraste un vino por {00CC00}$110{FFFFFF}. Presiona {DBED16}'Y'{FFFFFF} para beber.");
	        	}
	        	case 1:	{
	        	    if(PlayerInfo[playerid][jDinero] < 80) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($80)");
					QuitarDinero(playerid, 80);
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
					SendClientMessage(playerid, -1, "Compraste una cerveza por {00CC00}$80{FFFFFF}. Presiona {DBED16}'Y'{FFFFFF} para beber.");
	        	}
	        	case 2:	{
	            	if(PlayerInfo[playerid][jDinero] < 70) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($70)");
					QuitarDinero(playerid, 65);
					TieneSprunk[playerid] = 1;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
					SendClientMessage(playerid, -1, "Compraste un vaso de sprunk por {00CC00}$65{FFFFFF}. Presiona {DBED16}'Y'{FFFFFF} para beber.");
	        	}
	        	case 3:	{
	            	if(PlayerInfo[playerid][jDinero] < 170) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($170)");
					QuitarDinero(playerid, 170);
                    TieneAquariu[playerid] = 1;
					SendClientMessage(playerid, -1, "Compraste una botella de aquarius por {00CC00}$170{FFFFFF}. Presiona {DBED16}'Y'{FFFFFF} para beber.");
					SetPlayerAttachedObject(playerid,2,19570,6,0.103999,0.036000,-0.127999,175.999954,-157.499877,174.199905,0.620001,0.515000,0.856000);
	        	}
	    	}
		}
		case DIALOG_PIZZA:
		if(response)
		{
			switch(listitem)
		    {
	    	    case 0:	{
	            	if(PlayerInfo[playerid][jDinero] < 40) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($40)");
					QuitarDinero(playerid, 40);
                    TienePizza[playerid] = 1;
                    AccionesRol(playerid,"compró una porción de pizza.", 20);
					SendClientMessage(playerid, -1, "Compraste una porción de pizza por {00CC00}$40{FFFFFF}. Presiona {DBED16}'Y'{FFFFFF} para comer.");
					SetPlayerAttachedObject(playerid,2,2702,6,0.125999,0.011999,0.000000,-4.999999,-98.099983,16.600004,1.000000,1.000000,1.000000);
	        	}
	        	case 1:	{
	        	    if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya tienes un objeto en tu inventario.");
	            	if(PlayerInfo[playerid][jDinero] < 40) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($300)");
	            	SetPlayerAttachedObject(playerid, 2, 19571, 6, 0.263000,0.039999,-0.141999,116.299987,-76.799858,136.799835,0.800998,1.016000,0.866998);
					Objeto[playerid] = 10004;
					QuitarDinero(playerid, 300);
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
					SendClientMessage(playerid, -1, "Compraste una caja de pizza por {00CC00}$300{FFFFFF}.");
	        	}
	        	case 2:	{
	        	    if(PlayerInfo[playerid][jDinero] < 70) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($70)");
					TieneSprunk[playerid] = 1;
					QuitarDinero(playerid, 65);
					AccionesRol(playerid,"compró un vaso de Sprunk.", 20);
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
					SendClientMessage(playerid, -1, "Compraste un vaso de sprunk por {00CC00}$65{FFFFFF}. Presiona {DBED16}'Y'{FFFFFF} para beber.");
	        	}
	        	case 3:	{
	            	if(PlayerInfo[playerid][jDinero] < 170) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($170)");
					QuitarDinero(playerid, 170);
                    TieneAquariu[playerid] = 1;
                    AccionesRol(playerid,"compró una botella de aquarius.", 20);
					SendClientMessage(playerid, -1, "Compraste una botella de aquarius por {00CC00}$170{FFFFFF}. Presiona {DBED16}'Y'{FFFFFF} para beber.");
					SetPlayerAttachedObject(playerid,2,19570,6,0.103999,0.036000,-0.127999,175.999954,-157.499877,174.199905,0.620001,0.515000,0.856000);
	        	}
	    	}
		}
		case CONTROLES:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					    if(strcmp(Alquilador,PlayerName(playerid),true) == 0 || PermisoSalon[playerid] == true)
						{
							if(Humo1Ojb == 0)
							{
							    format(string,sizeof(string),"El jugador {DBED16}%s{FFFFFF} encendio las maquinas de humo delanteras.", PlayerName(playerid));
								MandarMensajeSalon(string, playerid);
						    	ObjHumo1[0] = CreateDynamicObject(2415, -1186.80493, 2036.34924, 1245.98035,   0.00000, 0.00000, 0.00000);
								ObjHumo1[1] = CreateDynamicObject(2415, -1196.69702, 2036.34924, 1245.98035,   0.00000, 0.00000, 0.00000);
								SendClientMessage(playerid,-1,"Encendiste las maquinas de humo delanteras.");
								Humo1Ojb = 1;
							}
							else
							{
							    format(string,sizeof(string),"El jugador {DBED16}%s{FFFFFF} apago las maquinas de humo delanteras.", PlayerName(playerid));
								MandarMensajeSalon(string, playerid);
						    	DestroyDynamicObject(ObjHumo1[0]);
						    	DestroyDynamicObject(ObjHumo1[1]);
								SendClientMessage(playerid,-1,"Apagaste las maquinas de humo delanteras.");
								Humo1Ojb = 0;
							}
							return 1;
						}
					}
					case 1:
					{
					    if(strcmp(Alquilador,PlayerName(playerid),true) == 0 || PermisoSalon[playerid] == true)
						{
							if(Humo2Ojb == 0)
							{
							    format(string,sizeof(string),"El jugador {DBED16}%s{FFFFFF} encendio las maquinas de humo traseras", PlayerName(playerid));
								MandarMensajeSalon(string, playerid);
						    	ObjHumo2[0] = CreateDynamicObject(2415, -1185.50305, 2031.20337, 1245.98035,   0.00000, 0.00000, 0.00000);
								ObjHumo2[1] = CreateDynamicObject(2415, -1198.21899, 2031.20337, 1245.98035,   0.00000, 0.00000, 0.00000);
								SendClientMessage(playerid,-1,"Encendiste las maquinas de humo traseras.");
								Humo2Ojb = 1;
							}
							else
							{
							    format(string,sizeof(string),"El jugador {DBED16}%s{FFFFFF} apago las maquinas de humo traseras.", PlayerName(playerid));
								MandarMensajeSalon(string, playerid);
						    	DestroyDynamicObject(ObjHumo2[0]);
						    	DestroyDynamicObject(ObjHumo2[1]);
								SendClientMessage(playerid,-1,"Apagaste las maquinas de humo traseras.");
								Humo2Ojb = 0;
							}
							return 1;
						}
					}
				}
			}
		}
		case DAYUDA:
		{
			if(response) DudaUser(playerid,DudaTexto[playerid]);
		}
		case CREPUESTOS:
		{
			if(response)
			{
			    if(strfind(inputtext,"=",true) != -1 || strfind(inputtext,"´",true) != -1 || strfind(inputtext,"'",true) != -1 || strfind(inputtext,"`",true) != -1 || strfind(inputtext,",",true) != -1 || strfind(inputtext,"¨",true) != -1) return SendClientMessage(playerid,-1,"Error, intentalo nuevamente y ten cuidado con lo que escribes.");
				if(strval(inputtext) > 0 && strval(inputtext) <= 100)
				{
					new suma;
					suma = PlayerInfo[playerid][Repuestos]+strval(inputtext);
					if(suma <= 100)
					{
						format(string,500,"Has comprado {EB0000}%d{FFFFFF} repuestos por {00CC00}$%d{FFFFFF}.",strval(inputtext),strval(inputtext)*100);
						SendClientMessage(playerid,-1,string);
						PlayerInfo[playerid][Repuestos] = suma;
						QuitarDinero(playerid,strval(inputtext)*100);
					}
					else if(suma > 100)
					{
						new total = 100-PlayerInfo[playerid][Repuestos];
						if(total == 0) return 1;
						format(string,500,"Has comprado {EB0000}%d{FFFFFF} repuestos por {00CC00}$%d{FFFFFF}.",total,total*100);
						SendClientMessage(playerid,-1,string);
						PlayerInfo[playerid][Repuestos]+= total;
						QuitarDinero(playerid,total*100);
					}
				}
			}
		}
		case BOTIQUIN:
		{
			if(response)
			{
				GetPlayerName(playerid,pName,24);
				switch(listitem)
				{
					case 0:  { PlayerInfo[playerid][pMedicina] = 1; }
					case 1:  { PlayerInfo[playerid][pMedicina] = 2; }
					case 2:  { PlayerInfo[playerid][pMedicina] = 3; }
					case 3:  { PlayerInfo[playerid][pMedicina] = 4; }
					case 4:  { PlayerInfo[playerid][pMedicina] = 5; }
					case 5:  { PlayerInfo[playerid][pMedicina] = 6; }
					case 6:  { PlayerInfo[playerid][pMedicina] = 7; }
					case 7:  { PlayerInfo[playerid][pMedicina] = 8; }
					case 8:  { PlayerInfo[playerid][pMedicina] = 9; }
					case 9:  { PlayerInfo[playerid][pMedicina] = 9; }
					case 10: { PlayerInfo[playerid][pMedicina] = 10;}
				}
				AccionesRol(playerid,"está sacando cosas del botiquín.", 20);
				SendClientMessage(playerid,-1,"Agarraste cosas del botiquín, ahora puedes {DBED16}/atender paciente [id]");
			}
		}
		case DHOSPITAL:
		{
			if(response)
			{
				switch(MedicoServicioHospital[playerid])
				{
				    case 1:
				    {
						if(Camas[0][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1161.6230,-1326.7755,-10.7922);
							SetPlayerFacingAngle(playerid, 270.0000);
							Camas[0][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 1;
							SalaMedica[playerid] = 1;
						}
						else if(Camas[1][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1164.6235,-1326.6575,-10.7922);
							SetPlayerFacingAngle(playerid, 270.0000);
							Camas[1][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 2;
							SalaMedica[playerid] = 1;
						}
						else if(Camas[2][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1167.6244,-1326.6260,-10.7922);
							SetPlayerFacingAngle(playerid, 270.0000);
							Camas[2][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 3;
							SalaMedica[playerid] = 1;
						}
						else if(Camas[3][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1161.3224,-1334.5416,-10.7922);
							SetPlayerFacingAngle(playerid, 270.0000);
							Camas[3][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 4;
							SalaMedica[playerid] = 1;
						}
						else if(Camas[4][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1164.0248,-1334.4489,-10.7922);
							SetPlayerFacingAngle(playerid, 270.0000);
							Camas[4][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 5;
							SalaMedica[playerid] = 2;
						}
						else if(Camas[5][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1167.5247,-1334.3013,-10.7922);
							SetPlayerFacingAngle(playerid, 270.0000);
							Camas[5][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 6;
							SalaMedica[playerid] = 2;
						}
						else if(Camas[6][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1161.1195,-1345.6721,-10.7849);
							SetPlayerFacingAngle(playerid, 270.0000);
							Camas[6][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 7;
							SalaMedica[playerid] = 2;
						}
						else if(Camas[7][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1163.6248,-1345.5731,-10.7849);
							SetPlayerFacingAngle(playerid, 270.0000);
							Camas[7][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 8;
							SalaMedica[playerid] = 2;
						}
						else if(Camas[8][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1166.3199,-1345.4902,-10.7922);
							SetPlayerFacingAngle(playerid, 270.0000);
							Camas[8][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 9;
							SalaMedica[playerid] = 3;
						}
						else if(Camas[9][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1169.0242,-1345.5874,-10.7922);
							SetPlayerFacingAngle(playerid, 270.0000);
							Camas[9][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 10;
							SalaMedica[playerid] = 3;
						}
						else if(Camas[10][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1151.2056,-1341.4349,-10.7922);
							SetPlayerFacingAngle(playerid, 90.0000);
							Camas[10][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 11;
							SalaMedica[playerid] = 3;
						}
						else if(Camas[11][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1146.0042,-1341.5201,-10.7922);
							SetPlayerFacingAngle(playerid, 90.0000);
							Camas[11][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 12;
							SalaMedica[playerid] = 3;
						}
						else if(Camas[12][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1147.1177,-1345.5469,-10.7922);
							SetPlayerFacingAngle(playerid, 270.0000);
							Camas[12][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 13;
							SalaMedica[playerid] = 3;
						}
						else return SendClientMessage(playerid,-1,"Todas las camillas estan ocupadas, espera unos minutos.");
				    }
				    case 2:
				    {
						if(Camas2[0][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, -2736.6050,605.2236,1385.6547);
							SetPlayerFacingAngle(playerid, 90.0000);
							Camas2[0][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 1;
							SalaMedica[playerid] = 1;
						}
						else if(Camas2[1][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, -2733.7058,605.2838,1385.6466);
							SetPlayerFacingAngle(playerid, 90.0000);
							Camas2[1][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 2;
							SalaMedica[playerid] = 1;
						}
						else if(Camas2[2][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, -2732.0964,617.2080,1385.6547);
							SetPlayerFacingAngle(playerid, 270.0000);
							Camas2[2][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 3;
							SalaMedica[playerid] = 1;
						}
						else if(Camas2[3][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, -2735.9060,617.1780,1385.6547);
							SetPlayerFacingAngle(playerid, 270.0000);
							Camas2[3][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 4;
							SalaMedica[playerid] = 1;
						}
						else if(Camas2[4][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, -2740.0652,617.2619,1385.6547);
							SetPlayerFacingAngle(playerid, 270.0000);
							Camas2[4][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 5;
							SalaMedica[playerid] = 1;
						}
						else if(Camas2[5][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, -2710.9250,615.2498,1385.6525);
							SetPlayerFacingAngle(playerid, 270.0000);
							Camas2[5][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 6;
							SalaMedica[playerid] = 2;
						}
						else if(Camas2[6][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, -2707.3308,615.4142,1385.6547);
							SetPlayerFacingAngle(playerid, 270.0000);
							Camas2[6][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 7;
							SalaMedica[playerid] = 2;
						}
						else if(Camas[7][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, -2701.9253,614.7819,1385.6547);
							SetPlayerFacingAngle(playerid, 90.0000);
							Camas[7][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 8;
							SalaMedica[playerid] = 2;
						}
						else if(Camas2[8][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, -2721.8760,605.2635,1385.6469);
							SetPlayerFacingAngle(playerid, 90.0000);
							Camas2[8][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 9;
							SalaMedica[playerid] = 2;
						}
						else if(Camas2[9][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, -2719.0059,605.2079,1385.6469);
							SetPlayerFacingAngle(playerid, 90.0000);
							Camas2[9][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 10;
							SalaMedica[playerid] = 3;
						}
						else if(Camas2[10][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, -2716.3760,605.2236,1385.6469);
							SetPlayerFacingAngle(playerid, 90.0000);
							Camas2[10][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 11;
							SalaMedica[playerid] = 3;
						}
						else return SendClientMessage(playerid,-1,"Todas las camillas estan ocupadas, espera unos minutos.");
				    }
				    case 3:
				    {
						if(Camas3[0][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1243.5217,-824.0790,1164.2759);
							SetPlayerFacingAngle(playerid, 270.0000);
							Camas3[0][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 1;
							SalaMedica[playerid] = 1;
						}
						else if(Camas3[1][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1245.6647,-823.9564,1164.2759);
							SetPlayerFacingAngle(playerid, 270.0000);
							Camas3[1][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 2;
							SalaMedica[playerid] = 1;
						}
						else if(Camas3[2][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1248.0640,-824.0443,1164.2759);
							SetPlayerFacingAngle(playerid, 270.0000);
							Camas3[2][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 3;
							SalaMedica[playerid] = 1;
						}
						else if(Camas3[3][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1250.5441,-823.9576,1164.2759);
							SetPlayerFacingAngle(playerid, 270.0000);
							Camas3[3][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 4;
							SalaMedica[playerid] = 1;
						}
						else if(Camas3[4][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1244.9844,-827.4844,1164.2759);
							SetPlayerFacingAngle(playerid, 90.0000);
							Camas3[4][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 5;
						}
						else if(Camas[5][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1247.0841,-827.3026,1164.2759);
							SetPlayerFacingAngle(playerid, 90.0000);
							Camas[5][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 6;
							SalaMedica[playerid] = 2;
						}
						else if(Camas3[6][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1249.4647,-827.4329,1164.2759);
							SetPlayerFacingAngle(playerid, 90.0000);
							Camas3[6][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 7;
							SalaMedica[playerid] = 2;
						}
						else if(Camas3[7][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1251.7148,-827.3094,1164.2759);
							SetPlayerFacingAngle(playerid, 90.0000);
							Camas3[7][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 8;
							SalaMedica[playerid] = 2;
						}
						else if(Camas3[8][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1250.4844,-824.0141,1167.9960);
							SetPlayerFacingAngle(playerid, 90.0000);
							Camas3[8][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 9;
							SalaMedica[playerid] = 2;
						}
						else if(Camas3[9][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1248.0615,-824.1375,1167.9960);
							SetPlayerFacingAngle(playerid, 90.0000);
							Camas3[9][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 10;
							SalaMedica[playerid] = 3;
						}
						else if(Camas3[10][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1245.6633,-823.9637,1167.9960);
							SetPlayerFacingAngle(playerid, 90.0000);
							Camas3[10][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 11;
							SalaMedica[playerid] = 3;
						}
						else if(Camas3[11][PlayerInfo[playerid][pVwCama]] == 0)
						{
							SetPlayerPos(playerid, 1243.4421,-824.1511,1167.9960);
							SetPlayerFacingAngle(playerid, 330.0000);
							Camas3[11][PlayerInfo[playerid][pVwCama]] = 1;
							PlayerInfo[playerid][pCama] = 12;
							SalaMedica[playerid] = 3;
						}
						else return SendClientMessage(playerid,-1,"Todas las camillas estan ocupadas, espera unos minutos.");
				    }
				}
				SendClientMessage(playerid,-1,"Por favor espera mientras los médicos te atienden.");
				if(PlayerInfo[playerid][jDinero] >= HCalculo[playerid]*10)
			    {
			        format(string,sizeof(string),"Pagaste {FF3300}$%d{FFFFFF} por los servicios médicos.",HCalculo[playerid]*10);
					SendClientMessage(playerid,-1,string);
					QuitarDinero(playerid,HCalculo[playerid]*10);
			    }
			    else if(PlayerInfo[playerid][pBanco] < HCalculo[playerid]*10)
			    {
                    format(string,sizeof(string),"Pagaste {FF3300}$%d{FFFFFF} usando tu cuenta bancaria.",HCalculo[playerid]*10);
					SendClientMessage(playerid,-1,string);
					PlayerInfo[playerid][pBanco] -= HCalculo[playerid]*10;
			    }
			    else SendClientMessage(playerid,-1,"El gobierno de San Andreas te pagó los servicios médicos.");
				MedicoServicioHospital[playerid] = 0;
				ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,0,0,1,0,1);
				HCurando[playerid] = SetTimerEx("CurandoHospital",1000,true,"d",playerid);
				ValueTimerBugH[playerid] = 0;
				PlayerInfo[playerid][pAtendido] = 0;
				for(new i=0;i<MAX_PLAYERS;i++)
				{
					if(RopaMedi[i] == 1 && PlayerInfo[i][pTrabajo] == T_Medico || PlayerInfo[i][pTrabajo2] == T_Medico && RopaMedi[i] == 1)
					{
						switch(GetPlayerVirtualWorld(i))
						{
						    case 6: //LS
						    {
								new texto[200];
								format(texto,sizeof(texto),"{FFFFFF}Hay un paciente en la {DBED15}sala %d{FFFFFF} esperando ser atendido.",SalaMedica[playerid]);
								SendClientMessage(i,-1,texto);
								format(texto,sizeof(texto),"(( Usa {DBED15}/revisar paciente %s{FFFFFF} {FFFFFF} junto al paciente para revisarlo. ))",PlayerName(playerid));
                                SendClientMessage(i,-1,texto);
								SetPlayerMarkerForPlayer(i, playerid, COLOR_GREEN3);
						    }
						    case 7: //Ganton
						    {
						        new texto[200];
								format(texto,sizeof(texto),"{FFFFFF}Hay un paciente en la {DBED15}sala %d{FFFFFF} esperando ser atendido.",SalaMedica[playerid]);
								SendClientMessage(i,-1,texto);
								format(texto,sizeof(texto),"(( Usa {DBED15}/revisar paciente %s{FFFFFF} {FFFFFF} junto al paciente para revisarlo. ))",PlayerName(playerid));
                                SendClientMessage(i,-1,texto);
								SetPlayerMarkerForPlayer(i, playerid, COLOR_GREEN3);
						    }
						    case 8: //SF
						    {
						        new texto[200];
								format(texto,sizeof(texto),"{FFFFFF}Hay un paciente en la {DBED15}sala %d{FFFFFF} esperando ser atendido.",SalaMedica[playerid]);
								SendClientMessage(i,-1,texto);
								format(texto,sizeof(texto),"(( Usa {DBED15}/revisar paciente %s{FFFFFF} {FFFFFF} junto al paciente para revisarlo. ))",PlayerName(playerid));
                                SendClientMessage(i,-1,texto);
								SetPlayerMarkerForPlayer(i, playerid, COLOR_GREEN3);
						    }
						    case 9: //LV
						    {
						        new texto[200];
								format(texto,sizeof(texto),"{FFFFFF}Hay un paciente en la {DBED15}sala 1{FFFFFF} esperando ser atendido.");
								SendClientMessage(i,-1,texto);
								format(texto,sizeof(texto),"(( Usa {DBED15}/revisar paciente %s{FFFFFF} {FFFFFF} junto al paciente para revisarlo. ))",PlayerName(playerid));
                                SendClientMessage(i,-1,texto);
								SetPlayerMarkerForPlayer(i, playerid, COLOR_GREEN3);
						    }
						}
					}
				}
			}
		}
		case DEMAIL:
		{
			if(!response) return Kick(playerid);
			if(strlen(inputtext) < 32)
			{
			    if(!IsCorrectMail(inputtext))
                {
					format(string,sizeof(string),"Ingresa un e-mail válido para recuperar tu contraseña en caso de perderla.\n\nTu e-mail:");
					ShowPlayerDialog(playerid, DEMAIL,DIALOG_STYLE_INPUT,"Ingresa tu dirección de e-mail",string,"Siguiente","Salir");
					return 0;
				}
				else
				{
					format(PlayerInfo[playerid][pEmail], 32, "%s", inputtext);
					new pQuery[200];
					mysql_format(Conecction, pQuery, sizeof(pQuery), "SELECT Username FROM `usuarios` WHERE `Email` = '%e';", inputtext);
					mysql_function_query(Conecction, pQuery, true, "OnQueryFinish", "dd", 0, playerid);
					ShowPlayerDialog(playerid,SEXO, DIALOG_STYLE_LIST,"¿Eres hombre o mujer?","Hombre\nMujer","Registrar","Salir");
				}
    		}
			else
			{
			    SendClientMessage(playerid,0xff9000ff,"Ingresa una dirección de e-mail válida.");
				format(string,sizeof(string),"Ingresa un e-mail válido para recuperar tu contraseña en caso de perderla.\n\nTu e-mail:");
				ShowPlayerDialog(playerid, DEMAIL,DIALOG_STYLE_INPUT,"Ingresa tu dirección de e-mail",string,"Registrar","Salir");
			}
		}
		case LOGIN:
		{
			if(!response) return Kick(playerid);
			if(strfind(inputtext,"=",true) != -1 || strfind(inputtext,"´",true) != -1 || strfind(inputtext,"'",true) != -1 || strfind(inputtext,"`",true) != -1 || strfind(inputtext,",",true) != -1 || strfind(inputtext,"¨",true) != -1) return Error(playerid);
            if(strlen(inputtext) <= 2)
			{
				ContraVacia[playerid] = 1;
				SendClientMessage(playerid, 0xAFAFAFAA, "Ingresa la contraseña" );
			}
			if(strlen(inputtext) > 18) SendClientMessage(playerid, 0xAFAFAFAA, "Contraseña muy larga.");

			if(response)
			{
				if(IsPlayerConnected(playerid))
				{
					new escapepass[100];
					mysql_real_escape_string(inputtext, escapepass);
					format(Query, sizeof(Query), "SELECT * FROM `usuarios` WHERE `Username` = '%s' AND `Password` = md5('%s')", PlayerInfo[playerid][NombreTemporal], escapepass);
					mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 1, playerid);
					format(PlayerInfo[playerid][ContraTemporal],128,"%s",escapepass);
				}
			}
		}
		case REGISTRO:
		{
			if(!response) return Kick(playerid);
			if(response)
			{
			    if(strfind(inputtext,"=",true) != -1 || strfind(inputtext,"´",true) != -1 || strfind(inputtext,"'",true) != -1 || strfind(inputtext,"`",true) != -1 || strfind(inputtext,",",true) != -1 || strfind(inputtext,"¨",true) != -1) return Error(playerid);
				if(!strlen(inputtext)) Kick(playerid);
				if(strlen(inputtext) < 4 || strlen(inputtext) > 18)
				{
					format(string, sizeof(string), "La contraseña que ingresaste es demasiado corta.\n", pName);
					format(string, sizeof(string), "%sLa contraseña debe contener de 4 a 18 caracteres", string);
					ShowPlayerDialog(playerid, REGISTRO, DIALOG_STYLE_PASSWORD,"Contraseña débil.",string,"Registrar","Salir");
				}
				else if(strlen(inputtext) > 3 && strlen(inputtext) < 21)
				{
					new string2[200];
					format(string2, sizeof(string2), "%s", inputtext);
					format(PlayerInfo[playerid][pPassword], 144, "%s",inputtext);
					format(string,sizeof(string),"Ingresa un e-mail válido para recuperar tu contraseña en caso de perderla.\n\nTu e-mail:");
			  		ShowPlayerDialog(playerid, DEMAIL,DIALOG_STYLE_INPUT,"Ingresa tu dirección de e-mail",string,"Siguiente","Salir");
                    KillTimer(LoginTimer[playerid]);
				}
			}
		}
		case DVERIFICAR:
		{
			if(response)
			{
				new string33[280];
				if(!IsCorrectMail(inputtext))
				{
					format(string33,sizeof(string33),"La dirección de correo {F7070B}%s{FFFFFF} parece no ser válida.");
					SendClientMessage(playerid,-1,string33);
					SendClientMessage(playerid,-1,"Para cambiar de correo ahora mismo usa, {DBED15}/cambiar correo");
					return 1;
				}
				format(string33, sizeof(string33),"Se ha enviado un correo de verificación a {00CCFF}%s{FFFFFF}.",PlayerInfo[playerid][pEmail]);
				SendClientMessage(playerid,-1,string33);
			}
			else ShowPlayerDialog(playerid, DCAMBIAR, DIALOG_STYLE_INPUT,"Modificar e-Mail","Ingresa una dirección de correo válida.","Cambiar","Cancelar");
		}
		case DVERIFICAR2:
		{
			if(response)
			{
				new kquery[200];
				//------------------------
				if(PlayerInfo[playerid][CodigoEmail] == strval(inputtext))
				{
					SendClientMessage(playerid,-1,"¡{0DE3FF}Correo Verificado{FFFFFF}! Ahora tu cuenta tendrá una seguridad superior.");
					format(kquery, 200, "UPDATE `usuarios` SET EstadoKEY='1' WHERE `Username`=('%s')",PlayerName(playerid));
					mysql_function_query(Conecction, kquery, true, "OnQueryFinish", "ii", 0, playerid);
					PlayerInfo[playerid][EstadoCorreo] = 1;
					TextDrawHideForPlayer(playerid, Verificar1);
					TextDrawHideForPlayer(playerid, Verificar2);
				}
				else
				{
					SendClientMessage(playerid,-1,"Código erroneo, por favor intenta nuevamente.");
					ShowPlayerDialog(playerid, DVERIFICAR2, DIALOG_STYLE_INPUT,"Vericicar E-Mail","Ingresa código de verificacón de tu cuenta","Verificar","Cancelar");
				}
			}
		}
		case DCAMBIAR:
		{
			if(response)
			{
			    if(PlayerInfo[playerid][PuedeCambiar] > 0) return SendClientMessage(playerid, -1, "Ya hay un cambio de correo pendiente, tienes que cancelarlo en la web para iniciar otro cambio.");
				new kquery[200];
				new DiaCambio, MesCambio, AnoCambio;
				getdate(AnoCambio, MesCambio, DiaCambio);
				if(!IsCorrectMail(inputtext)) ShowPlayerDialog(playerid, DCAMBIAR, DIALOG_STYLE_INPUT,"Modificar e-mail","Ingresa una dirección de correo válida.","Cambiar","Cancelar");
				else
				{
					MesCambio += 1;
					format(kquery, 200, "UPDATE `usuarios` SET CPendiente='1',FinAnoC='%d',FinMesC='%d',FinDiaC='%d',nuevocorreo='%s' WHERE `Username`=('%s')",AnoCambio, MesCambio, DiaCambio,inputtext, PlayerName(playerid));
					mysql_function_query(Conecction, kquery, true, "OnQueryFinish", "ii", 0, playerid);
					format(kquery, 200, "En {00CC00}30 d?as{FFFFFF} se cambiar? el correo a {00CCFF}%s{FFFFFF}.",inputtext);
					SendClientMessage(playerid,-1,kquery);
					SendClientMessage(playerid,-1,"El tiempo de espera es por la seguridad de la cuenta.");
					SendClientMessage(playerid,-1,"Si quieres cancelar el cambio de correo, tienes que ingresar con tus datos a la web del servidor.");
					PlayerInfo[playerid][PuedeCambiar] = 2;
				}
			}
		}
		case PRODUCTOS:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][jDinero] < 1500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($1500)");
						if(PlayerInfo[playerid][pNumero] > 0) return SendClientMessage(playerid,-1,"Ya tienes un teléfono móvil, escribe {DBED16}/ayuda{FFFFFF} para recibir ayuda.");
						new randphone, final_value;
						randphone = random(9999999);
						final_value = randphone + 50000000;
						PlayerInfo[playerid][pNumero] = final_value;
						QuitarDinero(playerid, 1500);
						format(string, sizeof(string), "Conseguiste un teléfono móvil por {00CC00}$1500{FFFFFF}, tu número es {DBED15}%d{FFFFFF}.",PlayerInfo[playerid][pNumero]);
						SendClientMessage(playerid, -1, string);
					}
					case 1:
					{
						if(PlayerInfo[playerid][jDinero] < 35) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($35)");
						if(PlayerInfo[playerid][pAgenda] == 1) return SendClientMessage(playerid,-1,"Ya tienes una guía teléfonica, escribe {DBED16}/numero {FFFFFF}[{DBED16}Nombre o ID{FFFFFF}] para averiguar el número de teléfono de la persona.");
						QuitarDinero(playerid, 35);
						PlayerInfo[playerid][pAgenda] = 1;
						SendClientMessage(playerid, -1, "Compraste una guía teléfonica por {00CC00}$35{FFFFFF}.");
						SendClientMessage(playerid, -1, "Usa {DBED15}/guia{FFFFFF} para ver números importantes.");
      					SendClientMessage(playerid, -1, "Para saber el número de teléfono de alguien escribe: {DBED16}/numero {FFFFFF}[{DBED16}Nombre o ID{FFFFFF}].");
					}
					case 2:
					{
				        if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
						{
							new vehiculo1[360],vehiculo2[360],vehiculo3[360],vehiculo4[360],mensaje[512];
							if(PlayerInfo[playerid][vModelo] > 0) format(vehiculo1, sizeof(vehiculo1), " Vehículo: {F6E200}%s{FFFFFF} | Patente: {00CCFF}%s{FFFFFF} | Precio: {FF0000}$%d{FFFFFF}.", NombreAuto[GetVehicleModel(autos[playerid])-400], PlayerInfo[playerid][vpatente], ((PlayerInfo[playerid][vPrecio] / 2) / 10) + 2000);
							if(PlayerInfo[playerid][vModelo2] > 0) format(vehiculo2, sizeof(vehiculo2), "\n{FFFFFF} Vehículo: {F6E200}%s{FFFFFF} | Patente: {00CCFF}%s{FFFFFF} | Precio: {FF0000}$%d{FFFFFF}.", NombreAuto[GetVehicleModel(autos2[playerid])-400], PlayerInfo[playerid][v2patente], ((PlayerInfo[playerid][v2Precio] / 2) / 10) + 2000);
							if(PlayerInfo[playerid][vModelo3] > 0) format(vehiculo3, sizeof(vehiculo3), "\n{FFFFFF} Vehículo: {F6E200}%s{FFFFFF} | Patente: {00CCFF}%s{FFFFFF} | Precio: {FF0000}$%d{FFFFFF}.", NombreAuto[GetVehicleModel(autos3[playerid])-400], PlayerInfo[playerid][v3patente], ((PlayerInfo[playerid][v3Precio] / 2) / 10) + 2000);
							if(PlayerInfo[playerid][vModelo4] > 0) format(vehiculo4, sizeof(vehiculo4), "\n{FFFFFF} Vehículo: {F6E200}%s{FFFFFF} | Patente: {00CCFF}%s{FFFFFF} | Precio: {FF0000}$%d{FFFFFF}.", NombreAuto[GetVehicleModel(autos4[playerid])-400], PlayerInfo[playerid][v4patente], ((PlayerInfo[playerid][v4Precio] / 2) / 10) + 2000);
							format(mensaje, sizeof(mensaje), "%s%s%s%s",	vehiculo1,vehiculo2,vehiculo3,vehiculo4);
							ShowPlayerDialog(playerid, TRABAV, DIALOG_STYLE_LIST, "¿Qué seguro quieres comprar?", mensaje, "Comprar","Cancelar");
						}
					}
					case 3:
					{
						if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
						{
							new vehiculo1[360],vehiculo2[360],vehiculo3[360],vehiculo4[360],mensaje[512];
							if(PlayerInfo[playerid][vModelo] > 0) format(vehiculo1, sizeof(vehiculo1), " Vehículo: {F6E200}%s{FFFFFF} | Patente: {00CCFF}%s{FFFFFF} | Precio: {FF0000}$%d{FFFFFF}.", NombreAuto[GetVehicleModel(autos[playerid])-400], PlayerInfo[playerid][vpatente], ((PlayerInfo[playerid][vPrecio] / 2) / 10) + 5000);
							if(PlayerInfo[playerid][vModelo2] > 0) format(vehiculo2, sizeof(vehiculo2), "\n{FFFFFF} Vehículo: {F6E200}%s{FFFFFF} | Patente: {00CCFF}%s{FFFFFF} | Precio: {FF0000}$%d{FFFFFF}.", NombreAuto[GetVehicleModel(autos2[playerid])-400], PlayerInfo[playerid][v2patente], ((PlayerInfo[playerid][v2Precio] / 2) / 10) + 5000);
							if(PlayerInfo[playerid][vModelo3] > 0) format(vehiculo3, sizeof(vehiculo3), "\n{FFFFFF} Vehículo: {F6E200}%s{FFFFFF} | Patente: {00CCFF}%s{FFFFFF} | Precio: {FF0000}$%d{FFFFFF}.", NombreAuto[GetVehicleModel(autos3[playerid])-400], PlayerInfo[playerid][v3patente], ((PlayerInfo[playerid][v3Precio] / 2) / 10) + 5000);
							if(PlayerInfo[playerid][vModelo4] > 0) format(vehiculo4, sizeof(vehiculo4), "\n{FFFFFF} Vehículo: {F6E200}%s{FFFFFF} | Patente: {00CCFF}%s{FFFFFF} | Precio: {FF0000}$%d{FFFFFF}.", NombreAuto[GetVehicleModel(autos4[playerid])-400], PlayerInfo[playerid][v4patente], ((PlayerInfo[playerid][v4Precio] / 2) / 10) + 5000);
							format(mensaje, sizeof(mensaje), "%s%s%s%s",	vehiculo1,vehiculo2,vehiculo3,vehiculo4);
							ShowPlayerDialog(playerid, ALARMAV, DIALOG_STYLE_LIST, "¿Qué alarma quieres comprar?", mensaje, "Comprar","Cancelar");
						}
					}
					case 4:
					{
						if(PlayerInfo[playerid][pRadio] != 0) return SendClientMessage(playerid,-1,"Ya tienes un radio comunicador, escribe {DBED16}!{FFFFFF} delante del mensaje.");
						if(PlayerInfo[playerid][jDinero] < 2000) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($2000)");
						PlayerInfo[playerid][pRadio] = 1;
						QuitarDinero(playerid, 2000);
						SendClientMessage(playerid,-1,"Compaste un radio comunicador por {00CC00}$2000{FFFFFF}.");
					}
					case 5:
					{
						if(PlayerInfo[playerid][pGPS] != 0) return SendClientMessage(playerid,-1,"Ya tienes un GPS, escribe {dbed16}/gps{FFFFFF} para ver lo puntos de interés.");
						if(PlayerInfo[playerid][jDinero] < 1500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($1500)");
						PlayerInfo[playerid][pGPS] = 1;
						QuitarDinero(playerid, 1500);
						SendClientMessage(playerid,-1,"Compraste un GPS por {00CC00}$1500{FFFFFF}.");
					}
					case 6:
					{
						if(PlayerInfo[playerid][jDinero] < 470) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($470)");
						if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya tienes un objeto en tu inventario.");
						SendClientMessage(playerid,-1,"Compraste 6 cervezas por {00CC00}$470{FFFFFF}, ahora guárdalas en una heladera.");
						SendClientMessage(playerid,-1,"Tienes que usar {DBED16}/heladera guardar objeto{FFFFFF}, o para tirarlas {DBED16}/tirar objeto");
						Objeto[playerid] = 1000;
						SetPlayerAttachedObject(playerid, 2, 2060, 6, 0.265999,0.002999,0.034000,107.000038,178.100204,175.399856,0.388000,0.463999,0.587999);
						QuitarDinero(playerid, 470);
					}
					case 7:
					{
						if(PlayerInfo[playerid][jDinero] < 470) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($590)");
						if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya tienes un objeto en tu inventario.");
						SendClientMessage(playerid,-1,"Compraste 6 botellas de vino por {00CC00}$590{FFFFFF}, ahora guárdalas en una heladera.");
						SendClientMessage(playerid,-1,"Tienes que usar {DBED16}/heladera guardar objeto{FFFFFF}, o para tirarlas {DBED16}/tirar objeto");
						Objeto[playerid] = 1001;
						SetPlayerAttachedObject(playerid, 2, 3800, 6, 0.262000,0.070999,0.021000,106.599998,-1.999999,171.599975,0.372999,0.239999,0.166000);
						QuitarDinero(playerid, 590);
					}
					case 8:
					{
						if(PlayerInfo[playerid][jDinero] < 470) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($200)");
						if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya tienes un objeto en tu inventario.");
						SendClientMessage(playerid,-1,"Compraste 4 vasos de sprunk por {00CC00}$200{FFFFFF}, ahora guárdalas en una heladera.");
						SendClientMessage(playerid,-1,"Tienes que usar {DBED16}/heladera guardar objeto{FFFFFF}, o para tirarlas {DBED16}/tirar objeto");
						Objeto[playerid] = 1002;
						SetPlayerAttachedObject(playerid, 2, 2900, 6, 0.256000,0.074999,0.019000,94.400001,0.000000,1.300018,0.376999,0.207000,0.164999);
						QuitarDinero(playerid, 200);
					}
					case 9:
					{
						if(PlayerInfo[playerid][jDinero] < 65) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($65)");
						TieneSprunk[playerid] = 1;
						QuitarDinero(playerid, 65);
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
						SendClientMessage(playerid, -1, "Compraste 1 sprunk por {00F000}65$");
						SendClientMessage(playerid, -1, "Presiona {DBED16}BIR{FFFFFF} para beber o {DBED16}INTRO{FFFFFF} para dejar de beber.");
					}
				}
			}
			return 1;
		}
  		case TRABAV:
		{
			new autoid, patentex[10],precio,x = 0,y;
			if(response)
			{
			    switch(listitem)
			    {
                    case 0:
                    {
						if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
						{
							if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; y = PlayerInfo[playerid][vTraba]; x = 1; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; y = PlayerInfo[playerid][vTraba]; x = 1; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; y = PlayerInfo[playerid][v2Traba]; x = 2;}
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; y = PlayerInfo[playerid][v3Traba]; x = 3;}
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; y = PlayerInfo[playerid][v4Traba]; x = 4;}
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; y = PlayerInfo[playerid][vTraba]; x = 1;}
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; y = PlayerInfo[playerid][vTraba]; x = 1;}
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; y = PlayerInfo[playerid][vTraba]; x = 1;}
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; y = PlayerInfo[playerid][v2Traba]; x = 2;}
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; y = PlayerInfo[playerid][v2Traba]; x = 2;}
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; y = PlayerInfo[playerid][v3Traba]; x = 3;}
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio];   y = PlayerInfo[playerid][vTraba]; x = 1;}
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; y = PlayerInfo[playerid][vTraba]; x = 1;}
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; y = PlayerInfo[playerid][vTraba]; x = 1;}
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; y = PlayerInfo[playerid][v2Traba]; x = 2;}
						}
                        if(y != 1)
                        {
                            new stringas[200];
							new calcPrecio = ((precio / 2) / 10) + 2000;
							if(PlayerInfo[playerid][jDinero] >= calcPrecio)
							{
								format(stringas,sizeof(stringas),"Acabas de comprar un sistema de traba para tu {DBED15}%s {FFFFFF}({00CCFF}%s{FFFFFF}). Gasto total: {FF3300}$%d",NombreAuto[GetVehicleModel(autoid)-400], patentex,precio/20+2000);
								SendClientMessage(playerid,-1,stringas);
								SendClientMessage(playerid,-1,"Usa {DBED15}/cerrar{FFFFFF} para cerrarlo o {DBED15}/abrir{FFFFFF} para destrabarlo.");
								if(x == 1) {
									PlayerInfo[playerid][vTraba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `Traba` = '1' WHERE `Propietario` = '%d' AND `Slot` = '1'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}
								if(x == 2) {
								 	PlayerInfo[playerid][v2Traba] = 1;
								 	new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `Traba` = '1' WHERE `Propietario` = '%d' AND `Slot` = '2'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
							 	}
								if(x == 3) {
									PlayerInfo[playerid][v3Traba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `Traba` = '1' WHERE `Propietario` = '%d' AND `Slot` = '3'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}
								if(x == 4) {
									PlayerInfo[playerid][v4Traba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `Traba` = '1' WHERE `Propietario` = '%d' AND `Slot` = '4'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}
								QuitarDinero(playerid, calcPrecio);
							}
							else return SendClientMessage(playerid, COLOR_WHITE, "No tienes la cantidad de dinero suficiente.");
						}
						else
						{
							SendClientMessage(playerid,-1,"Tu vehículo ya tiene instalado el sistema de traba de seguridad.");
							SendClientMessage(playerid,-1,"Usa {DBED15}/cerrar{FFFFFF} para cerrarlo o {DBED15}/abrir{FFFFFF} para destrabarlo.");
							return 1;
						}
                    }
                    case 1:
                    {
						if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
						{
							if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Traba]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vTraba]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Traba]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v3Traba]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Traba]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Traba]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v3Traba]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Traba]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v3Traba]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Traba]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Traba]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Traba]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Traba]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v3Traba]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v3Traba]; }
							else return 1;
						}
                        if(y != 1)
                        {
                            new stringas[200];
							new calcPrecio = ((precio / 2) / 10) + 2000;
							if(PlayerInfo[playerid][jDinero] >= calcPrecio)
							{
								format(stringas,sizeof(stringas),"Acabas de comprar un sistema de traba para tu {DBED15}%s {FFFFFF}({00CCFF}%s{FFFFFF}). Gasto total: {FF3300}$%d",NombreAuto[GetVehicleModel(autoid)-400], patentex,precio/20+2000);
								SendClientMessage(playerid,-1,stringas);
								SendClientMessage(playerid,-1,"Usa {DBED15}/cerrar{FFFFFF} para cerrarlo o {DBED15}/abrir{FFFFFF} para destrabarlo.");
								if(x == 1) {
									PlayerInfo[playerid][vTraba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `Traba` = '1' WHERE `Propietario` = '%d' AND `Slot` = '1'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}
								if(x == 2) {
								 	PlayerInfo[playerid][v2Traba] = 1;
								 	new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `Traba` = '1' WHERE `Propietario` = '%d' AND `Slot` = '2'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
							 	}
								if(x == 3) {
									PlayerInfo[playerid][v3Traba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `Traba` = '1' WHERE `Propietario` = '%d' AND `Slot` = '3'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}
								if(x == 4) {
									PlayerInfo[playerid][v4Traba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `Traba` = '1' WHERE `Propietario` = '%d' AND `Slot` = '4'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}
								QuitarDinero(playerid, calcPrecio);
							}
							else return SendClientMessage(playerid, COLOR_WHITE, "No tienes la cantidad de dinero suficiente.");
						}
						else
						{
							SendClientMessage(playerid,-1,"Tu vehículo ya tiene instalado el sistema de traba de seguridad.");
							SendClientMessage(playerid,-1,"Usa {DBED15}/cerrar{FFFFFF} para cerrarlo o {DBED15}/abrir{FFFFFF} para destrabarlo.");
							return 1;
						}
                    }
                    case 2:
                    {
						if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
						{
							if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v2Traba]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vTraba]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Traba]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v2Traba]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Traba]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vTraba]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vTraba]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vTraba]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Traba]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v3Precio]; x = 2;  y = PlayerInfo[playerid][v2Traba]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 2;  y = PlayerInfo[playerid][v3Traba]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v3Traba]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Traba]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Traba]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Traba]; }
							else return 1;
						}
                        if(y != 1)
                        {
                            new stringas[200];
							new calcPrecio = ((precio / 2) / 10) + 2000;
							if(PlayerInfo[playerid][jDinero] >= calcPrecio)
							{
								format(stringas,sizeof(stringas),"Acabas de comprar un sistema de traba para tu {DBED15}%s {FFFFFF}({00CCFF}%s{FFFFFF}). Gasto total: {FF3300}$%d",NombreAuto[GetVehicleModel(autoid)-400], patentex,precio/20+2000);
								SendClientMessage(playerid,-1,stringas);
								SendClientMessage(playerid,-1,"Usa {DBED15}/cerrar{FFFFFF} para cerrarlo o {DBED15}/abrir{FFFFFF} para destrabarlo.");
								if(x == 1) {
									PlayerInfo[playerid][vTraba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `Traba` = '1' WHERE `Propietario` = '%d' AND `Slot` = '1'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}
								if(x == 2) {
								 	PlayerInfo[playerid][v2Traba] = 1;
								 	new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `Traba` = '1' WHERE `Propietario` = '%d' AND `Slot` = '2'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
							 	}
								if(x == 3) {
									PlayerInfo[playerid][v3Traba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `Traba` = '1' WHERE `Propietario` = '%d' AND `Slot` = '3'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}
								if(x == 4) {
									PlayerInfo[playerid][v4Traba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `Traba` = '1' WHERE `Propietario` = '%s' AND `Slot` = '4'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}
								QuitarDinero(playerid, calcPrecio);
							}
							else return SendClientMessage(playerid, COLOR_WHITE, "No tienes la cantidad de dinero suficiente.");
						}
						else
						{
							SendClientMessage(playerid,-1,"Tu vehículo ya tiene instalado el sistema de traba de seguridad.");
							SendClientMessage(playerid,-1,"Usa {DBED15}/cerrar{FFFFFF} para cerrarlo o {DBED15}/abrir{FFFFFF} para destrabarlo.");
							return 1;
						}
                    }
                    case 3:
                    {
						if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
						{
							if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Traba]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vTraba]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Traba]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v2Traba]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Traba]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vTraba]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vTraba]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vTraba]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Traba]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v3Precio]; x = 2;  y = PlayerInfo[playerid][v2Traba]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 2;  y = PlayerInfo[playerid][v2Traba]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vTraba]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vTraba]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vTraba]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Traba]; }
							else return 1;
						}
                        if(y != 1)
                        {
                            new stringas[200];
							new calcPrecio = ((precio / 2) / 10) + 2000;
							if(PlayerInfo[playerid][jDinero] >= calcPrecio)
							{
								format(stringas,sizeof(stringas),"Acabas de comprar un sistema de traba para tu {DBED15}%s {FFFFFF}({00CCFF}%s{FFFFFF}). Gasto total: {FF3300}$%d",NombreAuto[GetVehicleModel(autoid)-400], patentex,precio/20+2000);
								SendClientMessage(playerid,-1,stringas);
								SendClientMessage(playerid,-1,"Usa {DBED15}/cerrar{FFFFFF} para cerrarlo o {DBED15}/abrir{FFFFFF} para destrabarlo.");
								if(x == 1) {
									PlayerInfo[playerid][vTraba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `Traba` = '1' WHERE `Propietario` = '%d' AND `Slot` = '1'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}
								if(x == 2) {
								 	PlayerInfo[playerid][v2Traba] = 1;
								 	new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `Traba` = '1' WHERE `Propietario` = '%d' AND `Slot` = '2'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
							 	}
								if(x == 3) {
									PlayerInfo[playerid][v3Traba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `Traba` = '1' WHERE `Propietario` = '%d' AND `Slot` = '3'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}
								if(x == 4) {
									PlayerInfo[playerid][v4Traba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `Traba` = '1' WHERE `Propietario` = '%d' AND `Slot` = '4'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}
								QuitarDinero(playerid, calcPrecio);
							}
							else return SendClientMessage(playerid, COLOR_WHITE, "No tienes la cantidad de dinero suficiente.");
						}
						else
						{
							SendClientMessage(playerid,-1,"Tu vehículo ya tiene instalado el sistema de traba de seguridad.");
							SendClientMessage(playerid,-1,"Usa {DBED15}/cerrar{FFFFFF} para cerrarlo o {DBED15}/abrir{FFFFFF} para destrabarlo.");
							return 1;
						}
                    }
			    }
			}
			else return 1;
		}
		case ALARMAV:
		{
			new autoid, patentex[10],precio,x,y;
			if(response)
			{
			    switch(listitem)
			    {
                    case 0:
                    {
						if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
						{
							if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vAlarma]; y = PlayerInfo[playerid][vAlarma]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vAlarma]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Alarma]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v3Alarma]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Alarma]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vAlarma]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vAlarma]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vAlarma]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Alarma]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v3Precio]; x = 2;  y = PlayerInfo[playerid][v3Alarma]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 2;  y = PlayerInfo[playerid][v3Alarma]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vAlarma]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vAlarma]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vAlarma]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Alarma]; }
							else return 1;
						}
                        if(y != 1)
						{
							new stringas[200];
							new calcPrecio = ((precio / 2) / 10) + 5000;
							if(PlayerInfo[playerid][jDinero] >= calcPrecio)
							{
								format(stringas,sizeof(stringas),"Acabas de comprar una alarma para tu {DBED15}%s {FFFFFF}({00CCFF}%s{FFFFFF}). Gasto total: {FF3300}$%d",NombreAuto[GetVehicleModel(autoid)-400], patentex,precio/20+5000);
								SendClientMessage(playerid,-1,stringas);
								SendClientMessage(playerid,-1,"Usa {DBED15}/alarma{FFFFFF} para activar y desactivar la alarma.");
								if(x == 1) PlayerInfo[playerid][vAlarma] = 1;
								if(x == 2) PlayerInfo[playerid][v2Alarma] = 1;
								if(x == 3) PlayerInfo[playerid][v3Alarma] = 1;
								if(x == 4) PlayerInfo[playerid][v4Alarma] = 1;

								if(x == 1) {
									PlayerInfo[playerid][vTraba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `vAlarma` = '1' WHERE `Propietario` = '%d' AND `Slot` = '1'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}
								if(x == 2) {
								 	PlayerInfo[playerid][v2Traba] = 1;
								 	new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `vAlarma` = '1' WHERE `Propietario` = '%d' AND `Slot` = '2'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
							 	}
								if(x == 3) {
									PlayerInfo[playerid][v3Traba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `vAlarma` = '1' WHERE `Propietario` = '%d' AND `Slot` = '3'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}
								if(x == 4) {
									PlayerInfo[playerid][v4Traba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `vAlarma` = '1' WHERE `Propietario` = '%d' AND `Slot` = '4'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}

								QuitarDinero(playerid, calcPrecio);
							}
							else return SendClientMessage(playerid, COLOR_WHITE, "No tienes la cantidad de dinero suficiente.");
						}
						else return SendClientMessage(playerid, COLOR_WHITE, "Este vehículo ya tiene alarma.");
                    }
                    case 1:
                    {
						if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
						{
							if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Alarma]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vAlarma]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Alarma]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v2Alarma]; }
							//Tiene auto en el 4 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Alarma]; }
							//Tiene auto en el 1 y 2 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Alarma]; }
							//Tiene auto en el 1 y 3 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v3Alarma]; }
							//Tiene auto en el 1 y 4 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Alarma]; }
							//Tiene auto en el 2 y 3 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v2Alarma]; }
							//Tiene auto en el 2 y 4 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Alarma]; }
							//Tiene auto en el 3 y 4 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Alarma]; }
							//Tiene auto en el 1,2,3 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Alarma]; }
							//Tiene auto en el 1,2,4 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][vPrecio]; x = 2;  y = PlayerInfo[playerid][v2Alarma]; }
							//SLOT EN VEHICULOS 1-3-4
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v3Alarma]; }
							//SLOT EN VEHICULOS 2-3-4
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v2Precio]; x = 3;  y = PlayerInfo[playerid][v2Alarma]; }
							else return 1;
						}
                        if(y != 1)
						{
							new stringas[200];
							new calcPrecio = ((precio / 2) / 10) + 5000;
							if(PlayerInfo[playerid][jDinero] >= calcPrecio)
							{
								format(stringas,sizeof(stringas),"Acabas de comprar una alarma para tu {DBED15}%s {FFFFFF}({00CCFF}%s{FFFFFF}). Gasto total: {FF3300}$%d{FFFFFF}",NombreAuto[GetVehicleModel(autoid)-400], patentex,precio/20+5000);
								SendClientMessage(playerid,-1,stringas);
								SendClientMessage(playerid,-1,"Usa {DBED15}/alarma{FFFFFF} para activar y desactivar la alarma.");
								if(x == 1) PlayerInfo[playerid][vAlarma] = 1;
								if(x == 2) PlayerInfo[playerid][v2Alarma] = 1;
								if(x == 3) PlayerInfo[playerid][v3Alarma] = 1;
								if(x == 4) PlayerInfo[playerid][v4Alarma] = 1;

								if(x == 1) {
									PlayerInfo[playerid][vTraba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `vAlarma` = '1' WHERE `Propietario` = '%d' AND `Slot` = '1'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}
								if(x == 2) {
								 	PlayerInfo[playerid][v2Traba] = 1;
								 	new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `vAlarma` = '1' WHERE `Propietario` = '%d' AND `Slot` = '2'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
							 	}
								if(x == 3) {
									PlayerInfo[playerid][v3Traba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `vAlarma` = '1' WHERE `Propietario` = '%d' AND `Slot` = '3'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}
								if(x == 4) {
									PlayerInfo[playerid][v4Traba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `vAlarma` = '1' WHERE `Propietario` = '%d' AND `Slot` = '4'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}

								QuitarDinero(playerid, calcPrecio);
							}
							else return SendClientMessage(playerid, COLOR_WHITE, "No tienes la cantidad de dinero suficiente.");
						}
						else return SendClientMessage(playerid, COLOR_WHITE, "Este vehículo ya tiene alarma.");
                    }
                    case 2:
                    {
						if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
						{
							if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v3Alarma]; }
							//Tiene auto en el 1 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vAlarma]; }
							//Tiene auto en el 2 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Alarma]; }
							//Tiene auto en el 3 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v2Alarma]; }
							//Tiene auto en el 4 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Alarma]; }
							//Tiene auto en el 1 y 2 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vAlarma]; }
							//Tiene auto en el 1 y 3 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vAlarma]; }
							//Tiene auto en el 1 y 4 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vAlarma]; }
							//Tiene auto en el 2 y 3 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Alarma]; }
							//Tiene auto en el 2 y 4 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v3Precio]; x = 2;  y = PlayerInfo[playerid][v2Alarma]; }
							//Tiene auto en el 3 y 4 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 2;  y = PlayerInfo[playerid][v2Alarma]; }
							//Tiene auto en el 1,2,3 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v3Alarma]; }
							//Tiene auto en el 1,2,4 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][vPrecio]; x = 4;  y = PlayerInfo[playerid][v4Alarma]; }
							//SLOT EN VEHICULOS 1-3-4
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][vPrecio]; x = 4;  y = PlayerInfo[playerid][v4Alarma]; }
							//SLOT EN VEHICULOS 2-3-4
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v2Precio]; x = 4;  y = PlayerInfo[playerid][v4Alarma]; }
							else return 1;
						}
                        if(y != 1)
						{
							new stringas[200];
							new calcPrecio = ((precio / 2) / 10) + 5000;
							if(PlayerInfo[playerid][jDinero] >= calcPrecio)
							{
								format(stringas,sizeof(stringas),"Acabas de comprar una alarma para tu {DBED15}%s {FFFFFF}({00CCFF}%s{FFFFFF}). Gasto total: {FF3300}$%d{FFFFFF}",NombreAuto[GetVehicleModel(autoid)-400], patentex,precio/20+5000);
								SendClientMessage(playerid,-1,stringas);
								SendClientMessage(playerid,-1,"Usa {DBED15}/alarma{FFFFFF} para activar y desactivar la alarma.");
								if(x == 1) PlayerInfo[playerid][vAlarma] = 1;
								if(x == 2) PlayerInfo[playerid][v2Alarma] = 1;
								if(x == 3) PlayerInfo[playerid][v3Alarma] = 1;
								if(x == 4) PlayerInfo[playerid][v4Alarma] = 1;

								if(x == 1) {
									PlayerInfo[playerid][vTraba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `vAlarma` = '1' WHERE `Propietario` = '%d' AND `Slot` = '1'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}
								if(x == 2) {
								 	PlayerInfo[playerid][v2Traba] = 1;
								 	new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `vAlarma` = '1' WHERE `Propietario` = '%d' AND `Slot` = '2'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
							 	}
								if(x == 3) {
									PlayerInfo[playerid][v3Traba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `vAlarma` = '1' WHERE `Propietario` = '%d' AND `Slot` = '3'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}
								if(x == 4) {
									PlayerInfo[playerid][v4Traba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `vAlarma` = '1' WHERE `Propietario` = '%d' AND `Slot` = '4'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}

								QuitarDinero(playerid, calcPrecio);
							}
							else return SendClientMessage(playerid, COLOR_WHITE, "No tienes la cantidad de dinero suficiente.");
						}
						else return SendClientMessage(playerid, COLOR_WHITE, "Este vehículo ya tiene alarma.");
                    }
                    case 3:
                    {
						if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
						{
							if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Alarma]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vAlarma]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Alarma]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v2Alarma]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Alarma]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vAlarma]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vAlarma]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vAlarma]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Alarma]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v3Precio]; x = 2;  y = PlayerInfo[playerid][v2Alarma]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 2;  y = PlayerInfo[playerid][v2Alarma]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vAlarma]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vAlarma]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vAlarma]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Alarma]; }
							else return 1;
						}
                        if(y != 1)
						{
							new stringas[200];
							new calcPrecio = ((precio / 2) / 10) + 5000;
							if(PlayerInfo[playerid][jDinero] >= calcPrecio)
							{
								format(stringas,sizeof(stringas),"Acabas de comprar una alarma para tu {DBED15}%s {FFFFFF}({00CCFF}%s{FFFFFF}). Gasto total: {FF3300}$%d{FFFFFF}",NombreAuto[GetVehicleModel(autoid)-400], patentex,precio/20+5000);
								SendClientMessage(playerid,-1,stringas);
								SendClientMessage(playerid,-1,"Usa {DBED15}/alarma{FFFFFF} para activar y desactivar la alarma.");
								if(x == 1) PlayerInfo[playerid][vAlarma] = 1;
								if(x == 2) PlayerInfo[playerid][v2Alarma] = 1;
								if(x == 3) PlayerInfo[playerid][v3Alarma] = 1;
								if(x == 4) PlayerInfo[playerid][v4Alarma] = 1;

								if(x == 1) {
									PlayerInfo[playerid][vTraba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `vAlarma` = '1' WHERE `Propietario` = '%d' AND `Slot` = '1'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}
								if(x == 2) {
								 	PlayerInfo[playerid][v2Traba] = 1;
								 	new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `vAlarma` = '1' WHERE `Propietario` = '%d' AND `Slot` = '2'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
							 	}
								if(x == 3) {
									PlayerInfo[playerid][v3Traba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `vAlarma` = '1' WHERE `Propietario` = '%d' AND `Slot` = '3'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}
								if(x == 4) {
									PlayerInfo[playerid][v4Traba] = 1;
									new query[680];
									format(query,sizeof(query),"UPDATE `p_vehicles` SET `vAlarma` = '1' WHERE `Propietario` = '%d' AND `Slot` = '4'",PlayerInfo[playerid][pID]);
									mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
								}

								QuitarDinero(playerid, calcPrecio);
							}
							else return SendClientMessage(playerid, COLOR_WHITE, "No tienes la cantidad de dinero suficiente.");
						}
						else return SendClientMessage(playerid, COLOR_WHITE, "Este vehículo ya tiene alarma.");
                    }
			    }
			}
			else return 1;
		}
		case PRODUCTOS2:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][jDinero] < 80) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($80)");
						for(new p; p < MAX_PROPIEDADES; p++)
   						{
						    if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	        				{
	        				    if(PropInfo[p][pCerveza] <= 0) return SendClientMessage(playerid,-1,"No hay mas cervezas en este restaurante.");
	        				    PropInfo[p][pCerveza]--;
		        				PropInfo[p][pGanancias]+=80;
		        				GuardarPropiedad(p);
	        				}
						}
						QuitarDinero(playerid, 80);
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
						AccionesRol(playerid,"compró una botella de cerveza.", 20);
						SendClientMessage(playerid, -1, "Compraste una cerveza por {00CC00}$80{FFFFFF}.");
						SendClientMessage(playerid, -1, "Presiona {DBED16}BIR{FFFFFF} para beber o {DBED16}INTRO{FFFFFF} para dejar de beber.");
					}
					case 1:
					{
						if(PlayerInfo[playerid][jDinero] < 100) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($100)");
						for(new p; p < MAX_PROPIEDADES; p++)
   						{
						    if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	        				{
	        				    if(PropInfo[p][pVino] <= 0) return SendClientMessage(playerid,-1,"No hay mas vinos en este restaurante.");
	        				    PropInfo[p][pVino]--;
		        				PropInfo[p][pGanancias]+=100;
		        				GuardarPropiedad(p);
	        				}
						}
						QuitarDinero(playerid, 100);
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
						AccionesRol(playerid,"compró una botella de vino.", 20);
						SendClientMessage(playerid, -1, "Compraste un vino por {00CC00}$100{FFFFFF}.");
						SendClientMessage(playerid, -1, "Presiona {DBED16}BIR{FFFFFF} para beber o {DBED16}INTRO{FFFFFF} para dejar de beber.");
					}
					case 2:
					{
						if(PlayerInfo[playerid][jDinero] < 60) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($60)");
						for(new p; p < MAX_PROPIEDADES; p++)
   						{
						    if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	        				{
	        				    if(PropInfo[p][pSprunk] <= 0) return SendClientMessage(playerid,-1,"No hay mas sprunks en este restaurante.");
	        				    PropInfo[p][pSprunk]--;
	        					PropInfo[p][pGanancias]+=60;
	        					GuardarPropiedad(p);
	        				}
						}
						TieneSprunk[playerid] = 1;
						QuitarDinero(playerid, 60);
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
						AccionesRol(playerid,"compró una botella de sprunk.", 20);
						SendClientMessage(playerid, -1, "Compraste 1 sprunk por {00CC00}$60{FFFFFF}.");
						SendClientMessage(playerid, -1, "Presiona {DBED16}BIR{FFFFFF} para beber o {DBED16}INTRO{FFFFFF} para dejar de beber.");
					}
					case 3:
	        		{
		            	if(PlayerInfo[playerid][jDinero] < 160) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($160)");
		            	for(new p; p < MAX_PROPIEDADES; p++)
   						{
						    if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	        				{
	        				    if(PropInfo[p][pAquarius] <= 0) return SendClientMessage(playerid,-1,"No hay mas aquarius en este restaurante.");
	        				    PropInfo[p][pAquarius]--;
		        				PropInfo[p][pGanancias]+=160;
		        				GuardarPropiedad(p);
	        				}
						}
						QuitarDinero(playerid, 160);
        	           	TieneAquariu[playerid] = 1;
        	           	AccionesRol(playerid,"compró una botella de aquarius.", 20);
						SendClientMessage(playerid, -1, "Compraste una botella de aquarius por {00CC00}$160{FFFFFF}.");
						SendClientMessage(playerid, -1, "Presiona {DBED16}BIR{FFFFFF} para beber o {DBED16}INTRO{FFFFFF} para dejar de beber.");
						SetPlayerAttachedObject(playerid,2,19570,6,0.103999,0.036000,-0.127999,175.999954,-157.499877,174.199905,0.620001,0.515000,0.856000);
					}
				}
			}
			return 1;
		}
		case JUGUETES:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][jDinero] < 1000) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($1000)");
						QuitarDinero(playerid, 1000);
						DarArma(playerid,11);
						SendClientMessage(playerid, -1, "Compraste un Vibrador blanco por {00CC00}$1000{FFFFFF}.");
					}
					case 1:
					{
						if(PlayerInfo[playerid][jDinero] < 1200) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($1200)");
						QuitarDinero(playerid, 1200);
						DarArma(playerid,13);
						SendClientMessage(playerid, -1, "Compraste un Vibrador plateado por {00CC00}$1200{FFFFFF}.");
					}
					case 2:
					{
						if(PlayerInfo[playerid][jDinero] < 1600) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($1600)");
						QuitarDinero(playerid, 1600);
						DarArma(playerid,12);
						SendClientMessage(playerid, -1, "Compraste un Gran vibrador blanco por {00CC00}$1600{FFFFFF}.");
					}
					case 3:
					{
						if(PlayerInfo[playerid][jDinero] < 2500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($2500)");
						QuitarDinero(playerid, 2500);
						DarArma(playerid,10);
						SendClientMessage(playerid, -1, "Compraste un consolador rosa por {00CC00}$2500{FFFFFF}.");
					}
				}
			}
			return 1;
		}
		case SERVICIOGRUA1:
		{
			if(response)
			{
				if(PlayerInfo[playerid][jDinero] < PlayerInfo[playerid][vPrecio]/100) return SendClientMessage(playerid, -1, "No tienes el dinero suficiente para solícitar una grua a este vehículo");
				new stringo[256];
				format(stringo, 256, "Ultimo lugar estacionado\nEstacionamiento municipal");
				ShowPlayerDialog(playerid, SERVICIOGRUA2, DIALOG_STYLE_LIST,"¿Dónde quieres que enviemos tu vehículo?",stringo,"Aceptar","Cancelar");
			}
		}
		case SERVICIOGRUA2:
		{
			if(response == 1)
			{
				switch(listitem)
				{
					case 0:
					{
						if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
						{
							new vehiculo1[150],vehiculo2[150],vehiculo3[150],vehiculo4[150],mensaje[600];
							if(PlayerInfo[playerid][vModelo] > 0)
							{
								format(vehiculo1, sizeof(vehiculo1), "Vehículo: {F6E200}%s{FFFFFF}  | Patente: {00CCFF}%s{FFFFFF} | Costo del servicio: {F81414}$%d", NombreAuto[GetVehicleModel(autos[playerid])-400], PlayerInfo[playerid][vpatente],PlayerInfo[playerid][vPrecio]/100);
							}
							else { vehiculo1=""; }
							if(PlayerInfo[playerid][vModelo2] > 0)
							{
								format(vehiculo2, sizeof(vehiculo2), "Vehículo: {F6E200}%s{FFFFFF}  | Patente: {00CCFF}%s{FFFFFF} | Costo del servicio: {F81414}$%d", NombreAuto[GetVehicleModel(autos2[playerid])-400], PlayerInfo[playerid][v2patente],PlayerInfo[playerid][v2Precio]/100);
							}
							else { vehiculo2=""; }
							if(PlayerInfo[playerid][vModelo3] > 0)
							{
								format(vehiculo3, sizeof(vehiculo3), "Vehículo: {F6E200}%s{FFFFFF}  | Patente: {00CCFF}%s{FFFFFF} | Costo del servicio: {F81414}$%d", NombreAuto[GetVehicleModel(autos3[playerid])-400], PlayerInfo[playerid][v3patente],PlayerInfo[playerid][v3Precio]/100);
							}
							else { vehiculo3=""; }
							if(PlayerInfo[playerid][vModelo4] > 0)
							{
								format(vehiculo4, sizeof(vehiculo4), "Vehículo: {F6E200}%s{FFFFFF}  | Patente: {00CCFF}%s{FFFFFF} | Costo del servicio: {F81414}$%d", NombreAuto[GetVehicleModel(autos4[playerid])-400], PlayerInfo[playerid][v4patente],PlayerInfo[playerid][v4Precio]/100);
							}
							else { vehiculo4=""; }
							tipogrua[playerid] = 1;
							format(mensaje, sizeof(mensaje),     "%s", 			vehiculo1);
							format(mensaje, sizeof(mensaje), "%s\n%s",mensaje,	vehiculo2);
							format(mensaje, sizeof(mensaje), "%s\n%s",mensaje,	vehiculo3);
							format(mensaje, sizeof(mensaje), "%s\n%s",mensaje,	vehiculo4);
							ShowPlayerDialog(playerid, SERVICIOGRUA3, DIALOG_STYLE_LIST, "Selecciona un vehiculo para remolcar", mensaje, "Aceptar","Cancelar");
						}
					}
					case 1:
					{
						if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
						{
							new vehiculo1[150],vehiculo2[150],vehiculo3[150],vehiculo4[150],mensaje[600];
							if(PlayerInfo[playerid][vModelo] > 0)
							{
								format(vehiculo1, sizeof(vehiculo1), "Vehículo: {F6E200}%s{FFFFFF}  | Patente: {00CCFF}%s{FFFFFF} | Costo del servicio: {F81414}$%d", NombreAuto[GetVehicleModel(autos[playerid])-400], PlayerInfo[playerid][vpatente],PlayerInfo[playerid][vPrecio]/100);
							}
							else { vehiculo1=""; }
							if(PlayerInfo[playerid][vModelo2] > 0)
							{
								format(vehiculo2, sizeof(vehiculo2), "Vehículo: {F6E200}%s{FFFFFF}  | Patente: {00CCFF}%s{FFFFFF} | Costo del servicio: {F81414}$%d", NombreAuto[GetVehicleModel(autos2[playerid])-400], PlayerInfo[playerid][v2patente],PlayerInfo[playerid][v2Precio]/100);
							}
							else { vehiculo2=""; }
							if(PlayerInfo[playerid][vModelo3] > 0)
							{
								format(vehiculo3, sizeof(vehiculo3), "Vehículo: {F6E200}%s{FFFFFF}  | Patente: {00CCFF}%s{FFFFFF} | Costo del servicio: {F81414}$%d", NombreAuto[GetVehicleModel(autos3[playerid])-400], PlayerInfo[playerid][v3patente],PlayerInfo[playerid][v3Precio]/100);
							}
							else { vehiculo3=""; }
							if(PlayerInfo[playerid][vModelo4] > 0)
							{
								format(vehiculo4, sizeof(vehiculo4), "Vehículo: {F6E200}%s{FFFFFF}  | Patente: {00CCFF}%s{FFFFFF} | Costo del servicio: {F81414}$%d", NombreAuto[GetVehicleModel(autos4[playerid])-400], PlayerInfo[playerid][v4patente],PlayerInfo[playerid][v4Precio]/100);
							}
							else { vehiculo4=""; }
							tipogrua[playerid] = 2;
							format(mensaje, sizeof(mensaje),     "%s", 			vehiculo1);
							format(mensaje, sizeof(mensaje), "%s\n%s",mensaje,	vehiculo2);
							format(mensaje, sizeof(mensaje), "%s\n%s",mensaje,	vehiculo3);
							format(mensaje, sizeof(mensaje), "%s\n%s",mensaje,	vehiculo4);
							ShowPlayerDialog(playerid, SERVICIOGRUA3, DIALOG_STYLE_LIST, "Selecciona un vehiculo para remolcar", mensaje, "Aceptar","Cancelar");
						}
					}
					case 2:
					{
						if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
						{
							new vehiculo1[150],vehiculo2[150],vehiculo3[150],vehiculo4[150],mensaje[600];
							if(PlayerInfo[playerid][vModelo] > 0)
							{
								format(vehiculo1, sizeof(vehiculo1), "Vehículo: {F6E200}%s{FFFFFF}  | Patente: {00CCFF}%s{FFFFFF} | Costo del servicio: {F81414}$%d", NombreAuto[GetVehicleModel(autos[playerid])-400], PlayerInfo[playerid][vpatente],PlayerInfo[playerid][vPrecio]/100);
							}
							else { vehiculo1=""; }
							if(PlayerInfo[playerid][vModelo2] > 0)
							{
								format(vehiculo2, sizeof(vehiculo2), "Vehículo: {F6E200}%s{FFFFFF}  | Patente: {00CCFF}%s{FFFFFF} | Costo del servicio: {F81414}$%d", NombreAuto[GetVehicleModel(autos2[playerid])-400], PlayerInfo[playerid][v2patente],PlayerInfo[playerid][v2Precio]/100);
							}
							else { vehiculo2=""; }
							if(PlayerInfo[playerid][vModelo3] > 0)
							{
								format(vehiculo3, sizeof(vehiculo3), "Vehículo: {F6E200}%s{FFFFFF}  | Patente: {00CCFF}%s{FFFFFF} | Costo del servicio: {F81414}$%d", NombreAuto[GetVehicleModel(autos3[playerid])-400], PlayerInfo[playerid][v3patente],PlayerInfo[playerid][v3Precio]/100);
							}
							else { vehiculo3=""; }
							if(PlayerInfo[playerid][vModelo4] > 0)
							{
								format(vehiculo4, sizeof(vehiculo4), "Vehículo: {F6E200}%s{FFFFFF}  | Patente: {00CCFF}%s{FFFFFF} | Costo del servicio: {F81414}$%d", NombreAuto[GetVehicleModel(autos4[playerid])-400], PlayerInfo[playerid][v4patente],PlayerInfo[playerid][v4Precio]/100);
							}
							else { vehiculo4=""; }
							tipogrua[playerid] = 3;
							format(mensaje, sizeof(mensaje),     "%s", 			vehiculo1);
							format(mensaje, sizeof(mensaje), "%s\n%s",mensaje,	vehiculo2);
							format(mensaje, sizeof(mensaje), "%s\n%s",mensaje,	vehiculo3);
							format(mensaje, sizeof(mensaje), "%s\n%s",mensaje,	vehiculo4);
							ShowPlayerDialog(playerid, SERVICIOGRUA3, DIALOG_STYLE_LIST, "Selecciona un vehiculo para remolcar", mensaje, "Aceptar","Cancelar");
						}
					}
				}
			}
		}
		case SERVICIOGRUA3:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(autos[playerid] == 0) return SendClientMessage(playerid,-1,"No puedes remolcar un vehículo que no existe.");
						QuitarDinero(playerid, PlayerInfo[playerid][vPrecio]/100);
						switch(tipogrua[playerid])
						{
							case 1:
							{
								SendClientMessage(playerid, -1, "Una grua fue enviada a la posición de tu vehículo, el cual sera transladado hacia el ultimo lugar donde lo estacionaste");
								SetVehicleToRespawn(autos[playerid]);
							}
							case 2:
							{
								SendClientMessage(playerid, -1, "Una grua fue enviada a la posición de tu vehículo, el cual sera transladado hacia el estacionamiento municipal");
								new lugar = random(4);
								switch(lugar)
								{
									case 0:
									{
										SetVehiclePos(autos[playerid],-13.0813,-374.6711,5.4297);
										SetVehicleZAngle(autos[playerid],358.1299);
									}
									case 1:
									{
										SetVehiclePos(autos[playerid],-29.7148,-375.2507,5.4297);
										SetVehicleZAngle(autos[playerid],354.9965);
									}
									case 2:
									{
										SetVehiclePos(autos[playerid],-2.0937,-346.8077,5.4297);
										SetVehicleZAngle(autos[playerid],89.6241);
									}
									case 3:
									{
										SetVehiclePos(autos[playerid],-3.3296,-332.9302,5.4297);
										SetVehicleZAngle(autos[playerid],91.8175);
									}
								}
								LinkVehicleToInterior(autos[playerid], 0);
								SetVehicleVirtualWorld(autos[playerid], 0);
							}
							case 3:
							{
								SendClientMessage(playerid, -1, "Una grua fue enviada a la posición de tu vehículo, el cual sera transladado hacia el estacionamiento maritimo");
								new lugar = random(4);
								switch(lugar)
								{
									case 0:
									{
										SetVehiclePos(autos[playerid],2634.2881,-2486.2009,-0.7707);
										SetVehicleZAngle(autos[playerid],2.5868);
									}
									case 1:
									{
										SetVehiclePos(autos[playerid],2623.3982,-2488.3628,-0.6238);
										SetVehicleZAngle(autos[playerid],2.1582);
									}
									case 2:
									{
										SetVehiclePos(autos[playerid],2607.7522,-2487.5833,-0.4461);
										SetVehicleZAngle(autos[playerid],0.4526);
									}
									case 3:
									{
										SetVehiclePos(autos[playerid],2594.8560,-2484.1121,-0.3442);
										SetVehicleZAngle(autos[playerid],357.9986);
									}
								}
								LinkVehicleToInterior(autos[playerid], 0);
								SetVehicleVirtualWorld(autos[playerid], 0);
							}
						}
					}
					case 1:
					{
						if(autos2[playerid] == 0) return SendClientMessage(playerid,-1,"No puedes remolcar un vehículo que no existe.");
						QuitarDinero(playerid, PlayerInfo[playerid][v2Precio]/100);
						switch(tipogrua[playerid])
						{
							case 1:
							{
								SendClientMessage(playerid, -1, "Una grua fue enviada a la posición de tu vehículo, el cual sera transladado hacia el ultimo lugar donde lo estacionaste");
								SetVehicleToRespawn(autos2[playerid]);
							}
							case 2:
							{
								SendClientMessage(playerid, -1, "Una grua fue enviada a la posición de tu vehículo, el cual sera transladado hacia el estacionamiento municipal");
								new lugar = random(4);
								switch(lugar)
								{
									case 0:
									{
										SetVehiclePos(autos2[playerid],-13.0813,-374.6711,5.4297);
										SetVehicleZAngle(autos2[playerid],358.1299);
									}
									case 1:
									{
										SetVehiclePos(autos2[playerid],-29.7148,-375.2507,5.4297);
										SetVehicleZAngle(autos2[playerid],354.9965);
									}
									case 2:
									{
										SetVehiclePos(autos2[playerid],-2.0937,-346.8077,5.4297);
										SetVehicleZAngle(autos2[playerid],89.6241);
									}
									case 3:
									{
										SetVehiclePos(autos2[playerid],-3.3296,-332.9302,5.4297);
										SetVehicleZAngle(autos2[playerid],91.8175);
									}
								}
								LinkVehicleToInterior(autos2[playerid], 0);
								SetVehicleVirtualWorld(autos2[playerid], 0);
							}
							case 3:
							{
								SendClientMessage(playerid, -1, "Una grua fue enviada a la posición de tu vehículo, el cual sera transladado hacia el estacionamiento maritimo");
								new lugar = random(4);
								switch(lugar)
								{
									case 0:
									{
										SetVehiclePos(autos2[playerid],2634.2881,-2486.2009,-0.7707);
										SetVehicleZAngle(autos2[playerid],2.5868);
									}
									case 1:
									{
										SetVehiclePos(autos2[playerid],2623.3982,-2488.3628,-0.6238);
										SetVehicleZAngle(autos2[playerid],2.1582);
									}
									case 2:
									{
										SetVehiclePos(autos2[playerid],2607.7522,-2487.5833,-0.4461);
										SetVehicleZAngle(autos2[playerid],0.4526);
									}
									case 3:
									{
										SetVehiclePos(autos2[playerid],2594.8560,-2484.1121,-0.3442);
										SetVehicleZAngle(autos2[playerid],357.9986);
									}
								}
								LinkVehicleToInterior(autos2[playerid], 0);
								SetVehicleVirtualWorld(autos2[playerid], 0);
							}
						}
					}
					case 2:
					{
						if(autos3[playerid] == 0) return SendClientMessage(playerid,-1,"No puedes remolcar un vehículo que no existe.");
						QuitarDinero(playerid, PlayerInfo[playerid][v3Precio]/100);
						switch(tipogrua[playerid])
						{
							case 1:
							{
								SendClientMessage(playerid, -1, "Una grua fue enviada a la posición de tu vehículo, el cual sera transladado hacia el ultimo lugar donde lo estacionaste");
								SetVehicleToRespawn(autos3[playerid]);
							}
							case 2:
							{
								SendClientMessage(playerid, -1, "Una grua fue enviada a la posición de tu vehículo, el cual sera transladado hacia el estacionamiento municipal");
								new lugar = random(4);
								switch(lugar)
								{
									case 0:
									{
										SetVehiclePos(autos3[playerid],-13.0813,-374.6711,5.4297);
										SetVehicleZAngle(autos3[playerid],358.1299);
									}
									case 1:
									{
										SetVehiclePos(autos3[playerid],-29.7148,-375.2507,5.4297);
										SetVehicleZAngle(autos3[playerid],354.9965);
									}
									case 2:
									{
										SetVehiclePos(autos3[playerid],-2.0937,-346.8077,5.4297);
										SetVehicleZAngle(autos3[playerid],89.6241);
									}
									case 3:
									{
										SetVehiclePos(autos3[playerid],-3.3296,-332.9302,5.4297);
										SetVehicleZAngle(autos3[playerid],91.8175);
									}
								}
								LinkVehicleToInterior(autos3[playerid], 0);
								SetVehicleVirtualWorld(autos3[playerid], 0);
							}
							case 3:
							{
								SendClientMessage(playerid, -1, "Una grua fue enviada a la posición de tu vehículo, el cual sera transladado hacia el estacionamiento maritimo");
								new lugar = random(4);
								switch(lugar)
								{
									case 0:
									{
										SetVehiclePos(autos3[playerid],2634.2881,-2486.2009,-0.7707);
										SetVehicleZAngle(autos3[playerid],2.5868);
									}
									case 1:
									{
										SetVehiclePos(autos3[playerid],2623.3982,-2488.3628,-0.6238);
										SetVehicleZAngle(autos3[playerid],2.1582);
									}
									case 2:
									{
										SetVehiclePos(autos3[playerid],2607.7522,-2487.5833,-0.4461);
										SetVehicleZAngle(autos3[playerid],0.4526);
									}
									case 3:
									{
										SetVehiclePos(autos3[playerid],2594.8560,-2484.1121,-0.3442);
										SetVehicleZAngle(autos3[playerid],357.9986);
									}
								}
								LinkVehicleToInterior(autos3[playerid], 0);
								SetVehicleVirtualWorld(autos3[playerid], 0);
							}
						}
					}
					case 3:
					{
						if(autos4[playerid] == 0) return SendClientMessage(playerid,-1,"No puedes remolcar un vehículo que no existe.");
						QuitarDinero(playerid, PlayerInfo[playerid][v4Precio]/100);
						switch(tipogrua[playerid])
						{
							case 1:
							{
								SendClientMessage(playerid, -1, "Una grua fue enviada a la posición de tu vehículo, el cual sera transladado hacia el ultimo lugar donde lo estacionaste");
								SetVehicleToRespawn(autos4[playerid]);
							}
							case 2:
							{
								SendClientMessage(playerid, -1, "Una grua fue enviada a la posición de tu vehículo, el cual sera transladado hacia el estacionamiento municipal");
								new lugar = random(4);
								switch(lugar)
								{
									case 0:
									{
										SetVehiclePos(autos4[playerid],-13.0813,-374.6711,5.4297);
										SetVehicleZAngle(autos4[playerid],358.1299);
									}
									case 1:
									{
										SetVehiclePos(autos4[playerid],-29.7148,-375.2507,5.4297);
										SetVehicleZAngle(autos4[playerid],354.9965);
									}
									case 2:
									{
										SetVehiclePos(autos4[playerid],-2.0937,-346.8077,5.4297);
										SetVehicleZAngle(autos4[playerid],89.6241);
									}
									case 3:
									{
										SetVehiclePos(autos4[playerid],-3.3296,-332.9302,5.4297);
										SetVehicleZAngle(autos4[playerid],91.8175);
									}
								}
								LinkVehicleToInterior(autos4[playerid], 0);
								SetVehicleVirtualWorld(autos4[playerid], 0);
							}
							case 3:
							{
								SendClientMessage(playerid, -1, "Una grua fue enviada a la posición de tu vehículo, el cual sera transladado hacia el estacionamiento maritimo");
								new lugar = random(4);
								switch(lugar)
								{
									case 0:
									{
										SetVehiclePos(autos4[playerid],2634.2881,-2486.2009,-0.7707);
										SetVehicleZAngle(autos4[playerid],2.5868);
									}
									case 1:
									{
										SetVehiclePos(autos4[playerid],2623.3982,-2488.3628,-0.6238);
										SetVehicleZAngle(autos4[playerid],2.1582);
									}
									case 2:
									{
										SetVehiclePos(autos4[playerid],2607.7522,-2487.5833,-0.4461);
										SetVehicleZAngle(autos4[playerid],0.4526);
									}
									case 3:
									{
										SetVehiclePos(autos4[playerid],2594.8560,-2484.1121,-0.3442);
										SetVehicleZAngle(autos4[playerid],357.9986);
									}
								}
								LinkVehicleToInterior(autos4[playerid], 0);
								SetVehicleVirtualWorld(autos4[playerid], 0);
							}
						}
					}
				}
			}
		}
		case GPS3:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: PosicionGPS(playerid,1653.3037,-1893.1719,13.5521, 5);
					case 1: PosicionGPS(playerid,554.2869,-1266.4493,17.2422, 5);
					case 2: PosicionGPS(playerid,2127.0918,-1124.2750,25.4550, 5);
					case 3: PosicionGPS(playerid,1494.1000,-1737.0425,13.3828, 5);
					case 4: PosicionGPS(playerid,-1987.9141,289.5139,34.3957, 5);
				}
			}
		}
		case GPS4:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: PosicionGPS(playerid,1462.1840,-1019.6361,24.6326, 5);
					case 1: PosicionGPS(playerid,-1580.7654,859.5545,7.4429, 5);
					case 2: PosicionGPS(playerid,2433.5603,2289.6563,10.8203, 5);
				}
			}
		}
		case GPS5:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: PosicionGPS(playerid,1827.7954,-1842.4980,13.5781,5);
					case 1: PosicionGPS(playerid,-2443.0625,742.8177,35.0156,5);
				}
			}
		}
		case GPS6:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: PosicionGPS(playerid,2237.5837,-2214.2102,13.5469,5);
					case 1: PosicionGPS(playerid,-1722.7408,-65.1257,3.5547,5);
					case 2: PosicionGPS(playerid,1189.0481,-1361.8744,13.5550,5);
					case 3: PosicionGPS(playerid,1743.3903,-1860.9901,13.5781,5);
					case 4: PosicionGPS(playerid,2221.8628,-1715.7574,13.3314,5);
					case 5: PosicionGPS(playerid,121.1386,-153.7627,1.5781,5);
					case 6: PosicionGPS(playerid,-174.5626,-1623.9821,3.0859,5);
					case 7: PosicionGPS(playerid,642.6858,-1357.0409,13.5688,5);
					case 8: PosicionGPS(playerid,1387.1842,1181.7040,10.6848,5);
					case 9: PosicionGPS(playerid,-381.0360,2206.9233,42.3689,5);
					case 10: PosicionGPS(playerid,2785.7610,-2572.1555,3.1600,5);
					case 11: PosicionGPS(playerid,2017.9595,1154.9974,10.8203,5);
				}
			}
		}
		case GPS7:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: PosicionGPS(playerid,1793.8019,-1278.0016,13.4688,5);
					case 1: PosicionGPS(playerid,1535.3855,-1675.2513,13.3828,5);
				}
			}
		}
		case GPS8:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: PosicionGPS(playerid,2112.9199,-1217.4652,23.8047,5);
					case 1: PosicionGPS(playerid,1451.8942,-1155.9928,23.6642,5);
					case 2: PosicionGPS(playerid,2245.3401,-1661.1309,15.4690,5);
					case 3: PosicionGPS(playerid,454.1436,-1501.9719,30.8730,5);
					case 4: PosicionGPS(playerid,448.6999,-1479.9546,30.6317,5);
					case 5: PosicionGPS(playerid,507.7714,-1357.4158,15.9609,5);
				}
			}
		}
		case COMPRAR_PRENDA:
		{
			if(response)
			{
			    new Float:X1,Float:X2,Float:X3,Float:X4,Float:X5,Float:X6,Float:X7,Float:X8,Float:X9;
			    switch(PrendaMarcada[playerid])	{
					case 18897..18899: {
						X1 = 0.154000; 	X2 = 0.000000;     X3 = -0.000000;
	       				X4 = -90.100036;      X5 = -13.300005;      X6 = -94.400001;
	       				X7 = 1.000000;      X8 = 1.000000;      X9 = 1.000000;
		    		}
					case 18913:	{
					    X1 = 0.071999; 	X2 = 0.017999;     X3 = 0.000000;
	       				X4 = -85.800018;      X5 = -1.699999;       X6 = -93.599929;
	       				X7 = 1.000000;      X8 = 1.000000;      X9 = 1.000000;
					}
					case 18917..18918:	{
					    X1 = 0.071999; 	X2 = 0.017999;     X3 = 0.000000;
	       				X4 = -85.800018;      X5 = -1.699999;       X6 = -93.599929;
	       				X7 = 1.000000;      X8 = 1.000000;      X9 = 1.000000;
					}
					case 18939:	{
						X1 = 0.172000; 	X2 = -0.030000;    X3 = 0.009000;
	       				X4 = 175.299987;      X5 = 0.000000;        X6 = 37.100002;
	       				X7 = 1.131000;      X8 = 1.015000;      X9 = 1.027000;
		    		}
					case 18942..18943:	{
					    X1 = 0.172000; 	X2 = -0.030000;    X3 = 0.009000;
	       				X4 = 175.299987;      X5 = 0.000000;        X6 = 37.100002;
	       				X7 = 1.131000;      X8 = 1.015000;      X9 = 1.027000;
					}
					case 18961:	{
					    X1 = 0.127000; 	X2 = 0.019000;     X3 = 0.000000;
	       				X4 = 97.699989;       X5 = 99.799995;       X6 = -11.500000;
	       				X7 = 1.130999;      X8 = 1.143999;      X9 = 1.218999;
					}
					case 18962:	{
					    X1 = 0.183000; 	X2 = 0.000000;     X3 = 0.000000;
	       				X4 = -84.100006;      X5 = 0.000000;        X6 = -0.000000;
	       				X7 = 1.300000;      X8 = 1.155000;      X9 = 1.212999;
					}
					case 18964:	{
					    X1 = 0.125000; 	X2 = 0.034999;     X3 = 0.000000;
	       				X4 = 98.400001;       X5 = 109.599998;      X6 = 0.000000;
	       				X7 = 1.082999;      X8 = 1.195999;      X9 = 1.156999;
				 	}
					case 18974:	{
					    X1 = 0.068999; 	X2 = 0.027000;     X3 = -0.004000;
	       				X4 = 88.399993;       X5 = 82.700019;       X6 = 0.000000;
	       				X7 = 1.031999;      X8 = 1.181000;      X9 = 1.387999;
					}
					case 18971..18972: 	{
					    X1 = 0.130999; 	X2 = 0.024000;     X3 = 0.000000;
	       				X4 = 91.499992;       X5 = 79.200019;       X6 = 0.000000;
	       				X7 = 1.084000;      X8 = 1.173999;      X9 = 1.225999;
					}
					case 18976 || 18979: {
					    X1 = 0.108999; 	X2 = 0.017000;     X3 = 0.000000;
	       				X4 = 82.199996;       X5 = 85.300048;       X6 = 4.999998;
	       				X7 = 1.010000;      X8 = 1.271000;      X9 = 1.110000;
					}
					case 19033:	{
					    X1 = 0.091000; 	X2 = 0.026999;     X3 = 0.000000;
	       				X4 = 90.499992;       X5 = 84.600013;       X6 = 0.000000;
	       				X7 = 1.134999;      X8 = 1.120000;      X9 = 1.394999;
				 	}
				}
			    new string5[200];
				if(PlayerInfo[playerid][pObj] == 0 || PlayerInfo[playerid][pObj] == 19382)
				{
				    PlayerInfo[playerid][pfOffsetX] = X1;
					PlayerInfo[playerid][pfOffsetY] = X2;
					PlayerInfo[playerid][pfOffsetZ] = X3;
					PlayerInfo[playerid][pfRotX] = X4;
					PlayerInfo[playerid][pfRotY] = X5;
					PlayerInfo[playerid][pfRotZ] = X6;
					PlayerInfo[playerid][pfScaleX] = X7;
					PlayerInfo[playerid][pfScaleY] = X8;
					PlayerInfo[playerid][pfScaleZ] = X9;
				    PlayerInfo[playerid][pObj] = PrendaMarcada[playerid];
					format(Query, sizeof(Query), "INSERT INTO `prendas` (Propietario,Objeto,Slot) VALUES ('%s','%d','1')",PlayerName(playerid),PrendaMarcada[playerid]);
					mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
					PlayerInfo[playerid][Totems] -= 3;
					format(string5,200,"{DBED15}¡Felicidades!{FFFFFF} compraste una prenda, ahora puedes {DBED15}/usar prenda{FFFFFF}.");
					SendClientMessage(playerid,-1,string5);
					NPrendas[playerid]++;
					return 1;
				}
				if(PlayerInfo[playerid][pObj2] == 0 || PlayerInfo[playerid][pObj2] == 19382)
				{
				    PlayerInfo[playerid][pObj2] = PrendaMarcada[playerid];
					format(Query, sizeof(Query), "INSERT INTO `prendas` (Propietario,Objeto,Slot) VALUES ('%s','%d','2')",PlayerName(playerid),PrendaMarcada[playerid]);
					mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
					PlayerInfo[playerid][pfOffsetX2] = X1;
					PlayerInfo[playerid][pfOffsetY2] = X2;
					PlayerInfo[playerid][pfOffsetZ2] = X3;
					PlayerInfo[playerid][pfRotX2] = X4;
					PlayerInfo[playerid][pfRotY2] = X5;
					PlayerInfo[playerid][pfRotZ2] = X6;
					PlayerInfo[playerid][pfScaleX2] = X7;
					PlayerInfo[playerid][pfScaleY2] = X8;
					PlayerInfo[playerid][pfScaleZ2] = X9;
					PlayerInfo[playerid][Totems] -= 3;
					format(string5,200,"{DBED15}¡Felicidades!{FFFFFF} compraste una prenda, ahora puedes {DBED15}/usar prenda{FFFFFF}.");
					SendClientMessage(playerid,-1,string5);
					NPrendas[playerid]++;
					return 1;
				}
				if(PlayerInfo[playerid][pObj3] == 0 || PlayerInfo[playerid][pObj3] == 19382)
				{
			    	PlayerInfo[playerid][pObj3] = PrendaMarcada[playerid];
					format(Query, sizeof(Query), "INSERT INTO `prendas` (Propietario,Objeto,Slot) VALUES ('%s','%d','3')",PlayerName(playerid),PrendaMarcada[playerid]);
					mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
					PlayerInfo[playerid][pfOffsetX3] = X1;
					PlayerInfo[playerid][pfOffsetY3] = X2;
					PlayerInfo[playerid][pfOffsetZ3] = X3;
					PlayerInfo[playerid][pfRotX3] = X4;
					PlayerInfo[playerid][pfRotY3] = X5;
					PlayerInfo[playerid][pfRotZ3] = X6;
					PlayerInfo[playerid][pfScaleX3] = X7;
					PlayerInfo[playerid][pfScaleY3] = X8;
					PlayerInfo[playerid][pfScaleZ3] = X9;
					PlayerInfo[playerid][Totems] -= 3;
					format(string5,200,"{DBED15}¡Felicidades!{FFFFFF} compraste una prenda, ahora puedes {DBED15}/usar prenda{FFFFFF}.");
					SendClientMessage(playerid,-1,string5);
					NPrendas[playerid]++;
					return 1;
				}
				if(PlayerInfo[playerid][pObj4] == 0 || PlayerInfo[playerid][pObj4] == 19382)
				{
					PlayerInfo[playerid][pObj4] = PrendaMarcada[playerid];
					format(Query, sizeof(Query), "INSERT INTO `prendas` (Propietario,Objeto,Slot) VALUES ('%s','%d','4')",PlayerName(playerid),PrendaMarcada[playerid]);
					mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
					PlayerInfo[playerid][pfOffsetX4] = X1;
					PlayerInfo[playerid][pfOffsetY4] = X2;
					PlayerInfo[playerid][pfOffsetZ4] = X3;
					PlayerInfo[playerid][pfRotX4] = X4;
					PlayerInfo[playerid][pfRotY4] = X5;
					PlayerInfo[playerid][pfRotZ4] = X6;
					PlayerInfo[playerid][pfScaleX4] = X7;
					PlayerInfo[playerid][pfScaleY4] = X8;
					PlayerInfo[playerid][pfScaleZ4] = X9;
					PlayerInfo[playerid][Totems] -= 3;
					format(string5,200,"{DBED15}¡Felicidades!{FFFFFF} compraste una prenda, ahora puedes {DBED15}/usar prenda{FFFFFF}.");
					SendClientMessage(playerid,-1,string5);
					NPrendas[playerid]++;
	 				return 1;
				}
			}
		}
		case CCCOBJETOS:
        {
            if(response)
            {
                switch(listitem)
                {
                    case 0:
                    {
                        if(Objeto[playerid] != 0) return SendClientMessage(playerid,-1,"Ya tienes un objeto en la mano.");
                        if(PlayerInfo[playerid][jDinero] < 4600) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($4600)");
                        QuitarDinero(playerid, 4600);
                        Objeto[playerid] = 19317;
                        SendClientMessage(playerid, -1, "Compraste una guitarra por {00F000}4600$");
                        SetPlayerAttachedObject(playerid,2,19317,6,0.103999,0.036000,-0.127999,175.999954,-157.499877,174.199905,0.620001,0.515000,0.856000);
                    }
                    case 1:
                    {
                        if(Objeto[playerid] != 0) return SendClientMessage(playerid,-1,"Ya tienes un objeto en la mano.");
                        if(PlayerInfo[playerid][jDinero] < 2400) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($2400)");
                        QuitarDinero(playerid, 2400);
                        Objeto[playerid] = 2404;
                        SendClientMessage(playerid, -1, "Compraste una Tabla de Surf T1 por {00F000}2400$");
                        SetPlayerAttachedObject(playerid,2,2404,6,0.103999,0.036000,-0.127999,175.999954,-157.499877,174.199905,0.620001,0.515000,0.856000);
                    }
                    case 2:
                    {
                        if(Objeto[playerid] != 0) return SendClientMessage(playerid,-1,"Ya tienes un objeto en la mano.");
                        if(PlayerInfo[playerid][jDinero] < 4800) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($4800)");
                        QuitarDinero(playerid, 4800);
                        Objeto[playerid] = 1210;
                        SendClientMessage(playerid, -1, "Compraste un Maletin por {00F000}4800$");
                        SetPlayerAttachedObject(playerid, 2, 1210, 6, 0.289999, 0.079999, -0.000000, 0.000000, -100.000000, 1.000000);
                    }
                    case 3:
                    {
                        if(Objeto[playerid] != 0) return SendClientMessage(playerid,-1,"Ya tienes un objeto en la mano.");
                        if(PlayerInfo[playerid][jDinero] < 2400) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($2400)");
                        QuitarDinero(playerid, 2400);
                        Objeto[playerid] = 2405;
                        SendClientMessage(playerid, -1, "Compraste una Tabla de Surf T2 por {00F000}2400$");
                        SetPlayerAttachedObject(playerid,2,2405,6,0.103999,0.036000,-0.127999,175.999954,-157.499877,174.199905,0.620001,0.515000,0.856000);
                    }
                    case 4:
                    {
                        if(Objeto[playerid] != 0) return SendClientMessage(playerid,-1,"Ya tienes un objeto en la mano.");
                        if(PlayerInfo[playerid][jDinero] < 4200) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($4200)");
                        QuitarDinero(playerid, 4200);
                        Objeto[playerid] = 19318;
                        SendClientMessage(playerid, -1, "Compraste un Bajo por {00F000}4200$");
                        SetPlayerAttachedObject(playerid,2,19318,6,0.103999,0.036000,-0.127999,175.999954,-157.499877,174.199905,0.620001,0.515000,0.856000);
                    }
                }
            }
            return 1;
        }
		case INVITARCRI:
		{
			if(response)
			{
				if(TieneEncargo[playerid] > 0) return SendClientMessage(playerid, -1, "Ya tienes un encargo, terminalo.");
				new e;
				e = TieneEncargo[Invitador[playerid]];
				Encargo[e][IdColega] = playerid;
				TieneEncargo[playerid] = e;
				//-------------------------------------------------------------------------------
				if(e == 1)
				{
					SendClientMessage(Encargo[e][IdCriminal],-1,"Encargo aceptado: {FF0019}Elimina al gerente del Banco Central.");
					SendClientMessage(Encargo[e][IdColega],-1,"Encargo aceptado: {FF0019}Elimina al gerente del Banco Central.");
					SendClientMessage(Encargo[e][IdColega],-1,"Tienes que llevar un vehículo de escape hasta el punto marcado en el mapa.");
					TextDrawSetString(MisionCriminal[e], "~g~Reªnete~w~ con tu colega en el punto marcado.");
					TextDrawSetString(MisionColega[e], "~g~Conduce~w~ hasta el punto marcado.");
					Encargo[e][SegundosMision] = 300;
					CriminalAceptado[Encargo[e][IdColega]] = 1;
					CriminalAceptado[Encargo[e][IdCriminal]] = 1;
					SetPlayerCheckpoint(Encargo[e][IdColega], 1526.0902,-1017.4032,23.5809, 5.0);
					SetPlayerCheckpoint(Encargo[e][IdCriminal], 1526.0902,-1017.4032,23.5809, 5.0);
					if(PlayerInfo[Encargo[e][IdCriminal]][pWP2] != 23)
					{
						Encargo[e][Tiene9mm] = 0;
						TextDrawSetString(MisionCriminal[e], "Consigue una ~r~9mm silenciada~w~.");
						SendClientMessage(Encargo[e][IdCriminal],-1,"Necesitas conseguir una 9mm silenciada para continuar.");
					}
					return 1;
				}
				//-------------------------------------------------------------------------------
				//-------------------------------------------------------------------------------
				if(e == 2)
				{
					SendClientMessage(Encargo[e][IdCriminal],-1,"Encargo aceptado: {FF0019}Elimina al policía corrupto.");
					SendClientMessage(Encargo[e][IdColega],-1,"Encargo aceptado: {FF0019}Elimina al policía corrupto.");
					SendClientMessage(Encargo[e][IdColega],-1,"Tienes que llevar un vehículo de escape hasta el punto marcado en el mapa.");
					TextDrawSetString(MisionCriminal[e], "~g~Reªnete~w~ con tu colega en el punto marcado.");
					TextDrawSetString(MisionColega[e], "~g~Conduce~w~ hasta el punto marcado.");
					Encargo[e][SegundosMision] = 300;
					CriminalAceptado[Encargo[e][IdColega]] = 1;
					CriminalAceptado[Encargo[e][IdCriminal]] = 1;
					SetPlayerCheckpoint(Encargo[e][IdColega], 1607.3558,-1703.0073,13.2540, 5.0);
					SetPlayerCheckpoint(Encargo[e][IdCriminal], 1607.3558,-1703.0073,13.2540, 5.0);
					if(PlayerInfo[Encargo[e][IdCriminal]][pWP2] != 23)
					{
						Encargo[e][Tiene9mm] = 0;
						TextDrawSetString(MisionCriminal[e], "Consigue una ~r~9mm silenciada~w~.");
						SendClientMessage(Encargo[e][IdCriminal],-1,"Necesitas conseguir una 9mm silenciada para continuar.");
					}
					return 1;
				}
				//-------------------------------------------------------------------------------
				if(e == 3)
				{
					SendClientMessage(Encargo[e][IdCriminal],-1,"Encargo aceptado: {FF0019}Elimina al maquinista.");
					SendClientMessage(Encargo[e][IdColega],-1,"Encargo aceptado: {FF0019}Elimina al maquinista.");
					SendClientMessage(Encargo[e][IdColega],-1,"Tienes que llevar un vehículo de escape hasta el punto marcado en el mapa.");
					TextDrawSetString(MisionCriminal[e], "~g~Reªnete~w~ con tu colega en el punto marcado.");
					TextDrawSetString(MisionColega[e], "~g~Conduce~w~ hasta el punto marcado.");
					Encargo[e][SegundosMision] = 300;
					CriminalAceptado[Encargo[e][IdColega]] = 1;
					CriminalAceptado[Encargo[e][IdCriminal]] = 1;
					SetPlayerCheckpoint(Encargo[e][IdColega], 1374.1508,2695.1580,10.5291, 5.0);
					SetPlayerCheckpoint(Encargo[e][IdCriminal], 1374.1508,2695.1580,10.5291, 5.0);
					if(PlayerInfo[Encargo[e][IdCriminal]][pWP2] != 23)
					{
						Encargo[e][Tiene9mm] = 0;
						TextDrawSetString(MisionCriminal[e], "Consigue una ~r~9mm silenciada~w~.");
						SendClientMessage(Encargo[e][IdCriminal],-1,"Necesitas conseguir una 9mm silenciada para continuar.");
					}
					return 1;
				}
				//-------------------------------------------------------------------------------
				//-------------------------------------------------------------------------------
				if(e == 4)
				{
					SendClientMessage(Encargo[e][IdCriminal],-1,"Encargo aceptado: {FF0019}Elimina a un empleado del Burguer Shot.");
					SendClientMessage(Encargo[e][IdColega],-1,"Encargo aceptado: {FF0019}Elimina a un empleado del Burguer Shot.");
					SendClientMessage(Encargo[e][IdColega],-1,"Tienes que llevar un vehículo de escape hasta el punto marcado en el mapa.");
					TextDrawSetString(MisionCriminal[e], "~g~Reªnete~w~ con tu colega en el punto marcado.");
					TextDrawSetString(MisionColega[e], "~g~Conduce~w~ hasta el punto marcado.");
					Encargo[e][SegundosMision] = 300;
					CriminalAceptado[Encargo[e][IdColega]] = 1;
					CriminalAceptado[Encargo[e][IdCriminal]] = 1;
					SetPlayerCheckpoint(Encargo[e][IdColega], 1218.0623,-874.5742,42.6080, 5.0);
					SetPlayerCheckpoint(Encargo[e][IdCriminal], 1218.0623,-874.5742,42.6080, 5.0);
					if(PlayerInfo[Encargo[e][IdCriminal]][pWP2] != 23)
					{
						Encargo[e][Tiene9mm] = 0;
						TextDrawSetString(MisionCriminal[e], "Consigue una ~r~9mm silenciada~w~.");
						SendClientMessage(Encargo[e][IdCriminal],-1,"Necesitas conseguir una 9mm silenciada para continuar.");
					}
					return 1;
				}
				//-------------------------------------------------------------------------------
				//-------------------------------------------------------------------------------
				if(e == 5)
				{
					SendClientMessage(Encargo[e][IdCriminal],-1,"Encargo aceptado: {FF0019}Elimina al Camello.");
					SendClientMessage(Encargo[e][IdColega],-1,"Encargo aceptado: {FF0019}Elimina al Camello.");
					SendClientMessage(Encargo[e][IdColega],-1,"Tienes que llevar un vehículo de escape hasta el punto marcado en el mapa.");
					TextDrawSetString(MisionCriminal[e], "~g~Reªnete~w~ con tu colega en el punto marcado.");
					TextDrawSetString(MisionColega[e], "~g~Conduce~w~ hasta el punto marcado.");
					Encargo[e][SegundosMision] = 300;
					CriminalAceptado[Encargo[e][IdColega]] = 1;
					CriminalAceptado[Encargo[e][IdCriminal]] = 1;
					SetPlayerCheckpoint(Encargo[e][IdColega], 2337.8752,-1366.0424,24.0111, 5.0);
					SetPlayerCheckpoint(Encargo[e][IdCriminal], 2337.8752,-1366.0424,24.0111, 5.0);
					if(PlayerInfo[Encargo[e][IdCriminal]][pWP2] != 23)
					{
						Encargo[e][Tiene9mm] = 0;
						TextDrawSetString(MisionCriminal[e], "Consigue una ~r~9mm silenciada~w~.");
						SendClientMessage(Encargo[e][IdCriminal],-1,"Necesitas conseguir una 9mm silenciada para continuar.");
					}
					return 1;
				}
				//-------------------------------------------------------------------------------
				else
				{
					SendClientMessage(playerid,-1,"No hay encargos disponibles en este momento, espera unos minutos.");
				}
			}
			if(!response)
			{
				SendClientMessage(playerid,-1,"{EB0000}Invitación rechazada.");
				SendClientMessage(Invito[playerid],-1,"El jugador rechazó la invitación.");
				Colega[Criminal[playerid]] = INVALID_PLAYER_ID;
				Invito[Invito[playerid]] = INVALID_PLAYER_ID;
				Invito[playerid] = INVALID_PLAYER_ID;
				Invitador[playerid] = INVALID_PLAYER_ID;
			}
		}
		case REGLAS:
		{
			if(response)
			{
				new string2[1200];
				string2="{DBED16}Usar canales correspondientes\n{FFFFFF}Hay 2 tipos de canales {00CCFF}Dentro del personaje (DP){FFFFFF} y {00CCFF}Fuera del personaje (FP){FFFFFF}, es importante saber diferenciarlos y respetarlos.\n\n- Los {00CCFF}canales DP{FFFFFF} son todos aquellos que usamos dentro del Rol del personaje, el chat normal, el chat\npor radio/telefono, por mensaje de texto y aquellos para indicar acciones o resaltar ({DBED16}/y /g /p /s{FFFFFF}) ({DBED16}!{FFFFFF} en chat bandas)\n\n- {00CCFF}Los canales FP{FFFFFF} son todos aquellos que se utilizan para hablar estando fueral del personaje, estos\nincluyen al chat de ayuda ({DBED16}/n{FFFFFF}), en el canal de reportes ({DBED16}/reportar{FFFFFF}) y el comando más comun para la gente cercana {DBED16}/b{FFFFFF} (!! en el chat de bandas).\n\n- {00CCFF}Información Fuera del Personaje (IFP){FFFFFF}: Esta información es aquella que sabemos, pero que {00CCFF}DP{FFFFFF}, no podemos utilizar, ejemplo:\nTodos vemos el nombre de las personas arrriba de ellos, pero esto no quiere decir que {00CCFF}DP{FFFFFF} lo sepamos,\nsi esta persona nunca nos dijo su nombre, no lo conocemos y por lo tanto, no podemos llamarla por tal nombre.\n";
				ShowPlayerDialog(playerid, REGLAS2, DIALOG_STYLE_MSGBOX, "Reglas del servidor", string2, "Siguiente","");
			}
		}
		case REGLAS2:
		{
			if(response)
			{
				new string2[700];
				string2="{DBED16}Agredir sin razon (ASR)\n{FFFFFF}Esta completamente prohibido el {00CCFF}ASR{FFFFFF} ya sea golpeando con puños,\narmas blancas, disparando o con un vehiculo\n\n{DBED16}Acciones imposibles (AI)\n{FFFFFF}Esta implica realizar acciones que no son realistas, y esto es totalmente prohibido.\nEjemplo: Ir parado arriba de un auto, empujar un camión corriendo, entre otros.\n\n{DBED16}Atropellar con vehiculo (AV)\n{FFFFFF}Esta prohibido chocar con el vehículo intencionalmente para matar o herir a alguien,\nya sea manteniendo el auto arriba de la persona hasta que muera, o pisándolo varias veces hasta matarlo.";
				ShowPlayerDialog(playerid, REGLAS3, DIALOG_STYLE_MSGBOX, " Reglas del juego",string2,"Siguiente","");
			}
		}
		case REGLAS3:
		{
			if(response)
			{
				new string2[900];
				string2="{DBED16}Esta no son todas las reglas, para ver todas las reglas\nEntra a nuestra web http://"WEB_ROL"";
				ShowPlayerDialog(playerid, REGLAS4, DIALOG_STYLE_MSGBOX, " Reglas del juego",string2,"Aceptar","");
			}
		}
		case COMPRARLICENCIA:
		{
			if(response)
			{
				if(PlayerInfo[playerid][Moneda] < 20) return SendClientMessage(playerid,-1,"Necesitas 20 "SERVER_COIN" para comprar la licencia.");
                PlayerInfo[playerid][Moneda] -= 20;
                PlayerInfo[playerid][pLicencia] = 1;
                new dia,mes,ano,Query2[200];
				getdate(dia,mes,ano);
				PlayerInfo[playerid][findialicencia] = dia;
				PlayerInfo[playerid][finmeslicencia] = mes+2;
				PlayerInfo[playerid][finanolicencia] = ano;
                format(Query2, sizeof(Query2), "UPDATE `usuarios` SET `FinDiaL`='%d',`FinMesL`='%d',`FinAnoL`='%d' WHERE `Username`='%s'",dia,mes+2,ano,PlayerName(playerid));
				mysql_function_query(Conecction, Query2, true, "OnQueryFinish", "ii", 0, playerid);
				SendClientMessage(playerid, -1, "{00CC00}Adquiriste una licencia de piloto válida por 2 meses.");
			}
		}
		case HERRAMIENTAS:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					    if(PlayerInfo[playerid][jDinero] < 20) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($20)");
					    if(TieneHerramientaEnMano[playerid] == 1) return SendClientMessage(playerid,-1,"Ya tienes una herramienta en mano.");
						SendClientMessage(playerid,-1,"Compraste un martillo.");
						SetPlayerAttachedObject(playerid,2,18635,6,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000); //Martillo 1
						PlayerInfo[playerid][jMartillo] = 1;
						TieneHerramientaEnMano[playerid] = 1;
						QuitarDinero(playerid, 20);
						return 1;
					}
					case 1:
					{
					    if(PlayerInfo[playerid][jDinero] < 25) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($25)");
					    if(TieneHerramientaEnMano[playerid] == 1) return SendClientMessage(playerid,-1,"Ya tienes una herramienta en mano.");
						SendClientMessage(playerid,-1,"Compraste un destornillador.");
						SetPlayerAttachedObject(playerid,2,18644,6,0.073999,0.022000,0.000000,-167.300018,0.000000,0.000000,1.000000,1.000000,1.000000); //Destornillador 2
						PlayerInfo[playerid][jDestornillador] = 2;
						TieneHerramientaEnMano[playerid] = 1;
						QuitarDinero(playerid, 25);
						return 1;
					}
					case 2:
					{
					    if(PlayerInfo[playerid][jDinero] < 60) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($60)");
					    if(TieneHerramientaEnMano[playerid] == 1) return SendClientMessage(playerid,-1,"Ya tienes una herramienta en mano.");
						SendClientMessage(playerid,-1,"Compraste una barreta.");
						SetPlayerAttachedObject(playerid,2,18634,6,0.074999,0.014999,-0.002000,90.999969,-104.199966,7.999999,1.000000,1.000000,1.000000); //Barreta 3
						PlayerInfo[playerid][jBarreta] = 3;
						TieneHerramientaEnMano[playerid] = 1;
						QuitarDinero(playerid, 60);
						return 1;
					}
					case 3:
					{
					    if(PlayerInfo[playerid][jDinero] < 120) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($120)");
					    if(TieneHerramientaEnMano[playerid] == 1) return SendClientMessage(playerid,-1,"Ya tienes una herramienta en mano.");
						SendClientMessage(playerid,-1,"Compraste un balde.");
						PlayerInfo[playerid][jBalde] = 4;
						TieneHerramientaEnMano[playerid] = 1;
						QuitarDinero(playerid, 120);
						return 1;
					}
				}
			}
		}
		case REPORTSMENU:
		{
			if(response)
			{
				if(CancelReport[playerid] == listitem) return 1;
				new reportid = ListItemReportId[playerid][listitem];
				if(Reports[reportid][BeingUsed] == 0) return SendClientMessage(playerid, COLOR_GREY, "Ese reporte ya fue revisado!");
				if(!IsPlayerConnected(Reports[reportid][ReportFrom]))
				{
					SendClientMessage(playerid, COLOR_GREY, "El que reportó se ha desconectado !");
					Reports[reportid][ReportFrom] = 999;
					Reports[reportid][BeingUsed] = 0;
					return 1;
				}
				foreach(Player,i)
				{
					if(PlayerInfo[i][pAdmin] > ADMIN_LEVEL_DUDAS)
					{
						format(string, sizeof(string), "{00CC00}%s{FFFFFF} aceptó el reporte de {00CC00}%s{FFFFFF} (ID: %i a ID: %i, #%i).", PlayerName(playerid), PlayerName(Reports[reportid][ReportFrom]), Reports[reportid][ReportFrom], Reports[reportid][ReportadoID], reportid);
    	    			SendClientMessage(i,-1,string);
    	    			IDReporte[playerid] = Reports[reportid][ReportadoID];
    	    			//format(IDReporteMensaje[playerid], 150, Reports[reportid][Report]);
					}
				}
				format(string, sizeof(string), "{00CC00}El administrador %s está viendo el reporte.", PlayerName(playerid));
				SendClientMessage(Reports[reportid][ReportFrom], -1, string);
				Reports[reportid][CheckingReport] = playerid;
				Reports[reportid][BeingUsed] = 0;
			}
		}
		case LOCALIZARAMIGO:
		{
			if(response)
			{
				new Float:XPos, Float:YPos, Float:ZPos;
				if(!IsPlayerConnected(TotemBuscar[playerid][listitem])) return SendClientMessage(playerid, -1, "Ese jugador ya no se encuentra contectado.");
				GetPlayerPos(TotemBuscar[playerid][listitem], XPos, YPos, ZPos);
				SetPlayerCheckpoint(playerid,XPos, YPos, ZPos, 3.0);
				BuscandoAmigo[playerid] = 1;
				SendClientMessage(playerid, -1, "Se ha marcado la localización de tu amigo.");
			}
		}
		case ENTREGARSE1:
		{
			if(response)
			{
				if(PlayerInfo[playerid][jDinero] < 500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ({00CC00}$500{FFFFFF}).");
			    QuitarDinero(playerid, 500);
			    PlayerInfo[playerid][pCargos] = 0;
				SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
			    SendClientMessage(playerid, -1, "Pagaste la fianza de {00CC00}$500{FFFFFF} y se te quitaron los cargos.");
   			}
		}
		case ENTREGARSE2:
		{
			if(response)
			{
				if(PlayerInfo[playerid][jDinero] < 1000) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ({00CC00}$1000{FFFFFF}).");
			    QuitarDinero(playerid, 1000);
			    PlayerInfo[playerid][pCargos] = 1;
				SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
				SendClientMessage(playerid, -1, "Pagaste la fianza de {00CC00}$1000{FFFFFF} y se te redujo los cargos.");
			    SetTimerEx("Encerrando",500,false,"d",playerid);
                if(GetPlayerVirtualWorld(playerid) == 5 && GetPlayerInterior(playerid) == 5) TipoPrision[playerid] = 2;
				else TipoPrision[playerid] = 1;
   			}
		}
		case ENTREGARSE3:
		{
			if(response)
			{
				if(PlayerInfo[playerid][jDinero] < 1500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ({00CC00}$1500{FFFFFF}).");
			    QuitarDinero(playerid, 1500);
			    PlayerInfo[playerid][pCargos] = 2;
				SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
				SendClientMessage(playerid, -1, "Pagaste la fianza de {00CC00}$1500{FFFFFF} y se te redujo los cargos.");
			    SetTimerEx("Encerrando",500,false,"d",playerid);
			    if(GetPlayerVirtualWorld(playerid) == 5 && GetPlayerInterior(playerid) == 5) TipoPrision[playerid] = 2;
				else TipoPrision[playerid] = 1;
   			}
		}
		case ENTREGARSE4:
		{
			if(response)
			{
				if(PlayerInfo[playerid][jDinero] < 2000) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ({00CC00}$2000{FFFFFF}).");
			    QuitarDinero(playerid, 2000);
			    PlayerInfo[playerid][pCargos] = 3;
				SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
				SendClientMessage(playerid, -1, "Pagaste la fianza de {00CC00}$2000{FFFFFF} y se te redujo los cargos.");
			    SetTimerEx("Encerrando",500,false,"d",playerid);
			    if(GetPlayerVirtualWorld(playerid) == 5 && GetPlayerInterior(playerid) == 5) TipoPrision[playerid] = 2;
				else TipoPrision[playerid] = 1;
   			}
		}
		case ENTREGARSE5:
		{
			if(response)
			{
				if(PlayerInfo[playerid][jDinero] < 2500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ({00CC00}$2500{FFFFFF}).");
			    QuitarDinero(playerid, 2500);
			    PlayerInfo[playerid][pCargos] = 4;
				SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
				SendClientMessage(playerid, -1, "Pagaste la fianza de {00CC00}$2500{FFFFFF} y se te redujo los cargos.");
			    SetTimerEx("Encerrando",500,false,"d",playerid);
			    if(GetPlayerVirtualWorld(playerid) == 5 && GetPlayerInterior(playerid) == 5) TipoPrision[playerid] = 2;
				else TipoPrision[playerid] = 1;
   			}
		}
		case ENTREGARSE6:
		{
			if(response)
			{
			    SetTimerEx("Encerrando",500,false,"d",playerid);
			    if(GetPlayerVirtualWorld(playerid) == 5 && GetPlayerInterior(playerid) == 5) TipoPrision[playerid] = 2;
				else TipoPrision[playerid] = 1;
   			}
		}
		case DOMICILIARIA:
		{
			if(response)
			{
				EnvioDomiciliaria(playerid);
			}
		}
		case BUSCARCOCHE:
		{
		    if(response)
			{
			    switch(listitem)
				{
					case 0:
					{
						ShowPlayerDialog(playerid, BUSCARCOCHE2, DIALOG_STYLE_INPUT, "Buscar información", "Patente del vehículo:", "Buscar", "Cancelar");
					}
				}
   			}
		}
		case BUSCARCOCHE2:
		{
		    if(response)
			{
				new str[50], modelo;
				ObtenerVehiculo(playerid, inputtext);
				modelo = GetVehicleModel(AutoBuscado[playerid]);
				if(AutoBuscado[playerid] != 0)
			    {
					format(str, sizeof(str), "%s (%s) - Dueño: %s", NombreAuto[modelo-400], PatenteBuscada[playerid], PlayerName(JugadorBuscado[playerid]));
					ShowPlayerDialog(playerid, BUSCARCOCHE3, DIALOG_STYLE_LIST, "Información del vehículo", str, "Opciones", "Salir");
				}
   			}
		}
		case BUSCARCOCHE3:
		{
		    if(response)
			{
				ShowPlayerDialog(playerid, BUSCARCOCHE4, DIALOG_STYLE_LIST, "Opciones", "Localizar\nInformar como vehículo robado", "Aceptar", "Cancelar");
   			}
		}
		case BUSCARCOCHE4:
		{
		    if(response)
			{
				switch(listitem)
				{
				    case 0:
					{
						new modelo, mensaje[150], zone[MAX_ZONE_NAME];
						modelo = GetVehicleModel(AutoBuscado[playerid]);
						GetCar3DZone(AutoBuscado[playerid], zone, sizeof(zone));
						//if(IsVehicleInRangeOfPoint(AutoBuscado[playerid],10.0,727.1412,-3320.2461,5.8700)) format(zone, sizeof(zone), "Isla Santa Carolina");
						format(mensaje, sizeof(mensaje), "Detalles [ Vehículo: {DBED16}%s {FFFFFF}| Patente: {00CCFF}%s{FFFFFF} | Localización: {2EA3F5}%s{FFFFFF} ]", NombreAuto[modelo-400], PatenteBuscada[playerid], zone);
						SendClientMessage(playerid,-1, mensaje);
						SendClientMessage(playerid,-1,"{DBED16}Se ha marcado en el mapa la ubicación actual del vehículo.");
						new Float:x,Float:y,Float:z;
						GetVehiclePos(AutoBuscado[playerid], x,y,z);
						SetPlayerCheckpoint(playerid,x,y,z,7.0);
	 				}
	 				case 1:
	 				{
	 				    new modelo, mensaje[150];
	 				    modelo = GetVehicleModel(AutoBuscado[playerid]);
	 				    format(mensaje, 150,"{3399FF}[Central de Policía]{FFFFFF} reportando: Se busca %s robado, patente %s.", NombreAuto[modelo-400], PatenteBuscada[playerid]);
						SendRadioMessage(1,-1,mensaje,INVALID_PLAYER_ID);
						new Float:x,Float:y,Float:z;
						GetVehiclePos(AutoBuscado[playerid], x,y,z);
						SetPlayerCheckpoint(playerid,x,y,z,7.0);
	 				}
 				}
   			}
   			AutoBuscado[playerid] = 0;
		}
		case GeoLocalization:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						new autoid, patentex[10];
						if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
						{
							if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); }
							//Tiene auto en el 1 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); }
							//Tiene auto en el 2 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); }
							//Tiene auto en el 3 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); }
							//Tiene auto en el 4 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); }
							//Tiene auto en el 1 y 2 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); }
							//Tiene auto en el 1 y 3 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); }
							//Tiene auto en el 1 y 4 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); }
							//Tiene auto en el 2 y 3 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); }
							//Tiene auto en el 2 y 4 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); }
							//Tiene auto en el 3 y 4 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); }
							//Tiene auto en el 1,2,3 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); }
							//Tiene auto en el 1,2,4 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); }
							//SLOT EN VEHICULOS 1-3-4
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); }
							//SLOT EN VEHICULOS 2-3-4
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); }
							else return 1;
						}
						if(autoid == 0) return SendClientMessage(playerid,-1,"Error, contacta un administrador.");
						new Float:x,Float:y,Float:z,modelo;
						modelo = GetVehicleModel(autoid);
						GetVehiclePos(autoid, x,y,z);
						Loc[playerid] = SetPlayerCheckpoint(playerid,x,y,z,5.0);
						new zone[MAX_ZONE_NAME];
						GetCar3DZone(autoid, zone, sizeof(zone));
						SendClientMessage(playerid,-1,"{DBED16}Se ha marcado en el mapa la ubicación actual del vehículo.");
						format(string, sizeof(string), "Detalles [ Vehículo: {DBED16}%s {FFFFFF}| Patente: {00CCFF}%s{FFFFFF} | Localización: {2EA3F5}%s{FFFFFF} ]", NombreAuto[modelo-400], patentex, zone);
						SendClientMessage(playerid,-1,string);
						Localizando[playerid] = 1;
						return 1;
					}
     				case 1:
					{
						new autoid, patentex[10];
						if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
						{
							if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); }
							//Tiene auto en el 1 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); }
							//Tiene auto en el 2 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); }
							//Tiene auto en el 3 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); }
							//Tiene auto en el 4 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); }
							//Tiene auto en el 1 y 2 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); }
							//Tiene auto en el 1 y 3 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); }
							//Tiene auto en el 1 y 4 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); }
							//Tiene auto en el 2 y 3 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); }
							//Tiene auto en el 2 y 4 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); }
							//Tiene auto en el 3 y 4 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); }
							//Tiene auto en el 1,2,3 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); }
							//Tiene auto en el 1,2,4 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); }
							//SLOT EN VEHICULOS 1-3-4
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); }
							//SLOT EN VEHICULOS 2-3-4
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); }
							else return 1;
						}
						if(autoid == 0) return SendClientMessage(playerid,-1,"Error, contacta un administrador.");
						new Float:x,Float:y,Float:z,modelo;
						modelo = GetVehicleModel(autoid);
						GetVehiclePos(autoid, x,y,z);
						Loc[playerid] = SetPlayerCheckpoint(playerid,x,y,z,5.0);
						new zone[MAX_ZONE_NAME];
						GetCar3DZone(autoid, zone, sizeof(zone));
						SendClientMessage(playerid,-1,"{DBED16}Se ha marcado en el mapa la ubicación actual del vehículo.");
						format(string, sizeof(string), "Detalles [ Vehículo: {DBED16}%s {FFFFFF}| Patente: {00CCFF}%s{FFFFFF} | Localización: {2EA3F5}%s{FFFFFF} ]", NombreAuto[modelo-400], patentex, zone);
						SendClientMessage(playerid,-1,string);
						Localizando[playerid] = 1;
						return 1;
					}
					case 2:
					{
						new autoid, patentex[10];
						if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
						{
							if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); }
							//Tiene auto en el 1 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); }
							//Tiene auto en el 2 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); }
							//Tiene auto en el 3 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); }
							//Tiene auto en el 4 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); }
							//Tiene auto en el 1 y 2 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); }
							//Tiene auto en el 1 y 3 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); }
							//Tiene auto en el 1 y 4 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); }
							//Tiene auto en el 2 y 3 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); }
							//Tiene auto en el 2 y 4 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); }
							//Tiene auto en el 3 y 4 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); }
							//Tiene auto en el 1,2,3 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); }
							//Tiene auto en el 1,2,4 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); }
							//SLOT EN VEHICULOS 1-3-4
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); }
							//SLOT EN VEHICULOS 2-3-4
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); }
							else return 1;
						}
						if(autoid == 0) return SendClientMessage(playerid,-1,"Error, contacta un administrador.");
						new Float:x,Float:y,Float:z,modelo;
						modelo = GetVehicleModel(autoid);
						GetVehiclePos(autoid, x,y,z);
						Loc[playerid] = SetPlayerCheckpoint(playerid,x,y,z,5.0);
						new zone[MAX_ZONE_NAME];
						GetCar3DZone(autoid, zone, sizeof(zone));
						SendClientMessage(playerid,-1,"{DBED16}Se ha marcado en el mapa la ubicación actual del vehículo.");
						format(string, sizeof(string), "Detalles [ Vehículo: {DBED16}%s {FFFFFF}| Patente: {00CCFF}%s{FFFFFF} | Localización: {2EA3F5}%s{FFFFFF} ]", NombreAuto[modelo-400], patentex, zone);
						SendClientMessage(playerid,-1,string);
						Localizando[playerid] = 1;
						return 1;
					}
					case 3:
					{
						new autoid, patentex[10];
						if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
						{
							if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); }
							//Tiene auto en el 1 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); }
							//Tiene auto en el 2 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); }
							//Tiene auto en el 3 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); }
							//Tiene auto en el 4 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); }
							//Tiene auto en el 1 y 2 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); }
							//Tiene auto en el 1 y 3 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); }
							//Tiene auto en el 1 y 4 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); }
							//Tiene auto en el 2 y 3 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); }
							//Tiene auto en el 2 y 4 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); }
							//Tiene auto en el 3 y 4 SLOT
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); }
							//Tiene auto en el 1,2,3 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); }
							//Tiene auto en el 1,2,4 SLOT
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); }
							//SLOT EN VEHICULOS 1-3-4
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); }
							//SLOT EN VEHICULOS 2-3-4
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); }
							else return 1;
						}
						if(autoid == 0) return SendClientMessage(playerid,-1,"Error, contacta un administrador.");
						new Float:x,Float:y,Float:z,modelo;
						modelo = GetVehicleModel(autoid);
						GetVehiclePos(autoid, x,y,z);
						Loc[playerid] = SetPlayerCheckpoint(playerid,x,y,z,5.0);
						new zone[MAX_ZONE_NAME];
						GetCar3DZone(autoid, zone, sizeof(zone));
						SendClientMessage(playerid,-1,"{DBED16}Se ha marcado en el mapa la ubicación actual del vehículo.");
						format(string, sizeof(string), "Detalles [ Vehículo: {DBED16}%s {FFFFFF}| Patente: {00CCFF}%s{FFFFFF} | Localización: {2EA3F5}%s{FFFFFF} ]", NombreAuto[modelo-400], patentex, zone);
						SendClientMessage(playerid,-1,string);
						Localizando[playerid] = 1;
						return 1;
					}
				}
			}
		}
		case GPS12:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						SendClientMessage(playerid, -1, "Se ha marcado en el mapa un {FF0000}punto rojo{FFFFFF} en la ubicación seleccionada.");
						SetPlayerCheckpoint(playerid, -1935.8418,235.7065,34.3125, 3.0);
						return 1;
					}
					case 1:
					{
						SendClientMessage(playerid, -1, "Se ha marcado en el mapa un {FF0000}punto rojo{FFFFFF} en la ubicación seleccionada.");
						SetPlayerCheckpoint(playerid, -2712.5217,217.8913,4.2342, 3.0);
						return 1;
					}
				}
			}
		}
		case GPS15:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						SendClientMessage(playerid, -1, "Se ha marcado en el mapa un {FF0000}punto rojo{FFFFFF} en la ubicación seleccionada.");
						SetPlayerCheckpoint(playerid, -1904.5382,274.3150,41.0469, 3.0);
						return 1;
					}
					case 1:
					{
						SendClientMessage(playerid, -1, "Se ha marcado en el mapa un {FF0000}punto rojo{FFFFFF} en la ubicación seleccionada.");
						SetPlayerCheckpoint(playerid, -2425.5088,1031.1404,50.3906, 3.0);
						return 1;
					}
				}
			}
		}
		case GPS11:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						SendClientMessage(playerid, -1, "Se ha marcado en el mapa un {FF0000}punto rojo{FFFFFF} en la ubicación seleccionada.");
						SetPlayerCheckpoint(playerid, 1041.4426,-1030.2094,32.0850, 3.0);
						return 1;
					}
					case 1:
					{
						SendClientMessage(playerid, -1, "Se ha marcado en el mapa un {FF0000}punto rojo{FFFFFF} en la ubicación seleccionada.");
						SetPlayerCheckpoint(playerid, 2644.6260,-2035.3632,13.5540, 3.0);
						return 1;
					}
				}
			}
		}
		case GPS13:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						SendClientMessage(playerid, -1, "Se ha marcado en el mapa un {FF0000}punto rojo{FFFFFF} en la ubicación seleccionada.");
						SetPlayerCheckpoint(playerid, 2386.6318,1040.6201,10.8203, 3.0);
						return 1;
					}
				}
			}
		}
		case GPS10:
		{
			if(response)
			{
			    switch(listitem)
				{
					case 0:
					{
		                format(string, sizeof(string), "Temple\nSanta María Beach\nIdlewood\nDillimore");
						ShowPlayerDialog(playerid,GPS14, DIALOG_STYLE_LIST,"Pay N Spray",string,"Aceptar","Salir");
						return 1;
					}
					case 1:
					{
		                format(string, sizeof(string), "Doherty\nJuniper Hollow");
						ShowPlayerDialog(playerid,GPS15, DIALOG_STYLE_LIST,"Pay N Spray",string,"Aceptar","Salir");
						return 1;
					}
					case 2:
					{
		                format(string, sizeof(string), "Redsands East\nFort Carson\nEl Quebrado");
						ShowPlayerDialog(playerid,GPS16, DIALOG_STYLE_LIST,"Pay N Spray",string,"Aceptar","Salir");
						return 1;
					}
				}
			}
		}
		case GPS14:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						SendClientMessage(playerid, -1, "Se ha marcado en el mapa un {FF0000}punto rojo{FFFFFF} en la ubicación seleccionada.");
						SetPlayerCheckpoint(playerid, 1024.9790,-1033.5690,31.7829, 3.0);
						return 1;
					}
					case 1:
					{
						SendClientMessage(playerid, -1, "Se ha marcado en el mapa un {FF0000}punto rojo{FFFFFF} en la ubicación seleccionada.");
						SetPlayerCheckpoint(playerid, 488.5905,-1730.5906,11.2731, 3.0);
						return 1;
					}
					case 2:
					{
						SendClientMessage(playerid, -1, "Se ha marcado en el mapa un {FF0000}punto rojo{FFFFFF} en la ubicación seleccionada.");
						SetPlayerCheckpoint(playerid, 2075.7415,-1831.2546,13.5545, 3.0);
						return 1;
					}
					case 3:
					{
						SendClientMessage(playerid, -1, "Se ha marcado en el mapa un {FF0000}punto rojo{FFFFFF} en la ubicación seleccionada.");
						SetPlayerCheckpoint(playerid, 720.1719,-466.3835,16.3437, 3.0);
						return 1;
					}
				}
			}
		}
		case GPS16:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						SendClientMessage(playerid, -1, "Se ha marcado en el mapa un {FF0000}punto rojo{FFFFFF} en la ubicación seleccionada.");
						SetPlayerCheckpoint(playerid, 1964.2297,2162.2349,10.8203, 3.0);
						return 1;
					}
					case 1:
					{
						SendClientMessage(playerid, -1, "Se ha marcado en el mapa un {FF0000}punto rojo{FFFFFF} en la ubicación seleccionada.");
						SetPlayerCheckpoint(playerid, -99.8641,1106.4473,19.7422, 3.0);
						return 1;
					}
					case 2:
					{
						SendClientMessage(playerid, -1, "Se ha marcado en el mapa un {FF0000}punto rojo{FFFFFF} en la ubicación seleccionada.");
						SetPlayerCheckpoint(playerid, -1420.4911,2594.1851,55.7473, 3.0);
						return 1;
					}
				}
			}
		}
		case DIALOGO_FRECUENCIAS:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(Frecuencia[playerid] == 1)	{	Frencuena1p -= 1;	}
						if(Frecuencia[playerid] == 2)	{	Frencuena2p -= 1;	}
						if(Frecuencia[playerid] == 3)	{	Frencuena3p -= 1;	}
						if(Frecuencia[playerid] == 4)	{	Frencuena4p -= 1;	}
						if(Frecuencia[playerid] == 5)	{	Frencuena5p -= 1;	}
						if(Frecuencia[playerid] == 6)	{	Frencuena6p -= 1;	}
						if(Frecuencia[playerid] == 7)	{	Frencuena7p -= 1;	}
						if(Frecuencia[playerid] == 8)	{	Frencuena8p -= 1;	}
      					AccionesRol(playerid,"enciende su radio y cambia de frecuencia.", 20);
						SendClientMessage(playerid, -1, "Has seleccionado la frecuencia número 1, para hablar escribir !DP !!FP");
						Frecuencia[playerid] = 1;
						Frencuena1p += 1;
						return 1;
					}
					case 1:
					{
						if(Frecuencia[playerid] == 1)	{	Frencuena1p -= 1;	}
						if(Frecuencia[playerid] == 2)	{	Frencuena2p -= 1;	}
						if(Frecuencia[playerid] == 3)	{	Frencuena3p -= 1;	}
						if(Frecuencia[playerid] == 4)	{	Frencuena4p -= 1;	}
						if(Frecuencia[playerid] == 5)	{	Frencuena5p -= 1;	}
						if(Frecuencia[playerid] == 6)	{	Frencuena6p -= 1;	}
						if(Frecuencia[playerid] == 7)	{	Frencuena7p -= 1;	}
						if(Frecuencia[playerid] == 8)	{	Frencuena8p -= 1;	}
						AccionesRol(playerid,"enciende su radio y cambia de frecuencia.", 20);
						SendClientMessage(playerid, -1, "Has seleccionado la frecuencia número 2, para hablar escribir !DP !!FP");
						Frecuencia[playerid] = 2;
						Frencuena2p += 1;
						return 1;
					}
					case 2:
					{
						if(Frecuencia[playerid] == 1)	{	Frencuena1p -= 1;	}
						if(Frecuencia[playerid] == 2)	{	Frencuena2p -= 1;	}
						if(Frecuencia[playerid] == 3)	{	Frencuena3p -= 1;	}
						if(Frecuencia[playerid] == 4)	{	Frencuena4p -= 1;	}
						if(Frecuencia[playerid] == 5)	{	Frencuena5p -= 1;	}
						if(Frecuencia[playerid] == 6)	{	Frencuena6p -= 1;	}
						if(Frecuencia[playerid] == 7)	{	Frencuena7p -= 1;	}
						if(Frecuencia[playerid] == 8)	{	Frencuena8p -= 1;	}
						AccionesRol(playerid,"enciende su radio y cambia de frecuencia.", 20);
						SendClientMessage(playerid, -1, "Has seleccionado la frecuencia número 3, para hablar escribir !DP !!FP");
						Frecuencia[playerid] = 3;
						Frencuena3p += 1;
						return 1;
					}
					case 3:
					{
						if(Frecuencia[playerid] == 1)	{	Frencuena1p -= 1;	}
						if(Frecuencia[playerid] == 2)	{	Frencuena2p -= 1;	}
						if(Frecuencia[playerid] == 3)	{	Frencuena3p -= 1;	}
						if(Frecuencia[playerid] == 4)	{	Frencuena4p -= 1;	}
						if(Frecuencia[playerid] == 5)	{	Frencuena5p -= 1;	}
						if(Frecuencia[playerid] == 6)	{	Frencuena6p -= 1;	}
						if(Frecuencia[playerid] == 7)	{	Frencuena7p -= 1;	}
						if(Frecuencia[playerid] == 8)	{	Frencuena8p -= 1;	}
						SendClientMessage(playerid, -1, "Has seleccionado la frecuencia número 4, para hablar escribir !DP !!FP");
						Frecuencia[playerid] = 4;
						Frencuena4p += 1;
						AccionesRol(playerid,"enciende su radio y cambia de frecuencia.", 20);
						return 1;
					}
					case 4:
					{
						if(Frecuencia[playerid] == 1)	{	Frencuena1p -= 1;	}
						if(Frecuencia[playerid] == 2)	{	Frencuena2p -= 1;	}
						if(Frecuencia[playerid] == 3)	{	Frencuena3p -= 1;	}
						if(Frecuencia[playerid] == 4)	{	Frencuena4p -= 1;	}
						if(Frecuencia[playerid] == 5)	{	Frencuena5p -= 1;	}
						if(Frecuencia[playerid] == 6)	{	Frencuena6p -= 1;	}
						if(Frecuencia[playerid] == 7)	{	Frencuena7p -= 1;	}
						if(Frecuencia[playerid] == 8)	{	Frencuena8p -= 1;	}
						SendClientMessage(playerid, -1, "Has seleccionado la frecuencia número 5, para hablar escribir !DP !!FP");
						Frecuencia[playerid] = 5;
						Frencuena5p += 1;
						AccionesRol(playerid,"enciende su radio y cambia de frecuencia.", 20);
						return 1;
					}
					case 5:
					{
						if(Frecuencia[playerid] == 1)	{	Frencuena1p -= 1;	}
						if(Frecuencia[playerid] == 2)	{	Frencuena2p -= 1;	}
						if(Frecuencia[playerid] == 3)	{	Frencuena3p -= 1;	}
						if(Frecuencia[playerid] == 4)	{	Frencuena4p -= 1;	}
						if(Frecuencia[playerid] == 5)	{	Frencuena5p -= 1;	}
						if(Frecuencia[playerid] == 6)	{	Frencuena6p -= 1;	}
						if(Frecuencia[playerid] == 7)	{	Frencuena7p -= 1;	}
						if(Frecuencia[playerid] == 8)	{	Frencuena8p -= 1;	}
						SendClientMessage(playerid, -1, "Has seleccionado la frecuencia número 6, para hablar escribir !DP !!FP");
						Frecuencia[playerid] = 6;
						Frencuena6p += 1;
						AccionesRol(playerid,"enciende su radio y cambia de frecuencia.", 20);
						return 1;
					}
					case 6:
					{
						if(Frecuencia[playerid] == 1)	{	Frencuena1p -= 1;	}
						if(Frecuencia[playerid] == 2)	{	Frencuena2p -= 1;	}
						if(Frecuencia[playerid] == 3)	{	Frencuena3p -= 1;	}
						if(Frecuencia[playerid] == 4)	{	Frencuena4p -= 1;	}
						SendClientMessage(playerid, -1, "Has seleccionado la frecuencia número 7, para hablar escribir !DP !!FP");
						Frecuencia[playerid] = 7;
						Frencuena7p += 1;
						AccionesRol(playerid,"enciende su radio y cambia de frecuencia.", 20);
						return 1;
					}
					case 7:
					{
						if(Frecuencia[playerid] == 1)	{	Frencuena1p -= 1;	}
						if(Frecuencia[playerid] == 2)	{	Frencuena2p -= 1;	}
						if(Frecuencia[playerid] == 3)	{	Frencuena3p -= 1;	}
						if(Frecuencia[playerid] == 4)	{	Frencuena4p -= 1;	}
						if(Frecuencia[playerid] == 5)	{	Frencuena5p -= 1;	}
						if(Frecuencia[playerid] == 6)	{	Frencuena6p -= 1;	}
						if(Frecuencia[playerid] == 7)	{	Frencuena7p -= 1;	}
						if(Frecuencia[playerid] == 8)	{	Frencuena8p -= 1;	}
						SendClientMessage(playerid, -1, "Has seleccionado la frecuencia número 8, para hablar escribir !DP !!FP");
						Frecuencia[playerid] = 8;
						Frencuena8p += 1;
						AccionesRol(playerid,"enciende su radio y cambia de frecuencia.", 20);
						return 1;
					}
				}
			}
		}
		case DIALOGO_GRUA:
		{
			if(response)
			{
				new chatadmin[200];
				format(chatadmin, sizeof(chatadmin), "%s (por celular): Sí, por favor.", PlayerName(playerid));
				ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
				SetTimerEx("ServicioGrua1",4000,false,"d",playerid);
			}
			else
			{
				new chatadmin[200];
				format(chatadmin, sizeof(chatadmin), "%s (por celular): No, gracias.", PlayerName(playerid));
				ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
				cmd_colgar(playerid);
			}
		}
		case DIALOGO_GRUA2:
		{
			if(response)
			{
				if(PlayerInfo[playerid][jDinero] < PlayerInfo[playerid][vPrecio]/100) return SendClientMessage(playerid, -1, "No tienes el dinero suficiente para solícitar una grua a este vehículo");
				new stringo[256];
				format(stringo, 256, "Ultimo lugar estacionado\nEstacionamiento municipal");
				ShowPlayerDialog(playerid, DIALOGO_GRUA3, DIALOG_STYLE_LIST,"¿Dónde quieres que enviemos tu vehículo?",stringo,"Aceptar","Cancelar");
			}
		}
		case DIALOGO_GRUA3:
		{
			if(response == 1)
			{
				switch(listitem)
				{
					case 0:
					{
						new chatadmin[200];
						format(chatadmin, sizeof(chatadmin), "%s (por celular): Al estacionamiento registrado con anterioridad.", PlayerName(playerid));
						ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
						tipogrua[playerid] = 1;
						SetTimerEx("ServicioGrua2",3000,false,"d",playerid);
					}
					case 1:
					{
						new chatadmin[200];
						format(chatadmin, sizeof(chatadmin), "%s (por celular): Al estacionamiento municipal.", PlayerName(playerid));
						ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
						tipogrua[playerid] = 2;
						SetTimerEx("ServicioGrua2",3000,false,"d",playerid);
					}
					case 2:
					{
						new chatadmin[200];
						format(chatadmin, sizeof(chatadmin), "%s (por celular): Al estacionamiento marítimo.", PlayerName(playerid));
						ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
						tipogrua[playerid] = 3;
						SetTimerEx("ServicioGrua2",3000,false,"d",playerid);
					}
				}
			}
		}
		case DIALOGO_GRUA4:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(autos[playerid] == 0) return SendClientMessage(playerid,-1,"No puedes remolcar un vehículo que no existe.");
						new string5[500];
						new chatadmin[200];
						format(chatadmin, sizeof(chatadmin), "%s (por celular): %s.", PlayerName(playerid), PlayerInfo[playerid][vpatente]);
						ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
						if(EstaEnVehiculoVenta(autos[playerid],playerid))
						format(string5,128,"{33CCFF}[Servicio de grúa]{FFFFFF} Angélica: Acabamos de enviar una grúa a buscar tu %s matrícula %s.",NombreAuto[GetVehicleModel(autos[playerid])-400], PlayerInfo[playerid][vpatente]);
						SendClientMessage(playerid,-1,string5);
						if(PlayerInfo[playerid][pVip] == 0)
						{
							format(string5,128,"{33CCFF}[Servicio de grúa]{FFFFFF} Angélica: se cobró $%d de tu cuenta bancaria.",PlayerInfo[playerid][vPrecio]/100);
							SendClientMessage(playerid,-1,string5);
							QuitarDinero(playerid, PlayerInfo[playerid][vPrecio]/100);
						}
						SendClientMessage(playerid,-1,"{33CCFF}[Servicio de grúa]{FFFFFF} Angélica: Muchas gracias por utilizar nuestro servicio.");
						cmd_colgar(playerid);
						switch(tipogrua[playerid])
						{
							case 1:
							{
								SendClientMessage(playerid, -1, "Una grua fue enviada a la posición de tu vehículo, el cual sera transladado hacia el ultimo lugar donde lo estacionaste");
								SetVehicleToRespawn(autos[playerid]);
							}
							case 2:
							{
								SendClientMessage(playerid, -1, "Una grua fue enviada a la posición de tu vehículo, el cual sera transladado hacia el estacionamiento municipal");
								new lugar = random(4);
								switch(lugar)
								{
									case 0:
									{
										SetVehiclePos(autos[playerid],-13.0813,-374.6711,5.4297);
										SetVehicleZAngle(autos[playerid],358.1299);
									}
									case 1:
									{
										SetVehiclePos(autos[playerid],-29.7148,-375.2507,5.4297);
										SetVehicleZAngle(autos[playerid],354.9965);
									}
									case 2:
									{
										SetVehiclePos(autos[playerid],-2.0937,-346.8077,5.4297);
										SetVehicleZAngle(autos[playerid],89.6241);
									}
									case 3:
									{
										SetVehiclePos(autos[playerid],-3.3296,-332.9302,5.4297);
										SetVehicleZAngle(autos[playerid],91.8175);
									}
								}
								LinkVehicleToInterior(autos[playerid], 0);
								SetVehicleVirtualWorld(autos[playerid], 0);
							}
							case 3:
							{
								SendClientMessage(playerid, -1, "Una grua fue enviada a la posición de tu vehículo, el cual sera transladado hacia el estacionamiento maritimo");
								new lugar = random(4);
								switch(lugar)
								{
									case 0:
									{
										SetVehiclePos(autos[playerid],2634.2881,-2486.2009,-0.7707);
										SetVehicleZAngle(autos[playerid],2.5868);
									}
									case 1:
									{
										SetVehiclePos(autos[playerid],2623.3982,-2488.3628,-0.6238);
										SetVehicleZAngle(autos[playerid],2.1582);
									}
									case 2:
									{
										SetVehiclePos(autos[playerid],2607.7522,-2487.5833,-0.4461);
										SetVehicleZAngle(autos[playerid],0.4526);
									}
									case 3:
									{
										SetVehiclePos(autos[playerid],2594.8560,-2484.1121,-0.3442);
										SetVehicleZAngle(autos[playerid],357.9986);
									}
								}
								LinkVehicleToInterior(autos[playerid], 0);
								SetVehicleVirtualWorld(autos[playerid], 0);
							}
						}
					}
					case 1:
					{
						new string6[500];
						if(autos2[playerid] == 0) return SendClientMessage(playerid,-1,"No puedes remolcar un vehículo que no existe.");
						new chatadmin[200];
						format(chatadmin, sizeof(chatadmin), "%s (por celular): %s.", PlayerName(playerid), PlayerInfo[playerid][v2patente]);
						ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
						if(EstaEnVehiculoVenta(autos2[playerid],playerid))
						format(string6,128,"{33CCFF}[Servicio de grúa]{FFFFFF} Angélica: Acabamos de enviar una grúa a buscar tu %s matrícula %s.",NombreAuto[GetVehicleModel(autos2[playerid])-400], PlayerInfo[playerid][v2patente]);
						SendClientMessage(playerid,-1,string6);
						if(PlayerInfo[playerid][pVip] == 0)
						{
							format(string6,128,"{33CCFF}[Servicio de grúa]{FFFFFF} Angélica: se cobró $%d de tu cuenta bancaria.",PlayerInfo[playerid][v2Precio]/100);
							SendClientMessage(playerid,-1,string6);
							QuitarDinero(playerid, PlayerInfo[playerid][v2Precio]/100);
						}
						SendClientMessage(playerid,-1,"{33CCFF}[Servicio de grúa]{FFFFFF} Angélica: Muchas gracias por utilizar nuestro servicio.");
						cmd_colgar(playerid);
						switch(tipogrua[playerid])
						{
							case 1:
							{
								SendClientMessage(playerid, -1, "Una grua fue enviada a la posición de tu vehículo, el cual sera transladado hacia el ultimo lugar donde lo estacionaste");
								SetVehicleToRespawn(autos2[playerid]);
							}
							case 2:
							{
								SendClientMessage(playerid, -1, "Una grua fue enviada a la posición de tu vehículo, el cual sera transladado hacia el estacionamiento municipal");
								new lugar = random(4);
								switch(lugar)
								{
									case 0:
									{
										SetVehiclePos(autos2[playerid],-13.0813,-374.6711,5.4297);
										SetVehicleZAngle(autos2[playerid],358.1299);
									}
									case 1:
									{
										SetVehiclePos(autos2[playerid],-29.7148,-375.2507,5.4297);
										SetVehicleZAngle(autos2[playerid],354.9965);
									}
									case 2:
									{
										SetVehiclePos(autos2[playerid],-2.0937,-346.8077,5.4297);
										SetVehicleZAngle(autos2[playerid],89.6241);
									}
									case 3:
									{
										SetVehiclePos(autos2[playerid],-3.3296,-332.9302,5.4297);
										SetVehicleZAngle(autos2[playerid],91.8175);
									}
								}
								LinkVehicleToInterior(autos2[playerid], 0);
								SetVehicleVirtualWorld(autos2[playerid], 0);
							}
							case 3:
							{
								SendClientMessage(playerid, -1, "Una grua fue enviada a la posición de tu vehículo, el cual sera transladado hacia el estacionamiento maritimo");
								new lugar = random(4);
								switch(lugar)
								{
									case 0:
									{
										SetVehiclePos(autos2[playerid],2634.2881,-2486.2009,-0.7707);
										SetVehicleZAngle(autos2[playerid],2.5868);
									}
									case 1:
									{
										SetVehiclePos(autos2[playerid],2623.3982,-2488.3628,-0.6238);
										SetVehicleZAngle(autos2[playerid],2.1582);
									}
									case 2:
									{
										SetVehiclePos(autos2[playerid],2607.7522,-2487.5833,-0.4461);
										SetVehicleZAngle(autos2[playerid],0.4526);
									}
									case 3:
									{
										SetVehiclePos(autos2[playerid],2594.8560,-2484.1121,-0.3442);
										SetVehicleZAngle(autos2[playerid],357.9986);
									}
								}
								LinkVehicleToInterior(autos2[playerid], 0);
								SetVehicleVirtualWorld(autos2[playerid], 0);
							}
						}
					}
					case 2:
					{
						new string8[500];
						if(autos3[playerid] == 0) return SendClientMessage(playerid,-1,"No puedes remolcar un vehículo que no existe.");
						new chatadmin[200];
						format(chatadmin, sizeof(chatadmin), "%s (por celular): %s.", PlayerName(playerid), PlayerInfo[playerid][v3patente]);
						ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
						if(EstaEnVehiculoVenta(autos3[playerid],playerid))
						format(string8,128,"{33CCFF}[Servicio de grúa]{FFFFFF} Angélica: Acabamos de enviar una grúa a buscar tu %s matrícula %s.",NombreAuto[GetVehicleModel(autos3[playerid])-400], PlayerInfo[playerid][v3patente]);
						SendClientMessage(playerid,-1,string8);
						if(PlayerInfo[playerid][pVip] == 0)
						{
							format(string8,128,"{33CCFF}[Servicio de grúa]{FFFFFF} Angélica: se cobró $%d de tu cuenta bancaria.",PlayerInfo[playerid][v3Precio]/100);
							SendClientMessage(playerid,-1,string8);
							QuitarDinero(playerid, PlayerInfo[playerid][v3Precio]/100);
						}
						SendClientMessage(playerid,-1,"{33CCFF}[Servicio de grúa]{FFFFFF} Angélica: Muchas gracias por utilizar nuestro servicio.");
						cmd_colgar(playerid);
						switch(tipogrua[playerid])
						{
							case 1:
							{
								SendClientMessage(playerid, -1, "Una grua fue enviada a la posición de tu vehículo, el cual sera transladado hacia el ultimo lugar donde lo estacionaste");
								SetVehicleToRespawn(autos3[playerid]);
							}
							case 2:
							{
								SendClientMessage(playerid, -1, "Una grua fue enviada a la posición de tu vehículo, el cual sera transladado hacia el estacionamiento municipal");
								new lugar = random(4);
								switch(lugar)
								{
									case 0:
									{
										SetVehiclePos(autos3[playerid],-13.0813,-374.6711,5.4297);
										SetVehicleZAngle(autos3[playerid],358.1299);
									}
									case 1:
									{
										SetVehiclePos(autos3[playerid],-29.7148,-375.2507,5.4297);
										SetVehicleZAngle(autos3[playerid],354.9965);
									}
									case 2:
									{
										SetVehiclePos(autos3[playerid],-2.0937,-346.8077,5.4297);
										SetVehicleZAngle(autos3[playerid],89.6241);
									}
									case 3:
									{
										SetVehiclePos(autos3[playerid],-3.3296,-332.9302,5.4297);
										SetVehicleZAngle(autos3[playerid],91.8175);
									}
								}
								LinkVehicleToInterior(autos3[playerid], 0);
								SetVehicleVirtualWorld(autos3[playerid], 0);
							}
							case 3:
							{
								SendClientMessage(playerid, -1, "Una grua fue enviada a la posición de tu vehículo, el cual sera transladado hacia el estacionamiento maritimo");
								new lugar = random(4);
								switch(lugar)
								{
									case 0:
									{
										SetVehiclePos(autos3[playerid],2634.2881,-2486.2009,-0.7707);
										SetVehicleZAngle(autos3[playerid],2.5868);
									}
									case 1:
									{
										SetVehiclePos(autos3[playerid],2623.3982,-2488.3628,-0.6238);
										SetVehicleZAngle(autos3[playerid],2.1582);
									}
									case 2:
									{
										SetVehiclePos(autos3[playerid],2607.7522,-2487.5833,-0.4461);
										SetVehicleZAngle(autos3[playerid],0.4526);
									}
									case 3:
									{
										SetVehiclePos(autos3[playerid],2594.8560,-2484.1121,-0.3442);
										SetVehicleZAngle(autos3[playerid],357.9986);
									}
								}
								LinkVehicleToInterior(autos3[playerid], 0);
								SetVehicleVirtualWorld(autos3[playerid], 0);
							}
						}
					}
					case 3:
					{
						new string7[500];
						if(autos4[playerid] == 0) return SendClientMessage(playerid,-1,"No puedes remolcar un vehículo que no existe.");
						new chatadmin[200];
						format(chatadmin, sizeof(chatadmin), "%s (por celular): %s.", PlayerName(playerid), PlayerInfo[playerid][v4patente]);
						ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
						if(EstaEnVehiculoVenta(autos4[playerid],playerid))
						format(string7,128,"{33CCFF}[Servicio de grúa]{FFFFFF} Angélica: Acabamos de enviar una grúa a buscar tu %s matrícula %s.",NombreAuto[GetVehicleModel(autos4[playerid])-400], PlayerInfo[playerid][v4patente]);
						SendClientMessage(playerid,-1,string7);
						if(PlayerInfo[playerid][pVip] == 0)
						{
							format(string7,128,"{33CCFF}[Servicio de grúa]{FFFFFF} Angélica: se cobró $%d de tu cuenta bancaria.",PlayerInfo[playerid][v4Precio]/100);
							SendClientMessage(playerid,-1,string7);
							QuitarDinero(playerid, PlayerInfo[playerid][v4Precio]/100);
						}
						SendClientMessage(playerid,-1,"{33CCFF}[Servicio de grúa]{FFFFFF} Angélica: Muchas gracias por utilizar nuestro servicio.");
						cmd_colgar(playerid);
						switch(tipogrua[playerid])
						{
							case 1:
							{
								SetVehicleToRespawn(autos4[playerid]);
							}
							case 2:
							{
								new lugar = random(4);
								switch(lugar)
								{
									case 0:
									{
										SetVehiclePos(autos4[playerid],-13.0813,-374.6711,5.4297);
										SetVehicleZAngle(autos4[playerid],358.1299);
									}
									case 1:
									{
										SetVehiclePos(autos4[playerid],-29.7148,-375.2507,5.4297);
										SetVehicleZAngle(autos4[playerid],354.9965);
									}
									case 2:
									{
										SetVehiclePos(autos4[playerid],-2.0937,-346.8077,5.4297);
										SetVehicleZAngle(autos4[playerid],89.6241);
									}
									case 3:
									{
										SetVehiclePos(autos4[playerid],-3.3296,-332.9302,5.4297);
										SetVehicleZAngle(autos4[playerid],91.8175);
									}
								}
								LinkVehicleToInterior(autos4[playerid], 0);
								SetVehicleVirtualWorld(autos4[playerid], 0);
							}
							case 3:
							{
								new lugar = random(4);
								switch(lugar)
								{
									case 0:
									{
										SetVehiclePos(autos4[playerid],2634.2881,-2486.2009,-0.7707);
										SetVehicleZAngle(autos4[playerid],2.5868);
									}
									case 1:
         							{
										SetVehiclePos(autos4[playerid],2623.3982,-2488.3628,-0.6238);
										SetVehicleZAngle(autos4[playerid],2.1582);
									}
									case 2:
									{
										SetVehiclePos(autos4[playerid],2607.7522,-2487.5833,-0.4461);
										SetVehicleZAngle(autos4[playerid],0.4526);
									}
									case 3:
									{
										SetVehiclePos(autos4[playerid],2594.8560,-2484.1121,-0.3442);
										SetVehicleZAngle(autos4[playerid],357.9986);
									}
								}
								LinkVehicleToInterior(autos4[playerid], 0);
								SetVehicleVirtualWorld(autos4[playerid], 0);
							}
						}
					}
				}
			}
		}
		case DIALOGO_LORO:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						ShowPlayerDialog(playerid, DIALOGO_LORO2, DIALOG_STYLE_INPUT, "Enseñar frase al loro", "Ingresa una frase.", "Aceptar", "Cancelar");
					}
					case 1:
					{
						SendClientMessage(playerid, COLOR_WHITE, "El loro no hablará hasta que le enseñes otra frase.");
						LoroHabla[playerid] = 0;
					}
				}
			}
			return 1;
  		}
		case DIALOGO_LORO2:
		{
			if(response)
			{
				format(FraseLoro[playerid], 70, "%s",inputtext);
				SendClientMessage(playerid, COLOR_WHITE, "El loro aprendió a repetir la frase.");
				LoroHabla[playerid] = 1;
			}
			return 1;
		}
		case VENDERRZ:
		{
			if(response)
			{
				new string5[200];
				format(string5, 256, "Le ofrecistes %d "SERVER_COIN" a {00CCFF}%s{FFFFFF} por {00CC00}$%d{FFFFFF}.",EVOfrecidos[LeOfreci[playerid]],PlayerName(LeOfreci[playerid]),dineropedido[LeOfreci[playerid]]);
				SendClientMessage(playerid, -1,string5);
				YaOfrecio[playerid] = 1;
				idTimerOfertaPerdida[LeOfreci[playerid]] = SetTimerEx("OfertaPerdida", 60000, false, "d", LeOfreci[playerid]);
				TiempoVenta[playerid] = 60;
				format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece %d "SERVER_COIN2" por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar "SERVER_COIN3"{FFFFFF}.", PlayerName(playerid),EVOfrecidos[LeOfreci[playerid]],dineropedido[LeOfreci[playerid]]);
				SendClientMessage(LeOfreci[playerid], -1, string);
			}
		}
		case DASCENSOR:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						SetPlayerPos(playerid, 2117.4490,2416.4680,10.8432);
						return 1;
					}
					case 1:
					{
						SetPlayerPos(playerid, 2117.4490,2416.4680,14.8432);
						return 1;
					}
					case 2:
					{
						SetPlayerPos(playerid, 2117.4490,2416.4680,18.8432);
						return 1;
					}
					case 3:
					{
						SetPlayerPos(playerid, 2117.4490,2416.4680,22.8432);
						return 1;
					}
					case 4:
					{
						SetPlayerPos(playerid, 2117.4490,2416.4680,27.8432);
						return 1;
					}
					case 5:
					{
						SetPlayerPos(playerid, 2117.4490,2416.4680,31.8432);
						return 1;
					}
					case 6:
					{
						SetPlayerPos(playerid, 2117.4490,2416.4680,36.8432);
						return 1;
					}
					case 7:
					{
						SetPlayerPos(playerid, 2117.4490,2416.4680,40.8432);
						return 1;
					}
					case 8:
					{
						SetPlayerPos(playerid, 2117.4490,2416.4680,44.8432);
						return 1;
					}
					case 9:
					{
						SetPlayerPos(playerid, 2117.4490,2416.4680,48.8432);
						return 1;
					}
				}
			}
		}
		case GPS:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
					{
						format(string, sizeof(string), "Concesionaria Unity (Vehículos baratos)\nConcesionaria 2 Grotti\nConcesionaria Coutt And Schutz\nConcesionaria Wang Cars (Los Santos)\nConcesionaria Wang Cars (San Fierro)");
						ShowPlayerDialog(playerid,GPS3, DIALOG_STYLE_LIST,"Selecciona un concesionario",string,"Ver mapa","Cerrar");
						return 1;
					}
					case 1:
					{
						format(string, sizeof(string), "Banco central de Los Santos\nBanco central de San Fierro\nBanco central de Las Venturas");
						ShowPlayerDialog(playerid,GPS4, DIALOG_STYLE_LIST,"Selecciona un banco",string,"Ver mapa","Cerrar");
						return 1;
					}
					case 2:
					{
						format(string, sizeof(string), "24/7 en Los Santos\n24/7 en San Fierro");
						ShowPlayerDialog(playerid,GPS5, DIALOG_STYLE_LIST,"Selecciona una tienda",string,"Ver mapa","Cerrar");
						return 1;
					}
					case 3:
					{
						format(string, sizeof(string), "Fabricante de armas\nCamionero\nMédico\nTaxista\nGuardaespaldas\nMecánico\nBasurero\nLocutor de radio\nTransportista\nMinero\nPescador\nProstitución");
						ShowPlayerDialog(playerid,GPS6, DIALOG_STYLE_LIST,"Selecciona un trabajo",string,"Ver mapa","Cerrar");
						return 1;
					}
					case 4:
					{
						format(string, sizeof(string), "Edificio municipal de Los Santos\nDepartamento de policía de Los Santos");
						ShowPlayerDialog(playerid,GPS7, DIALOG_STYLE_LIST,"Selecciona un lugar",string,"Ver mapa","Cerrar");
						return 1;
					}
					case 5:
					{
						format(string, sizeof(string), "Sub Urban\nZIP\nBinco\nVictim\nDidier Sachz\nPro Laps");
						ShowPlayerDialog(playerid,GPS8, DIALOG_STYLE_LIST,"Selecciona una tienda",string,"Ver mapa","Cerrar");
						return 1;
					}
					case 6:
					{
						if(GPSActivado[playerid] == 1) return SendClientMessage(playerid, COLOR_WHITE, "Ya estás viendo el mapa del GPS.");
						AbrirGPS(playerid);
						return 1;
					}
				}
			}
		}
		case BANCO:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						format(string,sizeof(string),"Coloca en números la cantidad que deseas retirar");
						ShowPlayerDialog(playerid, BANCO1, DIALOG_STYLE_INPUT, "Retiro", string, "Retirar","Cancelar");
						return 1;
					}
					case 1:
					{
						format(string,sizeof(string),"Coloca en números la cantidad que deseas depositar");
						ShowPlayerDialog(playerid, BANCO4, DIALOG_STYLE_INPUT, "Deposito", string, "Depositar","Cancelar");
						return 1;
					}
					case 2:
					{
						SendClientMessage(playerid,-1,"====================================================");
						format(string,sizeof(string),"{FFFFFF}El saldo actual, de tu cuenta bancaria, es de {00CC00}$%s{FFFFFF}.",Numeros(PlayerInfo[playerid][pBanco]));
						SendClientMessage(playerid,-1,string);
						SendClientMessage(playerid,-1,"====================================================");
						return 1;
					}
					case 3:
					{
					    if(TiempoDarDinero[playerid] > 0)
						{
							if(TiempoDarDinero[playerid] > 60)format(string,sizeof(string),"Por favor espera {FF0000}%d:%d {FFFFFF}(m:s){FFFFFF}.",TiempoDarDinero[playerid]/60, TiempoDarDinero[playerid]%(60));
							else if(TiempoDarDinero[playerid] < 60)format(string,sizeof(string),"Por favor espera {FF0000}%d segundos{FFFFFF}.",TiempoDarDinero[playerid]%(60));
							return SendClientMessage(playerid, -1,string);
						}
						if(PlayerInfo[playerid][@Nivel] < 5) return SendClientMessage(playerid,-1,"Necesitas nivel 5 para transferir dinero entre cuentas bancarias.");
						format(string,sizeof(string),"Coloca la ID del jugador al que haras la transferencia");
						ShowPlayerDialog(playerid, BANCO2, DIALOG_STYLE_INPUT, "Transferencia", string, "Transferir","Cancelar");
						return 1;
					}
				}
			}
		}
		case BANCO1:
		{
			if(response)
			{
			    if(strfind(inputtext,"=",true) != -1 || strfind(inputtext,"´",true) != -1 || strfind(inputtext,"'",true) != -1 || strfind(inputtext,"`",true) != -1 || strfind(inputtext,",",true) != -1 || strfind(inputtext,"¨",true) != -1) return SendClientMessage(playerid,-1,"No tienes esa cantidad de dinero.");
				if(strval(inputtext) <= 0) return SendClientMessage(playerid,-1,"Monto inválido");
				if(PlayerInfo[playerid][pBanco] >= strval(inputtext))
				{
					DarDinero(playerid, strval(inputtext));
					PlayerInfo[playerid][pBanco] -= strval(inputtext);
					SendClientMessage(playerid,-1,"===========================================================");
					format(string,sizeof(string),"{FFFFFF}Acabas de retirar {00CC00}$%d{FFFFFF}, ahora tu saldo es de {00CC00}$%d{FFFFFF}.", strval(inputtext), PlayerInfo[playerid][pBanco]);
					SendClientMessage(playerid,-1,string);
					SendClientMessage(playerid,-1,"===========================================================");
				}
				else if(PlayerInfo[playerid][pBanco] < strval(inputtext))	{
					SendClientMessage(playerid,-1,"No tienes esa cantidad de dinero tu cuenta bancaria.");
					SendClientMessage(playerid,-1,"Por favor, consulta tu saldo antes de intentar retirar.");	}
			}
		}
		case BANCO2:
		{
			if(response)
			{
			    if(strfind(inputtext,"=",true) != -1 || strfind(inputtext,"´",true) != -1 || strfind(inputtext,"'",true) != -1 || strfind(inputtext,"`",true) != -1 || strfind(inputtext,",",true) != -1 || strfind(inputtext,"¨",true) != -1) return SendClientMessage(playerid,-1,"Error, intentalo nuevamente y ten cuidado con lo que escribes.");
				if(!IsPlayerConnected(strval(inputtext))) return SendClientMessage(playerid,-1,"No se ha encontrado esa cuenta bancaria");
				if(IsNumeric(inputtext))
				{
					format(string,sizeof(string),"El titular de la cuenta a depositar %s, coloca el monto", PlayerName(strval(inputtext)));
					ShowPlayerDialog(playerid, BANCO3, DIALOG_STYLE_INPUT, "Deposito", string, "Depositar", "Cancelar");
					Deposito[playerid] = strval(inputtext);
				}
			}
		}
		case BANCO3:
		{
			if(response)
			{
			    if(strfind(inputtext,"=",true) != -1 || strfind(inputtext,"´",true) != -1 || strfind(inputtext,"'",true) != -1 || strfind(inputtext,"`",true) != -1 || strfind(inputtext,",",true) != -1 || strfind(inputtext,"¨",true) != -1) return SendClientMessage(playerid,-1,"Error, intentalo nuevamente y ten cuidado con lo que escribes.");
				if(strval(inputtext) > 0 && strval(inputtext) < 5000000)
				{
					if(PlayerInfo[playerid][pBanco] >= strval(inputtext))
					{
						PlayerInfo[playerid][pBanco] -= strval(inputtext);
						PlayerInfo[Deposito[playerid]][pBanco] += strval(inputtext);
						SendClientMessage(playerid,-1,"===========================================================");
						format(string,sizeof(string),"{FFFFFF}Acabas de transferir {00CC00}$%d{FFFFFF} a %s.", strval(inputtext),PlayerName(Deposito[playerid]));
						SendClientMessage(playerid,-1,string);
						SendClientMessage(playerid,-1,"===========================================================");
						format(string,sizeof(string),"((SMS de %s [333])): Recibiste una transferencia de $%d realizada por %s.",NombreBanco(playerid), strval(inputtext),PlayerName(playerid));
						SendClientMessage(Deposito[playerid],COLOR_AMARILLO2,string);
						Deposito[playerid] = INVALID_PLAYER_ID;

						new string2[200];
						new year, month,day;
						new hour,minuite,second;
						getdate(year, month, day);
						gettime(hour,minuite,second);
						format(string2, sizeof(string2), "%02d/%02d/%02d %02d:%02d:%02d", day,month,year,hour,minuite,second);
						format(Query, sizeof(Query),"INSERT INTO `log_transacciones` (`Fecha`, `Enviador`, `Receptor`, `Monto`) VALUES ('%s','%s', '%s', '%s')", string2, PlayerName(playerid), PlayerName(Deposito[playerid]), inputtext);
						mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
					}
				}
				else return SendClientMessage(playerid,-1,"Monto inválido");
			}
		}
		case BANCO4:
		{
			if(response)
			{
			    if(strfind(inputtext,"=",true) != -1 || strfind(inputtext,"´",true) != -1 || strfind(inputtext,"'",true) != -1 || strfind(inputtext,"`",true) != -1 || strfind(inputtext,",",true) != -1 || strfind(inputtext,"¨",true) != -1) return SendClientMessage(playerid,-1,"Error, intentalo nuevamente y ten cuidado con lo que escribes.");
				if(strval(inputtext) > 0 && strval(inputtext) < 5000000)
				{
					if(PlayerInfo[playerid][jDinero] >= strval(inputtext))
					{
						QuitarDinero(playerid, strval(inputtext));
						PlayerInfo[playerid][pBanco] += strval(inputtext);
						SendClientMessage(playerid,-1,"===========================================================");
						format(string, sizeof(string), "{FFFFFF}Acabas de depositar {00CC00}$%d{FFFFFF}, ahora tu saldo es de {00CC00}$%d{FFFFFF}.",strval(inputtext), PlayerInfo[playerid][pBanco]);
						SendClientMessage(playerid,-1,string);
						SendClientMessage(playerid,-1,"===========================================================");
					}
					else return SendClientMessage(playerid,-1,"No tienes esa cantidad de dinero.");
				}
				else return SendClientMessage(playerid,-1,"Monto inválido");
			}
		}
		case VENDERAUTO:
		{
			if(response)
			{
				if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
				{
					new vehiculo1[150],vehiculo2[150],vehiculo3[150],vehiculo4[150],mensaje[600], tipomoneda[5];
					if(PlayerInfo[playerid][vModelo] > 0)
					{
						if(PlayerInfo[playerid][vMonedaa] > 0) { tipomoneda=""SERVER_COIN""; } else { tipomoneda="$"; }
						format(vehiculo1, sizeof(vehiculo1), " Vehículo: {F6E200}%s{FFFFFF} | Patente: {00CCFF}%s{FFFFFF} | Precio: {00CC00}%d%s", NombreAuto[GetVehicleModel(autos[playerid])-400], PlayerInfo[playerid][vpatente], PlayerInfo[playerid][vPrecio]/2, tipomoneda);
					}
					if(PlayerInfo[playerid][vModelo2] > 0)
					{
						if(PlayerInfo[playerid][v2Monedaa] > 0) { tipomoneda=" "SERVER_COIN""; } else { tipomoneda="$"; }
						format(vehiculo2, sizeof(vehiculo2), "\n Vehículo: {F6E200}%s{FFFFFF} | Patente: {00CCFF}%s{FFFFFF} | Precio: {00CC00}%d%s", NombreAuto[GetVehicleModel(autos2[playerid])-400], PlayerInfo[playerid][v2patente], PlayerInfo[playerid][v2Precio]/2, tipomoneda);
					}
					if(PlayerInfo[playerid][vModelo3] > 0)
					{
						if(PlayerInfo[playerid][v3Monedaa] > 0) { tipomoneda=" "SERVER_COIN""; } else { tipomoneda="$"; }
						format(vehiculo3, sizeof(vehiculo3), "\n Vehículo: {F6E200}%s{FFFFFF} | Patente: {00CCFF}%s{FFFFFF} | Precio: {00CC00}%d%s", NombreAuto[GetVehicleModel(autos3[playerid])-400], PlayerInfo[playerid][v3patente], PlayerInfo[playerid][v3Precio]/2, tipomoneda);
					}
					if(PlayerInfo[playerid][vModelo4] > 0)
					{
						if(PlayerInfo[playerid][v4Monedaa] > 0) { tipomoneda=" "SERVER_COIN""; } else { tipomoneda="$"; }
						format(vehiculo4, sizeof(vehiculo4), "\n Vehículo: {F6E200}%s{FFFFFF} | Patente: {00CCFF}%s{FFFFFF} | Precio: {00CC00}%d%s", NombreAuto[GetVehicleModel(autos4[playerid])-400], PlayerInfo[playerid][v4patente], PlayerInfo[playerid][v4Precio]/2, tipomoneda);
					}
					format(mensaje, sizeof(mensaje), "%s%s%s%s", vehiculo1,vehiculo2,vehiculo3,vehiculo4);
					ShowPlayerDialog(playerid, VENDERAUTO2, DIALOG_STYLE_LIST, "Vehículo que deseas vender", mensaje, "Vender","Cancelar");
				}
			}
		}
		case VENDERAUTO2:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
         				new autoid,x,y,patentex[10],precio,modelo;
         				if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
						{
						    if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; y = PlayerInfo[playerid][vMonedaa]; x = 1; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; y = PlayerInfo[playerid][vMonedaa]; x = 1; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; y = PlayerInfo[playerid][v2Monedaa]; x = 2;}
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; y = PlayerInfo[playerid][v3Monedaa]; x = 3;}
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; y = PlayerInfo[playerid][v4Monedaa]; x = 4;}
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; y = PlayerInfo[playerid][vMonedaa]; x = 1;}
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; y = PlayerInfo[playerid][vMonedaa]; x = 1;}
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; y = PlayerInfo[playerid][vMonedaa]; x = 1;}
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; y = PlayerInfo[playerid][v2Monedaa]; x = 2;}
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; y = PlayerInfo[playerid][v3Monedaa]; x = 2;}
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; y = PlayerInfo[playerid][v3Monedaa]; x = 3;}
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio];   y = PlayerInfo[playerid][vMonedaa]; x = 1;}
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; y = PlayerInfo[playerid][vMonedaa]; x = 1;}
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; y = PlayerInfo[playerid][vMonedaa]; x = 1;}
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; y = PlayerInfo[playerid][v2Monedaa]; x = 2;}
                        }
						if(EstaEnAutoVent4(autoid,playerid))
						{
							new query[900];
							modelo = GetVehicleModel(autoid);
							if(y == 0)	{
								format(string, sizeof(string), "Muchas gracias por vendernos tu {DBED16}%s{FFFFFF} ({00CCFF}%s{FFFFFF}). Te pagamos: {00CC00}$%d{FFFFFF}.",NombreAuto[modelo-400], patentex, precio/2);
								SendClientMessage(playerid, -1, string);
								DarDinero(playerid, precio/2);
							}
							else {
								format(string, sizeof(string), "Muchas gracias por vendernos tu {DBED16}%s{FFFFFF} ({00CCFF}%s{FFFFFF}). Te pagamos: {00CC00}%d "SERVER_COIN"{FFFFFF}.",NombreAuto[modelo-400], patentex, precio/2);
								SendClientMessage(playerid, -1, string);
								PlayerInfo[playerid][Moneda] += precio/2;
							}
							format(query, 900, "DELETE FROM `p_vehicles` WHERE `Propietario` = '%d' AND `Slot` = '%d'",PlayerInfo[playerid][pID],x);
							mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

							EspacioBaul[autoid] = 0;
							EspacioBaul2[autoid] = 0;
							EspacioBaul3[autoid] = 0;
							EspacioBaul4[autoid] = 0;
							EspacioBaul5[autoid] = 0;
							EspacioBaul6[autoid] = 0;
							EspacioBaul7[autoid] = 0;
							EspacioBaul8[autoid] = 0;
							EspacioBaul9[autoid] = 0;
							EspacioBaul10[autoid] = 0;
							MotorAuto[autoid] = 0;
							if(x == 1) {
								PlayerInfo[playerid][vModelo] = 0;
								PlayerInfo[playerid][vTraba] = 0;
								PlayerInfo[playerid][vAlarma] = 0;
								PlayerInfo[playerid][vinterior] = 0;
								PlayerInfo[playerid][vSeguro] = 0;
								PlayerInfo[playerid][vAAlarma] = 0;
								PlayerInfo[playerid][vvw] = 0;
								PlayerInfo[playerid][vPrecio] = 0;
								DestroyVehicle(autoid);
								autos[playerid] = 0;
                            }
                            if(x == 2) {
								PlayerInfo[playerid][vModelo2] = 0;
								PlayerInfo[playerid][v2Traba] = 0;
								PlayerInfo[playerid][v2Alarma] = 0;
								PlayerInfo[playerid][v2interior] = 0;
								PlayerInfo[playerid][vSeguro2] = 0;
								PlayerInfo[playerid][vAAlarma2] = 0;
								PlayerInfo[playerid][v2vw] = 0;
								PlayerInfo[playerid][v2Precio] = 0;
								DestroyVehicle(autoid);
								autos2[playerid] = 0;
                            }
                            if(x == 3) {
								PlayerInfo[playerid][vModelo3] = 0;
								PlayerInfo[playerid][v3Traba] = 0;
								PlayerInfo[playerid][v3Alarma] = 0;
								PlayerInfo[playerid][v3interior] = 0;
								PlayerInfo[playerid][vSeguro3] = 0;
								PlayerInfo[playerid][vAAlarma3] = 0;
								PlayerInfo[playerid][v3vw] = 0;
								PlayerInfo[playerid][v3Precio] = 0;
								DestroyVehicle(autoid);
								autos3[playerid] = 0;
                            }
							if(x == 4) {
								PlayerInfo[playerid][vModelo4] = 0;
								PlayerInfo[playerid][v4Traba] = 0;
								PlayerInfo[playerid][v4Alarma] = 0;
								PlayerInfo[playerid][v4interior] = 0;
								PlayerInfo[playerid][vSeguro4] = 0;
								PlayerInfo[playerid][vAAlarma4] = 0;
								PlayerInfo[playerid][v4vw] = 0;
								PlayerInfo[playerid][v4Precio] = 0;
								DestroyVehicle(autoid);
								autos4[playerid] = 0;
                            }
							return 1;
						}
					}
					case 1:
					{
					    new autoid,x,y,patentex[10],precio,modelo;
					    if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
						{
						    if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vMonedaa]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v3Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v3Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v3Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v3Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v3Monedaa]; }
							else return 1;
						}
						if(EstaEnAutoVent4(autoid,playerid))
						{
							new query[900];
							modelo = GetVehicleModel(autoid);
							if(y == 0)	{
								format(string, sizeof(string), "Muchas gracias por vendernos tu {DBED16}%s{FFFFFF} ({00CCFF}%s{FFFFFF}). Te pagamos: {00CC00}$%d{FFFFFF}.",NombreAuto[modelo-400], patentex, precio/2);
								SendClientMessage(playerid, -1, string);
								DarDinero(playerid, precio/2);
							}
							else {
								format(string, sizeof(string), "Muchas gracias por vendernos tu {DBED16}%s{FFFFFF} ({00CCFF}%s{FFFFFF}). Te pagamos: {00CC00}%d "SERVER_COIN"{FFFFFF}.",NombreAuto[modelo-400], patentex, precio/2);
								SendClientMessage(playerid, -1, string);
								PlayerInfo[playerid][Moneda] += precio/2;
							}
							format(query, 900, "DELETE FROM `p_vehicles` WHERE `Propietario` = '%d' AND `Slot` = '%d'",PlayerInfo[playerid][pID],x);
							mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

							EspacioBaul[autoid] = 0;
							EspacioBaul2[autoid] = 0;
							EspacioBaul3[autoid] = 0;
							EspacioBaul4[autoid] = 0;
							EspacioBaul5[autoid] = 0;
							EspacioBaul6[autoid] = 0;
							EspacioBaul7[autoid] = 0;
							EspacioBaul8[autoid] = 0;
							EspacioBaul9[autoid] = 0;
							EspacioBaul10[autoid] = 0;
							MotorAuto[autoid] = 0;
							if(x == 1) {
								PlayerInfo[playerid][vModelo] = 0;
								PlayerInfo[playerid][vTraba] = 0;
								PlayerInfo[playerid][vAlarma] = 0;
								PlayerInfo[playerid][vinterior] = 0;
								PlayerInfo[playerid][vSeguro] = 0;
								PlayerInfo[playerid][vAAlarma] = 0;
								PlayerInfo[playerid][vvw] = 0;
								PlayerInfo[playerid][vPrecio] = 0;
								DestroyVehicle(autoid);
								autos[playerid] = 0;
                            }
                            if(x == 2) {
								PlayerInfo[playerid][vModelo2] = 0;
								PlayerInfo[playerid][v2Traba] = 0;
								PlayerInfo[playerid][v2Alarma] = 0;
								PlayerInfo[playerid][v2interior] = 0;
								PlayerInfo[playerid][vSeguro2] = 0;
								PlayerInfo[playerid][vAAlarma2] = 0;
								PlayerInfo[playerid][v2vw] = 0;
								PlayerInfo[playerid][v2Precio] = 0;
								DestroyVehicle(autoid);
								autos2[playerid] = 0;
                            }
                            if(x == 3) {
								PlayerInfo[playerid][vModelo3] = 0;
								PlayerInfo[playerid][v3Traba] = 0;
								PlayerInfo[playerid][v3Alarma] = 0;
								PlayerInfo[playerid][v3interior] = 0;
								PlayerInfo[playerid][vSeguro3] = 0;
								PlayerInfo[playerid][vAAlarma3] = 0;
								PlayerInfo[playerid][v3vw] = 0;
								PlayerInfo[playerid][v3Precio] = 0;
								DestroyVehicle(autoid);
								autos3[playerid] = 0;
                            }
							if(x == 4) {
								PlayerInfo[playerid][vModelo4] = 0;
								PlayerInfo[playerid][v4Traba] = 0;
								PlayerInfo[playerid][v4Alarma] = 0;
								PlayerInfo[playerid][v4interior] = 0;
								PlayerInfo[playerid][vSeguro4] = 0;
								PlayerInfo[playerid][vAAlarma4] = 0;
								PlayerInfo[playerid][v4vw] = 0;
								PlayerInfo[playerid][v4Precio] = 0;
								DestroyVehicle(autoid);
								autos4[playerid] = 0;
                            }
							return 1;
						}
					}
					case 2:
					{
					    new autoid,x,y,patentex[10],precio,modelo;
					    if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
						{
							if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v2Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vMonedaa]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v2Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vMonedaa]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vMonedaa]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vMonedaa]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v3Precio]; x = 2;  y = PlayerInfo[playerid][v2Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 2;  y = PlayerInfo[playerid][v3Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v3Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Monedaa]; }
							else return 1;
						}
						if(EstaEnAutoVent4(autoid,playerid))
						{
							new query[900];
							modelo = GetVehicleModel(autoid);
							if(y == 0)	{
								format(string, sizeof(string), "Muchas gracias por vendernos tu {DBED16}%s{FFFFFF} ({00CCFF}%s{FFFFFF}). Te pagamos: {00CC00}$%d{FFFFFF}.",NombreAuto[modelo-400], patentex, precio/2);
								SendClientMessage(playerid, -1, string);
								DarDinero(playerid, precio/2);
							}
							else {
								format(string, sizeof(string), "Muchas gracias por vendernos tu {DBED16}%s{FFFFFF} ({00CCFF}%s{FFFFFF}). Te pagamos: {00CC00}%d "SERVER_COIN"{FFFFFF}.",NombreAuto[modelo-400], patentex, precio/2);
								SendClientMessage(playerid, -1, string);
								PlayerInfo[playerid][Moneda] += precio/2;
							}
							format(query, 900, "DELETE FROM `p_vehicles` WHERE `Propietario` = '%d' AND `Slot` = '%d'",PlayerInfo[playerid][pID],x);
							mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

							EspacioBaul[autoid] = 0;
							EspacioBaul2[autoid] = 0;
							EspacioBaul3[autoid] = 0;
							EspacioBaul4[autoid] = 0;
							EspacioBaul5[autoid] = 0;
							EspacioBaul6[autoid] = 0;
							EspacioBaul7[autoid] = 0;
							EspacioBaul8[autoid] = 0;
							EspacioBaul9[autoid] = 0;
							EspacioBaul10[autoid] = 0;
							MotorAuto[autoid] = 0;
							if(x == 1) {
								PlayerInfo[playerid][vModelo] = 0;
								PlayerInfo[playerid][vTraba] = 0;
								PlayerInfo[playerid][vAlarma] = 0;
								PlayerInfo[playerid][vinterior] = 0;
								PlayerInfo[playerid][vSeguro] = 0;
								PlayerInfo[playerid][vAAlarma] = 0;
								PlayerInfo[playerid][vvw] = 0;
								PlayerInfo[playerid][vPrecio] = 0;
								DestroyVehicle(autoid);
								autos[playerid] = 0;
                            }
                            if(x == 2) {
								PlayerInfo[playerid][vModelo2] = 0;
								PlayerInfo[playerid][v2Traba] = 0;
								PlayerInfo[playerid][v2Alarma] = 0;
								PlayerInfo[playerid][v2interior] = 0;
								PlayerInfo[playerid][vSeguro2] = 0;
								PlayerInfo[playerid][vAAlarma2] = 0;
								PlayerInfo[playerid][v2vw] = 0;
								PlayerInfo[playerid][v2Precio] = 0;
								DestroyVehicle(autoid);
								autos2[playerid] = 0;
                            }
                            if(x == 3) {
								PlayerInfo[playerid][vModelo3] = 0;
								PlayerInfo[playerid][v3Traba] = 0;
								PlayerInfo[playerid][v3Alarma] = 0;
								PlayerInfo[playerid][v3interior] = 0;
								PlayerInfo[playerid][vSeguro3] = 0;
								PlayerInfo[playerid][vAAlarma3] = 0;
								PlayerInfo[playerid][v3vw] = 0;
								PlayerInfo[playerid][v3Precio] = 0;
								DestroyVehicle(autoid);
								autos3[playerid] = 0;
                            }
							if(x == 4) {
								PlayerInfo[playerid][vModelo4] = 0;
								PlayerInfo[playerid][v4Traba] = 0;
								PlayerInfo[playerid][v4Alarma] = 0;
								PlayerInfo[playerid][v4interior] = 0;
								PlayerInfo[playerid][vSeguro4] = 0;
								PlayerInfo[playerid][vAAlarma4] = 0;
								PlayerInfo[playerid][v4vw] = 0;
								PlayerInfo[playerid][v4Precio] = 0;
								DestroyVehicle(autoid);
								autos4[playerid] = 0;
                            }
							return 1;
						}
					}
					case 3:
					{
					    new autoid,x,y,patentex[10],precio,modelo;
					    if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
						{
							if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vMonedaa]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 3;  y = PlayerInfo[playerid][v3Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos4[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v4patente]); precio = PlayerInfo[playerid][v4Precio]; x = 4;  y = PlayerInfo[playerid][v4Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vMonedaa]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vMonedaa]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vMonedaa]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v3Precio]; x = 2;  y = PlayerInfo[playerid][v3Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos3[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v3patente]); precio = PlayerInfo[playerid][v3Precio]; x = 2;  y = PlayerInfo[playerid][v3Monedaa]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] == 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vMonedaa]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] == 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vMonedaa]; }
							else if(PlayerInfo[playerid][vModelo] > 0 && PlayerInfo[playerid][vModelo2] == 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][vpatente]); precio = PlayerInfo[playerid][vPrecio]; x = 1;  y = PlayerInfo[playerid][vMonedaa]; }
							else if(PlayerInfo[playerid][vModelo] == 0 && PlayerInfo[playerid][vModelo2] > 0 && PlayerInfo[playerid][vModelo3] > 0 && PlayerInfo[playerid][vModelo4] > 0) { autoid = autos2[playerid]; format(patentex,sizeof(patentex),"%s",PlayerInfo[playerid][v2patente]); precio = PlayerInfo[playerid][v2Precio]; x = 2;  y = PlayerInfo[playerid][v2Monedaa]; }
							else return 1;
						}
						if(EstaEnAutoVent4(autoid,playerid))
						{
							new query[900];
							modelo = GetVehicleModel(autoid);
							if(y == 0)	{
								format(string, sizeof(string), "Muchas gracias por vendernos tu {DBED16}%s{FFFFFF} ({00CCFF}%s{FFFFFF}). Te pagamos: {00CC00}$%d{FFFFFF}.",NombreAuto[modelo-400], patentex, precio/2);
								SendClientMessage(playerid, -1, string);
								DarDinero(playerid, precio/2);
							}
							else {
								format(string, sizeof(string), "Muchas gracias por vendernos tu {DBED16}%s{FFFFFF} ({00CCFF}%s{FFFFFF}). Te pagamos: {00CC00}%d "SERVER_COIN"{FFFFFF}.",NombreAuto[modelo-400], patentex, precio/2);
								SendClientMessage(playerid, -1, string);
								PlayerInfo[playerid][Moneda] += precio/2;
							}
							format(query, 900, "DELETE FROM `p_vehicles` WHERE `Propietario` = '%d' AND `Slot` = '%d'",PlayerInfo[playerid][pID],x);
							mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

							EspacioBaul[autoid] = 0;
							EspacioBaul2[autoid] = 0;
							EspacioBaul3[autoid] = 0;
							EspacioBaul4[autoid] = 0;
							EspacioBaul5[autoid] = 0;
							EspacioBaul6[autoid] = 0;
							EspacioBaul7[autoid] = 0;
							EspacioBaul8[autoid] = 0;
							EspacioBaul9[autoid] = 0;
							EspacioBaul10[autoid] = 0;
							MotorAuto[autoid] = 0;
							if(x == 1) {
								PlayerInfo[playerid][vModelo] = 0;
								PlayerInfo[playerid][vTraba] = 0;
								PlayerInfo[playerid][vAlarma] = 0;
								PlayerInfo[playerid][vinterior] = 0;
								PlayerInfo[playerid][vSeguro] = 0;
								PlayerInfo[playerid][vAAlarma] = 0;
								PlayerInfo[playerid][vvw] = 0;
								PlayerInfo[playerid][vPrecio] = 0;
								DestroyVehicle(autoid);
								autos[playerid] = 0;
                            }
                            if(x == 2) {
								PlayerInfo[playerid][vModelo2] = 0;
								PlayerInfo[playerid][v2Traba] = 0;
								PlayerInfo[playerid][v2Alarma] = 0;
								PlayerInfo[playerid][v2interior] = 0;
								PlayerInfo[playerid][vSeguro2] = 0;
								PlayerInfo[playerid][vAAlarma2] = 0;
								PlayerInfo[playerid][v2vw] = 0;
								PlayerInfo[playerid][v2Precio] = 0;
								DestroyVehicle(autoid);
								autos2[playerid] = 0;
                            }
                            if(x == 3) {
								PlayerInfo[playerid][vModelo3] = 0;
								PlayerInfo[playerid][v3Traba] = 0;
								PlayerInfo[playerid][v3Alarma] = 0;
								PlayerInfo[playerid][v3interior] = 0;
								PlayerInfo[playerid][vSeguro3] = 0;
								PlayerInfo[playerid][vAAlarma3] = 0;
								PlayerInfo[playerid][v3vw] = 0;
								PlayerInfo[playerid][v3Precio] = 0;
								DestroyVehicle(autoid);
								autos3[playerid] = 0;
                            }
							if(x == 4) {
								PlayerInfo[playerid][vModelo4] = 0;
								PlayerInfo[playerid][v4Traba] = 0;
								PlayerInfo[playerid][v4Alarma] = 0;
								PlayerInfo[playerid][v4interior] = 0;
								PlayerInfo[playerid][vSeguro4] = 0;
								PlayerInfo[playerid][vAAlarma4] = 0;
								PlayerInfo[playerid][v4vw] = 0;
								PlayerInfo[playerid][v4Precio] = 0;
								DestroyVehicle(autoid);
								autos4[playerid] = 0;
                            }
							return 1;
						}
					}
				}
			}
		}
        case VENDERCASA:
        {
            if(response)
            {
                if(PlayerInfo[playerid][CasaID] <= 0 && PlayerInfo[playerid][CasaID2] <= 0) return SendClientMessage(playerid,-1,"No tienes ninguna propiedad para vender.");
                new string2[1000];
                if(PlayerInfo[playerid][CasaID] > 0)
                {
					for(new p; p < MAX_PROPIEDADES; p++)
					{
					    if(PropInfo[p][pID] == PlayerInfo[playerid][CasaID])
					    {
							if(PropInfo[p][pEnVentaPor] == 0) format(string,sizeof(string),"Propiedad ubicada en %s. (Valor de la propiedad: {00CC00}$%d{FFFFFF})\n",PropInfo[p][pLocalizacion],PropInfo[p][pPrecio]);
							else if(PropInfo[p][pEnVentaPor] == 1) format(string,sizeof(string),"Propiedad ubicada en %s. (Valor de la propiedad: {DBED16}%d "SERVER_COIN"{FFFFFF})\n",PropInfo[p][pLocalizacion],PropInfo[p][pPrecio]);
							strcat(string2,string);
                    	}
					 }
     			}
                if(PlayerInfo[playerid][CasaID2] > 0)
                {
					for(new p; p < MAX_PROPIEDADES; p++)
					{
					    if(PropInfo[p][pID] == PlayerInfo[playerid][CasaID2])
					    {
							if(PropInfo[p][pEnVentaPor] == 0) format(string,sizeof(string),"Propiedad ubicada en %s. (Valor de la propiedad: {00CC00}$%d{FFFFFF})",PropInfo[p][pLocalizacion],PropInfo[p][pPrecio]);
							else if(PropInfo[p][pEnVentaPor] == 1) format(string,sizeof(string),"Propiedad ubicada en %s. (Valor de la propiedad: {DBED16}%d "SERVER_COIN"{FFFFFF})",PropInfo[p][pLocalizacion],PropInfo[p][pPrecio]);
							strcat(string2,string);
                    	}
					 }
     			}
                ShowPlayerDialog(playerid,VENDERCASA1,DIALOG_STYLE_LIST,"Selecciona la propiedad que deseas vender",string2,"Vender","Cancelar");
            }
        }
    	case VENDERCASA1:
    	{
    	    if(!response) return 0;
			switch(listitem)
			{
			    case 0:
			    {
					if(PlayerInfo[playerid][CasaID] > 0)
					{
						for(new p; p < MAX_PROPIEDADES; p++)
						{
						    if(PropInfo[p][pID] == PlayerInfo[playerid][CasaID] && PropInfo[p][pPosX] != 0)
						    {
						        if(PropInfo[p][pEnVentaPor] == 0) format(string,sizeof(string),"Vendiste tu propiedad ubicada en {00CC00}%s{FFFFFF} por {00CC00}$%d{FFFFFF}.",PropInfo[p][pLocalizacion],PropInfo[p][pPrecio]/2);
						        else if(PropInfo[p][pEnVentaPor] == 1) format(string,sizeof(string),"Vendiste tu propiedad ubicada en {00CC00}%s{FFFFFF} por {DBED16}%d "SERVER_COIN"{FFFFFF}.",PropInfo[p][pLocalizacion],PropInfo[p][pPrecio]/2);
								if(PropInfo[p][pEnVentaPor] == 0) DarDinero(playerid,PropInfo[p][pPrecio]/2);
								else if(PropInfo[p][pEnVentaPor] == 1) PlayerInfo[playerid][Moneda] += PropInfo[p][pPrecio]/2;
								SendClientMessage(playerid,-1,string);
								PlayerInfo[playerid][CasaID] = 0;
								format(Query,sizeof(Query),"UPDATE `usuarios` SET `CasaID`='0',`Moneda`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][Moneda],PlayerName(playerid));
								mysql_function_query(Conecction,Query,true,"","");
								PropInfo[p][pEnVenta] = 1;
								format(PropInfo[p][pPropietario],40,"Nadie");
								PropInfo[p][pAbierta] = 1;
								PropInfo[p][pRoperoAbierto] = 0;
								PropInfo[p][pIDPropietario] = 0;
								format(Query,sizeof(Query),"UPDATE `propiedades` SET `Propietario`='Nadie',`IDPropietario`='0',`EnVenta`='1' WHERE `ID`='%d'",p);
								mysql_function_query(Conecction,Query,true,"","");
								BorrarLabelCasa(p);
								GuardarPropiedad(p);
								CargarPropiedad(p);
								break;
						    }
						}
					}
					else if(PlayerInfo[playerid][CasaID2] != 0)
					{
						for(new p; p < MAX_PROPIEDADES; p++)
						{
						    if(PropInfo[p][pID] == PlayerInfo[playerid][CasaID2])
						    {
						        if(PropInfo[p][pEnVentaPor] == 0) format(string,sizeof(string),"Vendiste tu propiedad ubicada en {00CC00}%s{FFFFFF} por {00CC00}$%d{FFFFFF}.",PropInfo[p][pLocalizacion],PropInfo[p][pPrecio]/2);
						        else if(PropInfo[p][pEnVentaPor] == 1) format(string,sizeof(string),"Vendiste tu propiedad ubicada en {00CC00}%s{FFFFFF} por {DBED16}%d "SERVER_COIN"{FFFFFF}.",PropInfo[p][pLocalizacion],PropInfo[p][pPrecio]/2);
								if(PropInfo[p][pEnVentaPor] == 0) DarDinero(playerid,PropInfo[p][pPrecio]/2);
								else if(PropInfo[p][pEnVentaPor] == 1) PlayerInfo[playerid][Moneda] += PropInfo[p][pPrecio]/2;
								SendClientMessage(playerid,-1,string);
								PlayerInfo[playerid][CasaID2] = 0;
								format(Query,sizeof(Query),"UPDATE `usuarios` SET `CasaID2`='0',`Moneda`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][Moneda],PlayerName(playerid));
								mysql_function_query(Conecction,Query,true,"","");
								PropInfo[p][pEnVenta] = 1;
								format(PropInfo[p][pPropietario],40,"Nadie");
								PropInfo[p][pAbierta] = 1;
								PropInfo[p][pRoperoAbierto] = 0;
								PropInfo[p][pIDPropietario] = 0;
								format(Query,sizeof(Query),"UPDATE `propiedades` SET `Propietario`='Nadie',`IDPropietario`='0',`EnVenta`='1' WHERE `ID`='%d'",p);
								mysql_function_query(Conecction,Query,true,"","");
								BorrarLabelCasa(p);
								GuardarPropiedad(p);
								CargarPropiedad(p);
								break;
						    }
						}
					}
			    }
			    case 1:
			    {
					if(PlayerInfo[playerid][CasaID2] > 0)
					{
						for(new p; p < MAX_PROPIEDADES; p++)
						{
						    if(PropInfo[p][pID] == PlayerInfo[playerid][CasaID2])
						    {
						        if(PropInfo[p][pEnVentaPor] == 0) format(string,sizeof(string),"Vendiste tu propiedad ubicada en {00CC00}%s{FFFFFF} por {00CC00}$%d{FFFFFF}.",PropInfo[p][pLocalizacion],PropInfo[p][pPrecio]/2);
						        else if(PropInfo[p][pEnVentaPor] == 1) format(string,sizeof(string),"Vendiste tu propiedad ubicada en {00CC00}%s{FFFFFF} por {DBED16}%d "SERVER_COIN"{FFFFFF}.",PropInfo[p][pLocalizacion],PropInfo[p][pPrecio]/2);
								if(PropInfo[p][pEnVentaPor] == 0) DarDinero(playerid,PropInfo[p][pPrecio]/2);
								else if(PropInfo[p][pEnVentaPor] == 1) PlayerInfo[playerid][Moneda] += PropInfo[p][pPrecio]/2;
								SendClientMessage(playerid,-1,string);
								PlayerInfo[playerid][CasaID2] = 0;
								format(Query,sizeof(Query),"UPDATE `usuarios` SET `CasaID2`='0',`Moneda`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][Moneda],PlayerName(playerid));
								mysql_function_query(Conecction,Query,true,"","");
								PropInfo[p][pEnVenta] = 1;
								format(PropInfo[p][pPropietario],40,"Nadie");
								PropInfo[p][pAbierta] = 1;
								PropInfo[p][pRoperoAbierto] = 0;
								PropInfo[p][pIDPropietario] = 0;
								format(Query,sizeof(Query),"UPDATE `propiedades` SET `Propietario`='Nadie',`IDPropietario`='0',`EnVenta`='1' WHERE `ID`='%d'",p);
								mysql_function_query(Conecction,Query,true,"","");
								BorrarLabelCasa(p);
								GuardarPropiedad(p);
								CargarPropiedad(p);
								break;
						    }
						}
					}
					else if(PlayerInfo[playerid][CasaID] > 0)
					{
						for(new p; p < MAX_PROPIEDADES; p++)
						{
						    if(PropInfo[p][pID] == PlayerInfo[playerid][CasaID])
						    {
						        if(PropInfo[p][pEnVentaPor] == 0) format(string,sizeof(string),"Vendiste tu propiedad ubicada en {00CC00}%s{FFFFFF} por {00CC00}$%d{FFFFFF}.",PropInfo[p][pLocalizacion],PropInfo[p][pPrecio]/2);
						        else if(PropInfo[p][pEnVentaPor] == 1) format(string,sizeof(string),"Vendiste tu propiedad ubicada en {00CC00}%s{FFFFFF} por {DBED16}%d "SERVER_COIN"{FFFFFF}.",PropInfo[p][pLocalizacion],PropInfo[p][pPrecio]/2);
								if(PropInfo[p][pEnVentaPor] == 0) DarDinero(playerid,PropInfo[p][pPrecio]/2);
								else if(PropInfo[p][pEnVentaPor] == 1) PlayerInfo[playerid][Moneda] += PropInfo[p][pPrecio]/2;
								SendClientMessage(playerid,-1,string);
								PlayerInfo[playerid][CasaID] = 0;
								format(Query,sizeof(Query),"UPDATE `usuarios` SET `CasaID`='0',`Moneda`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][Moneda],PlayerName(playerid));
								mysql_function_query(Conecction,Query,true,"","");
								PropInfo[p][pEnVenta] = 1;
								format(PropInfo[p][pPropietario],40,"Nadie");
								PropInfo[p][pAbierta] = 1;
								PropInfo[p][pRoperoAbierto] = 0;
								PropInfo[p][pIDPropietario] = 0;
								format(Query,sizeof(Query),"UPDATE `propiedades` SET `Propietario`='Nadie',`IDPropietario`='0',`EnVenta`='1' WHERE `ID`='%d'",p);
								mysql_function_query(Conecction,Query,true,"","");
								BorrarLabelCasa(p);
								GuardarPropiedad(p);
								CargarPropiedad(p);
								break;
						    }
						}
					}
			    }
			}
    	}
		case SEXO:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						PlayerInfo[playerid][jSexo] = 1;
						PlayerInfo[playerid][pSed] = 0;
						PlayerInfo[playerid][pHambre] = 0;
						SetPlayerName(playerid, PlayerInfo[playerid][NombreTemporal]);
						format(Query, sizeof(Query), "UPDATE `usuarios` SET `Sexo`= '1' WHERE `Username`='%s'",PlayerName(playerid));
						mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 7, playerid);
					}
					case 1:
					{
						PlayerInfo[playerid][jSexo] = 2;
						PlayerInfo[playerid][pSed] = 0;
						PlayerInfo[playerid][pHambre] = 0;
						SetPlayerName(playerid, PlayerInfo[playerid][NombreTemporal]);
						format(Query, sizeof(Query), "UPDATE `usuarios` SET `Sexo`= '2' WHERE `Username`='%s'",PlayerName(playerid));
						mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 7, playerid);
					}
				}
			}
			else Kick(playerid);
		}
        case TRABAJO_MEDICO:
        {
			if(response)
			{
				PlayerInfo[playerid][pTrabajo] = T_Medico;
				PlayerInfo[playerid][jDinero] -= 4000;
				SendClientMessage(playerid, COLOR_WHITE, "¡Felicitaciones! Conseguiste un nuevo trabajo. Escribe {DBED16}/ayuda trabajos{FFFFFF} para ver tus nuevos comandos.");
			}
    	}
        case TRABAJO_MEDICO2:
        {
			if(response)
			{
				PlayerInfo[playerid][pTrabajo2] = 1;
				PlayerInfo[playerid][jDinero] -= 4000;
				SendClientMessage(playerid, COLOR_WHITE, "¡Felicitaciones! Conseguiste un nuevo trabajo. Escribe {DBED16}/ayuda trabajos{FFFFFF} para ver tus nuevos comandos.");
    		}
    	}
		case TRABAJOS:
		{
			if(response) {
				switch(listitem) {
					case 0: {
						new mensaje[250];
						mensaje="Hay muchos trabajos disponibles para que te ganes la vida.\nElige el que más te guste y comienza a trabajar.\n\nPara tener dos trabajos a la vez, necesitas cuenta VIP.\n( Mas información en la web: "WEB_ROL")";
						ShowPlayerDialog(playerid, INFOMEDICO, DIALOG_STYLE_MSGBOX, "Ayuda sobre los trabajos", mensaje, "Aceptar","");
						return 1;
					}
					case 1: {
						new Byte[1200];
						strcat(Byte,"{FFFFFF}El {00CC00}trabajo de médico{FFFFFF} se consigue en el {00cbff}Hospital General de Los Santos, puedes encontrarlo en tu GPS.");
						strcat(Byte,"\nPara trabajar de médico necesitas tener como mínimo {EB0000}nivel 2{FFFFFF}.\n\nUna vez tengas el trabajo, necesitas ponerte el uniforme para comenzar a trabajar.");
						strcat(Byte,"\n\n{FFFFFF}El uniforme te lo puedes poner dentro del hospital o en la parte trasera de una ambulancia.\nusando el comando {DBED16}/medico\n\n");
						strcat(Byte,"{00CC00}Médico de calle{FFFFFF}:\nCuando alguien solicite asistencia médica se marcará en el mapa un icono de color verde, al que tendrás\nque dirigirte para salvarle la vida.");
						strcat(Byte,"\n\n{FFFFFF}Al estar junto a un paciente agonizando tendrás que {DBED16}/reanimar {FFFFFF}[{DBED16}ID o Nombre{FFFFFF}] y luego dentro de la\nambulancia deberás {DBED16}/subir paciente{FFFFFF}.");
						strcat(Byte,"\n\n{FFFFFF}Finalmente tienes que llevarlo al hospital para salvar su vida y cobrar tu paga ({00CC00}$800{FFFFFF}).");
						strcat(Byte,"\n\n{FFFFFF}En algunos casos podrás reanimar al paciente en el mismo lugar que lo atiendes, todo\ndepende de tu nivel de habilidad como médico.");
						strcat(Byte,"\n\n{00CC00}Médico de hospital{FFFFFF}:\n\nPuedes trabajar dentro de cualquier hospital, en este caso\ntienes que usar {DBED16}/revisar paciente {FFFFFF}[{DBED16}ID o Nombre{FFFFFF}] cuando se te notifique.");
						strcat(Byte,"\n\n{FFFFFF}A continuación deberás ir a buscar en el botiquín lo que creas necesario para el tratamiento.\n\nFinalmente tendrás que {DBED16}/atender paciente {FFFFFF}[{DBED16}ID o Nombre{FFFFFF}] para terminar.");
						ShowPlayerDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,"{FFFFFF}Ayuda sobre el trabajo de Médico", Byte, "Aceptar", "");
						return 1;
					}
					case 2: {
					    if(PlayerInfo[playerid][pTrabajo] != T_Taxista && PlayerInfo[playerid][pTrabajo2] != T_Taxista) {
							new Byte[500];
							strcat(Byte,"Puedes conseguir este trabajo dentrode Unity Station.");
							strcat(Byte,"\n");
							strcat(Byte,"Esta profesión no cuenta con niveles. Ganarás según el precio que cobres.");
							ShowPlayerDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,"{FFFFFF}Ayuda sobre el trabajo de Taxista", Byte, "Aceptar", "");
							return 1;
						}
						new Byte[500];
						strcat(Byte,"{FFFFFF}Para ponerle un costo de ficha al taxi usa {DBED16}/ficha precio");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Por ejemplo: {DBED16}/ficha 20");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Cuando tu cliente no tenga dinero, se bajará del taxi.");
						ShowPlayerDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,"{FFFFFF}Ayuda sobre el trabajo de Taxista", Byte, "Aceptar", "");
					}
					case 3: {
					    if(PlayerInfo[playerid][pTrabajo] != T_Guardaespaldas && PlayerInfo[playerid][pTrabajo2] != T_Guardaespaldas) {
							new Byte[1000];
							strcat(Byte,"Para conseguir este trabajo en Ganton GYM. Esta profesión no cuenta con niveles.");
							strcat(Byte,"\n");
							strcat(Byte,"Un guardaespaldas puede darle el 50% de blindaje a su protegido.");
							strcat(Byte,"\n\n");
							strcat(Byte,"Los guardaespaldas están normalmente armados y tienen experiencia en el combate");
							strcat(Byte,"\n");
							strcat(Byte,"cuerpo a cuerpo y desarmado, conducción y primeros auxilios.");
							strcat(Byte,"\n");
							strcat(Byte,"Sin embargo, la habilidad más importante para un guardaespaldas es evaluar una situación de");
							strcat(Byte,"\n");
							strcat(Byte,"peligo para su protegido y tratar de minimizar los daños.");
							strcat(Byte,"\n\n");
							strcat(Byte,"Ganarás según el precio que cobres.");
							ShowPlayerDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,"{FFFFFF}Ayuda sobre el trabajo de Guardaespaldas", Byte, "Aceptar", "");
							return 1;
						}
						new Byte[500];
						strcat(Byte,"{FFFFFF}Para cubrir a alguien usa {DBED16}/cubrir [id o nombre] [precio]");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}El precio del chaleco tiene que ser entre $400 y $1000.");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}No puedes ofrecer un chaleco en combate, si tu protegido lo está tampoco podrá recibirlo.");
						strcat(Byte,"\n");
						ShowPlayerDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,"{FFFFFF}Ayuda sobre el trabajo de Guardaespaldas", Byte, "Aceptar", "");
					}
					case 4: {
					    if(PlayerInfo[playerid][pTrabajo] != T_Camionero && PlayerInfo[playerid][pTrabajo2] != T_Camionero)
						{
							new Byte[1000];
							strcat(Byte,"{FFFFFF}Este trabajo se obtiene en los muelles de San Fierro");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}Comienzas en nivel 1, ganando {66B3FF}$1250 {FFFFFF}por entrega realizada.");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}El trabajo es legal, siempre y cuando lleves productos legales.");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}A medida que aumentes tu nivel como camionero, el pago será mayor, y los bonus por transportes ilegales serán mejores.");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}Por ejmeplo: Nivel 1 de camionero = 2 piezas de armas, Nivel 2 = 5 piezas de armas, etc. También aumenta la cantidad de drogas y medicamentos.");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}En caso de perder el punto de entrega, usa {DBED16}/cp camionero");
							ShowPlayerDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,"{FFFFFF}Ayuda sobre el trabajo de Camionero", Byte, "Aceptar", "");
							return 1;
						}
						new Byte[500];
						strcat(Byte,"{FFFFFF}Cuando te hayas subido a un camión, puedes cargarlo usando {DBED16}/cargar camion");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Selecciona lo que llevarás y se te marcará en el mapa el punto donde se realizará la entrega, luego trae el camión al muelle.");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Los camiones de color blanco son para las cuentas normales y los de color negro para usuarios con VIP2.");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}En caso de perder el punto de entrega, usa {DBED16}/cp camionero");
						strcat(Byte,"\n");
						strcat(Byte,"\n");
						strcat(Byte,"{DBED16}No intentes usar cheats para realizar la entrega más rápido porque te puede detectar el anticheat.");
						ShowPlayerDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,"{FFFFFF}Ayuda sobre el trabajo de Camionero", Byte, "Aceptar", "");
					}
					case 5: {
					    if(PlayerInfo[playerid][pDuty] == 0 && PlayerInfo[playerid][pFaccion] != 1)
						{
							new Byte[600];
				    		strcat(Byte, "{FFFFFF}La {3399FF}policía{FFFFFF} es manejada por usuarios comunes, por lo que para entrar tendrás que cumplir los requisitos que ellos te pidan.\nPuedes revisar nuestro foro {DBED16}http://"WEB_ROL"/foro{FFFFFF} para enterarte de cuales son.\n\nGeneralmente se requiere tener un nivel no tan bajo y llevar una buena interpretación de tu personaje. Si eres nuevo\ny no sabes bien de qué se trata, deja este trabajo para más adelante.");
							ShowPlayerDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,"{FFFFFF}Ayuda sobre el trabajo de Policía", Byte, "Aceptar", "");
							return 1;
						}
						new Byte[1000];
						strcat(Byte,"{FFFFFF}Los jugadores que tengan cargos(estrellas) estarán identificados en el radar de distintos colores");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Desde el amarillo hasta el rojo en el radar.");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Para esposar a un jugador con cargos usa {DBED16}/esposar [id o nombre]");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Cuando ya esté esposado o abatido, necesitas arrestarlo para derivarlo a la comisaría usando {DBED16}/arrestar [id o nombre]");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Para poder entregar al detenido, debes dirigirte a los garajes internos de las comisarías, estando dentro");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}puedes optar por quitarle cargos y luego entregarlo usando {DBED16}/entregar [id o nombre]");
						strcat(Byte,"\n");
						ShowPlayerDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,"{FFFFFF}Ayuda sobre el trabajo de Policía", Byte, "Aceptar", "");

					}
					case 6: {
					    if(PlayerInfo[playerid][pTrabajo] != T_Armero && PlayerInfo[playerid][pTrabajo2] != T_Armero)
						{
							new Byte[1000];
							strcat(Byte,"{FFFFFF}Para obtener este trabajo necesitas como mínimo nivel 3.");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}En la fábrica de armas ilegal de Los Santos dan el trabajo.");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}En caso de no encontrarla llama a un taxi {DBED16}/servicio taxi");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}Con este empleo podrás fabricar una gran variedad de armas.");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}Igualmente todas aquellas personas que no son armeros, pueden vender sus armas con {FFFFFF}/vender {FFFFFF}[{DBED16}nombre-del-arma{FFFFFF}][{DBED16}id/nombre{FFFFFF}][{DBED16}precio{FFFFFF}].");
							strcat(Byte,"\n");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}Listado de armas:");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}Pistola 9mm (9mm)");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}Pistola 9mm con slenciador (9mm-silenciada)");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}Escopeta normal (escopeta)");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}Desert Eagle (desert-eagle)");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}MP5");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}AK-47 (ak47)");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}M4");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}Rifle");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}Escopeta de combate (escopeta-de-combate)");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}Granada");
							ShowPlayerDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,"{FFFFFF}Ayuda sobre el trabajo de Fabricante de armas", Byte, "Aceptar", "");
							return 1;
						}
						new Byte[1000];
						strcat(Byte,"{FFFFFF}Para crear armas usa {DBED16}/crear nombre-del-arma");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Cada arma necesita un nivel de habilidad y una cantidad de piezas para poder crearla.");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Listado de armas:");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Nivel 1:");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Pistola 9mm (9mm) (10 piezas)");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Pistola 9mm con slenciador (9mm-silenciada) (12 piezas)");
						strcat(Byte,"\n");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Nivel 2:");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Escopeta normal (escopeta) (20 piezas)");
						strcat(Byte,"\n");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Nivel 3:");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Desert Eagle (desert-eagle) (36 piezas)");
						strcat(Byte,"\n");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Nivel 4:");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}MP5 (58 piezas)");
						strcat(Byte,"\n");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Nivel 5:");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}AK-47 (ak47) (82 piezas)");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}M4 (96 piezas");
						strcat(Byte,"\n\n");
						strcat(Byte,"{FFFFFF}Nivel 6:");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Rifle (52 piezas)");
						strcat(Byte,"\n\n");
						strcat(Byte,"{FFFFFF}Nivel 7:");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Escopeta de combate (escopeta-de-combate) (136 piezas)");
						strcat(Byte,"\n\n");
						strcat(Byte,"{FFFFFF}Nivel 8:");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Granada (156 piezas)");
						ShowPlayerDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,"{FFFFFF}Ayuda sobre el trabajo de Fabricante de armas", Byte, "Aceptar", "");
					}
					case 7: {
					    if(PlayerInfo[playerid][pTrabajo] != T_Mecanico && PlayerInfo[playerid][pTrabajo2] != T_Mecanico) {
							new Byte[256];
							strcat(Byte,"{FFFFFF}Para obtener el trabajo de mecánico, tienes que ir al taller que se encuentra en Blueberry.");
							strcat(Byte,"\n{FFFFFF}Este trabajo cuenta con nivel y habilidad.");
							ShowPlayerDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,"{FFFFFF}Ayuda sobre el trabajo de Mecánico", Byte, "Aceptar", "");
							return 1;
						}
						new Byte[1000];
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Para ponerte en servicio de mecánico debes acercarte a la caseta y usa {DBED16}/mecanico");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Cada vehículo a reparar necesita distintas cantidades de repuestos.");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Los repuestos se compran cerca del taller y tienen un costo de {66B3FF}$100 {FFFFFF}cada uno.");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Para saber cuantos necesita cada uno usa {DBED16}/revisar");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Siempre y cuando estés cerca de un cliente que llamó al servicio y que tenga el capó abierto.");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Para ofrecer reparación a alguien usa {DBED16}/reparar [precio]");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Los clientes que necesiten mecánicos se marcará en el mapa de color {00CCFF}celeste{FFFFFF}.");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}Por cada nivel que aumentes repararás más rápido.");
						strcat(Byte,"\n");
						ShowPlayerDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,"{FFFFFF}Ayuda sobre el trabajo de Mecánico", Byte, "Aceptar", "");
					}
     				case 8:     //Cosechador
					{
			    		new dialog[1000];
			    		strcat(dialog, "{FFFFFF}El trabajo de granjero no requiere un nivel, pero tampoco se aumenta la habilidad trabajando.\n");
			    		strcat(dialog, "Este trabajo no ocupa lugar como trabajo primario ni secundario.\n");
			    		strcat(dialog, "En caso de no encontrarla llama a el {DBED16}/servicio taxi{FFFFFF}\n");
			    		strcat(dialog, "Para trabajar de cosechador, necesitas ir a alguna de las granjas de Los Santos.\n\n");
						strcat(dialog, "Las ganancias en dinero es similar a la de camionero.\n");
						strcat(dialog, "A veces también te dan un premio extra de regalo, los cuales pueden ser:\n\n");
						strcat(dialog, "{DBED16}Granja de Blueberry:{FFFFFF}\n");
			    		strcat(dialog, "Medicamentos (30% probabilidad de conseguirlo)\n");
			    		strcat(dialog, "Crack (10% probabilidad de conseguirlo)\n");
			    		strcat(dialog, "Ramo de flores (10% probabilidad de conseguirlo)\n");
			    		strcat(dialog, "Pala (10% probabilidad de conseguirla)\n\n\n");
			    		strcat(dialog, "{DBED16}Granja de Flint Range:{FFFFFF}\n");
			    		strcat(dialog, "Medicamentos (30% probabilidad de conseguirlo)\n");
			    		strcat(dialog, "Crack (13% probabilidad de conseguirlo)\n");
			    		strcat(dialog, "Ramo de flores (10% probabilidad de conseguirlo)\n");
			    		strcat(dialog, "Cuchillo (10% probabilidad de conseguirlo)\n");
						ShowPlayerDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,"{FFFFFF}Ayuda sobre el trabajo de Cosechador", dialog, "Aceptar", "");
					}
					case 9:     //Basurero
					{
					    if(PlayerInfo[playerid][pTrabajo] != T_Mecanico && PlayerInfo[playerid][pTrabajo2] != T_Mecanico)
						{
							new Byte[1000];
							strcat(Byte,"{FFFFFF}El trabajo de basurero no requiere de un nivel mínimo.");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}Este trabajo se consigue en el basural que se encuentra entre Los Santos y San Fierro.");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}Para trabajar de basurero se necesitan dos personas, una que maneje el camión y otra que recolecte la basura.");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}Los pagos se incrementan a medida que suben de nivel. También el tiempo de recolección disminuye al subir de nivel.");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}En las bolsas de basure se puede llegar a encontrar una gran variedad de cosas.");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}Para comenzar a trabajar necesitan ponerse la ropa de basurero (cuentas VIP no necesitan).");
							strcat(Byte,"\n");
							ShowPlayerDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,"{FFFFFF}Ayuda sobre el trabajo de Basurero", Byte, "Aceptar", "");
							return 1;
						}
						new Byte[700];
			    		strcat(Byte, "{FFFFFF}El trabajo de transportista requiere nivel 3 de camionero o más.\n");
			    		strcat(Byte, "Además para trabajar de transportista necesitas un camión DFT-30, no necesariamente tiene que ser tuyo.\n");
			    		strcat(Byte, "Este trabajo se consigue en Las Venturas y lo puedes encontrar en cualquier mapa o GPS.\n");
			    		strcat(Byte, "A medida que aumentes de nivel se agregarán nuevos recorridos con nuevas cargas y el pago aumentará {00CC00}$150{FFFFFF} cada nivel.\n");
						ShowPlayerDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,"{FFFFFF}Ayuda sobre el trabajo de Transportista", Byte, "Aceptar", "");
					}
					case 10:    //Transportista
					{
					    if(PlayerInfo[playerid][pTrabajo] != T_Transportista && PlayerInfo[playerid][pTrabajo2] != T_Transportista)
						{
						    new Byte[1000];
							strcat(Byte,"{FFFFFF}El trabajo de transportista requiere nivel 3 de camionero o más.");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}Además de trabajar de transportista necesitas un camión DFT-30, no necesariamente tiene que ser tuyo.");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}Este trabajo se consigue en Las Venturas y lo puedes encontrar en cualquier mapa o GPS.");
							strcat(Byte,"\n");
							strcat(Byte,"{FFFFFF}A medida que aumentes de nivel se agregarán nuevos recorridos con nuevas cargas y el pago aumentará $150 cada nivel.");
							strcat(Byte,"\n");
							ShowPlayerDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,"{FFFFFF}Ayuda sobre el trabajo de Transportista", Byte, "Aceptar", "");
							return 1;
						}
			    		new Byte[700];
			    		strcat(Byte, "{FFFFFF}El trabajo de transportista requiere nivel 3 de camionero o más.\n");
			    		strcat(Byte, "Además para trabajar de transportista necesitas un camión DFT-30, no necesariamente tiene que ser tuyo.\n");
			    		strcat(Byte, "Este trabajo se consigue en Las Venturas y lo puedes encontrar en cualquier mapa o GPS.\n");
			    		strcat(Byte, "A medida que aumentes de nivel se agregarán nuevos recorridos con nuevas cargas y el pago aumentará {00CC00}$150{FFFFFF} cada nivel.\n");
						ShowPlayerDialog(playerid,INFOLADRON, DIALOG_STYLE_MSGBOX,"{FFFFFF}Ayuda sobre el trabajo de Transportista", Byte, "Aceptar", "");
					}
					case 11:    //Ladrón
					{
			    		new Byte[700];
			    		strcat(Byte, "{FFFFFF}El ladrón puede robar bienes de diferentes propiedades distribuidas por todo San Andreas.\n\n");
			    		strcat(Byte, "Para forzar cerraduras necesitas como mínimo nivel 6 o una cuenta VIP y para robar, nivel 3 o cuenta VIP.\n");
                		strcat(Byte, "Para el trabajo de ladrón se usan diferentes herramientas según tu nivel de habilidad.\n");
                		strcat(Byte, "A medida que aumentes de nivel, podrás usar otras herramientas para forzar las puertas más rápido.\n");
						ShowPlayerDialog(playerid, INFOLADRON, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ayuda sobre el trabajo de Ladrón", Byte, "Aceptar", "");
					}
					case 12:  // Minero
					{
					    new Byte[700];
					    strcat(Byte, "{FFFFFF}El trabajo de {DBED16}minero{FFFFFF} se consigue en una oficina ubicada en {00CCFF}Bone Country{FFFFFF}, Las Venturas, puedes encontrarla en tu GPS.\n\n");
                		strcat(Byte, "Una vez que consigas el trabajo, tendrás que dirigirte a la mina que se encuentra al noroeste de la oficina.\n");
						strcat(Byte, "Antes de entrar a la mina tendrás que ponerte el uniforme, lo puedes encontrar cerca de la entrada de la mina.\n\n");
						strcat(Byte, "Cuando tengas el uniforme, entra a la mina y comienza a picar la {6ebd9e}mina de hierro{FFFFFF}, luego lleva la roca a la procesadora\nque se encuentra fuera de la mina para recibir tu pago.\n");
                        strcat(Byte, "A medida que subes de nivel podrás ir picando diferentes rocas.");
						ShowPlayerDialog(playerid, INFOLADRON, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ayuda sobre el trabajo de Minero", string, "Aceptar","");
						return 1;
					}
					case 13:  // Pescador
					{
						new string2[900];
						string2="{FFFFFF}El trabajo de pescador se consigue en {00CCFF}Ocean Docks{FFFFFF}, puedes encontrarlo fácilmente en el GPS.\nPara trabajar de pescador necesitas tener como minimo nivel 2.\nUna vez que tengas el trabajo, necesitas pedir un permiso de pesca gratuito, utilizando el comando {DBED16}/permiso pesca\n\n{FFFFFF}Este trabajo tiene 3 niveles y en cada nivel se habilitan diferentes zonas de pesca.\n\n{00CC00}Nivel 1{FFFFFF}:\nPesca de tortugas, con un pago promedio de {00CC00}$1400\n\nNivel 2{FFFFFF}:\nPesca de delfines, con un pago promedio de {00CC00}$2260\n\nNivel 3{FFFFFF}:\nPesca de tiburones, con un pago promedio de {00CC00}$3650\n\n{FF3300}*{FFFFFF} Los pagos dependen del tipo de animal pescado y del peso del mismo.\n\nLos barcos pesqueros se consiguen en los mueles, pero también podrás trabajar con tu propio barco.";
						ShowPlayerDialog(playerid, INFOLADRON, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ayuda sobre el trabajo de Pescador", string2, "Aceptar","");
						return 1;
					}
					case 14:  // Prostitucion
					{
						new Byte[800];
						strcat(Byte,"{FFFFFF}El trabajo de prostitución se consigue en {00CCFF}Las Venturas{FFFFFF}, puedes encontrarlo fácilmente en el {00CC00}GPS{FFFFFF}.");
						strcat(Byte,"\n\n");
						strcat(Byte,"{FFFFFF}Una vez que tengas el trabajo, puedes comenzar a cobrar usando {DBED16}/ofrecer sexo {FFFFFF}[{DBED16}ID{FFFFFF}-o-{DBED16}Nombre{FFFFFF}] [{DBED16}Precio{FFFFFF}].");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}No necesitas el trabajo para ofrecerlo, pero sí para cobrar por eso.");
						strcat(Byte,"\n\n");
						strcat(Byte,"{00CC00}Quienes reciban sexo oral de prostitutas profesionales obtendrán{FFFFFF}:");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}- Blindaje {00CCFF}+20%{FFFFFF} hasta llegar como máximo a {00CCFF}80%{FFFFFF}.");
						strcat(Byte,"\n\n");
						strcat(Byte,"{00CC00}Quienes reciban sexo oral de personas sin esa ocupación obtendrán{FFFFFF}:");
						strcat(Byte,"\n");
						strcat(Byte,"{FFFFFF}- Blindaje {00CCFF}+10%{FFFFFF} hasta llegar como máximo a {00CCFF}50%{FFFFFF}.");
						strcat(Byte,"\n\n");
						strcat(Byte,"{FFFFFF}Para ofrecer {EB0000}sexo oral {FFFFFF}tienes que estar dentro de un vehículo.");
						ShowPlayerDialog(playerid, INFOLADRON, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ayuda sobre el trabajo de Prostitución", Byte, "Aceptar","");
						return 1;
					}
				}
			}
		}
		case CAMIOND:
		{
		    new vehicleid = GetPlayerVehicleID(playerid);
			if(!response) { TogglePlayerControllable(playerid, 1); SetPVarInt(playerid, "IsFrozen", 1);}
			{
				switch(listitem)
				{
					case 0:
					{
						new punto = random(2);
						switch (punto)
						{
							case 0:
							{
							    SetPlayerProgressBarValue(playerid,Progressbar[playerid][Camionero], 0);
							    ActualizarPuerta(vehicleid, 2);
							    ActualizarPuerta(vehicleid, 3);
								SetPVarInt(playerid, "Camionero", 0);
								Cargas[playerid] = SetTimerEx("Legal1",1000,true,"d",playerid);
								GameTextForPlayer(playerid, "~w~Cargando camion...", 10000, 5);
								ShowPlayerProgressBar(playerid, Progressbar[playerid][Camionero]);
								return 1;
							}
							case 1:
							{
							    SetPlayerProgressBarValue(playerid,Progressbar[playerid][Camionero], 0);
							    ActualizarPuerta(vehicleid, 2);
							    ActualizarPuerta(vehicleid, 3);
								SetPVarInt(playerid, "Camionero", 0);
								Cargas[playerid] = SetTimerEx("Legal2",1000,true,"d",playerid);
								GameTextForPlayer(playerid, "~w~Cargando camion...", 10000, 5);
								ShowPlayerProgressBar(playerid, Progressbar[playerid][Camionero]);
								return 1;
							}
						}
						return 1;
					}
					case 1:
					{
						new punto = random(3);
						switch (punto)
						{
							case 0:
							{
							    SetPlayerProgressBarValue(playerid,Progressbar[playerid][Camionero], 0);
							    ActualizarPuerta(vehicleid, 2);
							    ActualizarPuerta(vehicleid, 3);
								SetPVarInt(playerid, "Camionero", 0);
								Cargas[playerid] = SetTimerEx("Legal3",1000,true,"d",playerid);
								GameTextForPlayer(playerid, "~w~Cargando camion...", 10000, 5);
								ShowPlayerProgressBar(playerid, Progressbar[playerid][Camionero]);
								return 1;
							}
							case 1:
							{
							    SetPlayerProgressBarValue(playerid,Progressbar[playerid][Camionero], 0);
							    ActualizarPuerta(vehicleid, 2);
							    ActualizarPuerta(vehicleid, 3);
								SetPVarInt(playerid, "Camionero", 0);
								Cargas[playerid] = SetTimerEx("Legal4",1000,true,"d",playerid);
								GameTextForPlayer(playerid, "~w~Cargando camion...", 10000, 5);
								ShowPlayerProgressBar(playerid, Progressbar[playerid][Camionero]);
								return 1;
							}
							case 2:
							{
							    SetPlayerProgressBarValue(playerid,Progressbar[playerid][Camionero], 0);
							    ActualizarPuerta(vehicleid, 2);
							    ActualizarPuerta(vehicleid, 3);
								SetPVarInt(playerid, "Camionero", 0);
								Cargas[playerid] = SetTimerEx("Legal5",1000,true,"d",playerid);
								GameTextForPlayer(playerid, "~w~Cargando camion...", 10000, 5);
								ShowPlayerProgressBar(playerid, Progressbar[playerid][Camionero]);
								return 1;
							}
						}
						return 1;
					}
					case 2:
					{
						new punto = random(2);
						switch (punto)
						{

							case 0:
							{
							    SetPlayerProgressBarValue(playerid,Progressbar[playerid][Camionero], 0);
							    ActualizarPuerta(vehicleid, 2);
							    ActualizarPuerta(vehicleid, 3);
								SetPVarInt(playerid, "Camionero", 0);
								Cargas[playerid] = SetTimerEx("Ilegal1",1000,true,"d",playerid);
								GameTextForPlayer(playerid, "~w~Cargando camion...", 10000, 5);
								ShowPlayerProgressBar(playerid, Progressbar[playerid][Camionero]);
								return 1;
							}
							case 1:
							{
							    SetPlayerProgressBarValue(playerid,Progressbar[playerid][Camionero], 0);
							    ActualizarPuerta(vehicleid, 2);
							    ActualizarPuerta(vehicleid, 3);
								SetPVarInt(playerid, "Camionero", 0);
								Cargas[playerid] = SetTimerEx("Ilegal2",1000,true,"d",playerid);
								GameTextForPlayer(playerid, "~w~Cargando camion...", 10000, 5);
								ShowPlayerProgressBar(playerid, Progressbar[playerid][Camionero]);
								return 1;
							}
						}
						return 1;
					}
					case 3:
					{
						new punto = random(2);
						switch (punto)
						{
							case 0:
							{
							    SetPlayerProgressBarValue(playerid,Progressbar[playerid][Camionero], 0);
							    ActualizarPuerta(vehicleid, 2);
							    ActualizarPuerta(vehicleid, 3);
								SetPVarInt(playerid, "Camionero", 0);
								Cargas[playerid] = SetTimerEx("Ilegal4",1000,true,"d",playerid);
								GameTextForPlayer(playerid, "~w~Cargando camion...", 10000, 5);
								ShowPlayerProgressBar(playerid, Progressbar[playerid][Camionero]);
								return 1;
							}
							case 1:
							{
							    SetPlayerProgressBarValue(playerid,Progressbar[playerid][Camionero], 0);
							    ActualizarPuerta(vehicleid, 2);
							    ActualizarPuerta(vehicleid, 3);
								SetPVarInt(playerid, "Camionero", 0);
								Cargas[playerid] = SetTimerEx("Ilegal5",1000,true,"d",playerid);
								GameTextForPlayer(playerid, "~w~Cargando camion...", 10000, 5);
								ShowPlayerProgressBar(playerid, Progressbar[playerid][Camionero]);
								return 1;
							}
						}
					}
				}
			}
		}
		case COMPRARCAMELLO:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: ShowPlayerDialog(playerid, COMPRARCAMELLO2, DIALOG_STYLE_LIST, "Comprar", "Marihuana\nMedicamentos\nCrack", "Aceptar", "Cancelar");
					case 1:	ShowPlayerDialog(playerid, VENDERCAMELLO, DIALOG_STYLE_LIST, "Vender", "Marihuana\nMedicamentos\nCrack", "Aceptar", "Cancelar");
				}
			}
			return 1;
		}
		case VENDERMARIHUANA:
		{
			if(response)
			{
                if(strfind(inputtext,"=",true) != -1 || strfind(inputtext,"´",true) != -1 || strfind(inputtext,"'",true) != -1 || strfind(inputtext,"`",true) != -1 || strfind(inputtext,",",true) != -1 || strfind(inputtext,"¨",true) != -1) return SendClientMessage(playerid,-1,"Error, intentalo nuevamente y ten cuidado con lo que escribes.");
				new precio = 400;
				new preciototal = precio * strval(inputtext);
				if(strval(inputtext) <= 0) return SendClientMessage(playerid,-1,"Los items deben ser mayor a 0");
				if(PlayerInfo[playerid][pMarihuana] >= strval(inputtext))
				{
					if(DineroCamello >= preciototal)
					{
						format(string, sizeof(string), "Vendiste %dg. de marihuana por {00CC00}$%d{FFFFFF}.", strval(inputtext),preciototal);
						SendClientMessage(playerid, -1, string);
						DarDinero(playerid, preciototal);
						DineroCamello -= preciototal;
						MarihuanaCamello += strval(inputtext);
						PlayerInfo[playerid][pMarihuana] -= strval(inputtext);
					}
					else SetPlayerChatBubble(Camello, "No tengo dinero suficiente.", -1, 30.0, 5000);
				}
				else SendClientMessage(playerid, -1, "No tienes esa cantidad de marihuana.");
			}
			return 1;
		}
		case VENDERCRACK:
		{
			if(response)
			{
                if(strfind(inputtext,"=",true) != -1 || strfind(inputtext,"´",true) != -1 || strfind(inputtext,"'",true) != -1 || strfind(inputtext,"`",true) != -1 || strfind(inputtext,",",true) != -1 || strfind(inputtext,"¨",true) != -1) return SendClientMessage(playerid,-1,"Error, intentalo nuevamente y ten cuidado con lo que escribes.");
				new precio = 300;
				new preciototal = precio * strval(inputtext);
				if(strval(inputtext) <= 0) return SendClientMessage(playerid,-1,"Los items deben ser mayor a 0");
				if(PlayerInfo[playerid][pCrack] >= strval(inputtext))
				{
					if(DineroCamello >= preciototal)
					{
						format(string, sizeof(string), "Vendiste %dg. de crack por {00CC00}$%d{FFFFFF}.", strval(inputtext),preciototal);
						SendClientMessage(playerid, -1, string);
						DarDinero(playerid, preciototal);
						DineroCamello -= preciototal;
						CrackCamello += strval(inputtext);
						PlayerInfo[playerid][pCrack] -= strval(inputtext);
					}
					else SetPlayerChatBubble(Camello, "No tengo dinero suficiente.", -1, 30.0, 5000);
				}
				else SendClientMessage(playerid, -1, "No tienes esa cantidad de crack.");
			}
			return 1;
		}
		case VENDERMEDICAMENTOS:
		{
			if(response)
			{
			    if(strfind(inputtext,"=",true) != -1 || strfind(inputtext,"´",true) != -1 || strfind(inputtext,"'",true) != -1 || strfind(inputtext,"`",true) != -1 || strfind(inputtext,",",true) != -1 || strfind(inputtext,"¨",true) != -1) return SendClientMessage(playerid,-1,"Error, intentalo nuevamente y ten cuidado con lo que escribes.");
				new precio = 150;
				new preciototal = precio * strval(inputtext);
				if(strval(inputtext) <= 0) return SendClientMessage(playerid,-1,"Los items deben ser mayor a 0");
				if(PlayerInfo[playerid][pMedicamentos] >= strval(inputtext))
				{

					if(DineroCamello >= preciototal)
					{

						format(string, sizeof(string), "Vendiste %d medicamentos por {00CC00}$%d{FFFFFF}.", strval(inputtext),preciototal);
						SendClientMessage(playerid, -1, string);
						DarDinero(playerid, preciototal);
						DineroCamello -= preciototal;
						MedicamentosCamello += strval(inputtext);
						PlayerInfo[playerid][pMedicamentos] -= strval(inputtext);
					}
					else SetPlayerChatBubble(Camello, "No tengo dinero suficiente.", -1, 30.0, 5000);
				}
				else SendClientMessage(playerid, -1, "No tienes esa cantidad de medicamentos.");
			}
			return 1;
		}
		case VENDERCAMELLO:
		{

			if(0 > DineroCamello) return SetPlayerChatBubble(Camello, "No tengo más dinero.", -1, 30.0, 5000);
			{
				if(response)
				{
					switch(listitem)
					{
					    case 0:
						{
							format(string,sizeof(string), "{FFFFFF}Tengo {00CC00}$%d{FFFFFF} para comprarte marihuana.\nTe doy {00CC00}$400{FFFFFF} por cada gramo.",DineroCamello);
							ShowPlayerDialog(playerid, VENDERMARIHUANA, DIALOG_STYLE_INPUT, "¿Cuántos quieres vender?", string, "Aceptar", "Cancelar");
						}
						case 1:
						{
							format(string,sizeof(string), "{FFFFFF}Tengo {00CC00}$%d{FFFFFF} para comprarte medicamentos.\nTe doy {00CC00}$150{FFFFFF} por cada pastilla.",DineroCamello);
							ShowPlayerDialog(playerid, VENDERMEDICAMENTOS, DIALOG_STYLE_INPUT, "¿Cuántos quieres vender?", string, "Aceptar", "Cancelar");
						}
						case 2:
						{
							format(string,sizeof(string), "{FFFFFF}Tengo {00CC00}$%d{FFFFFF} para comprarte crack.\nTe doy {00CC00}$300{FFFFFF} por cada gramo.",DineroCamello);
							ShowPlayerDialog(playerid, VENDERCRACK, DIALOG_STYLE_INPUT, "¿Cuántos quieres vender?", string, "Aceptar", "Cancelar");
						}
					}
				}
			}
			return 1;
		}
		case COMPRARCAMELLO2:
		{
			if(response)
			{
				if(DineroCamello > 0)
				{
					switch(listitem)
					{
					    case 0:
						{
							if(0 > MarihuanaCamello) return SetPlayerChatBubble(Camello, "No me queda más marihuana.", -1, 30.0, 5000);
							{
								format(string, sizeof(string), "{FFFFFF}Tengo %dg. de marihuana para venderte.\nEl costo es de {00CC00}$450{FFFFFF} por cada gramo.",MarihuanaCamello);
								ShowPlayerDialog(playerid, COMPRARMARIHUANA, DIALOG_STYLE_INPUT, "¿Cuántos gramos quieres?", string,"Aceptar", "Cancelar");
							}
						}
						case 1:
						{
							if(0 > MedicamentosCamello) return SetPlayerChatBubble(Camello, "No me quedan más medicamentos.", -1, 30.0, 5000);
							{
								format(string, sizeof(string), "{FFFFFF}Tengo %d medicamentos para venderte.\nEl costo es de {00CC00}$200{FFFFFF} por cada pastilla.",MedicamentosCamello);
								ShowPlayerDialog(playerid, COMPRARMEDICAMENTOS, DIALOG_STYLE_INPUT, "¿Cuántos medicamentos quieres?", string,"Aceptar", "Cancelar");
							}
						}
						case 2:
						{
							if(0 > CrackCamello) return SetPlayerChatBubble(Camello, "No me queda más crack.", -1, 30.0, 5000);
							{
								format(string, sizeof(string), "{FFFFFF}Tengo %dg. de crack para venderte.\nEl costo es de {00CC00}$350{FFFFFF} por cada gramo.",CrackCamello);
								ShowPlayerDialog(playerid, COMPRARCRACK, DIALOG_STYLE_INPUT, "¿Cuántos gramos quieres?", string, "Aceptar", "Cancelar");
							}
						}
					}
				}
			}
			return 1;
		}
		case COMPRARMARIHUANA:
		{
			if(response)
			{
			    if(strfind(inputtext,"=",true) != -1 || strfind(inputtext,"´",true) != -1 || strfind(inputtext,"'",true) != -1 || strfind(inputtext,"`",true) != -1 || strfind(inputtext,",",true) != -1 || strfind(inputtext,"¨",true) != -1) return SendClientMessage(playerid,-1,"Error, intentalo nuevamente y ten cuidado con lo que escribes.");
				if(MarihuanaCamello >= strval(inputtext))
				{
					new precio = 450;
					new preciofinal = strval(inputtext) * precio;
					if(strval(inputtext) <= 0) return SendClientMessage(playerid,-1,"Los items deben ser mayor a 0");
					if(PlayerInfo[playerid][jDinero] >= preciofinal)
					{
						format(string, sizeof(string), "Compraste %dg. de marihuana por {00CC00}$%d{FFFFFF}.", strval(inputtext), preciofinal);
						SendClientMessage(playerid, -1, string);
						QuitarDinero(playerid, preciofinal);
						PlayerInfo[playerid][pMarihuana] += strval(inputtext);
						MarihuanaCamello -= strval(inputtext);
						DineroCamello += preciofinal;
						SetPlayerChatBubble(Camello, "Gracias, regresa cuando quieras.", -1, 30.0, 5000);
					} else SendClientMessage(playerid, -1, "No tienes suficiente dinero.");
				} else SetPlayerChatBubble(Camello, "No tengo esa cantidad de marihuana.", -1, 30.0, 5000);
			}
			return 1;
		}
		case COMPRARCRACK:
		{
			if(response)
			{
			    if(strfind(inputtext,"=",true) != -1 || strfind(inputtext,"´",true) != -1 || strfind(inputtext,"'",true) != -1 || strfind(inputtext,"`",true) != -1 || strfind(inputtext,",",true) != -1 || strfind(inputtext,"¨",true) != -1) return SendClientMessage(playerid,-1,"Error, intentalo nuevamente y ten cuidado con lo que escribes.");
				if(CrackCamello >= strval(inputtext))
				{
					new precio = 350;
					new preciofinal = strval(inputtext) * precio;
					if(strval(inputtext) <= 0) return SendClientMessage(playerid,-1,"Los items deben ser mayor a 0");
					if(PlayerInfo[playerid][jDinero] >= preciofinal)
					{
						format(string, sizeof(string), "Compraste %dg. de crack por {00CC00}$%d{FFFFFF}.", strval(inputtext), preciofinal);
						SendClientMessage(playerid, -1, string);
						QuitarDinero(playerid, preciofinal);
						PlayerInfo[playerid][pCrack] += strval(inputtext);
						CrackCamello -= strval(inputtext);
						DineroCamello += preciofinal;
						SetPlayerChatBubble(Camello, "Gracias, regresa cuando quieras.", -1, 30.0, 5000);
					} else SendClientMessage(playerid, -1, "No tienes suficiente dinero.");
				} else SetPlayerChatBubble(Camello, "No tengo esa cantidad de crack.", -1, 30.0, 5000);
			}
			return 1;
		}
		case COMPRARMEDICAMENTOS:
		{
			if(response)
			{
			    if(strfind(inputtext,"=",true) != -1 || strfind(inputtext,"´",true) != -1 || strfind(inputtext,"'",true) != -1 || strfind(inputtext,"`",true) != -1 || strfind(inputtext,",",true) != -1 || strfind(inputtext,"¨",true) != -1) return SendClientMessage(playerid,-1,"Error, intentalo nuevamente y ten cuidado con lo que escribes.");
				if(MedicamentosCamello >= strval(inputtext))
				{
					new precio = 200;
					new preciofinal = strval(inputtext) * precio;
					if(strval(inputtext) <= 0) return SendClientMessage(playerid,-1,"Los items deben ser mayor a 0");
					if(PlayerInfo[playerid][jDinero] >= preciofinal)
					{
						format(string, sizeof(string), "Compraste %d medicamentos por {00CC00}$%d{FFFFFF}.",strval(inputtext),preciofinal);
						SendClientMessage(playerid, -1, string);
						QuitarDinero(playerid, preciofinal);
						PlayerInfo[playerid][pMedicamentos] += strval(inputtext);
						MedicamentosCamello -= strval(inputtext);
						DineroCamello += preciofinal;
						SetPlayerChatBubble(Camello, "Gracias, regresa cuando quieras.", -1, 30.0, 5000);
					} else SendClientMessage(playerid, -1, "No tienes suficiente dinero.");
				} else SetPlayerChatBubble(Camello, "No tengo esa cantidad de medicamentos.", -1, 30.0, 5000);
			}
			return 1;
		}
		//
	}
	return 1;
}

public OnPlayerEnterDynamicArea(playerid, areaid)
{
	if(areaid == AreaCabinas[1])
	{
		if(CabinasOcupadasEmisoras[1][0] != 0)
		{
			new id = CabinasOcupadasEmisoras[1][1];
			if(Emisoras[id][CabinaOcupada] == 1)
			{
				if(Emisoras[id][TransEmisora] == 1)
				{
					new stringa[200];
					CabinasOcupadasEmisoras[1][2]++;
					format(stringa, sizeof(stringa), "Emisora: 1 {DBED16}- %s", Emisoras[id][NombreEmisora]);
					SendClientMessage(playerid, COLOR_WHITE, stringa);
					format(stringa, sizeof(stringa), "http://"EMISORA_URL"?sid=%d", Emisoras[id][EmisoraID]);
					if(PlayerInfo[playerid][pSonidos] == 0)
			    	{
			    		PlayAudioStreamForPlayer(playerid, stringa);
					}
					return 1;
				}
			}
		}
	}
	if(areaid == AreaCabinas[2])
	{
		if(CabinasOcupadasEmisoras[2][0] != 0)
		{
			new id = CabinasOcupadasEmisoras[2][1];
			if(Emisoras[id][CabinaOcupada] == 2)
			{
				if(Emisoras[id][TransEmisora] == 1)
				{
					new stringa[200];
					CabinasOcupadasEmisoras[2][2]++;
					format(stringa, sizeof(stringa), "Emisora: 2 {DBED16}- %s", Emisoras[id][NombreEmisora]);
					SendClientMessage(playerid, COLOR_WHITE, stringa);
					format(stringa, sizeof(stringa), "http://"EMISORA_URL"?sid=%d", Emisoras[id][EmisoraID]);
					if(PlayerInfo[playerid][pSonidos] == 0)
			    	{
			    		PlayAudioStreamForPlayer(playerid, stringa);
					}
					return 1;
				}
			}
		}
	}
	if(areaid == AreaCabinas[3])
	{
		if(CabinasOcupadasEmisoras[3][0] != 0)
		{
			new id = CabinasOcupadasEmisoras[3][1];
			if(Emisoras[id][CabinaOcupada] == 3)
			{
				if(Emisoras[id][TransEmisora] == 1)
				{
					new stringa[200];
					CabinasOcupadasEmisoras[3][2]++;
					format(stringa, sizeof(stringa), "Emisora: 3 {DBED16}- %s", Emisoras[id][NombreEmisora]);
					SendClientMessage(playerid, COLOR_WHITE, stringa);
					format(stringa, sizeof(stringa), "http://"EMISORA_URL"?sid=%d", Emisoras[id][EmisoraID]);
					if(PlayerInfo[playerid][pSonidos] == 0)
			    	{
			    		PlayAudioStreamForPlayer(playerid, stringa);
					}
					return 1;
				}
			}
		}
	}
	if(areaid == AreaCabinas[4])
	{
		if(CabinasOcupadasEmisoras[4][0] != 0)
		{
			new id = CabinasOcupadasEmisoras[4][1];
			if(Emisoras[id][CabinaOcupada] == 4)
			{
				if(Emisoras[id][TransEmisora] == 1)
				{
					new stringa[200];
					CabinasOcupadasEmisoras[4][2]++;
					format(stringa, sizeof(stringa), "Emisora: 4 {DBED16}- %s", Emisoras[id][NombreEmisora]);
					SendClientMessage(playerid, COLOR_WHITE, stringa);
					format(stringa, sizeof(stringa), "http://"EMISORA_URL"?sid=%d", Emisoras[id][EmisoraID]);
					if(PlayerInfo[playerid][pSonidos] == 0)
			    	{
			    		PlayAudioStreamForPlayer(playerid, stringa);
					}
					return 1;
				}
			}
		}
	}
	if(areaid == AreaCabinas[5])
	{
	    if(TienePrendaFabrica(playerid)) return 1;
	    for(new f = 0; f < MAX_FABRICAS; f++)
		{
	    	if(GetPlayerVirtualWorld(playerid) == Fabricas[f][pVW] && GetPlayerInterior(playerid) == Fabricas[f][pInt])
	    	{
				if(HornoEncendido1[f] == 1 || HornoEncendido2[f] == 1 || HornoEncendido3[f] == 1)
				{
			        TextDrawShowForPlayer(playerid, Sangre2);
					SendClientMessage(playerid,-1,"Entraste en un area de {00CC00}gases tóxicos{FFFFFF}, perderás{EB0000} salud{FFFFFF} por no usar una {317fca}máscara anti-gas{FFFFFF}.");
					DANOF[playerid] = SetTimerEx("DanoFabrica",1000,true,"d",playerid);
				}
			}
 		}
	}
	return 1;
}

public OnGameModeExit()
{
    for(new f = 0; f < MAX_FABRICAS; f++)
	{
	    GuardarFabrica(f);
	}
	GuardarCuentasAT();
	mysql_close(Conecction);
	mysql_close(Conecction2);
    return 1;
}
public OnGameModeInit()
{
    new query[128];
	format(query, 200, "UPDATE `usuarios` SET `Online`='0'");
	mysql_function_query(Conecction, query,true,"OnQueryFinish","");
	for(new e=1; e<MAX_ENCARGOS; e++)
	{
		Encargo[e][MisionActiva] = 0;
		Encargo[e][ObjetivoTake] = 0;
		Encargo[e][Bajas] = 0;
		Encargo[e][Tiene9mm] = 0;
	}
   	new horas,minutos,segundos, day, month,year;
   	getdate(year, month, day);
	mysql_log(LOG_ERROR | LOG_WARNING);
	EnableVehicleFriendlyFire();
	PaydayDado = 0;
	CasaAbierta = 0;
	Forzada1 = 0;
	Forzada2 = 0;
	Forzada3 = 0;
	Forzada4 = 0;
	Forzada5 = 0;
	Forzada6 = 0;
	Forzada7 = 0;
	Forzada8 = 0;
	Forzada9 = 0;
	Forzada10 = 0;
	Forzada11 = 0;
	Forzada12 = 0;
	ExpObj = 0;
	BoxObj = 0;
	ConObj = 0;
    Humo1Ojb = 0;
    Humo2Ojb = 0;
	CrackCamello = 15000;
	MarihuanaCamello = 15000;
	MedicamentosCamello = 15000;
	DineroCamello = 1000000;

	gettime(horas,minutos,segundos);

	// Emisoras
	CabinasOcupadasEmisoras[1][0] = 0;
	CabinasOcupadasEmisoras[1][1] = -1;
	CabinasOcupadasEmisoras[2][0] = 0;
	CabinasOcupadasEmisoras[2][1] = -1;
	CabinasOcupadasEmisoras[3][0] = 0;
	CabinasOcupadasEmisoras[3][1] = -1;
	CabinasOcupadasEmisoras[4][0] = 0;
	CabinasOcupadasEmisoras[4][1] = -1;
	AreaCabinas[5] = CreateDynamicRectangle(-1988.2349,197.7967,-2003.4601,190.8682); //METANFETAMINA
	AreaCabinas[1] = CreateDynamicRectangle(348.7999,189.7051, 334.6652,175.9970);
	AreaCabinas[2] = CreateDynamicRectangle(348.8812,163.4289, 334.2779,154.2770);
	AreaCabinas[3] = CreateDynamicRectangle(348.8767,153.6340, 341.2415,143.9793);
	AreaCabinas[4] = CreateDynamicRectangle(360.3442,152.6125, 366.6700,162.1205);
	CabinasTextos[1] = CreateDynamic3DTextLabel("{FFFFFF}Radio disponible {C0C0C0}[N1]", -1, 349.4757, 179.4740, 1041.7256, 6);
	CabinasTextos[2] = CreateDynamic3DTextLabel("{FFFFFF}Radio disponible {C0C0C0}[N2]", -1, 349.5319, 161.5695, 1041.6917, 6);
	CabinasTextos[3] = CreateDynamic3DTextLabel("{FFFFFF}Radio disponible {C0C0C0}[N3]", -1, 349.5096, 150.0904, 1041.7167, 6);
	CabinasTextos[4] = CreateDynamic3DTextLabel("{FFFFFF}Radio disponible {C0C0C0}[N4]", -1, 361.9887, 152.0883, 1041.7084, 6);
	CreateDynamic3DTextLabel("{FFFFFF}Para crear tu emisora de radio usa {D9ED15}/crear radio{FFFFFF}\nCosto: {00cc00}$15000", COLOR_WHITE,391.1343,183.0587,1040.1156, 9.0);

	//IGLESIA LV
	new Alfombra[5];
	Alfombra[0] = CreateObject(2631,-2201.1201200,-84.5800000,1015.5200200,0.0000000,0.0000000,0.0000000); //
	Alfombra[1] = CreateObject(2631,-2197.2199700,-84.5800000,1015.5200200,0.0000000,0.0000000,0.0000000); //
	Alfombra[2] = CreateObject(2631,-2205.0166000,-84.5802000,1015.5200200,0.0000000,0.0000000,0.0000000); //
	Alfombra[3] = CreateObject(2631,-2208.9121100,-84.5801000,1015.5200200,0.0000000,0.0000000,0.0000000); //

	//BURDEL
	CreateDynamicObject(19859, 966.55151, -52.46260, 1001.37531,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(11711, 966.53741, -53.23390, 1003.04089,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19741, 966.62500, -53.06500, 1003.08228,   90.00000, 90.00000, 0.00000);
	CreateDynamicObject(19620, 966.53833, -53.20070, 1003.67072,   -90.00000, 0.00000, -90.00000);
	CreateDynamicObject(19822, 970.26343, -48.18420, 1001.21979,   0.00000, 0.00000, 270.40500);
	CreateDynamicObject(19818, 960.24030, -57.65086, 1000.71191,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19818, 960.03271, -57.61160, 1000.71191,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19824, 960.10101, -57.93270, 1000.63092,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2024, 959.32562, -58.15600, 1000.09839,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(321, 961.54358, -45.66540, 1001.01398,   0.00000, 115.00000, 22.35356);
	CreateDynamicObject(325, 960.89258, -45.77770, 1001.03387,   0.00000, 90.00000, 33.17600);
	CreateDynamicObject(2118, 960.86719, -45.64840, 1000.10339,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19823, 971.91608, -45.69839, 1001.21979,   0.00000, 0.00000, 270.40500);
	CreateDynamicObject(19820, 971.94049, -45.08165, 1001.21985,   0.00000, 0.00000, 270.40503);
	CreateDynamicObject(19822, 971.85309, -44.45580, 1001.21979,   0.00000, 0.00000, 270.40500);
	CreateDynamicObject(2588, 966.33441, -42.69520, 1002.27869,   0.00000, 0.00000, 0.00000);

	CreateDynamicObject(19741, 2014.80420, 1150.45691, 14.11850,   0.00000, 10.00000, 10.00000);
	CreateDynamicObject(11720, 2016.05115, 1152.58691, 13.85700,   10.00000, 0.00000, 100.53670);
	CreateDynamicObject(3809, 2018.92041, 1150.28577, 12.69980,   0.00000, 0.00000, 54.81940);
	CreateDynamicObject(1670, 2013.60461, 1153.11609, 14.33210,   0.00000, 10.00000, 10.00000);
	CreateDynamicObject(3809, 2012.85608, 1154.15601, 12.69980,   0.00000, 0.00000, 54.81940);
	CreateDynamicObject(2714, 2015.18152, 1151.08875, 16.10840,   0.00000, 0.00000, 147.73750);
	CreateDynamicObject(2074, 2015.50586, 1151.63501, 16.86390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(7093, 2032.43994, 1160.33264, 19.69620,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(7392, 2015.04858, 1107.43762, 25.06287,   0.00000, 0.00000, 303.10672);
	CreateDynamicObject(9121, 1944.80469, 1183.91406, 19.77310,   0.00000, 0.00000, 0.00000);

	//FABRICA METANFETAMINA
	//TUBOS DE HUMO
	tuberis1 = CreateObject(3498, -1992.27856, 194.13660, 1044.25415,   0.00000, 0.00000, 0.00000);
	tuberis2 = CreateObject(3498, -1999.21558, 194.13660, 1044.25415,   0.00000, 0.00000, 0.00000);
	tuberis3 = CreateObject(3498, -1995.67456, 194.13660, 1044.25415,   0.00000, 0.00000, 0.00000);
    SetObjectMaterial(tuberis1, 0, 11090, "cf_metals_sfse", "gen_chrome",-1);
    SetObjectMaterial(tuberis2, 0, 11090, "cf_metals_sfse", "gen_chrome",-1);
    SetObjectMaterial(tuberis3, 0, 11090, "cf_metals_sfse", "gen_chrome",-1);

	paredx = CreateObject(19378, -2017.89246, 239.64149, 1035.45874,   0.00000, 0.00000, 0.00000);
    SetObjectMaterial(paredx,  0, 19437, "all_walls", "mp_carter_bwall",-1);

	ofi1 = CreateObject(19376, -2017.92236, 249.42850, 1035.43884,   0.00000, 0.00000, 0.00000);
	ofi2 = CreateObject(19376, -2017.92236, 259.06250, 1035.43884,   0.00000, 0.00000, 0.00000);
	ofi3 = CreateObject(19376, -2022.61121, 255.01019, 1035.43884,   0.00000, 0.00000, 90.00000);
	ofi4 = CreateObject(19376, -2026.90845, 250.15170, 1035.43884,   0.00000, 0.00000, 0.00000);
    SetObjectMaterial(ofi1, 0, 19437, "all_walls", "mp_motel_carpet1",-1);
    SetObjectMaterial(ofi2, 0, 19437, "all_walls", "mp_motel_carpet1",-1);
    SetObjectMaterial(ofi3, 0, 19437, "all_walls", "mp_motel_carpet1",-1);
    SetObjectMaterial(ofi4, 0, 19437, "all_walls", "mp_motel_carpet1",-1);

	luz1 = CreateObject(945, -2008.72021, 227.01640, 1044.36536,   0.00000, 0.00000, 0.00000);
	luz2 = CreateObject(945, -2012.54199, 226.99699, 1044.36536,   0.00000, 0.00000, 0.00000);
	luz3 = CreateObject(945, -2016.40686, 226.98024, 1044.36536,   0.00000, 0.00000, 0.00000);
	luz4 = CreateObject(945, -2004.86218, 227.01640, 1044.36536,   0.00000, 0.00000, 0.00000);
	luz5 = CreateObject(945, -2001.04065, 227.01640, 1044.36536,   0.00000, 0.00000, 0.00000);
    SetObjectMaterial(luz1, 0, 19382, "all_walls", "mirror01");
    SetObjectMaterial(luz2, 0, 19382, "all_walls", "mirror01");
    SetObjectMaterial(luz3, 0, 19382, "all_walls", "mirror01");
    SetObjectMaterial(luz4, 0, 19382, "all_walls", "mirror01");
    SetObjectMaterial(luz5, 0, 19382, "all_walls", "mirror01");

    TextoStriptease = CreateObject(19464, 2015.21606, 1106.60010, 15.04240,   0.00000, 0.00000, 122.31170);
	SetObjectMaterialText(TextoStriptease, "{000000}CLUB DE STRIPTEASE", 0, 120, "Arial", 24, 0, -16776961, 0, 1);
	new cobj2 = CreateObject(19003, 1405.479980, 592.429993, 1000.030029, 0.000000, 180.000000, 90.000000);
	SetObjectMaterial(cobj2, 1, 14592, "casinoVault01", "ab_shutter1", 0);

	//plataforma zona adm.
	ZADMIN[0] = CreateObject(18981, 89.47059, -9.95276, 71.06293,   0.00000, 90.00000, 343.85077);
	SetObjectMaterial(ZADMIN[0], 0, 19341, "egg_texts", "easter_egg01", 0x00FFFFFF);
	ZADMIN[1] = CreateObject(18981, 96.42380, 14.05030, 71.06290,   0.00000, 90.00000, 343.85080);
	SetObjectMaterial(ZADMIN[1], 0, 19341, "egg_texts", "easter_egg01", 0x00FFFFFF);
	ZADMIN[2] = CreateObject(18981, 72.40910, 21.00550, 71.06290,   0.00000, 90.00000, 343.85080);
	SetObjectMaterial(ZADMIN[2], 0, 19341, "egg_texts", "easter_egg01", 0x00FFFFFF);
	ZADMIN[3] = CreateObject(18981, 65.45550, -3.00180, 71.06290,   0.00000, 90.00000, 343.85080);
	SetObjectMaterial(ZADMIN[3], 0, 19341, "egg_texts", "easter_egg01", 0x00FFFFFF);

 	Tiburon = CreateDynamicObject(1608, 2788.84546, -2585.03760, 10.01000,   93.0000, 4.0000, 261.0000);

 	Bobeda = CreateObject(19799, 1400.66003, 514.12000, 1001.66046,   0.00000, 0.00000, 180.00000);
	PuertaN2 =  CreateObject(1566, 1407.52490, 490.98611, 1009.62000,   0.00000, 0.00000, -89.70000);
	PuertaArmas = CreateObject(1566, 1418.01367, 490.54456, 1007.63647,   0.00000, 0.00000, -90.42001);
	Bolsa1 = CreateDynamicObject(1550, 1400.93274, 523.94336, 1000.33374,   0.00000, 0.00000, 0.00000);
	Bolsa2 = CreateDynamicObject(1550, 1401.55359, 523.69153, 1000.31354,   0.00000, 0.00000, 0.00000);
	Bolsa3 = CreateDynamicObject(1550, 1402.19263, 523.98248, 1000.31354,   0.00000, 0.00000, 0.00000);
	Bolsa4 = CreateDynamicObject(1550, 1402.70300, 524.12305, 1000.31354,   0.00000, 0.00000, 0.00000);

	for(new o = 0, oj = sizeof(Alfombra); o < oj; o++) SetObjectMaterial(Alfombra[o], 0, 18646, "matcolours", "red-2");

    //ACTORES ISLA

    new IslaActor1 = CreateDynamicActor(154,870.3842,-2998.8372,3.8814,358.4109, 1,100.0, 0, -1,-1,STREAMER_ACTOR_SD, STREAMER_TAG_AREA -1,0);
    ApplyDynamicActorAnimation(IslaActor1, "COP_AMBIENT", "Coplook_loop", 4.1, 1, 0, 0, 1, 0);

    new IslaActor2 = CreateDynamicActor(136,827.7870,-3022.0591,5.7904,274.2031, 1,100.0, 0, -1,-1,STREAMER_ACTOR_SD, STREAMER_TAG_AREA -1,0);
    ApplyDynamicActorAnimation(IslaActor2, "SMOKING", "M_smklean_loop", 4.1, 1, 0, 0, 1, 0);

    new IslaActor3 = CreateDynamicActor(92, 804.8068,-3033.8596,6.0631,87.2346, 1,100.0, 0, -1,-1,STREAMER_ACTOR_SD, STREAMER_TAG_AREA -1,0);
    ApplyDynamicActorAnimation(IslaActor3, "SKATE","skate_idle", 4.1, 1, 0, 0, 1, 0);

    new IslaActor4 = CreateDynamicActor(45, 713.2985,-3003.8955,3.9369,139.8708, 1,100.0, 0, -1,-1,STREAMER_ACTOR_SD, STREAMER_TAG_AREA -1,0);
    ApplyDynamicActorAnimation(IslaActor4, "SUNBATHE", "ParkSit_M_in", 4.1, 0, 1, 1, 1, 0);

    new IslaActor5 = CreateDynamicActor(18, 789.5573,-3000.6533,4.0739,143.6871, 1,100.0, 0, -1,-1,STREAMER_ACTOR_SD, STREAMER_TAG_AREA -1,0);
    ApplyDynamicActorAnimation(IslaActor5, "SUNBATHE", "ParkSit_M_in", 4.1, 0, 1, 1, 1, 0);

    new IslaActor6 = CreateDynamicActor(138, 895.3869,-3004.3044,4.6576,62.4296, 1,100.0, 0, -1,-1,STREAMER_ACTOR_SD, STREAMER_TAG_AREA -1,0);
    ApplyDynamicActorAnimation(IslaActor6, "SUNBATHE","ParkSit_W_idleA", 4.1, 0, 1, 1, 1, 0);

    new IslaActor7 = CreateDynamicActor(138, 788.1647,-3002.9846,4.3914,358.9342, 1,100.0, 0, -1,-1,STREAMER_ACTOR_SD, STREAMER_TAG_AREA -1,0);
    ApplyDynamicActorAnimation(IslaActor7, "SUNBATHE", "ParkSit_M_in", 4.1, 0, 1, 1, 1, 0);

    new IslaActor8 = CreateDynamicActor(140, 890.8132,-3001.8557,4.3214,233.9699, 1,100.0, 0, -1,-1,STREAMER_ACTOR_SD, STREAMER_TAG_AREA -1,0);
    ApplyDynamicActorAnimation(IslaActor8, "SUNBATHE", "Lay_Bac_in", 4.1, 1, 0, 0, 1, 0);

    new IslaActor9 = CreateDynamicActor(97,781.3519,-3001.0222,4.3688,347.9118, 1,100.0, 0, -1,-1,STREAMER_ACTOR_SD, STREAMER_TAG_AREA -1,0);
    ApplyDynamicActorAnimation(IslaActor9, "COP_AMBIENT", "Coplook_loop", 4.1, 1, 0, 0, 1, 0);

    //ACTORES ESCUELA DE STRIP

    CreateDynamicActor(63,970.8362,-44.7808,1001.1172,87.7157, 1,100.0, 0, -1,-1,STREAMER_ACTOR_SD, STREAMER_TAG_AREA -1,0);
    CreateDynamicActor(249,956.9611,-54.3932,1001.1172,268.8569, 1,100.0, 0, -1,-1,STREAMER_ACTOR_SD, STREAMER_TAG_AREA -1,0);
    new EscuelaStrip3 = CreateDynamicActor(257,956.8380,-52.8452,1002.0612,269.7083, 1,100.0, 0, -1,-1,STREAMER_ACTOR_SD, STREAMER_TAG_AREA -1,0);
    ApplyDynamicActorAnimation(EscuelaStrip3, "SUNBATHE", "Lay_Bac_in", 4.1, 0, 1, 1, 1, 0);

    new Actorsxx = CreateDynamicActor(123, -2172.753173, 679.367126, 55.162170, 108.508644, 1,100.0, 0, -1,-1,STREAMER_ACTOR_SD, STREAMER_TAG_AREA -1,0);
	ApplyDynamicActorAnimation(Actorsxx, "COP_AMBIENT", "Coplook_loop", 4.1 , 0 , 0 , 0 , 1 , 0 ) ;
	CreateDynamicActor(125, -2181.774658, 710.965881, 53.890625, 178.695983, 1,100.0, 0, -1,-1,STREAMER_ACTOR_SD, STREAMER_TAG_AREA -1,0);
	CreateDynamicActor(112, -2187.197998, 716.059631, 53.899868, 224.153121, 1,100.0, 0, -1,-1,STREAMER_ACTOR_SD, STREAMER_TAG_AREA -1,0);
	CreateDynamicActor(111, -2181.458740, 715.438049, 53.891841, 150.687530, 1,100.0, 0, -1,-1,STREAMER_ACTOR_SD, STREAMER_TAG_AREA -1,0);
	CreateDynamic3DTextLabel("Aquí puedes solicitar un {DBED15}/encargo{ffffff}", -1, -2187.0981,715.3529,53.8992, 20.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,  0, 0, 0, -1, 20.0);
	CreateDynamic3DTextLabel("Para unirte al crimen escribe {DBED15}/trabajo criminal{ffffff}\nPara recibir ayuda sobre los trabajos disponibles, escribe /ayuda trabajos.", -1, -2181.7563,714.6966,53.8916, 20.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,  0, 0, 0, -1, 20.0);
    CreateDynamic3DTextLabel("Pulsa {DBED15}'H'{ffffff} para salir en el vehículo.", -1, -2139.2771,-247.7624,544.7359, 7.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,  0, 0, -1, -1, 20.0);
	//criminal

	new CPILOTO = CreateDynamicActor(57, 1164.0037,-1.3924,1020.6459,198.3095, 1,100.0, 0, -1,-1,STREAMER_ACTOR_SD, STREAMER_TAG_AREA -1,0);
	SetActorVirtualWorld(CPILOTO, 1);
	ApplyDynamicActorAnimation(CPILOTO, "ped", "SEAT_down", 4.1 , 0 , 0 , 0 , 1 , 0);

	// Entrada
	CreateDynamicObject(19273, 386.730011, 174.699997, 1040.550049, 0.000000, 0.000000, 177.910004);
	CreateDynamicObject(19273, 386.700012, 174.199997, 1040.550049, 0.000000, 0.000000, 358.700012);
	Botones[2] = CreateButton(386.7000, 174.4800, 1040.5500);

	// Sala 1
	CreateDynamicObject(19273, 349.359985, 178.309998, 1040.449951, 0.000000, 0.000000, 89.040001);
	CreateDynamicObject(19273, 348.660004, 178.289993, 1040.449951, 0.000000, 0.000000, 268.260010);
	Botones[4] = CreateButton(349.0600, 178.2900, 1040.4500);

	// Sala 2
	CreateDynamicObject(19273, 349.369995, 160.309998, 1040.449951, 0.000000, 0.000000, 89.040001);
	CreateDynamicObject(19273, 348.790009, 160.309998, 1040.449951, 0.000000, 0.000000, 268.260010);
	Botones[6] = CreateButton(349.0272, 160.3499, 1040.4500);

	// Sala 3
	CreateDynamicObject(19273, 349.380005, 148.850006, 1040.449951, 0.000000, 0.000000, 90.190002);
	CreateDynamicObject(19273, 348.779999, 148.839996, 1040.449951, 0.000000, 0.000000, 269.869995);
	Botones[8] = CreateButton(349.0400, 148.8500, 1040.4500);

	// Sala 4
	CreateDynamicObject(19273, 363.119995, 152.690002, 1040.449951, 0.000000, 0.000000, 179.509995);
	CreateDynamicObject(19273, 363.160004, 152.210007, 1040.449951, 0.000000, 0.000000, 0.000000);
	Botones[10] = CreateButton(363.1623, 152.4068, 1040.4500, 179.5100);

	// Sala de entrada
	PuertasDeBotones[2] = CreateDynamicObject(1500, 390.000000, 174.539993, 1039.109985, 0.000000, 0.000000, 180.139999);

	// Sala 1
	PuertasDeBotones[4] = CreateDynamicObject(1500, 349.260010, 178.690002, 1039.109985, 0.000000, 0.000000, 90.699997);

	// Sala 2
	PuertasDeBotones[6] = CreateDynamicObject(1500, 349.260010, 160.729996, 1039.109985, 0.000000, 0.000000, 90.699997);

	// Sala 3
	PuertasDeBotones[8] = CreateDynamicObject(1500, 349.179993, 149.229996, 1039.109985, 0.000000, 0.000000, 90.699997);

	// Sala 4
	PuertasDeBotones[10] = CreateDynamicObject(1500, 361.209991, 152.330002, 1039.109985, 0.000000, 0.000000, 0.330000);

    CreateDynamic3DTextLabel("{FFFFFF}Puede {DBED16}/inscribirse{FFFFFF} para participar en la carrera.\nCosto:{00CC00} $2.000",COLOR_WHITE,-1447.7421,-313.3544,1052.0969,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1,-1,25.0);
    TextoCarrera = Create3DTextLabel("{FF3300}Boleteria cerrada\n{DBED16}Horarios de los eventos:{FFFFFF} 5hs,11hs,17hs,23hs",0xFFFFFF00,1101.2697,1613.1414,12.5469,5.0,0,1);
	Marcelo1 = Create3DTextLabel("Marcelo",0xDBED16FF,0.0, 0.0,0.0,15.0,1);
	Alejandro1 = Create3DTextLabel("Alejandro",0xDBED16FF,0.0, 0.0,0.0,15.0,1);
	CamelloTexto = Create3DTextLabel("Camello",0xDBED16FF,0.0, 0.0,0.0,15.0,1);
	CamelloHablar = Create3DTextLabel("/hablar", 0xFFFFFFFF, 0.0, 0.0, 0.0, 10, 1);
	HippePepe1 = Create3DTextLabel("Hippie Pepe",0xDBED16FF,0.0, 0.0,0.0,15.0,1);
	Angelica1 = Create3DTextLabel("Angélica",0xDBED16FF,0.0, 0.0,0.0,15.0,1);
	Jorge1 = Create3DTextLabel("Jorge",0xDBED16FF,0.0, 0.0,0.0,15.0,1);
	Ignacio1 = Create3DTextLabel("Ignacio",0xDBED16FF,0.0, 0.0,0.0,15.0,1);
	Hugo1 = Create3DTextLabel("Hugo",0xDBED16FF,0.0, 0.0,0.0,15.0,1);
	Mao1 = Create3DTextLabel("Mao",0xDBED16FF,0.0, 0.0,0.0,15.0,1);
	
 	#include <Logon>

	// Tiempos
	SetTimer("TiempoPlane",1000,true);
	SetTimer("CerrarBlindado",10000,false);
	SetTimer("CerrarCamion",10000,false);
	SetTimer("VerificarMision",5000,true);
	SetTimer("CargarAsalto",500,true);
	SetTimer("CargarPlantas",7000,false);
   	SetTimer("PagarSobornoFabricas",1000,true);
   	SetTimer("MovimientosTiburon",1000,false);
   	SetTimer("Action_DBQ",1000,true);
   	SetTimer("DarMinuto",1000,true);
 	SetTimer("CargarBots",2000,false);
 	SetTimer("BajarTiempoAgresor",1000,true);
 	SetTimer("ResetCars",5000,false);
   	SetTimer("TimerFC",5000,false);
   	SetTimer("Anticheats",2000,true);
   	SetTimer("gaviotas",12000,true);
   	SetTimer("cargartodo",2000, false);
	SetTimer("ReloadBandas",600000,true);
	SetTimer("GuardarCuentasAT",60000,true);
	SetTimer("LlamadaTransportista",300000,true);
	SetTimer("cargarhora",60000,true);
	SetTimer("Gasolinass",60000,true);
	SetTimer("TimerGPS",500,true);
	SetTimer("DarNecesidadNormal",1800000,true);
	SetTimer("DarNecesidadVIP",3600000,true);
	SetTimer("AutoCheats2",7000,true);
	SetTimer("RestaVida",5000,true);
	SetTimer("HablarLoro",90000,true);
	SetTimer("BajarCuentaDinero",5000,true);
	SetTimer("DarGas",5000,false);
	SetTimer("AntiClones",3000,true);
	SetTimer("Codigos",3000,true);
	SetTimer("AutoCheats",2000,true);
	SetTimer("TimerPlantas",1000,true);
	SetTimer("TimerVelocimetro",450,true);
	SetTimer("Curar",1000,true);
	SetTimer("CheatArmas",1000,true);
	SetTimer("AntiSpeedHack",1000,true);
	SetTimer("RestaTiempo",1000,true);
	SetTimer("BajarTiempos",1000,true);
	SetTimer("TimerCriminal",1000,true);
	SetTimer("Armas",500,true);
	SetTimer("HablarLoro",90000,true);
	SetTimer("ServerMicrobeat",250,true);
	SetTimer("CargarCasa1",1000,false);
	SetTimer("CargarCasa2",1000,false);
	SetTimer("CargarCasa3",1000,false);
	SetTimer("CargarCasa4",1000,false);
	SetTimer("CargarCasa5",1000,false);
	SetTimer("CargarCasa6",1000,false);
	SetTimer("CargarCasa7",1000,false);
	SetTimer("CargarCasa8",1000,false);
	SetTimer("CargarCasa9",1000,false);
	SetTimer("CargarCasa10",1000,false);
	SetTimer("CargarCasa11",1000,false);
	SetTimer("CargarCasa12",1000,false);

	ModoCombate = GangZoneCreate(-2989.536, -3328.195, 2989.536, 2989.536);
	mares = GangZoneCreate(912.910888, -2426.340087 ,865.637451, -2475.890136);
	territorios[1] = GangZoneCreate(1072.992553, -2082.581298 ,1294.107788, -1988.054931);
	territorios[2] = GangZoneCreate(2346.09375,-1725,2550,-1635.9375);
	muelles[1] = GangZoneCreate(2722.127685, -2629.471923 ,2762.454345, -2565.765380);
	muelles[2] = GangZoneCreate(2762.527832, -2565.853027 ,2797.997558, -2579.947021);
	muelles[3] = GangZoneCreate(2798.801757, -2577.302246 ,2832.094482, -2573.255859);
	muelles[4] = GangZoneCreate(2832.615722, -2573.807617 ,2828.321777, -2627.952392);
	isla[1] = GangZoneCreate(922.038452, -3452.668701 ,700.301208, -3783.534179);
	isla[2] = GangZoneCreate(717.393859, -3767.105468 ,906.093017, -3469.562988);
	isla[3] = GangZoneCreate(701.250549, -3369.013916 ,937.183837, -2993.267578);
	isla[4] = GangZoneCreate(921.261047, -3008.844726 ,717.734008, -3351.821044);
	isla[5] = GangZoneCreate(656.801879, -3007.734619 ,544.053894, -3355.595947);
	isla[6] = GangZoneCreate(562.668457, -3337.038330 ,640.362731, -3024.862304);
	pistas[1] = GangZoneCreate(843.070678, -1793.588989 ,826.174377, -2283.069091);
	pistas[2] = GangZoneCreate(843.070678, -2283.069091 ,826.174377, -2841.717285);
	pistas[3] = GangZoneCreate(843.070678, -2841.717285 ,826.174377, -3034.797600);
	pistas[4] = GangZoneCreate(616.404907, -3048.325927 ,586.677856, -3313.127685);
	pistas[5] = GangZoneCreate(614.571105, -3188.577880 ,755.057922, -3173.222167);
	pistas[6] = GangZoneCreate(775.670166, -3594.243652 ,755.216369, -3609.036865);
	pistas[7] = GangZoneCreate(756.460815, -3326.789062 ,741.555236, -3743.376220);
	pistas[8] = GangZoneCreate(741.840209, -3328.061279 ,895.941589, -3033.796142);
	suelo[1] = GangZoneCreate(856.066711, -3511.261718 ,775.566467, -3711.788085);
	suelo[2] = GangZoneCreate(882.908630, -3046.814453 ,755.163879, -3174.530029);
	suelo[3] = GangZoneCreate(882.821411, -3186.812744 ,755.291809, -3314.463378);

	// Map icon
	CreateDynamicMapIcon(2014.8101,1107.0100,10.9203, 21, -1, -1, -1, -1, 600.0);        //STRIPTEASE
	CreateDynamicMapIcon(-1808.7142,945.9161,24.8906, 29, 0, 0, 0, -1, 600.0);			//Pizzeria
	CreateDynamicMapIcon(-1720.9456,1359.7822,7.1853, 29, 0, 0, 0, -1, 600.0);			//Pizzeria
	CreateDynamicMapIcon(2083.3376,2224.7012,11.0234, 29, 0, 0, 0, -1, 600.0);			//Pizzeria
	CreateDynamicMapIcon(2756.7642,2477.3533,11.0625, 29, 0, 0, 0, -1, 600.0);			//Pizzeria
	CreateDynamicMapIcon(2638.7839,1849.7867,11.0234, 29, 0, 0, 0, -1, 600.0);			//Pizzeria
	CreateDynamicMapIcon(2331.8098,75.0506,26.6210, 29, 0, 0, 0, -1, 600.0);			//Pizzeria
	CreateDynamicMapIcon(1367.5475,248.2522,19.5669, 29, 0, 0, 0, -1, 600.0);			//Pizzeria
	CreateDynamicMapIcon(203.3945,-201.9418,1.5781, 29, 0, 0, 0, -1, 600.0);			//Pizzeria
	CreateDynamicMapIcon(2105.4844,-1806.4695,13.5547, 29, 0, 0, 0, -1, 600.0);			//Pizzeria
	CreateDynamicMapIcon(2351.8242,2533.6289,10.8203, 29, 0, 0, 0, -1, 600.0);			//Pizzeria
	CreateDynamicMapIcon(2330.6023,2533.6121,10.8203, 29, 0, 0, 0, -1, 600.0);			//Pizzeria
	CreateDynamicMapIcon(2309.5044,2533.6143,10.8203, 29, 0, 0, 0, -1, 600.0);			//Pizzeria
	CreateDynamicMapIcon(-1735.7610,1244.9299,7.5469, 18, 0, 0, 0, -1, 600.0);			//Materiales I (SF)
	CreateDynamicMapIcon(1422.6765,-1319.3438,13.5547, 18, 0, 0, 0, -1, 600.0); 		//Materiales II (LS)
	CreateDynamicMapIcon(2823.3486,-1420.3571,16.2562, 18, 0, 0, 0, -1, 600.0); 		//Materiales III (LS)
	CreateDynamicPickup(1318, 1, 649.0013,-1360.7864,13.5868,0,0,-1,100.0);     		//Emisoras
	CreateDynamicMapIcon(1173.7434,-1323.3525,15.1953, 22, 0, 0, 0, -1, 600.0);			//Hospital LS
	CreateDynamicMapIcon(2027.2164,-1420.3737,16.9922, 22, 0, 0, 0, -1, 600.0);			//Hospital Groove
	CreateDynamicMapIcon(-2665.0000,640.1640,14.5531, 22, 0, 0, 0, -1, 600.0);			//Hospital SF
	CreateDynamicMapIcon(1607.4094,1815.2427,10.8203, 22, 0, 0, 0, -1, 600.0);			//Hospital LV
	CreateDynamicMapIcon(1564.6022,-1675.2286,61.8959, 30, 0, 0, 0, -1, 600.0);			//LSPD
	CreateDynamicMapIcon(-1605.5137,710.2757,13.8672, 30, 0, 0, 0, -1, 600.0);			//SFPD
	CreateDynamicMapIcon(2290.1978,2431.4529,10.8203, 30, 0, 0, 0, -1, 600.0);			//LVPD
	CreateDynamicPickup(1318, 1, -1724.9301,-26.2651,3.5547,0,0,-1,100.0);     			//ALBERGUE
	CreateDynamicPickup(1318, 1, 2492.1536,924.8977,11.0234,0,0,-1,100.0);     			//IGLESIA LV
	CreateDynamicPickup(1318, 1, 1836.9700,-1682.4700,13.4258,0,0,-1,100.0);     		//Club Alhambra
	CreateDynamicPickup(1318, 1, 2014.8101,1107.0100,10.9203,0,0,-1,100.0);     		//Club Stripsea
	CreateDynamicMapIcon(-1954.3665,142.0110,26.8579, 42, 0, 0, 0, -1, 600.0); 			//Estacion Tren SF
	CreateDynamicMapIcon(1729.2218,-1949.7788,14.1172, 42, 0, 0, 0, -1, 600.0); 		//Estacion Tren LS 1
	CreateDynamicMapIcon(824.6184,-1354.0803,13.5379, 42, 0, 0, 0, -1, 600.0); 			//Estacion Tren LS 2
	CreateDynamicMapIcon(1433.2081,2628.2771,11.3926, 42, 0, 0, 0, -1, 600.0); 			//Estacion Tren LV 1
	CreateDynamicMapIcon(2854.0220,1290.9554,11.3906, 42, 0, 0, 0, -1, 600.0); 			//Estacion Tren LV
	CreateDynamicMapIcon(2244.4436,-1665.2526,15.4766, 45, 0, 0, 0, -1, 600.0); 		//Binco
	CreateDynamicMapIcon(1456.4785,-1137.6067,23.9485, 45, 0, 0, 0, -1, 600.0); 		//ZIP
	CreateDynamicMapIcon(499.5177,-1360.6284,16.3690, 45, 0, 0, 0, -1, 600.0); 			//Pro Laps
	CreateDynamicMapIcon(454.2013,-1477.9746,30.8137, 45, 0, 0, 0, -1, 600.0); 			//DS
	CreateDynamicMapIcon(2111.9539,-1213.1942,23.9654, 45, 0, 0, 0, -1, 600.0); 		//Sub Urban
	CreateDynamicMapIcon(461.7039,-1500.7959,31.0453, 45, 0, 0, 0, -1, 600.0); 			//Victim
	CreateDynamicMapIcon(-1618.9741,56.8790,3.5495, 51, 0, 0, 0, -1, 600.0);			//Camion
	CreateDynamicMapIcon(-1581.2299,867.9284,7.6953, 52, 0, 0, 0, -1, 600.0); 			//Banco SF
	CreateDynamicMapIcon(1498.4614,-1580.7184,13.5498, 52, 0, 0, 0, -1, 600.0); 		//Banco LSPD
	CreateDynamicMapIcon(2449.4690,2290.2200,10.8203, 52, 0, 0, 0, -1, 600.0); 			//Banco LV
	CreateDynamicMapIcon(1457.1293,-1009.9208,26.8438, 52, 0, 0, 0, -1, 600.0); 		//Banco LS grande
	CreateDynamicMapIcon(1656.1246,-1883.6947,13.1237, 55, 0, 0, 0, -1, 600.0);			//Conce Barato
	CreateDynamicMapIcon(2127.5342,-1123.4701,24.9874, 55, 0, 0, 0, -1, 600.0);			//Conce Coutt And Schutz
	CreateDynamicMapIcon(557.6544,-1260.8588,16.8133, 55, 0, 0, 0, -1, 600.0);			//Conce GROTTI
	CreateDynamicMapIcon(-1989.7445,288.3349,33.9223, 55, 0, 0, 0, -1, 600.0);			//Conce Wang Cars
	CreateDynamicMapIcon(1464.9510,-1780.9888,13.9439, 55, 0, 0, 0, -1, 600.0);			//Conce Wang Cars Los Santos
	CreateDynamicMapIcon(1790.4875,-1291.0826,13.5947, 57, 0, 0, 0, -1, 600.0);			//Edificio Municipal
	CreateDynamicMapIcon(1377.0605,1152.7566,10.8203, 60, 0, 0, 0, -1, 600.0);			//Trabajo Transportista
	CreateDynamicMapIcon(2226.3508,-1719.0221,13.5261, 60, 0, 0, 0, -1, 600.0);			//Trabajo Guardaespalda
	CreateDynamicMapIcon(-384.8158,2206.0991,42.4235, 60, 0, 0, 0, -1, 600.0);			//Trabajo Minero
	CreateDynamicMapIcon(1742.9551,-1864.2202,13.5741, 60, 0, 0, 0, -1, 600.0);			//Trabajo Taxi
	CreateDynamicMapIcon(114.7220,-151.4292,1.5781, 60, 0, 0, 0, -1, 600.0);			//Trabajo Mecanico
	CreateDynamicMapIcon(1178.1359,-1361.3021,14.2302, 60, 0, 0, 0, -1, 600.0);			//Trabajo Medico
	CreateDynamicMapIcon(-177.6093,-1549.4420,6.3284, 60, 0, 0, 0, -1, 600.0);			//Trabajo Basurero
	CreateDynamicMapIcon(2122.9236,-2275.1238,20.6719, 60, 0, 0, 0, -1, 600.0);			//Trabajo Armero
	CreateDynamicMapIcon(-1715.0378,-63.1466,3.6340, 60, 0, 0, 0, -1, 600.0);			//Trabajo Camionero
	CreateDynamicMapIcon(2789.3672,-2574.6675,3.1683, 60, 0, 0, 0, -1, 600.0);			//Trabajo Pescador
	CreateDynamicMapIcon(-386.7375,-1470.0562,25.7266, 60, 0, 0, 0, -1, 600.0);			//Trabajo Cosechador FR
	CreateDynamicMapIcon(-38.5154,56.1632,3.1172, 60, 0, 0, 0, -1, 600.0);				//Trabajo Cosechador BB
	CreateDynamicMapIcon(2014.8400,1150.4700,10.9203, 60, 0, 0, 0, -1, 600.0);			//Trabajo Prostitución LV
	CreateDynamicPickup(1318, 1, 2014.8400,1150.4700,10.9203,0,0,-1,100.0);     		//Trabajo Prostitución LV
	CreateDynamicMapIcon(2362.7698,2306.3025,8.1406, 58, 0, 0, 0, -1, 600.0);			//Academia
	CreateDynamicMapIcon(1451.6383,-2287.0015,13.5469, 5, 0, 0, 0, -1, 600.0);			//Escuela de Aviación
	CreateDynamicMapIcon(2424.2317,-1742.7903,13.5458, 17, 0, 0, 0, -1, 600.0);			//24/7
	CreateDynamicMapIcon(1833.7760,-1842.4939,13.5781, 17, 0, 0, 0, -1, 600.0);			//24/7
	CreateDynamicMapIcon(1352.3112,-1759.2535,13.5078, 17, 0, 0, 0, -1, 600.0);			//24/7
	CreateDynamicMapIcon(-2442.5564,755.4185,35.1719, 17, 0, 0, 0, -1, 600.0);			//24/7
	CreateDynamicMapIcon(1315.4332,-897.6816,39.5781, 17, 0, 0, 0, -1, 600.0);			//24/7

	if(DB_SELECTED == 1)
	{
 	   Conecction = mysql_connect(HOST_DB1, USER_DB1, SELE_DB1, PASS_DB1, 3306, true);
 	   Conecction2 = mysql_connect(HOST_DB1, USER_DB1, AQ_DATB1, PASS_DB1, 3306, true);
    }
	else
	{
	    Conecction = mysql_connect(HOST_DB2, USER_DB2, SELE_DB2, PASS_DB2, 3306, true);
	    Conecction2 = mysql_connect(HOST_DB2, USER_DB2, AQ_DATB2, PASS_DB2, 3306, true);
	}


	if(mysql_errno(Conecction) == 0 && mysql_errno(Conecction2) == 0)
	{
	    print("----------------------------------------");
     	print("Conexión correcta con las bases de datos");
     	print("----------------------------------------");
     	print(" ");
     	print("---------------------------------------------------------");
		print(" 	      "SERVER_NAME" - Versión v"SERVER_VERSION" 		");
		print("                   Gamemode hecha por French			");
		print("---------------------------------------------------------");
	}
	else
	{
	    new db[8], db2[8];
	    if(mysql_errno(Conecction2) != 0) format(db,sizeof(db),"FAILED");
		else format(db,sizeof(db),"CONECTED");
	    if(mysql_errno(Conecction) != 0) format(db2,sizeof(db2),"FAILED");
	    else format(db2,sizeof(db2),"CONECTED");
	    npctoggle = 1;
	    print("|------------------------------------------|");
     	print("| Conexión fallida con las bases de datos  |");
     	print("| El servidor se cerrará en 5 segundos...  |");
     	printf("|     1: %s         2: %s        |",db,db2);
     	print("| Checa las conexiones de la configuración |");
     	print("|------------------------------------------|");
     	print(" ");
     	SetTimer("CerrarServidor",5000,false);
	}
	Alquilado = false;
	HorasSalon = 0;
	Personas = 0;
	PrecioSalon = 0;
	NivelSalon = 0;
	TipoEvento = 0;

	format(Alquilador,sizeof(Alquilador),"Nadie");
	format(NombreEvento,sizeof(NombreEvento),"Sin Nombre");
	format(DescriEvento,sizeof(DescriEvento),"Sin Descripción");

	TextoSalon = Create3DTextLabel("{FFFFFF}Puedes {F6F61D}/alquilar salon{FFFFFF} de eventos.\nCosto por hora: {00D61C}$20.000{FFFFFF}.", 0xFFFFFF00, -1250.3397,2093.7437,1246.6360, 7, 1, 0);
	Create3DTextLabel("{DBED16}Tienda de Bebidas\n {FFFFFF}Para comprar en la tienda escribe{DBED16} /comprarbebidas{FFFFFF}.",0xFFFFFF00,499.9684,-20.6495,1000.6797,23,0,1);
	Create3DTextLabel("{FFFFFF}Los pescadores pueden {DBED16}/lanzar arpon{FFFFFF} para pescar en esta zona.",0xFFFFFF00,893.5552,-2447.8867,-0.3858,23,0,1);
	Create3DTextLabel("{FFFFFF}Los pescadores pueden {DBED16}/lanzar arpon{FFFFFF} para pescar en esta zona.",0xFFFFFF00,44.3815,-1690.3977,-0.3986,23,0,1);
	Create3DTextLabel("{FFFFFF}Para vender tu vehículo, escribe{DBED16} /vender vehiculo{FFFFFF}.",0xFFFFFF00,1802.7854,-1303.8938,93.0391,23,0,1);
	Create3DTextLabel("{FFFFFF}Para comprar materiales\nEscribe {DBED16}/comprar materiales{FFFFFF}\nCantidad {DBED16}50 materiales{FFFFFF} | Costo: {00EB18}$1250{FFFFFF}.",0xFFFFFF00,2823.3486,-1420.3571,16.2562,23,0,1);
	Create3DTextLabel("{FFFFFF}Para comprar materiales\nEscribe {DBED16}/comprar materiales{FFFFFF}\nCantidad {DBED16}50 materiales{FFFFFF} | Costo: {00EB18}$1250{FFFFFF}.",0xFFFFFF00,1422.6765,-1319.3438,13.5547,23,0,1);
	Create3DTextLabel("{FFFFFF}Para comprar materiales\nEscribe {DBED16}/comprar materiales{FFFFFF}\nCantidad {DBED16}250 materiales{FFFFFF} | Costo: {00EB18}$6250{FFFFFF}.",0xFFFFFF00,-1735.7610,1244.9299,7.5469,23,0,1);
	//Faros
	CreateDynamic3DTextLabel("{FFFFFF}Usa {DBED16}/bajar{FFFFFF} para bajar y salir del faro.",0xFFFFFF00,909.7603,-3016.5725,49.9987,20,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Usa {DBED16}/bajar{FFFFFF} para bajar y salir del faro.",0xFFFFFF00,154.4787,-1953.9596,47.8722,20,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Usa {DBED16}/subir{FFFFFF} para subir al faro.",0xFFFFFF00,905.4720,-3021.9995,7.5059,20,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Usa {DBED16}/subir{FFFFFF} para subir al faro.",0xFFFFFF00,154.1846,-1946.6228,5.3903,20,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);

    EscaparLabel[0] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,-2277.9897,-10.2257,38.2993,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	EscaparLabel[1] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,-2396.0010,-13.0565,35.3486,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	EscaparLabel[2] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,2373.7302,-1136.8610,30.0583,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	EscaparLabel[3] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,-1449.7598,2647.9287,56.5345,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	EscaparLabel[4] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,932.2437,1975.8787,11.6227,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	EscaparLabel[5] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,-2729.9800,-50.8513,7.0453,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	EscaparLabel[6] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,-2729.9695,-155.6657,7.2174,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	EscaparLabel[7] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,2485.0527,-1995.0458,14.0434,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
    EscaparLabel[8] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,1762.7701,-2098.9631,13.9989,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0); // C7
    EscaparLabel[9] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,1841.8738,770.7863,11.5959,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0); // C9
    EscaparLabel[10] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,1344.4647,2612.5925,11.5559,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0); // C11
    EscaparLabel[11] = CreateDynamic3DTextLabel("{FFFFFF}Escribe{DBED16} /escapar{FFFFFF} para salir de la casa.",0xFFFFFF00,1666.9180,2612.6965,11.5559,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0); // C12

    for(new i = 0; i < sizeof(GuardarCajas);i++)
	{
		CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'H'{FFFFFF} para sacar o guardar cajas.",0xFFFFFF00,GuardarCajas[i][0],GuardarCajas[i][1],GuardarCajas[i][2],2,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	}
	// Trabajos
	Create3DTextLabel("{FFFFFF}Para ser de Médico, escribe {DBED16}/trabajo medico{FFFFFF}.\nPara recibir ayuda sobre los trabajos disponibles, escribe {DBED16}/ayuda trabajos{FFFFFF}.",0xFFFFFF00,1178.1359,-1361.3021,14.2302,23,0,1);
	Create3DTextLabel("{FFFFFF}Para ser de Fabricante de armas, escribe {DBED16}/trabajo armero{FFFFFF}.\nPara recibir ayuda sobre los trabajos disponibles, escribe {DBED16}/ayuda trabajos{FFFFFF}.",0xFFFFFF00,2122.9236,-2275.1238,20.6719,23,0,1);
	Create3DTextLabel("{FFFFFF}Para ser de Camionero, escribe {DBED16}/trabajo camionero{FFFFFF}.\nPara recibir ayuda sobre los trabajos disponibles, escribe {DBED16}/ayuda trabajos{FFFFFF}.",0xFFFFFF00,-1715.0378,-63.1466,3.6340,23,0,1);
	Create3DTextLabel("{FFFFFF}Para ser de Guardaespaldas, escribe {DBED16}/trabajo guardaespaldas{FFFFFF}.\nPara recibir ayuda sobre los trabajos disponibles, escribe {DBED16}/ayuda trabajos{FFFFFF}.",0xFFFFFF00,2226.3508,-1719.0221,13.5261,23,0,1);
    CreateDynamic3DTextLabel("{FFFFFF}¿Busca un empleo?\n\n{DBED16}/trabajo prostitucion",0xFFFFFFFF,958.2482,-54.3517,1001.1172,5.0); // TRABAJO PROSTITUCION
	CreateDynamic3DTextLabel("{FFFFFF}Para ser de Taxista, escribe {DBED16}/trabajo taxi{FFFFFF}.\nPara recibir ayuda sobre los trabajos disponibles, escribe {DBED16}/ayuda trabajos{FFFFFF}.",0xFFFFFF00,-2024.7489,-113.9102,1038.8187,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 5,5,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Para ser de Basurero, escribe {DBED16}/trabajo basurero{FFFFFF}.\nPara recibir ayuda sobre los trabajos disponibles, escribe {DBED16}/ayuda trabajos{FFFFFF}.",0xFFFFFF00,-177.6093,-1549.4420,6.3284,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Para ser de Mecánico, escribe {DBED16}/trabajo mecánico{FFFFFF}.\nPara recibir ayuda sobre los trabajos disponibles, escribe {DBED16}/ayuda trabajos{FFFFFF}.",0xFFFFFF00,114.7220,-151.4292,1.5781,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Para ser de Pescador, escribe {DBED16}/trabajo pescador{FFFFFF}.\nPara recibir ayuda sobre los trabajos disponibles, escribe {DBED16}/ayuda trabajos{FFFFFF}.",0xFFFFFF00,2790.0251,-2574.5549,3.3469,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Para ser de Transportista, escribe {DBED16}/trabajo transportista{FFFFFF}.\nPara recibir ayuda sobre los trabajos disponibles, escribe {DBED16}/ayuda trabajos{FFFFFF}.",0xFFFFFF00,2583.8274,1644.3837,1087.5602,23, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,5,1,-1,100.0); //Aquí seria para conseguir el Trabajo de Transportista
    CreateDynamic3DTextLabel("{FFFFFF}Para trabajar de Minero, escribe {DBED16}/trabajo minero{FFFFFF}.\nPara recibir ayuda sobre los trabajos disponibles, escribe {DBED16}/ayuda trabajos{FFFFFF}.",0xFFFFFF00,-382.5980,2199.3918,25.4105,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Ropa de {DBED16}/mecanico{FFFFFF}.",0xFFFFFF00,84.3491,-149.0520,2.6000,15,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Los mineros aquí pueden {DBED16}/dejar roca",0xFFFFFF00, -548.2949,2336.7649,83.4777, 23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{00CCFF}Venta de repuestos{FFFFFF}\n Precio: {00CC00}$100{FFFFFF} c/u.\n{FFFFFF}Para comprar repuestos escribe{DBED16} /comprar repuestos{FFFFFF}.",0xFFFFFF00,93.3250,-161.6600,2.5938,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Ropa de {DBED16}/basurero{FFFFFF}.",0xFFFFFF00,-170.3641,-1555.9705,6.5706,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Escribe {DBED16}/reparar embarcacion{FFFFFF} para reparar tu embarcación.",0xFFFFFF00,2745.3225,-2596.3396,-0.1532,23,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0,0,-1,100.0);
	CreateDynamic3DTextLabel("{00BCFE}Permiso de pesca{FFFFFF}\n Escribe {DBED16}/permiso pesca{FFFFFF} para conseguir tu permiso",0xFFFFFF00,2785.9165,-2575.4348,3.1600,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Los mineros aquí pueden\nponerse su {DBED16}/uniforme minero{FFFFFF}.",0xFFFFFF00, 269.1445,295.4604,999.8400, 23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{00CC00}Hierro\n{FFFFFF}Nivel de minero necesario: {00CC00}1{FFFFFF}\nEscribe {DBED16}/picar{FFFFFF}.",0xFFFFFF00,-740.4136,2392.6699,4.1117,23, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,-1,-1,-1,-1,100.0);
	CreateDynamic3DTextLabel("{00CC00}Cobre\n{FFFFFF}Nivel de minero necesario: {00CC00}2{FFFFFF}\nEscribe {DBED16}/picar{FFFFFF}.",0xFFFFFF00,-745.1193,2408.8325,1.3375,23, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,-1,-1,-1,-1,100.0);
	CreateDynamic3DTextLabel("{00CC00}Titanio\n{FFFFFF}Nivel de minero necesario: {00CC00}3{FFFFFF}\nEscribe {DBED16}/picar{FFFFFF}.",0xFFFFFF00,-729.0903,2410.1563,7.2710,23, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,-1,-1,-1,-1,100.0);
	CreateDynamic3DTextLabel("{00CC00}Mercurio\n{FFFFFF}Nivel de minero necesario: {00CC00}4{FFFFFF}\nEscribe {DBED16}/picar{FFFFFF}.",0xFFFFFF00,-728.3772,2422.0627,7.1895,23, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,-1,-1,-1,-1,100.0);
    CreateDynamic3DTextLabel("{37db3f}Estudio de radio y Televisión\n\n{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} o usa {DBED16}/entrar{FFFFFF} para ingresar.", -1, 649.0013,-1360.7864,13.5868, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0, -1, 100.0);
    CreateDynamic3DTextLabel("{37db3f}Salón de eventos{FFFFFF}\n\nPulsa {DBED16}'F'{FFFFFF} o usa {DBED16}/entrar{FFFFFF} para ingresar.", -1, 1423.4301,-1180.1801,25.9922, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0, -1, 100.0);
    CreateDynamic3DTextLabel("{37db3f}Iglesia{FFFFFF}\n\nPulsa {DBED16}'F'{FFFFFF} o usa {DBED16}/entrar{FFFFFF} para ingresar.", -1, 2492.1536,924.8977,11.0234, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0, -1, 100.0);
    CreateDynamic3DTextLabel("{37db3f}Club Alhambra{FFFFFF}\n\nPulsa {DBED16}'F'{FFFFFF} o usa {DBED16}/entrar{FFFFFF} para ingresar.", -1, 1836.9700,-1682.4700,13.4258, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0, -1, 100.0);
    CreateDynamic3DTextLabel("{d0d3d4}Escuela de paracaidismo\n{FFFFFF}Puedes {dbed15}/inscribirse {FFFFFF}para participar en el siguiente salto\nCosto: {00cc00}$5000", -1, 415.0879,2535.5859,19.1484, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0, -1, 100.0);
    CreateDynamic3DTextLabel("{37db3f}Burdel\n\n{FFFFFF}Pulsa {DBED15}'F'{FFFFFF} o usa{DBED15} /entrar {FFFFFF}para ingresar.", -1, 2014.8400,1150.4700,10.9203+1.0, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0, -1, 100.0);
    CreateDynamic3DTextLabel("{FFFFFF}Compra y venta de objetos\n{DBED15}/comprar objetos{FFFFFF} - {DBED15}/vender objetos",0xFFFFFFFC,196.3872,-231.1294,1.7786,5.0);

	//Salidas
	Create3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,2532.6731,1598.2499,1087.7430,7.0, -1, -1);
	Create3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,-2737.1101,625.3660,1385.6547+1.00,7.0, -1, -1); //HPSF
	Create3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,1251.8484,-812.2070,1164.2759+1.00,7.0, -1, -1); //HPLV // GANTON
	Create3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,-2191.3962,-82.6744,1016.4689,7.0, -1, -1); //IGLESIA LV
	Create3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,2332.5701,-1254.7500,1026.29,7.0, -1, -1); //albergue
	Create3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,493.3470,-24.8391,1000.7800,7.0, -1, -1); //Alhambra
	Create3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,1204.8600,-13.8459,1001.0200,7.0, -1, -1); //Club Striptis
	Create3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,246.38,107.31,1003.22+1.00,7.0, 1, 1);
	Create3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,2304.6858,-16.1730,26.7422+1.00,7.0, 1, 1);
	Create3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,-2240.7715,137.1613,1035.4141+1.00,7.0, 1, 6);
	Create3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,-30.9883,-92.0101,1003.5469+1.00,7.0,0,1);
	Create3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,493.4037,-24.8556,1000.6797+1.00,7.0,0,1);
	Create3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,246.7735,62.6075,1003.6406+1.00,7.0,0,1);
	Create3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,207.7022,-111.1636,1005.1328+1.00,7.0,0,1);
	Create3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,772.2999,-5.2435,1000.7286+1.00,7.0,0,1);
	Create3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,834.5561,7.3938,1004.1870+1.00,7.0,0,1);
	Create3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,-229.1293,1401.1205,27.7656+1.00,7.0, 0, 1);
	Create3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,223.0810,1287.0770,1082.1406+1.00,7.0, -1, 1);
	Create3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFFFF,1403.8179,601.0150,1001.0300+0.3,4.0, -1, -1); //Int 43
	Create3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,246.4200,107.3000,1003.2200+1.00,7.0, -1, 1);//SFPD
    CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'H'{FFFFFF} para salir en el vehículo.",0xFFFFFF00,-1976.4287,212.0480,1035.8162+0.25,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0); //Salida Fabrica Garaje
    CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'H'{FFFFFF} para ver la lista de actividades.",0xFFFFFF00,-2018.3846,248.9650,1035.8389+0.6,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0); //Actividades
    CreateDynamic3DTextLabel("{779ab5}Keypad\n{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para usar.", -1, -2022.8929, 253.0043, 1036.1030, 2);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'H'{FFFFFF} para\nadministrar la fábrica.",0xFFFFFF00,-2020.4500,251.5991,1035.9010+0.2,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0); //Administrar Fabrica
    CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'H'{FFFFFF} para dejar un {00CC00}bolso con dinero{FFFFFF}.",0xFFFFFF00,235.7830,109.9401,1010.2188+0.2,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0); //Pulsa 'H' Para dejar un bolso con dinero.
    CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,965.5889,-53.1844,1001.1246+0.8,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0); //PROSTIBULO
    CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,2332.5701,-1254.7500,1026.2899+0.8,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0); //ALBERGUE
    CreateDynamic3DTextLabel("{DBED16}/salir{FFFFFF} para salir del vestuario.",0xFFFFFF00,251.0166,76.3774,1003.6406,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,-1166.5009,2126.8232,1246.5457+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Escribe {DBED16}/salir{FFFFFF} para salir del garaje.",0xFFFFFF00,302.4565,300.4343,999.1484+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Usa {DBED16}/salir{FFFFFF} para salir.",0xFFFFFF00,168.1524,1436.1014,1084.8462+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Escribe {DBED16}/entrar{FFFFFF} para ingresar.",COLOR_WHITE,186.8628,1428.6979,10.5912+0.6,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0,-1,100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Escribe {DBED16}/salir{FFFFFF} para salir del elevador.",0xFFFFFF00,1783.8291,-1301.7024,13.5026+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,203.4271,1417.9021,1091.2000+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,-1074.4355,339.9846,1180.5259+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,387.4330,194.3359,1040.1078+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,207.6859,-110.8290,1005.1328+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,161.4287,-96.9712,1001.8047+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,1092.6782,-152.2306,1001.1160+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,207.0226,-140.2560,1003.5078+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,204.2934,-168.8588,1000.5234+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,227.5291,-8.1299,1002.2109+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,502.0160,-67.6595,998.7578+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,-2029.7441,-118.6951,1038.8187+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,2594.2100,1649.7188,1087.5581+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,1204.5865,-13.8364,1000.9219+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,372.3595,-133.5242,1001.4922+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,-1387.9806,-324.9726,1052.0834+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,1156.9583,-1312.1549,-10.7849+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,-1544.0551,-446.6218,6.0068+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 0,0,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,-1232.5634,54.9100,14.1276+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 0,0,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,1719.9429,1619.2629,10.0866+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 0,0,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,390.4993,173.9211,1008.3828+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 3,3,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,-376.4527,2196.6853,25.4105+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,269.1789,293.6963,999.8400+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa '{DBED16}Y{FFFFFF}' para salir.",0xFFFFFF00,-718.7835,2462.5969,9.9039+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,-1275.5626,2108.7246,1246.5457+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,-31.0100,-92.0103,1003.5469+1.00,7.0,	INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,254.1746,-41.6122,1002.0308+1.00,7.0,	INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,-25.9019,-188.0416,1007.7300+1.00,7.0,	INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,663.4366,-202.8868,1276.7941+1.00,7.0,	INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,1167.2426,-14.5519,1020.6459+1.00,7.0,	INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,-100.3841,-25.0388,1000.7188+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,238.5774,138.7619,1003.0234+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,2304.6863,-16.1371,26.7422+1.00,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);

	//ESTACIONAMIENTOS//
	CreateDynamic3DTextLabel("{37db45}Salón de Eventos{FFFFFF}\nEntrada para vehículos\n\nEscribe {DBED16}/entrar{FFFFFF} para ingresar.",0xFFFFFF00,1410.7946,-1228.7570,13.5469+1.0,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Vestuario y depósito de armas\nUsa {DBED16}/entrar{FFFFFF} para ingresar.",0xFFFFFF00,638.8741,-218.1260,1276.7928, 7,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 55,55,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Vestuario y depósito de armas\nUsa {DBED16}/entrar{FFFFFF} para ingresar.",0xFFFFFF00,276.2080,122.0958,1004.6172, 7,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Vestuario y depósito de armas\nUsa {DBED16}/entrar{FFFFFF} para ingresar.",0xFFFFFF00,207.9470,142.3866,1003.0234, 7,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 7,3,-1, 100.0);
    CreateDynamic3DTextLabel("{DBED16}/control",0xDBED1600,-1192.7047,2064.7141,1254.8612,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para ver el listado de productos. 1",0xFFFFFF00,-1262.6428,2119.9490,1246.5457,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{00CC00}Listado de productos\n{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para interacturar.",0xFFFFFF00,969.3793,-44.8069,1001.1172,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);//STRIPER CLUB
	CreateDynamic3DTextLabel("{00CC00}Listado de productos\n{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para interacturar.",0xFFFFFF00,499.9690,-20.6826,1000.6797,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{00CC00}Listado de productos\n{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para interacturar.",0xFFFFFF00,1214.8466,-13.3504,1000.9219,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
 	CreateDynamic3DTextLabel("{FFFFFF}Venta de Boletos{DBED16}\n/comprar boleto{FFFFFF}.",0xFFFFFF00,831.5464,-1361.7238,-0.5015,23);
	CreateDynamic3DTextLabel("{FFFFFF}Venta de Boletos{DBED16}\n/comprar boleto{FFFFFF}.",0xFFFFFF00,1757.1368,-1943.4417,13.5703,23);
	CreateDynamic3DTextLabel("{FFFFFF}Venta de Boletos{DBED16}\n/comprar boleto{FFFFFF}.",0xFFFFFF00,1746.9652,-1943.4482,13.5703,23);
	CreateDynamic3DTextLabel("{FFFFFF}Venta de Boletos{DBED16}\n/comprar boleto{FFFFFF}.",0xFFFFFF00,-1974.0217,116.7847,27.6875,23);
	CreateDynamic3DTextLabel("{FFFFFF}Venta de Boletos{DBED16}\n/comprar boleto{FFFFFF}.",0xFFFFFF00,1437.3113,2655.2742,11.3926,23);
	CreateDynamic3DTextLabel("{FFFFFF}Venta de Boletos{DBED16}\n/comprar boleto{FFFFFF}.",0xFFFFFF00,1437.4141,2620.1450,11.3926,23);
	CreateDynamic3DTextLabel("{FFFFFF}Venta de Boletos{DBED16}\n/comprar boleto{FFFFFF}.",0xFFFFFF00,2856.5955,1314.5538,11.3906,23);
	CreateDynamic3DTextLabel("{FFFFFF}Venta de Boletos{DBED16}\n/comprar boleto{FFFFFF}.",0xFFFFFF00,2856.5969,1266.9460,11.3906,23);
	CreateDynamic3DTextLabel("{FFFFFF}Venta de Boletos{DBED16}\n/comprar boleto{FFFFFF}.",0xFFFFFF00,826.7249,-1353.6726,13.5369,23);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para ver la ubicación de los trenes.",0xFFFFFF00,-1959.7164,141.9694,27.6875,7);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para ver la ubicación de los trenes.",0xFFFFFF00,-1962.3730,130.1360,27.6875,7);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para ver la ubicación de los trenes.",0xFFFFFF00,1729.7041,-1943.3695,13.5705,7);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para ver la ubicación de los trenes.",0xFFFFFF00,822.8813,-1353.8101,-0.5078,7);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para ver la ubicación de los trenes.",0xFFFFFF00,1439.4858,2644.6511,11.3926,7);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para ver la ubicación de los trenes.",0xFFFFFF00,2856.4263,1296.8097,11.3906,7);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para solicitar el paso.",0xFFFFFF00,832.2947,-2958.3792,12.1438,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para solicitar el paso.",0xFFFFFF00,834.7955,-2959.8113,12.1212,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{00CCFF}Piso: 9\n{FFFFFF}Pulsa '{DBED16}Y{FFFFFF}' para usar el elevador.",0xFFFFFF00,1783.6853,-1300.7665,65.8125,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{00CCFF}Piso: 14\n{FFFFFF}Pulsa '{DBED16}Y{FFFFFF}' para usar el elevador.",0xFFFFFF00,1783.8641,-1300.7637,93.0391,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{00CCFF}Piso: 17\n{FFFFFF}Pulsa '{DBED16}Y{FFFFFF}' para usar el elevador.",0xFFFFFF00,1783.6937,-1300.7670,109.3594,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);

	CreateDynamic3DTextLabel("{DBED16}/comprar herramientas{FFFFFF}.",0xFFFFFF00,-1072.1169,354.2132,1180.5259,7.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,-1,-1,-1,100.0);
	CreateDynamic3DTextLabel("{D15D00}Semillas de marihuana{FFFFFF}\nPaquete de 50 semillas\nCosto: {00CC00}$1500{FFFFFF}\n{DBED16}/comprar semillas{FFFFFF}.",0xFFFFFF00,-1072.1710,-1202.1224,129.2188,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
    CreateDynamic3DTextLabel("{D15D00}Semillas de marihuana{FFFFFF}\nPaquete de 50 semillas\nCosto: {00CC00}$1500{FFFFFF}\n{DBED16}/comprar semillas{FFFFFF}.",0xFFFFFF00,-1103.5033,-1620.6311,76.3672,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Ropa de médico: {DBED16}/uniforme medico{FFFFFF}.",0xFFFFFF00,1159.4829,-1356.8820,-10.7922,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 9,6,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Ropa de médico: {DBED16}/uniforme medico{FFFFFF}.",0xFFFFFF00,1159.4829,-1356.8820,-10.7922,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 8,6,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Ropa de médico: {DBED16}/uniforme medico{FFFFFF}.",0xFFFFFF00,1159.4829,-1356.8820,-10.7922,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 6,6,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Ropa de médico: {DBED16}/uniforme medico{FFFFFF}.",0xFFFFFF00,1159.4829,-1356.8820,-10.7922,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 7,6,-1, 100.0);
	//SF
	CreateDynamic3DTextLabel("{FFFFFF}Ropa de médico: {DBED16}/uniforme medico{FFFFFF}.",0xFFFFFF00,1234.4447,-830.0233,1164.2759,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 9,6,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Ropa de médico: {DBED16}/uniforme medico{FFFFFF}.",0xFFFFFF00,1234.4447,-830.0233,1164.2759,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 8,6,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Ropa de médico: {DBED16}/uniforme medico{FFFFFF}.",0xFFFFFF00,1234.4447,-830.0233,1164.2759,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 6,6,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Ropa de médico: {DBED16}/uniforme medico{FFFFFF}.",0xFFFFFF00,1234.4447,-830.0233,1164.2759,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 7,6,-1, 100.0);
	//LV
	CreateDynamic3DTextLabel("{FFFFFF}Ropa de médico: {DBED16}/uniforme medico{FFFFFF}.",0xFFFFFF00,-2729.9434,614.0607,1385.6534,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 9,6,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Ropa de médico: {DBED16}/uniforme medico{FFFFFF}.",0xFFFFFF00,-2729.9434,614.0607,1385.6534,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 8,6,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Ropa de médico: {DBED16}/uniforme medico{FFFFFF}.",0xFFFFFF00,-2729.9434,614.0607,1385.6534,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 6,6,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Ropa de médico: {DBED16}/uniforme medico{FFFFFF}.",0xFFFFFF00,-2729.9434,614.0607,1385.6534,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 7,6,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para ver el botiquín.",0xFFFFFF00,1169.7440,-1353.4617,-10.7922,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 8,6,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para ver el botiquín.",0xFFFFFF00,1169.7440,-1353.4617,-10.7922,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 7,6,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para ver el botiquín.",0xFFFFFF00,1169.7440,-1353.4617,-10.7922,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 6,6,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para ver el botiquín.",0xFFFFFF00,1169.7440,-1353.4617,-10.7922,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 9,6,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para ver el botiquín.",0xFFFFFF00,-2720.8923,647.0943,1385.6534,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 9,6,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para ver el botiquín.",0xFFFFFF00,1235.0582,-821.8716,1164.2759,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 9,6,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Para vender tu propiedad, escribe {DBED16}/vender propiedad{FFFFFF}.",0xFFFFFF00,1809.5894,-1299.8063,65.8125, 7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 0,0,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Para pedir el servicio de grúa, escribe {DBED16}/servicio grua{FFFFFF}.",0xFFFFFF00,1821.7529,-1280.6038,109.3594, 7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 0,0,-1, 100.0);
	for(new i = 0; i < sizeof(OperacionesPositions);i++)
	{
		CreateDynamic3DTextLabel("{00CC00}Operaciones bancarias\n{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para interactuar.",0xFFFFFF50,OperacionesPositions[i][0],OperacionesPositions[i][1],OperacionesPositions[i][2],10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	}
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para ver el listado de productos.",0xFFFFFF00,-28.0060,-89.9514,1003.5469,7.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,-1,-1,-1,100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Escribe {DBED16}/comprar prenda{FFFFFF} para comprar prendas de vestir.",0xFFFFFF00,175.4841,-92.5689,1002.1417,7.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,-1,-1,-1,100.0);
	CreateDynamic3DTextLabel("{DBED16}/vender objeto",0xFFFFFF00, 216.8291,-232.7234,1.7786,7,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Para entrar a esta casa necesitas {DBED16}/forzar cerradura",0xFFFFFF00, -2277.1763,-9.9763,38.2523, 2,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Para entrar a esta casa necesitas {DBED16}/forzar cerradura",0xFFFFFF00, -2393.9712,-13.1641,35.3125, 2,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Para entrar a esta casa necesitas {DBED16}/forzar cerradura",0xFFFFFF00, 2373.8467,-1139.5442,30.0510, 2,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Para entrar a esta casa necesitas {DBED16}/forzar cerradura",0xFFFFFF00, -2727.5435,-50.9449,7.0301, 2,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Para entrar a esta casa necesitas {DBED16}/forzar cerradura",0xFFFFFF00, -2727.5054,-155.6168,7.2009, 2,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Para entrar a esta casa necesitas {DBED16}/forzar cerradura",0xFFFFFF00, 2485.1733,-1997.1724,13.9166, 2,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Para entrar a esta casa necesitas {DBED16}/forzar cerradura",0xFFFFFF00, -1448.9193,2647.9514,56.4912, 2,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Para entrar a esta casa necesitas {DBED16}/forzar cerradura",0xFFFFFF00, 1762.8772,-2101.1462,13.9916, 2,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Para entrar a esta casa necesitas {DBED16}/forzar cerradura",0xFFFFFF00, 1844.5101,770.9579,11.4838, 2,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Para entrar a esta casa necesitas {DBED16}/forzar cerradura",0xFFFFFF00, 1344.6938,2610.3264,11.5494, 2,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Para entrar a esta casa necesitas {DBED16}/forzar cerradura",0xFFFFFF00, 1667.0402,2610.3267,11.5494, 2,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Para entrar a esta casa necesitas {DBED16}/forzar cerradura",0xFFFFFF00, 932.0876,1973.6534,11.6077, 2,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{DBED16}/robar objeto{FFFFFF}.",0xFFFFFF00, -1449.5641,2644.4102,56.5616, 23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{DBED16}/robar objeto{FFFFFF}.",0xFFFFFF00, 2481.6006,-1988.2667,13.6347, 23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{DBED16}/robar objeto{FFFFFF}.",0xFFFFFF00, -2731.8608,-163.3383,7.2174, 23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{DBED16}/robar objeto{FFFFFF}.",0xFFFFFF00, -2395.5342,-17.3052,35.3740, 23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{DBED16}/robar objeto{FFFFFF}.",0xFFFFFF00, -2279.4539,-15.9261,38.2993, 23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{DBED16}/robar objeto{FFFFFF}.",0xFFFFFF00, 2369.2874,-1129.8945,30.0510, 23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{DBED16}/robar objeto{FFFFFF}.",0xFFFFFF00, -2730.4619,-58.3389,7.0453, 23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{DBED16}/robar objeto{FFFFFF}.",0xFFFFFF00, 940.9933,1975.9020,11.6227, 23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{DBED16}/robar objeto{FFFFFF}.",0xFFFFFF00, 1757.1731,-2093.3801,13.9916, 23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{DBED16}/robar objeto{FFFFFF}.",0xFFFFFF00, 1842.3849,767.6443,11.5541, 23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{DBED16}/robar objeto{FFFFFF}.",0xFFFFFF00, 1356.2726,2612.3572,11.5559, 23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{DBED16}/robar objeto{FFFFFF}.",0xFFFFFF00, 1679.0486,2612.4893,11.5494, 23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
    for(new sc = 0; sc < sizeof(ServicioMedicoPos);sc++)
	{
	    CreateDynamicPickup(1314, 1, ServicioMedicoPos[sc][0],ServicioMedicoPos[sc][1],ServicioMedicoPos[sc][2],-1,-1,-1,100.0); 	//Dentro del Hospital
		CreateDynamic3DTextLabel("{FFFFFF}Escribe {DBED16}/socio{FFFFFF} para hacerte socio de este hospital.\n{DBED16}/socio ayuda{FFFFFF} para recibir ayuda.\n{DBED16}/servicio medico{FFFFFF} para ser atendido.",0xFFFFFF00,ServicioMedicoPos[sc][0],ServicioMedicoPos[sc][1],ServicioMedicoPos[sc][2],7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
    }
    for(new i = 0; i < sizeof(CosecharPositions);i++)
	{
		CreateDynamic3DTextLabel("{FFFFFF}Trabajo de cosechador\nUsa {DBED16}/cosechar{FFFFFF} para trabajar ahora mismo.",0xFFFFFF00,CosecharPositions[i][0],CosecharPositions[i][1],CosecharPositions[i][2]+0.7,10,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,0,0,-1,100.0);
        CreateDynamicPickup(1239, 23, CosecharPositions[i][0],CosecharPositions[i][1],CosecharPositions[i][2], 0, 0, -1, 100.0);
	}
	for(new i = 0; i < sizeof(VerMapasPositions);i++)
	{
		CreateDynamic3DTextLabel("{3399FF}Puntos de interés{FFFFFF}\nPulsa {DBED16}'Y'{FFFFFF} para ver el mapa.",0xFFFFFF00,VerMapasPositions[i][0],VerMapasPositions[i][1],VerMapasPositions[i][2]+0.7,10,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,0,0,-1,100.0);
        CreateDynamicObject(1444, VerMapasPositions[i][0],VerMapasPositions[i][1],VerMapasPositions[i][2], 0.0000, 0.0000, 90.0000,-1,-1,-1,500.0);
	}
	for(new i = 0; i < sizeof(LlenarBaldePos); i++) CreateDynamic3DTextLabel("{5DADFF}Agua\n{FFFFFF}Aquí puedes {DBED16}/llenar balde",0xffffff50,LlenarBaldePos[i][0],LlenarBaldePos[i][1],LlenarBaldePos[i][2], 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1,-1,100.0);
	for(new i = 0; i < sizeof(GasolineraPositions);i++)
	{
		CreateDynamic3DTextLabel("{FFFFFF}Para llenar el tanque usa{DBED16} /llenar tanque\n{FFFFFF}Para cargar una cantidad diferente, usa {DBED16}/combustible [litros]\n{FFFFFF}Para comprar un bidón de 5 litros usa {DBED16}/comprar bidon",0xFFFFFF00,GasolineraPositions[i][0],GasolineraPositions[i][1],GasolineraPositions[i][2],20,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0,0,-1,100.0);
	}
	CreateDynamic3DTextLabel("{DBED16}Estantería\n{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para verla.",0xFFFFFF00,255.7412,-40.2322,1002.0234,7.0,				INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Escribe {DBED16}/entrar{FFFFFF} para ingresar a la propiedad.",0xFFFFFF00,300.3342,311.4263,999.1484+0.6,15.0,				INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
    CreateDynamic3DTextLabel("{FFFFFF}Consigue tu {DBED16}/chaleco {FFFFFF}antibalas.",0xFFFFFF00,248.7588,74.3215,1002.6406, 5.0);
	CreateDynamic3DTextLabel("{FFFFFF}Consigue tus {DBED16}/armas {FFFFFF} en estas cajas.",0xFFFFFF00,249.3380,73.3156,1003.1578+0.5, 5.0);
	CreateDynamic3DTextLabel("{FFFFFF}Los policías\npueden ponerse su {DBED16}/uniforme policia\n{FFFFFF}de este casillero.",0xFFFFFF00,254.4149,73.7001,1003.6406, 3.0);
    CreateDynamic3DTextLabel("{FFFFFF}Las mujeres policías\npueden ponerse su {DBED16}/uniforme policia\n{FFFFFF}de este casillero.",0xFFFFFF00,258.5230,76.5417,1003.6406, 3.0);
	CreateDynamic3DTextLabel("{FFFFFF}Los policías\npueden ponerse su {DBED16}/uniforme policia\n{FFFFFF}y un casco de este casillero.",0xFFFFFF00,253.2736,77.8557,1003.6406, 3.0);
	CreateDynamic3DTextLabel("{FFFFFF}Cerveza {00CC00}$40 {DBED16}/comprar cerveza{FFFFFF}.\n{FFFFFF}Vino {00CC00}$60 {DBED16}/comprar vino{FFFFFF}.\n{FFFFFF}Sprunk {00CC00}$70 {DBED16}/comprar sprunk{FFFFFF}.",0xFFFFFF00,-225.1540,1404.1327,27.7734,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Cerveza {00CC00}$40 {DBED16}/comprar cerveza{FFFFFF}.\n{FFFFFF}Vino {00CC00}$60 {DBED16}/comprar vino{FFFFFF}.\n{FFFFFF}Sprunk {00CC00}$70 {DBED16}/comprar sprunk{FFFFFF}.",0xFFFFFF00,498.6868,-76.0385,998.7578,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{00CC00}Listado de productos\n{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para interacturar.",0xFFFFFF00,-784.2098,500.1945,1371.7422,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{00CC00}Listado de productos\n{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para interacturar.",0xFFFFFF00,-1396.3044,-320.4939,1052.0834,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}¿Cometió algún crimen?\nAquí puede {DBED16}/entregarse{FFFFFF}.",0xFFFFFF00,240.4520,112.8195,1003.2188,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}¿Cometió algún crimen?\nAquí puede {DBED16}/entregarse{FFFFFF}.",0xFFFFFF00,235.2946,166.3358,1003.0300,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{DBED16}/comprar juguetes{FFFFFF}.",0xFFFFFF00,-103.9013,-22.6749,1000.7188,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{DBED16}/comprar juguetes{FFFFFF}.",0xFFFFFF00,1214.0737,-13.3524,1000.9219,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Caja de aquarius con 12 unidades\nPrecio: {00CC00}$1560\n{DBED16}/comprar caja{FFFFFF}.",0xFFFFFF00,93.7855,-305.2337,1.5781,23,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0,0,-1,100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Caja de vino con 12 unidades\nPrecio: {00CC00}$600\n{DBED16}/comprar caja{FFFFFF}.",0xFFFFFF00,93.7853,-309.5841,1.5781,23,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0,0,-1,100.0);
 	CreateDynamic3DTextLabel("{FFFFFF}Caja de cerveza con 12 unidades\nPrecio: {00CC00}$480\n{DBED16}/comprar caja{FFFFFF}.",0xFFFFFF00,93.7853,-313.7030,1.5781,23,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0,0,-1,100.0);
 	CreateDynamic3DTextLabel("{FFFFFF}Caja de sprunk con 12 unidades\nPrecio: {00CC00}$480\n{DBED16}/comprar caja{FFFFFF}.",0xFFFFFF00,86.0509,-315.2853,1.8494,23,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0,0,-1,100.0);
	CreateDynamic3DTextLabel("{DBED16}Propiedad de Triads",0xFFFFFF00,1122.7065,-2036.9232,69.8942+0.75,23,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0,0,-1,100.0);
    CreateDynamic3DTextLabel("{DBED15}Propiedad de Groove Street",0xEB0000FF,2495.4424,-1691.1359,14.7656,20,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0,0,-1,100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para ver el listado de productos.",0xFFFFFF00,373.7276,-118.8039,1001.4922,7.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,-1,-1,-1,100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Escribe {DBED16}/comprar licencia {FFFFFF}para para adquirir una licencia de piloto.",0x0079C900,1163.9730,-2.7876,1020.6459,5.0,	INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);

	//Nuevos TextLabel's//
	CreateDynamic3DTextLabel("{37db45}Salón de Eventos{FFFFFF}\nEntrada para vehículos\n\nEscribe {DBED16}/entrar{FFFFFF} para ingresar.",0xFFFFFF00,1410.7946,-1228.7570,13.5469+1.0,23,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
    CreateDynamic3DTextLabel("{37db3f}Albergue para indigentes\n{FFFFFF}Propietario: {00D0FF}Gobierno\n\n{FFFFFF}Escribe {DBED15}/entrar {FFFFFF}para ingresar.",0xFFFFFF00,-1724.9301,-26.2651,3.5547,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
    CreateDynamic3DTextLabel("{37db3f}Club de striptease\n\n{FFFFFF}Pulsa {DBED15}'F'{FFFFFF} o usa{DBED15} /entrar {FFFFFF}para ingresar.",0xFFFFFF00,2014.8101,1107.0100,10.9203,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Bolso con dinero para transportar\n{DBED16}/agarrar bolso",0xFFFFFF00,1401.7382,523.9576,1000.9901,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Armamento\n{DBED16}/agarrar armas",0xFFFFFF00,1424.4259,491.4817,1007.4585,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Camión de caudales\n{DBED16}/guardar bolso",0xFFFFFF00,1439.8810,472.1569,1007.4581,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
    CreateDynamic3DTextLabel("\n{FFFFFF}Pulsa {DBED16}'Y'{FFFFFF} para arrojar\n{00CC00}$500{FFFFFF} a la bailarina",0xFFFFFF00,1212.3831,-5.3079,1000.9219,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}\n\n\n\n¿Necesitas ayuda?\n{DBED16}/ayuda club",0xFFFFFF00,1206.2085,-0.9576,1000.9519+1.40,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
    CreateDynamic3DTextLabel("{FFFFFF}Sala privada\n{DBED16}/entrar",0xFFFFFF00,1204.8096,12.6643,1000.9219,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);

	//ASCENSOR
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa '{DBED16}Y{FFFFFF}' para usar el elevador.",0xFFFFFF00,2117.8604,2415.0771,10.8428,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa '{DBED16}Y{FFFFFF}' para usar el elevador.",0xFFFFFF00,2117.8604,2415.0771,14.8428,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa '{DBED16}Y{FFFFFF}' para usar el elevador.",0xFFFFFF00,2117.8604,2415.0771,19.8428,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa '{DBED16}Y{FFFFFF}' para usar el elevador.",0xFFFFFF00,2117.8604,2415.0771,23.8428,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa '{DBED16}Y{FFFFFF}' para usar el elevador.",0xFFFFFF00,2117.8604,2415.0771,27.8428,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa '{DBED16}Y{FFFFFF}' para usar el elevador.",0xFFFFFF00,2117.8604,2415.0771,31.8428,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa '{DBED16}Y{FFFFFF}' para usar el elevador.",0xFFFFFF00,2117.8604,2415.0771,36.8428,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa '{DBED16}Y{FFFFFF}' para usar el elevador.",0xFFFFFF00,2117.8604,2415.0771,40.8428,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa '{DBED16}Y{FFFFFF}' para usar el elevador.",0xFFFFFF00,2117.8604,2415.0771,44.8428,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Pulsa '{DBED16}Y{FFFFFF}' para usar el elevador.",0xFFFFFF00,2117.8604,2415.0771,48.8428,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1,-1,-1, 100.0);

	CreateDynamic3DTextLabel("{DBED16}SALA 1",0xFFFFFF00,1160.1355,-1323.6254,-8.2668,4.0);
	CreateDynamic3DTextLabel("{DBED16}SALA 2",0xFFFFFF00,1160.0181,-1333.1748,-8.2668,4.0);
	CreateDynamic3DTextLabel("{DBED16}SALA 3",0xFFFFFF00,1153.3662,-1332.9631,-8.2668,4.0);
	CreateDynamic3DTextLabel("{DBED16}SALA 4",0xFFFFFF00,1160.4609,-1342.7770,-8.2668,4.0);
	CreateDynamic3DTextLabel("{DBED16}SALA 5",0xFFFFFF00,1153.8414,-1342.8153,-8.2668,4.0);
	CreateDynamic3DTextLabel("{DBED16}SALA 6",0xFFFFFF00,1153.6920,-1351.9772,-8.2668,4.0);

	//Fin Nuevos TextLavel's//

	Puerta[0] = CreateObject(1493,-1256.8500, 2096.6799, 1245.5300,0.0000, 0.0000, 0.0000);
	Puerta[1] = CreateObject(1493,-1244.6700, 2115.6001, 1245.5200,0.0000, 0.0000, 90.0000);
	Puerta[2] = CreateObject(1493,-1244.7400, 2085.0000, 1245.5300,0.0000, 0.0000, 90.0000);
	Puerta[3] = CreateObject(1493,-1244.4800, 2087.7700, 1245.5300,0.0000, 0.0000, 0.0000);
	Puerta[4] = CreateObject(1493,-1232.5699, 2027.9100, 1245.5300,0.0000, 0.0000, 90.0000);
	barrera = CreateDynamicObject(968, 1544.6943359375, -1630.73046875, 13.27956199646, 0.000000, 90, 90);
	porton = CreateDynamicObject(11327, 1589.267700, -1638.286499, 14.816412, 0, 0, -89.800231);
	reja1 = CreateDynamicObject(971, 288.95001, 1415.96997, 12.90000,   0.00000, 0.00000, 90.00000);
	reja2 = CreateDynamicObject(971, 288.95001, 1407.13000, 12.90000,   0.00000, 0.00000, -90.00000);
	reja3 = CreateDynamicObject(971, 263.14999, 1416.05005, 13.05000,   0.00000, 0.00000, 90.00000);
	reja4 = CreateDynamicObject(971, 263.14999, 1407.20996, 13.05000,   0.00000, 0.00000, -90.00000);
	reja5 = CreateDynamicObject(971, 232.39000, 1420.75000, 13.17000,   0.00000, 0.00000, 0.00000);
	reja6 = CreateDynamicObject(971, 223.59000, 1420.75000, 13.17000,   0.00000, 0.00000, 180.00000);
	CreateButton(1582.40552, -1637.85229, 13.70560, 182);
	CreateButton(1582.40283, -1638.34985, 13.70560, 0.0);
	CreateButton(216.32980, 116.65350, 999.39240, 180);
	CreateButton(216.28259, 116.40660, 999.39240, 0.0);
	puerta_1 = CreateDynamicObject(1495, 1582.63, -1638.02, 12.41,   0.00, 0.00, 0.00);
	puerta_2 = CreateDynamicObject(1495, 216.32820, 116.53640, 998.04547,   0.00, 0.00, 0.00);
	puerta_3 = CreateDynamicObject(1495, 219.33839, 116.53640, 998.04547,   0.00, 0.00, 180.00);
	BotonesFC[1] = CreateButton(223.1140, 1429.5740, 1091.4900);
	BotonesFC[2] = CreateButton(211.4600, 1442.8979, 1091.4900);
	BotonesFC[3] = CreateButton(206.8940, 1442.9100, 1085.2300);
	BotonesFC[4] = CreateButton(201.4500, 1447.4900, 1085.2100);
	BotonesFC[5] = CreateButton(170.3860, 1450.8101, 1085.2100);
	PuertasFC[1] = CreateDynamicObject(19303, 222.24001, 1429.53003, 1091.44995, 0.00000, 0.00000, 0.00000);
	PuertasFC[2] = CreateDynamicObject(19302, 210.33000, 1442.91003, 1091.43994, 0.00000, 0.00000, 0.00000);
	PuertasFC[3] = CreateDynamicObject(19303, 206.67999, 1441.97998, 1085.08997, 0.00000, 0.00000, 90.00000);
	PuertasFC[4] = CreateDynamicObject(1495,  201.39000, 1447.70996, 1083.83997, 0.00000, 0.00000, 90.00000);
	PuertasFC[5] = CreateDynamicObject(19303, 170.35001, 1448.48999, 1085.08997, 0.00000, 0.00000, 90.00000);
	BotonesLVPD[1] = CreateButton(209.0449, 177.1701, 1003.5126);
	BotonesLVPD[2] = CreateButton(209.1364, 160.2765, 1003.5126);
	PuertasLVPD[1] = CreateDynamicObject(19302, 208.9700, 178.2600, 1003.2800, 0.0000, 0.0000, 90.0000);
	PuertasLVPD[2] = CreateDynamicObject(19303, 209.0100, 159.1100, 1003.2800, 0.0000, 0.0000, 90.0000);
	BotonesACA[1] = CreateButton(639.9840, -187.0800, 1277.1400);
	BotonesACA[2] = CreateButton(643.1800, -210.3840, 1277.1400);
    BotonesACA[3] = CreateButton(645.2700, -217.0220, 1277.1400);
	BotonesACA[4] = CreateButton(642.7260, -224.4200, 1277.1400, 90);
	BotonesACA[5] = CreateButton(642.6900, -237.2600, 1277.1400, 90);
	BotonesACA[6] = CreateButton(645.1000, -239.8460, 1277.1400, 180);
	PuertasACA[1] = CreateDynamicObject(1495, 638.090027, -187.119995, 1275.800049, 0.000000, 0.000000, 0.000000);      // 636.8300, -187.1200, 1275.8000
	PuertasACA[2] = CreateDynamicObject(1495, 645.059998, -210.229996, 1275.800049, 0.000000, 0.000000, 180.000000);    // 646.3500, -210.2300, 1275.8000
	PuertasACA[3] = CreateDynamicObject(1495, 645.114014, -217.080002, 1275.760010, 0.000000, 0.000000, 180.000000);    // 646.3920, -217.0800, 1275.7600
	PuertasACA[4] = CreateDynamicObject(1495, 642.770020, -226.110001, 1275.760010, 0.000000, 0.000000, 90.000000);     // 642.7700, -227.3580, 1275.7600
	PuertasACA[5] = CreateDynamicObject(1495, 642.750000, -237.466003, 1275.760010, 0.000000, 0.000000, -90.000000);    // 642.7500, -236.2000, 1275.7600
	PuertasACA[6] = CreateDynamicObject(1495, 645.270020, -239.779999, 1275.760010, 0.000000, 0.000000, 0.000000);      // 643.9860, -239.7800, 1275.7600
	controls[8] = CreateDynamicObject(968,833.4200, -2963.8000, 11.7460 , 0.0000, -90.0000, 0.0000 );
	controls[9] = CreateDynamicObject(968,833.4100, -2954.5200, 12.1000 , 0.0000, 90.0000, 0.0000 );
	controls[10] = CreateDynamicObject(969, -87.72000, -1127.09998, 0.30000, 0.0000, 0.0000, 70.0000);
	NPC_Tren[0] = AddStaticVehicle(538,1700.7551,-1953.6531,15.8746,200.0,1,1);
	NPC_Tren[1] = AddStaticVehicle(538,-1943.1060,162.8389,27.0006,356.9632,1,1);
	NPC_Tren[2] = AddStaticVehicle(538,1468.3735,2632.2500,12.1256,271.2534,1,1);
	NPC_Tren[3] = AddStaticVehicle(538,2864.7500,1253.2552,12.1256,181.0126,1,1);
	NPC_Tren[4] = AddStaticVehicle(431,1546.1302,-1679.9119,5.9938,179.5670,0,0);
	NPC_Tren[5] = AddStaticVehicle(431,-1581.9175,718.6185,-5.1453,0.0000,0,0);
	//NPC_Tren[5] = AddStaticVehicle(428,1480.8018,-1586.8878,13.1890,92.1206,0,0); //BLINDADO
	// Tren 1
	GetVehicleParamsEx(NPC_Tren[0], engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(NPC_Tren[0], engine, lights, alarm, 1, bonnet, boot, objective);
	// Tren 2
	GetVehicleParamsEx(NPC_Tren[1], engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(NPC_Tren[1], engine, lights, alarm, 1, bonnet, boot, objective);
	// Tren 3
	GetVehicleParamsEx(NPC_Tren[2], engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(NPC_Tren[2], engine, lights, alarm, 1, bonnet, boot, objective);
	// Tren 4
	GetVehicleParamsEx(NPC_Tren[3], engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(NPC_Tren[3], engine, lights, alarm, 1, bonnet, boot, objective);
	// Colectivo FC
	SetVehicleNumberPlate(NPC_Tren[4], "SAPD");
	bloqueado[NPC_Tren[4]] = 1;
	GetVehicleParamsEx(NPC_Tren[4], engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(NPC_Tren[4], engine, lights, alarm, 1, bonnet, boot, objective);

    Avion = CreateObject(14553, 133.52789, 2329.73804, 1954.93250,   0.00000, 0.00000, 0.00000);
	AvionInt = CreateObject(14548, 133.52789, 2329.73804, 1954.93250,   0.00000, 0.00000, 0.00000);
	T1 = CreateDynamicObject(1429, -2280.60376, -14.82680, 38.03000,   0.00000, 0.00000, 70.61990);
	T2 = CreateDynamicObject(1518, -2280.63721, -16.44526, 38.05420,   0.00000, 0.00000, 120.36000);
	T3 = CreateDynamicObject(2912, -2278.36792, -14.86620, 37.29990,   0.00000, 0.00000, -1.62000);
	T4 = CreateDynamicObject(2190, -2280.72827, -15.26394, 37.77455,   0.00000, 0.00000, 50.69999);
	T5 = CreateDynamicObject(1788, -2280.53418, -16.19723, 37.44304,   0.00000, 0.00000, -49.37999);
	T6 = CreateDynamicObject(2028, -2278.22900, -16.77450, 37.40304,   0.00000, 0.00000, 0.00000);
	T7 = CreateDynamicObject(1790, -2280.39893, -14.92786, 37.45214,   0.00000, 0.00000, 88.37997);
	T12 = CreateDynamicObject(1429, 942.56305, 1976.67395, 11.34690,   0.00000, 0.00000, -62.10000);
	T22 = CreateDynamicObject(1518, 942.44531, 1974.96301, 11.42232,   0.00000, 0.00000, -112.56001);
	T32 = CreateDynamicObject(2912, 939.79364, 1974.82947, 10.62529,   0.00000, 0.00000, 0.00000);
	T42 = CreateDynamicObject(2190, 939.99139, 1977.32190, 11.11951,   0.00000, 0.00000, 0.00000);
	T52 = CreateDynamicObject(1788, 942.32104, 1976.73279, 10.83022,   0.00000, 0.00000, -85.32000);
	T62 = CreateDynamicObject(2028, 940.09308, 1977.05005, 10.82510,   0.00000, 0.00000, 0.00000);
	T72 = CreateDynamicObject(1790, 942.38721, 1975.06116, 10.73031,   0.00000, 0.00000, -90.17999);
	T13 = CreateDynamicObject(1429, -2394.00562, -15.47150, 36.23100,   0.00000, 0.00000, 0.00000);
	T23 = CreateDynamicObject(1518, -2395.78857, -15.53133, 36.23100,   0.00000, 0.00000, 0.00000);
	T33 = CreateDynamicObject(2912, -2395.92505, -19.09909, 34.42548,   0.00000, 0.00000, 0.00000);
	T43 = CreateDynamicObject(2190, -2394.71484, -15.21817, 35.98800,   0.00000, 0.00000, 0.00000);
	T53 = CreateDynamicObject(1788, -2395.75928, -15.45650, 35.19190,   0.00000, 0.00000, 0.00000);
	T63 = CreateDynamicObject(2028, -2394.01709, -15.45650, 35.19190,   0.00000, 0.00000, 0.00000);
	T73 = CreateDynamicObject(1790, -2394.86279, -15.45650, 35.19190,   0.00000, 0.00000, 0.00000);
	T14 = CreateDynamicObject(1429, 2368.61401, -1131.40259, 30.97320,   0.00000, 0.00000, 160.32001);
	T24 = CreateDynamicObject(1518, 2370.30200, -1131.43127, 30.97320,   0.00000, 0.00000, 201.35999);
	T34 = CreateDynamicObject(2912, 2370.40674, -1129.14221, 28.96821,   0.00000, 0.00000, 0.00000);
	T44 = CreateDynamicObject(2190, 2369.12378, -1131.64221, 30.68020,   0.00000, 0.00000, 164.82001);
	T54 = CreateDynamicObject(1788, 2368.51880, -1131.42798, 29.94000,   0.00000, 0.00000, 0.00000);
	T64 = CreateDynamicObject(2028, 2370.12720, -1131.46106, 29.94000,   0.00000, 0.00000, 0.00000);
	T74 = CreateDynamicObject(1790, 2369.39893, -1131.51331, 29.46600,   0.00000, 0.00000, 0.00000);
	T15 = CreateDynamicObject(1429, -2730.06982, -59.74450, 7.20490,   0.00000, 0.00000, 196.14000);
	T25 = CreateDynamicObject(1518, -2731.72534, -59.64209, 7.20490,   0.00000, 0.00000, 178.20003);
	T35 = CreateDynamicObject(2912, -2731.85327, -57.35418, 6.03176,   0.00000, 0.00000, 0.00000);
	T45 = CreateDynamicObject(2190, -2731.16846, -59.89901, 6.93235,   0.00000, 0.00000, 174.30002);
	T55 = CreateDynamicObject(1788, -2730.06030, -59.85120, 6.16510,   0.00000, 0.00000, 0.00000);
	T65 = CreateDynamicObject(2028, -2730.97656, -59.74975, 6.60280,   0.00000, 0.00000, -2.40000);
	T75 = CreateDynamicObject(1790, -2731.64380, -59.69650, 6.16510,   0.00000, 0.00000, -5.64000);
	T16 = CreateDynamicObject(1429, -2731.07056, -164.54240, 7.68000,   0.00000, 0.00000, 196.80000);
	T26 = CreateDynamicObject(1518, -2732.74170, -164.46756, 7.68000,   0.00000, 0.00000, 164.58005);
	T36 = CreateDynamicObject(2912, -2733.24390, -163.87219, 6.20990,   0.00000, 0.00000, 0.00000);
	T46 = CreateDynamicObject(2190, -2732.13647, -164.68983, 7.42307,   0.00000, 0.00000, 182.57997);
	T56 = CreateDynamicObject(1788, -2731.10449, -164.46933, 7.08504,   0.00000, 0.00000, 0.00000);
	T66 = CreateDynamicObject(2028, -2731.81323, -164.44690, 6.67120,   0.00000, 0.00000, 0.00000);
	T76 = CreateDynamicObject(1790, -2732.57373, -164.33932, 7.12180,   0.00000, 0.00000, 0.00000);
	T17 = CreateDynamicObject(1429, 1758.10046, -2094.56860, 14.84190,   0.00000, 0.00000, 181.00000);
	T27 = CreateDynamicObject(1518, 1757.27979, -2094.54028, 14.86940,   0.00000, 0.00000, 185.00000);
	T37 = CreateDynamicObject(2912, 1756.40784, -2093.84546, 12.97720,   0.00000, 0.00000, 0.00000);
	T47 = CreateDynamicObject(2190, 1756.16321, -2094.66846, 14.58550,   0.00000, 0.00000, 160.00000);
	T57 = CreateDynamicObject(1788, 1757.77637, -2094.57056, 14.23650,   0.00000, 0.00000, 0.00000);
	T67 = CreateDynamicObject(2028, 1756.81677, -2094.56934, 14.25400,   0.00000, 0.00000, 0.00000);
	T77 = CreateDynamicObject(1790, 1757.29041, -2094.61108, 13.80020,   0.00000, 0.00000, 0.00000);
	T19 = CreateDynamicObject(1429, 1841.54749, 768.94519, 12.49500,   0.00000, 0.00000, 0.00000);
	T29 = CreateDynamicObject(1518, 1842.49048, 768.88428, 12.51880,   0.00000, 0.00000, 0.00000);
	T39 = CreateDynamicObject(2912, 1843.43506, 768.10840, 10.54610,   0.00000, 0.00000, 0.00000);
	T49 = CreateDynamicObject(2190, 1843.46643, 769.13379, 12.23620,   0.00000, 0.00000, 0.00000);
	T59 = CreateDynamicObject(1788, 1842.00537, 768.90112, 11.88750,   0.00000, 0.00000, 0.00000);
	T69 = CreateDynamicObject(2028, 1843.04565, 769.07501, 11.90490,   0.00000, 0.00000, 0.00000);
	T79 = CreateDynamicObject(1790, 1842.38196, 769.15088, 11.42320,   0.00000, 0.00000, 0.00000);
	T111 = CreateDynamicObject(1429, 1355.97156, 2613.77515, 12.45300,   0.00000, 0.00000, 0.00000);
	T211 = CreateDynamicObject(1518, 1356.83423, 2613.72314, 12.47980,   0.00000, 0.00000, 0.00000);
	T311 = CreateDynamicObject(2912, 1354.72119, 2613.42578, 11.02990,   0.00000, 0.00000, 0.00000);
	T411 = CreateDynamicObject(2190, 1357.78296, 2613.98975, 12.19500,   0.00000, 0.00000, 0.00000);
	T511 = CreateDynamicObject(1788, 1356.28943, 2613.73511, 11.84600,   0.00000, 0.00000, 0.00000);
	T611 = CreateDynamicObject(2028, 1357.32434, 2613.74854, 11.86400,   0.00000, 0.00000, 0.00000);
	T711 = CreateDynamicObject(1790, 1356.62915, 2613.61646, 11.40970,   0.00000, 0.00000, 0.00000);
	T112 = CreateDynamicObject(1429, 1678.29834, 2613.74878, 12.45260,   0.00000, 0.00000, 0.00000);
	T212 = CreateDynamicObject(1518, 1679.14563, 2613.73535, 12.48270,   0.00000, 0.00000, 0.00000);
	T312 = CreateDynamicObject(2912, 1677.09839, 2613.43970, 11.03870,   0.00000, 0.00000, 0.00000);
	T412 = CreateDynamicObject(2190, 1680.08850, 2613.91479, 12.19470,   0.00000, 0.00000, 0.00000);
	T512 = CreateDynamicObject(1788, 1678.56201, 2613.76880, 11.84410,   0.00000, 0.00000, 0.00000);
	T612 = CreateDynamicObject(2028, 1679.57751, 2613.75708, 11.86450,   0.00000, 0.00000, 0.00000);
	T712 = CreateDynamicObject(1790, 1678.98792, 2613.76904, 11.41040,   0.00000, 0.00000, 0.00000);
	T18 = CreateDynamicObject(1429, 2481.20239, -1987.11511, 14.57980,   0.00000, 0.00000, 7.80000);
	T28 = CreateDynamicObject(1518, 2482.81030, -1987.17395, 14.59980,   0.00000, 0.00000, -11.82000);
	T38 = CreateDynamicObject(2912, 2483.55371, -1988.90125, 12.62243,   0.00000, 0.00000, 0.00000);
	T48 = CreateDynamicObject(2190, 2482.27319, -1986.94861, 14.31840,   0.00000, 0.00000, 0.00000);
	T58 = CreateDynamicObject(1788, 2481.10767, -1987.15283, 13.52780,   0.00000, 0.00000, 0.00000);
	T68 = CreateDynamicObject(2028, 2481.93018, -1987.23987, 13.08109,   0.00000, 0.00000, 0.00000);
	T78 = CreateDynamicObject(1790, 2482.70459, -1987.20215, 13.52780,   0.00000, 0.00000, 0.00000);
	T88 = CreateDynamicObject(2226, 2481.90552, -1987.28687, 13.89582,   0.00000, 0.00000, 0.00000);
	T110 = CreateDynamicObject(1429, -1449.86682, 2645.77490, 56.87230,   0.00000, 0.00000, 8.10000);
	T210 = CreateDynamicObject(1518, -1448.15234, 2645.76807, 56.92000,   0.00000, 0.00000, -20.88000);
	T310 = CreateDynamicObject(2912, -1450.80640, 2642.91479, 55.52976,   0.00000, 0.00000, 0.00000);
	T410 = CreateDynamicObject(2190, -1447.24390, 2643.42358, 56.43425,   0.00000, 0.00000, -115.86000);
	T510 = CreateDynamicObject(1788, -1448.96399, 2645.68677, 56.28100,   0.00000, 0.00000, 0.00000);
	T610 = CreateDynamicObject(2028, -1449.89099, 2645.64771, 55.88598,   0.00000, 0.00000, 0.00000);
	T710 = CreateDynamicObject(1790, -1448.14539, 2645.64087, 55.85600,   0.00000, 0.00000, 0.00000);
	T810 = CreateDynamicObject(2226, -1449.01904, 2645.76733, 56.64311,   0.00000, 0.00000, 0.00000);
	PuertaRobo1 = CreateDynamicObject(1506, -2277.5667, -9.4666, 37.2482, 0.0000, 0.0000, 269.1064);
	PuertaRobo2 = CreateDynamicObject(1506, 931.28186, 1974.06372, 10.61430,   0.00000, 0.00000, 0.00000);
	PuertaRobo3 = CreateDynamicObject(1506, -2394.86670, -12.35760, 34.27060,   0.00000, 0.00000, 269.82654);
	PuertaRobo4 = CreateDynamicObject(1498, 2373.00244, -1138.55103, 29.03120,   0.00000, 0.00000, -0.95999);
	PuertaRobo5 = CreateDynamicObject(1504, -2728.5708, -50.4009, 6.0173,   0.00000, 0.00000, 269.9400);
	PuertaRobo6 = CreateDynamicObject(1506, -2728.5442, -155.0267, 6.2020,   0.00000, 0.00000, 269.7597);
	PuertaRobo7 = CreateDynamicObject(1498, 1762.12488, -2100.72290, 12.96590,   0.00000, 0.00000, 0.00000);
	PuertaRobo9 = CreateDynamicObject(1506, 1844.1000, 770.1200, 10.4400,   0.0000, 0.0000, 90.0000);
	PuertaRobo11 = CreateDynamicObject(1506, 1343.9200, 2610.7400, 10.4000,   0.0000, 0.0000, 0.0000);
	PuertaRobo12 = CreateDynamicObject(1506, 1666.2400, 2610.7400, 10.4000,   0.0000, 0.0000, 0.0000);
	PuertaRobo8 = CreateDynamicObject(1506, 2484.4492, -1996.0295, 13.2080, 0.0000, 0.0000,0.1800);
	PuertaRobo10 = CreateDynamicObject(1506, -1449.19824, 2647.20459, 55.48900,   0.00000, 0.00000, 90.00000);

	// Pickups
	CreateDynamicPickup(1318, 1, 2495.4424,-1691.1359,14.7656,0,0,-1,100.0);    	//Pandilla
	CreateDynamicPickup(1318, 1, 1122.7065,-2036.9232,69.8942,0,0,-1,100.0);    	//Mafia
	CreateDynamicPickup(1239, 1,-2024.7489,-113.9102,1038.8187,5,5,-1,100.0);		//Trabajo taxi
	CreateDynamicPickup(1239, 1,114.7220,-151.4292,1.5781,0,0,-1,100.0); 			//Trabajo Mecanico
	CreateDynamicPickup(1239, 1,-177.6093,-1549.4420,6.3284,0,0,-1,100.0); 			//Trabajo Basurero
	CreateDynamicPickup(1239, 1,2790.0251,-2574.5549,3.3469,0,0,-1,100.0); 			//Trabajo Pescador
	CreateDynamicPickup(1239, 1,1821.7529,-1280.6038,109.3594,0,0,-1,100.0); 		//Servicio Grua
	CreateDynamicPickup(1239, 1,1802.7854,-1303.8938,93.0391,0,0,-1,100.0); 		//Vender Vehiculo
	CreateDynamicPickup(1239, 1,1809.5894,-1299.8063,65.8125,0,0,-1,100.0); 		//Vender Propiedad
	CreateDynamicPickup(1247, 1, 240.4520,112.8195,1003.2188,-1,-1,-1,100.0);     	//Entregarse
	CreateDynamicPickup(1247, 1, 235.2946,166.3358,1003.0300,-1,-1,-1,100.0);     	//Entregarse LV
 	CreateDynamicPickup(1314, 1, 1147.9966,-1322.4128,-10.7922,-1,-1,-1,100.0); 	//Dentro del Hospital
	CreateDynamicPickup(1276, 1, 175.4841,-92.5689,1002.1417, -1, -1, -1, 100.0);	//Prendas
	CreateDynamicPickup(1275, 1,-170.3641,-1555.9705,6.5706,0,0,-1,100.0);  		//Ropa Basurero
	CreateDynamicPickup(1275, 1, 269.1445,295.4604,999.8400,-1,-1,-1,100.0);    	//Uniforme Minero
	CreateDynamicPickup(1275, 1,84.3491,-149.0520,2.6000,0,0,-1,100.0);				//Ropa Mecanico
	CreateDynamicPickup(1318, 0, 1423.4301,-1180.1801,25.9922,0,0,-1,100.0);	   	//Salon de Eventos
	CreatePickup(1239,0,1178.1359,-1361.3021,14.2302,0);							//Trabajo Médico
	CreatePickup(1239,0,2122.9236,-2275.1238,20.6719,0);							//Trabajo Armero
	CreatePickup(1239,0,2226.3508,-1719.0221,13.5261,0);							//Trabajo Guardaespalda
	CreatePickup(1239,0,-382.5980,2199.3918,25.4105,-1);							//Trabajo Minero
	CreatePickup(1239,0,-1715.0378,-63.1466,3.6340,0);								//Trabajo Camionero
	CreatePickup(1239,0,2583.8274,1644.3837,1087.5602,5);							//Trabajo Transportista
	CreatePickup(1279,0,2823.3486,-1420.3571,16.2562,0);							//Materiales 1 LS
	CreatePickup(1279,0,1422.6765,-1319.3438,13.5547,0);							//Materiales 2 LS
	CreatePickup(1279,0,-1735.7610,1244.9299,7.5469,0);								//Materiales 3 SF
	RopaIcono[0] = CreatePickup(1275,1,203.9402,-43.4233,1001.8047,-1);  			//Venta de Ropa
	RopaIcono[1] = CreatePickup(1275,1,207.2663,-100.3280,1005.2578,-1);  			//Venta de Ropa
	RopaIcono[2] = CreatePickup(1275,1,161.4108,-83.2519,1001.8047,-1);  			//Venta de Ropa
	RopaIcono[3] = CreatePickup(1275,1,207.1053,-129.1776,1003.5078,-1);  			//Venta de Ropa
	RopaIcono[4] = CreatePickup(1275,1,206.3747,-7.2380,1001.2109,-1);  			//Venta de Ropa
	RopaIcono[5] = CreatePickup(1275,1,204.3488,-159.3513,1000.5234,-1);  			//Venta de Ropa
	AddPlayerClass(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);

	if(HABILITAR_REGISTRO == 1) SendRconCommand("hostname "SERVER_HOSTNAME"");
	else SendRconCommand("hostname "SERVER_COIN2" Roleplay [S"SERVER_NUMBER"] Ingreso privado");
	SetGameModeText(""SERVER_COIN2":RP v"SERVER_VERSION" - Rol en español");
	SendRconCommand("mapname San Andreas");
	SendRconCommand("weburl "WEB_ROL"");
	SendRconCommand("language Español - Spanish");
	SendRconCommand("rcon_password "RCON_PSSWRD"");

 	SetNameTagDrawDistance(35.0);
	ShowNameTags(1);
	DisableInteriorEnterExits();
	ManualVehicleEngineAndLights();
	EnableStuntBonusForAll(0);
	UsePlayerPedAnims();
	AntiDeAMX();

	//Actores fábrica metanfetamina // Venta y compra de estuperfacientes.
	CreateDynamicActor(175, -1863.8221,115.7855,15.1228,264.6047, 1, 100.0, 0, 0); //Camionero 1
	CreateDynamicActor(174, -1855.9402,111.9866,15.1172,357.8773, 1, 100.0, 0, 0); // Camionero2
	CreateDynamicActor(159, -35.9745,2347.9880,24.1406,265.5083, 1, 100.0, 0, 0); // LV 1
	CreateDynamicActor(133, -32.1657,2350.0381,24.3026,188.9284, 1, 100.0, 0, 0); // LV 2
	CreateDynamicActor(108, 1084.5171,-1243.0818,15.8272,237.4417, 1, 100.0, 0, 0); // Atras HPC 1
	CreateDynamicActor(109, 1084.7194,-1247.4625,15.8272,249.2716, 1, 100.0, 0, 0);  // Atras HPC 2
	CreateDynamicActor(107, 2434.2212,-1678.4426,13.7456,48.6505, 1, 100.0, 0, 0); // Ganton 1
	CreateDynamicActor(106, 2429.9333,-1678.3491,13.7436,350.7008, 1, 100.0, 0, 0); // Ganton 2
	CreateDynamicActor(117, 1517.0229,-1464.9922,9.5000,217.3292, 1, 100.0, 0, 0); // Atras LSPD
	CreateDynamicActor(118, 1513.6154,-1468.3397,9.5000,252.2451, 1, 100.0, 0, 0);  // Atras LSPD
	CreateDynamicActor(124, 2443.1526,-1760.7987,13.5905,224.9609, 1, 100.0, 0, 0); // GYM 1
	CreateDynamicActor(125, 2446.9443,-1760.1896,13.5891,134.5076, 1, 100.0, 0, 0); // GYM 1
	CreateDynamicActor(121, 2213.5964,-2286.3254,14.7647,161.4671, 1, 100.0, 0, 0); // Armero 1
	CreateDynamicActor(122, 2216.6262,-2290.7490,14.7647,111.5373, 1, 100.0, 0, 0); // Armero 2
	CreateDynamicActor(158, -1040.6403,1557.9347,33.3431,147.7098, 1, 100.0, 0, 0); // Lejanías por LV 1
	CreateDynamicActor(161, -1043.7644,1558.5656,33.2156,223.1056, 1, 100.0, 0, 0); // Lejanías por LV 2



    Stripx[1] = CreateActor(87, 1213.2875,-3.9009,1001.3281,261.5670);
    ApplyActorAnimation(Stripx[1], "STRIP","STR_Loop_A",4.1,7,5,1,1,0);
    Stripx[2] = CreateActor(178, 1203.4840,15.9703,1000.9219,320.5953);
    SetActorVirtualWorld(Stripx[2], 2);
    ApplyActorAnimation(Stripx[2], "STRIP","STR_Loop_A",4.1,7,5,1,1,0);
    Stripx[3] = CreateActor(244, 1203.4840,15.9703,1000.9219,320.5953);
    SetActorVirtualWorld(Stripx[3], 7);
    ApplyActorAnimation(Stripx[3], "STRIP","STR_Loop_A",4.1,7,5,1,1,0);
    Stripx[4] = CreateActor(245, 1203.4840,15.9703,1000.9219,320.5953);
    SetActorVirtualWorld(Stripx[4], 4);
    ApplyActorAnimation(Stripx[4], "STRIP","STR_Loop_A",4.1,7,5,1,1,0);
    Stripx[7] = CreateActor(152, 1203.4840,15.9703,1000.9219,320.5953);
    SetActorVirtualWorld(Stripx[7], 6);
    ApplyActorAnimation(Stripx[7], "STRIP","STR_Loop_A",4.1,7,5,1,1,0);
    Stripx[8] = CreateActor(87, 1203.4840,15.9703,1000.9219,320.5953);
    SetActorVirtualWorld(Stripx[8], 3);
    ApplyActorAnimation(Stripx[8], "STRIP","STR_Loop_A",4.1,7,5,1,1,0);
    Stripx[9] = CreateActor(246, 1203.4840,15.9703,1000.9219,320.5953);
    SetActorVirtualWorld(Stripx[9], 5);
    ApplyActorAnimation(Stripx[9], "STRIP","STR_Loop_A",4.1,7,5,1,1,0);

    for(new x = 0, bx = sizeof(Stripx); x < bx; x++)
    {
        ApplyActorAnimation(Stripx[x], "STRIP","STR_B2C",4.1,7,5,1,1,0);
    }



 	//SAPD//
 	actorid[1] = CreateActor(280, 246.404174,120.395568,1003.266967,178.847152);
	actorid[2] = CreateActor(307, 238.564437,112.894973,1003.218750,268.148071);
	actorid[3] = CreateActor(300, 253.797485,117.371421,1003.218750,93.306335);
	actorid[4] = CreateActor(71, 219.338485,116.030166,999.015625,180.895050);

					//Salón de eventos//
	actorid[6] = CreateActor(64, 1208.2064,-6.2447,1001.3281,180.9896);
	actorid[7] = CreateActor(85, 1221.3612,8.5217,1001.3356,131.3608);
	actorid[8] = CreateActor(152, 1215.6638,-6.3362,1001.3281,95.1821);
	actorid[9] = CreateActor(178, 1219.7606,-6.4455,1001.3281,178.2887);

					//Pizzería//
	actorid[10] = CreateActor(155, 373.7149,-117.2781,1001.4995,177.6028);
	actorid[11] = CreateActor(155, -1260.9850,2121.6504,1246.5457,181.7688);
	actorid[12] = CreateActor(25, -1253.4526,2118.3821,1246.5457,175.7945);
	actorid[13] = CreateActor(163, -1245.2422,2116.1465,1246.5457,29.4371);
	actorid[14] = CreateActor(223, -1248.9423,2095.2004,1246.6360,72.3647);

	//Guardia3 LVPD
	Guardia3 = CreateActor(282, 2238.222412, 2449.497802, 11.037217, 89.597267);
	SetActorVirtualWorld(Guardia3, 0);
	//Guardia4 camionero
	Guardia4 = CreateActor(71, -1674.989624, 5.721164, 3.554687, 226.057571);
	SetActorVirtualWorld(Guardia4, 0);
	Guardia6 = CreateActor(267, -1701.200439, 688.873352, 24.890625, 84.270515);
	SetActorVirtualWorld(Guardia6, 0);
	Guardia7 = CreateActor(301, -1572.609497, 657.566528, 7.187500, 274.657836);
	SetActorVirtualWorld(Guardia7, 0);
	Guardia8 = CreateActor(281, 233.047821, 166.339050, 1003.023437, 268.459442);
	SetActorVirtualWorld(Guardia8, 7);
	Entrenador = CreateActor(49, 761.044006, -31.975740, 1000.585937, 268.381744);
	SetActorVirtualWorld(Entrenador, 0);
	Entrenador2 = CreateActor(81, 763.955139, -75.041831, 1000.656250, 357.676940);
	SetActorVirtualWorld(Entrenador2, 0);

	//actores by Prócton
	CreateActor(57, 1810.978393, -1300.798950, 65.812500, 51.239631);
	CreateActor(3, 1804.497436, -1303.756591, 93.039062, 87.539863);
	CreateActor(141, 1803.932373, -1287.233032, 13.642095, 114.823440);
	CreateActor(225, 2785.956054, -2577.147216, 3.191699, 46.244449);
	CreateActor(80, 767.066894, 14.329621, 1000.700012, 181.610961);
	CreateActor(71, 2704.813964, -2514.520263, 13.649707, 89.008201);
	CreateActor(131, -32.635578, 53.932895, 3.117187, 341.870483);
	CreateActor(128, 216.828369, -233.098983, 1.778618, 358.369598);
	CreateActor(261, 194.831649, -231.076309, 1.778618, 273.142181);
	//actores fabrica
	CreateActor(30, 35.614139, -292.886352, 2.114686, 283.343627);
	CreateActor(47, 59.118892, -294.536254, 1.578125, 2.304267);
	CreateActor(183, 83.618896, -315.884796, 1.578125, 359.315856);
	CreateActor(202, 93.779579, -311.980926, 1.578125, 89.556777);
	Vendedor13 = CreateActor(179, 312.490905, -167.783172, 999.593750, 359.249298);
	SetActorVirtualWorld(Vendedor13, 0);
	Guardia12 = CreateActor(71, -76.284889, -382.248352, 5.366365, 92.477394);
	SetActorVirtualWorld(Guardia12, 0);
	Bartender = CreateActor(172, 498.725891, -77.584426, 998.765075, 3.225796);
	SetActorVirtualWorld(Bartender, 12);
	CreateActor(147, 1774.523071, -1302.768554, 93.032035, 273.687530);
	Mujeraservicio = CreateActor(191, -31.431865, -184.566009, 1007.729980, 268.549011);
	SetActorVirtualWorld(Mujeraservicio, 4);
	Vendedor = CreateActor(14, -28.077777, -91.639190, 1003.546875, 359.708587);
	SetActorVirtualWorld(Vendedor, 1);

	Ropa = CreateActor(211, 203.786010, -41.670055, 1001.804687, 178.299682);
	SetActorVirtualWorld(Ropa, 1);
	Ropa1 = CreateActor(59, 161.378799, -81.187858, 1001.804687, 178.768203);
	SetActorVirtualWorld(Ropa1, 0);
	SexChop = CreateActor(178, -103.831764, -24.206600, 1000.718750, 358.637145);
	SetActorVirtualWorld(SexChop, 3);
	Pizzero = CreateActor(155, 373.713592, -117.277214, 1001.499511, 175.337875);
	SetActorVirtualWorld(Pizzero, 8);

	SexChop1 = CreateActor(178, -103.947181, -24.202547, 1000.718750, 354.775268);
	SetActorVirtualWorld(SexChop1, 6);
	Ropa2 = CreateActor(217, 207.005859, -127.806877, 1003.507812, 178.850387);
	SetActorVirtualWorld(Ropa2, 0);
	Ropa3 = CreateActor(147, 204.219696, -157.829269, 1000.523437, 178.497406);
	SetActorVirtualWorld(Ropa3, 0);
	Ropa4 = CreateActor(57, 204.853439, -8.178521, 1001.210937, 274.187225);
	SetActorVirtualWorld(Ropa4, 0);
	Ropa5 = CreateActor(12, 206.483566, -8.373984, 1005.210937, 269.173858);
	SetActorVirtualWorld(Ropa5, 0);
	Hombreemisora = CreateActor(3, 393.601165, 183.666946, 1040.115600, 358.571380);
	SetActorVirtualWorld(Hombreemisora, 5);
	IslaSeguridad = CreateActor(71, 833.686462, -2958.572998, 12.137064, 55.661621);
	SetActorVirtualWorld(IslaSeguridad, 0);
	IslaSeguridad2 = CreateActor(71, 833.256469, -2959.604736, 12.121186, 218.549713);
	SetActorVirtualWorld(IslaSeguridad2, 0);

	Ropa6 = CreateActor(211, 207.247711, -98.695877, 1005.257812, 179.438369);
	SetActorVirtualWorld(Ropa6, 3);
	Bartender2 = CreateActor(171, 498.741241, -77.575759, 998.765075, 356.351928);
	SetActorVirtualWorld(Bartender2, 9);
	Bartender3 = CreateActor(172, 498.743438, -77.575439, 998.765075, 355.912750);
	SetActorVirtualWorld(Bartender3, 3);
	Pizzero2 = CreateActor(155, 373.878448, -117.274963, 1001.499511, 182.179336);
	SetActorVirtualWorld(Pizzero2, 1);
	Pizzero3 = CreateActor(155, 373.745330, -117.278190, 1001.499511, 181.478179);
	SetActorVirtualWorld(Pizzero3, 2);
	Pizzero4 = CreateActor(155, 373.888671, -117.276191, 1001.499511, 180.973785);
	SetActorVirtualWorld(Pizzero4, 3);

	Hombreherramientas = CreateActor(6, -1072.122314, 356.011322, 1180.525878, 177.469421);
	SetActorVirtualWorld(Hombreherramientas, 1);
	Pizzero5 = CreateActor(155, 373.743530, -117.274047, 1001.499511, 180.323257);
	SetActorVirtualWorld(Pizzero5, 12);
	Pizzero6 = CreateActor(155, 373.967193, -117.276840, 1001.499511, 180.984771);
	SetActorVirtualWorld(Pizzero6, 11);
	Pizzero7 = CreateActor(155, 373.751953, -117.278015, 1001.499511, 180.435226);
	SetActorVirtualWorld(Pizzero7, 10);

	Pizzero8 = CreateActor(155, 373.827239, -117.277244, 1001.499511, 178.962585);
	SetActorVirtualWorld(Pizzero8 , 5);

	Vendedor1 = CreateActor(171, -31.431077, -184.703506, 1007.729980, 267.866790);
	SetActorVirtualWorld(Vendedor1, 1);
	Vendedor3 = CreateActor(6, -31.427513, -184.946411, 1007.729980, 270.554992);
	SetActorVirtualWorld(Vendedor3, 3);
	Vendedor4 = CreateActor(20, -31.430753, -184.621612, 1007.729980, 272.167755);
	SetActorVirtualWorld(Vendedor4, 4);
	Vendedor7 = CreateActor(14, -31.429960, -184.592224, 1007.729980, 268.276092);
	SetActorVirtualWorld(Vendedor7, 10);
	Vendedor9 = CreateActor(171, -31.431217, -184.576644, 1007.729980, 271.977111);
	SetActorVirtualWorld(Vendedor9, 9);
	Vendedor11 = CreateActor(2, -31.436372, -184.516876, 1007.729980, 275.024963);
	SetActorVirtualWorld(Vendedor11, 8);
	Vendedor12 = CreateActor(11, -31.431625, -184.627548, 1007.729980, 275.619964);
	SetActorVirtualWorld(Vendedor12, 7);

	Vendedor8 = CreateActor(171, 498.636047, -77.582130, 998.765075, 359.484130);
	SetActorVirtualWorld(Vendedor8, 6);

	Vendedor2 = CreateActor(58, -27.3935,-91.7651,1003.5469,16.4845);
	SetActorVirtualWorld(Vendedor2, 2);
	Vendedor5 = CreateActor(11, -27.3935,-91.7651,1003.5469,16.4845);
	SetActorVirtualWorld(Vendedor5, 4);
	Vendedor6 = CreateActor(15, -27.3935,-91.7651,1003.5469,16.4845);
	SetActorVirtualWorld(Vendedor6, 8);
	Vendedor10 = CreateActor(58, -27.3935,-91.7651,1003.5469,16.4845);
	SetActorVirtualWorld(Vendedor10, 9);

	Guardia8 = CreateActor(306, 219.108505, 1416.221191, 1091.199951, 76.925292);
	SetActorVirtualWorld(Guardia8, 15);
	Guardia9 = CreateActor(71, 208.504180, 1452.900756, 1091.197753, 88.471954);
	SetActorVirtualWorld(Guardia9, 15);
	Guardia10 = CreateActor(71, 208.498901, 1449.783691, 1091.197753, 122.625602);
	ApplyActorAnimation(Guardia10, "ped", "SEAT_down", 4.000000, 0, 0, 0, 1, 0);
	SetActorVirtualWorld(Guardia10, 15);
	Guardia11 = CreateActor(71, 208.150924, 1446.485351, 1091.197753, 38.604736);
	ApplyActorAnimation(Guardia11, "ped", "SEAT_down", 4.000000, 0, 0, 0, 1, 0);
	SetActorVirtualWorld(Guardia11, 15);
	Minero = CreateActor(153, -384.346038, 2199.279052, 25.410528, 269.214111);
	SetActorVirtualWorld(Minero, 1);
	Minero1 = CreateActor(27, -381.239776, 2193.452880, 25.410528, 354.273162);
	ApplyActorAnimation(Minero1, "ped", "SEAT_down", 4.000000, 0, 0, 0, 1, 0);
	SetActorVirtualWorld(Minero1, 1);
	Avionista = CreateActor(61, 415.143218, 2537.129150, 19.148437, 151.044891);
	SetActorVirtualWorld(Avionista, 0);
	CreateActor(163, 1222.399536, 4.901185, 1000.921875, 99.739120);  //Seguridad
	CreateActor(163, 1200.141601, 12.485798, 1000.921875, 268.917297);  //Seguridad
	Tenderoclub = CreateActor(171, 1215.828491, -15.262692, 1000.921875, 351.662811);
	SetActorVirtualWorld(Tenderoclub, 12);
	Tenderoclub1 = CreateActor(172, 1214.182128, -15.262692, 1000.921875, 5.835427);
	SetActorVirtualWorld(Tenderoclub1, 12);
	Tenderoclub2 = CreateActor(11, 2197.557617, 1603.774169, 1005.062500, 271.538482);
	SetActorVirtualWorld(Tenderoclub2, 0);
	Bartender4 = CreateActor(172, 1953.789916, 1017.447448, 992.468750, 271.515106);
	SetActorVirtualWorld(Bartender4, 0);
	Chicataxista = CreateActor(150, -2023.212890, -113.827125, 1038.818725, 114.691848);
	ApplyActorAnimation(Chicataxista, "ped", "SEAT_down", 4.000000, 0, 0, 0, 1, 0);
	SetActorVirtualWorld(Chicataxista, 5);

	SetActorVirtualWorld(actorid[1], 1);
	SetActorVirtualWorld(actorid[2], 1);
	SetActorVirtualWorld(actorid[3], 1);
	SetActorVirtualWorld(actorid[4], 1);
	SetActorVirtualWorld(actorid[5], 0);
	SetActorVirtualWorld(actorid[10], 9);
	SetActorVirtualWorld(actorid[11], 1);
	SetActorVirtualWorld(actorid[12], 1);
	SetActorVirtualWorld(actorid[13], 1);

	SetActorVirtualWorld(actorid[6], 12);
	ApplyActorAnimation(actorid[6], "STRIP","STR_Loop_A", 4.1,1,0,0,1,0);
	SetActorVirtualWorld(actorid[7], 12);
	ApplyActorAnimation(actorid[7], "STRIP","STR_Loop_A", 4.1,1,0,0,1,0);
	SetActorVirtualWorld(actorid[8], 12);
	ApplyActorAnimation(actorid[8], "STRIP","STR_Loop_A", 4.1,1,0,0,1,0);
	SetActorVirtualWorld(actorid[9], 12);
	ApplyActorAnimation(actorid[9], "STRIP","STR_Loop_A", 4.1,1,0,0,1,0);
	SetActorVirtualWorld(actorid[14], 1);
	ApplyActorAnimation(actorid[14], "ped", "SEAT_down", 4.1,0,0,0,1,0);

  	Sangre = TextDrawCreate(430.000000, 100.000000, "particle:bloodpool_64");
	TextDrawLetterSize(Sangre, 0.480000, 1.120000);
	TextDrawTextSize(Sangre, 160.000000, 200.000000);
	TextDrawAlignment(Sangre, 0);
	TextDrawColor(Sangre, 0xE1E1E1FF);
	TextDrawUseBox(Sangre, 0);
	TextDrawBoxColor(Sangre, 0x80808080);
	TextDrawSetShadow(Sangre, 2);
	TextDrawSetOutline(Sangre, 0);
	TextDrawBackgroundColor(Sangre, 0x000000FF);
	TextDrawFont(Sangre, 4);
	TextDrawSetProportional(Sangre, 1);
	TextDrawSetSelectable(Sangre, 0);

    Sangre2 = TextDrawCreate(329.654449, -10.083308, "");
 	TextDrawLetterSize(Sangre2, 0.000000, 0.000000);
    TextDrawTextSize(Sangre2, 365.000000, 433.000000);
    TextDrawAlignment(Sangre2, 1);
    TextDrawColor(Sangre2, 0x032806FF);
    TextDrawSetShadow(Sangre2, 0);
    TextDrawSetOutline(Sangre2, 0);
    TextDrawBackgroundColor(Sangre2, 0);
    TextDrawFont(Sangre2, 5);
    TextDrawSetProportional(Sangre2, 0);
    TextDrawSetShadow(Sangre2, 0);
    TextDrawSetPreviewModel(Sangre2, 19836);
    TextDrawSetPreviewRot(Sangre2, 83.400001, 23.000000, -90.000000, 1.000000);

    cPrendas[0] = TextDrawCreate(133.000000, 140.000000, "                              ~n~");
	TextDrawLetterSize(cPrendas[0], 5.000000, 4.750000);
	TextDrawTextSize(cPrendas[0], 500.000000, 250.000000);
	TextDrawAlignment(cPrendas[0], 0);
	TextDrawColor(cPrendas[0], 0x000000FF);
	TextDrawUseBox(cPrendas[0], 1);
	TextDrawBoxColor(cPrendas[0], 0xFFB923BB);
	TextDrawSetShadow(cPrendas[0], 0);
	TextDrawSetOutline(cPrendas[0], 0);
	TextDrawBackgroundColor(cPrendas[0], 0xFFB923BB);
	TextDrawFont(cPrendas[0], 0);
	TextDrawSetProportional(cPrendas[0], 1);
	TextDrawSetSelectable(cPrendas[0], 0);

	cPrendas[1] = TextDrawCreate(151.058914, 113.166679, "PRENDAS");
	TextDrawLetterSize(cPrendas[1], 0.527646, 2.719995);
	TextDrawTextSize(cPrendas[1], -2.823529, -0.583334);
	TextDrawAlignment(cPrendas[1], 1);
	TextDrawColor(cPrendas[1], -1547771137);
	TextDrawUseBox(cPrendas[1], true);
	TextDrawBoxColor(cPrendas[1], 0);
	TextDrawSetShadow(cPrendas[1], 0);
	TextDrawSetOutline(cPrendas[1], 2);
	TextDrawBackgroundColor(cPrendas[1], 51);
	TextDrawFont(cPrendas[1], 2);
	TextDrawSetProportional(cPrendas[1], 1);

	cPrendas[2] = TextDrawCreate(134.000000, 141.000000, "");
	TextDrawLetterSize(cPrendas[2], 0.480000, 1.120000);
	TextDrawTextSize(cPrendas[2], 60.000000, 70.000000);
	TextDrawAlignment(cPrendas[2], 0);
	TextDrawColor(cPrendas[2], 0xFFFFFFFF);
	TextDrawUseBox(cPrendas[2], 0);
	TextDrawBoxColor(cPrendas[2], 0x80808080);
	TextDrawSetShadow(cPrendas[2], 2);
	TextDrawSetOutline(cPrendas[2], 0);
	TextDrawBackgroundColor(cPrendas[2], 0xFFFFFF99);
	TextDrawFont(cPrendas[2], 5);
	TextDrawSetProportional(cPrendas[2], 1);
	TextDrawSetSelectable(cPrendas[2], 1);
	TextDrawSetPreviewModel(cPrendas[2], 18897);
	TextDrawSetPreviewRot(cPrendas[2], 30.000000, 90.000000, 90.000000, 1.000000);

	cPrendas[3] = TextDrawCreate(134.000000, 212.000000, "");
	TextDrawLetterSize(cPrendas[3], 0.480000, 1.120000);
	TextDrawTextSize(cPrendas[3], 60.000000, 70.000000);
	TextDrawAlignment(cPrendas[3], 0);
	TextDrawColor(cPrendas[3], 0xFFFFFFFF);
	TextDrawUseBox(cPrendas[3], 0);
	TextDrawBoxColor(cPrendas[3], 0x80808080);
	TextDrawSetShadow(cPrendas[3], 2);
	TextDrawSetOutline(cPrendas[3], 0);
	TextDrawBackgroundColor(cPrendas[3], 0xFFFFFF99);
	TextDrawFont(cPrendas[3], 5);
	TextDrawSetProportional(cPrendas[3], 1);
	TextDrawSetSelectable(cPrendas[3], 1);
	TextDrawSetPreviewModel(cPrendas[3], 18939);
	TextDrawSetPreviewRot(cPrendas[3], 80.000000, 0.000000, 90.000000, 1.000000);

	cPrendas[4] = TextDrawCreate(439.000000, 283.000000, "");
	TextDrawLetterSize(cPrendas[4], 0.480000, 1.120000);
	TextDrawTextSize(cPrendas[4], 60.000000, 70.000000);
	TextDrawAlignment(cPrendas[4], 0);
	TextDrawColor(cPrendas[4], 0xFFFFFFFF);
	TextDrawUseBox(cPrendas[4], 0);
	TextDrawBoxColor(cPrendas[4], 0x80808080);
	TextDrawSetShadow(cPrendas[4], 2);
	TextDrawSetOutline(cPrendas[4], 0);
	TextDrawBackgroundColor(cPrendas[4], 0xFFFFFF99);
	TextDrawFont(cPrendas[4], 5);
	TextDrawSetProportional(cPrendas[4], 1);
	TextDrawSetSelectable(cPrendas[4], 1);
	TextDrawSetPreviewModel(cPrendas[4], 18979);
	TextDrawSetPreviewRot(cPrendas[4], -10.000000, 0.000000, 30.000000, 1.000000);

	cPrendas[5] = TextDrawCreate(195.000000, 141.000000, "");
	TextDrawLetterSize(cPrendas[5], 0.480000, 1.120000);
	TextDrawTextSize(cPrendas[5], 60.000000, 70.000000);
	TextDrawAlignment(cPrendas[5], 0);
	TextDrawColor(cPrendas[5], 0xFFFFFFFF);
	TextDrawUseBox(cPrendas[5], 0);
	TextDrawBoxColor(cPrendas[5], 0x80808080);
	TextDrawSetShadow(cPrendas[5], 2);
	TextDrawSetOutline(cPrendas[5], 0);
	TextDrawBackgroundColor(cPrendas[5], 0xFFFFFF99);
	TextDrawFont(cPrendas[5], 5);
	TextDrawSetProportional(cPrendas[5], 1);
	TextDrawSetSelectable(cPrendas[5], 1);
	TextDrawSetPreviewModel(cPrendas[5], 18898);
	TextDrawSetPreviewRot(cPrendas[5], 30.000000, 90.000000, 90.000000, 1.000000);

	cPrendas[6] = TextDrawCreate(195.000000, 212.000000, "");
	TextDrawLetterSize(cPrendas[6], 0.480000, 1.120000);
	TextDrawTextSize(cPrendas[6], 60.000000, 70.000000);
	TextDrawAlignment(cPrendas[6], 0);
	TextDrawColor(cPrendas[6], 0xFFFFFFFF);
	TextDrawUseBox(cPrendas[6], 0);
	TextDrawBoxColor(cPrendas[6], 0x80808080);
	TextDrawSetShadow(cPrendas[6], 2);
	TextDrawSetOutline(cPrendas[6], 0);
	TextDrawBackgroundColor(cPrendas[6], 0xFFFFFF99);
	TextDrawFont(cPrendas[6], 5);
	TextDrawSetProportional(cPrendas[6], 1);
	TextDrawSetSelectable(cPrendas[6], 1);
	TextDrawSetPreviewModel(cPrendas[6], 18942);
	TextDrawSetPreviewRot(cPrendas[6], 80.000000, 0.000000, 90.000000, 1.000000);

	cPrendas[7] = TextDrawCreate(195.000000, 283.000000, "");
	TextDrawLetterSize(cPrendas[7], 0.480000, 1.120000);
	TextDrawTextSize(cPrendas[7], 60.000000, 70.000000);
	TextDrawAlignment(cPrendas[7], 0);
	TextDrawColor(cPrendas[7], 0xFFFFFFFF);
	TextDrawUseBox(cPrendas[7], 0);
	TextDrawBoxColor(cPrendas[7], 0x80808080);
	TextDrawSetShadow(cPrendas[7], 2);
	TextDrawSetOutline(cPrendas[7], 0);
	TextDrawBackgroundColor(cPrendas[7], 0xFFFFFF99);
	TextDrawFont(cPrendas[7], 5);
	TextDrawSetProportional(cPrendas[7], 1);
	TextDrawSetSelectable(cPrendas[7], 1);
	TextDrawSetPreviewModel(cPrendas[7], 18971);
	TextDrawSetPreviewRot(cPrendas[7], -10.000000, 0.000000, 30.000000, 1.000000);

	cPrendas[8] = TextDrawCreate(256.000000, 141.000000, "");
	TextDrawLetterSize(cPrendas[8], 0.480000, 1.120000);
	TextDrawTextSize(cPrendas[8], 60.000000, 70.000000);
	TextDrawAlignment(cPrendas[8], 0);
	TextDrawColor(cPrendas[8], 0xFFFFFFFF);
	TextDrawUseBox(cPrendas[8], 0);
	TextDrawBoxColor(cPrendas[8], 0x80808080);
	TextDrawSetShadow(cPrendas[8], 2);
	TextDrawSetOutline(cPrendas[8], 0);
	TextDrawBackgroundColor(cPrendas[8], 0xFFFFFF99);
	TextDrawFont(cPrendas[8], 5);
	TextDrawSetProportional(cPrendas[8], 1);
	TextDrawSetSelectable(cPrendas[8], 1);
	TextDrawSetPreviewModel(cPrendas[8], 18899);
	TextDrawSetPreviewRot(cPrendas[8], 30.000000, 90.000000, 90.000000, 1.000000);

	cPrendas[9] = TextDrawCreate(317.000000, 141.000000, "");
	TextDrawLetterSize(cPrendas[9], 0.480000, 1.120000);
	TextDrawTextSize(cPrendas[9], 60.000000, 70.000000);
	TextDrawAlignment(cPrendas[9], 0);
	TextDrawColor(cPrendas[9], 0xFFFFFFFF);
	TextDrawUseBox(cPrendas[9], 0);
	TextDrawBoxColor(cPrendas[9], 0x80808080);
	TextDrawSetShadow(cPrendas[9], 2);
	TextDrawSetOutline(cPrendas[9], 0);
	TextDrawBackgroundColor(cPrendas[9], 0xFFFFFF99);
	TextDrawFont(cPrendas[9], 5);
	TextDrawSetProportional(cPrendas[9], 1);
	TextDrawSetSelectable(cPrendas[9], 1);
	TextDrawSetPreviewModel(cPrendas[9], 18913);
	TextDrawSetPreviewRot(cPrendas[9], 110.000000, 170.000000, 0.000000, 1.000000);

	cPrendas[10] = TextDrawCreate(378.000000, 141.000000, "");
	TextDrawLetterSize(cPrendas[10], 0.480000, 1.120000);
	TextDrawTextSize(cPrendas[10], 60.000000, 70.000000);
	TextDrawAlignment(cPrendas[10], 0);
	TextDrawColor(cPrendas[10], 0xFFFFFFFF);
	TextDrawUseBox(cPrendas[10], 0);
	TextDrawBoxColor(cPrendas[10], 0x80808080);
	TextDrawSetShadow(cPrendas[10], 2);
	TextDrawSetOutline(cPrendas[10], 0);
	TextDrawBackgroundColor(cPrendas[10], 0xFFFFFF99);
	TextDrawFont(cPrendas[10], 5);
	TextDrawSetProportional(cPrendas[10], 1);
	TextDrawSetSelectable(cPrendas[10], 1);
	TextDrawSetPreviewModel(cPrendas[10], 18917);
	TextDrawSetPreviewRot(cPrendas[10], 110.000000, 170.000000, 0.000000, 1.000000);

	cPrendas[11] = TextDrawCreate(439.000000, 141.000000, "");
	TextDrawLetterSize(cPrendas[11], 0.480000, 1.120000);
	TextDrawTextSize(cPrendas[11], 60.000000, 70.000000);
	TextDrawAlignment(cPrendas[11], 0);
	TextDrawColor(cPrendas[11], 0xFFFFFFFF);
	TextDrawUseBox(cPrendas[11], 0);
	TextDrawBoxColor(cPrendas[11], 0x80808080);
	TextDrawSetShadow(cPrendas[11], 2);
	TextDrawSetOutline(cPrendas[11], 0);
	TextDrawBackgroundColor(cPrendas[11], 0xFFFFFF99);
	TextDrawFont(cPrendas[11], 5);
	TextDrawSetProportional(cPrendas[11], 1);
	TextDrawSetSelectable(cPrendas[11], 1);
	TextDrawSetPreviewModel(cPrendas[11], 18918);
	TextDrawSetPreviewRot(cPrendas[11], 110.000000, 170.000000, 0.000000, 1.000000);

	cPrendas[12] = TextDrawCreate(256.000000, 212.000000, "");
	TextDrawLetterSize(cPrendas[12], 0.480000, 1.120000);
	TextDrawTextSize(cPrendas[12], 60.000000, 70.000000);
	TextDrawAlignment(cPrendas[12], 0);
	TextDrawColor(cPrendas[12], 0xFFFFFFFF);
	TextDrawUseBox(cPrendas[12], 0);
	TextDrawBoxColor(cPrendas[12], 0x80808080);
	TextDrawSetShadow(cPrendas[12], 2);
	TextDrawSetOutline(cPrendas[12], 0);
	TextDrawBackgroundColor(cPrendas[12], 0xFFFFFF99);
	TextDrawFont(cPrendas[12], 5);
	TextDrawSetProportional(cPrendas[12], 1);
	TextDrawSetSelectable(cPrendas[12], 1);
	TextDrawSetPreviewModel(cPrendas[12], 18943);
	TextDrawSetPreviewRot(cPrendas[12], 80.000000, 0.000000, 90.000000, 1.000000);

	cPrendas[13] = TextDrawCreate(317.000000, 212.000000, "");
	TextDrawLetterSize(cPrendas[13], 0.480000, 1.120000);
	TextDrawTextSize(cPrendas[13], 60.000000, 70.000000);
	TextDrawAlignment(cPrendas[13], 0);
	TextDrawColor(cPrendas[13], 0xFFFFFFFF);
	TextDrawUseBox(cPrendas[13], 0);
	TextDrawBoxColor(cPrendas[13], 0x80808080);
	TextDrawSetShadow(cPrendas[13], 2);
	TextDrawSetOutline(cPrendas[13], 0);
	TextDrawBackgroundColor(cPrendas[13], 0xFFFFFF99);
	TextDrawFont(cPrendas[13], 5);
	TextDrawSetProportional(cPrendas[13], 1);
	TextDrawSetSelectable(cPrendas[13], 1);
	TextDrawSetPreviewModel(cPrendas[13], 18961);
	TextDrawSetPreviewRot(cPrendas[13], -10.000000, 0.000000, 30.000000, 1.000000);

	cPrendas[14] = TextDrawCreate(378.000000, 212.000000, "");
	TextDrawLetterSize(cPrendas[14], 0.480000, 1.120000);
	TextDrawTextSize(cPrendas[14], 60.000000, 70.000000);
	TextDrawAlignment(cPrendas[14], 0);
	TextDrawColor(cPrendas[14], 0xFFFFFFFF);
	TextDrawUseBox(cPrendas[14], 0);
	TextDrawBoxColor(cPrendas[14], 0x80808080);
	TextDrawSetShadow(cPrendas[14], 2);
	TextDrawSetOutline(cPrendas[14], 0);
	TextDrawBackgroundColor(cPrendas[14], 0xFFFFFF99);
	TextDrawFont(cPrendas[14], 5);
	TextDrawSetProportional(cPrendas[14], 1);
	TextDrawSetSelectable(cPrendas[14], 1);
	TextDrawSetPreviewModel(cPrendas[14], 18962);
	TextDrawSetPreviewRot(cPrendas[14], 80.000000, 0.000000, 90.000000, 1.000000);

	cPrendas[15] = TextDrawCreate(439.000000, 212.000000, "");
	TextDrawLetterSize(cPrendas[15], 0.480000, 1.120000);
	TextDrawTextSize(cPrendas[15], 60.000000, 70.000000);
	TextDrawAlignment(cPrendas[15], 0);
	TextDrawColor(cPrendas[15], 0xFFFFFFFF);
	TextDrawUseBox(cPrendas[15], 0);
	TextDrawBoxColor(cPrendas[15], 0x80808080);
	TextDrawSetShadow(cPrendas[15], 2);
	TextDrawSetOutline(cPrendas[15], 0);
	TextDrawBackgroundColor(cPrendas[15], 0xFFFFFF99);
	TextDrawFont(cPrendas[15], 5);
	TextDrawSetProportional(cPrendas[15], 1);
	TextDrawSetSelectable(cPrendas[15], 1);
	TextDrawSetPreviewModel(cPrendas[15], 18965);
	TextDrawSetPreviewRot(cPrendas[15], -10.000000, 0.000000, 30.000000, 1.000000);

	cPrendas[16] = TextDrawCreate(256.000000, 283.000000, "");
	TextDrawLetterSize(cPrendas[16], 0.480000, 1.120000);
	TextDrawTextSize(cPrendas[16], 60.000000, 70.000000);
	TextDrawAlignment(cPrendas[16], 0);
	TextDrawColor(cPrendas[16], 0xFFFFFFFF);
	TextDrawUseBox(cPrendas[16], 0);
	TextDrawBoxColor(cPrendas[16], 0x80808080);
	TextDrawSetShadow(cPrendas[16], 2);
	TextDrawSetOutline(cPrendas[16], 0);
	TextDrawBackgroundColor(cPrendas[16], 0xFFFFFF99);
	TextDrawFont(cPrendas[16], 5);
	TextDrawSetProportional(cPrendas[16], 1);
	TextDrawSetSelectable(cPrendas[16], 1);
	TextDrawSetPreviewModel(cPrendas[16], 18972);
	TextDrawSetPreviewRot(cPrendas[16], -10.000000, 0.000000, 30.000000, 1.000000);

	cPrendas[17] = TextDrawCreate(317.000000, 283.000000, "");
	TextDrawLetterSize(cPrendas[17], 0.480000, 1.120000);
	TextDrawTextSize(cPrendas[17], 60.000000, 70.000000);
	TextDrawAlignment(cPrendas[17], 0);
	TextDrawColor(cPrendas[17], 0xFFFFFFFF);
	TextDrawUseBox(cPrendas[17], 0);
	TextDrawBoxColor(cPrendas[17], 0x80808080);
	TextDrawSetShadow(cPrendas[17], 2);
	TextDrawSetOutline(cPrendas[17], 0);
	TextDrawBackgroundColor(cPrendas[17], 0xFFFFFF99);
	TextDrawFont(cPrendas[17], 5);
	TextDrawSetProportional(cPrendas[17], 1);
	TextDrawSetSelectable(cPrendas[17], 1);
	TextDrawSetPreviewModel(cPrendas[17], 18974);
	TextDrawSetPreviewRot(cPrendas[17], -10.000000, 0.000000, 30.000000, 1.000000);

	cPrendas[18] = TextDrawCreate(378.000000, 283.000000, "");
	TextDrawLetterSize(cPrendas[18], 0.480000, 1.120000);
	TextDrawTextSize(cPrendas[18], 60.000000, 70.000000);
	TextDrawAlignment(cPrendas[18], 0);
	TextDrawColor(cPrendas[18], 0xFFFFFFFF);
	TextDrawUseBox(cPrendas[18], 0);
	TextDrawBoxColor(cPrendas[18], 0x80808080);
	TextDrawSetShadow(cPrendas[18], 2);
	TextDrawSetOutline(cPrendas[18], 0);
	TextDrawBackgroundColor(cPrendas[18], 0xFFFFFF99);
	TextDrawFont(cPrendas[18], 5);
	TextDrawSetProportional(cPrendas[18], 1);
	TextDrawSetSelectable(cPrendas[18], 1);
	TextDrawSetPreviewModel(cPrendas[18], 18976);
	TextDrawSetPreviewRot(cPrendas[18], -10.000000, 0.000000, 30.000000, 1.000000);

	cPrendas[19] = TextDrawCreate(134.000000, 283.000000, "");
	TextDrawLetterSize(cPrendas[19], 0.480000, 1.120000);
	TextDrawTextSize(cPrendas[19], 60.000000, 70.000000);
	TextDrawAlignment(cPrendas[19], 0);
	TextDrawColor(cPrendas[19], 0xFFFFFFFF);
	TextDrawUseBox(cPrendas[19], 0);
	TextDrawBoxColor(cPrendas[19], 0x80808080);
	TextDrawSetShadow(cPrendas[19], 2);
	TextDrawSetOutline(cPrendas[19], 0);
	TextDrawBackgroundColor(cPrendas[19], 0xFFFFFF99);
	TextDrawFont(cPrendas[19], 5);
	TextDrawSetProportional(cPrendas[19], 1);
	TextDrawSetSelectable(cPrendas[19], 1);
	TextDrawSetPreviewModel(cPrendas[19], 19033);
	TextDrawSetPreviewRot(cPrendas[19], -10.000000, 0.000000, 30.000000, 1.000000);

	Completonegro = TextDrawCreate(642.000000, 0.000000, "_");
	TextDrawLetterSize(Completonegro, 0.800000, 49.499992);
	TextDrawTextSize(Completonegro, -3.000000, 4.000000);
	TextDrawAlignment(Completonegro, 0);
	TextDrawColor(Completonegro, 0xFFFFFFFF);
	TextDrawUseBox(Completonegro, 1);
	TextDrawBoxColor(Completonegro, 0x000000FF);
	TextDrawSetShadow(Completonegro, 1);
	TextDrawSetOutline(Completonegro, 0);
	TextDrawBackgroundColor(Completonegro, 0x000000FF);
	TextDrawFont(Completonegro, 1);
	TextDrawSetProportional(Completonegro, 1);
	TextDrawSetSelectable(Completonegro, 0);

	LuegoDe = TextDrawCreate(214.000000, 211.000000, "Luego de algunos minutos...");
	TextDrawLetterSize(LuegoDe, 0.500000, 1.000000);
	TextDrawTextSize(LuegoDe, 1280.000000, 1280.000000);
	TextDrawAlignment(LuegoDe, 0);
	TextDrawColor(LuegoDe, 0xFFFFFFFF);
	TextDrawUseBox(LuegoDe, 0);
	TextDrawBoxColor(LuegoDe, 0x80808080);
	TextDrawSetShadow(LuegoDe, 1);
	TextDrawSetOutline(LuegoDe, 0);
	TextDrawBackgroundColor(LuegoDe, 0x000000FF);
	TextDrawFont(LuegoDe, 3);
	TextDrawSetProportional(LuegoDe, 1);
	TextDrawSetSelectable(LuegoDe, 0);

	PuticlubMedia = TextDrawCreate(305.000000, 411.000000, "Media");
	TextDrawLetterSize(PuticlubMedia, 0.250000, 0.899999);
	TextDrawTextSize(PuticlubMedia, 1280.000000, 1280.000000);
	TextDrawAlignment(PuticlubMedia, 0);
	TextDrawColor(PuticlubMedia, 0xFFFFFFFF);
	TextDrawUseBox(PuticlubMedia, 0);
	TextDrawBoxColor(PuticlubMedia, 0x80808080);
	TextDrawSetShadow(PuticlubMedia, 1);
	TextDrawSetOutline(PuticlubMedia, 0);
	TextDrawBackgroundColor(PuticlubMedia, 0x000000FF);
	TextDrawFont(PuticlubMedia, 2);
	TextDrawSetProportional(PuticlubMedia, 1);
	TextDrawSetSelectable(PuticlubMedia, 0);

	PuticlubAlta = TextDrawCreate(375.000000, 411.000000, "Alta");
	TextDrawLetterSize(PuticlubAlta, 0.250000, 0.899999);
	TextDrawTextSize(PuticlubAlta, 1280.000000, 1280.000000);
	TextDrawAlignment(PuticlubAlta, 0);
	TextDrawColor(PuticlubAlta, 0xFFFFFFFF);
	TextDrawUseBox(PuticlubAlta, 0);
	TextDrawBoxColor(PuticlubAlta, 0x80808080);
	TextDrawSetShadow(PuticlubAlta, 1);
	TextDrawSetOutline(PuticlubAlta, 0);
	TextDrawBackgroundColor(PuticlubAlta, 0x000000FF);
	TextDrawFont(PuticlubAlta, 2);
	TextDrawSetProportional(PuticlubAlta, 1);
	TextDrawSetSelectable(PuticlubAlta, 0);

	Cuadroputi = TextDrawCreate(222.000000, 386.000000, "_");
	TextDrawLetterSize(Cuadroputi, 0.340000, -0.200000);
	TextDrawTextSize(Cuadroputi, 419.000000, 2.000000);
	TextDrawAlignment(Cuadroputi, 0);
	TextDrawColor(Cuadroputi, 0xFFFFFFFF);
	TextDrawUseBox(Cuadroputi, 1);
	TextDrawBoxColor(Cuadroputi, 0xFF00FFFF);
	TextDrawSetShadow(Cuadroputi, 1);
	TextDrawSetOutline(Cuadroputi, 0);
	TextDrawBackgroundColor(Cuadroputi, 0x000000FF);
	TextDrawFont(Cuadroputi, 1);
	TextDrawSetProportional(Cuadroputi, 1);
	TextDrawSetSelectable(Cuadroputi, 0);

	Cuadroputi1 = TextDrawCreate(222.000000, 387.000000, "_");
	TextDrawLetterSize(Cuadroputi1, 0.340000, 2.599999);
	TextDrawTextSize(Cuadroputi1, 419.000000, 2.000000);
	TextDrawAlignment(Cuadroputi1, 0);
	TextDrawColor(Cuadroputi1, 0xFFFFFFFF);
	TextDrawUseBox(Cuadroputi1, 1);
	TextDrawBoxColor(Cuadroputi1, 0x000000FF);
	TextDrawSetShadow(Cuadroputi1, 1);
	TextDrawSetOutline(Cuadroputi1, 0);
	TextDrawBackgroundColor(Cuadroputi1, 0x000000FF);
	TextDrawFont(Cuadroputi1, 1);
	TextDrawSetProportional(Cuadroputi1, 1);
	TextDrawSetSelectable(Cuadroputi1, 0);

	FlechasArribaPuti = TextDrawCreate(317.299988, 401.000000, "~u~");
	TextDrawLetterSize(FlechasArribaPuti, 0.689999, 1.000000);
	TextDrawTextSize(FlechasArribaPuti, 1280.000000, 1280.000000);
	TextDrawAlignment(FlechasArribaPuti, 0);
	TextDrawColor(FlechasArribaPuti, 0xFFFF00FF);
	TextDrawUseBox(FlechasArribaPuti, 0);
	TextDrawBoxColor(FlechasArribaPuti, 0x80808080);
	TextDrawSetShadow(FlechasArribaPuti, 1);
	TextDrawSetOutline(FlechasArribaPuti, 0);
	TextDrawBackgroundColor(FlechasArribaPuti, 0x000000FF);
	TextDrawFont(FlechasArribaPuti, 1);
	TextDrawSetProportional(FlechasArribaPuti, 1);
	TextDrawSetSelectable(FlechasArribaPuti, 0);

	FlechasArribaPuti2 = TextDrawCreate(384.899994, 401.000000, "~u~");
	TextDrawLetterSize(FlechasArribaPuti2, 0.689999, 1.000000);
	TextDrawTextSize(FlechasArribaPuti2, 1280.000000, 1280.000000);
	TextDrawAlignment(FlechasArribaPuti2, 0);
	TextDrawColor(FlechasArribaPuti2, 0xFFFF00FF);
	TextDrawUseBox(FlechasArribaPuti2, 0);
	TextDrawBoxColor(FlechasArribaPuti2, 0x80808080);
	TextDrawSetShadow(FlechasArribaPuti2, 1);
	TextDrawSetOutline(FlechasArribaPuti2, 0);
	TextDrawBackgroundColor(FlechasArribaPuti2, 0x000000FF);
	TextDrawFont(FlechasArribaPuti2, 1);
	TextDrawSetProportional(FlechasArribaPuti2, 1);
	TextDrawSetSelectable(FlechasArribaPuti2, 0);

	return 1;
}

public RevisarAvion()
{
    foreach(Player,i)
    {
        if(EnParacaidas[i] == 1 && AvionListo == 1)
		{
			if(!IsPlayerInRangeOfPoint(i,30.0,414.8077,2533.6057,19.1484))
			{
			    EnParacaidas[i] = 0;
			    SendClientMessage(i,-1,"Perdiste el vuelo por alejarte mucho de la oficina.");
			    return 1;
			}
		    new vR = random(sizeof(Saltos));
		    MostrarLuegoDe(i);
		    SetPlayerPos(i, Saltos[vR][0], Saltos[vR][1], Saltos[vR][2]);
			SetPlayerFacingAngle(i,0.0000);
			DarArma(i,46);
		    SetTimerEx("OcultarLuegoDe",3000,false,"d",i);
		    KillTimer(Registroaviox[i]);
		    SetTimer("Mover_Avion",3000,false);
		    SendClientMessage(i,-1,"Por favor evita saltar y correr dentro del avión");
		    TiempoAvion = 400;
		    EnParacaidas[i] = 0;
		    AvionListo = 0;
		    SetTimer("ResetAvion",300000,false);
		}
    }
    return 1;
}

public gaviotas()
{
    foreach(Player,i)
	{
	    if(IsPlayerInRangeOfPoint(i,120.0,727.1412,-3320.2461,5.8700)) // Isla Santa Carolina
		{
		    new Float:Pos[3];
            GetPlayerPos(i, Pos[0],Pos[1],Pos[2]);
			PlayerPlaySound(i, 6200, Pos[0], Pos[1], Pos[2]);
	    }
    }
}

public Anticheats()
{
    foreach(Player,i)
	{
	    new Float:HP,Float:AP;
	    GetPlayerHealth(i,HP);
	    GetPlayerArmour(i,AP);
        new Float:animX, Float:animY, Float:animZ;
		new anim = GetPlayerAnimationIndex(i);
		GetPlayerPos(i, animX, animY, animZ);
		if((anim >= 1538) && (anim <= 1542) && animZ > 5 && PlayerInfo[i][pAdmin] == 0)
		{
		    new string[128];
		    format(string, 128,"El jugador {FF3300}%s(ID: %d){FFFFFF} fue baneado por el anticheat. Razón: {FF3300}Volar con cheats.",PlayerName(i),i);
			SendClientMessageToAll(-1,string);
			SetTimerEx("KickXD",500,0,"d",i);
		}
		if(GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK  && PlayerInfo[i][pAdmin] == 0)
		{
		  	new string[128];
			format(string, sizeof(string), "El jugador {FF3300}%s(ID: %d){FFFFFF} fue baneado por el anticheat. Razón: {FF3300}Volar con cheats{FFFFFF}", PlayerName(i));
			SendClientMessageToAll(-1, string);
        	Kick(i);
  		}
		if(IsPlayerConnected(i) && PlayerInfo[i][pAdmin] == 0)
		{
			new animx = GetPlayerAnimationIndex(i);
			if((animx == 1058))
			{
			  	new string[128];
				TogglePlayerControllable(i, 0);
				format(string, sizeof(string), "El jugador {FF2F00}%s(ID: %d){FFFFFF} fue baneado por el anticheat. Razón: {FF2F00}Volar con cheats{FFFFFF}", PlayerName(i), i);
				SendClientMessageToAll(-1, string);
				SetTimerEx("KickXD",500,0,"d",i);
			}
  		}
  		if(IsPlayerInRangeOfPoint(i,120.0,727.1412,-3320.2461,5.8700)) // Isla Santa Carolina
		{
		    WATERSOUND[i] = 1;
		    new Float:Pos[3];
            GetPlayerPos(i, Pos[0],Pos[1],Pos[2]);
			PlayerPlaySound(i, 174, Pos[0], Pos[1], Pos[2]);
	    }
	    else if(IsPlayerInRangeOfPoint(i,50.0,2774.3037,-2580.0820,3.1963)) // Ocean Docks
		{
		    WATERSOUND[i] = 1;
		    new Float:Pos[3];
            GetPlayerPos(i, Pos[0],Pos[1],Pos[2]);
			PlayerPlaySound(i, 174, Pos[0], Pos[1], Pos[2]);
	    }
	    else
	    {
	        if(WATERSOUND[i] == 0) return 1;
	        WATERSOUND[i] = 0;
	        StopAudioStreamForPlayer(i);
	    }
	}
	return 1;
}

public cargartodo()
{
    LoadBarrelMeta(1);
    LoadBarrelMeta(2);
    LoadBarrelMeta(3);
    CargarVehiculos();
	CargarFacciones();
	ResetCars();
	CargarUsers();
	CargarCasas();
	CargarGarages();
	LoadDoors();
	LoadDoors2();
	LoadDoors3();
	LoadDoors4();
	CargarMapeos();
	CargarFabricas();

	EsperandoMision1 = TextDrawCreate(645.199951, 1.500000, "usebox");
	TextDrawLetterSize(EsperandoMision1, 0.000000, 0.843703);
	TextDrawTextSize(EsperandoMision1, 277.200012, 0.000000);
	TextDrawAlignment(EsperandoMision1, 1);
	TextDrawColor(EsperandoMision1, 0);
	TextDrawUseBox(EsperandoMision1, true);
	TextDrawBoxColor(EsperandoMision1, 102);
	TextDrawSetShadow(EsperandoMision1, 0);
	TextDrawSetOutline(EsperandoMision1, 0);
	TextDrawFont(EsperandoMision1, 0);

	EsperandoMision2 = TextDrawCreate(277.000000, 1.000000, "~>~~h~Buscando integrantes para ~y~Asalto al blindado~w~ - Ladrones: ~g~~h~9/9 ~w~- Guardias: ~g~~h~8/6 ~w~- Mafiosos: ~g~~h~5/4");
	TextDrawLetterSize(EsperandoMision2, 0.220000, 1.000000);
	TextDrawTextSize(EsperandoMision2, 639.000000, 0.000000);
	TextDrawAlignment(EsperandoMision2, 0);
	TextDrawColor(EsperandoMision2, 0xFFFFFFFF);
	TextDrawUseBox(EsperandoMision2, 1);
	TextDrawBoxColor(EsperandoMision2, 0x00000099);
	TextDrawSetShadow(EsperandoMision2, 1);
	TextDrawSetOutline(EsperandoMision2, 0);
	TextDrawBackgroundColor(EsperandoMision2, 0x000000FF);
	TextDrawFont(EsperandoMision2, 1);
	TextDrawSetProportional(EsperandoMision2, 1);
	TextDrawSetSelectable(EsperandoMision2, 0);

	Tablero = TextDrawCreate(703.500000, 1.500000, "usebox");
	TextDrawLetterSize(Tablero, 0.000000, 0.964443);
	TextDrawTextSize(Tablero, 449.000000, 0.000000);
	TextDrawAlignment(Tablero, 1);
	TextDrawColor(Tablero, 0);
	TextDrawUseBox(Tablero, true);
	TextDrawBoxColor(Tablero, 102);
	TextDrawSetShadow(Tablero, 0);
	TextDrawSetOutline(Tablero, 0);
	TextDrawFont(Tablero, 0);

	Tablero1 = TextDrawCreate(456.500000, 0.606612, "~>~ Ladrones: ~r~8~w~ - Guardias: ~b~5~w~ - Mafiosos: ~g~4");
	TextDrawLetterSize(Tablero1, 0.238747, 0.999633);
	TextDrawAlignment(Tablero1, 1);
	TextDrawColor(Tablero1, -1);
	TextDrawSetShadow(Tablero1, 0);
	TextDrawSetOutline(Tablero1, 1);
	TextDrawBackgroundColor(Tablero1, 51);
	TextDrawFont(Tablero1, 1);
	TextDrawSetProportional(Tablero1, 1);

	LuegoDeM = TextDrawCreate(0.000000, 0.000000, "LD_SPAC:white");
	TextDrawLetterSize(LuegoDeM, 0.000000, 0.000000);
	TextDrawTextSize(LuegoDeM, 640.000000, 448.000000);
	TextDrawAlignment(LuegoDeM, 1);
	TextDrawColor(LuegoDeM, 255);
	TextDrawSetShadow(LuegoDeM, 0);
	TextDrawSetOutline(LuegoDeM, 0);
	TextDrawFont(LuegoDeM, 4);

	LuegoDeM1 = TextDrawCreate(214.000000, 211.000000, "Luego de algunos minutos...");
	TextDrawLetterSize(LuegoDeM1, 0.500000, 1.000000);
	TextDrawTextSize(LuegoDeM1, 1280.000000, 1280.000000);
	TextDrawAlignment(LuegoDeM1, 0);
	TextDrawColor(LuegoDeM1, 0xFFFFFFFF);
	TextDrawUseBox(LuegoDeM1, 0);
	TextDrawBoxColor(LuegoDeM1, 0x80808080);
	TextDrawSetShadow(LuegoDeM1, 1);
	TextDrawSetOutline(LuegoDeM1, 0);
	TextDrawBackgroundColor(LuegoDeM1, 0x000000FF);
	TextDrawFont(LuegoDeM1, 3);
	TextDrawSetProportional(LuegoDeM1, 1);
	TextDrawSetSelectable(LuegoDeM1, 0);

	EsperandoI = TextDrawCreate(414.500000, 405.000000, "_");
	TextDrawLetterSize(EsperandoI, 0.500000, 1.200000);
	TextDrawTextSize(EsperandoI, 215.500000, 0.000000);
	TextDrawAlignment(EsperandoI, 0);
	TextDrawColor(EsperandoI, 0xFFFFFFFF);
	TextDrawUseBox(EsperandoI, 1);
	TextDrawBoxColor(EsperandoI, 0x00000099);
	TextDrawSetShadow(EsperandoI, 1);
	TextDrawSetOutline(EsperandoI, 0);
	TextDrawBackgroundColor(EsperandoI, 0x000000FF);
	TextDrawFont(EsperandoI, 1);
	TextDrawSetProportional(EsperandoI, 1);
	TextDrawSetSelectable(EsperandoI, 0);

	EsperandoI2 = TextDrawCreate(315.000000, 390.000000, "Esperando a los integrantes");
	TextDrawLetterSize(EsperandoI2, 0.390000, 1.300000);
	TextDrawTextSize(EsperandoI2, 0.000000, 193.500000);
	TextDrawAlignment(EsperandoI2, 2);
	TextDrawColor(EsperandoI2, 0xFFFFFFFF);
	TextDrawUseBox(EsperandoI2, 1);
	TextDrawBoxColor(EsperandoI2, 0x000000FF);
	TextDrawSetShadow(EsperandoI2, 1);
	TextDrawSetOutline(EsperandoI2, 0);
	TextDrawBackgroundColor(EsperandoI2, 0x000000FF);
	TextDrawFont(EsperandoI2, 1);
	TextDrawSetProportional(EsperandoI2, 1);
	TextDrawSetSelectable(EsperandoI2, 0);

	EsperandoI3 = TextDrawCreate(315.000000, 389.500000, "~h~~g~.................~r~.~w~.");
	TextDrawLetterSize(EsperandoI3, 0.880000, 3.100000);
	TextDrawTextSize(EsperandoI3, 1280.000000, 1280.000000);
	TextDrawAlignment(EsperandoI3, 2);
	TextDrawColor(EsperandoI3, 0x4C4C4CFF);
	TextDrawUseBox(EsperandoI3, 0);
	TextDrawBoxColor(EsperandoI3, 0x80808080);
	TextDrawSetShadow(EsperandoI3, 1);
	TextDrawSetOutline(EsperandoI3, 0);
	TextDrawBackgroundColor(EsperandoI3, 0x000000FF);
	TextDrawFont(EsperandoI3, 1);
	TextDrawSetProportional(EsperandoI3, 1);
	TextDrawSetSelectable(EsperandoI3, 0);

	TDMision0 = TextDrawCreate(645.000000, 1.000000, "_");
	TextDrawLetterSize(TDMision0, 0.500000, 11.200003);
	TextDrawTextSize(TDMision0, -4.000000, 3.000000);
	TextDrawAlignment(TDMision0, 0);
	TextDrawColor(TDMision0, 0xFFFFFFFF);
	TextDrawUseBox(TDMision0, 1);
	TextDrawBoxColor(TDMision0, 0x000000FF);
	TextDrawSetShadow(TDMision0, 1);
	TextDrawSetOutline(TDMision0, 0);
	TextDrawBackgroundColor(TDMision0, 0x000000FF);
	TextDrawFont(TDMision0, 1);
	TextDrawSetProportional(TDMision0, 1);
	TextDrawSetSelectable(TDMision0, 0);

	TDMision1 = TextDrawCreate(299.000000, 62.000000, "_");
	TextDrawLetterSize(TDMision1, 0.480000, 1.120000);
	TextDrawTextSize(TDMision1, 40.000000, 40.000000);
	TextDrawAlignment(TDMision1, 0);
	TextDrawColor(TDMision1, 0xE1E1E1FF);
	TextDrawUseBox(TDMision1, 1);
	TextDrawBoxColor(TDMision1, 0x000000FF);
	TextDrawSetShadow(TDMision1, 2);
	TextDrawSetOutline(TDMision1, 0);
	TextDrawBackgroundColor(TDMision1, 0x000000FF);
	TextDrawFont(TDMision1, 5);
	TextDrawSetProportional(TDMision1, 1);
	TextDrawSetSelectable(TDMision1, 0);
	TextDrawSetPreviewModel(TDMision1, 428);
	TextDrawSetPreviewRot(TDMision1, 0.000000, 0.000000, 0.000000, 0.600000);

	TDMision2 = TextDrawCreate(317.000000, 10.000000, "Iniciando misi¦n...");
	TextDrawLetterSize(TDMision2, 0.430000, 1.000000);
	TextDrawTextSize(TDMision2, 1280.000000, 1280.000000);
	TextDrawAlignment(TDMision2, 2);
	TextDrawColor(TDMision2, 0x418F36FF);
	TextDrawUseBox(TDMision2, 0);
	TextDrawBoxColor(TDMision2, 0x80808080);
	TextDrawSetShadow(TDMision2, 1);
	TextDrawSetOutline(TDMision2, 0);
	TextDrawBackgroundColor(TDMision2, 0x000000FF);
	TextDrawFont(TDMision2, 1);
	TextDrawSetProportional(TDMision2, 1);
	TextDrawSetSelectable(TDMision2, 0);

	TDMision3 = TextDrawCreate(222.000000, 54.000000, ".");
	TextDrawLetterSize(TDMision3, 18.750036, 1.000000);
	TextDrawTextSize(TDMision3, 1280.000000, 1280.000000);
	TextDrawAlignment(TDMision3, 0);
	TextDrawColor(TDMision3, 0xFFFFFFFF);
	TextDrawUseBox(TDMision3, 0);
	TextDrawBoxColor(TDMision3, 0x80808080);
	TextDrawSetShadow(TDMision3, 1);
	TextDrawSetOutline(TDMision3, 0);
	TextDrawBackgroundColor(TDMision3, 0x000000FF);
	TextDrawFont(TDMision3, 1);
	TextDrawSetProportional(TDMision3, 1);
	TextDrawSetSelectable(TDMision3, 0);

	TDMision4 = TextDrawCreate(315.000000, 35.000000, "Asalto al blindado");
	TextDrawLetterSize(TDMision4, 0.890000, 2.400000);
	TextDrawTextSize(TDMision4, 1280.000000, 1280.000000);
	TextDrawAlignment(TDMision4, 2);
	TextDrawColor(TDMision4, 0xFFFFFFFF);
	TextDrawUseBox(TDMision4, 0);
	TextDrawBoxColor(TDMision4, 0x80808080);
	TextDrawSetShadow(TDMision4, 1);
	TextDrawSetOutline(TDMision4, 0);
	TextDrawBackgroundColor(TDMision4, 0x000000FF);
	TextDrawFont(TDMision4, 0);
	TextDrawSetProportional(TDMision4, 1);
	TextDrawSetSelectable(TDMision4, 0);

	TDMision5 = TextDrawCreate(222.000000, 28.000000, ".");
	TextDrawLetterSize(TDMision5, 18.750036, 1.000000);
	TextDrawTextSize(TDMision5, 1280.000000, 1280.000000);
	TextDrawAlignment(TDMision5, 0);
	TextDrawColor(TDMision5, 0xFFFFFFFF);
	TextDrawUseBox(TDMision5, 0);
	TextDrawBoxColor(TDMision5, 0x80808080);
	TextDrawSetShadow(TDMision5, 1);
	TextDrawSetOutline(TDMision5, 0);
	TextDrawBackgroundColor(TDMision5, 0x000000FF);
	TextDrawFont(TDMision5, 1);
	TextDrawSetProportional(TDMision5, 1);
	TextDrawSetSelectable(TDMision5, 0);

	TDMision6 = TextDrawCreate(0.000000, 322.000000, "LD_SPAC:white");
	TextDrawLetterSize(TDMision6, 0.000000, 0.000000);
	TextDrawTextSize(TDMision6, 640.000000, 126.000000);
	TextDrawAlignment(TDMision6, 1);
	TextDrawColor(TDMision6, 255);
	TextDrawSetShadow(TDMision6, 0);
	TextDrawSetOutline(TDMision6, 0);
	TextDrawFont(TDMision6, 4);


	TDMision7 = TextDrawCreate(320.000000, 350.000000, "~w~Ladrones: ~r~Ana_Lyzz(292)~w~, ~r~Uris_acosta(217)~w~, ~r~Juansito_Montana(174)~w~, ~r~Pier_Blazer(128)~w~, ~r~Sofia_Tores(45)~w~, ~r~Daryl_Mountgree(374)~w~, ~r~Axel_Noguera(398)~w~, ~r~Edward_Montana(470)~w~, ~r~Ignacio_Perini(463)");
	TextDrawLetterSize(TDMision7, 0.180000, 1.100000);
	TextDrawTextSize(TDMision7, 1280.000000, 1280.000000);
	TextDrawAlignment(TDMision7, 2);
	TextDrawColor(TDMision7, 0xC6C6C4FF);
	TextDrawUseBox(TDMision7, 0);
	TextDrawBoxColor(TDMision7, 0x80808080);
	TextDrawSetShadow(TDMision7, 1);
	TextDrawSetOutline(TDMision7, 0);
	TextDrawBackgroundColor(TDMision7, 0x000000FF);
	TextDrawFont(TDMision7, 1);
	TextDrawSetProportional(TDMision7, 1);
	TextDrawSetSelectable(TDMision7, 0);

	TDMision8 = TextDrawCreate(320.000000, 372.000000, "~w~Guardias: ~b~Gonzalo_Cappello(91)~w~, ~b~Otto_Chavez(136)~w~, ~b~Guzzi_Beltran(299)~w~, ~b~Daniel_Norbit(100)~w~, ~b~Isabel_Cheycov(235)~w~, ~b~Maicol_Woodz(272)");
	TextDrawLetterSize(TDMision8, 0.180000, 1.100000);
	TextDrawTextSize(TDMision8, 1280.000000, 1280.000000);
	TextDrawAlignment(TDMision8, 2);
	TextDrawColor(TDMision8, 0xC6C6C4FF);
	TextDrawUseBox(TDMision8, 0);
	TextDrawBoxColor(TDMision8, 0x80808080);
	TextDrawSetShadow(TDMision8, 1);
	TextDrawSetOutline(TDMision8, 0);
	TextDrawBackgroundColor(TDMision8, 0x000000FF);
	TextDrawFont(TDMision8, 1);
	TextDrawSetProportional(TDMision8, 1);
	TextDrawSetSelectable(TDMision8, 0);

	TDMision9 = TextDrawCreate(320.000000, 393.000000, "~w~Mafiosos:~g~ Sebastian_Mandela(74)~w~, ~g~Juanqui_Noblecilla(242)~w~, ~g~Frederick_Regnault(183)~w~, ~g~Leo_Vecctorial(400)");
	TextDrawLetterSize(TDMision9, 0.180000, 1.100000);
	TextDrawTextSize(TDMision9, 1280.000000, 1280.000000);
	TextDrawAlignment(TDMision9, 2);
	TextDrawColor(TDMision9, 0xC6C6C4FF);
	TextDrawUseBox(TDMision9, 0);
	TextDrawBoxColor(TDMision9, 0x80808080);
	TextDrawSetShadow(TDMision9, 1);
	TextDrawSetOutline(TDMision9, 0);
	TextDrawBackgroundColor(TDMision9, 0x000000FF);
	TextDrawFont(TDMision9, 1);
	TextDrawSetProportional(TDMision9, 1);
	TextDrawSetSelectable(TDMision9, 0);

	//Sistema de robo

	SeleccionaPuerta = TextDrawCreate(297.000000, 158.000000, "Selecciona la puerta");
	TextDrawLetterSize(SeleccionaPuerta, 0.320000, 1.000000);
	TextDrawTextSize(SeleccionaPuerta, 27.000000, 178.000000);
	TextDrawAlignment(SeleccionaPuerta, 2);
	TextDrawColor(SeleccionaPuerta, 0xFFFFFFFF);
	TextDrawUseBox(SeleccionaPuerta, 1);
	TextDrawBoxColor(SeleccionaPuerta, 0x000000FF);
	TextDrawSetShadow(SeleccionaPuerta, 1);
	TextDrawSetOutline(SeleccionaPuerta, 0);
	TextDrawBackgroundColor(SeleccionaPuerta, 0x000000FF);
	TextDrawFont(SeleccionaPuerta, 1);
	TextDrawSetProportional(SeleccionaPuerta, 1);
	TextDrawSetSelectable(SeleccionaPuerta, 0);

	BoxRobar = TextDrawCreate(297.000000, 170.000000, "_");
	TextDrawLetterSize(BoxRobar, 0.320000, 21.100000);
	TextDrawTextSize(BoxRobar, 27.000000, 178.000000);
	TextDrawAlignment(BoxRobar, 2);
	TextDrawColor(BoxRobar, 0xFFFFFFFF);
	TextDrawUseBox(BoxRobar, 1);
	TextDrawBoxColor(BoxRobar, 0x000000FF);
	TextDrawSetShadow(BoxRobar, 1);
	TextDrawSetOutline(BoxRobar, 0);
	TextDrawBackgroundColor(BoxRobar, 0x000000FF);
	TextDrawFont(BoxRobar, 1);
	TextDrawSetProportional(BoxRobar, 1);
	TextDrawSetSelectable(BoxRobar, 0);

	EquisCerrar = TextDrawCreate(379.000000, 158.000000, "X");
	TextDrawLetterSize(EquisCerrar, 0.290000, 1.000000);
	TextDrawTextSize(EquisCerrar, 9.000000, 9.000000);
	TextDrawAlignment(EquisCerrar, 2);
	TextDrawColor(EquisCerrar, 0xFF0000FF);
	TextDrawUseBox(EquisCerrar, 1);
	TextDrawBoxColor(EquisCerrar, 0x000000FF);
	TextDrawSetShadow(EquisCerrar, 1);
	TextDrawSetOutline(EquisCerrar, 0);
	TextDrawBackgroundColor(EquisCerrar, 0x0B0B0B99);
	TextDrawFont(EquisCerrar, 1);
	TextDrawSetProportional(EquisCerrar, 0);
	TextDrawSetSelectable(EquisCerrar, 1);

	//Sistema de prendas
	TextoPrendas = TextDrawCreate(297.000000, 158.000000, "Prendas");
	TextDrawLetterSize(TextoPrendas, 0.320000, 1.000000);
	TextDrawTextSize(TextoPrendas, 27.000000, 178.000000);
	TextDrawAlignment(TextoPrendas, 2);
	TextDrawColor(TextoPrendas, 0xFFFFFFFF);
	TextDrawUseBox(TextoPrendas, 1);
	TextDrawBoxColor(TextoPrendas, 0x000000FF);
	TextDrawSetShadow(TextoPrendas, 1);
	TextDrawSetOutline(TextoPrendas, 0);
	TextDrawBackgroundColor(TextoPrendas, 0x000000FF);
	TextDrawFont(TextoPrendas, 1);
	TextDrawSetProportional(TextoPrendas, 1);
	TextDrawSetSelectable(TextoPrendas, 0);

	CerrarPrenda = TextDrawCreate(379.000000, 158.000000, "X");
	TextDrawLetterSize(CerrarPrenda, 0.290000, 1.000000);
	TextDrawTextSize(CerrarPrenda, 9.000000, 9.000000);
	TextDrawAlignment(CerrarPrenda, 2);
	TextDrawColor(CerrarPrenda, 0xFF0000FF);
	TextDrawUseBox(CerrarPrenda, 1);
	TextDrawBoxColor(CerrarPrenda, 0x000000FF);
	TextDrawSetShadow(CerrarPrenda, 1);
	TextDrawSetOutline(CerrarPrenda, 0);
	TextDrawBackgroundColor(CerrarPrenda, 0x0B0B0B99);
	TextDrawFont(CerrarPrenda, 1);
	TextDrawSetProportional(CerrarPrenda, 0);
	TextDrawSetSelectable(CerrarPrenda, 1);

	CuadroPrendasCorto = TextDrawCreate(297.000000, 170.000000, "_");
	TextDrawLetterSize(CuadroPrendasCorto, 0.320000, 10.500000);
	TextDrawTextSize(CuadroPrendasCorto, 27.000000, 178.000000);
	TextDrawAlignment(CuadroPrendasCorto, 2);
	TextDrawColor(CuadroPrendasCorto, 0xFFFFFFFF);
	TextDrawUseBox(CuadroPrendasCorto, 1);
	TextDrawBoxColor(CuadroPrendasCorto, 0x000000FF);
	TextDrawSetShadow(CuadroPrendasCorto, 1);
	TextDrawSetOutline(CuadroPrendasCorto, 0);
	TextDrawBackgroundColor(CuadroPrendasCorto, 0x000000FF);
	TextDrawFont(CuadroPrendasCorto, 1);
	TextDrawSetProportional(CuadroPrendasCorto, 1);
	TextDrawSetSelectable(CuadroPrendasCorto, 0);

	//Cuadro prendas grande

	CuadroPrendasLargo = TextDrawCreate(297.000000, 170.000000, "_");
	TextDrawLetterSize(CuadroPrendasLargo, 0.320000, 21.100000);
	TextDrawTextSize(CuadroPrendasLargo, 27.000000, 178.000000);
	TextDrawAlignment(CuadroPrendasLargo, 2);
	TextDrawColor(CuadroPrendasLargo, 0xFFFFFFFF);
	TextDrawUseBox(CuadroPrendasLargo, 1);
	TextDrawBoxColor(CuadroPrendasLargo, 0x000000FF);
	TextDrawSetShadow(CuadroPrendasLargo, 1);
	TextDrawSetOutline(CuadroPrendasLargo, 0);
	TextDrawBackgroundColor(CuadroPrendasLargo, 0x000000FF);
	TextDrawFont(CuadroPrendasLargo, 1);
	TextDrawSetProportional(CuadroPrendasLargo, 1);
	TextDrawSetSelectable(CuadroPrendasLargo, 0);

	//TREN VER MAPA
	MapaLateral[0] = TextDrawCreate(630.000000, 14.000000, "_");
	TextDrawLetterSize(MapaLateral[0], 0.539999, 31.200006);
	TextDrawTextSize(MapaLateral[0], 354.000000, 0.000000);
	TextDrawAlignment(MapaLateral[0], 0);
	TextDrawColor(MapaLateral[0], 0xFFFFFFFF);
	TextDrawUseBox(MapaLateral[0], 1);
	TextDrawBoxColor(MapaLateral[0], 0x000000FF);
	TextDrawSetShadow(MapaLateral[0], 1);
	TextDrawSetOutline(MapaLateral[0], 0);
	TextDrawBackgroundColor(MapaLateral[0], 0x000000FF);
	TextDrawFont(MapaLateral[0], 1);
	TextDrawSetProportional(MapaLateral[0], 1);
	TextDrawSetSelectable(MapaLateral[0], 0);

	MapaLateral[1] = TextDrawCreate(364.000000, 30.000000, "samaps:map");
	TextDrawLetterSize(MapaLateral[1], 0.500000, 1.000000);
	TextDrawTextSize(MapaLateral[1], 256.000000, 256.000000);
	TextDrawAlignment(MapaLateral[1], 0);
	TextDrawColor(MapaLateral[1], 0xE1E1E1FF);
	TextDrawUseBox(MapaLateral[1], 1);
	TextDrawBoxColor(MapaLateral[1], 0x000000FF);
	TextDrawSetShadow(MapaLateral[1], 1);
	TextDrawSetOutline(MapaLateral[1], 0);
	TextDrawBackgroundColor(MapaLateral[1], 0x000000FF);
	TextDrawFont(MapaLateral[1], 4);
	TextDrawSetProportional(MapaLateral[1], 1);
	TextDrawSetSelectable(MapaLateral[1], 0);

	MapaLateral[2] = TextDrawCreate(359.000000, 13.000000, "GPS");
	TextDrawLetterSize(MapaLateral[2], 0.400000, 1.600000);
	TextDrawTextSize(MapaLateral[2], 1280.000000, 1280.000000);
	TextDrawAlignment(MapaLateral[2], 0);
	TextDrawColor(MapaLateral[2], 0xFFFFFFFF);
	TextDrawUseBox(MapaLateral[2], 0);
	TextDrawBoxColor(MapaLateral[2], 0x80808080);
	TextDrawSetShadow(MapaLateral[2], 1);
	TextDrawSetOutline(MapaLateral[2], 0);
	TextDrawBackgroundColor(MapaLateral[2], 0x000000FF);
	TextDrawFont(MapaLateral[2], 2);
	TextDrawSetProportional(MapaLateral[2], 1);
	TextDrawSetSelectable(MapaLateral[2], 0);

	MapaLateral[3] = TextDrawCreate(570.000000, 19.500000, "~w~Usa ~b~~y~/ocultar gps~w~ para cerrar");
	TextDrawLetterSize(MapaLateral[3], 0.150000, 0.450000);
	TextDrawTextSize(MapaLateral[3], 1280.000000, 1280.000000);
	TextDrawAlignment(MapaLateral[3], 2);
	TextDrawColor(MapaLateral[3], 0xFFFFFFBF);
	TextDrawUseBox(MapaLateral[3], 0);
	TextDrawBoxColor(MapaLateral[3], 0x80808080);
	TextDrawSetShadow(MapaLateral[3], 1);
	TextDrawSetOutline(MapaLateral[3], 0);
	TextDrawBackgroundColor(MapaLateral[3], 0x000000FF);
	TextDrawFont(MapaLateral[3], 2);
	TextDrawSetProportional(MapaLateral[3], 1);
	TextDrawSetSelectable(MapaLateral[3], 0);

	CarreraPosicion = TextDrawCreate(49.375000, 358.750152, "POSICION");
	TextDrawLetterSize(CarreraPosicion, 0.381249, 1.308333);
	TextDrawAlignment(CarreraPosicion, 1);
	TextDrawColor(CarreraPosicion, -1);
	TextDrawSetShadow(CarreraPosicion, 0);
	TextDrawSetOutline(CarreraPosicion, 1);
	TextDrawBackgroundColor(CarreraPosicion, 51);
	TextDrawFont(CarreraPosicion, 2);
	TextDrawSetProportional(CarreraPosicion, 1);

	TTren[0] = TextDrawCreate(630.000000, 14.000000, "_");
	TextDrawLetterSize(TTren[0], 0.539999, 31.200006);
	TextDrawTextSize(TTren[0], 354.000000, 0.000000);
	TextDrawAlignment(TTren[0], 0);
	TextDrawColor(TTren[0], 0xFFFFFFFF);
	TextDrawUseBox(TTren[0], 1);
	TextDrawBoxColor(TTren[0], 0x000000FF);
	TextDrawSetShadow(TTren[0], 1);
	TextDrawSetOutline(TTren[0], 0);
	TextDrawBackgroundColor(TTren[0], 0x000000FF);
	TextDrawFont(TTren[0], 1);
	TextDrawSetProportional(TTren[0], 1);
	TextDrawSetSelectable(TTren[0], 0);

	TTren[1] = TextDrawCreate(359.000000, 13.000000, "PANTALLA");
	TextDrawLetterSize(TTren[1], 0.400000, 1.600000);
	TextDrawTextSize(TTren[1], 1280.000000, 1280.000000);
	TextDrawAlignment(TTren[1], 0);
	TextDrawColor(TTren[1], 0xFFFFFFFF);
	TextDrawUseBox(TTren[1], 0);
	TextDrawBoxColor(TTren[1], 0x80808080);
	TextDrawSetShadow(TTren[1], 1);
	TextDrawSetOutline(TTren[1], 0);
	TextDrawBackgroundColor(TTren[1], 0x000000FF);
	TextDrawFont(TTren[1], 2);
	TextDrawSetProportional(TTren[1], 1);
	TextDrawSetSelectable(TTren[1], 0);

	TTren[2] = TextDrawCreate(540.000000, 16.000000, "~w~Usa ~b~~y~/ocultar pantalla~w~ para cerrar");
	TextDrawLetterSize(TTren[2], 0.180000, 1.100000);
	TextDrawTextSize(TTren[2], 1280.000000, 1280.000000);
	TextDrawAlignment(TTren[2], 2);
	TextDrawColor(TTren[2], 0xFFFFFFBF);
	TextDrawUseBox(TTren[2], 0);
	TextDrawBoxColor(TTren[2], 0x80808080);
	TextDrawSetShadow(TTren[2], 1);
	TextDrawSetOutline(TTren[2], 0);
	TextDrawBackgroundColor(TTren[2], 0x000000FF);
	TextDrawFont(TTren[2], 2);
	TextDrawSetProportional(TTren[2], 1);
	TextDrawSetSelectable(TTren[2], 0);

	TTren[3] = TextDrawCreate(364.000000, 30.000000, "samaps:map");
	TextDrawLetterSize(TTren[3], 0.500000, 1.000000);
	TextDrawTextSize(TTren[3], 256.000000, 256.000000);
	TextDrawAlignment(TTren[3], 0);
	TextDrawColor(TTren[3], 0xE1E1E1FF);
	TextDrawUseBox(TTren[3], 1);
	TextDrawBoxColor(TTren[3], 0x000000FF);
	TextDrawSetShadow(TTren[3], 1);
	TextDrawSetOutline(TTren[3], 0);
	TextDrawBackgroundColor(TTren[3], 0x000000FF);
	TextDrawFont(TTren[3], 4);
	TextDrawSetProportional(TTren[3], 1);
	TextDrawSetSelectable(TTren[3], 0);

	TTren[4] = TextDrawCreate(561.894409, 236.572281, "hud:radar_TORENO");
	TextDrawLetterSize(TTren[4], 1.000000, 2.000000);
	TextDrawTextSize(TTren[4], 8.000000, 8.000000);
	TextDrawAlignment(TTren[4], 0);
	TextDrawColor(TTren[4], 0xE1E1E1FF);
	TextDrawUseBox(TTren[4], 1);
	TextDrawBoxColor(TTren[4], 0x000000FF);
	TextDrawSetShadow(TTren[4], 1);
	TextDrawSetOutline(TTren[4], 0);
	TextDrawBackgroundColor(TTren[4], 0x000000FF);
	TextDrawFont(TTren[4], 4);
	TextDrawSetProportional(TTren[4], 1);
	TextDrawSetSelectable(TTren[4], 0);

	TTren[5] = TextDrawCreate(522.825378, 211.445374, "hud:radar_TORENO");
	TextDrawLetterSize(TTren[5], 1.000000, 2.000000);
	TextDrawTextSize(TTren[5], 8.000000, 8.000000);
	TextDrawAlignment(TTren[5], 0);
	TextDrawColor(TTren[5], 0xE1E1E1FF);
	TextDrawUseBox(TTren[5], 1);
	TextDrawBoxColor(TTren[5], 0x000000FF);
	TextDrawSetShadow(TTren[5], 1);
	TextDrawSetOutline(TTren[5], 0);
	TextDrawBackgroundColor(TTren[5], 0x000000FF);
	TextDrawFont(TTren[5], 4);
	TextDrawSetProportional(TTren[5], 1);
	TextDrawSetSelectable(TTren[5], 0);

	TTren[6] = TextDrawCreate(403.926483, 147.618668, "hud:radar_TORENO");
	TextDrawLetterSize(TTren[6], 1.000000, 2.000000);
	TextDrawTextSize(TTren[6], 8.000000, 8.000000);
	TextDrawAlignment(TTren[6], 0);
	TextDrawColor(TTren[6], 0xE1E1E1FF);
	TextDrawUseBox(TTren[6], 1);
	TextDrawBoxColor(TTren[6], 0x000000FF);
	TextDrawSetShadow(TTren[6], 1);
	TextDrawSetOutline(TTren[6], 0);
	TextDrawBackgroundColor(TTren[6], 0x000000FF);
	TextDrawFont(TTren[6], 4);
	TextDrawSetProportional(TTren[6], 1);
	TextDrawSetSelectable(TTren[6], 0);

	TTren[7] = TextDrawCreate(548.673645, 41.100082, "hud:radar_TORENO");
	TextDrawLetterSize(TTren[7], 1.000000, 2.000000);
	TextDrawTextSize(TTren[7], 8.000000, 8.000000);
	TextDrawAlignment(TTren[7], 0);
	TextDrawColor(TTren[7], 0xE1E1E1FF);
	TextDrawUseBox(TTren[7], 1);
	TextDrawBoxColor(TTren[7], 0x000000FF);
	TextDrawSetShadow(TTren[7], 1);
	TextDrawSetOutline(TTren[7], 0);
	TextDrawBackgroundColor(TTren[7], 0x000000FF);
	TextDrawFont(TTren[7], 4);
	TextDrawSetProportional(TTren[7], 1);
	TextDrawSetSelectable(TTren[7], 0);

	TTren[8] = TextDrawCreate(609.497498, 98.476959, "hud:radar_TORENO");
	TextDrawLetterSize(TTren[8], 1.000000, 2.000000);
	TextDrawTextSize(TTren[8], 8.000000, 8.000000);
	TextDrawAlignment(TTren[8], 0);
	TextDrawColor(TTren[8], 0xE1E1E1FF);
	TextDrawUseBox(TTren[8], 1);
	TextDrawBoxColor(TTren[8], 0x000000FF);
	TextDrawSetShadow(TTren[8], 1);
	TextDrawSetOutline(TTren[8], 0);
	TextDrawBackgroundColor(TTren[8], 0x000000FF);
	TextDrawFont(TTren[8], 4);
	TextDrawSetProportional(TTren[8], 1);
	TextDrawSetSelectable(TTren[8], 0);
	//
	text1prueba[0] = TextDrawCreate(581.000000, 387.000000, "r");
	TextDrawLetterSize(text1prueba[0], 0.030000, 4.499997);
	TextDrawTextSize(text1prueba[0], 452.000000, 74.000000);
	TextDrawAlignment(text1prueba[0], 2);
	TextDrawColor(text1prueba[0], 0x000000FF);
	TextDrawUseBox(text1prueba[0], 1);
	TextDrawBoxColor(text1prueba[0], 0x0A0A0AC8);
	TextDrawSetShadow(text1prueba[0], 5);
	TextDrawSetOutline(text1prueba[0], 0);
	TextDrawBackgroundColor(text1prueba[0], 0x000000FF);
	TextDrawFont(text1prueba[0], 1);
	TextDrawSetProportional(text1prueba[0], 0);
	TextDrawSetSelectable(text1prueba[0], 0);

	text1prueba[1] = TextDrawCreate(581.000000, 340.000000, "r");
	TextDrawLetterSize(text1prueba[1], 0.030000, 4.499997);
	TextDrawTextSize(text1prueba[1], 452.000000, 74.000000);
	TextDrawAlignment(text1prueba[1], 2);
	TextDrawColor(text1prueba[1], 0x000000FF);
	TextDrawUseBox(text1prueba[1], 1);
	TextDrawBoxColor(text1prueba[1], 0x0A0A0AC8);
	TextDrawSetShadow(text1prueba[1], 5);
	TextDrawSetOutline(text1prueba[1], 0);
	TextDrawBackgroundColor(text1prueba[1], 0x000000FF);
	TextDrawFont(text1prueba[1], 1);
	TextDrawSetProportional(text1prueba[1], 0);
	TextDrawSetSelectable(text1prueba[1], 0);

	Verificar1 = TextDrawCreate(8.800004, 192.639938, "Correo sin verificar");
	TextDrawLetterSize(Verificar1, 0.314799, 1.144533);
	TextDrawAlignment(Verificar1, 1);
	TextDrawColor(Verificar1, -64937473);
	TextDrawSetShadow(Verificar1, 0);
	TextDrawSetOutline(Verificar1, 1);
	TextDrawBackgroundColor(Verificar1, 51);
	TextDrawFont(Verificar1, 1);
	TextDrawSetProportional(Verificar1, 1);

	Verificar2 = TextDrawCreate(8.799987, 206.826599, "/verificar correo");
	TextDrawLetterSize(Verificar2, 0.317199, 1.010132);
	TextDrawAlignment(Verificar2, 1);
	TextDrawColor(Verificar2, -169320961);
	TextDrawSetShadow(Verificar2, 0);
	TextDrawSetOutline(Verificar2, 1);
	TextDrawBackgroundColor(Verificar2, 51);
	TextDrawFont(Verificar2, 1);
	TextDrawSetProportional(Verificar2, 1);

	PantallaGTA[0] = TextDrawCreate(368.257446, 9.333334, "PANTALLA");
	TextDrawLetterSize(PantallaGTA[0], 0.449999, 1.600000);
	TextDrawAlignment(PantallaGTA[0], 1);
	TextDrawColor(PantallaGTA[0], -1);
	TextDrawSetShadow(PantallaGTA[0], 0);
	TextDrawSetOutline(PantallaGTA[0], 1);
	TextDrawBackgroundColor(PantallaGTA[0], 51);
	TextDrawFont(PantallaGTA[0], 2);
	TextDrawSetProportional(PantallaGTA[0], 1);

	CN = TextDrawCreate(0.000000, 0.000000, "---");
	TextDrawLetterSize(CN, 1.000000, 12.199999);
	TextDrawTextSize(CN, 640.000000, -69.000000);
	TextDrawAlignment(CN, 0);
	TextDrawColor(CN, 0x000000FF);
	TextDrawUseBox(CN, 1);
	TextDrawBoxColor(CN, 0x000000FF);
	TextDrawSetShadow(CN, 1);
	TextDrawSetOutline(CN, 1);
	TextDrawBackgroundColor(CN, 0x000000FF);
	TextDrawFont(CN, 3);
	TextDrawSetProportional(CN, 1);
	TextDrawSetSelectable(CN, 0);

	CN2 = TextDrawCreate(0.000000, 337.000000, "---");
	TextDrawLetterSize(CN2, 0.899999, 15.000000);
	TextDrawTextSize(CN2, 640.000000, -60.000000);
	TextDrawAlignment(CN2, 0);
	TextDrawColor(CN2, 0x000000FF);
	TextDrawUseBox(CN2, 1);
	TextDrawBoxColor(CN2, 0x000000FF);
	TextDrawSetShadow(CN2, 1);
	TextDrawSetOutline(CN2, 1);
	TextDrawBackgroundColor(CN2, 0x000000FF);
	TextDrawFont(CN2, 3);
	TextDrawSetProportional(CN2, 1);
	TextDrawSetSelectable(CN2, 0);

	ConsigueUNN = TextDrawCreate(251.595825, 352.916839, "Consigue un sombrero");
	TextDrawLetterSize(ConsigueUNN, 0.357232, 1.430832);
	TextDrawAlignment(ConsigueUNN, 1);
	TextDrawColor(ConsigueUNN, -1);
	TextDrawSetShadow(ConsigueUNN, 0);
	TextDrawSetOutline(ConsigueUNN, 1);
	TextDrawBackgroundColor(ConsigueUNN, 51);
	TextDrawFont(ConsigueUNN, 1);
	TextDrawSetProportional(ConsigueUNN, 1);

	DescartableD = TextDrawCreate(225.358688, 368.666595, "descartable durante Halloween.");
	TextDrawLetterSize(DescartableD, 0.358169, 1.401665);
	TextDrawAlignment(DescartableD, 1);
	TextDrawColor(DescartableD, -1);
	TextDrawSetShadow(DescartableD, 0);
	TextDrawSetOutline(DescartableD, 1);
	TextDrawBackgroundColor(DescartableD, 51);
	TextDrawFont(DescartableD, 1);
	TextDrawSetProportional(DescartableD, 1);

	PantallaGTA[1] = TextDrawCreate(560.414245, 15.000000, "Escribe ~y~/ocultar pantalla ~w~para cerrar el gps.");
	TextDrawLetterSize(PantallaGTA[1], 0.138433, 0.771665);
	TextDrawTextSize(PantallaGTA[1], 825.065979, 2567.834228);
	TextDrawAlignment(PantallaGTA[1], 2);
	TextDrawColor(PantallaGTA[1], -1);
	TextDrawSetShadow(PantallaGTA[1], 0);
	TextDrawSetOutline(PantallaGTA[1], 1);
	TextDrawBackgroundColor(PantallaGTA[1], 51);
	TextDrawFont(PantallaGTA[1], 2);
	TextDrawSetProportional(PantallaGTA[1], 1);

    CN3 = TextDrawCreate(120.000000, 50.000000, ""SERVER_NAME"");
	TextDrawLetterSize(CN3, 1.200000, 2.100000);
	TextDrawTextSize(CN3, 1280.000000, 1280.000000);
	TextDrawAlignment(CN3, 0);
	TextDrawColor(CN3, 0xE1E1E1FF);
	TextDrawUseBox(CN3, 0);
	TextDrawBoxColor(CN3, 0x80808080);
	TextDrawSetShadow(CN3, 2);
	TextDrawSetOutline(CN3, 0);
	TextDrawBackgroundColor(CN3, 0x000000FF);
	TextDrawFont(CN3, 3);
	TextDrawSetProportional(CN3, 1);
	TextDrawSetSelectable(CN3, 0);

	CN4 = TextDrawCreate(190.000000, 350.000000, "WEB: HTTP://"WEB_LOGEO"");
	TextDrawLetterSize(CN4, 0.480000, 1.120000);
	TextDrawTextSize(CN4, 1280.000000, 1280.000000);
	TextDrawAlignment(CN4, 0);
	TextDrawColor(CN4, 0x6699FFFF);
	TextDrawUseBox(CN4, 0);
	TextDrawBoxColor(CN4, 0x80808080);
	TextDrawSetShadow(CN4, 2);
	TextDrawSetOutline(CN4, 0);
	TextDrawBackgroundColor(CN4, 0x000000FF);
	TextDrawFont(CN4, 1);
	TextDrawSetProportional(CN4, 1);
	TextDrawSetSelectable(CN4, 0);

 	CN5 = TextDrawCreate(437.000000, 430.000000, ""WEB_INDEX2" - Servidor RP "SERVER_NUMBER"");
	TextDrawLetterSize(CN5, 0.289999, 1.200000);
	TextDrawTextSize(CN5, 1280.000000, 1280.000000);
	TextDrawAlignment(CN5, 0);
	TextDrawColor(CN5, 0xFFFFFFFF);
	TextDrawUseBox(CN5, 0);
	TextDrawBoxColor(CN5, 0x80808080);
	TextDrawSetShadow(CN5, 1);
	TextDrawSetOutline(CN5, 0);
	TextDrawBackgroundColor(CN5, 0x000000FF);
	TextDrawFont(CN5, 1);
	TextDrawSetProportional(CN5, 1);
	TextDrawSetSelectable(CN5, 0);

	NewPlayer[0] = TextDrawCreate(130.000000, 394.000000, "l");
	TextDrawLetterSize(NewPlayer[0], 44.499886, 2.799998);
	TextDrawTextSize(NewPlayer[0], 1280.000000, 1280.000000);
	TextDrawAlignment(NewPlayer[0], 0);
	TextDrawColor(NewPlayer[0], 0x00000020);
	TextDrawUseBox(NewPlayer[0], 0);
	TextDrawBoxColor(NewPlayer[0], 0x80808080);
	TextDrawSetShadow(NewPlayer[0], 0);
	TextDrawSetOutline(NewPlayer[0], 0);
	TextDrawBackgroundColor(NewPlayer[0], 0x000000FF);
	TextDrawFont(NewPlayer[0], 1);
	TextDrawSetProportional(NewPlayer[0], 1);
	TextDrawSetSelectable(NewPlayer[0], 0);

	NewPlayer[2] = TextDrawCreate(191.156677, 400.750000, "       Pulsa ~y~'H'~w~ para abrir el menª de opciones.");
	TextDrawLetterSize(NewPlayer[2], 0.320219, 1.320001);
	TextDrawAlignment(NewPlayer[2], 1);
	TextDrawColor(NewPlayer[2], -1);
	TextDrawSetShadow(NewPlayer[2], 1);
	TextDrawSetOutline(NewPlayer[2], 0);
	TextDrawBackgroundColor(NewPlayer[2], 255);
	TextDrawFont(NewPlayer[2], 1);
	TextDrawSetProportional(NewPlayer[2], 1);

	TAXIMET3 = TextDrawCreate(549.150024, 423.149994, "_");
	TextDrawLetterSize(TAXIMET3, 1.000000, -0.200000);
	TextDrawTextSize(TAXIMET3, 547.000000, 0.000000);
	TextDrawAlignment(TAXIMET3, 0);
	TextDrawColor(TAXIMET3, 0xE1E1E1FF);
	TextDrawUseBox(TAXIMET3, 0);
	TextDrawBoxColor(TAXIMET3, 0xFF9900FF);
	TextDrawSetShadow(TAXIMET3, 2);
	TextDrawSetOutline(TAXIMET3, 0);
	TextDrawBackgroundColor(TAXIMET3, 0x000000FF);
	TextDrawFont(TAXIMET3, 1);
	TextDrawSetProportional(TAXIMET3, 1);
	TextDrawSetSelectable(TAXIMET3, 0);

	TAXIMET4 = TextDrawCreate(549.150024, 376.149994, "_");
	TextDrawLetterSize(TAXIMET4, 1.000000, -0.200000);
	TextDrawTextSize(TAXIMET4, 613.349976, 0.000000);
	TextDrawAlignment(TAXIMET4, 0);
	TextDrawColor(TAXIMET4, 0xE1E1E1FF);
	TextDrawUseBox(TAXIMET4, 1);
	TextDrawBoxColor(TAXIMET4, 0x00B7C2FF);
	TextDrawSetShadow(TAXIMET4, 2);
	TextDrawSetOutline(TAXIMET4, 0);
	TextDrawBackgroundColor(TAXIMET4, 0x000000FF);
	TextDrawFont(TAXIMET4, 1);
	TextDrawSetProportional(TAXIMET4, 1);
	TextDrawSetSelectable(TAXIMET4, 0);

	TAXIMET = TextDrawCreate(499.000000, 387.000000, "Taximetro");
	TextDrawLetterSize(TAXIMET, 0.340000, 1.000000);
	TextDrawTextSize(TAXIMET, 50.000000, 74.000000);
	TextDrawAlignment(TAXIMET, 2);
	TextDrawColor(TAXIMET, 0xFFFFFFFF);
	TextDrawUseBox(TAXIMET, 1);
	TextDrawBoxColor(TAXIMET, 0x00000099);
	TextDrawSetShadow(TAXIMET, 1);
	TextDrawSetOutline(TAXIMET, 0);
	TextDrawBackgroundColor(TAXIMET, 0x00000033);
	TextDrawFont(TAXIMET, 1);
	TextDrawSetProportional(TAXIMET, 1);
	TextDrawSetSelectable(TAXIMET, 0);

	AlertaRefuerzos[0] = TextDrawCreate(264.000000, 351.000000, "_");
	TextDrawBackgroundColor(AlertaRefuerzos[0], 255);
	TextDrawFont(AlertaRefuerzos[0], 1);
	TextDrawLetterSize(AlertaRefuerzos[0], 0.420000, 1.200000);
	TextDrawColor(AlertaRefuerzos[0], -1);
	TextDrawSetOutline(AlertaRefuerzos[0], 0);
	TextDrawSetProportional(AlertaRefuerzos[0], 1);
	TextDrawSetShadow(AlertaRefuerzos[0], 1);
	TextDrawUseBox(AlertaRefuerzos[0], 1);
	TextDrawBoxColor(AlertaRefuerzos[0], 255);
	TextDrawTextSize(AlertaRefuerzos[0], 364.000000, 12.000000);
	TextDrawSetSelectable(AlertaRefuerzos[0], 0);

	AlertaRefuerzos[1] = TextDrawCreate(274.000000, 351.000000, "Enviando alertas");
	TextDrawBackgroundColor(AlertaRefuerzos[1], 255);
	TextDrawFont(AlertaRefuerzos[1], 1);
	TextDrawLetterSize(AlertaRefuerzos[1], 0.340000, 1.000000);
	TextDrawColor(AlertaRefuerzos[1], -1);
	TextDrawSetOutline(AlertaRefuerzos[1], 0);
	TextDrawSetProportional(AlertaRefuerzos[1], 1);
	TextDrawSetShadow(AlertaRefuerzos[1], 1);
	TextDrawSetSelectable(AlertaRefuerzos[1], 0);

	TEXTDRAWBOX1 = TextDrawCreate(549.150024, 423.149994, "_");
	TextDrawLetterSize(TEXTDRAWBOX1, 1.000000, -0.200000);
	TextDrawTextSize(TEXTDRAWBOX1, 541.724976, 0.000000);
	TextDrawAlignment(TEXTDRAWBOX1, 0);
	TextDrawColor(TEXTDRAWBOX1, 0xE1E1E1FF);
	TextDrawUseBox(TEXTDRAWBOX1, 0);
	TextDrawBoxColor(TEXTDRAWBOX1, 0xFF9900FF);
	TextDrawSetShadow(TEXTDRAWBOX1, 2);
	TextDrawSetOutline(TEXTDRAWBOX1, 0);
	TextDrawBackgroundColor(TEXTDRAWBOX1, 0x000000FF);
	TextDrawFont(TEXTDRAWBOX1, 1);
	TextDrawSetProportional(TEXTDRAWBOX1, 1);
	TextDrawSetSelectable(TEXTDRAWBOX1, 0);

	TEXTDRAWBOX2 = TextDrawCreate(549.150024, 376.149994, "_");
	TextDrawLetterSize(TEXTDRAWBOX2, 1.000000, -0.200000);
	TextDrawTextSize(TEXTDRAWBOX2, 541.724976, 0.000000);
	TextDrawAlignment(TEXTDRAWBOX2, 0);
	TextDrawColor(TEXTDRAWBOX2, 0xE1E1E1FF);
	TextDrawUseBox(TEXTDRAWBOX2, 0);
	TextDrawBoxColor(TEXTDRAWBOX2, 0x00B7C2FF);
	TextDrawSetShadow(TEXTDRAWBOX2, 2);
	TextDrawSetOutline(TEXTDRAWBOX2, 0);
	TextDrawBackgroundColor(TEXTDRAWBOX2, 0x000000FF);
	TextDrawFont(TEXTDRAWBOX2, 1);
	TextDrawSetProportional(TEXTDRAWBOX2, 1);
	TextDrawSetSelectable(TEXTDRAWBOX2, 0);

	TEXTDRAWBOX3 = TextDrawCreate(587.000000, 404.000000, "KM/h");
	TextDrawLetterSize(TEXTDRAWBOX3, 0.310000, 0.899999);
	TextDrawTextSize(TEXTDRAWBOX3, 1280.000000, 1280.000000);
	TextDrawAlignment(TEXTDRAWBOX3, 0);
	TextDrawColor(TEXTDRAWBOX3, 0xFFFFFFFF);
	TextDrawUseBox(TEXTDRAWBOX3, 0);
	TextDrawBoxColor(TEXTDRAWBOX3, 0x80808080);
	TextDrawSetShadow(TEXTDRAWBOX3, 2);
	TextDrawSetOutline(TEXTDRAWBOX3, 1);
	TextDrawBackgroundColor(TEXTDRAWBOX3, 0x000000FF);
	TextDrawFont(TEXTDRAWBOX3, 1);
	TextDrawSetProportional(TEXTDRAWBOX3, 1);
	TextDrawSetSelectable(TEXTDRAWBOX3, 0);

	TEXTDRAWBOX4 = TextDrawCreate(548.000000, 387.000000, "Velocimetro");
	TextDrawLetterSize(TEXTDRAWBOX4, 0.340000, 1.000000);
	TextDrawTextSize(TEXTDRAWBOX4, 1280.000000, 1280.000000);
	TextDrawAlignment(TEXTDRAWBOX4, 0);
	TextDrawColor(TEXTDRAWBOX4, 0xFFFFFFFF);
	TextDrawUseBox(TEXTDRAWBOX4, 0);
	TextDrawBoxColor(TEXTDRAWBOX4, 0x80808080);
	TextDrawSetShadow(TEXTDRAWBOX4, 1);
	TextDrawSetOutline(TEXTDRAWBOX4, 0);
	TextDrawBackgroundColor(TEXTDRAWBOX4, 0x000000FF);
	TextDrawFont(TEXTDRAWBOX4, 1);
	TextDrawSetProportional(TEXTDRAWBOX4, 1);
	TextDrawSetSelectable(TEXTDRAWBOX4, 0);

	velocimetro6 = TextDrawCreate(548.000000, 340.000000, "Combustible");
	TextDrawLetterSize(velocimetro6, 0.340000, 1.000000);
	TextDrawTextSize(velocimetro6, 1280.000000, 1280.000000);
	TextDrawAlignment(velocimetro6, 0);
	TextDrawColor(velocimetro6, 0xFFFFFFFF);
	TextDrawUseBox(velocimetro6, 0);
	TextDrawBoxColor(velocimetro6, 0x80808080);
	TextDrawSetShadow(velocimetro6, 1);
	TextDrawSetOutline(velocimetro6, 0);
	TextDrawBackgroundColor(velocimetro6, 0x000000FF);
	TextDrawFont(velocimetro6, 1);
	TextDrawSetProportional(velocimetro6, 1);
	TextDrawSetSelectable(velocimetro6, 0);

	AlertaRefuerzos[2] = TextDrawCreate(261.000000, 345.000000, "~r~~h~.");
	TextDrawBackgroundColor(AlertaRefuerzos[2], 255);
	TextDrawFont(AlertaRefuerzos[2], 1);
	TextDrawLetterSize(AlertaRefuerzos[2], 0.460000, 1.700000);
	TextDrawColor(AlertaRefuerzos[2], -1);
	TextDrawSetOutline(AlertaRefuerzos[2], 0);
	TextDrawSetProportional(AlertaRefuerzos[2], 1);
	TextDrawSetShadow(AlertaRefuerzos[2], 1);
	TextDrawSetSelectable(AlertaRefuerzos[2], 0);

	AlertaRefuerzos[3] = TextDrawCreate(264.000000, 351.000000, "~r~~h~)");
	TextDrawBackgroundColor(AlertaRefuerzos[3], 255);
	TextDrawFont(AlertaRefuerzos[3], 1);
	TextDrawLetterSize(AlertaRefuerzos[3], 0.380000, 1.000000);
	TextDrawColor(AlertaRefuerzos[3], -1);
	TextDrawSetOutline(AlertaRefuerzos[3], 0);
	TextDrawSetProportional(AlertaRefuerzos[3], 1);
	TextDrawSetShadow(AlertaRefuerzos[3], 1);
	TextDrawSetSelectable(AlertaRefuerzos[3], 0);

	AlertaRefuerzos[4] = TextDrawCreate(267.000000, 349.000000, "~r~~h~)");
	TextDrawBackgroundColor(AlertaRefuerzos[4], 255);
	TextDrawFont(AlertaRefuerzos[4], 1);
	TextDrawLetterSize(AlertaRefuerzos[4], 0.410000, 1.400000);
	TextDrawColor(AlertaRefuerzos[4], -1);
	TextDrawSetOutline(AlertaRefuerzos[4], 0);
	TextDrawSetProportional(AlertaRefuerzos[4], 1);
	TextDrawSetShadow(AlertaRefuerzos[4], 1);
	TextDrawSetSelectable(AlertaRefuerzos[4], 0);

	FondoLoginX = TextDrawCreate(5.294117, 271.583312, "usebox");
	TextDrawLetterSize(FondoLoginX, 0.000000, 4.025930);
	TextDrawTextSize(FondoLoginX, 167.411773, 0.000000);
	TextDrawAlignment(FondoLoginX, 1);
	TextDrawColor(FondoLoginX, 0);
	TextDrawUseBox(FondoLoginX, true);
	TextDrawBoxColor(FondoLoginX, 102);
	TextDrawSetShadow(FondoLoginX, 0);
	TextDrawSetOutline(FondoLoginX, 0);
	TextDrawFont(FondoLoginX, 0);

	Velocimetrotd[0] = TextDrawCreate(617.882324, 371.583312, "LD_SPAC:white");
	TextDrawLetterSize(Velocimetrotd[0], 0.000000, 0.000000);
	TextDrawTextSize(Velocimetrotd[0], -72.470581, 7.000000);
	TextDrawAlignment(Velocimetrotd[0], 1);
	TextDrawColor(Velocimetrotd[0], 255);
	TextDrawSetShadow(Velocimetrotd[0], 0);
	TextDrawSetOutline(Velocimetrotd[0], 0);
	TextDrawFont(Velocimetrotd[0], 4);

	Velocimetrotd[1] = TextDrawCreate(617.882324, 419.416687, "LD_SPAC:white");
	TextDrawLetterSize(Velocimetrotd[1], 0.000000, 0.000000);
	TextDrawTextSize(Velocimetrotd[1], -71.529418, 7.000000);
	TextDrawAlignment(Velocimetrotd[1], 1);
	TextDrawColor(Velocimetrotd[1], 255);
	TextDrawUseBox(Velocimetrotd[1], true);
	TextDrawBoxColor(Velocimetrotd[1], 799);
	TextDrawSetShadow(Velocimetrotd[1], 0);
	TextDrawSetOutline(Velocimetrotd[1], 0);
	TextDrawFont(Velocimetrotd[1], 4);

	BoxCarrera[0] = TextDrawCreate(46.875000, 409.500061, "-");
	TextDrawLetterSize(BoxCarrera[0], 5.718753, -0.995832);
	TextDrawAlignment(BoxCarrera[0], 1);
	TextDrawColor(BoxCarrera[0], -1);
	TextDrawSetShadow(BoxCarrera[0], 0);
	TextDrawSetOutline(BoxCarrera[0], 1);
	TextDrawBackgroundColor(BoxCarrera[0], 51);
	TextDrawFont(BoxCarrera[0], 2);
	TextDrawSetProportional(BoxCarrera[0], 1);

	BoxCarrera[1] = TextDrawCreate(138.875000, 339.833465, "usebox");
	TextDrawLetterSize(BoxCarrera[1], 0.000000, 9.340736);
	TextDrawTextSize(BoxCarrera[1], 36.125000, 0.000000);
	TextDrawAlignment(BoxCarrera[1], 1);
	TextDrawColor(BoxCarrera[1], 0);
	TextDrawUseBox(BoxCarrera[1], true);
	TextDrawBoxColor(BoxCarrera[1], -1);
	TextDrawSetShadow(BoxCarrera[1], 0);
	TextDrawSetOutline(BoxCarrera[1], 0);
	TextDrawFont(BoxCarrera[1], 0);

	BoxCarrera[2] = TextDrawCreate(137.000000, 341.583312, "usebox");
	TextDrawLetterSize(BoxCarrera[2], 0.000000, 8.951854);
	TextDrawTextSize(BoxCarrera[2], 37.375000, 0.000000);
	TextDrawAlignment(BoxCarrera[2], 1);
	TextDrawColor(BoxCarrera[2], 0);
	TextDrawUseBox(BoxCarrera[2], true);
	TextDrawBoxColor(BoxCarrera[2], 255);
	TextDrawSetShadow(BoxCarrera[2], 0);
	TextDrawSetOutline(BoxCarrera[2], 0);
	TextDrawFont(BoxCarrera[2], 0);

	BoxCarrera[3] = TextDrawCreate(48.750000, 350.583312, "-");
	TextDrawLetterSize(BoxCarrera[3], 5.385008, 0.789165);
	TextDrawAlignment(BoxCarrera[3], 1);
	TextDrawColor(BoxCarrera[3], -1);
	TextDrawSetShadow(BoxCarrera[3], -3);
	TextDrawSetOutline(BoxCarrera[3], 0);
	TextDrawBackgroundColor(BoxCarrera[3], 51);
	TextDrawFont(BoxCarrera[3], 2);
	TextDrawSetProportional(BoxCarrera[3], 1);

	FranjaCriminal = TextDrawCreate(-33.882381, 397.833251, "I");
	TextDrawLetterSize(FranjaCriminal, 64.748863, 2.842499);
	TextDrawAlignment(FranjaCriminal, 1);
	TextDrawColor(FranjaCriminal, 799);
	TextDrawSetShadow(FranjaCriminal, 0);
	TextDrawSetOutline(FranjaCriminal, 1);
	TextDrawBackgroundColor(FranjaCriminal, 170);
	TextDrawFont(FranjaCriminal, 1);
	TextDrawSetProportional(FranjaCriminal, 1);

	CreateIconsGPS();

	for(new c1=0;c1<MAX_ENCARGOS;c1++)
	{
		MisionCriminal[c1] = TextDrawCreate(320.941467, 401.916748, "Reªnete con tu colega en el punto marcado");
		TextDrawLetterSize(MisionCriminal[c1], 0.308353, 1.740000);
		TextDrawAlignment(MisionCriminal[c1], 2);
		TextDrawColor(MisionCriminal[c1], -1);
		TextDrawSetShadow(MisionCriminal[c1], 0);
		TextDrawSetOutline(MisionCriminal[c1], 1);
		TextDrawBackgroundColor(MisionCriminal[c1], 51);
		TextDrawFont(MisionCriminal[c1], 1);
		TextDrawSetProportional(MisionCriminal[c1], 1);
	}
	for(new c2=0;c2<MAX_ENCARGOS;c2++)
	{
		MisionColega[c2] = TextDrawCreate(317.832366, 388.750213, "Pulsa la tecla ~b~T~w~ para hablar o ingresar un ~y~comandos~w~.");
		TextDrawLetterSize(MisionColega[c2], 0.258724, 1.241666);
		TextDrawTextSize(MisionColega[c2], -776.339355, 241.500518);
		TextDrawAlignment(MisionColega[c2], 2);
		TextDrawColor(MisionColega[c2], -1);
		TextDrawUseBox(MisionColega[c2], 1);
		TextDrawBoxColor(MisionColega[c2], 15);
		TextDrawSetShadow(MisionColega[c2], 1);
		TextDrawSetOutline(MisionColega[c2], 0);
		TextDrawBackgroundColor(MisionColega[c2], 255);
		TextDrawFont(MisionColega[c2], 1);
		TextDrawSetProportional(MisionColega[c2], 1);
	}
	for(new c3=0;c3<MAX_ENCARGOS;c3++)
	{
		TiempoMision[c3] = TextDrawCreate(294.588134, 422.333404, "05:00");
		TextDrawLetterSize(TiempoMision[c3], 0.525294, 2.008333);
		TextDrawAlignment(TiempoMision[c3], 1);
		TextDrawColor(TiempoMision[c3], -1);
		TextDrawSetShadow(TiempoMision[c3], 0);
		TextDrawSetOutline(TiempoMision[c3], 1);
		TextDrawBackgroundColor(TiempoMision[c3], 51);
		TextDrawFont(TiempoMision[c3], 1);
		TextDrawSetProportional(TiempoMision[c3], 1);
	}
	if(HallX == true)
	{
		PuestoCamionero1 = CreateDynamicObject(19528, -1717.87402, -41.27636, 3.06317,   0.00000, -47.00000, 0.00000);
		PuestoCamionero2 = CreateDynamicObject(19528, -1717.87402, -41.27636, 3.76617,   0.00000, -47.00000, 0.00000);
		PuestoCamionero3 = CreateDynamicObject(19528, -1718.40002, -41.27060, 4.12820,   0.00000, -127.00000, 0.00000);
		PuestoCamionero4 = CreateDynamicObject(19528, -1718.40002, -41.27060, 3.38120,   0.00000, -127.00000, 0.00000);

		PuestoEstMuni1 = CreateDynamicObject(19528, 151.84090, -288.70340, 2.16560,   4.00000, -127.00000, 0.00000);
		PuestoEstMuni2 = CreateDynamicObject(19528, 151.84090, -288.70340, 1.40560,   4.00000, -127.00000, 0.00000);
		PuestoEstMuni3 = CreateDynamicObject(19528, 152.36090, -288.68341, 1.83470,   4.00000, -47.00000, 0.00000);
		PuestoEstMuni4 = CreateDynamicObject(19528, 152.36090, -288.68341, 1.08560,   4.00000, -47.00000, 0.00000);

		GorrosSFBridge1 = CreateDynamicObject(19528, -2675.27832, 1372.14355, 6.59570,   0.00000, -47.00000, 0.00000);
		GorrosSFBridge2 = CreateDynamicObject(19528, -2675.27832, 1372.14355, 7.30174,   0.00000, -47.00000, 0.00000);
		GorrosSFBridge3 = CreateDynamicObject(19528, -2675.79858, 1372.14355, 7.68170,   0.00000, -127.00000, 0.00000);
		GorrosSFBridge4 = CreateDynamicObject(19528, -2675.79858, 1372.14355, 6.93570,   0.00000, -127.00000, 0.00000);

		GorrosBridge1 = CreateDynamicObject(19528, -2548.52100, 1213.80835, 36.96060,   0.00000, -45.00000, 0.00000);
		GorrosBridge2 = CreateDynamicObject(19528, -2548.52100, 1213.80835, 37.63890,   0.00000, -45.00000, 359.79901);
		GorrosBridge3 = CreateDynamicObject(19528, -2548.98096, 1213.80835, 37.27596,   0.00000, -135.00000, 0.00000);
		GorrosBridge4 = CreateDynamicObject(19528, -2548.98096, 1213.80835, 37.98097,   0.00000, -135.00000, 0.00000);

		PuestoUnity1 = CreateDynamicObject(19528, 1700.06006, -1871.18872, 13.39730,   4.00000, -127.00000, 0.00000);
		PuestoUnity2 = CreateDynamicObject(19528, 1700.06006, -1871.18872, 14.15730,   4.00000, -127.00000, 0.00000);
		PuestoUnity3 = CreateDynamicObject(19528, 1700.58008, -1871.16870, 13.81730,   4.00000, -47.00000, 0.00000);
		PuestoUnity4 = CreateDynamicObject(19528, 1700.58008, -1871.16870, 13.07730,   4.00000, -47.00000, 0.00000);

		PuestoUnityx1 = CreateDynamicObject(19528, 1689.25574, -1974.74915, 9.41220,   4.00000, -127.00000, 0.00000);
		PuestoUnityx2 = CreateDynamicObject(19528, 1689.25574, -1974.74915, 8.65220,   4.00000, -127.00000, 0.00000);
		PuestoUnityx3 = CreateDynamicObject(19528, 1689.77576, -1974.72913, 9.07220,   4.00000, -47.00000, 0.00000);
		PuestoUnityx4 = CreateDynamicObject(19528, 1689.77576, -1974.72913, 8.33220,   4.00000, -47.00000, 0.00000);

		PuestoMount1 = CreateDynamicObject(19528, 2352.00879, -645.05890, 127.59730,   4.00000, -47.00000, 0.00000);
		PuestoMount2 = CreateDynamicObject(19528, 2352.00879, -645.05890, 128.33730,   4.00000, -47.00000, 0.00000);
		PuestoMount3 = CreateDynamicObject(19528, 2351.48901, -645.07886, 127.91730,   4.00000, -127.00000, 0.00000);
		PuestoMount4 = CreateDynamicObject(19528, 2351.48901, -645.07886, 128.67729,   4.00000, -127.00000, 0.00000);

		PuestoCB1 = CreateDynamicObject(19528, -2674.39771, 228.87399, 4.16910,   4.00000, -127.00000, 0.00000);
		PuestoCB2 = CreateDynamicObject(19528, -2674.39771, 228.87399, 4.92910,   4.00000, -127.00000, 0.00000);
		PuestoCB3 = CreateDynamicObject(19528, -2673.87793, 228.89400, 3.84910,   4.00000, -47.00000, 0.00000);
		PuestoCB4 = CreateDynamicObject(19528, -2673.87793, 228.89400, 4.58910,   4.00000, -47.00000, 0.00000);

		PuestoWeels1 = CreateDynamicObject(19528, -2751.26343, 196.60699, 6.61540,   4.00000, -47.00000, 0.00000);
		PuestoWeels2 = CreateDynamicObject(19528, -2751.26343, 196.60699, 7.35540,   4.00000, -47.00000, 0.00000);
		PuestoWeels3 = CreateDynamicObject(19528, -2751.78320, 196.58699, 6.93540,   4.00000, -127.00000, 0.00000);
		PuestoWeels4 = CreateDynamicObject(19528, -2751.78320, 196.58699, 7.69540,   4.00000, -127.00000, 0.00000);

		PuestoColinas1 = CreateDynamicObject(19528, 2182.14380, -1344.85938, 24.57190,   4.00000, -127.00000, 0.00000);
		PuestoColinas2 = CreateDynamicObject(19528, 2182.14380, -1344.85938, 23.81190,   4.00000, -127.00000, 0.00000);
		PuestoColinas3 = CreateDynamicObject(19528, 2182.66357, -1344.83936, 24.23190,   4.00000, -47.00000, 0.00000);
		PuestoColinas4 = CreateDynamicObject(19528, 2182.66357, -1344.83936, 23.49190,   4.00000, -47.00000, 0.00000);

		PuestoCNN1 = CreateDynamicObject(19528, -2491.93896, -718.41589, 139.90779,   4.00000, -127.00000, 0.00000);
		PuestoCNN2 = CreateDynamicObject(19528, -2491.41919, -718.39594, 139.53987,   4.00000, -47.00000, 0.00000);
		PuestoCNN3 = CreateDynamicObject(19528, -2491.93896, -718.41589, 139.14780,   4.00000, -127.00000, 0.00000);
		PuestoCNN4 = CreateDynamicObject(19528, -2491.41919, -718.39594, 138.82780,   4.00000, -47.00000, 0.00000);

		PuestoBayside1 = CreateDynamicObject(19528, -2491.98071, 2356.53613, 10.86170,   4.00000, -127.00000, 0.00000);
		PuestoBayside2 = CreateDynamicObject(19528, -2491.98071, 2356.53613, 10.10170,   4.00000, -127.00000, 0.00000);
		PuestoBayside3 = CreateDynamicObject(19528, -2491.46094, 2356.55615, 9.78170,   4.00000, -47.00000, 0.00000);
		PuestoBayside4 = CreateDynamicObject(19528, -2491.46094, 2356.55615, 10.52170,   4.00000, -47.00000, 0.00000);

		PuestoQuebrado1 = CreateDynamicObject(19528, -1318.51648, 2508.76489, 86.86950,   4.00000, -127.00000, 0.00000);
		PuestoQuebrado2 = CreateDynamicObject(19528, -1318.51648, 2508.76489, 87.62950,   4.00000, -127.00000, 0.00000);
		PuestoQuebrado3 = CreateDynamicObject(19528, -1317.99646, 2508.78491, 86.54950,   4.00000, -47.00000, 0.00000);
		PuestoQuebrado4 = CreateDynamicObject(19528, -1317.99646, 2508.78491, 87.28950,   4.00000, -47.00000, 0.00000);

		PuestoEme1 = CreateDynamicObject(19528, 2105.52930, 2204.11621, 10.32780,   4.00000, -47.00000, 0.00000);
		PuestoEme2 = CreateDynamicObject(19528, 2105.52930, 2204.11621, 11.06780,   4.00000, -47.00000, 0.00000);
		PuestoEme3 = CreateDynamicObject(19528, 2105.00952, 2204.09619, 10.64780,   4.00000, -127.00000, 0.00000);
		PuestoEme4 = CreateDynamicObject(19528, 2105.00952, 2204.09619, 11.40780,   4.00000, -127.00000, 0.00000);

		PuestoTrans1 = CreateDynamicObject(19528, 1031.46375, 2096.26099, 10.32780,   4.00000, -47.00000, 0.00000);
		PuestoTrans2 = CreateDynamicObject(19528, 1031.46375, 2096.26099, 11.06780,   4.00000, -47.00000, 0.00000);
		PuestoTrans3 = CreateDynamicObject(19528, 1030.94373, 2096.24097, 10.64780,   4.00000, -127.00000, 0.00000);
		PuestoTrans4 = CreateDynamicObject(19528, 1030.94373, 2096.24097, 11.40780,   4.00000, -127.00000, 0.00000);

		PuestoEstaLV1 = CreateDynamicObject(19528, 1096.65210, 1399.41675, 7.22030,   4.00000, -127.00000, 0.00000);
		PuestoEstaLV2 = CreateDynamicObject(19528, 1096.65210, 1399.41675, 6.46030,   4.00000, -127.00000, 0.00000);
		PuestoEstaLV3 = CreateDynamicObject(19528, 1097.17212, 1399.43677, 6.88030,   4.00000, -47.00000, 0.00000);
		PuestoEstaLV4 = CreateDynamicObject(19528, 1097.17212, 1399.43677, 6.14030,   4.00000, -47.00000, 0.00000);

		PuestoMarket1 = CreateDynamicObject(19528, 961.43488, -1544.11218, 13.43140,   4.00000, -127.00000, 0.00000);
		PuestoMarket2 = CreateDynamicObject(19528, 961.43488, -1544.11218, 14.19140,   4.00000, -127.00000, 0.00000);
		PuestoMarket3 = CreateDynamicObject(19528, 961.95490, -1544.09216, 13.11140,   4.00000, -47.00000, 0.00000);
		PuestoMarket4 = CreateDynamicObject(19528, 961.95490, -1544.09216, 13.85140,   4.00000, -47.00000, 0.00000);

		PuestoSMB1 = CreateDynamicObject(19528, 321.67239, -1756.69836, 5.09360,   4.00000, -127.00000, 0.00000);
		PuestoSMB2 = CreateDynamicObject(19528, 321.67239, -1756.69836, 4.33360,   4.00000, -127.00000, 0.00000);
		PuestoSMB3 = CreateDynamicObject(19528, 322.19241, -1756.67834, 4.75360,   4.00000, -47.00000, 0.00000);
		PuestoSMB4 = CreateDynamicObject(19528, 322.19241, -1756.67834, 4.01360,   4.00000, -47.00000, 0.00000);

		PuestoBasu1 = CreateDynamicObject(19528, -53.87440, -1398.46875, 2.96140,   4.00000, -127.00000, 0.00000);
		PuestoBasu2 = CreateDynamicObject(19528, -53.87440, -1398.46875, 2.20140,   4.00000, -127.00000, 0.00000);
		PuestoBasu3 = CreateDynamicObject(19528, -53.35440, -1398.44873, 2.62140,   4.00000, -47.00000, 0.00000);
		PuestoBasu4 = CreateDynamicObject(19528, -53.35440, -1398.44873, 1.88140,   4.00000, -47.00000, 0.00000);

		PuestoLSF1 = CreateDynamicObject(19528, -348.57159, -1035.08228, 58.82000,   4.00000, -47.00000, 0.00000);
		PuestoLSF2 = CreateDynamicObject(19528, -348.57159, -1035.08228, 59.56000,   4.00000, -47.00000, 0.00000);
		PuestoLSF3 = CreateDynamicObject(19528, -349.09161, -1035.10229, 59.14000,   4.00000, -127.00000, 0.00000);
		PuestoLSF4 = CreateDynamicObject(19528, -349.09161, -1035.10229, 59.90000,   4.00000, -127.00000, 0.00000);

		PuestoMC1 = CreateDynamicObject(19528, -2817.55005, -1530.19592, 141.43129,   4.00000, -127.00000, 0.00000);
		PuestoMC2 = CreateDynamicObject(19528, -2817.55005, -1530.19592, 140.67130,   4.00000, -127.00000, 0.00000);
		PuestoMC3 = CreateDynamicObject(19528, -2817.03027, -1530.17590, 141.09129,   4.00000, -47.00000, 0.00000);
		PuestoMC4 = CreateDynamicObject(19528, -2817.03027, -1530.17590, 140.35130,   4.00000, -47.00000, 0.00000);

		PuestoJT1 = CreateDynamicObject(19528, 2621.71606, 2416.81836, 10.64780,   4.00000, -127.00000, 0.00000);
		PuestoJT2 = CreateDynamicObject(19528, 2621.71606, 2416.81836, 11.40780,   4.00000, -127.00000, 0.00000);
		PuestoJT3 = CreateDynamicObject(19528, 2622.23584, 2416.83838, 10.32780,   4.00000, -47.00000, 0.00000);
		PuestoJT4 = CreateDynamicObject(19528, 2622.23584, 2416.83838, 11.06780,   4.00000, -47.00000, 0.00000);

		PuestoPP1 = CreateDynamicObject(19528, 2109.62354, 2736.95850, 10.64780,   4.00000, -127.00000, 0.00000);
		PuestoPP2 = CreateDynamicObject(19528, 2109.62354, 2736.95850, 11.40780,   4.00000, -127.00000, 0.00000);
		PuestoPP3 = CreateDynamicObject(19528, 2110.14331, 2736.97852, 10.32780,   4.00000, -47.00000, 0.00000);
		PuestoPP4 = CreateDynamicObject(19528, 2110.14331, 2736.97852, 11.06780,   4.00000, -47.00000, 0.00000);

		PuestoAA1 = CreateDynamicObject(19528, 418.15610, 2543.38354, 16.66830,   4.00000, -47.00000, 0.00000);
		PuestoAA2 = CreateDynamicObject(19528, 418.15610, 2543.38354, 15.92830,   4.00000, -47.00000, 0.00000);
		PuestoAA3 = CreateDynamicObject(19528, 417.63608, 2543.36353, 16.24830,   4.00000, -127.00000, 0.00000);
		PuestoAA4 = CreateDynamicObject(19528, 417.63608, 2543.36353, 17.00830,   4.00000, -127.00000, 0.00000);

		PuestoPaya1 = CreateDynamicObject(19528, -280.61209, 2654.41797, 62.98410,   4.00000, -47.00000, 0.00000);
		PuestoPaya2 = CreateDynamicObject(19528, -280.61209, 2654.41797, 62.24410,   4.00000, -47.00000, 0.00000);
		PuestoPaya3 = CreateDynamicObject(19528, -281.13211, 2654.39795, 63.32410,   4.00000, -127.00000, 0.00000);
		PuestoPaya4 = CreateDynamicObject(19528, -281.13211, 2654.39795, 62.56410,   4.00000, -127.00000, 0.00000);

		PuestoElq1 = CreateDynamicObject(19528, -1479.92395, 2612.61963, 58.28880,   4.00000, -47.00000, 0.00000);
		PuestoElq2 = CreateDynamicObject(19528, -1479.92395, 2612.61963, 59.02880,   4.00000, -47.00000, 0.00000);
		PuestoElq3 = CreateDynamicObject(19528, -1480.44397, 2612.59961, 58.60880,   4.00000, -127.00000, 0.00000);
		PuestoElq4 = CreateDynamicObject(19528, -1480.44397, 2612.59961, 59.36880,   4.00000, -127.00000, 0.00000);

		PuestoLeSF1 = CreateDynamicObject(19528, -1848.92102, 1280.15979, 22.07000,   4.00000, -47.00000, 0.00000);
		PuestoLeSF2 = CreateDynamicObject(19528, -1848.92102, 1280.15979, 22.81000,   4.00000, -47.00000, 0.00000);
		PuestoLeSF3 = CreateDynamicObject(19528, -1849.44104, 1280.13977, 22.39000,   4.00000, -127.00000, 0.00000);
		PuestoLeSF4 = CreateDynamicObject(19528, -1849.44104, 1280.13977, 23.15000,   4.00000, -127.00000, 0.00000);

		PuestoPG1 = CreateDynamicObject(19528, 2104.33765, -1940.98132, 13.05440,   4.00000, -47.00000, 0.00000);
		PuestoPG2 = CreateDynamicObject(19528, 2104.33765, -1940.98132, 13.79440,   4.00000, -47.00000, 0.00000);
		PuestoPG3 = CreateDynamicObject(19528, 2103.81787, -1941.00134, 13.37440,   4.00000, -127.00000, 0.00000);
		PuestoPG4 = CreateDynamicObject(19528, 2103.81787, -1941.00134, 14.13440,   4.00000, -127.00000, 0.00000);

		PuestoAG1 = CreateDynamicObject(19528, 2023.01196, -1781.04272, 13.05440,   4.00000, -47.00000, 0.00000);
		PuestoAG2 = CreateDynamicObject(19528, 2023.01196, -1781.04272, 13.79440,   4.00000, -47.00000, 0.00000);
		PuestoAG3 = CreateDynamicObject(19528, 2022.49194, -1781.06274, 13.37440,   4.00000, -127.00000, 0.00000);
		PuestoAG4 = CreateDynamicObject(19528, 2022.49194, -1781.06274, 14.13440,   4.00000, -127.00000, 0.00000);

		PuestoFaDo1 = CreateDynamicObject(19528, -2131.34888, 260.07220, 35.68670,   4.00000, -127.00000, 0.00000);
		PuestoFaDo2 = CreateDynamicObject(19528, -2131.34888, 260.07220, 36.44670,   4.00000, -127.00000, 0.00000);
		PuestoFaDo3 = CreateDynamicObject(19528, -2130.82910, 260.09219, 35.36670,   4.00000, -47.00000, 0.00000);
		PuestoFaDo4 = CreateDynamicObject(19528, -2130.82910, 260.09219, 36.10670,   4.00000, -47.00000, 0.00000);

		PuestoAESF1 = CreateDynamicObject(19528, -1363.53235, 15.62540, 6.16340,   4.00000, -127.00000, 0.00000);
		PuestoAESF2 = CreateDynamicObject(19528, -1363.53235, 15.62540, 6.92340,   4.00000, -127.00000, 0.00000);
		PuestoAESF3 = CreateDynamicObject(19528, -1363.01233, 15.64540, 5.84340,   4.00000, -47.00000, 0.00000);
		PuestoAESF4 = CreateDynamicObject(19528, -1363.01233, 15.64540, 6.58340,   4.00000, -47.00000, 0.00000);

		PuestoC11 = CreateDynamicObject(19528, -2223.07666, -146.43221, 35.14780,   4.00000, -127.00000, 0.00000);
		PuestoC12 = CreateDynamicObject(19528, -2223.07666, -146.43221, 35.90780,   4.00000, -127.00000, 0.00000);
		PuestoC13 = CreateDynamicObject(19528, -2222.55688, -146.41220, 34.82780,   4.00000, -47.00000, 0.00000);
		PuestoC14 = CreateDynamicObject(19528, -2222.55688, -146.41220, 35.56780,   4.00000, -47.00000, 0.00000);
	}
	return 1;
}
public OnPlayerPickUpPickup(playerid, pickupid)
{
    for(new i=0;i<6;i++)
	{
    	if(pickupid == RopaIcono[i] && PickupRopa[playerid] == 0)
		{
		    SendClientMessage(playerid,-1,"====================================================================================");
		    SendClientMessage(playerid,-1,"Para comprar ropa de este local, ingresa a {DBED16}http://"WEB_ROL"{FFFFFF} e inicia sesión.");
			SendClientMessage(playerid,-1,"En caso de ya tener el código de compra, escribe {DBED16}/comprar CODIGO{FFFFFF} Por ej: {DBED16}/comprar AOFE 289");
			SendClientMessage(playerid,-1,"====================================================================================");
			PickupRopa[playerid] = 60;
		}
	}
    return 1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	if(Specteado[playerid] == 1)
	{
	    for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
		    	if(!IsPlayerNPC(i))
				{
	    	  		if(SpecJugador[i] == playerid)
					{
						SetPlayerInterior(i, GetPlayerInterior(playerid));
	 					SetPlayerVirtualWorld(i, GetPlayerVirtualWorld(playerid));
	 					return 1;
					}
				}
			}
		}
	}
	return 1;
}
public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
    new Query[680];
	if(_:playertextid != INVALID_TEXT_DRAW)
	{
	    //Acomodar prendas 1
	    if(playertextid == PrendasAcomodar[playerid][0])
	    {
	        new prendas3[3], p_e, pe[5] = 0;
	        // Objeto vacio
	        prendas3[0] = 19382;
	        prendas3[1] = 19382;
	        // Objeto 1
	        if(UsandoObj[playerid]  == 1 && p_e == 0) { prendas3[0] = PlayerInfo[playerid][pObj];  p_e = 1; pe[0] = 1; }
	        else if(UsandoObj2[playerid] == 1 && p_e == 0) { prendas3[0] = PlayerInfo[playerid][pObj2]; p_e = 1; pe[1] = 1; }
	        else if(UsandoObj3[playerid] == 1 && p_e == 0) { prendas3[0] = PlayerInfo[playerid][pObj3]; p_e = 1; pe[2] = 1; }
	        else if(UsandoObj4[playerid] == 1 && p_e == 0) { prendas3[0] = PlayerInfo[playerid][pObj4]; p_e = 1; pe[3] = 1; }
		    // Objeto 2
            if(UsandoObj[playerid]  == 1 && pe[0] == 1) { prendas3[1] = PlayerInfo[playerid][pObj];  }
            else if(UsandoObj2[playerid] == 1 && pe[1] == 1) { prendas3[1] = PlayerInfo[playerid][pObj2]; }
            else if(UsandoObj3[playerid] == 1 && pe[2] == 1) { prendas3[1] = PlayerInfo[playerid][pObj3]; }
		    else if(UsandoObj4[playerid] == 1 && pe[3] == 1) { prendas3[1] = PlayerInfo[playerid][pObj4]; }

	        if(prendas3[0] == 19382)
	        {
	            OcultarTodo(playerid);
    	    	retornaprendas[playerid] = 0;
    	    	CancelSelectTextDraw(playerid);
	            return 1;
	        }
	        else
	        {
	            OcultarTodo(playerid);
    	    	retornaprendas[playerid] = 0;
    	    	CancelSelectTextDraw(playerid);
	            AcomodarPrenda(playerid, prendas3[1]);
	            return 1;
	        }
	    }
	    if(playertextid == PrendasAcomodar[playerid][1])
	    {
	        new prendas5[3], p_e, pe[5] = 0;
	        // Objeto vacio
	        prendas5[0] = 19382;
	        prendas5[1] = 19382;
	        // Objeto 1

	        if(UsandoObj4[playerid] == 1 && p_e == 0) { prendas5[0] = PlayerInfo[playerid][pObj4]; p_e = 1; pe[3] = 1; }
	        else if(UsandoObj3[playerid] == 1 && p_e == 0) { prendas5[0] = PlayerInfo[playerid][pObj3]; p_e = 1; pe[2] = 1; }
			else if(UsandoObj2[playerid] == 1 && p_e == 0) { prendas5[0] = PlayerInfo[playerid][pObj2]; p_e = 1; pe[1] = 1; }
	        else if(UsandoObj[playerid]  == 1 && p_e == 0) { prendas5[0] = PlayerInfo[playerid][pObj];  p_e = 1; pe[0] = 1; }
	        // Objeto 2
	        if(UsandoObj4[playerid] == 1 && pe[3] == 1) { prendas5[1] = PlayerInfo[playerid][pObj4]; }
	        else if(UsandoObj3[playerid] == 1 && pe[2] == 1) { prendas5[1] = PlayerInfo[playerid][pObj3]; }
	        else if(UsandoObj2[playerid] == 1 && pe[1] == 1) { prendas5[1] = PlayerInfo[playerid][pObj2]; }
	        else if(UsandoObj[playerid]  == 1 && pe[0] == 1) { prendas5[1] = PlayerInfo[playerid][pObj];  }

	        if(prendas5[1] == 19382)
	        {
	            OcultarTodo(playerid);
    	    	retornaprendas[playerid] = 0;
    	    	CancelSelectTextDraw(playerid);
	            return 1;
	        }
	        else
	        {
	            OcultarTodo(playerid);
    	    	retornaprendas[playerid] = 0;
    	    	CancelSelectTextDraw(playerid);
	            AcomodarPrenda(playerid, prendas5[1]);
	            return 1;
	        }
	    }
	    //Quitar prenda 1
	    if(playertextid == QuitarPrendasx[playerid][0])
	    {
	        new prendas3[3], p_e, pe[5] = 0;
	        // Objeto vacio
	        prendas3[0] = 19382;
	        prendas3[1] = 19382;
	        // Objeto 1
	        if(UsandoObj[playerid]  == 1 && p_e == 0) { prendas3[0] = PlayerInfo[playerid][pObj];  p_e = 1; pe[0] = 1; }
		    if(UsandoObj2[playerid] == 1 && p_e == 0) { prendas3[0] = PlayerInfo[playerid][pObj2]; p_e = 1; pe[1] = 1; }
		    if(UsandoObj3[playerid] == 1 && p_e == 0) { prendas3[0] = PlayerInfo[playerid][pObj3]; p_e = 1; pe[2] = 1; }
		    if(UsandoObj4[playerid] == 1 && p_e == 0) { prendas3[0] = PlayerInfo[playerid][pObj4]; p_e = 1; pe[3] = 1; }
		    // Objeto 2
		    if(UsandoObj[playerid]  == 1 && pe[0] == 1) { prendas3[1] = PlayerInfo[playerid][pObj];  }
		    if(UsandoObj2[playerid] == 1 && pe[1] == 1) { prendas3[1] = PlayerInfo[playerid][pObj2]; }
		    if(UsandoObj3[playerid] == 1 && pe[2] == 1) { prendas3[1] = PlayerInfo[playerid][pObj3]; }
		    if(UsandoObj4[playerid] == 1 && pe[3] == 1) { prendas3[1] = PlayerInfo[playerid][pObj4]; }
	        if(prendas3[0] == 19382)
	        {
	            OcultarTodo(playerid);
    	    	retornaprendas[playerid] = 0;
    	    	CancelSelectTextDraw(playerid);
	            return 1;
	        }
	        else
	        {
	            OcultarTodo(playerid);
    	    	retornaprendas[playerid] = 0;
    	    	CancelSelectTextDraw(playerid);
	            QuitarPrenda(playerid, prendas3[1]);
	            return 1;
	        }
	    }
	    if(playertextid == QuitarPrendasx[playerid][1])
	    {
	        new prendas4[3], p_e, pe[5] = 0;
	        // Objeto vacio
	        prendas4[0] = 19382;
	        prendas4[1] = 19382;
	        // Objeto 1
	        if(UsandoObj[playerid]  == 1 && p_e == 0) { prendas4[0] = PlayerInfo[playerid][pObj];  p_e = 1; pe[0] = 1; }
	        if(UsandoObj2[playerid] == 1 && p_e == 0) { prendas4[0] = PlayerInfo[playerid][pObj2]; p_e = 1; pe[1] = 1; }
	        if(UsandoObj3[playerid] == 1 && p_e == 0) { prendas4[0] = PlayerInfo[playerid][pObj3]; p_e = 1; pe[2] = 1; }
	        if(UsandoObj4[playerid] == 1 && p_e == 0) { prendas4[0] = PlayerInfo[playerid][pObj4]; p_e = 1; pe[3] = 1; }
	        // Objeto 2
	        if(UsandoObj[playerid]  == 1 && pe[0] == 1) { prendas4[1] = PlayerInfo[playerid][pObj];  }
	        if(UsandoObj2[playerid] == 1 && pe[1] == 1) { prendas4[1] = PlayerInfo[playerid][pObj2]; }
	        if(UsandoObj3[playerid] == 1 && pe[2] == 1) { prendas4[1] = PlayerInfo[playerid][pObj3]; }
	        if(UsandoObj4[playerid] == 1 && pe[3] == 1) { prendas4[1] = PlayerInfo[playerid][pObj4]; }
	        if(prendas4[1] == 19382)
	        {
	            OcultarTodo(playerid);
    	    	retornaprendas[playerid] = 0;
    	    	CancelSelectTextDraw(playerid);
	            return 1;
	        }
	        else
	        {
	            OcultarTodo(playerid);
    	    	retornaprendas[playerid] = 0;
    	    	CancelSelectTextDraw(playerid);
	            QuitarPrenda(playerid, prendas4[1]);
	            return 1;
	        }
	    }
	    //Usar prendas 1
	    if(playertextid == UsarPrendaO[playerid][0])
    	{
    	    if(PlayerInfo[playerid][pObj] == 19382)
    	    {
    	        OcultarTodo(playerid);
				retornaprendas[playerid] = 0;
				CancelSelectTextDraw(playerid);
    	    }
	        else
	        {
	            if(UsandoP[playerid] >= 2) return ErroresPrenda(playerid,2);
	            else if(UsandoObj[playerid] == 1) return ErroresPrenda(playerid,1);
	            if(!IsPlayerAttachedObjectSlotUsed(playerid,0)) SlotP2[0][playerid] = 0;
	            else if(!IsPlayerAttachedObjectSlotUsed(playerid,1))  SlotP2[0][playerid] = 1;
	            if(UsandoObj[playerid] == 0)
	            {
	                if(PlayerInfo[playerid][pObj] == 19086)
	                {
	                    SetPlayerAttachedObject(playerid, SlotP2[0][playerid], PlayerInfo[playerid][pObj], 6, PlayerInfo[playerid][pfOffsetX], PlayerInfo[playerid][pfOffsetY],  PlayerInfo[playerid][pfOffsetZ], PlayerInfo[playerid][pfRotX], PlayerInfo[playerid][pfRotY], PlayerInfo[playerid][pfRotZ], PlayerInfo[playerid][pfScaleX], PlayerInfo[playerid][pfScaleY], PlayerInfo[playerid][pfScaleZ]);
	                    SendClientMessage(playerid,-1,"Pon a {DBED15}/vibrar{FFFFFF} tu motosierra sexual.");
	                }
	                else if(PlayerInfo[playerid][pObj] == 19078)
	                {
	                    SetPlayerAttachedObject(playerid, SlotP2[0][playerid], PlayerInfo[playerid][pObj], 1, PlayerInfo[playerid][pfOffsetX], PlayerInfo[playerid][pfOffsetY],  PlayerInfo[playerid][pfOffsetZ], PlayerInfo[playerid][pfRotX], PlayerInfo[playerid][pfRotY], PlayerInfo[playerid][pfRotZ], PlayerInfo[playerid][pfScaleX], PlayerInfo[playerid][pfScaleY], PlayerInfo[playerid][pfScaleZ]);
	                    SendClientMessage(playerid,-1,"Puedes enseñarle una frase al loro usando el comando{DBED15} /loro");
	                }
	                else SetPlayerAttachedObject(playerid, SlotP2[0][playerid], PlayerInfo[playerid][pObj], 2, PlayerInfo[playerid][pfOffsetX], PlayerInfo[playerid][pfOffsetY],  PlayerInfo[playerid][pfOffsetZ], PlayerInfo[playerid][pfRotX], PlayerInfo[playerid][pfRotY], PlayerInfo[playerid][pfRotZ], PlayerInfo[playerid][pfScaleX], PlayerInfo[playerid][pfScaleY], PlayerInfo[playerid][pfScaleZ]);
	                UsandoObj[playerid] = 1;
	                UsandoP[playerid]++;
	                format(Query, 200, "UPDATE `prendas` SET `ObjUsed`='1',`ATH`='%d' WHERE Propietario ='%s' AND Slot='1'",SlotP2[0][playerid],PlayerName(playerid));
	                mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
	                SendClientMessage(playerid,-1,"Te pusiste una prenda, en cualquier momento puedes {DBED15}/quitar prenda{FFFFFF} o {DBED15}/acomodar prenda");
	                OcultarTodo(playerid);
					retornaprendas[playerid] = 0;
					CancelSelectTextDraw(playerid);
	                PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
	                return 1;
	            }
	        }
	    }
	    //usar prenda --- 2
	    if(playertextid == UsarPrendaO[playerid][1])
    	{
    	    if(PlayerInfo[playerid][pObj] == 19382)
    	    {
    	        OcultarTodo(playerid);
				retornaprendas[playerid] = 0;
				CancelSelectTextDraw(playerid);
    	    }
	        else
	        {
	            if(UsandoP[playerid] >= 2) return ErroresPrenda(playerid,2);
				else if(UsandoObj2[playerid] == 1) return ErroresPrenda(playerid,1);
				if(!IsPlayerAttachedObjectSlotUsed(playerid,0)) SlotP2[1][playerid] = 0;
				else if(!IsPlayerAttachedObjectSlotUsed(playerid,1))  SlotP2[1][playerid] = 1;
	            if(UsandoObj2[playerid] == 0)
	            {
	                if(PlayerInfo[playerid][pObj] == 19086)
	                {
	                    SetPlayerAttachedObject(playerid, SlotP2[1][playerid], PlayerInfo[playerid][pObj2], 6, PlayerInfo[playerid][pfOffsetX2], PlayerInfo[playerid][pfOffsetY2],  PlayerInfo[playerid][pfOffsetZ2], PlayerInfo[playerid][pfRotX2], PlayerInfo[playerid][pfRotY2], PlayerInfo[playerid][pfRotZ2], PlayerInfo[playerid][pfScaleX2], PlayerInfo[playerid][pfScaleY2], PlayerInfo[playerid][pfScaleZ2]);
	                    SendClientMessage(playerid,-1,"Pon a {DBED15}/vibrar{FFFFFF} tu motosierra sexual.");
	                }
	                else if(PlayerInfo[playerid][pObj] == 19078)
	                {
	                    SetPlayerAttachedObject(playerid, SlotP2[1][playerid], PlayerInfo[playerid][pObj2], 1, PlayerInfo[playerid][pfOffsetX2], PlayerInfo[playerid][pfOffsetY2],  PlayerInfo[playerid][pfOffsetZ2], PlayerInfo[playerid][pfRotX2], PlayerInfo[playerid][pfRotY2], PlayerInfo[playerid][pfRotZ2], PlayerInfo[playerid][pfScaleX2], PlayerInfo[playerid][pfScaleY2], PlayerInfo[playerid][pfScaleZ2]);
	                    SendClientMessage(playerid,-1,"Puedes enseñarle una frase al loro usando el comando{DBED15} /loro");
	                }
	                else
	                {
	                    SetPlayerAttachedObject(playerid, SlotP2[1][playerid], PlayerInfo[playerid][pObj2], 2, PlayerInfo[playerid][pfOffsetX2], PlayerInfo[playerid][pfOffsetY2],  PlayerInfo[playerid][pfOffsetZ2], PlayerInfo[playerid][pfRotX2], PlayerInfo[playerid][pfRotY2], PlayerInfo[playerid][pfRotZ2], PlayerInfo[playerid][pfScaleX2], PlayerInfo[playerid][pfScaleY2], PlayerInfo[playerid][pfScaleZ2]);
	                }
	                UsandoObj2[playerid] = 1;
	                UsandoP[playerid]++;
	                format(Query, 200, "UPDATE `prendas` SET `ObjUsed`='1',`ATH`='%d' WHERE Propietario ='%s' AND Slot='2'",SlotP2[1][playerid],PlayerName(playerid));
	                mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
	                SendClientMessage(playerid,-1,"Te pusiste una prenda, en cualquier momento puedes {DBED15}/quitar prenda{FFFFFF} o {DBED15}/acomodar prenda");
	                OcultarTodo(playerid);
					retornaprendas[playerid] = 0;
					CancelSelectTextDraw(playerid);
	                PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
	                return 1;
	            }
	        }
	    }
	    //usar prenda --- 3
		if(playertextid == UsarPrendaO[playerid][2])
	    {
	        if(PlayerInfo[playerid][pObj] == 19382)
    	    {
    	        OcultarTodo(playerid);
				retornaprendas[playerid] = 0;
				CancelSelectTextDraw(playerid);
    	    }
	        else
	        {
				if(UsandoP[playerid] >= 2) return ErroresPrenda(playerid,2);
				else if(UsandoObj3[playerid] == 1) return ErroresPrenda(playerid,1);
				if(!IsPlayerAttachedObjectSlotUsed(playerid,0)) SlotP2[2][playerid] = 0;
				else if(!IsPlayerAttachedObjectSlotUsed(playerid,1))  SlotP2[2][playerid] = 1;
                if(PlayerInfo[playerid][pObj3] == 19086)
                {
                    SetPlayerAttachedObject(playerid,  SlotP2[2][playerid], PlayerInfo[playerid][pObj3], 6, PlayerInfo[playerid][pfOffsetX3], PlayerInfo[playerid][pfOffsetY3],  PlayerInfo[playerid][pfOffsetZ3], PlayerInfo[playerid][pfRotX3], PlayerInfo[playerid][pfRotY3], PlayerInfo[playerid][pfRotZ3], PlayerInfo[playerid][pfScaleX3], PlayerInfo[playerid][pfScaleY3], PlayerInfo[playerid][pfScaleZ3]);
                    SendClientMessage(playerid,-1,"Pon a {DBED15}/vibrar{FFFFFF} tu motosierra sexual.");
                }
                else if(PlayerInfo[playerid][pObj3] == 19078)
                {
                    SetPlayerAttachedObject(playerid,  SlotP2[2][playerid], PlayerInfo[playerid][pObj3], 1, PlayerInfo[playerid][pfOffsetX3], PlayerInfo[playerid][pfOffsetY3],  PlayerInfo[playerid][pfOffsetZ3], PlayerInfo[playerid][pfRotX3], PlayerInfo[playerid][pfRotY3], PlayerInfo[playerid][pfRotZ3], PlayerInfo[playerid][pfScaleX3], PlayerInfo[playerid][pfScaleY3], PlayerInfo[playerid][pfScaleZ3]);
                    SendClientMessage(playerid,-1,"Puedes enseñarle una frase al loro usando el comando{DBED15} /loro");
                }
                else
                {
                    SetPlayerAttachedObject(playerid,  SlotP2[2][playerid], PlayerInfo[playerid][pObj3], 2, PlayerInfo[playerid][pfOffsetX3], PlayerInfo[playerid][pfOffsetY3],  PlayerInfo[playerid][pfOffsetZ3], PlayerInfo[playerid][pfRotX3], PlayerInfo[playerid][pfRotY3], PlayerInfo[playerid][pfRotZ3], PlayerInfo[playerid][pfScaleX3], PlayerInfo[playerid][pfScaleY3], PlayerInfo[playerid][pfScaleZ3]);
                }
                UsandoObj3[playerid] = 1;
                UsandoP[playerid]++;
                format(Query, 200, "UPDATE `prendas` SET `ObjUsed`='1',`ATH`='%d' WHERE Propietario ='%s' AND Slot='3'",SlotP2[2][playerid],PlayerName(playerid));
                mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
                SendClientMessage(playerid,-1,"Te pusiste una prenda, en cualquier momento puedes {DBED15}/quitar prenda{FFFFFF} o {DBED15}/acomodar prenda");
                OcultarTodo(playerid);
				retornaprendas[playerid] = 0;
				CancelSelectTextDraw(playerid);
                PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
                return 1;
            }
        }
        //usar prenda --- 4
	    if(playertextid == UsarPrendaO[playerid][3])
    	{
    	    if(PlayerInfo[playerid][pObj] == 19382)
    	    {
    	        OcultarTodo(playerid);
				retornaprendas[playerid] = 0;
				CancelSelectTextDraw(playerid);
    	    }
	        else
	        {
	            if(UsandoP[playerid] >= 2) return ErroresPrenda(playerid,2);
				else if(UsandoObj4[playerid] == 1) return ErroresPrenda(playerid,1);
				if(!IsPlayerAttachedObjectSlotUsed(playerid,0)) SlotP2[3][playerid] = 0;
				else if(!IsPlayerAttachedObjectSlotUsed(playerid,1))  SlotP2[3][playerid] = 1;
	            if(UsandoObj4[playerid] == 0)
	            {
	                if(PlayerInfo[playerid][pObj2] == 19086)
	                {
	                    SetPlayerAttachedObject(playerid, SlotP2[3][playerid], PlayerInfo[playerid][pObj4], 6, PlayerInfo[playerid][pfOffsetX4], PlayerInfo[playerid][pfOffsetY4],  PlayerInfo[playerid][pfOffsetZ4], PlayerInfo[playerid][pfRotX4], PlayerInfo[playerid][pfRotY4], PlayerInfo[playerid][pfRotZ4], PlayerInfo[playerid][pfScaleX4], PlayerInfo[playerid][pfScaleY4], PlayerInfo[playerid][pfScaleZ4]);
	                    SendClientMessage(playerid,-1,"Pon a {DBED15}/vibrar{FFFFFF} tu motosierra sexual.");
	                }
	                else if(PlayerInfo[playerid][pObj4] == 19078)
	                {
	                    SetPlayerAttachedObject(playerid, SlotP2[3][playerid], PlayerInfo[playerid][pObj4], 1, PlayerInfo[playerid][pfOffsetX4], PlayerInfo[playerid][pfOffsetY4],  PlayerInfo[playerid][pfOffsetZ4], PlayerInfo[playerid][pfRotX4], PlayerInfo[playerid][pfRotY4], PlayerInfo[playerid][pfRotZ4], PlayerInfo[playerid][pfScaleX4], PlayerInfo[playerid][pfScaleY4], PlayerInfo[playerid][pfScaleZ4]);
	                    SendClientMessage(playerid,-1,"Puedes enseñarle una frase al loro usando el comando{DBED15} /loro");
	                }
	                else
	                {
	                    SetPlayerAttachedObject(playerid, SlotP2[3][playerid], PlayerInfo[playerid][pObj4], 2, PlayerInfo[playerid][pfOffsetX4], PlayerInfo[playerid][pfOffsetY4],  PlayerInfo[playerid][pfOffsetZ4], PlayerInfo[playerid][pfRotX4], PlayerInfo[playerid][pfRotY4], PlayerInfo[playerid][pfRotZ4], PlayerInfo[playerid][pfScaleX4], PlayerInfo[playerid][pfScaleY4], PlayerInfo[playerid][pfScaleZ4]);
	                }
	                UsandoObj4[playerid] = 1;
	                UsandoP[playerid]++;
	                format(Query, 200, "UPDATE `prendas` SET `ObjUsed`='1',`ATH`='%d' WHERE Propietario ='%s' AND Slot='4'",SlotP2[3][playerid],PlayerName(playerid));
	                mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
	                SendClientMessage(playerid,-1,"Te pusiste una prenda, en cualquier momento puedes {DBED15}/quitar prenda{FFFFFF} o {DBED15}/acomodar prenda");
	                OcultarTodo(playerid);
					retornaprendas[playerid] = 0;
					CancelSelectTextDraw(playerid);
	                PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
	                return 1;
	            }
	        }
	    }
	}
	return 1;
}
public OnPlayerClickTextDraw(playerid,Text:clickedid)
{
    if(_:clickedid != INVALID_TEXT_DRAW)
    {
        //Ocultar todo
        if(clickedid == CerrarPrenda || clickedid == EquisCerrar)
  		{
    	    OcultarTodo(playerid);
    	    retornaprendas[playerid] = 0;
    	    CancelSelectTextDraw(playerid);
    	    PlayerPlaySound(playerid,1054,0.0,0.0,0.0);
    	}
	    //Comprar prendas
	    if(ComprandoPrendas[playerid] == 1)
	    {
	        //Comprar prendas
	        if(clickedid == cPrendas[2])	    {	        PrendaMarcada[playerid] = 18897;	    }
		    if(clickedid == cPrendas[3])	    {	        PrendaMarcada[playerid] = 18939;	    }
		    if(clickedid == cPrendas[4])	    {	        PrendaMarcada[playerid] = 18979;	    }
		    if(clickedid == cPrendas[5])	    {	        PrendaMarcada[playerid] = 18898;	    }
		    if(clickedid == cPrendas[6])	    {	        PrendaMarcada[playerid] = 18942;	    }
		    if(clickedid == cPrendas[7])	    {	        PrendaMarcada[playerid] = 18971;	    }
		    if(clickedid == cPrendas[8])	    {	        PrendaMarcada[playerid] = 18899;	    }
		    if(clickedid == cPrendas[9])	    {	        PrendaMarcada[playerid] = 18913;	    }
		    if(clickedid == cPrendas[10])	    {	        PrendaMarcada[playerid] = 18917;	    }
		    if(clickedid == cPrendas[11])	    {	        PrendaMarcada[playerid] = 18918;	    }
		    if(clickedid == cPrendas[12])	    {	        PrendaMarcada[playerid] = 18943;	    }
		    if(clickedid == cPrendas[13])	    {	        PrendaMarcada[playerid] = 18961;	    }
		    if(clickedid == cPrendas[14])	    {	        PrendaMarcada[playerid] = 18962;	    }
		    if(clickedid == cPrendas[15])	    {	        PrendaMarcada[playerid] = 18965;	    }
		    if(clickedid == cPrendas[16])	    {	        PrendaMarcada[playerid] = 18972;	    }
		    if(clickedid == cPrendas[17])	    {	        PrendaMarcada[playerid] = 18974;	    }
		    if(clickedid == cPrendas[18])	    {	        PrendaMarcada[playerid] = 18976;	    }
		    if(clickedid == cPrendas[19])	    {	        PrendaMarcada[playerid] = 19033;	    }
		    if(NPrendas[playerid] >= 4) return SendClientMessage(playerid,-1,"No puedes comprar más de 4 prendas. Guarda una {DBED15}en la página web.");
			if(PlayerInfo[playerid][Totems] < 3)
			{
				new string[150];
				OcultarTodo(playerid);
				format(string,sizeof(string),"{FFFFFF}El objeto solicitado cuesta {8c5c35}3 Tótems{FFFFFF}.\n\n{FFFFFF}Para más información usa {FF3300}/ayuda totems");
				return ShowPlayerDialog(playerid, INMIGRACION, DIALOG_STYLE_MSGBOX, "{d70000}No tienes los totems necesarios",string,"Cerrar","");
			}
			if(PlayerInfo[playerid][pObj] == PrendaMarcada[playerid] || PlayerInfo[playerid][pObj2] == PrendaMarcada[playerid] || PlayerInfo[playerid][pObj3] == PrendaMarcada[playerid] || PlayerInfo[playerid][pObj4] == PrendaMarcada[playerid])
			{
				return SendClientMessage(playerid,-1,"Ya tienes esta {DBED15}prenda{FFFFFF}.");
			}
			new string3[200];
			for(new i = 0, ij = sizeof(cPrendas); i < ij; i++)
			{
        		TextDrawHideForPlayer(playerid, cPrendas[i]);
			}
			OcultarTodo(playerid);
			CancelSelectTextDraw(playerid);
			format(string3,sizeof(string3),"{FFFFFF}El objeto solicitado cuesta {8c5c35}3 Tótems{FFFFFF}.\n\n{FFFFFF}¿Quieres comprar este objeto?");
		    ShowPlayerDialog(playerid, COMPRAR_PRENDA, DIALOG_STYLE_MSGBOX, "{DBED15}!ATENCIÓN!",string3,"Comprar","Cancelar");
		    return 1;
        }
        CancelSelectTextDraw(playerid);
        return 1;
  	}
  	else
    {
        if(retornaprendas[playerid] == 0) return 1;
	    CancelSelectTextDraw(playerid);
		OcultarTodo(playerid);
	    retornaprendas[playerid] = 0;
    }
 	return 1;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{
    if(IsPlayerNPC(playerid)) return 1;
    if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
		pweapon [playerid] = GetPlayerWeapon (playerid);
	}
    /*if(newstate == PLAYER_STATE_SPECTATING && oldstate != PLAYER_STATE_PASSENGER || newstate == PLAYER_STATE_SPECTATING && oldstate != PLAYER_STATE_DRIVER)
	{
	    if(!IsPlayerInAnyVehicle(playerid))
	    {
		    if(JugadorLogeado[playerid] == 1)
		    {
				if(Specteando[playerid] == 0)
				{
				    if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS)
				    {
				        if(gettime() > PlayerAnticheat[playerid][@Imunidad])
				        {
				            new Float:PosPlayer[3], Float:PosCamera[3];
					        GetPlayerCameraPos(playerid, PosCamera[0], PosCamera[1], PosCamera[2]);
					        GetPlayerPos(playerid, PosPlayer[0], PosPlayer[1], PosPlayer[2]);
					        new Float:PosFinal[3];

					        PosFinal[0] = PosCamera[0]-PosPlayer[0];
					        PosFinal[1] = PosCamera[1]-PosPlayer[1];
					        
					        if(PosFinal[0] > 20 || PosFinal[0] < -20)
					        {
					            new string[256];
								format(string, 128,"El jugador {FF3300}%s(ID: %d){FFFFFF} fue baneado por el anticheat. Razón: {FF3300}Spec cheat.",PlayerName(playerid),playerid);
								SendClientMessageToAll(-1,string);
								SetTimerEx("KickXD",500,0,"d",playerid);
								return 1;
					        }
					        if(PosFinal[1] > 20 || PosFinal[1] < -20)
					        {
					            new string[256];
								format(string, 128,"El jugador {FF3300}%s(ID: %d){FFFFFF} fue baneado por el anticheat. Razón: {FF3300}Spec cheat.",PlayerName(playerid),playerid);
								SendClientMessageToAll(-1,string);
								SetTimerEx("KickXD",500,0,"d",playerid);
								return 1;
					        }
						}
					}
				}
	        }
        }
	}*/
	if(newstate == PLAYER_STATE_PASSENGER)
	{
		if(GetPlayerWeapon(playerid) != 30 && GetPlayerWeapon(playerid) != 31 && GetPlayerWeapon(playerid) != 29 && GetPlayerWeapon(playerid) != 22)
		{
			SetPlayerArmedWeapon(playerid, 0);
		}
		if(PlayerInfo[playerid][Agonizando] == 1 && PacienteAmbu[playerid] == 0)
		{
			RemovePlayerFromVehicle(playerid);
		}
		if(GetPlayerWeapon(playerid) == 0 || GetPlayerWeapon(playerid) == 29 || GetPlayerWeapon(playerid) == 25 || GetPlayerWeapon(playerid) == 31 || GetPlayerWeapon(playerid) == 30) return 1;
		else
		{
			if(PlayerInfo[playerid][pWP3] == 25 || PlayerInfo[playerid][pWP4] == 29 || PlayerInfo[playerid][pWP5] == 30 ||PlayerInfo[playerid][pWP5] == 31)
			{
				DarArmas(playerid);
			}
			else
			{
				Manejando[playerid] = 1;
				ResetPlayerWeapons(playerid);
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
		SetPlayerArmedWeapon(playerid, 0);
		if(PlayerInfo[playerid][Agonizando] == 1 && PacienteAmbu[playerid] == 0)
		{
			RemovePlayerFromVehicle(playerid);
		}
	}
    /*if(newstate == PLAYER_STATE_PASSENGER || newstate == PLAYER_STATE_DRIVER)
    {
        if(GetPlayerVehicleID(playerid) != p_CarWarpVehicleID[playerid] )
        {
            if(p_CarWarpTime[playerid] > gettime())
            {
                new string[200];
                format(string, 128, "%s(ID:%d){FFFFFF} posible cheater, sube sin animacion a los vehiculos (Nivel:%d - %dhs).", PlayerName(playerid), playerid ,PlayerInfo[playerid][@Nivel], NetStats_PacketLossPercent(playerid));
				MensajeAdmin(0xFFDBED15FF, string, 3);
				Kick(playerid);
				format(string,sizeof(string),"%s(%d) se desconectó [Baneado o Kickeado]");
				MensajeAdmin(COLOR_GREY, string, 3);
                resetearcoches();
            }
            p_CarWarpTime[playerid] = gettime() + 1;
            p_CarWarpVehicleID[playerid] = GetPlayerVehicleID(playerid);
        }
    }*/
    if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
		if(Specteado[playerid] == 1)
		{
	    	foreach(Player,i)
	    	{
	    		if(SpecJugador[i] == playerid)
				{
					PlayerSpectateVehicle(i, GetPlayerVehicleID(playerid));
				}
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(BASU(vehicleid))
	    {
			if(PlayerInfo[playerid][pTrabajo] == T_Basurero || PlayerInfo[playerid][pTrabajo2] == T_Basurero)
			{
				if(RopaBasu[playerid] != 1)
				{
				    SendClientMessage(playerid,0x9C9A6BFF ,"Las cuentas comunes necesitan la vestimenta de basurero para trabajar.");
				    SendClientMessage(playerid,0x9C9A6BFF ,"Si quieres trabajar con cualquier ropa, necesitas una cuenta VIP1 o superior.");
				}
            }
        }
	}
	if(newstate == PLAYER_STATE_ONFOOT)
	{
		if(Specteado[playerid] == 1)
		{
		    foreach(Player,i)
		    {
		    	if(SpecJugador[i] == playerid)
				{
					PlayerSpectatePlayer(i, playerid);
				}
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
	    new vehicleid = GetPlayerVehicleID(playerid),color_1, color_2;
		if(CAMION(vehicleid))
		{
			GetVehicleColor(vehicleid, color_1, color_2);
			if(PlayerInfo[playerid][pTrabajo] != T_Camionero && PlayerInfo[playerid][pTrabajo2] != T_Camionero)
			{
				SendClientMessage(playerid,-1,"Necesitas el empleo de camionero para usar este vehículo.");
				SendClientMessage(playerid, -1, "Para aprender más sobre los trabajos disponibles, escribe {DBED16}/ayuda trabajos{FFFFFF}.");
				RemovePlayerFromVehicle(playerid);
				new Float:sx, Float:sy, Float:sz;
				GetPlayerPos(playerid, sx, sy, sz);
				SetPlayerPos(playerid, sx, sy, sz);
				EnAuto[playerid] = 0;
			}
			else
			{
			    if(PlayerInfo[playerid][pVip] == 0)
	  	 		{
				    if(color_1 == 0 && color_2 == 0)
	   				{
            			Kick(playerid);
						SendClientMessage(playerid,-1,"Este camión es solamente para jugadores con cuenta {DBED15}VIP2{FFFFFF}.");
						RemovePlayerFromVehicle(playerid);
						EnAuto[playerid] = 0;
						return 1;
					}
				}
				new string[256];
				switch(CamionCargado[vehicleid])
				{
					case 0:
					{
						format(string, sizeof(string), "Camión de carga número: {00cc00}%d{FFFFFF} | Contenido: {00CC00}Ninguno {FFFFFF}| Chofer: {00cc00}Ninguno", vehicleid-28);
						SendClientMessage(playerid, -1,string);
						SendClientMessage(playerid, -1, "Escribe {DBED16}/cargar camion{FFFFFF} para cargar el camión y {DBED16}/arrancar{FFFFFF} para encender el motor.");
					}
					case 1:
					{
						format(string, sizeof(string), "Camión de carga número: {00cc00}%d{FFFFFF} | Contenido: {00CC00}Productos 24/7{FFFFFF} {FFFFFF}| Chofer: {00CCFF}%s", vehicleid-28,PlayerName(Chofer[vehicleid]));
						SendClientMessage(playerid, -1,string);
					}
					case 2:
					{
						format(string, sizeof(string), "Camión de carga número: {00cc00}%d{FFFFFF} | Contenido: {00CC00}Ropa{FFFFFF} | Chofer: {00CCFF}%s", vehicleid-28,PlayerName(Chofer[vehicleid]));
						SendClientMessage(playerid, -1,string);
					}
					case 3:
					{
						format(string, sizeof(string), "Camión de carga número: {00cc00}%d{FFFFFF} | Contenido: {FF3300}Drogas{FFFFFF} | Chofer: {00CCFF}%s", vehicleid-28,PlayerName(Chofer[vehicleid]));
						SendClientMessage(playerid, -1,string);
					}
					case 4:
					{
						format(string, sizeof(string), "Camión de carga número: {00cc00}%d{FFFFFF} | Contenido: {FF3300}Armas{FFFFFF} | Chofer: {00CCFF}%s", vehicleid-28,PlayerName(Chofer[vehicleid]));
						SendClientMessage(playerid, -1,string);
					}
                }
        	}
    	}
	}
	if(newstate == PLAYER_STATE_DRIVER)
 	{
 	    new vehicleid = GetPlayerVehicleID(playerid);
 	    for(new f = 0; f < MAX_FABRICAS; f++)
		{
	        if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda] && vehicleid == Fabricas[f][Auto1F] || PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda] && vehicleid == Fabricas[f][Auto2F])
            {
				SendClientMessage(playerid,-1,"Vehículo especial.");
	    	}
		}
    }
	if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
	    if(TieneHerramientaEnMano[playerid] == 1)
	    {
	        TieneHerramientaEnMano[playerid] = 0;
	        RemovePlayerAttachedObject(playerid,2);
	    }
	    new vehicleid = GetPlayerVehicleID(playerid);
		if(autos[playerid] == vehicleid || autos2[playerid] == vehicleid || autos3[playerid] == vehicleid || autos4[playerid] == vehicleid)	SendClientMessage(playerid,-1,"Este vehículo te pertenece.");
		if(autos[playerid] == vehicleid)
		{
		    GetVehicleParamsEx(autos[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos[playerid], engine, lights, 0, doors, bonnet, boot, objective);
		}
		else if(autos2[playerid] == vehicleid)
		{
		    GetVehicleParamsEx(autos2[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos2[playerid], engine, lights, 0, doors, bonnet, boot, objective);
		}
		else if(autos3[playerid] == vehicleid)
		{
		    GetVehicleParamsEx(autos3[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos3[playerid], engine, lights, 0, doors, bonnet, boot, objective);
		}
		else if(autos4[playerid] == vehicleid)
		{
		    GetVehicleParamsEx(autos4[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos4[playerid], engine, lights, 0, doors, bonnet, boot, objective);
		}
	}
	fVehSpeed[playerid] = 0.0;
	if(newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_DRIVER)
	{
		if(EnCarreras[playerid] > 0 && EmpezoCarrera == 1)
 		{
      		DisablePlayerRaceCheckpoint(playerid);
			SetPlayerPos(playerid,-1405.2959,-309.6738,1052.0900);
			SetPlayerFacingAngle(playerid,190.0000);
	        for(new z=0; z < 4; z++)
			{
			    TextDrawHideForPlayer(playerid, BoxCarrera[0]);
			    TextDrawHideForPlayer(playerid, BoxCarrera[1]);
			    TextDrawHideForPlayer(playerid, BoxCarrera[2]);
			    TextDrawHideForPlayer(playerid, BoxCarrera[3]);
				TextDrawHideForPlayer(playerid, CarreraPosicion);
			}
			PlayerTextDrawHide(playerid, CarreraT[playerid][0]);
			PlayerTextDrawHide(playerid, CarreraT[playerid][1]);
			PlayerTextDrawHide(playerid, CarreraT[playerid][2]);
			SacarCarrera(playerid);
			if(ParticipantesCarrera <= 0)
			{
   				ResetearCarrera();
			    HabilitarCarreras = 0;
				Update3DTextLabelText(TextoCarrera,COLOR_WHITE,"{FF3300}Boleteria cerrada\n{DBED16}Horarios de los eventos: {FFFFFF}5hs,11hs,17hs,23hs");
			}
			SendClientMessage(playerid,-1,"Perdiste la carrera por salir de tu vehículo.");
    	}
	}
	if(oldstate == PLAYER_STATE_PASSENGER)
	{
		if(Manejando[playerid] == 1)
		{
			DarArmas(playerid);
			Manejando[playerid] = 0;
		}
	}
	if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_ENTER_VEHICLE_DRIVER)
	{
	    new autoid = GetPlayerVehicleID(playerid);
		EnAuto[playerid] = autoid;

		if(PlayerInfo[playerid][Agonizando] == 1 && PacienteAmbu[playerid] == 0)
		{
			RemovePlayerFromVehicle(playerid);
		}
		//SetPlayerArmedWeapon(playerid, 0);
		if(MotorAuto[autoid] == 0)
		{
		    if(!CAMION(autoid) && !BICI(autoid))
			if(VehiculosInfo[autoid][vcomprable] != 1)
			{
			    if(AutoDeFabrica[autoid] == 0)	SendClientMessage(playerid,-1,"Para encender el motor del vehículo, utiliza {DBED15}/arrancar{FFFFFF} o pulsa {DBED15}'2'{FFFFFF}.");
			    else SendClientMessage(playerid,-1,"Para encender el motor del vehículo, utiliza {DBED15}/arrancar{FFFFFF} o pulsa {DBED15}'BIR'{FFFFFF}.");
			}
		}
		if(newstate == PLAYER_STATE_DRIVER)
		{
			if(EmisoraEscuchando[GetPlayerVehicleID(playerid)] == -1 || VehiculosInfo[GetPlayerVehicleID(playerid)][vcomprable] != 1)
		    {
		        if(VehiculosInfo[autoid][vcomprable] != 1)
		        {
					SendClientMessage(playerid,-1,"Para escuchar alguna emisora de radio de San Andreas, usa {DBED15}/emisoras");
				}
			}
        }
		if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
		{
			if(EmisoraEscuchando[GetPlayerVehicleID(playerid)] != -1)
			{
				new emisoraid;
				emisoraid = EmisoraEscuchando[GetPlayerVehicleID(playerid)];
				Loop2(id,MAX_CONECTADOS)
				{
					if(Emisoras[id][CabinaOcupada] == emisoraid)
					{
						if(Emisoras[id][TransEmisora] == 1)
						{
							new stringa[128];
							EmisoraEscuchando[emisoraid]++;
							format(stringa, sizeof(stringa), "{FFFFFF}Escuchando radio {DBED16}%s{FFFFFF}, para cambiar de emisora usa {DBED16}/emisoras", Emisoras[id][NombreEmisora]);
							SendClientMessage(playerid, COLOR_WHITE, stringa);
							format(stringa, sizeof(stringa),"http://"EMISORA_URL"?sid=%d", Emisoras[id][EmisoraID]);
							if(PlayerInfo[playerid][pSonidos] == 0)
					    	{
					    		PlayAudioStreamForPlayer(playerid, stringa);
							}
						}
					}
				}
			}
		}
		if(VehiculosInfo[autoid][vcomprable] == 1)
		{
		    new string[256],vehicleid = GetPlayerVehicleID(playerid),baul[2],gaso[4],modelo = GetVehicleModel(autoid),vehiclefuel = CombustibleCoche(modelo),velocidadmaxv = VelocidadMaxAuto(modelo);
			switch(VehiculosInfo[autoid][vmoneda])
			{
				case 0:
				{
				    format(gaso,sizeof(gaso),"%d", vehiclefuel);
				    if(BAUL8(GetPlayerVehicleID(playerid))) format(baul,sizeof(baul),"8");
				    else if(BAUL6(GetPlayerVehicleID(playerid))) format(baul,sizeof(baul),"6");
				    else if(BAUL2(GetPlayerVehicleID(playerid))) format(baul,sizeof(baul),"2");
				    else format(baul,sizeof(baul),"4");
					format(string,sizeof(string),"{FFFFFF}Nombre: {dbed15}%s\n{FFFFFF}Espacios del baúl: {00CC00}%s\n{FFFFFF}Velocidad máxima: {ff0000}%d km/h\n{FFFFFF}Cantidad de combustible: {00ccff}%s Litros\n{FFFFFF}Costo del seguro: {ff0000}$%d\n{FFFFFF}Precio: {00CC00}$%d",NombreAuto[GetVehicleModel(vehicleid)-400],baul,velocidadmaxv,gaso,VehiculosInfo[autoid][vprecio]/100,VehiculosInfo[autoid][vprecio]);
					ShowPlayerDialog(playerid, CVEHICULO, DIALOG_STYLE_MSGBOX, "Detalles del vehículo", string, "Comprar", "Salir");
				}
				case 1:
				{
				    format(gaso,sizeof(gaso),"%d", vehiclefuel);
				    if(BAUL8(GetPlayerVehicleID(playerid))) format(baul,sizeof(baul),"8");
				    else if(BAUL6(GetPlayerVehicleID(playerid))) format(baul,sizeof(baul),"6");
				    else if(BAUL2(GetPlayerVehicleID(playerid))) format(baul,sizeof(baul),"2");
				    else format(baul,sizeof(baul),"4");
					format(string,sizeof(string),"{FFFFFF}Nombre: {dbed15}%s\n{FFFFFF}Espacios del baúl: {00CC00}%s\n{FFFFFF}Velocidad máxima: {ff0000}%d km/h\n{FFFFFF}Cantidad de combustible: {00ccff}%s Litros\n{FFFFFF}Costo del seguro: {ff0000}$%d\n{FFFFFF}Precio: {DEA221}%d "SERVER_COIN"",NombreAuto[GetVehicleModel(vehicleid)-400],baul,velocidadmaxv,gaso,VehiculosInfo[autoid][vprecio]/100,VehiculosInfo[autoid][vprecio]);
					ShowPlayerDialog(playerid, CVEHICULO, DIALOG_STYLE_MSGBOX, "Detalles del vehículo", string, "Comprar", "Salir");
				}
			}
		}
		/*new veh = GetPlayerVehicleID(playerid);
		if(JugadorLogeado[playerid] == 1)
		{
			if(BajandoV[playerid] == 1)
			{
				new string[128];
				if(PlayerInfo[playerid][pAdmin] > ADMIN_LEVEL_USER) return 1;
				if(Evento[playerid] == 1) return 1;
				if(EnCarreras[playerid] > 0) return 1;
    			if(EnPatrulla[playerid] == 1) return 1;
    			if(BuyingCar[playerid] == 1) return 1;
				if(MOTO(veh) && GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return 1;
				format(string, 128,"El jugador {FF3300}%s(ID: %d){FFFFFF} fue baneado por el anticheat. Razón: {FF3300}Cheat de vehículos (2).",PlayerName(playerid),playerid);
				SendClientMessageToAll(-1,string);
				SetTimerEx("KickXD",500,0,"d",playerid);
			}
		}*/
		new Float: fCurrentSpeed, szSpeed[128];
		fCurrentSpeed = player_get_speed(playerid);
		fVehSpeed[playerid] = fCurrentSpeed;
		iVehicle[playerid] = GetPlayerVehicleID(playerid);
		if(BICI(iVehicle[playerid]))
		{
			Manejando[playerid] = 1;
			KillTimer(Bajando[playerid]);
			return 1;
		}
		if(PlayerInfo[playerid][pVelocimetro] == 0)
		{
            new modelo = GetVehicleModel(autoid);
		    new vehiclefuel = CombustibleCoche(modelo);
		    new maxvehiclespeed = VelocidadMaxAuto(modelo);
      		format(szSpeed, sizeof(szSpeed),"%d/%d",VehicleFuel[iVehicle[playerid]],vehiclefuel);
			SetPlayerProgressBarMaxValue(playerid,Progressbar[playerid][Combustible], vehiclefuel);
			SetPlayerProgressBarMaxValue(playerid,Progressbar[playerid][Velocimetro], maxvehiclespeed+1);
			PlayerTextDrawSetString(playerid,ContadorVelocimetro[playerid][1],szSpeed);
			format(szSpeed, sizeof(szSpeed),"%.0f", fCurrentSpeed);
			PlayerTextDrawSetString(playerid,ContadorVelocimetro[playerid][0],szSpeed);
			Manejando[playerid] = 1;
			KillTimer(Bajando[playerid]);
			UpdatePlayerProgressBar(playerid,Progressbar[playerid][Combustible]);
			TextDrawShowForPlayer(playerid, text1prueba[0]);
			TextDrawShowForPlayer(playerid, text1prueba[1]);
			TextDrawShowForPlayer(playerid, TEXTDRAWBOX1);
			TextDrawShowForPlayer(playerid, TEXTDRAWBOX2);
			TextDrawShowForPlayer(playerid, TEXTDRAWBOX3);
			TextDrawShowForPlayer(playerid, TEXTDRAWBOX4);
			PlayerTextDrawShow(playerid, ContadorVelocimetro[playerid][0]);
			TextDrawShowForPlayer(playerid, velocimetro6);
			PlayerTextDrawShow(playerid, ContadorVelocimetro[playerid][1]);
			TextDrawShowForPlayer(playerid, Velocimetrotd[0]);
			TextDrawShowForPlayer(playerid, Velocimetrotd[1]);
			ShowPlayerProgressBar(playerid, Progressbar[playerid][Combustible]);
			SetPlayerProgressBarValue(playerid,Progressbar[playerid][Combustible],VehicleFuel[iVehicle[playerid]]);
			UpdatePlayerProgressBar(playerid,Progressbar[playerid][Combustible]);
			ShowPlayerProgressBar(playerid, Progressbar[playerid][Velocimetro]);
		}
		else
		{
		    TextDrawHideForPlayer(playerid, text1prueba[0]);
			TextDrawHideForPlayer(playerid, text1prueba[1]);
			TextDrawHideForPlayer(playerid, TEXTDRAWBOX1);
			TextDrawHideForPlayer(playerid, TEXTDRAWBOX2);
			TextDrawHideForPlayer(playerid, TEXTDRAWBOX3);
			TextDrawHideForPlayer(playerid, TEXTDRAWBOX4);
			PlayerTextDrawHide(playerid, ContadorVelocimetro[playerid][0]);
			TextDrawHideForPlayer(playerid, velocimetro6);
			PlayerTextDrawHide(playerid, ContadorVelocimetro[playerid][1]);
			TextDrawHideForPlayer(playerid, Velocimetrotd[0]);
			TextDrawHideForPlayer(playerid, Velocimetrotd[1]);
			HidePlayerProgressBar(playerid, Progressbar[playerid][Combustible]);
			HidePlayerProgressBar(playerid, Progressbar[playerid][Velocimetro]);
		}
	}
	if(oldstate == PLAYER_STATE_DRIVER)
	{
	    EnAuto[playerid] = INVALID_VEHICLE_ID;
		if(EnTaxi[playerid] == 1)
		{
			EnTaxi[playerid] = 0;
			TextDrawHideForPlayer(playerid,TAXIMET);
			TextDrawHideForPlayer(playerid,TAXIMET2[playerid]);
			TextDrawHideForPlayer(playerid,TAXIMET3);
			TextDrawHideForPlayer(playerid,TAXIMET4);
		}
		PlayerTextDrawHide(playerid, ContadorVelocimetro[playerid][0]);
		PlayerTextDrawHide(playerid, ContadorVelocimetro[playerid][1]);
		TextDrawHideForPlayer(playerid, text1prueba[0]);
		TextDrawHideForPlayer(playerid, text1prueba[1]);
		TextDrawHideForPlayer(playerid, TEXTDRAWBOX1);
		TextDrawHideForPlayer(playerid, TEXTDRAWBOX2);
		TextDrawHideForPlayer(playerid, TEXTDRAWBOX3);
		TextDrawHideForPlayer(playerid, TEXTDRAWBOX4);
		TextDrawHideForPlayer(playerid, velocimetro6);
		TextDrawHideForPlayer(playerid, Velocimetrotd[0]);
		TextDrawHideForPlayer(playerid, Velocimetrotd[1]);
		HidePlayerProgressBar(playerid, Progressbar[playerid][Combustible]);
		HidePlayerProgressBar(playerid, Progressbar[playerid][Velocimetro]);
		Bajando[playerid] = SetTimerEx("Maneja",5000,false,"d",playerid);
	}
	return 1;
}

public OnPlayerCommandReceived(playerid, cmdtext[])
{
    SacarAyudaComandos(playerid);
    if(GetTickCount()-GetPVarInt(playerid, "antiflood") < 500)
	{
		SendClientMessage(playerid, 0xFF8C00FF, "Límite de comandos por segundo: 1");
		return 0;
	}
	SetPVarInt(playerid, "antiflood", GetTickCount());
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_DUDAS)
    {
    	if(ComandoEstado == 0 && TiempoReinicio <= 2) { SendClientMessage(playerid,0xff9900ff,"No puedes usar comandos durante el reinicio."); return 0;}
	}
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS)
	{
		if(strfind(cmdtext, ":", true) != -1)
		{
			new i_numcount, i_period, i_pos;
			while(cmdtext[i_pos])
			{
				if('0' <= cmdtext[i_pos] <= '9') i_numcount++;
				else if(cmdtext[i_pos] == '.') i_period++;
				i_pos++;
			}
			if(i_numcount >= 8 && i_period >= 3)
			{
				new string[128];
				format(string,sizeof(string),"{00CC00}%s (%d) SPAM ({FF3300}Posible IP{00CC00}){FFFFFF}: %s", PlayerName(playerid), playerid, cmdtext);
				MensajeAdmin(-1, string, 3);
			}
		}
	}
	if(PlayerInfo[playerid][pAdmin] > ADMIN_LEVEL_AYUDANTE) printf("[Log] [%s]: %s", PlayerName(playerid), cmdtext);
	return 1;
}
public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(!success)
	{
		new string[256];
		format(string,256,"({FF3300}%s{FFFFFF}) Comando desconocido, usa {DBED15}/ayuda{FFFFFF} para recibir ayuda.",cmdtext);
		SendClientMessage(playerid, -1, string);
	}
	return 1;
}

public ShowStats(playerid,targetid)
{
	if(IsPlayerConnected(playerid) && IsPlayerConnected(targetid))
	{
		new SexoInfo[20],stringjobs[256];
		if		(PlayerInfo[targetid][jSexo] == 1){ SexoInfo = "Masculino"; }
		else if	(PlayerInfo[targetid][jSexo] == 2){ SexoInfo = "Femenino"; }

		new NivelUser			 	= PlayerInfo[targetid][@Nivel];
		new ExpUser 				= PlayerInfo[targetid][jExperiencia];
		new ExpMonto 				= PlayerInfo[targetid][NivelExp];

		new NombreUser[MAX_PLAYER_NAME];
		GetPlayerName(targetid, NombreUser, sizeof(NombreUser));

		new CuentaString[350];
		if(ExpUser == ExpMonto)
		{
			format(CuentaString, sizeof(CuentaString), 	"| Nivel: {37db45}%d{FFFFFF} | Reputación: {37db45}%d{FFFFFF}/{37db45}%d{FFFFFF} | {DBED16}/comprar nivel{FFFFFF} - Costo: {37db45}$%d", NivelUser,ExpUser,ExpMonto,PlayerInfo[targetid][PrecioNivel]);
			SendClientMessage(playerid, COLOR_WHITE,CuentaString);
		}
		else if(ExpUser != ExpMonto)
		{
			format(CuentaString, sizeof(CuentaString), 	"| Nivel:{37db45} %d{FFFFFF} | Reputación: {ffcc00}%d{FFFFFF}/{37db45}%d {FFFFFF}| Costo del siguiente nivel: {37db45}$%d", NivelUser,ExpUser,ExpMonto,PlayerInfo[targetid][PrecioNivel]);
			SendClientMessage(playerid, COLOR_WHITE,CuentaString);
		}
		format(stringjobs, 256,"| Trabajo primario: {DBED16}%s{FFFFFF} | Trabajo secundario: %s |", NombreTrabajo(PlayerInfo[targetid][pTrabajo]), NombreTrabajo(PlayerInfo[targetid][pTrabajo2]));
		SendClientMessage(playerid,-1,stringjobs);
		if(PlayerInfo[targetid][pFaccion] > 0)
		{
			new banda = PlayerInfo[targetid][pFaccion];
			switch(PlayerInfo[targetid][pRango])
			{
				case 1:
				{
					format(CuentaString, sizeof(CuentaString), 	"{FFFFFF}| Integrante de: {DBED16}%s{FFFFFF} | Rango: {DBED16}%s{FFFFFF} | {FFFFFF}Territorio: {DBED16}%s{FFFFFF}", BandasInfo[banda][BNombre], BandasInfo[banda][BRango1],BandasInfo[banda][territorio]);
					SendClientMessage(playerid, COLOR_WHITE,CuentaString);
				}
				case 2:
				{
					format(CuentaString, sizeof(CuentaString), 	"{FFFFFF}| Integrante de: {DBED16}%s{FFFFFF} | Rango: {DBED16}%s{FFFFFF} | {FFFFFF}Territorio: {DBED16}%s{FFFFFF}", BandasInfo[banda][BNombre], BandasInfo[banda][BRango2],BandasInfo[banda][territorio]);
					SendClientMessage(playerid, COLOR_WHITE,CuentaString);
				}
				case 3:
				{
					format(CuentaString, sizeof(CuentaString), 	"{FFFFFF}| Integrante de: {DBED16}%s{FFFFFF} | Rango: {DBED16}%s{FFFFFF} | {FFFFFF}Territorio: {DBED16}%s{FFFFFF}", BandasInfo[banda][BNombre], BandasInfo[banda][BRango3],BandasInfo[banda][territorio]);
					SendClientMessage(playerid, COLOR_WHITE,CuentaString);
				}
				case 4:
				{
					format(CuentaString, sizeof(CuentaString), 	"{FFFFFF}| Integrante de: {DBED16}%s{FFFFFF} | Rango: {DBED16}%s{FFFFFF} | {FFFFFF}Territorio: {DBED16}%s{FFFFFF}", BandasInfo[banda][BNombre], BandasInfo[banda][BRango4],BandasInfo[banda][territorio]);
					SendClientMessage(playerid, COLOR_WHITE,CuentaString);
				}
				case 5:
				{
					format(CuentaString, sizeof(CuentaString), 	"{FFFFFF}| Integrante de: {DBED16}%s{FFFFFF} | Rango: {DBED16}%s{FFFFFF} | {FFFFFF}Territorio: {DBED16}%s{FFFFFF}", BandasInfo[banda][BNombre], BandasInfo[banda][BRango5],BandasInfo[banda][territorio]);
					SendClientMessage(playerid, COLOR_WHITE,CuentaString);
				}
				case 6:
				{
					format(CuentaString, sizeof(CuentaString), 	"{FFFFFF}| Integrante de: {DBED16}%s{FFFFFF} | Rango: {DBED16}%s{FFFFFF} | {FFFFFF}Territorio: {DBED16}%s{FFFFFF}", BandasInfo[banda][BNombre], BandasInfo[banda][BRango6],BandasInfo[banda][territorio]);
					SendClientMessage(playerid, COLOR_WHITE,CuentaString);
				}
				case 7:
				{
					format(CuentaString, sizeof(CuentaString), 	"{FFFFFF}| Integrante de: {DBED16}%s{FFFFFF} | Rango: {DBED16}%s{FFFFFF} | {FFFFFF}Territorio: {DBED16}%s{FFFFFF}", BandasInfo[banda][BNombre], BandasInfo[banda][BRango7],BandasInfo[banda][territorio]);
					SendClientMessage(playerid, COLOR_WHITE,CuentaString);
				}
				case 8:
				{
					format(CuentaString, sizeof(CuentaString), 	"{FFFFFF}| Integrante de: {DBED16}%s{FFFFFF} | Rango: {DBED16}%s{FFFFFF} | {FFFFFF}Territorio: {DBED16}%s{FFFFFF}", BandasInfo[banda][BNombre], BandasInfo[banda][BRango8],BandasInfo[banda][territorio]);
					SendClientMessage(playerid, COLOR_WHITE,CuentaString);
				}
			}
		}
		if(PlayerInfo[playerid][pAdmin] > ADMIN_LEVEL_DUDAS)
		{
			if(PlayerInfo[targetid][pVip] > 0)
			{
				new string[128];
				format(string, 128,"- Membresía VIP%d válida hasta %02d/%02d/%02d",PlayerInfo[targetid][pVip], PlayerInfo[targetid][findia],PlayerInfo[targetid][finmes],PlayerInfo[targetid][finano]);
				SendClientMessage(playerid,-1,string);
			}
		}
		return 1;
	}
	return 1;
}

public PayDay2()
{
	new string[350],horas,minutos,segundos;
	gettime(horas,minutos,segundos);
	Loop2(i,MAX_CONECTADOS)
	{
		if(JugadorLogeado[i] == 1)
		{
			new paga = PlayerInfo[i][@Nivel]*100+50;
			new suma,intereses,string2[400],string3[400],seguro,sumat,seguro2,seguro3,estacionamiento,gananciasest,seguro4,seguros,gastos;
			seguro = PlayerInfo[i][vPrecio]/100;
			seguro2 = PlayerInfo[i][v2Precio]/100;
			seguro3 = PlayerInfo[i][v3Precio]/100;
			seguro4 = PlayerInfo[i][v4Precio]/100;
			estacionamiento = PlayerInfo[i][vEstacionado4];
			for(new c = 0; c < MAX_PROPIEDADES; c++)
			seguros = seguro+seguro2+seguro3+seguro4;
			gastos = seguro+seguro2+seguro3+seguro4+estacionamiento;

			if(PlayerInfo[i][pVip] == 1)
			{
				intereses = PlayerInfo[i][pBanco]/1000;
				if(intereses >= 1500) { intereses = 1500; }
			}
			else if(PlayerInfo[i][pVip] == 2)
			{
				intereses = PlayerInfo[i][pBanco]/1000;
				if(intereses >= 3000) { intereses = 3000; }
			}
			else
			{
				intereses = PlayerInfo[i][pBanco]/1000;
				if(intereses >= 1000){ intereses = 1000; }
			}

            for(new c = 0; c < MAX_GARAGES; c++)
            {
	   			if(EstaInfo[c][pIDPropietario] == PlayerInfo[i][pID])
			    {
		     		for(new v = 0; v < MAX_VEHICLES; v++)
	        		{
	          			if(PlayerInfo[i][vEstacionado2] > 0 && GetVehicleVirtualWorld(v) == EstaInfo[c][pVW])
		            	{
							gananciasest += 150;
				        }
				    }
				}
			}
			suma = paga+gananciasest-estacionamiento-seguros;
			sumat = suma+intereses;
			SendClientMessage(i, COLOR_WHITE, "{F0F0F0}/_____________ RESUMEN DE TU CUENTA _____________/");
			if(gananciasest > 0)
			{
				format(string, sizeof(string), " Ganancias de estacionamiento: {00CC00}$%d{FFFFFF}.", gananciasest);
				SendClientMessage(i, COLOR_WHITE, string);
			}
			if(PlayerInfo[i][vEstacionado2] > 0)
			{
				format(string, sizeof(string), " Estacionamiento de vehículos: {FF3300}-$%d{FFFFFF}.",PlayerInfo[i][vEstacionado4]);
				SendClientMessage(i, -1,string);
			}
			if(seguros > 0)
			{
				format(string, sizeof(string), " Seguro de vehículos: {FF3300}-$%d{FFFFFF}.",seguros);
				SendClientMessage(i, -1,string);
			}
			if(PlayerInfo[i][pDuty] == 1)
			{
				format(string2, sizeof(string2), " Pago por servir a la Ley: {00CC00}$2500{FFFFFF}.");
				SendClientMessage(i, -1,string2);
				sumat=sumat+2500;
			}
			if(suma >= 0)
			{
				format(string3, sizeof(string3), " Pago Diario: {00CC00}$%d {FFFFFF}| Gastos: {FF3300}$%d {FFFFFF} | Total: {00CC00}$%d{FFFFFF}.", paga,gastos,suma);
				SendClientMessage(i, -1,string3);
				format(string2, sizeof(string2), " Saldo Bancario: {00CC00}$%d{FFFFFF} | Ganancias (intereses): {00CC00}$%d{FFFFFF}.",PlayerInfo[i][pBanco]+suma, intereses);
				SendClientMessage(i, -1,string2);
			}
			else if(suma < 0)
			{
				format(string3, sizeof(string3), " Pago Diario: {00CC00}$%d {FFFFFF}| Gastos: {FF3300}-$%d {FFFFFF} | Total: {FF3300}-$%d{FFFFFF}.", paga,gastos,suma);
				SendClientMessage(i, -1,string3);
				format(string2, sizeof(string2), " Saldo Bancario: {00CC00}$%d{FFFFFF} | Ganancias (intereses): {00CC00}$%d{FFFFFF}.",PlayerInfo[i][pBanco]-suma, intereses);
				SendClientMessage(i, -1,string2);
			}
			if(Emisoras[i][TransEmisora] == 1)
			{
				new emisoraid, pagalocutor = 0, oyentes = 0;
				emisoraid = Emisoras[i][CabinaOcupada];
				oyentes = CabinasOcupadasEmisoras[emisoraid][2];
				pagalocutor = 3000+(oyentes*500);
				paga += pagalocutor;
				format(string, sizeof(string), " Ganancias por la emisora de radio: {00CC00}$%d{FFFFFF}.", pagalocutor);
				SendClientMessage(i, -1, string);
			}
			SendClientMessage(i, COLOR_WHITE, "{F0F0F0}/________________ FIN DEL RESUMEN ________________/");
			PlayerInfo[i][pBanco] += sumat;
			if(PlayerInfo[i][jExperiencia] < PlayerInfo[i][NivelExp])
			{
				PlayerInfo[i][jTiempoON] += 1;
				PlayerInfo[i][jExperiencia]++;
				SetPlayerProgressBarValue(i,Progressbar[i][Experiencia],PlayerInfo[i][jExperiencia]);
				UpdatePlayerProgressBar(i,Progressbar[i][Experiencia]);
			}
		}
	}
	return 1;
}

public PayDay()
{
	new string[350],horas,minutos,segundos;
	gettime(horas,minutos,segundos);
	Loop2(i,MAX_CONECTADOS)
	{
		if(JugadorLogeado[i] == 1)
		{
		    PlayerInfo[i][horasjugadas]++;
		    if(PlayerInfo[i][TiempoPD] < 40) return SendClientMessage(i,COLOR_GREY,"No jugaste el tiempo suficiente para recibir tu pago diario");
		    PlayerInfo[i][TiempoPD] = 0;
			new paga = PlayerInfo[i][@Nivel]*100+50;
            PlayerInfo[i][TiempoPD] = 0;
			new suma,intereses,string2[400],string3[400],seguro,sumat,seguro2,estacionamiento,gananciasest,seguro3,seguro4,seguros,gastos;
			seguro = PlayerInfo[i][vPrecio]/100;
			seguro2 = PlayerInfo[i][v2Precio]/100;
			seguro3 = PlayerInfo[i][v3Precio]/100;
			seguro4 = PlayerInfo[i][v4Precio]/100;
			seguros = seguro+seguro2+seguro3+seguro4;
			for(new c = 0; c < MAX_PROPIEDADES; c++)
			estacionamiento = PlayerInfo[i][vEstacionado4];
			gastos = seguro+seguro2+seguro3+seguro4+estacionamiento;

			if(PlayerInfo[i][pVip] == 1)
			{
				intereses = PlayerInfo[i][pBanco]/1000;
				if(intereses >= 1500) { intereses = 1500; }
			}
			else if(PlayerInfo[i][pVip] == 2)
			{
				intereses = PlayerInfo[i][pBanco]/1000;
				if(intereses >= 3000) { intereses = 3000; }
			}
			else
			{
				intereses = PlayerInfo[i][pBanco]/1000;
				if(intereses >= 1000){ intereses = 1000; }
			}

			for(new c = 0; c < MAX_GARAGES; c++)
			{
	   			if(EstaInfo[c][pIDPropietario] == PlayerInfo[i][pID])
			    {
		     		for(new v = 0; v < MAX_VEHICLES; v++)
	        		{
	          			if(PlayerInfo[i][vEstacionado2] > 0 && GetVehicleVirtualWorld(v) == EstaInfo[c][pVW])
		            	{
							gananciasest += 150;
				        }
				    }
				}
			}

			suma = paga+gananciasest-estacionamiento-seguros;
			sumat = suma+intereses;

			SendClientMessage(i, COLOR_WHITE, "{F0F0F0}/_____________ RESUMEN DE TU CUENTA _____________/");
			if(gananciasest > 0)
			{
				format(string, sizeof(string), " Ganancias de estacionamiento: {00CC00}$%d{FFFFFF}.", gananciasest);
				SendClientMessage(i, COLOR_WHITE, string);
			}
			if(PlayerInfo[i][vEstacionado2] > 0)
			{
				format(string, sizeof(string), " Estacionamiento de vehículos: {FF3300}-$%d{FFFFFF}.",PlayerInfo[i][vEstacionado4]);
				SendClientMessage(i, -1,string);
			}
			if(seguros > 0)
			{
				format(string, sizeof(string), " Seguro de vehículos: {FF3300}-$%d{FFFFFF}.",seguros);
				SendClientMessage(i, -1,string);
			}
			if(PlayerInfo[i][pDuty] == 1)
			{
				format(string2, sizeof(string2), " Pago por servir a la Ley: {00CC00}$3000{FFFFFF}.");
				SendClientMessage(i, -1,string2);
				sumat=sumat+3000;
			}
			if(suma >= 0)
			{
				format(string3, sizeof(string3), " Pago Diario: {00CC00}$%d {FFFFFF}| Gastos: {FF3300}$%d {FFFFFF} | Total: {00CC00}$%d{FFFFFF}.", paga,gastos,suma);
				SendClientMessage(i, -1,string3);
				format(string2, sizeof(string2), " Saldo Bancario: {00CC00}$%d{FFFFFF} | Ganancias (intereses): {00CC00}$%d{FFFFFF}.",PlayerInfo[i][pBanco]+suma, intereses);
				SendClientMessage(i, -1,string2);
			}
			else if(suma < 0)
			{
				format(string3, sizeof(string3), " Pago Diario: {00CC00}$%d {FFFFFF}| Gastos: {FF3300}-$%d {FFFFFF} | Total: {FF3300}-$%d{FFFFFF}.", paga,gastos,suma);
				SendClientMessage(i, -1,string3);
				format(string2, sizeof(string2), " Saldo Bancario: {00CC00}$%d{FFFFFF} | Ganancias (intereses): {00CC00}$%d{FFFFFF}.",PlayerInfo[i][pBanco]-suma, intereses);
				SendClientMessage(i, -1,string2);
			}
			if(Emisoras[i][TransEmisora] == 1)
			{
				new emisoraid, pagalocutor = 0, oyentes = 0;
				emisoraid = Emisoras[i][CabinaOcupada];
				oyentes = CabinasOcupadasEmisoras[emisoraid][2];
				pagalocutor = 3000+(oyentes*500);
				paga += pagalocutor;
				format(string, sizeof(string), " Ganancias por la emisora de radio: {00CC00}$%d{FFFFFF}.", pagalocutor);
				SendClientMessage(i, -1, string);
			}
			SendClientMessage(i, COLOR_WHITE, "{F0F0F0}/________________ FIN DEL RESUMEN ________________/");
			PlayerInfo[i][pBanco] += sumat;
			if(PlayerInfo[i][jExperiencia] < PlayerInfo[i][NivelExp])
			{
				PlayerInfo[i][jTiempoON] += 1;
				PlayerInfo[i][jExperiencia]++;
				SetPlayerProgressBarValue(i,Progressbar[i][Experiencia],PlayerInfo[i][jExperiencia]);
				UpdatePlayerProgressBar(i,Progressbar[i][Experiencia]);
			}
		}
	}
	new query[680];
	format(query, sizeof(query), "INSERT INTO `estadisticas_server` (Conectados_Simultaneamente) VALUES ('%d')", MAX_CONECTADOS);
	mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, INVALID_PLAYER_ID);
	return 1;
}

DetectSPAM(SPAM[])
{
    new StringSPAM;
    new COUNTP,COUNTN,COUNTW,COUNTTP;
    for(StringSPAM = 0; StringSPAM < strlen(SPAM); StringSPAM ++)
    {
        if(SPAM[StringSPAM] == '.') COUNTP ++;
        if(SPAM[StringSPAM] == '0' || SPAM[StringSPAM] == '1' || SPAM[StringSPAM] == '2' || SPAM[StringSPAM] == '3' || SPAM[StringSPAM] == '4' || SPAM[StringSPAM] == '5' || SPAM[StringSPAM] == '6' || SPAM[StringSPAM] == '7' || SPAM[StringSPAM] == '8' || SPAM[StringSPAM] == '9') COUNTN ++; //Count ot the Numbers
        if(SPAM[StringSPAM] == ':') COUNTTP ++;
    }
    if(COUNTP >= 3 && COUNTN >= 4) return 1;
    if(COUNTW >= 3) return 1;
    if(strfind(SPAM, ".ga", true) != -1 || strfind(SPAM, ".ml", true) != -1 || strfind(SPAM, ".com.ar", true) != -1 || strfind(SPAM, ".org", true) != -1 || strfind(SPAM, ".net", true) != -1 || strfind(SPAM, ".es", true) != -1 || strfind(SPAM, ".tk", true) != -1) return 1;
    if(COUNTTP >= 1 && COUNTN >= 4) return 1;
    return 0;
}

function Cerrar_Rejas1()
{
	MoveDynamicObject(reja1,  288.9500, 1415.9700, 12.9000, 2);
	MoveDynamicObject(reja2,  288.9500, 1407.1300, 12.9000, 2);
	return 1;
}
function Cerrar_Rejas2()
{
	MoveDynamicObject(reja3,  263.1500, 1416.0500, 13.0500, 2);
	MoveDynamicObject(reja4,  263.1500, 1407.2100, 13.0500, 2);
	return 1;
}
function Cerrar_Rejas3()
{
	MoveDynamicObject(reja5,  232.3900, 1420.7500, 13.1700, 2);
	MoveDynamicObject(reja6,  223.5900, 1420.7500, 13.1700, 2);
	return 1;
}
function Cerrar_Porton()
{
	MoveDynamicObject(porton, 1589.267700, -1638.286499, 14.816412, 2);
	return 1;
}
function Mover_Avion()
{
	MoveObject(Avion, 172.6095, -2180.5474, 1954.9325, 12.0);
    MoveObject(AvionInt, 172.6095, -2180.5474, 1954.9325, 12.0);
    return 1;
}
function Cerrar_Barrera()
{
	MoveDynamicObject(barrera, 1544.6943359375, -1630.73046875, 13.27956199646-0.0001, 0.0001, 0, 90, 90);
	return 1;
}
function Cerrar_Puerta2()
{
	MoveDynamicObject(puerta_2,216.32820, 116.53640, 998.04547,3);
	MoveDynamicObject(puerta_3,219.33839, 116.53640, 998.04547,3);
	return 1;
}

function Cerrar_Puerta1()
{
	MoveDynamicObject(puerta_1,1582.63, -1638.02, 12.41,3);
	return 1;
}

function CerrarCasa()
{
	MoveDynamicObject(controls[10],-87.72000, -1127.09998, 0.30000,3);
	return 1;
}
function Cerrar_RejaFC1()
{
	MoveDynamicObject(PuertasFC[1],222.24001, 1429.53003, 1091.44995,3);
	return 1;
}
function Cerrar_RejaFC2()
{
	MoveDynamicObject(PuertasFC[2],210.33000, 1442.91003, 1091.43994,3);
	return 1;
}
function Cerrar_RejaFC3()
{
	MoveDynamicObject(PuertasFC[3],206.67999, 1441.97998, 1085.08997,3);
	return 1;
}
function Cerrar_RejaFC4()
{
	MoveDynamicObject(PuertasFC[4],201.39000, 1447.70996, 1083.83997,3);
	return 1;
}
function Cerrar_RejaFC5()
{
	MoveDynamicObject(PuertasFC[5],170.35001, 1448.48999, 1085.08997,3);
	return 1;
}
function Cerrar_RejaLVPD1()
{
	MoveDynamicObject(PuertasLVPD[1],208.9700, 178.2600, 1003.2800,3);
	return 1;
}
function Cerrar_RejaLVPD2()
{
	MoveDynamicObject(PuertasLVPD[2],209.0100, 159.1100, 1003.2800,3);
	return 1;
}

function Cerrar_RejaACA1()
{
	MoveDynamicObject(PuertasACA[1],638.090027, -187.119995, 1275.800049,3);
	return 1;
}
function Cerrar_RejaACA2()
{
	MoveDynamicObject(PuertasACA[2],645.059998, -210.229996, 1275.800049,3);
	return 1;
}
function Cerrar_RejaACA3()
{
	MoveDynamicObject(PuertasACA[3],645.114014, -217.080002, 1275.760010,3);
	return 1;
}
function Cerrar_RejaACA4()
{
	MoveDynamicObject(PuertasACA[4],642.770020, -226.110001, 1275.760010,3);
	return 1;
}
function Cerrar_RejaACA5()
{
	MoveDynamicObject(PuertasACA[5],642.750000, -237.466003, 1275.760010,3);
	return 1;
}
function Cerrar_RejaACA6()
{
	MoveDynamicObject(PuertasACA[6],645.270020, -239.779999, 1275.760010,3);
	return 1;
}

public AntiSpeedHack()
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(JugadorLogeado[i] == 1 && PlayerInfo[i][pAdmin] < ADMIN_LEVEL_BANEOS)
		{
			if(ObtenerVelocidad(i)> 300)
			{
				if(IsPlayerInAnyVehicle(i))
				{
					new pName[24], string[256];
					GetPlayerName(i,pName,24);
					format(string, 256,"Posible cheat de choque {FF3300}%s(ID: %d){FFFFFF} - Velocidad: %d / %f",pName, i, ObtenerVelocidad(i), ObtenerVelocidad(i));
					MensajeAdmin(COLOR_WHITE, string, 3);
					return 1;
				}
				switch(GetVehicleModel(GetPlayerVehicleID(i)))
				{
					case 0,511,460,592,577,512,513,520,553,593,476,519: printf("",i,GetVehicleModel(GetPlayerVehicleID(i)),ObtenerVelocidad(i));
					default:
					{
						new pName[24], string[256];
						GetPlayerName(i,pName,24);
						format(string, 256,"Posible cheat de choque {FF3300}%s(ID: %d){FFFFFF} - Velocidad: %02f / %02d",pName, i, ObtenerVelocidad(i), ObtenerVelocidad(i));
						MensajeAdmin(COLOR_WHITE, string, 3);
						if(PlayerInfo[i][@Nivel] == 1)
						{
							new Float:X,Float:Y,Float:Z;
							GetPlayerPos(i, X, Y, Z);
							SendClientMessage(i, -1, "{FFFFFF}Salistes disparado del vehículo a causa de un fuerte impacto.");
							RemovePlayerFromVehicle(i);
							SetPlayerPos(i, X, Y, Z+5);
						}
					}
				}
			}
		}
	}
	return 1;
}

public CheatArmas()
{
	new weapons4[MAX_PLAYERS],weapons8[MAX_PLAYERS],municion;
	for (new u = 0; u < MAX_PLAYERS; u++)
	{
		if(JugadorLogeado[u] == 1 && IsPlayerConnected(u) && Quitando[u] == 0 && PlayerInfo[u][pAdmin] < ADMIN_LEVEL_GLOBAL)
		{
			GetPlayerWeaponData(u, 4, weapons4[u], municion);
			GetPlayerWeaponData(u, 8, weapons8[u], municion);
			if(!CheckArma(u,weapons4[u]))
			{
				new pName[24],string[256];
				GetPlayerName(u, pName, 24);
				if(EnPatrulla[u] == 1) return 1;
				if(SancionadoOPricion[u] == 1) return 1;
				format(string, sizeof(string), "El jugador {FF3300}%s(ID: %d){FFFFFF} fue baneado por el anticheat. Razón: {FF3300}Cheat de armas{FFFFFF} (%d).",pName,u,weapons4[u]);
				SendClientMessageToAll(-1, string);
				Kick(u);
			}
			if(weapons8[u] != 0 && municion != 0) { PlayerInfo[u][pWP8] = 16; }
			else { PlayerInfo[u][pWP8] = 0; }
			if(GetPlayerWeapon(u) != 46)
			{
				if(GetPlayerWeapon(u) == PlayerInfo[u][pWP0]) { }
				else if(GetPlayerWeapon(u) == PlayerInfo[u][pWP1])  { }
				else if(GetPlayerWeapon(u) == PlayerInfo[u][pWP2])  { }
				else if(GetPlayerWeapon(u) == PlayerInfo[u][pWP3])  { }
				else if(GetPlayerWeapon(u) == PlayerInfo[u][pWP4])  { }
				else if(GetPlayerWeapon(u) == PlayerInfo[u][pWP5])  { }
				else if(GetPlayerWeapon(u) == PlayerInfo[u][pWP6])  { }
				else if(GetPlayerWeapon(u) == PlayerInfo[u][pWP7])  { }
				else if(GetPlayerWeapon(u) == PlayerInfo[u][pWP8])  { }
				else if(GetPlayerWeapon(u) == PlayerInfo[u][pWP9])  { }
				else if(GetPlayerWeapon(u) == PlayerInfo[u][pWP10]) { }
				else if(GetPlayerWeapon(u) == PlayerInfo[u][pWP11]) { }
				else if(GetPlayerWeapon(u) == PlayerInfo[u][pWP12]) { }
				else
				{
					if(TieneArmaCheat(u) && PlayerInfo[u][pAdmin] != ADMIN_LEVEL_ADM)
					{
						new pName[24],string[256],day,month,year;
						getdate(day,month,year);
						GetPlayerName(u, pName, 24);
						if(EnPatrulla[u] == 1) return 1;
						format(string, sizeof(string), "El jugador {FF3300}%s(ID: %d){FFFFFF} fue baneado por el anticheat. Razón: {FF3300}Cheat de armas{FFFFFF} (%d).",pName,u,GetPlayerWeapon(u));
						SendClientMessageToAll(-1, string);
						Kick(u);
						return 1;
					}
					if(Avisos[u] >= 3)
					{
						new pName[24],string[256];
						GetPlayerName(u, pName, 24);
						if(EnPatrulla[u] == 1) return 1;
						format(string, sizeof(string), "El jugador {FF3300}%s(ID: %d){FFFFFF} fue baneado por el anticheat. Razón: {FF3300}Cheat de armas{FFFFFF} (%d).",pName,u,GetPlayerWeapon(u));
						SendClientMessageToAll(-1, string);
						Kick(u);
					}
					else
					{
						Avisos[u]++;
					}
				}
			}
		}
	}
	return 1;
}

public RestaTiempo()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(Jail[i] == 1)
		{
			if(EstaEnBus[i] == 0)
			{
				if(PlayerInfo[i][pTiempoCarcelM] >= 0 && PlayerInfo[i][pTiempoCarcelS] >= 0)
				{
					if(PlayerInfo[i][pTiempoCarcelS] > 0)
					{
						PlayerInfo[i][pTiempoCarcelS]--;
					}
					else if(PlayerInfo[i][pTiempoCarcelS] <= 0)
					{
						if(PlayerInfo[i][pTiempoCarcelM] > 0)
						{
							PlayerInfo[i][pTiempoCarcelS] = 60;
							PlayerInfo[i][pTiempoCarcelM]--;
						}
						else if(PlayerInfo[i][pTiempoCarcelM] <= 0)
						{
							Jail[i] = 0;
							Esposando[i] = 0;
							CargarMapeosEx(i);
							switch(GetPlayerVirtualWorld(i))
							{
								case 1:
								{
									SetPlayerPos(i, 216.41, 120.24, 999.02);
								}
								case 5:
								{
									SetPlayerPos(i, 216.41, 120.24, 999.02);
								}
								case 7:
								{
									SetPlayerPos(i, 212.3451,158.1483,1003.0300);
								}
								case 15:
								{
									SetPlayerPos(i, 292.8015,1419.4640,10.1458);
									SetPlayerVirtualWorld(i, 0);
									SetPlayerInterior(i, 0);
								}
							}
							SendClientMessage(i,-1,"{11FF00}Cumpliste tu condena{FFFFFF}, quedas en libertad.");
							PlayerInfo[i][pTipoCarcel] = 0;
							PlayerInfo[i][pTiempoCarcelS] = 0;
							PlayerInfo[i][pTiempoCarcelM] = 0;
							PlayerInfo[i][pEnFC] = 0;
						}
					}
				}
			}
		}
	}
}

public JobCocinero1(f)
{
	if(Fabricas[f][StatoCuoco1] == 1)
	{
	    if(Fabricas[f][PorcentajeCocinero1] >= 100)
	    {
			Fabricas[f][Bloque1] = CreateDynamicObject(1271, -2017.67334, 227.02380, 1035.15454,   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]);
	        Fabricas[f][Termino1] = 1;
	        Fabricas[f][StatoCuoco1] = 4;
	        Fabricas[f][PorcentajeCocinero1] = 0;
	        ActualizarLabelMoledores(f,1);
	        KillTimer(Fabricas[f][tiempoc1]);
	        GuardarFabrica(f);
	        return 1;
	    }
		Fabricas[f][PorcentajeCocinero1] ++;
		ActualizarLabelMoledores(f,1);
		GuardarFabrica(f);
	}
	return 1;
}

public JobCocinero2(f)
{
	if(Fabricas[f][StatoCuoco2] == 1)
	{
	    if(Fabricas[f][PorcentajeCocinero2] >= 100)
	    {
			Fabricas[f][Bloque2] = CreateDynamicObject(1271, -2013.86060, 227.05284, 1035.15454,   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]);
	        Fabricas[f][Termino2] = 1;
	        Fabricas[f][StatoCuoco2] = 4;
	        Fabricas[f][PorcentajeCocinero2] = 0;
	        ActualizarLabelMoledores(f,2);
	        KillTimer(Fabricas[f][tiempoc2]);
	        GuardarFabrica(f);
	        return 1;
	    }
		Fabricas[f][PorcentajeCocinero2] ++;
		ActualizarLabelMoledores(f,2);
		GuardarFabrica(f);
	}
	return 1;
}

public JobCocinero3(f)
{
	if(Fabricas[f][StatoCuoco3] == 1)
	{
	    if(Fabricas[f][PorcentajeCocinero3] >= 100)
	    {
			Fabricas[f][Bloque3] = CreateDynamicObject(1271, -2009.98157, 227.00481, 1035.15454,   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]);
	        Fabricas[f][Termino3] = 1;
	        Fabricas[f][StatoCuoco3] = 4;
	        Fabricas[f][PorcentajeCocinero3] = 0;
	        ActualizarLabelMoledores(f,3);
	        KillTimer(Fabricas[f][tiempoc3]);
	        GuardarFabrica(f);
	        return 1;
	    }
		Fabricas[f][PorcentajeCocinero3] ++;
		ActualizarLabelMoledores(f,3);
		GuardarFabrica(f);
	}
	return 1;
}

public JobCocinero4(f)
{
	if(Fabricas[f][StatoCuoco4] == 1)
	{
	    if(Fabricas[f][PorcentajeCocinero4] >= 100)
	    {
			Fabricas[f][Bloque4] = CreateDynamicObject(1271, -2006.16040, 226.99612, 1035.15454,   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]);
	        Fabricas[f][Termino4] = 1;
	        Fabricas[f][StatoCuoco4] = 4;
	        Fabricas[f][PorcentajeCocinero4] = 0;
	        ActualizarLabelMoledores(f,4);
	        KillTimer(Fabricas[f][tiempoc4]);
	        GuardarFabrica(f);
	        return 1;
	    }
		Fabricas[f][PorcentajeCocinero4] ++;
		ActualizarLabelMoledores(f,4);
	}
	return 1;
}

public JobCocinero5(f)
{
	if(Fabricas[f][StatoCuoco5] == 1)
	{
	    if(Fabricas[f][PorcentajeCocinero5] >= 100)
	    {
			Fabricas[f][Bloque5] = CreateDynamicObject(1271, -2002.34033, 227.01234, 1035.15454,   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]);
	        Fabricas[f][Termino5] = 1;
	        Fabricas[f][StatoCuoco5] = 4;
	        Fabricas[f][PorcentajeCocinero5] = 0;
	        ActualizarLabelMoledores(f,5);
	        KillTimer(Fabricas[f][tiempoc5]);
	        GuardarFabrica(f);
	        return 1;
	    }
		Fabricas[f][PorcentajeCocinero5] ++;
		ActualizarLabelMoledores(f,5);
	}
	return 1;
}

public Horno1(f)
{
	new string[360];
    if(HornoEncendido1[f] == 1)
	{
		if(Fabricas[f][Crisol1] == 0)
		{
		    if(Fabricas[f][Porcentaje1] >= 100)
		    {
		        Fabricas[f][Crisol1] = 1;
				ApagarEstufaUno(f);
				Fabricas[f][Porcentaje1] = 0;
				GuardarFabrica(f);
				return 1;
		    }
   			if(Fabricas[f][pTanqueUno] != 0) Fabricas[f][pTanqueUno] --;
   			else if(Fabricas[f][pTanqueDos] != 0) Fabricas[f][pTanqueDos] --;
   			else if(Fabricas[f][pTanqueTres] != 0) Fabricas[f][pTanqueTres] --;
     		else return ApagarEstufaUno(f);
			Fabricas[f][Porcentaje1] ++;
			//Actualizar cocina 1
			format(string,sizeof(string),"{DBED16}Cocina: #1{FFFFFF}\nProducción: {3d83ce}%d%%{FFFFFF} completada.\nEstado: %s{FFFFFF}\n\n%s{FFFFFF}%s",Fabricas[f][Porcentaje1],EstadoH(HornoEncendido1[f]),EstadoHo(HornoEncendido1[f]),EstadoCristal(Fabricas[f][Crisol1]));
			UpdateDynamic3DTextLabelText(Fabricas[f][olla1], COLOR_WHITE, string);
			//ActualizarTanques
			format(string,sizeof(string),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #1",Fabricas[f][pTanqueUno]);
   			UpdateDynamic3DTextLabelText(Fabricas[f][LTanque1], COLOR_WHITE, string);
   			format(string,sizeof(string),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #1",Fabricas[f][pTanqueDos]);
   			UpdateDynamic3DTextLabelText(Fabricas[f][LTanque2], COLOR_WHITE, string);
   			format(string,sizeof(string),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #1",Fabricas[f][pTanqueTres]);
   			UpdateDynamic3DTextLabelText(Fabricas[f][LTanque3], COLOR_WHITE, string);
			GuardarFabrica(f);
		}
    }
    return 1;
}

public Horno2(f)
{
	new string[360];
    if(HornoEncendido2[f] == 1)
	{
		if(Fabricas[f][Crisol2] == 0)
		{
		    if(Fabricas[f][Porcentaje2] >= 100)
		    {
		        Fabricas[f][Crisol2] = 1;
		    	HornoEncendido2[f] = 0;
				KillTimer(Fabricas[f][tiempoh2]);
				DestroyDynamicObject(Fabricas[f][humo2]);
				Fabricas[f][Porcentaje2] = 0;
		        format(string,sizeof(string),"{DBED16}Cocina: #2{FFFFFF}\nProducción: {3d83ce}%d%%{FFFFFF} completada.\nEstado: %s{FFFFFF}\n\n%s{FFFFFF}%s",Fabricas[f][Porcentaje2],EstadoH(HornoEncendido2[f]),EstadoHo(HornoEncendido2[f]),EstadoCristal(Fabricas[f][Crisol2]));
				UpdateDynamic3DTextLabelText(Fabricas[f][olla2], COLOR_WHITE, string);
				GuardarFabrica(f);
				return 1;
			}
   			if(Fabricas[f][pTanqueCuatro] != 0) Fabricas[f][pTanqueCuatro] --;
   			else if(Fabricas[f][pTanqueCinco] != 0) Fabricas[f][pTanqueCinco] --;
   			else if(Fabricas[f][pTanqueSeis] != 0) Fabricas[f][pTanqueSeis] --;
     		else
			{
				HornoEncendido2[f] = 0;
				KillTimer(Fabricas[f][tiempoh2]);
				DestroyDynamicObject(Fabricas[f][humo2]);
		        format(string,sizeof(string),"{DBED16}Cocina: #2{FFFFFF}\nProducción: {3d83ce}%d%%{FFFFFF} completada.\nEstado: %s{FFFFFF}\n\n%s{FFFFFF}%s",Fabricas[f][Porcentaje2],EstadoH(HornoEncendido2[f]),EstadoHo(HornoEncendido2[f]),EstadoCristal(Fabricas[f][Crisol2]));
				UpdateDynamic3DTextLabelText(Fabricas[f][olla2], COLOR_WHITE, string);
				return 1;
			}
			Fabricas[f][Porcentaje2] ++;
			//Actualizar cocina 1
			format(string,sizeof(string),"{DBED16}Cocina: #2{FFFFFF}\nProducción: {3d83ce}%d%%{FFFFFF} completada.\nEstado: %s{FFFFFF}\n\n%s{FFFFFF}%s",Fabricas[f][Porcentaje2],EstadoH(HornoEncendido2[f]),EstadoHo(HornoEncendido2[f]),EstadoCristal(Fabricas[f][Crisol2]));
			UpdateDynamic3DTextLabelText(Fabricas[f][olla2], COLOR_WHITE, string);
			//ActualizarTanques
			format(string,sizeof(string),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #2",Fabricas[f][pTanqueCuatro]);
            UpdateDynamic3DTextLabelText(Fabricas[f][LTanque4], COLOR_WHITE, string);
			format(string,sizeof(string),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #2",Fabricas[f][pTanqueCinco]);
			UpdateDynamic3DTextLabelText(Fabricas[f][LTanque5], COLOR_WHITE, string);
			format(string,sizeof(string),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #2",Fabricas[f][pTanqueSeis]);
			UpdateDynamic3DTextLabelText(Fabricas[f][LTanque6], COLOR_WHITE, string);
			GuardarFabrica(f);
		}
    }
    return 1;
}

public Horno3(f)
{
	new string[360];
    if(HornoEncendido3[f] == 1)
	{
		if(Fabricas[f][Crisol3] == 0)
		{
		    if(Fabricas[f][Porcentaje3] >= 100)
		    {
		        Fabricas[f][Crisol3] = 1;
                HornoEncendido3[f] = 0;
				KillTimer(Fabricas[f][tiempoh3]);
				DestroyDynamicObject(Fabricas[f][humo3]);
				Fabricas[f][Porcentaje3] = 0;
		        format(string,sizeof(string),"{DBED16}Cocina: #3{FFFFFF}\nProducción: {3d83ce}%d%%{FFFFFF} completada.\nEstado: %s{FFFFFF}\n\n%s{FFFFFF}%s",Fabricas[f][Porcentaje3],EstadoH(HornoEncendido3[f]),EstadoHo(HornoEncendido3[f]),EstadoCristal(Fabricas[f][Crisol3]));
				UpdateDynamic3DTextLabelText(Fabricas[f][olla3], COLOR_WHITE, string);
				Fabricas[f][Porcentaje3] = 0;
				GuardarFabrica(f);
				return 1;
			}
   			if(Fabricas[f][pTanqueSiete] != 0) Fabricas[f][pTanqueSiete] --;
   			else if(Fabricas[f][pTanqueOcho] != 0) Fabricas[f][pTanqueOcho] --;
   			else if(Fabricas[f][pTanqueNueve] != 0) Fabricas[f][pTanqueNueve] --;
     		else
			{
				HornoEncendido3[f] = 0;
				KillTimer(Fabricas[f][tiempoh3]);
				DestroyDynamicObject(Fabricas[f][humo3]);
		        format(string,sizeof(string),"{DBED16}Cocina: #3{FFFFFF}\nProducción: {3d83ce}%d%%{FFFFFF} completada.\nEstado: %s{FFFFFF}\n\n%s{FFFFFF}%s",Fabricas[f][Porcentaje3],EstadoH(HornoEncendido3[f]),EstadoHo(HornoEncendido3[f]),EstadoCristal(Fabricas[f][Crisol3]));
				UpdateDynamic3DTextLabelText(Fabricas[f][olla3], COLOR_WHITE, string);
				return 1;
			}
			Fabricas[f][Porcentaje3] ++;
			//Actualizar cocina 1
			format(string,sizeof(string),"{DBED16}Cocina: #3{FFFFFF}\nProducción: {3d83ce}%d%%{FFFFFF} completada.\nEstado: %s{FFFFFF}\n\n%s{FFFFFF}%s",Fabricas[f][Porcentaje3],EstadoH(HornoEncendido3[f]),EstadoHo(HornoEncendido3[f]),EstadoCristal(Fabricas[f][Crisol3]));
			UpdateDynamic3DTextLabelText(Fabricas[f][olla3], COLOR_WHITE, string);
			//ActualizarTanques
			format(string,sizeof(string),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #3",Fabricas[f][pTanqueUno]);
			UpdateDynamic3DTextLabelText(Fabricas[f][LTanque7], COLOR_WHITE, string);
			format(string,sizeof(string),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #3",Fabricas[f][pTanqueUno]);
			UpdateDynamic3DTextLabelText(Fabricas[f][LTanque8], COLOR_WHITE, string);
			format(string,sizeof(string),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #3",Fabricas[f][pTanqueUno]);
			UpdateDynamic3DTextLabelText(Fabricas[f][LTanque9], COLOR_WHITE, string);
			GuardarFabrica(f);
		}
    }
    return 1;
}

public BajarTiempoAgresor()
{
	gettime(Hora, Minuto, Segundo);
	if(Minuto == 2 && PaydayDado == 0)
	{
		PayDay();
		PaydayDado = 1;
		//Iniciar Carrera
		ResetearCarrera();
		HabilitarCarreras = 1;
		Update3DTextLabelText(TextoCarrera,COLOR_WHITE,"{00CC00}Boleteria abierta\n{FFFFFF}Costo de la entrada: {00CC00}$600\n{DBED16}/comprar entrada");
		ConteoCarrera = 10;
		SetTimer("EmpezarCarrera",60*1000,0);
		new string[250];
		format(string,sizeof(string),"En {00CC00}%d minutos{FFFFFF} comienza la carrera, ya se inscribieron {DBED16}%d{FFFFFF} corredores.",ConteoCarrera,ParticipantesCarrera);
		for(new i, j = GetPlayerPoolSize(); i <= j; i++) if(IsPlayerInRangeOfPoint(i,250,-1408.8688,-304.5082,1056.4351) && GetPlayerInterior(i) == 7) SendClientMessage(i,-1,string);
		//Fin Carrera
	}
	if(Minuto == 3 && PaydayDado == 1)
	{
		PaydayDado = 0;
	}
	foreach(Player,i)
	{
		PlayerInfo[i][TiempoPD] ++;
	    if(YoLlame[i] == 1)
	    {
	        MinutoLlamada[i] += 1;
	    }
 		if(JustReported[i] != 0){ JustReported[i]--; }

		if(TiempoAgresor[i] > 0 && Agresor[i] != INVALID_PLAYER_ID)
		{
			TiempoAgresor[i]--;
		}
		else if(TiempoAgresor[i] <= 0 && Agresor[i] != INVALID_PLAYER_ID)
		{
			TiempoAgresor[i] = 0;
			Agresor[i] = INVALID_PLAYER_ID;
		}
	}
}

public Curar()
{
	Loop2(u,MAX_CONECTADOS)
	{
		new Float:health;
		GetPlayerHealth(u,health);
		if(JugadorLogeado[u] == 1)
		{
			if(Curando[u] == 1)
			{
				if(PlayerInfo[u][@Salud] >= 60)
				{
					Curando[u] = 0;
					EstablecerVida(u, 60);
					SetTimerEx("ApareceHospital2", 1000, false, "d", u);
				}
				else
				{
					EstablecerVida(u, PlayerInfo[u][@Salud]+2.0);
				}
			}
		}
	}
}

public HablarLoro()
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(LoroHabla[i] == 1)
		{
			if(PlayerInfo[i][pObj] == 19078 && UsandoObj[i] == 1|| PlayerInfo[i][pObj2] == 19078 && UsandoObj2[i] == 1 || PlayerInfo[i][pObj3] == 19078 && UsandoObj3[i] == 1 || PlayerInfo[i][pObj4] == 19078 && UsandoObj4[i] == 1)
			{
				new LName[50];
				new chatadmin[128];
				new chatadmin2[128];
				GetPlayerName(i,LName,50);
				format(chatadmin,sizeof(chatadmin),"Loro de %s dice: %s",LName, FraseLoro[i]);
				ProxDetector(15.0, i, chatadmin, 0xCDFFCEFF, 0xCDFFCEFF, 0xCDFFCEFF, 0xCDFFCEFF, 0xCDFFCEFF);
				format(chatadmin2,sizeof(chatadmin2),"(Loro): ¡%s!", FraseLoro[i]);
				SetPlayerChatBubble(i,chatadmin2,COLOR_WHITE,30.0,6000);
			}
		}
	}
}

public TimerCriminal()
{
	new str2[64];
	for(new ec=1;ec<MAX_ENCARGOS;ec++) if(Encargo[ec][SegundosMision] > 0) { Encargo[ec][SegundosMision]--;	 }
	foreach(Player,i)
	{
		for(new e=1;e<MAX_ENCARGOS;e++)
		{
			FinTiempoCriminal(e);
			TextDrawHideForPlayer(i, MisionCriminal[e]);
			TextDrawHideForPlayer(i, MisionColega[e]);
			TextDrawHideForPlayer(i, TiempoMision[e]);
			TextDrawHideForPlayer(i, TiempoMision[e]);
			TextDrawHideForPlayer(i, FranjaCriminal);
			if(TieneEncargo[i] > 0)
			{
				TextDrawShowForPlayer(Encargo[TieneEncargo[i]][IdCriminal], MisionCriminal[TieneEncargo[i]]);
				TextDrawShowForPlayer(Encargo[TieneEncargo[i]][IdColega], MisionColega[TieneEncargo[i]]);
				if(Encargo[TieneEncargo[i]][SegundosMision] < 10)		format(str2, 64, "00:0%d", Encargo[TieneEncargo[i]][SegundosMision]);
				else if(Encargo[TieneEncargo[i]][SegundosMision] < 60)		format(str2, 64, "00:%d", Encargo[TieneEncargo[i]][SegundosMision]);
				else if(Encargo[TieneEncargo[i]][SegundosMision] >= 60)	format(str2, 64, "0%d:%d",Encargo[TieneEncargo[i]][SegundosMision]/60, Encargo[TieneEncargo[i]][SegundosMision]%(60));
				TextDrawSetString(TiempoMision[TieneEncargo[i]], str2);
				if(Encargo[TieneEncargo[i]][SegundosMision] > 0) TextDrawShowForPlayer(Encargo[TieneEncargo[i]][IdColega], TiempoMision[TieneEncargo[i]]); TextDrawShowForPlayer(Encargo[TieneEncargo[i]][IdCriminal], TiempoMision[TieneEncargo[i]]);
			}
		}
	}
}
public OnPlayerGiveDamageActor(playerid, damaged_actorid, Float: amount, weaponid, bodypart)
{
	Loop(f,MAX_FABRICAS)
	{
	    if(PlayerInfo[playerid][pFaccion] == 1)
		{
			if(GetPlayerInterior(playerid) == Fabricas[f][pInt])
			{
				if(damaged_actorid == Fabricas[f][ActorMedico] && IsValidActor(Fabricas[f][ActorMedico]))
				{
		 	        ApplyActorAnimation(Fabricas[f][ActorMedico], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
			        Fabricas[f][EstadoMedico] = 1;

					if(Fabricas[f][pSoborno] == 0)
    				{
			    	    if(Fabricas[f][TieneCocinero1] == 1 && Fabricas[f][EstadoCoc1] == 0) return 1;
	    			    if(Fabricas[f][TieneCocinero2] == 1 && Fabricas[f][EstadoCoc2] == 0) return 1;
	    	    		if(Fabricas[f][TieneCocinero3] == 1 && Fabricas[f][EstadoCoc3] == 0) return 1;
	    	  			if(Fabricas[f][TieneCocinero4] == 1 && Fabricas[f][EstadoCoc4] == 0) return 1;
	    	  			if(Fabricas[f][TieneCocinero5] == 1 && Fabricas[f][EstadoCoc5] == 0) return 1;
	    	    		BorrarStatsFabrica(f);
		    	    }
				}
				//Guardia 1
				if(damaged_actorid == Fabricas[f][ActorGuardia1] && IsValidActor(Fabricas[f][ActorGuardia1]))
				{
			        ApplyActorAnimation(Fabricas[f][ActorGuardia1], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
			        Fabricas[f][EstadoG1] = 1;
                    RestarVida(playerid,20);

                    if(Fabricas[f][pSoborno] == 0)
    				{
			    	    if(Fabricas[f][TieneCocinero1] == 1 && Fabricas[f][EstadoCoc1] == 0) return 1;
	    			    if(Fabricas[f][TieneCocinero2] == 1 && Fabricas[f][EstadoCoc2] == 0) return 1;
	    	    		if(Fabricas[f][TieneCocinero3] == 1 && Fabricas[f][EstadoCoc3] == 0) return 1;
	    	  			if(Fabricas[f][TieneCocinero4] == 1 && Fabricas[f][EstadoCoc4] == 0) return 1;
	    	  			if(Fabricas[f][TieneCocinero5] == 1 && Fabricas[f][EstadoCoc5] == 0) return 1;
	    	    		BorrarStatsFabrica(f);
		    	    }
				}
				//Guardia 2
				if(damaged_actorid == Fabricas[f][ActorGuardia2] && IsValidActor(Fabricas[f][ActorGuardia2]))
				{
		 	        ApplyActorAnimation(Fabricas[f][ActorGuardia2], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
			        Fabricas[f][EstadoG2] = 1;
			        RestarVida(playerid,20);

			        if(Fabricas[f][pSoborno] == 0)
    				{
			    	    if(Fabricas[f][TieneCocinero1] == 1 && Fabricas[f][EstadoCoc1] == 0) return 1;
	    			    if(Fabricas[f][TieneCocinero2] == 1 && Fabricas[f][EstadoCoc2] == 0) return 1;
	    	    		if(Fabricas[f][TieneCocinero3] == 1 && Fabricas[f][EstadoCoc3] == 0) return 1;
	    	  			if(Fabricas[f][TieneCocinero4] == 1 && Fabricas[f][EstadoCoc4] == 0) return 1;
	    	  			if(Fabricas[f][TieneCocinero5] == 1 && Fabricas[f][EstadoCoc5] == 0) return 1;
	    	    		BorrarStatsFabrica(f);
		    	    }
				}
				//Guardia 3
				if(damaged_actorid == Fabricas[f][ActorGuardia3] && IsValidActor(Fabricas[f][ActorGuardia3]))
				{
			        ApplyActorAnimation(Fabricas[f][ActorGuardia3], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
			        Fabricas[f][EstadoG3] = 1;
					RestarVida(playerid,20);

					if(Fabricas[f][pSoborno] == 0)
    				{
			    	    if(Fabricas[f][TieneCocinero1] == 1 && Fabricas[f][EstadoCoc1] == 0) return 1;
	    			    if(Fabricas[f][TieneCocinero2] == 1 && Fabricas[f][EstadoCoc2] == 0) return 1;
	    	    		if(Fabricas[f][TieneCocinero3] == 1 && Fabricas[f][EstadoCoc3] == 0) return 1;
	    	  			if(Fabricas[f][TieneCocinero4] == 1 && Fabricas[f][EstadoCoc4] == 0) return 1;
	    	  			if(Fabricas[f][TieneCocinero5] == 1 && Fabricas[f][EstadoCoc5] == 0) return 1;
	    	    		BorrarStatsFabrica(f);
		    	    }
				}
				//Procesadores de meta 1
				if(damaged_actorid == Fabricas[f][ActorCocinero1] && IsValidActor(Fabricas[f][ActorCocinero1]))
				{
		 	        ApplyActorAnimation(Fabricas[f][ActorCocinero1], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
			        Fabricas[f][EstadoCoc1] = 1;
			        Fabricas[f][StatoCuoco1] = 3;
			        ActualizarLabelMoledores(f,1);
			        KillTimer(Fabricas[f][tiempoc1]);
	        		GuardarFabrica(f);

	        		if(Fabricas[f][pSoborno] == 0)
    				{
			    	    if(Fabricas[f][TieneCocinero1] == 1 && Fabricas[f][EstadoCoc1] == 0) return 1;
	    			    if(Fabricas[f][TieneCocinero2] == 1 && Fabricas[f][EstadoCoc2] == 0) return 1;
	    	    		if(Fabricas[f][TieneCocinero3] == 1 && Fabricas[f][EstadoCoc3] == 0) return 1;
	    	  			if(Fabricas[f][TieneCocinero4] == 1 && Fabricas[f][EstadoCoc4] == 0) return 1;
	    	  			if(Fabricas[f][TieneCocinero5] == 1 && Fabricas[f][EstadoCoc5] == 0) return 1;
	    	    		BorrarStatsFabrica(f);
		    	    }
				}
				//Procesadores de meta 2
				if(damaged_actorid == Fabricas[f][ActorCocinero2] && IsValidActor(Fabricas[f][ActorCocinero2]))
				{
			        ApplyActorAnimation(Fabricas[f][ActorCocinero2], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
			        Fabricas[f][EstadoCoc2] = 1;
			        Fabricas[f][StatoCuoco2] = 3;
			        ActualizarLabelMoledores(f,2);
			        KillTimer(Fabricas[f][tiempoc2]);
	        		GuardarFabrica(f);

	        		if(Fabricas[f][pSoborno] == 0)
    				{
			    	    if(Fabricas[f][TieneCocinero1] == 1 && Fabricas[f][EstadoCoc1] == 0) return 1;
	    			    if(Fabricas[f][TieneCocinero2] == 1 && Fabricas[f][EstadoCoc2] == 0) return 1;
	    	    		if(Fabricas[f][TieneCocinero3] == 1 && Fabricas[f][EstadoCoc3] == 0) return 1;
	    	  			if(Fabricas[f][TieneCocinero4] == 1 && Fabricas[f][EstadoCoc4] == 0) return 1;
	    	  			if(Fabricas[f][TieneCocinero5] == 1 && Fabricas[f][EstadoCoc5] == 0) return 1;
	    	    		BorrarStatsFabrica(f);
		    	    }
				}
				//Procesadores de meta 3
				if(damaged_actorid == Fabricas[f][ActorCocinero3] && IsValidActor(Fabricas[f][ActorCocinero3]))
				{
			        ApplyActorAnimation(Fabricas[f][ActorCocinero3], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
			        Fabricas[f][EstadoCoc3] = 1;
			        Fabricas[f][StatoCuoco3] = 3;
			        ActualizarLabelMoledores(f,3);
			        KillTimer(Fabricas[f][tiempoc3]);
	        		GuardarFabrica(f);

	        		if(Fabricas[f][pSoborno] == 0)
    				{
			    	    if(Fabricas[f][TieneCocinero1] == 1 && Fabricas[f][EstadoCoc1] == 0) return 1;
	    			    if(Fabricas[f][TieneCocinero2] == 1 && Fabricas[f][EstadoCoc2] == 0) return 1;
	    	    		if(Fabricas[f][TieneCocinero3] == 1 && Fabricas[f][EstadoCoc3] == 0) return 1;
	    	  			if(Fabricas[f][TieneCocinero4] == 1 && Fabricas[f][EstadoCoc4] == 0) return 1;
	    	  			if(Fabricas[f][TieneCocinero5] == 1 && Fabricas[f][EstadoCoc5] == 0) return 1;
	    	    		BorrarStatsFabrica(f);
		    	    }
				}
				//procesadores de meta 4
				if(damaged_actorid == Fabricas[f][ActorCocinero4] && IsValidActor(Fabricas[f][ActorCocinero4]))
				{
			        ApplyActorAnimation(Fabricas[f][ActorCocinero4], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
			        Fabricas[f][EstadoCoc4] = 1;
			        Fabricas[f][StatoCuoco4] = 3;
			        ActualizarLabelMoledores(f,4);
			        KillTimer(Fabricas[f][tiempoc4]);
	        		GuardarFabrica(f);

	        		if(Fabricas[f][pSoborno] == 0)
    				{
			    	    if(Fabricas[f][TieneCocinero1] == 1 && Fabricas[f][EstadoCoc1] == 0) return 1;
	    			    if(Fabricas[f][TieneCocinero2] == 1 && Fabricas[f][EstadoCoc2] == 0) return 1;
	    	    		if(Fabricas[f][TieneCocinero3] == 1 && Fabricas[f][EstadoCoc3] == 0) return 1;
	    	  			if(Fabricas[f][TieneCocinero4] == 1 && Fabricas[f][EstadoCoc4] == 0) return 1;
	    	  			if(Fabricas[f][TieneCocinero5] == 1 && Fabricas[f][EstadoCoc5] == 0) return 1;
	    	    		BorrarStatsFabrica(f);
		    	    }
				}
				//Procesadores de meta 5
				if(damaged_actorid == Fabricas[f][ActorCocinero5] && IsValidActor(Fabricas[f][ActorCocinero5]))
				{
					ApplyActorAnimation(Fabricas[f][ActorCocinero5], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
				    Fabricas[f][EstadoCoc5] = 1;
				    Fabricas[f][StatoCuoco5] = 3;
			        ActualizarLabelMoledores(f,5);
			        KillTimer(Fabricas[f][tiempoc5]);
	        		GuardarFabrica(f);

	        		if(Fabricas[f][pSoborno] == 0)
    				{
			    	    if(Fabricas[f][TieneCocinero1] == 1 && Fabricas[f][EstadoCoc1] == 0) return 1;
	    			    if(Fabricas[f][TieneCocinero2] == 1 && Fabricas[f][EstadoCoc2] == 0) return 1;
	    	    		if(Fabricas[f][TieneCocinero3] == 1 && Fabricas[f][EstadoCoc3] == 0) return 1;
	    	  			if(Fabricas[f][TieneCocinero4] == 1 && Fabricas[f][EstadoCoc4] == 0) return 1;
	    	  			if(Fabricas[f][TieneCocinero5] == 1 && Fabricas[f][EstadoCoc5] == 0) return 1;
	    	    		BorrarStatsFabrica(f);
		    	    }
			    }
			}
		}
	}
	if(TieneEncargo[playerid] > 0)
	{
		if(damaged_actorid == Encargo[TieneEncargo[playerid]][Objetivo] && IsValidActor(Encargo[TieneEncargo[playerid]][Objetivo]) && Encargo[TieneEncargo[playerid]][ObjetivoTake] == 1)
		{
			ApplyActorAnimation(Encargo[TieneEncargo[playerid]][Objetivo], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
			SetTimerEx("AdiosObjetivo",20000,false,"d",TieneEncargo[playerid]);
			Encargo[TieneEncargo[playerid]][ObjetivoTake] = 2;
			SetPlayerCheckpoint(Encargo[TieneEncargo[playerid]][IdColega],-2157.8093,654.7702,51.9927, 3.0);
			Encargo[TieneEncargo[playerid]][SegundosMision] = 300;
			TextDrawSetString(MisionCriminal[TieneEncargo[playerid]], "~r~Huye~w~ con tu colega.");
			TextDrawSetString(MisionColega[TieneEncargo[playerid]], "~g~Huye~w~ en el vehiculo de tu colega.");
			SendClientMessage(Encargo[TieneEncargo[playerid]][IdCriminal],-1,"Huye en el vehículo de tu colega, la policía los está buscando.");
			SendClientMessage(Encargo[TieneEncargo[playerid]][IdColega],-1,"Huye con tu colega, la policía los está buscando.");
			SetPlayerWantedLevel(Encargo[TieneEncargo[playerid]][IdCriminal], 2);
			SetPlayerWantedLevel(Encargo[TieneEncargo[playerid]][IdColega], 2);
		}
		if(damaged_actorid == Encargo[TieneEncargo[playerid]][Objetivo] && IsValidActor(Encargo[TieneEncargo[playerid]][Objetivo]) && Encargo[TieneEncargo[playerid]][ObjetivoTake] == 0)
		{
			if(IsValidActor(Encargo[TieneEncargo[playerid]][Actor1])) ApplyActorAnimation(Encargo[TieneEncargo[playerid]][Actor1], "ped","cower", 4.1,1,0,0,1,0);
			if(IsValidActor(Encargo[TieneEncargo[playerid]][Actor2])) ApplyActorAnimation(Encargo[TieneEncargo[playerid]][Actor2], "ped","cower", 4.1,1,0,0,1,0);
			ApplyActorAnimation(Encargo[TieneEncargo[playerid]][Objetivo], "SWEET","Sweet_injuredloop", 4.1,1,0,0,1,0);
			Encargo[TieneEncargo[playerid]][ObjetivoTake] = 1;
		}
		if(damaged_actorid == Encargo[TieneEncargo[playerid]][Actor1] && IsValidActor(Encargo[TieneEncargo[playerid]][Objetivo]))
		{
			ApplyActorAnimation(Encargo[TieneEncargo[playerid]][Actor1], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
			Encargo[TieneEncargo[playerid]][Bajas]++;
		}
		if(damaged_actorid == Encargo[TieneEncargo[playerid]][Actor2] && IsValidActor(Encargo[TieneEncargo[playerid]][Objetivo]))
		{
			ApplyActorAnimation(Encargo[TieneEncargo[playerid]][Actor2], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
			Encargo[TieneEncargo[playerid]][Bajas]++;
		}
	}
	return true;
}
public BajarTiempos()
{
    if(RestaLadron > 0) { RestaLadron--; }
	if(RestaGuardia > 0) { RestaGuardia--; }
	if(RestaMafioso > 0) { RestaMafioso--; }
	if(TiempoEspera > 0) { TiempoEspera--; }
	for(new i=0;i<MAX_PLAYERS;i++)
	{
	    if(TiempoSexoOfrecido[i] > 0) { TiempoSexoOfrecido[i]--;	 }
	    if(TimeChange[i] > 0) { TimeChange[i]--;	 }
	    if(TiempoAceptar[i] > 0) { TiempoAceptar[i]--;	 }
	    if(TiempoBolso[i] > 0) { TiempoBolso[i]--;	 }
	    if(HornoUsarP[i] > 0) { HornoUsarP[i]--;	 }
	    if(TiempoMotor[i] > 0) { TiempoMotor[i]--;	 }
		if(TiempoRef[i] > 0) { TiempoRef[i]--;	 }
		if(TiempoGPS[i] > 0) { TiempoGPS[i]--;	 }
		if(TiempoEntrada[i] > 0) { TiempoEntrada[i]--;	 }
		if(TiempoExpulsar[i] > 0) { TiempoExpulsar[i]--;	 }
		if(TiempoIntentar[i] > 0) { TiempoIntentar[i]--;	 }
		if(TiempoComputadora[i] > 0) { TiempoComputadora[i]--;	 }
		if(TiempoCLUB[i] > 0) { TiempoCLUB[i]--;	 }
		if(TiempoDuda[i] > 0) { TiempoDuda[i]--; }
		if(TiempoDarDinero[i] > 0) { TiempoDarDinero[i]--; }
		if(TiempoCrack[i] > 0) { TiempoCrack[i]--;}
		if(TiempoCaramelos[i] > 0) { TiempoCaramelos[i]--;}
		if(TiempoLlenar[i] > 0) { TiempoLlenar[i]--;	 }
		if(TiempoReparar[i] > 0) { TiempoReparar[i]--;}
		if(TiempoMarihuana[i] > 0) { TiempoMarihuana[i]--;}
		if(PruebaOnline[i] == true) { TiempoAcademia[i]++;}
		if(TiempoVenta[i] > 0) { TiempoVenta[i]--; }
		if(TiempoCreacion[i] > 0) { TiempoCreacion[i]--; }
		if(TiempoMedicamentos[i] > 0) { TiempoMedicamentos[i]--; }
		if(PlayerInfo[i][pTiempoJailS] > 0)
		{
		    if(!IsPlayerPaused(i))
		    {
		    	PlayerInfo[i][pTiempoJailS]--;
			}
		}
		if(EnSalonEvento(i) && Alquilado == true && Boleto[i] == false)
		{
	    	if(strcmp(Alquilador,PlayerName(i),true) == 1)
			{
	    		SendClientMessage(i,-1,"Los guardias del salón te expulsaron por no haber pagado la entrada.");
	    		SetPlayerPos(i,1423.4301,-1180.1801,25.9922);
	    		SetPlayerVirtualWorld(i,0);
	    		SetPlayerInterior(i,0);
	  		 }
		}
		if(PickupRopa[i] > 0)
	    {
	        PickupRopa[i]--;
	    }
		if(!IsPlayerPaused(i))
	    {
	    	if(!EstaHospital(i))
	    	{
	    		PlayerInfo[i][TiempoPD] ++;
	    	}
	    }
		if(EnSalonEvento(i) && Escuchando[i] == false && Alquilado == true && PlayerInfo[i][pSonidos] == 0)
		{
	    	Escuchando[i] = true;
	    	PlayAudioStreamForPlayer(i,"http://"EMISORA_URL"?sid=51");

		}
		else if(!EnSalonEvento(i) && Escuchando[i] == true)
		{
	    	Escuchando[i] = false;
	    	StopAudioStreamForPlayer(i);
		}
	}
	if(TiempoAvion > 0)
	{
		TiempoAvion --;
	}
	new hora,minuto,segundos,bool:habilitar = false;
	getdate(hora,minuto,segundos);
	if(hora == 5 && minuto == 0 && HabilitarCarreras == 0) habilitar = true;
	else if(hora == 11 && minuto == 0 && HabilitarCarreras == 0) habilitar = true;
	else if(hora == 17 && minuto == 0 && HabilitarCarreras == 0) habilitar = true;
	else if(hora == 23 && minuto == 0 && HabilitarCarreras == 0) habilitar = true;
	if(habilitar == true)
	{
		HabilitarCarreras = 1;
		Update3DTextLabelText(TextoCarrera,COLOR_WHITE,"{00CC00}Boleteria abierta\n{FFFFFF}Costo de la entrada {00CC00}$600\n{DBED15}/comprar entrada");
		ConteoCarrera = 10;
		SetTimer("EmpezarCarrera",60*1000,0);
		new string[250];
		format(string,sizeof(string),"En {00CC00}%d minutos{FFFFFF} comienza la carrera, ya se inscribieron {DBED15}%d{FFFFFF} jugadores",ConteoCarrera,ParticipantesCarrera);
		for(new i, j = GetPlayerPoolSize(); i <= j; i++) if(PlayerToPoint(i,250,-1408.8688,-304.5082,1056.4351) && GetPlayerInterior(i) == 7) SendClientMessage(i,-1,string);
	}
}

public Armas()
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
	    // Animacion Herido
	    if(PlayerInfo[i][Agonizando] == 1 && PacienteAmbu[i] == 0)
		{
			ApplyAnimation(i, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0, 1);
			ApplyAnimation(i, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0, 1);
			SetPlayerArmedWeapon(i, 0);
		}
		// Slot 9   -   (Granada | Dildo Morado, Dildo Blanco, Vibrado, Vibrador plateado, Flores)
		if(PlayerInfo[i][pWP8] == 16)
		{
			if(GetPlayerWeapon(i) != 16 && PlayerInfo[i][pWP8] == 16) { SetPlayerAttachedObject(i,9,342,8, 0.018998,-0.017999,0.138999,167.299987,-81.500083,-76.099929, 1.000000, 1.000000, 1.000000); }
			if(GetPlayerWeapon(i) == 16 && PlayerInfo[i][pWP8] == 16) { RemovePlayerAttachedObject(i,9); }
		}
		else
		{
			if(GetPlayerWeapon(i) != 10 && PlayerInfo[i][pWP10] == 10) { SetPlayerAttachedObject(i,9,321,8, -0.064001,-0.009999,0.065000,-100.199996,144.700042,156.200149, 1.000000, 1.000000, 1.000000); }
			if(GetPlayerWeapon(i) == 10 && PlayerInfo[i][pWP10] == 10) { RemovePlayerAttachedObject(i,9); }
			if(GetPlayerWeapon(i) != 11 && PlayerInfo[i][pWP10] == 11) { SetPlayerAttachedObject(i,9,322,8, -0.064001,-0.009999,0.065000,-100.199996,144.700042,156.200149, 1.000000, 1.000000, 1.000000); }
			if(GetPlayerWeapon(i) == 11 && PlayerInfo[i][pWP10] == 11) { RemovePlayerAttachedObject(i,9); }
			if(GetPlayerWeapon(i) != 12 && PlayerInfo[i][pWP10] == 12) { SetPlayerAttachedObject(i,9,323,8, -0.064001,-0.009999,0.065000,-100.199996,144.700042,156.200149, 1.000000, 1.000000, 1.000000); }
			if(GetPlayerWeapon(i) == 12 && PlayerInfo[i][pWP10] == 12) { RemovePlayerAttachedObject(i,9); }
			if(GetPlayerWeapon(i) != 13 && PlayerInfo[i][pWP10] == 13) { SetPlayerAttachedObject(i,9,324,8, -0.064001,-0.009999,0.065000,-100.199996,144.700042,156.200149, 1.000000, 1.000000, 1.000000); }
			if(GetPlayerWeapon(i) == 13 && PlayerInfo[i][pWP10] == 13) { RemovePlayerAttachedObject(i,9); }
			if(GetPlayerWeapon(i) != 14 && PlayerInfo[i][pWP10] == 14) { SetPlayerAttachedObject(i,9,325,8, -0.064001,-0.009999,0.065000,-100.199996,144.700042,156.200149, 1.000000, 1.000000, 1.000000); }
			if(GetPlayerWeapon(i) == 14 && PlayerInfo[i][pWP10] == 14) { RemovePlayerAttachedObject(i,9); }
		}
		// Slot 8	-	(Lanzallamas, Minigun, RPG, Bazuca | AK-47 - M4)
		if(PlayerInfo[i][pWP7] == 36 || PlayerInfo[i][pWP7] == 35 || PlayerInfo[i][pWP7] == 38)
		{
			if(GetPlayerWeapon(i) != 35 && PlayerInfo[i][pWP7] == 35) {SetPlayerAttachedObject(i,8,359,1,  0.165996, -0.121996, -0.053998, 172.799972, 156.600006, 3.699996, 1.000000, 1.000000, 1.000000);}
			if(GetPlayerWeapon(i) == 35 && PlayerInfo[i][pWP7] == 35) { RemovePlayerAttachedObject(i,8); }
			if(GetPlayerWeapon(i) != 36 && PlayerInfo[i][pWP7] == 36) {SetPlayerAttachedObject(i,8,360,1,  0.165996, -0.121996, -0.053998, 172.799972, 156.600006, 3.699996, 1.000000, 1.000000, 1.000000);}
			if(GetPlayerWeapon(i) == 36 && PlayerInfo[i][pWP7] == 36) { RemovePlayerAttachedObject(i,8); }
			if(GetPlayerWeapon(i) != 37 && PlayerInfo[i][pWP7] == 37) {SetPlayerAttachedObject(i,8,361,1,  0.086000, -0.094000, -0.166000, 165.5999908, 145.899963, 15.999979, 1.000000, 1.000000, 1.000000);}
			if(GetPlayerWeapon(i) == 37 && PlayerInfo[i][pWP7] == 37) { RemovePlayerAttachedObject(i,8); }
			if(GetPlayerWeapon(i) != 38 && PlayerInfo[i][pWP7] == 38) {SetPlayerAttachedObject(i,8,362,1,  0.086000, -0.094000, -0.166000, 165.5999908, 145.899963, 15.999979, 1.000000, 1.000000, 1.000000);}
			if(GetPlayerWeapon(i) == 38 && PlayerInfo[i][pWP7] == 38) { RemovePlayerAttachedObject(i,8); }
		}
		else
		{
			if(GetPlayerWeapon(i) != 30 && PlayerInfo[i][pWP5] == 30) {SetPlayerAttachedObject(i,8,355,1,  0.192999,-0.075999,-0.105000,-4.499993,25.899999,-171.699859, 1.000000, 1.000000, 1.000000);}
			if(GetPlayerWeapon(i) == 30 && PlayerInfo[i][pWP5] == 30) { RemovePlayerAttachedObject(i,8); }
			if(GetPlayerWeapon(i) != 31 && PlayerInfo[i][pWP5] == 31) {SetPlayerAttachedObject(i,8,356,1,  0.192999,-0.075999,-0.105000,-4.499993,25.899999,-171.699859, 1.000000, 1.000000, 1.000000); }
			if(GetPlayerWeapon(i) == 31 && PlayerInfo[i][pWP5] == 31) { RemovePlayerAttachedObject(i,8); }
		}
		// Slot 7	-	(Escopeta - Escopetas recotardas, Escopeta de combate |	Rifle, Sniper)
		if(PlayerInfo[i][pWP3] == 25 || PlayerInfo[i][pWP3] == 26 || PlayerInfo[i][pWP3] == 27)
		{
			if(GetPlayerWeapon(i) != 25 && PlayerInfo[i][pWP3] == 25) {SetPlayerAttachedObject(i,7,349,1,  0.195999,-0.102999,0.088999,172.099899,-137.700027,0.800023, 1.000000, 1.000000, 1.000000);}
			if(GetPlayerWeapon(i) == 25 && PlayerInfo[i][pWP3] == 25) { RemovePlayerAttachedObject(i,7); }
			if(GetPlayerWeapon(i) != 26 && PlayerInfo[i][pWP3] == 26) {SetPlayerAttachedObject(i, 7, 350, 8, -0.073000, -0.040999, 0.111999, -82.999992, 0.000000, 0.000000, 0.899999, 0.936000, 0.909000);}
			if(GetPlayerWeapon(i) == 26 && PlayerInfo[i][pWP3] == 26) { RemovePlayerAttachedObject(i,7); }
			if(GetPlayerWeapon(i) != 27 && PlayerInfo[i][pWP3] == 27) {SetPlayerAttachedObject(i,7,351,1,  0.195999,-0.102999,0.088999,172.099899,-137.700027,0.800023, 1.000000, 1.000000, 1.000000);}
			if(GetPlayerWeapon(i) == 27 && PlayerInfo[i][pWP3] == 27) { RemovePlayerAttachedObject(i,7); }
		}
		else
		{
		    if(GetPlayerWeapon(i) != 33 && PlayerInfo[i][pWP6] == 33) {SetPlayerAttachedObject(i,7,357,1,  0.195999,-0.102999,0.088999,172.099899,-137.700027,0.800023, 1.000000, 1.000000, 1.000000);}
			if(GetPlayerWeapon(i) == 33 && PlayerInfo[i][pWP6] == 33) { RemovePlayerAttachedObject(i,7); }
			if(GetPlayerWeapon(i) != 34 && PlayerInfo[i][pWP6] == 34) {SetPlayerAttachedObject(i,7,358,1,  0.190999, -0.080999, -0.155999, -160.200073, 154.300079, 0.000000, 1.000000, 1.000000, 1.000000);}
			if(GetPlayerWeapon(i) == 34 && PlayerInfo[i][pWP6] == 34) { RemovePlayerAttachedObject(i,7); }
		}
        // Slot 6   -   (Palo de policia, Cuchillo, Palo de Golf, Bate, Pala, Palo de billar, Katana)
		if(GetPlayerWeapon(i) != 3  && PlayerInfo[i][pWP1] == 3)  {SetPlayerAttachedObject(i,6,334,7,  -0.032002,0.009000,-0.096000,-69.900108,145.399993,166.899917, 1.000000, 1.000000, 1.000000);}
		if(GetPlayerWeapon(i) == 3  && PlayerInfo[i][pWP1] == 3)  { RemovePlayerAttachedObject(i,6); }
		if(GetPlayerWeapon(i) != 4  && PlayerInfo[i][pWP1] == 4)  {SetPlayerAttachedObject(i,6,335,7,  -0.032002,0.009000,-0.096000,-69.900108,145.399993,166.899917, 1.000000, 1.000000, 1.000000);}
		if(GetPlayerWeapon(i) == 4  && PlayerInfo[i][pWP1] == 4)  { RemovePlayerAttachedObject(i,6); }
		if(GetPlayerWeapon(i) != 2  && PlayerInfo[i][pWP1] == 2)  {SetPlayerAttachedObject(i,6,333,1,  0.067997,-0.188999,0.063998,-4.000112,139.299972,115.199958, 1.000000, 1.000000, 1.000000);}
		if(GetPlayerWeapon(i) == 2  && PlayerInfo[i][pWP1] == 2)  { RemovePlayerAttachedObject(i,6); }
		if(GetPlayerWeapon(i) != 5  && PlayerInfo[i][pWP1] == 5)  {SetPlayerAttachedObject(i,6,336,1,  0.067997,-0.188999,0.063998,-4.000112,139.299972,115.199958, 1.000000, 1.000000, 1.000000);}
		if(GetPlayerWeapon(i) == 5  && PlayerInfo[i][pWP1] == 5)  { RemovePlayerAttachedObject(i,6); }
		if(GetPlayerWeapon(i) != 6  && PlayerInfo[i][pWP1] == 6)  {SetPlayerAttachedObject(i,6,337,1,  0.067997,-0.188999,0.063998,-4.000112,139.299972,115.199958, 1.000000, 1.000000, 1.000000);}
		if(GetPlayerWeapon(i) == 6  && PlayerInfo[i][pWP1] == 6)  { RemovePlayerAttachedObject(i,6); }
		if(GetPlayerWeapon(i) != 7  && PlayerInfo[i][pWP1] == 7)  {SetPlayerAttachedObject(i,6,338,1,  0.067997,-0.188999,0.063998,-4.000112,139.299972,115.199958, 1.000000, 1.000000, 1.000000);}
		if(GetPlayerWeapon(i) == 7  && PlayerInfo[i][pWP1] == 7)  { RemovePlayerAttachedObject(i,6); }
		if(GetPlayerWeapon(i) != 8  && PlayerInfo[i][pWP1] == 8)  {SetPlayerAttachedObject(i,6,339,1,  0.067997,-0.188999,0.063998,-4.000112,139.299972,115.199958, 1.000000, 1.000000, 1.000000);}
		if(GetPlayerWeapon(i) == 8  && PlayerInfo[i][pWP1] == 8)  { RemovePlayerAttachedObject(i,6); }
	    // Slot 5   -   (MP5, Uzi, Tec-9)
		if(GetPlayerWeapon(i) != 29 && PlayerInfo[i][pWP4] == 29) { SetPlayerAttachedObject(i,5,353,7, 0.018998,-0.060998,-0.067000,-74.499992,11.800035,9.500157, 1.000000, 1.000000, 1.000000); }
		if(GetPlayerWeapon(i) == 29 && PlayerInfo[i][pWP4] == 29) { RemovePlayerAttachedObject(i,5); }
		if(GetPlayerWeapon(i) != 28 && PlayerInfo[i][pWP4] == 28) { SetPlayerAttachedObject(i,5,352,7, 0.018998,-0.060998,-0.067000,-74.499992,11.800035,9.500157, 1.000000, 1.000000, 1.000000); }
		if(GetPlayerWeapon(i) == 28 && PlayerInfo[i][pWP4] == 28) { RemovePlayerAttachedObject(i,5); }
		if(GetPlayerWeapon(i) != 32 && PlayerInfo[i][pWP4] == 32) { SetPlayerAttachedObject(i,5,372,7, 0.018998,-0.060998,-0.067000,-74.499992,11.800035,9.500157, 1.000000, 1.000000, 1.000000); }
		if(GetPlayerWeapon(i) == 32 && PlayerInfo[i][pWP4] == 32) { RemovePlayerAttachedObject(i,5); }


		// Quitar objeto
		if(PlayerInfo[i][pWP4]  != 29 && PlayerInfo[i][pWP4]  != 28 && PlayerInfo[i][pWP4]  != 32)	{ RemovePlayerAttachedObject(i,5); }
		if(PlayerInfo[i][pWP1]  != 3  && PlayerInfo[i][pWP1]  != 4  && PlayerInfo[i][pWP1]  != 2  && PlayerInfo[i][pWP1]  != 5  && PlayerInfo[i][pWP1]  != 6  && PlayerInfo[i][pWP1]  != 7  && PlayerInfo[i][pWP1]  != 8)	{ RemovePlayerAttachedObject(i,6); }
		if(PlayerInfo[i][pWP8] == 16)
		{
			if(PlayerInfo[i][pWP8]  != 16)	{ RemovePlayerAttachedObject(i,9); }
		}
		else
		{
			if(PlayerInfo[i][pWP10] != 10 && PlayerInfo[i][pWP10] != 11 && PlayerInfo[i][pWP10] != 12 && PlayerInfo[i][pWP10] != 13 && PlayerInfo[i][pWP10] != 14)	{ RemovePlayerAttachedObject(i,9); }
        }
		if(PlayerInfo[i][pWP7] == 35 || PlayerInfo[i][pWP7] == 36 || PlayerInfo[i][pWP7] == 37 || PlayerInfo[i][pWP7] == 38)
		{
			if(PlayerInfo[i][pWP7]  != 35 && PlayerInfo[i][pWP7]  != 36 && PlayerInfo[i][pWP7]  != 37 && PlayerInfo[i][pWP7]  != 38)	{ RemovePlayerAttachedObject(i,8); }
		}
		else
		{
			if(PlayerInfo[i][pWP5]  != 30 && PlayerInfo[i][pWP5]  != 31)	{ RemovePlayerAttachedObject(i,8); }
		}
        if(PlayerInfo[i][pWP3] == 25 || PlayerInfo[i][pWP3] == 26 || PlayerInfo[i][pWP3] == 27)
		{
			if(PlayerInfo[i][pWP3]  != 25 && PlayerInfo[i][pWP3]  != 27 && PlayerInfo[i][pWP3]  != 26)	{ RemovePlayerAttachedObject(i,7); }
		}
		else
		{
			if(PlayerInfo[i][pWP6]  != 33 && PlayerInfo[i][pWP6]  != 34)	{ RemovePlayerAttachedObject(i,7); }
		}
	}
}

public resetearcoches()
{
	for(new i=0; i <= MAX_VEHICLES;i++)
	{
	    for(new u=0; u <= MAX_PLAYERS;u++)
		{
			if(i == autos[u]) return 1;
			if(i == autos2[u]) return 1;
			if(i == autos3[u]) return 1;
			if(i == autos4[u]) return 1;
			if(IsPlayerInVehicle(u,i)) return 1;
			for(new f = 0; f < MAX_FABRICAS; f++)
			{
			    if(i == Fabricas[f][Auto1F]) return 1;
				if(i == Fabricas[f][Auto2F]) return 1;
			}
		}
		SetVehicleToRespawn(i);
		return 1;
	}
	return 1;
}

public LlamadaTransportista()
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(PlayerInfo[i][pTrabajo] == T_Transportista || PlayerInfo[i][pTrabajo2] == T_Transportista)
		{
			if(TelefonoEstado[i] == 0 && Mobile2[i] == 0 && tviaje[i] == 0 && EnLlamada[i] == 0 && PlayerInfo[i][pNumero] != 0)
			{
				new string[250];
				format(string, sizeof(string), "El teléfono de %s está sonando.", PlayerName(i));
				ProxDetector(20.0, i, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				SendClientMessage(i, -1, "Te están llamando por teléfono desde el número: {DBED16}4825{FFFFFF}, escribe {DBED16}/atender{FFFFFF} o {DBED16}/colgar{FFFFFF}.");
				PlayerInfo[i][MobileSub] = 2540;
				Mobile2[i] = 2540;
				SetTimerEx("ColgarLlamada",30000,false,"d",i);
				llamada(i);
			}
		}
	}
	return 1;
}

public AutoCheats()
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		new autoid = GetPlayerVehicleID(i);
		if(IsPlayerInAnyVehicle(i))
		{
			if(autoid != EnAuto[i] && PlayerInfo[i][pAdmin] < ADMIN_LEVEL_GLOBAL)
			{
				if(AvisosAuto[i] < 5)
				{
					AvisosAuto[i]++;
				}
				else if(AvisosAuto[i] >= 5)
				{
					ResetPlayerWeapons(i);
					DarArmas(i);
				}
			}
		}
	    new vehicleid = GetPlayerVehicleID(i),veces;
	    new modelo = GetVehicleModel(vehicleid);
	    new velocidadmax = VelocidadMaxAuto(modelo);
	    if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
	    {
            if(GetVehicleSpeed(vehicleid) > velocidadmax+20)
            {
				if(GetVehicleSpeed(vehicleid) > velocidadmax+30 ) veces = 3;
             	else if(GetVehicleSpeed(vehicleid) > velocidadmax+20 && GetVehicleSpeed(vehicleid) < velocidadmax+30) veces = 2;
	            new string[128];
                format(string,sizeof(string),"El jugador {FF3300}%s(ID:%d){FFFFFF} superó %d veces la velocidad (%d/%d) Vehículo: {FF3300}%d",PlayerName(i),i,veces,GetVehicleSpeed(vehicleid),velocidadmax,vehicleid);
                MensajeAdmin(0xFFFFFFFF, string, ADMIN_LEVEL_BANEOS);
            }
        }
    }
    return 1;
}

public RecibirAction(resultid, extraid, ConnectionHandle)
{
	new Rows, Field;
	if(resultid != 0)
	{
		cache_get_data(Rows, Field);
	}
	switch(resultid)
	{
		case 1:
		{
			if(Rows >= 1)
			{
				if(Rows > 3) Rows = 3;
				new type, queryString[180];
				for(new i = 0; i < Rows ; i++)
				{
					ActionQueue[i][qID] = cache_get_field_content_int(0, "ID");
					ActionQueue[i][qfaccj] = cache_get_field_content_int(0, "faccj");
					cache_get_field_content(0, "user_ses", ActionQueue[i][quser_ses], Conecction, 23);
					cache_get_field_content(0, "jugname", ActionQueue[i][qjugname], Conecction, 23);
					cache_get_field_content(0, "queue_params", ActionQueue[i][qparams], Conecction, 23);
					ActionQueue[i][qstatus] = cache_get_field_content_int(0, "status");
					type = cache_get_field_content_int(0, "type");
					ActionQueue[i][NRango] = cache_get_field_content_int(0, "NRango");
					if(ActionQueue[i][qstatus] == 0)
					{
						new qString[128];
						switch(type)
						{
							case 1: // Aceptar invitacion
							{
								ActionQueue[i][qstatus] = 1;
								format(qString, 128, "jugadorinvitacion %d %s", ActionQueue[i][qfaccj], ActionQueue[i][quser_ses]);
								CustomProc(qString);
							}
							case 2: // Cambiar de rango
							{
								if(!strcmp(ActionQueue[i][qparams], "nada", true))
								{
									ActionQueue[i][qstatus] = 2;
								}
								new gRank;
								sscanf(ActionQueue[i][qparams], "p<|>d", gRank);
								format(qString, 128, "gMemberRank %d %d %s %s", ActionQueue[i][qfaccj], gRank, ActionQueue[i][quser_ses], ActionQueue[i][qjugname]);
								CustomProc(qString);
							}
							case 3: // Expulsar
							{
								ActionQueue[i][qstatus] = 1;
								format(qString, 128, "expulsarmiembro %d %s %s", ActionQueue[i][qfaccj], ActionQueue[i][quser_ses], ActionQueue[i][qjugname]);
								CustomProc(qString);
							}
							case 4: // Abandonar banda
							{
								ActionQueue[i][qstatus] = 1;
								format(qString, 128, "abandonarbanda %d %s", ActionQueue[i][qfaccj], ActionQueue[i][quser_ses]);
								CustomProc(qString);
							}
							case 5: // Cargar banda
							{
								ActionQueue[i][qstatus] = 1;
								format(qString, 128, "recargarbandas");
								CustomProc(qString);
							}
							case 6: // Cambiar nombre rango
							{
								ActionQueue[i][qstatus] = 1;
								format(qString, 128, "gRankName %s %d %d %s",ActionQueue[i][quser_ses], ActionQueue[i][qfaccj], ActionQueue[i][NRango],ActionQueue[i][qparams]);
								CustomProc(qString);
							}
							case 7: //Agregar Rango Web
							{
								ActionQueue[i][qstatus] = 1;
								format(qString, 128, "agregarrango %s %d %d %s",ActionQueue[i][quser_ses], ActionQueue[i][qfaccj], ActionQueue[i][NRango],ActionQueue[i][qparams]);
								CustomProc(qString);
							}
							case 8: // ban jugador
						    {
						    	ActionQueue[i][qstatus] = 1;
						    	format(qString, 128, "banpanel %s %s %s",ActionQueue[i][quser_ses],ActionQueue[i][qjugname],ActionQueue[i][qparams]);
			        			CustomProc(qString);
						    }
						    case 9: //mutear panel 1
						    {
						    	ActionQueue[i][qstatus] = 1;
						    	format(qString, 128, "mutepanelx %s %s %s %d",ActionQueue[i][quser_ses],ActionQueue[i][qjugname],ActionQueue[i][qparams],ActionQueue[i][NRango]);
			        			CustomProc(qString);
						    }
						    case 10: //mutear panel 2
						    {
						    	ActionQueue[i][qstatus] = 1;
						    	format(qString, 128, "mutepanely %s %s %s %d",ActionQueue[i][quser_ses],ActionQueue[i][qjugname],ActionQueue[i][qparams],ActionQueue[i][NRango]);
			        			CustomProc(qString);
						    }
						    case 11: //mutear panel 3
						    {
						    	ActionQueue[i][qstatus] = 1;
						    	format(qString, 128, "mutepanelz %s %s %s %d",ActionQueue[i][quser_ses],ActionQueue[i][qjugname],ActionQueue[i][qparams],ActionQueue[i][NRango]);
			        			CustomProc(qString);
						    }
                        	case 12: // Cambiar nombre rango
							{
								ActionQueue[i][qstatus] = 1;
								format(qString, 128, "agregarrango %s %d %d %s",ActionQueue[i][quser_ses], ActionQueue[i][qfaccj], ActionQueue[i][NRango],ActionQueue[i][qparams]);
								CustomProc(qString);
							}
							case 13: // Dar moneda desde el panel
							{
								ActionQueue[i][qstatus] = 1;
								format(qString, 128, "darmoneda %s %d %d %s",ActionQueue[i][quser_ses], ActionQueue[i][qfaccj], ActionQueue[i][NRango],ActionQueue[i][qparams]);
								CustomProc(qString);
							}

						}
						mysql_format(Conecction2, queryString, 128, "DELETE FROM `action_queue` WHERE `ID` = '%d'", ActionQueue[i][qID]);
						mysql_tquery(Conecction2, queryString, "");
					}
				}
			}

		}

	}
	return 1;
}

public Action_DBQ()
{
	new Query[680];
	format(Query, sizeof(Query), "SELECT * FROM `action_queue` WHERE `status` = '0' LIMIT 3;");
	mysql_function_query(Conecction2, Query, true, "RecibirAction", "i", 1);
	return 1;
}

public LoadPerfiles(playerid)
{
    new Query[680];
	format(Query, sizeof(Query), "SELECT * FROM `perfiles` WHERE `Nombre` = '%s'",PlayerInfo[playerid][NombreTemporal]);
	mysql_tquery(Conecction, Query, "CargarPerfiles", "ii",playerid);
	return 1;
}
public AutoCheats2()
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
	    if(IsPlayerConnected(i))
		{
			if(GetPlayerDrunkLevel(i) > 10000)
			{
				//-----------------SED-------------------------------------------------
				new restased = 100-PlayerInfo[i][pSed];
				if(restased >= 15)
				{
					PlayerInfo[i][pSed] += 15;
				}
				else if(restased < 15)
				{
					PlayerInfo[i][pSed] += restased;
				}
				SetPlayerProgressBarValue(i,Progressbar[i][Sed], PlayerInfo[i][pSed]);
				//-----------------HAMBRE----------------------------------------------
				new restahambre = 100-PlayerInfo[i][pHambre];
				if(restahambre >= 10)
				{
					PlayerInfo[i][pHambre] += 10;
				}
				else if(restahambre < 10)
				{
					PlayerInfo[i][pHambre] += restahambre;
				}
				SetPlayerProgressBarValue(i,Progressbar[i][Hambre], PlayerInfo[i][pHambre]);
				//ANIM
				ApplyAnimation(i, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
				AccionesRol(i,"comienza a sentirse mal.", 20);
				//---------------------------------------------------------------------
			}
		}
	    if(AvisosAuto[i] > 0)
		{
			AvisosAuto[i]--;
		}
	}
	return 1;
}

public Gasolinass()
{
	for(new i=0;i<MAX_VEHICLES;i++)
	{
		if(MotorAuto[i] == 1)
		{
			if(VehicleFuel[i] >= 1)
			{
				if(!BICI(i))
				{
				    VehicleFuel[i]--;
				    new modelo = GetVehicleModel(i);
					new vehiclefuel = CombustibleCoche(modelo);
					new string[128];
					Loop(u,MAX_PLAYERS)
					{
					    if(GetPlayerState(u) == PLAYER_STATE_DRIVER)
					    {
							if(IsPlayerInVehicle(u, i))
							{
							    format(string, 128, "%d/%d", VehicleFuel[i], vehiclefuel);
		      					PlayerTextDrawSetString(u,ContadorVelocimetro[u][1], VehicleFuel[i]);
								SetPlayerProgressBarValue(u,Progressbar[u][Combustible],VehicleFuel[i]);
								UpdatePlayerProgressBar(u,Progressbar[u][Combustible]);
								SinGaso[u] = 0;
							}
						}
					}
     			}
    			else if(VehicleFuel[i] < 1)
				{
					GetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(i, 0, lights, alarm, doors, bonnet, boot, objective);
					SinGaso[i] = 1;
					MotorAuto[i] = 0;
				}
			}
		}
 	}
	return 1;
}

public Codigos()
{
	foreach(Player, u)
	{
	    if(Grupo[u] == 1 && EnAsalto[u] == 1) SetPlayerColor(u,0xB81E0D00);
		if(Grupo[u] == 2 && EnAsalto[u] == 1 && GetVehicleModel(GetPlayerVehicleID(u)) != 428) SetPlayerColor(u,0x1E16F700);
		if(Grupo[u] == 2 && EnAsalto[u] == 1 && GetVehicleModel(GetPlayerVehicleID(u)) == 428 && MarcarCoche == 1)
		{
			foreach(Player, e)
			{
				if(Grupo[e] == 1 && EnAsalto[e] == 1) SetPlayerMarkerForPlayer(e, u, 0xEDE624FF);
				if(Grupo[e] == 3 && EnAsalto[e] == 1 && MarcarCoche2 == 1) SetPlayerMarkerForPlayer(e, u, 0xEDE624FF);
			}
		}
		if(Grupo[u] == 3 && EnAsalto[u] == 1) SetPlayerColor(u,0x1EB80D00);
		if(VariableCaido[u] != 1)
		{
			if(PlayerInfo[u][pCargos] == 0)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(PlayerInfo[i][pDuty] == 1) SetPlayerMarkerForPlayer(i, u, c0_color);
				}
			}
			else if(PlayerInfo[u][pCargos] > 0 && Esposando[u] == 2 || GetPlayerState(u) == PLAYER_STATE_PASSENGER && Esposando[u] == 2 || GetPlayerState(u) == PLAYER_STATE_PASSENGER && EnPatrulla[u] == 1)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(PlayerInfo[i][pDuty] == 1) SetPlayerMarkerForPlayer(i, u, c7_color);
				}
			}
			else if(PlayerInfo[u][pCargos] == 1)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(PlayerInfo[i][pDuty] == 1) SetPlayerMarkerForPlayer(i, u, c1_color);
				}
			}
			else if(PlayerInfo[u][pCargos] == 2)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(PlayerInfo[i][pDuty] == 1) SetPlayerMarkerForPlayer(i, u, c2_color);
				}
			}
			else if(PlayerInfo[u][pCargos] == 3)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(PlayerInfo[i][pDuty] == 1) SetPlayerMarkerForPlayer(i, u, c3_color);
				}
			}
			else if(PlayerInfo[u][pCargos] == 4)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(PlayerInfo[i][pDuty] == 1) SetPlayerMarkerForPlayer(i, u, c4_color);
				}
			}
			else if(PlayerInfo[u][pCargos] == 5)
			{

				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(PlayerInfo[i][pDuty] == 1) SetPlayerMarkerForPlayer(i, u, c5_color);
				}
			}
			else if(PlayerInfo[u][pCargos] == 6)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(PlayerInfo[i][pDuty] == 1) SetPlayerMarkerForPlayer(i, u, c6_color);
				}
			}
		}
		else if(PlayerInfo[u][pCargos] > 0 && VariableCaido[u] == 1)
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(PlayerInfo[i][pDuty] == 1) SetPlayerMarkerForPlayer(i, u, c7_color);
			}
		}
		// Trabajo Medico
		if(MarcadoMedicos[u] == 1)
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(RopaMedi[i] == 1 && PlayerInfo[i][pTrabajo] == T_Medico || PlayerInfo[i][pTrabajo2] == T_Medico)
				{
					if(GetPlayerInterior(u) == 0)
	    			{
						GetPlayerPos(u, DeathXH[u],DeathYH[u],DeathZH[u]);
						SetPlayerMarkerForPlayer(i, u, COLOR_VERDE2);
	    			}
    			}
			}
		}
		// Trabajo Taxi
		if(LlamadaTaxi[u] == 1)
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(PlayerInfo[i][pTrabajo] == T_Taxista || PlayerInfo[i][pTrabajo2] == T_Taxista && EnTaxi[i] == 1) SetPlayerMarkerForPlayer(i, u, COLOR_AMARILLO);
			}
		}
		// Trabajo Mecanico
		if(LlamadaMeca[u] == 1)
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(RopaMeca[i] == 1 && PlayerInfo[i][pTrabajo] == T_Mecanico || PlayerInfo[i][pTrabajo2] == T_Mecanico) SetPlayerMarkerForPlayer(i, u, COLOR_AZUL);
			}
		}
		if(PlayerInfo[u][pDuty] == 1) SetPlayerColor(u,COLOR_POLICIA);
	}
	return 1;
}

public AntiMoneyHack(playerid)
{
	if(JugadorLogeado[playerid] == 1 && PrimerSpawn[playerid] == 1)
	{
		if(GetPlayerMoney(playerid) > PlayerInfo[playerid][jDinero])
		{
			if(CuentaDinero[playerid] >= 5)
			{
				ResetPlayerMoney(playerid);
				GivePlayerMoney(playerid, PlayerInfo[playerid][jDinero]);
			}
			else if(CuentaDinero[playerid] < 5) CuentaDinero[playerid]++;
		}
	}
}

public ServerMicrobeat()
{
	new Float:health, carid, arrDamage[4];
	foreach(Player, i)
	{
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
		{
			carid = GetPlayerVehicleID(i);
			iVehicle[i] = GetPlayerVehicleID(i);
			for(new s=0;s<20;s++)
			{
				if(SpikeStrips[s][sX] != 0)
				{
					if(VehicleToPoint( 3.0, carid, SpikeStrips[s][sX], SpikeStrips[s][sY], SpikeStrips[s][sZ]))
					{
						GetVehicleDamageStatus(carid, arrDamage[0], arrDamage[1], arrDamage[2], arrDamage[3]);
						arrDamage[3] = encode_tires(1, 1, 1, 1);
						UpdateVehicleDamageStatus(carid, arrDamage[0], arrDamage[1], arrDamage[2], arrDamage[3]);
					}
				}
			}
			GetVehicleHealth(iVehicle[i], health);
			if(health <= 375.0)
			{
				if(vehaveriado[carid] == 1) return 1;
				SetVehicleHealth(iVehicle[i], 375.0);
    			vehaveriado[carid] = 1;
				GameTextForPlayer(i, "~r~MOTOR AVERIADO", 2500, 3);
				GetVehicleParamsEx(iVehicle[i], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(iVehicle[i], 0, lights, alarm, doors, bonnet, boot, objective);
				averiado[carid] = 1;
				MotorAuto[carid] = 0;
				SendClientMessage(i,-1,"El motor dejó de funcionar, llama a un mecánico. {DBED15}/servicio mecanico");
				if(EnCarreras[i] > 0 && VehiculoCarrera[EnCarreras[i]-1] == iVehicle[i])
				{
					SacarCarrera(i);
					if(ParticipantesCarrera <= 0)
					{
   						ResetearCarrera();
					    HabilitarCarreras = 0;
						Update3DTextLabelText(TextoCarrera,COLOR_WHITE,"{FF3300}Boleteria cerrada\n{DBED16}Horarios de los eventos: {FFFFFF}5hs,11hs,17hs,23hs");
					}
					SendClientMessage(i,-1,"Perdiste la carrera por malograr tu vehículo.");
				}
			}
			if(VehicleFuel[iVehicle[i]] == 0 && !BICI(iVehicle[i]) && MensajeSinGasoEnviado[i] == 0)
			{
				GameTextForPlayer(i, "~r~Sin combustible!", 2500, 3);
				GetVehicleParamsEx(iVehicle[i], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(iVehicle[i], 0, lights, alarm, doors, bonnet, boot, objective);
				MotorAuto[carid] = 0;
				MensajeSinGasoEnviado[i] = 1;
			}
			else if(health > 375.0 && averiado[carid] == 1)
			{
				averiado[carid] = 0;
			}
		}
	}
	return 1;
}

encode_tires(tire1, tire2, tire3, tire4)
{
	return tire1 | (tire2 << 1) | (tire3 << 2) | (tire4 << 3);
}

public TiempoServerDos()
{
	if(PayDayLeft >= 1)
	{
		PayDayLeft -= 1;
		printf("Proximo Payday en %d minutos",PayDayLeft);
	}
	else if(PayDayLeft == 0)
	{
		PayDay();
	}
}

public VehiculosPos()
{
	new Float: fDistance[MAX_VEHICLES];
	for(new i=0;i<MAX_VEHICLES;i++)
	{
		for(new u=0;u<MAX_PLAYERS;u++)
		{
			if(!IsPlayerInVehicle(u,i))
			{
				fDistance[i] = GetVehicleDistanceFromPoint(i, 1.5157,4.6393,3.1172);
				if(fDistance[i] < 10)
				{
					if(OldPosx[i] != 0)
					{
						SetVehiclePos(i, OldPosx[i],OldPosy[i],OldPosz[i]);
					}
					else { Respawnear(i); }
				}
				else { GetVehiclePos(i,OldPosx[i],OldPosy[i],OldPosz[i]);
				}
			}
		}
	}
}

public DudaOn(playerid)
{
	DudaOff[playerid] = 0;
	return 1;
}

public ADOn(playerid)
{
	DudaOff[playerid] = 0;
	return 1;
}

public TiempoArresto(playerid)
{
	new string[258];
	if(Esposando[playerid] == 0) return 1;
	if(GetPlayerInterior(playerid) > 0) SetTimerEx("Encerrando2",500,false,"d",playerid);
	GetPlayerPos(playerid, DeathX[playerid], DeathY[playerid], DeathZ[playerid]);
	VariableCaido[playerid] = 1;
	Esposando[playerid] = 2;
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CUFFED);
	TogglePlayerControllable(playerid,0);
	SetPVarInt(playerid, "IsFrozen", 0);
	format(string, sizeof(string), "{3399FF}[Radio de policía]{FFFFFF} %s reportando: {00CCFF}%s{FFFFFF}[%d] fue capturado, ahora lo llevo a la comisaría.",PlayerName(Oficial[playerid]), PlayerName(playerid), playerid);
	SendRadioMessage(1, -1, string,playerid);
	Oficial[playerid] = INVALID_PLAYER_ID;
	for(new i = 0; i < GetMaxPlayers(); i++)
	if(PlayerInfo[i][pDuty] == 1)
	{
		SetPlayerMarkerForPlayer(i, playerid, c7_color);
	}
	return 1;
}

BICI(carid)
{
	if(GetVehicleModel(carid) == 481 ||GetVehicleModel(carid) == 509 || GetVehicleModel(carid) == 510)
	{

		return 1;
	}
	return 0;
}
MOTO(carid)
{
	if(GetVehicleModel(carid) == 448 ||GetVehicleModel(carid) == 461||GetVehicleModel(carid) == 462||GetVehicleModel(carid) == 463||GetVehicleModel(carid) == 468||
	GetVehicleModel(carid) == 471||GetVehicleModel(carid) == 521||GetVehicleModel(carid) == 522||GetVehicleModel(carid) == 581||GetVehicleModel(carid) == 586)
	{

		return 1;
	}
	return 0;
}

NOBAUL(carid)
{
	if(GetVehicleModel(carid) == 448 || GetVehicleModel(carid) == 461 || GetVehicleModel(carid) == 462 || GetVehicleModel(carid) == 463 || GetVehicleModel(carid) == 468 ||
	   GetVehicleModel(carid) == 471 || GetVehicleModel(carid) == 521 || GetVehicleModel(carid) == 522 || GetVehicleModel(carid) == 581 || GetVehicleModel(carid) == 586 ||
	   GetVehicleModel(carid) == 481 || GetVehicleModel(carid) == 509 || GetVehicleModel(carid) == 510)
	{
		return 1;
	}
	return 0;
}
SAPD(carid)
{
	if(GetVehicleModel(carid) == 427  || GetVehicleModel(carid) == 430 || GetVehicleModel(carid) == 490 || GetVehicleModel(carid) == 528 || GetVehicleModel(carid) == 596 || GetVehicleModel(carid) == 597 || GetVehicleModel(carid) == 598 || GetVehicleModel(carid) == 599 || GetVehicleModel(carid) == 601) return 1;
	return 0;
}
MOTOSAPD(carid)
{
	if(GetVehicleModel(carid) == 523) return 1;
	return 0;
}
HELISAPD(carid)
{
	if(GetVehicleModel(carid) == 497) return 1;
	return 0;
}
AMBU(carid)
{
	if(GetVehicleModel(carid) == 416) return 1;
	return 0;
}
CAMION(carid)
{
	if(GetVehicleModel(carid) == 609 ||GetVehicleModel(carid) == 456) return 1;
	return 0;
}
EsUnTren(carid)
{
	if(GetVehicleModel(carid) == 570 || GetVehicleModel(carid) == 538) return 1;
	return 0;
}
BOTE(carid)
{
	if(GetVehicleModel(carid) == 453) return 1;
	return 0;
}
AVION(carid)
{
	new v = GetVehicleModel(carid);
	if(v == 417 || v == 425 || v == 447 || v == 460 || v == 469 || v == 476 || v == 487 || v == 488 || v == 497 || v == 511 || v == 512 || v == 513 || v == 519 || v == 520 || v == 548 || v == 553 || v == 563 || v == 577 || v == 592 || v == 593) return 1;
	return 0;
}
BAUL2(carid)
{
	if(GetVehicleModel(carid) == 523) return 1;
	return 0;
}
BAUL6(carid)
{
	new v = GetVehicleModel(carid);
	if(v == 400||v == 404||v == 418||v == 422||v == 470||v == 478||v == 489||v == 495||v == 505||v == 543||v == 554||v == 579||v == 605) return 1;
	return 0;
}
BAUL8(carid)
{
	new v = GetVehicleModel(carid);
	if(v == 403||v == 413||v == 414||v == 431||v == 437||v == 440||v == 443||v == 459||v == 482||v == 499||v == 514||v == 515||v == 578) return 1;
	return 0;
}
DFT(carid)
{
	if(GetVehicleModel(carid) == 578) return 1;
	return 0;
}
COSECHA(carid)
{
	if(GetVehicleModel(carid) == 532) return 1;
	return 0;
}
BASU(carid)
{
	if(GetVehicleModel(carid) == 408) return 1;
	return 0;
}
TAXI(carid)
{
	if(GetVehicleModel(carid) == 420 || GetVehicleModel(carid) == 438) return 1;
	return 0;
}

public DesCargarMapeosEx(playerid)
{
	TogglePlayerControllable(playerid, 1);
	SetPVarInt(playerid, "IsFrozen", 1);
	return 1;
}

public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
    if(PlayerInfo[playerid][@Nivel] == 1)
    {
        DisableRemoteVehicleCollisions(playerid,1);
    }
	new Float:VHealth;
    GetVehicleHealth(vehicleid,VHealth);
    if(VHealth > 365)
    {
		vehaveriado[vehicleid] = 0;
	}
	if(VHealth <= 365)
    {
		vehaveriado[vehicleid] = 0;
	}
    return 1;
}
public OnVehicleSpawn(vehicleid)
{
    EmisoraEscuchando[vehicleid] = -1;
	Balde[vehicleid] = 0;

	if(SAPD(vehicleid) || MOTOSAPD(vehicleid) || HELISAPD(vehicleid)) bloqueado[vehicleid] = 0;

	new Float:Quantity;
	GetVehicleHealth(vehicleid,Quantity);
	if(Quantity < MIN_VEHICLE_HEALTH) SetVehicleHealth(vehicleid,MIN_VEHICLE_HEALTH);
	
	foreach(Player, i)
	{
		if(vehicleid == autos[i])
		{
			new pName[32];
			GetPlayerName(i, pName, 32);
			SetVehiclePos(autos[i], PlayerInfo[i][pOX],PlayerInfo[i][pOY],PlayerInfo[i][pOZ]);
			if(PlayerInfo[i][vSeguro] == 1)
			{
				GetVehicleParamsEx(autos[i], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos[i], engine, lights, alarm, 1, bonnet, boot, objective);
				bloqueado[autos[i]] = 1;
			}
			if(PlayerInfo[i][vAAlarma] == 1)
			{
				GetVehicleParamsEx(autos[i], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos[i], engine, lights, 1, doors, bonnet, boot, objective);
				alarma[autos[i]] = 1;
			}
			AddVehicleComponent(autos[i], PlayerInfo[i][vComponentes0]);
			AddVehicleComponent(autos[i], PlayerInfo[i][vComponentes1]);
			AddVehicleComponent(autos[i], PlayerInfo[i][vComponentes2]);
			AddVehicleComponent(autos[i], PlayerInfo[i][vComponentes3]);
			AddVehicleComponent(autos[i], PlayerInfo[i][vComponentes4]);
			AddVehicleComponent(autos[i], PlayerInfo[i][vComponentes5]);
			AddVehicleComponent(autos[i], PlayerInfo[i][vComponentes6]);
			AddVehicleComponent(autos[i], PlayerInfo[i][vComponentes7]);
			AddVehicleComponent(autos[i], PlayerInfo[i][vComponentes8]);
			AddVehicleComponent(autos[i], PlayerInfo[i][vComponentes9]);
			AddVehicleComponent(autos[i], PlayerInfo[i][vComponentes10]);
			AddVehicleComponent(autos[i], PlayerInfo[i][vComponentes11]);
			AddVehicleComponent(autos[i], PlayerInfo[i][vComponentes12]);
			AddVehicleComponent(autos[i], PlayerInfo[i][vComponentes13]);
			LinkVehicleToInterior(autos[i], PlayerInfo[i][vOinterior]);
			SetVehicleVirtualWorld(autos[i], PlayerInfo[i][vOvw]);
			SetVehicleZAngle(autos[i], PlayerInfo[i][pOA]);
			SetVehicleNumberPlate(autos[i], PlayerInfo[i][vpatente]);
			//VehicleFuel[autos[i]] = PlayerInfo[i][vGas];
			if(PlayerInfo[i][vPJ] >= 0)
			{
				ChangeVehiclePaintjob(autos[i], PlayerInfo[i][vPJ]);
			}
			MotorAuto[autos[i]] = 0;
			ChangeVehicleColor(autos[i], PlayerInfo[i][vColor1], PlayerInfo[i][vColor2]);
			Luces[vehicleid] = 0;
			new mensaje[100];
			format(mensaje, sizeof(mensaje), "Tu {DBED16}%s{FFFFFF} fue remolcado al último lugar donde lo estacionaste.", NombreAuto[GetVehicleModel(autos[i])-400]);
			SendClientMessage(i,-1, mensaje);
			return 1;
		}
		else if(vehicleid == autos2[i])
		{
			new pName[32];
			GetPlayerName(i, pName, 32);
			SetVehiclePos(autos2[i], PlayerInfo[i][pOX2],PlayerInfo[i][pOY2],PlayerInfo[i][pOZ2]);
			if(PlayerInfo[i][vSeguro2] == 1)
			{
				GetVehicleParamsEx(autos2[i], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos2[i], engine, lights, alarm, 1, bonnet, boot, objective);
				bloqueado[autos2[i]] = 1;
			}
			if(PlayerInfo[i][vAAlarma2] == 1)
			{
				GetVehicleParamsEx(autos2[i], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos2[i], engine, lights, 1, doors, bonnet, boot, objective);
				alarma[autos2[i]] = 1;
			}
			AddVehicleComponent(autos2[i], PlayerInfo[i][v2Componentes0]);
			AddVehicleComponent(autos2[i], PlayerInfo[i][v2Componentes1]);
			AddVehicleComponent(autos2[i], PlayerInfo[i][v2Componentes2]);
			AddVehicleComponent(autos2[i], PlayerInfo[i][v2Componentes3]);
			AddVehicleComponent(autos2[i], PlayerInfo[i][v2Componentes4]);
			AddVehicleComponent(autos2[i], PlayerInfo[i][v2Componentes5]);
			AddVehicleComponent(autos2[i], PlayerInfo[i][v2Componentes6]);
			AddVehicleComponent(autos2[i], PlayerInfo[i][v2Componentes7]);
			AddVehicleComponent(autos2[i], PlayerInfo[i][v2Componentes8]);
			AddVehicleComponent(autos2[i], PlayerInfo[i][v2Componentes9]);
			AddVehicleComponent(autos2[i], PlayerInfo[i][v2Componentes10]);
			AddVehicleComponent(autos2[i], PlayerInfo[i][v2Componentes11]);
			AddVehicleComponent(autos2[i], PlayerInfo[i][v2Componentes12]);
			AddVehicleComponent(autos2[i], PlayerInfo[i][v2Componentes13]);
			LinkVehicleToInterior(autos2[i], PlayerInfo[i][v2Ointerior]);
			SetVehicleVirtualWorld(autos2[i], PlayerInfo[i][v2Ovw]);
			SetVehicleZAngle(autos2[i], PlayerInfo[i][pOA]);
			SetVehicleNumberPlate(autos2[i], PlayerInfo[i][v2patente]);
			//VehicleFuel[autos2[i]] = PlayerInfo[i][v2Gas];
			if(PlayerInfo[i][vPJ2] >= 0)
			{
				ChangeVehiclePaintjob(autos2[i], PlayerInfo[i][vPJ2]);
			}
			MotorAuto[autos2[i]] = 0;
			ChangeVehicleColor(autos2[i], PlayerInfo[i][v2Color1], PlayerInfo[i][v2Color2]);
			Luces[vehicleid] = 0;
			new mensaje[100];
			format(mensaje, sizeof(mensaje), "Tu {DBED16}%s{FFFFFF} fue remolcado al último lugar donde lo estacionaste.", NombreAuto[GetVehicleModel(autos2[i])-400]);
			SendClientMessage(i,-1, mensaje);
			return 1;
		}
		else if(vehicleid == autos3[i])
		{
			new pName[32];
			GetPlayerName(i, pName, 32);
			SetVehiclePos(autos3[i], PlayerInfo[i][pOX3],PlayerInfo[i][pOY3],PlayerInfo[i][pOZ3]);
			if(PlayerInfo[i][vSeguro3] == 1)
			{
				GetVehicleParamsEx(autos3[i], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos3[i], engine, lights, alarm, 1, bonnet, boot, objective);
				bloqueado[autos3[i]] = 1;
			}
			if(PlayerInfo[i][vAAlarma3] == 1)
			{
				GetVehicleParamsEx(autos3[i], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos3[i], engine, lights, 1, doors, bonnet, boot, objective);
				alarma[autos3[i]] = 1;
			}
			AddVehicleComponent(autos3[i], PlayerInfo[i][v3Componentes0]);
			AddVehicleComponent(autos3[i], PlayerInfo[i][v3Componentes1]);
			AddVehicleComponent(autos3[i], PlayerInfo[i][v3Componentes2]);
			AddVehicleComponent(autos3[i], PlayerInfo[i][v3Componentes3]);
			AddVehicleComponent(autos3[i], PlayerInfo[i][v3Componentes4]);
			AddVehicleComponent(autos3[i], PlayerInfo[i][v3Componentes5]);
			AddVehicleComponent(autos3[i], PlayerInfo[i][v3Componentes6]);
			AddVehicleComponent(autos3[i], PlayerInfo[i][v3Componentes7]);
			AddVehicleComponent(autos3[i], PlayerInfo[i][v3Componentes8]);
			AddVehicleComponent(autos3[i], PlayerInfo[i][v3Componentes9]);
			AddVehicleComponent(autos3[i], PlayerInfo[i][v3Componentes10]);
			AddVehicleComponent(autos3[i], PlayerInfo[i][v3Componentes11]);
			AddVehicleComponent(autos3[i], PlayerInfo[i][v3Componentes12]);
			AddVehicleComponent(autos3[i], PlayerInfo[i][v3Componentes13]);
			LinkVehicleToInterior(autos3[i], PlayerInfo[i][v3Ointerior]);
			SetVehicleVirtualWorld(autos3[i], PlayerInfo[i][v3Ovw]);
			SetVehicleZAngle(autos3[i], PlayerInfo[i][pOA]);
			SetVehicleNumberPlate(autos3[i], PlayerInfo[i][v3patente]);
			//VehicleFuel[autos3[i]] = PlayerInfo[i][v3Gas];
			if(PlayerInfo[i][vPJ3] >= 0)
			{
				ChangeVehiclePaintjob(autos3[i], PlayerInfo[i][vPJ3]);
			}
			MotorAuto[autos3[i]] = 0;
			ChangeVehicleColor(autos3[i], PlayerInfo[i][v3Color1], PlayerInfo[i][v3Color2]);
			Luces[vehicleid] = 0;
			new mensaje[100];
			format(mensaje, sizeof(mensaje), "Tu {DBED16}%s{FFFFFF} fue remolcado al último lugar donde lo estacionaste.", NombreAuto[GetVehicleModel(autos3[i])-400]);
			SendClientMessage(i,-1, mensaje);
			return 1;
		}
		else if(vehicleid == autos4[i])
		{
			new pName[32];
			GetPlayerName(i, pName, 32);
			SetVehiclePos(autos4[i], PlayerInfo[i][pOX4],PlayerInfo[i][pOY4],PlayerInfo[i][pOZ4]);
			if(PlayerInfo[i][vSeguro4] == 1)
			{
				GetVehicleParamsEx(autos4[i], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos4[i], engine, lights, alarm, 1, bonnet, boot, objective);
				bloqueado[autos4[i]] = 1;
			}
			if(PlayerInfo[i][vAAlarma4] == 1)
			{
				GetVehicleParamsEx(autos4[i], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos4[i], engine, lights, 1, doors, bonnet, boot, objective);
				alarma[autos4[i]] = 1;
			}
			AddVehicleComponent(autos4[i], PlayerInfo[i][v4Componentes0]);
			AddVehicleComponent(autos4[i], PlayerInfo[i][v4Componentes1]);
			AddVehicleComponent(autos4[i], PlayerInfo[i][v4Componentes2]);
			AddVehicleComponent(autos4[i], PlayerInfo[i][v4Componentes3]);
			AddVehicleComponent(autos4[i], PlayerInfo[i][v4Componentes4]);
			AddVehicleComponent(autos4[i], PlayerInfo[i][v4Componentes5]);
			AddVehicleComponent(autos4[i], PlayerInfo[i][v4Componentes6]);
			AddVehicleComponent(autos4[i], PlayerInfo[i][v4Componentes7]);
			AddVehicleComponent(autos4[i], PlayerInfo[i][v4Componentes8]);
			AddVehicleComponent(autos4[i], PlayerInfo[i][v4Componentes9]);
			AddVehicleComponent(autos4[i], PlayerInfo[i][v4Componentes10]);
			AddVehicleComponent(autos4[i], PlayerInfo[i][v4Componentes11]);
			AddVehicleComponent(autos4[i], PlayerInfo[i][v4Componentes12]);
			AddVehicleComponent(autos4[i], PlayerInfo[i][v4Componentes13]);
			LinkVehicleToInterior(autos4[i], PlayerInfo[i][v4Ointerior]);
			SetVehicleVirtualWorld(autos4[i], PlayerInfo[i][v4Ovw]);
			SetVehicleZAngle(autos4[i], PlayerInfo[i][pOA]);
			SetVehicleNumberPlate(autos4[i], PlayerInfo[i][v4patente]);
			//VehicleFuel[autos4[i]] = PlayerInfo[i][v4Gas];
			if(PlayerInfo[i][vPJ4] >= 0)
			{
				ChangeVehiclePaintjob(autos4[i], PlayerInfo[i][vPJ4]);
			}
			MotorAuto[autos4[i]] = 0;
			ChangeVehicleColor(autos4[i], PlayerInfo[i][v4Color1], PlayerInfo[i][v4Color2]);
			Luces[vehicleid] = 0;
			new mensaje[100];
			format(mensaje, sizeof(mensaje), "Tu {DBED16}%s{FFFFFF} fue remolcado al último lugar donde lo estacionaste.", NombreAuto[GetVehicleModel(autos4[i])-400]);
			SendClientMessage(i,-1, mensaje);
			return 1;
		}
	}
	new modelo = GetVehicleModel(vehicleid);
	new vehiclefuel = CombustibleCoche(modelo);
	VehicleFuel[vehicleid] = vehiclefuel;

	MotorAuto[vehicleid] = 0;
	Luces[vehicleid] = 0;
	SinGaso[vehicleid] = 0;
	if(AutoDeFabrica[vehicleid] != 0) SetVehicleHealth(vehicleid, 5000.0);
	else SetVehicleHealth(vehicleid, 1000.0);
	return 1;
}
public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	if(vehicleid == autos[playerid])
	{
		new query[680],pName[30];
		PlayerInfo[playerid][vPJ] = paintjobid;
		GetPlayerName(playerid, pName, 30);
		format(query, 200, "UPDATE `p_vehicles` SET `PaintJob`='%d' WHERE `Propietario`='%d' AND `Slot` = '1'",paintjobid, PlayerInfo[playerid][pID]);
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	if(vehicleid == autos2[playerid])
	{
		new query[680],pName[30];
		PlayerInfo[playerid][vPJ2] = paintjobid;
		GetPlayerName(playerid, pName, 30);
		format(query, 200, "UPDATE `p_vehicles` SET `PaintJob`='%d' WHERE `Propietario`='%d' AND `Slot` = '2'",paintjobid, PlayerInfo[playerid][pID]);
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	if(vehicleid == autos3[playerid])
	{
		new query[680],pName[30];
		PlayerInfo[playerid][vPJ3] = paintjobid;
		GetPlayerName(playerid, pName, 30);
		format(query, 200, "UPDATE `p_vehicles` SET `PaintJob`='%d' WHERE `Propietario`='%d' AND `Slot` = '3'",paintjobid, PlayerInfo[playerid][pID]);
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	if(vehicleid == autos4[playerid])
	{
		new query[680],pName[30];
		PlayerInfo[playerid][vPJ4] = paintjobid;
		GetPlayerName(playerid, pName, 30);
		format(query, 200, "UPDATE `p_vehicles` SET `PaintJob`='%d' WHERE `Propietario`='%d' AND `Slot` = '4'",paintjobid, PlayerInfo[playerid][pID]);
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	new query[680];
	if(IsPlayerInVehicle(playerid, autos[playerid]))
	{
	    format(query, 250, "UPDATE `p_vehicles` SET `Color1`='%d',`Color2`='%d' WHERE `Propietario`='%d' AND `Slot` = '1'",color1,color2,PlayerInfo[playerid][pID]);
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	else if(IsPlayerInVehicle(playerid, autos2[playerid]))
	{
		format(query, 250, "UPDATE `p_vehicles` SET `Color1`='%d',`Color2`='%d' WHERE `Propietario`='%d' AND `Slot` = '2'",color1,color2,PlayerInfo[playerid][pID]);
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	else if(IsPlayerInVehicle(playerid, autos3[playerid]))
	{
		format(query, 250, "UPDATE `p_vehicles` SET `Color1`='%d',`Color2`='%d' WHERE `Propietario`='%d' AND `Slot` = '3'",color1,color2,PlayerInfo[playerid][pID]);
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	else if(IsPlayerInVehicle(playerid, autos4[playerid]))
	{
		format(query, 250, "UPDATE `p_vehicles` SET `Color1`='%d',`Color2`='%d' WHERE `Propietario`='%d' AND `Slot` = '4'",color1,color2,PlayerInfo[playerid][pID]);
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	return 1;
}

public OnEnterExitModShop(playerid, enterexit, interiorid)
{
	if(Entrando[playerid] == 0)
	{
		Entrando[playerid] = 1;
		SetTimerEx("Entrandos",3000,false,"d",playerid);
	}
	if(enterexit == 0)
	{
		if(IsPlayerInVehicle(playerid, autos[playerid]))
		{
			new query[900],color_1, color_2;
			GetVehicleColor(autos[playerid] , color_1, color_2);
            PlayerInfo[playerid][vColor1] = color_1;
			PlayerInfo[playerid][vColor2] = color_2;
			PlayerInfo[playerid][vComponentes0] = GetVehicleComponentInSlot(autos[playerid], 0);
			PlayerInfo[playerid][vComponentes1] = GetVehicleComponentInSlot(autos[playerid], 1);
			PlayerInfo[playerid][vComponentes2] = GetVehicleComponentInSlot(autos[playerid], 2);
			PlayerInfo[playerid][vComponentes3] = GetVehicleComponentInSlot(autos[playerid], 3);
			PlayerInfo[playerid][vComponentes4] = GetVehicleComponentInSlot(autos[playerid], 4);
			PlayerInfo[playerid][vComponentes5] = GetVehicleComponentInSlot(autos[playerid], 5);
			PlayerInfo[playerid][vComponentes6] = GetVehicleComponentInSlot(autos[playerid], 6);
			PlayerInfo[playerid][vComponentes7] = GetVehicleComponentInSlot(autos[playerid], 7);
			PlayerInfo[playerid][vComponentes8] = GetVehicleComponentInSlot(autos[playerid], 8);
			PlayerInfo[playerid][vComponentes9] = GetVehicleComponentInSlot(autos[playerid], 9);
			PlayerInfo[playerid][vComponentes10] = GetVehicleComponentInSlot(autos[playerid], 10);
			PlayerInfo[playerid][vComponentes11] = GetVehicleComponentInSlot(autos[playerid], 11);
			PlayerInfo[playerid][vComponentes12] = GetVehicleComponentInSlot(autos[playerid], 12);
			PlayerInfo[playerid][vComponentes13] = GetVehicleComponentInSlot(autos[playerid], 13);
			format(query, 900, "UPDATE `p_vehicles` SET `Componentes1`='%d',`Componentes2`='%d',`Componentes3`='%d',`Componentes4`='%d',`Componentes5`='%d',`Componentes6`='%d',`Componentes7`='%d',`Componentes8`='%d',`Componentes9`='%d',`Componentes10`='%d',`Componentes11`='%d',`Componentes12`='%d',`Componentes13`='%d',`Componentes0`='%d' WHERE `Propietario`='%d' AND `Slot` = '1'",PlayerInfo[playerid][vComponentes1],PlayerInfo[playerid][vComponentes2],PlayerInfo[playerid][vComponentes3],PlayerInfo[playerid][vComponentes4],PlayerInfo[playerid][vComponentes5],PlayerInfo[playerid][vComponentes6],PlayerInfo[playerid][vComponentes7],PlayerInfo[playerid][vComponentes8],PlayerInfo[playerid][vComponentes9],PlayerInfo[playerid][vComponentes10],PlayerInfo[playerid][vComponentes11],PlayerInfo[playerid][vComponentes12],PlayerInfo[playerid][vComponentes13],PlayerInfo[playerid][vComponentes0],PlayerInfo[playerid][pID]);
			mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		}
		else if(IsPlayerInVehicle(playerid, autos2[playerid]))
		{
            new query[900],color_1, color_2;
			GetVehicleColor(autos2[playerid] , color_1, color_2);
			PlayerInfo[playerid][v2Color1] = color_1;
			PlayerInfo[playerid][v2Color2] = color_2;
			PlayerInfo[playerid][v2Componentes0] = GetVehicleComponentInSlot(autos2[playerid], 0);
			PlayerInfo[playerid][v2Componentes1] = GetVehicleComponentInSlot(autos2[playerid], 1);
			PlayerInfo[playerid][v2Componentes2] = GetVehicleComponentInSlot(autos2[playerid], 2);
			PlayerInfo[playerid][v2Componentes3] = GetVehicleComponentInSlot(autos2[playerid], 3);
			PlayerInfo[playerid][v2Componentes4] = GetVehicleComponentInSlot(autos2[playerid], 4);
			PlayerInfo[playerid][v2Componentes5] = GetVehicleComponentInSlot(autos2[playerid], 5);
			PlayerInfo[playerid][v2Componentes6] = GetVehicleComponentInSlot(autos2[playerid], 6);
			PlayerInfo[playerid][v2Componentes7] = GetVehicleComponentInSlot(autos2[playerid], 7);
			PlayerInfo[playerid][v2Componentes8] = GetVehicleComponentInSlot(autos2[playerid], 8);
			PlayerInfo[playerid][v2Componentes9] = GetVehicleComponentInSlot(autos2[playerid], 9);
			PlayerInfo[playerid][v2Componentes10] = GetVehicleComponentInSlot(autos2[playerid], 10);
			PlayerInfo[playerid][v2Componentes11] = GetVehicleComponentInSlot(autos2[playerid], 11);
			PlayerInfo[playerid][v2Componentes12] = GetVehicleComponentInSlot(autos2[playerid], 12);
			PlayerInfo[playerid][v2Componentes13] = GetVehicleComponentInSlot(autos2[playerid], 13);
			format(query, 900, "UPDATE `p_vehicles` SET `Componentes1`='%d',`Componentes2`='%d',`Componentes3`='%d',`Componentes4`='%d',`Componentes5`='%d',`Componentes6`='%d',`Componentes7`='%d',`Componentes8`='%d',`Componentes9`='%d',`Componentes10`='%d',`Componentes11`='%d',`Componentes12`='%d',`Componentes13`='%d',`Componentes0`='%d' WHERE `Propietario`='%d' AND `Slot` = '2'",PlayerInfo[playerid][vComponentes1],PlayerInfo[playerid][vComponentes2],PlayerInfo[playerid][vComponentes3],PlayerInfo[playerid][vComponentes4],PlayerInfo[playerid][vComponentes5],PlayerInfo[playerid][vComponentes6],PlayerInfo[playerid][vComponentes7],PlayerInfo[playerid][vComponentes8],PlayerInfo[playerid][vComponentes9],PlayerInfo[playerid][vComponentes10],PlayerInfo[playerid][vComponentes11],PlayerInfo[playerid][vComponentes12],PlayerInfo[playerid][vComponentes13],PlayerInfo[playerid][vComponentes0],PlayerInfo[playerid][pID]);
			mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		}
		else if(IsPlayerInVehicle(playerid, autos3[playerid]))
		{
			new query[900],color_1, color_2;
			GetVehicleColor(autos3[playerid] , color_1, color_2);
			PlayerInfo[playerid][v3Color1] = color_1;
			PlayerInfo[playerid][v3Color2] = color_2;
			PlayerInfo[playerid][v3Componentes0] = GetVehicleComponentInSlot(autos3[playerid], 0);
			PlayerInfo[playerid][v3Componentes1] = GetVehicleComponentInSlot(autos3[playerid], 1);
			PlayerInfo[playerid][v3Componentes2] = GetVehicleComponentInSlot(autos3[playerid], 2);
			PlayerInfo[playerid][v3Componentes3] = GetVehicleComponentInSlot(autos3[playerid], 3);
			PlayerInfo[playerid][v3Componentes4] = GetVehicleComponentInSlot(autos3[playerid], 4);
			PlayerInfo[playerid][v3Componentes5] = GetVehicleComponentInSlot(autos3[playerid], 5);
			PlayerInfo[playerid][v3Componentes6] = GetVehicleComponentInSlot(autos3[playerid], 6);
			PlayerInfo[playerid][v3Componentes7] = GetVehicleComponentInSlot(autos3[playerid], 7);
			PlayerInfo[playerid][v3Componentes8] = GetVehicleComponentInSlot(autos3[playerid], 8);
			PlayerInfo[playerid][v3Componentes9] = GetVehicleComponentInSlot(autos3[playerid], 9);
			PlayerInfo[playerid][v3Componentes10] = GetVehicleComponentInSlot(autos3[playerid], 10);
			PlayerInfo[playerid][v3Componentes11] = GetVehicleComponentInSlot(autos3[playerid], 11);
			PlayerInfo[playerid][v3Componentes12] = GetVehicleComponentInSlot(autos3[playerid], 12);
			PlayerInfo[playerid][v3Componentes13] = GetVehicleComponentInSlot(autos3[playerid], 13);
			format(query, 900, "UPDATE `p_vehicles` SET `Componentes1`='%d',`Componentes2`='%d',`Componentes3`='%d',`Componentes4`='%d',`Componentes5`='%d',`Componentes6`='%d',`Componentes7`='%d',`Componentes8`='%d',`Componentes9`='%d',`Componentes10`='%d',`Componentes11`='%d',`Componentes12`='%d',`Componentes13`='%d',`Componentes0`='%d' WHERE `Propietario`='%d' AND `Slot` = '3'",PlayerInfo[playerid][vComponentes1],PlayerInfo[playerid][vComponentes2],PlayerInfo[playerid][vComponentes3],PlayerInfo[playerid][vComponentes4],PlayerInfo[playerid][vComponentes5],PlayerInfo[playerid][vComponentes6],PlayerInfo[playerid][vComponentes7],PlayerInfo[playerid][vComponentes8],PlayerInfo[playerid][vComponentes9],PlayerInfo[playerid][vComponentes10],PlayerInfo[playerid][vComponentes11],PlayerInfo[playerid][vComponentes12],PlayerInfo[playerid][vComponentes13],PlayerInfo[playerid][vComponentes0],PlayerInfo[playerid][pID]);
			mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		}
		else if(IsPlayerInVehicle(playerid, autos4[playerid]))
		{
			new query[900],color_1, color_2;
			GetVehicleColor(autos4[playerid] , color_1, color_2);
			PlayerInfo[playerid][v4Color1] = color_1;
			PlayerInfo[playerid][v4Color2] = color_2;
			PlayerInfo[playerid][v4Componentes0] = GetVehicleComponentInSlot(autos4[playerid], 0);
			PlayerInfo[playerid][v4Componentes1] = GetVehicleComponentInSlot(autos4[playerid], 1);
			PlayerInfo[playerid][v4Componentes2] = GetVehicleComponentInSlot(autos4[playerid], 2);
			PlayerInfo[playerid][v4Componentes3] = GetVehicleComponentInSlot(autos4[playerid], 3);
			PlayerInfo[playerid][v4Componentes4] = GetVehicleComponentInSlot(autos4[playerid], 4);
			PlayerInfo[playerid][v4Componentes5] = GetVehicleComponentInSlot(autos4[playerid], 5);
			PlayerInfo[playerid][v4Componentes6] = GetVehicleComponentInSlot(autos4[playerid], 6);
			PlayerInfo[playerid][v4Componentes7] = GetVehicleComponentInSlot(autos4[playerid], 7);
			PlayerInfo[playerid][v4Componentes8] = GetVehicleComponentInSlot(autos4[playerid], 8);
			PlayerInfo[playerid][v4Componentes9] = GetVehicleComponentInSlot(autos4[playerid], 9);
			PlayerInfo[playerid][v4Componentes10] = GetVehicleComponentInSlot(autos4[playerid], 10);
			PlayerInfo[playerid][v4Componentes11] = GetVehicleComponentInSlot(autos4[playerid], 11);
			PlayerInfo[playerid][v4Componentes12] = GetVehicleComponentInSlot(autos4[playerid], 12);
			PlayerInfo[playerid][v4Componentes13] = GetVehicleComponentInSlot(autos4[playerid], 13);
			format(query, 900, "UPDATE `p_vehicles` SET `Componentes1`='%d',`Componentes2`='%d',`Componentes3`='%d',`Componentes4`='%d',`Componentes5`='%d',`Componentes6`='%d',`Componentes7`='%d',`Componentes8`='%d',`Componentes9`='%d',`Componentes10`='%d',`Componentes11`='%d',`Componentes12`='%d',`Componentes13`='%d',`Componentes0`='%d' WHERE `Propietario`='%d' AND `Slot` = '4'",PlayerInfo[playerid][vComponentes1],PlayerInfo[playerid][vComponentes2],PlayerInfo[playerid][vComponentes3],PlayerInfo[playerid][vComponentes4],PlayerInfo[playerid][vComponentes5],PlayerInfo[playerid][vComponentes6],PlayerInfo[playerid][vComponentes7],PlayerInfo[playerid][vComponentes8],PlayerInfo[playerid][vComponentes9],PlayerInfo[playerid][vComponentes10],PlayerInfo[playerid][vComponentes11],PlayerInfo[playerid][vComponentes12],PlayerInfo[playerid][vComponentes13],PlayerInfo[playerid][vComponentes0],PlayerInfo[playerid][pID]);
			mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		}
	}
	return 1;
}

public CheckPlayer(playerid)
{
	if(NombreErroneo[playerid] != 1)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        randomString(NombreRandom[playerid], 15);
			SetPlayerName(playerid, NombreRandom[playerid]);
			new Query[680];
			format(Query, sizeof(Query), "SELECT * FROM `usuarios` WHERE `Username`='%s'", PlayerInfo[playerid][NombreTemporal]);
			mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 2, playerid);
			return 1;
		}
	}
	return 1;
}

public CargarVehiculos()
{
	new Query[680];
	format(Query, sizeof(Query), "SELECT * FROM `vehicles`");
	mysql_function_query(Conecction, Query, true, "CargarAutos", "i", 3);
	return 1;
}

public CargarMapeos()
{
	//PUERTAS FC
	RejasFC[0] = CreateDynamicObject(19303, 198.87000, 1442.04004, 1089.34998,   0.00000, 0.00000, 0.00000);
	RejasFC[1] = CreateDynamicObject(19303, 198.87000, 1442.04004, 1085.06995,   0.00000, 0.00000, 0.00000);
	RejasFC[2] = CreateDynamicObject(19303, 194.99001, 1442.04004, 1089.34998,   0.00000, 0.00000, 0.00000);
	RejasFC[3] = CreateDynamicObject(19303, 194.99001, 1442.04004, 1085.06995,   0.00000, 0.00000, 0.00000);
	RejasFC[4] = CreateDynamicObject(19303, 191.13000, 1442.04004, 1089.34998,   0.00000, 0.00000, 0.00000);
	RejasFC[5] = CreateDynamicObject(19303, 191.13000, 1442.04004, 1085.06995,   0.00000, 0.00000, 0.00000);
	RejasFC[6] = CreateDynamicObject(19303, 187.35001, 1442.04004, 1089.34998,   0.00000, 0.00000, 0.00000);
	RejasFC[7] = CreateDynamicObject(19303, 187.35001, 1442.04004, 1085.06995,   0.00000, 0.00000, 0.00000);
	RejasFC[8] = CreateDynamicObject(19303, 183.50999, 1442.04004, 1089.34998,   0.00000, 0.00000, 0.00000);
	RejasFC[9] = CreateDynamicObject(19303, 183.50999, 1442.04004, 1085.06995,   0.00000, 0.00000, 0.00000);
	RejasFC[10] = CreateDynamicObject(19303, 180.86000, 1441.35999, 1081.79004,   0.00000, 0.00000, 12.98000);
	RejasFC[11] = CreateDynamicObject(19303, 179.57001, 1442.04004, 1089.34998,   0.00000, 0.00000, 0.00000);
	RejasFC[12] = CreateDynamicObject(19303, 179.57001, 1442.04004, 1085.06995,   0.00000, 0.00000, 0.00000);
	RejasFC[13] = CreateDynamicObject(19303, 179.13000, 1441.45996, 1081.81995,   0.00000, 0.00000, 12.84000);
	RejasFC[14] = CreateDynamicObject(19303, 175.71001, 1442.04004, 1089.34998,   0.00000, 0.00000, 0.00000);
	RejasFC[15] = CreateDynamicObject(19303, 175.71001, 1442.04004, 1085.06995,   0.00000, 0.00000, 0.00000);
	RejasFC[16] = CreateDynamicObject(19303, 198.66000, 1457.37000, 1089.34998,   0.00000, 0.00000, 0.00000);
	RejasFC[17] = CreateDynamicObject(19303, 198.66000, 1457.37000, 1085.06995,   0.00000, 0.00000, 0.00000);
	RejasFC[18] = CreateDynamicObject(19303, 171.83000, 1442.04004, 1085.06995,   0.00000, 0.00000, 0.00000);
	RejasFC[19] = CreateDynamicObject(19303, 194.84000, 1457.37000, 1089.34998,   0.00000, 0.00000, 0.00000);
	RejasFC[20] = CreateDynamicObject(19303, 194.84000, 1457.37000, 1085.06995,   0.00000, 0.00000, 0.00000);
	RejasFC[21] = CreateDynamicObject(19303, 191.16000, 1457.37000, 1089.34998,   0.00000, 0.00000, 0.00000);
	RejasFC[22] = CreateDynamicObject(19303, 191.16000, 1457.37000, 1085.06995,   0.00000, 0.00000, 0.00000);
	RejasFC[23] = CreateDynamicObject(19303, 187.24001, 1457.37000, 1089.34998,   0.00000, 0.00000, 0.00000);
	RejasFC[24] = CreateDynamicObject(19303, 187.12000, 1457.37000, 1085.06995,   0.00000, 0.00000, 0.00000);
	RejasFC[25] = CreateDynamicObject(19303, 183.24001, 1457.37000, 1085.06995,   0.00000, 0.00000, 0.00000);
	RejasFC[26] = CreateDynamicObject(19303, 179.39999, 1457.37000, 1085.06995,   0.00000, 0.00000, 0.00000);
	RejasFC[27] = CreateDynamicObject(19303, 175.70000, 1457.37000, 1085.06995,   0.00000, 0.00000, 0.00000);
	RejasFC[28] = CreateDynamicObject(19303, 171.58000, 1457.37000, 1085.06995,   0.00000, 0.00000, 0.00000);
	RejasFC[29] = CreateDynamicObject(19303, 175.56000, 1457.37000, 1089.34998,   0.00000, 0.00000, 0.00000);
	RejasFC[30] = CreateDynamicObject(19303, 179.56000, 1457.37000, 1089.34998,   0.00000, 0.00000, 0.00000);
	RejasFC[31] = CreateDynamicObject(19303, 183.39999, 1457.37000, 1089.34998,   0.00000, 0.00000, 0.00000);

	//Salon de Eventos
	new objectos[5];

	objectos[0] = CreateObject(18765, -1194.37000, 2030.91003, 1244.81995,   0.00000, 0.00000, 359.89999);
	objectos[1] = CreateObject(18765, -1192.71997, 2032.48999, 1244.83997,   0.00000, 0.00000, 359.89999);
	objectos[2] = CreateObject(18765, -1190.88000, 2032.51001, 1244.85999,   0.00000, 0.00000, 359.89999);
	objectos[3] = CreateObject(18765, -1189.50000, 2030.90002, 1244.80005,   0.00000, 0.00000, 359.89999);

	for(new a = 0; a<4; a++)
	{
		SetObjectMaterial(objectos[a], 0, 9362, "sfn_byofficeint", "CJ_Black_metal", 0xFFFFFFFF);
	}
	return 1;
}

public CargarFacciones()
{
	new Query[128];
	format(Query, sizeof(Query), "SELECT * FROM `facciones`");
	mysql_function_query(Conecction, Query, true, "CargarBandas", "i", 3);
	return 1;
}

public CargarUsers()
{
	new Query[128];
	format(Query, sizeof(Query), "SELECT * FROM `registros`");
	mysql_function_query(Conecction, Query, true, "CargarRegistros", "i", 3);
	return 1;
}

public TextoCombate(playerid)
{
	if(EnCombate[playerid] == 1)
	{
		if(TiempoCombate[playerid] > 0)
		{
			if(CColocado[playerid] == 0)
			{
				GangZoneShowForPlayer(playerid, ModoCombate, -1879048029);
				GangZoneFlashForPlayer(playerid, ModoCombate, -1879048029);
				TiempoCombate[playerid]--;
				CColocado[playerid] = 1;
			}
			else
			{
				GangZoneHideForPlayer(playerid, ModoCombate);
				GangZoneStopFlashForPlayer(playerid, ModoCombate);
				TiempoCombate[playerid]--;
				CColocado[playerid] = 0;
			}
		}
		else if(TiempoCombate[playerid] <= 0)
		{
			GangZoneHideForPlayer(playerid, ModoCombate);
			GangZoneStopFlashForPlayer(playerid, ModoCombate);
			TiempoCombate[playerid] = 0;
			CColocado[playerid] = 0;
			EnCombate[playerid] = 0;
			KillTimer(TimerCombate[playerid]);
		}
	}
	else if(EnCombate[playerid] == 0)
	{
		GangZoneHideForPlayer(playerid, ModoCombate);
		GangZoneStopFlashForPlayer(playerid, ModoCombate);
		TiempoCombate[playerid] = 0;
		CColocado[playerid] = 0;
		EnCombate[playerid] = 0;
		KillTimer(TimerCombate[playerid]);
	}
}

public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
    if(!IsPlayerNPC(issuerid))
    {
	    if(playerid != INVALID_PLAYER_ID)
	    {
		    if(issuerid != INVALID_PLAYER_ID)
		    {
				if(IsPlayerConnected(playerid))
				{
					if(JugadorLogeado[playerid] == 1)
					{
						if(JugadorLogeado[issuerid] == 1)
						{
							if(PlayerInfo[playerid][@Nivel] == 1)
							{
						    	new Float:old_health;
						    	GetPlayerHealth(playerid, old_health);
						    	SetPlayerHealth(playerid, old_health + amount);
							}
							if(ViendoGPS[playerid] == 1)
							{
								ViendoGPS[playerid] = 0;
								foreach (new i : Player) PlayerTextDrawDestroy(playerid, jugador[playerid]);
								KillTimer(asd[playerid]);
								TextDrawHideForPlayer(playerid, MapaLateral[0]);
								TextDrawHideForPlayer(playerid, MapaLateral[1]);
								TextDrawHideForPlayer(playerid, MapaLateral[2]);
								TextDrawHideForPlayer(playerid, MapaLateral[3]);
								if(SedOculta[playerid] == 0)
								{
									ShowPlayerProgressBar(playerid, Progressbar[playerid][Sed]);
						        	ShowPlayerProgressBar(playerid, Progressbar[playerid][Hambre]);
						        }
						    }
							ColocarCombate(playerid);
							CerrarGPS(playerid);
							Agresor[playerid] = issuerid;
							TiempoAgresor[playerid] = 15;
							ColocarCombate(issuerid);
							if(GetPlayerTargetPlayer(issuerid) == INVALID_PLAYER_ID)
				            {
                                if(GetPlayerCameraMode(issuerid) == 53)
                                {
				                	new string[128];
                  					format(string, sizeof(string), "{00CC00}%s (%d) posible AB con vehículo ID: %d (Nivel: %d - %dhs) BAN IP.", PlayerName(playerid),playerid,GetPlayerVehicleID(playerid),PlayerInfo[playerid][@Nivel],NetStats_PacketLossPercent(playerid));
			   						//MensajeAdmin(0xe1e938FF, string, 3);
			   					}
				            }
							if(!IsPlayerInAnyVehicle(issuerid) && GetPlayerState(issuerid) != PLAYER_STATE_DRIVER)
							{
								if(Jail[issuerid] == 1)
								{
									if(GolpesAdv[issuerid] == 0)
									{
										SendClientMessage(issuerid,-1,"Se te aumento la condenado por generar disturbios en la prisión.");
										SendClientMessage(issuerid,-1,"Si continuas así tu condenada seguirá aumentando.");
										PlayerInfo[issuerid][pTiempoCarcelM] += 5;
										GolpesAdv[issuerid] = 1;
										SetTimerEx("AdvertGolpes",30000,false,"d",issuerid);
									}
						  		}
							}
					        if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
					        {
					            if(GetPlayerState(issuerid) == PLAYER_STATE_DRIVER)
					            {
					                if(weaponid == 49)
					                {
					                    //new string[128];
					                    new Float:x, Float:y, Float:z;
					                    GetPosBehindVehicle(GetPlayerVehicleID(issuerid), x, y, z, 0.5);
					                    //format(string, sizeof(string), "{00CC00}%s (%d) posible AB con vehículo ID: %d (Nivel: %d - %dhs) BAN IP.", PlayerName(issuerid),issuerid,GetPlayerVehicleID(issuerid),PlayerInfo[issuerid][@Nivel],NetStats_PacketLossPercent(issuerid));
		   								//MensajeAdmin(0xe1e938FF, string, 3);
					                    //GetPlayerPos(issuerid, x, y, z);
					                    //SetPlayerPos(issuerid, x, y, z); //Slap the carparker
					                    //GetPlayerPos(playerid, x, y, z);
					                    //SetPlayerPos(playerid, x, y, z + 3); //Slap the player so they are no longer being carparked
					                }
					            }
					        }
                        }
					}
				}
			}
		}
	}
	return 1;
}

public OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid)
{
	if(Grupo[playerid] != 0)
	{
	    if(Grupo[playerid] == 1 && Grupo[damagedid] == 1 || Grupo[playerid] == 2 && Grupo[damagedid] == 2 || Grupo[playerid] == 3 && Grupo[damagedid] == 3)
	    {
	        new Float:old_health;
    		GetPlayerHealth(damagedid, old_health);
    		SetPlayerHealth(damagedid, old_health + amount);
	        SendClientMessage(playerid,-1,"No puedes hacerle daño a tus colegas.");
	    }
    }
	if(ZonasSeguras(playerid) && PlayerInfo[playerid][pCargos] < 1 && PlayerInfo[playerid][pFaccion] != 1)
	{
		new string[256];
  		SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pCargos]=1);
		if(IsPlayerInRangeOfPoint(playerid,90.0,1486.5696,-1665.8914,14.5532))
		{
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en el Departamento de Policías de Los Santos.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Marcelo";
		}
		if(IsPlayerInRangeOfPoint(playerid,50.0,374.3663,-124.7870,1001.4922))
		{
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en el Departamento de Policías de Los Santos.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Cámara de seguridad";
		}
		if(IsPlayerInRangeOfPoint(playerid,50.0,374.3663,-124.7870,1001.4922))
		{
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en el Estadio de Las Venturas.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Cámara de seguridad";
		}
		else if(PlayerToPoint(50,playerid,-1580.7948,860.1343,7.4437) || PlayerToPoint(30,playerid,-1605.3289,717.2955,11.9439) || PlayerToPoint(30,playerid,-1603.2389,665.9307,7.1875))
		{
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en el Departamento de Policías de San Fierro.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "GuardiaSF";
		}
		else if(PlayerToPoint(50,playerid,1472.6334,-1655.7413,13.6334) || PlayerToPoint(30,playerid,1498.2800,-1583.8029,13.5469))
		{
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en Commerce.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Marcelo";
		}
		else if(PlayerToPoint(60,playerid,2297.1174,2460.5366,10.8203))
		{
		    if(PlayerInfo[playerid][pTiempoJailS] > 0) return 1;
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en la comisaría de Las Venturas", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Cámara de seguridad";
		}
		else if(PlayerToPoint(200,playerid,-141.9739,-1468.8439,12.8047))
		{
		    if(PlayerInfo[playerid][pTiempoJailS] > 0) return 1;
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en el basural.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Cámara de seguridad";
		}
		else if(PlayerToPoint(50,playerid,2436.8701,2290.2356,10.8203) || PlayerToPoint(50,playerid,2262.2063,2452.0066,10.8203))
		{
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en el Departamento de Policías de Las Venturas.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "GuardiaLV";
		}
		else if(PlayerToPoint(50,playerid,107.4082,-163.9219,1.9505) || PlayerToPoint(50,playerid,-43.6179,69.7682,3.1172))
		{
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en Blueberry.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "HippiePepe";
		}
		else if(PlayerToPoint(50,playerid,107.4082,-163.9219,1.9505) || PlayerToPoint(50,playerid,-43.6179,69.7682,3.1172))
		{
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en RS Haul.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Cámara de seguridad";
		}
		else if(PlayerToPoint(50,playerid,-159.0519,-1571.7219,6.8370) || PlayerToPoint(50,playerid,-386.2562,-1475.3293,25.7266))
		{
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en Flint Range.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Ignacio";
		}
		else if(PlayerToPoint(50,playerid,-1720.5493,-67.2964,3.5547) || PlayerToPoint(30,playerid,-1821.9308,-122.5035,5.6484))
		{
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en Easter Basin.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Hugo";
		}
		else if(PlayerToPoint(50,playerid,1187.1301,-1323.5789,13.5590) || PlayerToPoint(30,playerid,1137.9875,-1365.3645,13.9844))
		{
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en All Saints General Hospital.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Alejandro";
		}
		else if(PlayerToPoint(50,playerid,1715.12,-1903.17,13.56) || PlayerToPoint(30,playerid,1833.7728,-1842.5350,13.5781))
		{
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en Unity Station.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "GuardiaLS";
		}
		else if(PlayerToPoint(60,playerid,-67.9918,-1502.8313,2.2196) || PlayerToPoint(60,playerid,-144.3647,-1576.3335,8.9806))
		{
		    if(PlayerInfo[playerid][pTiempoJailS] > 0) return 1;
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en el albergue para indigentes.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Cámara de seguridad";
		}
		else if(PlayerToPoint(100,playerid,-1631.8058,80.9634,3.5547) || PlayerToPoint(100,playerid,-1738.5352,-64.9958,3.5547))
		{
		    if(PlayerInfo[playerid][pTiempoJailS] > 0) return 1;
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en los muelles de san fierro.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Cámara de seguridad";
		}
		else if(PlayerToPoint(60,playerid,1605.6942,1838.0575,10.8203))
		{
		    if(PlayerInfo[playerid][pTiempoJailS] > 0) return 1;
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en el Hospital de Las Venturas", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Cámara de seguridad";
		}
		else if(PlayerToPoint(60,playerid,-2660.4780,608.6672,14.4531))
		{
		    if(PlayerInfo[playerid][pTiempoJailS] > 0) return 1;
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en el Hospital de San Fierro", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Cámara de seguridad";
		}
		else if(PlayerToPoint(100,playerid,-70.2748,21.8136,3.1172))
		{
		    if(PlayerInfo[playerid][pTiempoJailS] > 0) return 1;
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en las granjas de Flint Range", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Cámara de seguridad";
		}
		else if(PlayerToPoint(60,playerid,2023.8416,-1425.0518,16.1023))
		{
		    if(PlayerInfo[playerid][pTiempoJailS] > 0) return 1;
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en el Hospital Country General.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Cámara de seguridad";
		}
		else if(PlayerToPoint(60,playerid,1092.7203,-142.7494,1001.1160))
		{
		    if(PlayerInfo[playerid][pTiempoJailS] > 0) return 1;
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en el Banco central de Los Santos", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Cámara de seguridad";
		}
		else if(PlayerToPoint(60,playerid,1212.4128,-5.3369,1000.9219))
		{
		    if(PlayerInfo[playerid][pTiempoJailS] > 0) return 1;
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en el club de striptease.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Cámara de seguridad";
		}
		SetTimerEx("QuitarCargo", 300000, false, "d", playerid);
		SendClientMessage(playerid,COLOR_WHITE,"Fuiste descubierto por un guardia de seguridad, escapa de la zona.");
		SendClientMessage(playerid,COLOR_WHITE,"Si te escondes bien durante 5 minutos, la policía perderá tu rastro.");
	}
	if(IsPlayerNPC(damagedid))
	{
		new npcname[32],string[256];
		GetPlayerName(damagedid, npcname, sizeof(npcname));
		if(PlayerInfo[playerid][pCargos] < 1 && PlayerInfo[playerid][pFaccion] != 1)
	   	if(!strcmp(npcname, "Marcelo", true))
	   	{
	   	    if(PlayerInfo[playerid][pDuty] == 1) return 1;
	   	    PlayerInfo[playerid][pCargos] = 1;
			SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
    	    SetTimerEx("QuitarCargo", 300000, false, "d", playerid);
			SendClientMessage(playerid,COLOR_WHITE,"Fuiste descubierto por un guardia de seguridad, escapa de la zona.");
			SendClientMessage(playerid,COLOR_WHITE,"Si te escondes bien durante 5 minutos, la policía perderá tu rastro.");
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en el Departamento de Policías de Los Santos.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Marcelo";
    	}
    	if(!strcmp(npcname, "Alejandro", true))
    	{
    	    if(PlayerInfo[playerid][pDuty] == 1) return 1;
    	    PlayerInfo[playerid][pCargos] = 1;
			SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
    	    SetTimerEx("QuitarCargo", 300000, false, "d", playerid);
			SendClientMessage(playerid,COLOR_WHITE,"Fuiste descubierto por un guardia de seguridad, escapa de la zona.");
			SendClientMessage(playerid,COLOR_WHITE,"Si te escondes bien durante 5 minutos, la policía perderá tu rastro.");
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en All Saints General Hospital.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Alejandro";
    	}
		if(!strcmp(npcname, "Ignacio", true))
		{
		    if(PlayerInfo[playerid][pDuty] == 1) return 1;
			PlayerInfo[playerid][pCargos] = 1;
			SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
    	    SetTimerEx("QuitarCargo", 300000, false, "d", playerid);
			SendClientMessage(playerid,COLOR_WHITE,"Fuiste descubierto por un guardia de seguridad, escapa de la zona.");
			SendClientMessage(playerid,COLOR_WHITE,"Si te escondes bien durante 5 minutos, la policía perderá tu rastro.");
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en Flint Range.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Ignacio";
		}
		if(!strcmp(npcname, "Hugo", true))
		{
		    if(PlayerInfo[playerid][pDuty] == 1) return 1;
		    PlayerInfo[playerid][pCargos] = 1;
			SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
    	    SetTimerEx("QuitarCargo", 300000, false, "d", playerid);
			SendClientMessage(playerid,COLOR_WHITE,"Fuiste descubierto por un guardia de seguridad, escapa de la zona.");
			SendClientMessage(playerid,COLOR_WHITE,"Si te escondes bien durante 5 minutos, la policía perderá tu rastro.");
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en Easter Basin.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Hugo";
		}
		if(!strcmp(npcname, "Angelica", true))
		{
		    if(PlayerInfo[playerid][pDuty] == 1) return 1;
		    PlayerInfo[playerid][pCargos] = 1;
			SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
    	    SetTimerEx("QuitarCargo", 300000, false, "d", playerid);
			SendClientMessage(playerid,COLOR_WHITE,"Fuiste descubierto por un guardia de seguridad, escapa de la zona.");
			SendClientMessage(playerid,COLOR_WHITE,"Si te escondes bien durante 5 minutos, la policía perderá tu rastro.");
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en el Edificio municipal", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Cámara de seguridad";
		}
		if(!strcmp(npcname, "Jorge", true))
		{
		    if(PlayerInfo[playerid][pDuty] == 1) return 1;
		    PlayerInfo[playerid][pCargos] = 1;
			SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
    	    SetTimerEx("QuitarCargo", 300000, false, "d", playerid);
			SendClientMessage(playerid,COLOR_WHITE,"Fuiste descubierto por un guardia de seguridad, escapa de la zona.");
			SendClientMessage(playerid,COLOR_WHITE,"Si te escondes bien durante 5 minutos, la policía perderá tu rastro.");
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en All Saints General Hospital.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Cámara de seguridad";
		}
		if(!strcmp(npcname, "Mao", true))
		{
		    if(PlayerInfo[playerid][pDuty] == 1) return 1;
		    PlayerInfo[playerid][pCargos] = 1;
			SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
    	    SetTimerEx("QuitarCargo", 300000, false, "d", playerid);
			SendClientMessage(playerid,COLOR_WHITE,"Fuiste descubierto por un guardia de seguridad, escapa de la zona.");
			SendClientMessage(playerid,COLOR_WHITE,"Si te escondes bien durante 5 minutos, la policía perderá tu rastro.");
			format(string, sizeof(string), "{3399FF}[Central de policía] {FFFFFF}reportando: (({00D2CF}%s{FFFFFF})) disturbios en Ocean Docks.", PlayerName(playerid));
			SendRadioMessage(COLOR_WHITE, 1, string);
			quienfue = "Cámara de seguridad";
		}
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 30.0,1157.3018,-1345.9318,-10.7849)) //Hospital LS
	{
	    SetPlayerPos(playerid,0,0,0);
		SetPlayerFacingAngle(playerid,0);
		SetTimerEx("QuitarCargo", 300000, false, "d", playerid);
		SendClientMessage(playerid,COLOR_WHITE,"Fuiste descubierto por un guardia de seguridad, escapa de la zona.");
		SendClientMessage(playerid,COLOR_WHITE,"Si te escondes bien durante 5 minutos, la policía perderá tu rastro.");
		PlayerInfo[playerid][pCargos] = 1;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
	}
	return 1;
}

function KickXD(playerid)
{
    Kick(playerid);
}
function Sexo1(playerid)
{
	ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_START_W", 4.0, 0, 0, 0, 1, 0, 1);
}
function Sexo2(playerid)
{
	ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_LOOP_W", 4.0, 0, 0, 0, 1, 0, 1);
}
function Sexo3(playerid)
{
	ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_LOOP_W", 4.0, 1, 0, 0, 1, 0, 1);
}
function Sexo4(playerid)
{
	ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_LOOP_P", 4.0, 0, 0, 0, 1, 0, 1);
}
function Sexo5(playerid)
{
	ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_END_W", 4.0, 0, 0, 0, 1, 0, 1);
}
function Sexo6(playerid)
{
	ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_END_P", 4.0, 0, 0, 0, 1, 0, 1);
}
function Equilibrio(i)
{
    SetTimerEx("Equilibrio2",600,0,"d",i);
}
function Equilibrio2(i)
{
    AccionesRol(i,"pierde el equilibrio y se cae.", 20);
    SetPlayerPos(i,CaidaTaxi[0][i],CaidaTaxi[1][i],CaidaTaxi[2][i]);
	ApplyAnimation(i,"PED","getup_front",2,0,1,1,0,0);
}

function TCHAT(playerid)
{
	SendClientMessage(playerid, 0x000000FF, "");
	SendClientMessage(playerid, 0x000000FF, "");
	SendClientMessage(playerid, 0x000000FF, "");
	SendClientMessage(playerid, 0x000000FF, "");
	SendClientMessage(playerid, 0x000000FF, "");
	SendClientMessage(playerid, 0x000000FF, "");
	SendClientMessage(playerid, 0x000000FF, "");
	SendClientMessage(playerid, 0x000000FF, "");
	SendClientMessage(playerid, 0x000000FF, "");
	SendClientMessage(playerid, 0x000000FF, "");
}
function QuitarCargo(playerid)
{
    PlayerInfo[playerid][pCargos] = 0;
    SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
}

function AsignarObjetos(playerid)
{
    if(PlayerInfo[playerid][pModelo] == 211)
    {
		SetPlayerAttachedObject(playerid, 3,19142,1,0.109797,0.053399,-0.002000,0.000000,-2.299998,0.299997,1.046000,0.986998,0.893000);
		SetPlayerAttachedObject(playerid, 4,18636,2,0.136399,0.028400,0.001000,90.000000,90.000000,0.000000,1.154000,1.100000,1.161000);
	}
}

public OnPlayerConnect(playerid)
{
    if(!IsPlayerNPC(playerid))
    {
	    Progressbar[playerid][Sed]  			= 	CreatePlayerProgressBar(playerid, 547.299682, 35.30001, 59.300001, 5.099998, 394578431, 100);
		Progressbar[playerid][Hambre]			= 	CreatePlayerProgressBar(playerid, 547.299682, 24.199985, 59.300001, 5.099998, -8912641, 100);
		Progressbar[playerid][Velocimetro]		=   CreatePlayerProgressBar(playerid, 548.0, 421.550000, 67.60, 2.0, -6749953, 100.0);
		Progressbar[playerid][Combustible]		= 	CreatePlayerProgressBar(playerid, 548.0, 373.550000, 67.60, 2.0, 0x00bac6ff, 100.0);
		Progressbar[playerid][Experiencia]		= 	CreatePlayerProgressBar(playerid, 1.089, 444.50, 640.199951, 1.500001, 0x666666FF, 100.0);
		Progressbar[playerid][Camionero]		= 	CreatePlayerProgressBar(playerid, 278.000000, 428.000000, 92.500000, 3.200000, 16711935, 100);
		Progressbar[playerid][Cosecha]			= 	CreatePlayerProgressBar(playerid, 278.000000, 429.000000, 92.500000, 3.200000, 16711935, 100);
		Progressbar[playerid][ReparandoBar] 	= 	CreatePlayerProgressBar(playerid, 261.0000, 416.00, 110.50, 3.50, 16711935, 10.0);
	 	Progressbar[playerid][Picar] 			= 	CreatePlayerProgressBar(playerid, 261.0000, 416.00, 110.50, 3.50, 16711935, 10.0);

		format(PlayerInfo[playerid][NombreTemporal], 128,"%s",PlayerName(playerid));
		TextDrawShowForPlayer(playerid, CN);
		TextDrawShowForPlayer(playerid, CN2);
		TextDrawShowForPlayer(playerid, CN3);
		TextDrawShowForPlayer(playerid, CN4);
		GetPlayerIp(playerid, PlayerInfo[playerid][IP], 32);
		LoginTimer[playerid] = SetTimerEx("TimerLogin",segundos(SECONDS_TO_LOGIN),0,"d",playerid);
		new country[30],city[30];
		GetPlayerCountry(playerid, country, sizeof(country));
		GetPlayerCity(playerid, city, sizeof(city));
		LimpiarCuenta(playerid);
		LCHAT[playerid] = SetTimerEx("TCHAT",1000,true,"d",playerid);
		new plname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, plname, sizeof(plname));
		if(!NameCheck(PlayerName(playerid)))
	    {
	        if(strcmp(PlayerName(playerid), ""OWNER"", false) != 0 && strcmp(PlayerName(playerid), ""OWNER2"", false) != 0)
			{
				NombreErroneo[playerid] = 1;
				ShowPlayerDialog(playerid, INMIGRACION, DIALOG_STYLE_MSGBOX, "Nombre inválido", "{DBED16}Departamento de inmigración:{FFFFFF} Tu nombre no es aceptable.\n{DBED16}Formato para el nombre:{FFFFFF} Nombre_Apellido\nPor favor, vuelve con un nombre válido.","Aceptar","");
	  			SetTimerEx("KickXD",1000,0,"d",playerid);
	    		return 1;
	    	}
		}
	    CheckPlayer(playerid);
		gettime(Hora, Minuto);
		SetPlayerTime(playerid,Hora,Minuto);
		LimpiarChat(playerid, 25, 1);

		QuitarPrendasx[playerid][0] = CreatePlayerTextDraw(playerid, 209.000000, 170.000000, "sd");
		PlayerTextDrawLetterSize(playerid, QuitarPrendasx[playerid][0], 0.270000, 8.800002);
		PlayerTextDrawTextSize(playerid, QuitarPrendasx[playerid][0], 87.000000, 93.000000);
		PlayerTextDrawAlignment(playerid, QuitarPrendasx[playerid][0], 2);
		PlayerTextDrawColor(playerid, QuitarPrendasx[playerid][0], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, QuitarPrendasx[playerid][0], 1);
		PlayerTextDrawBoxColor(playerid, QuitarPrendasx[playerid][0], 0x000000FF);
		PlayerTextDrawSetShadow(playerid, QuitarPrendasx[playerid][0], 0);
		PlayerTextDrawSetOutline(playerid, QuitarPrendasx[playerid][0], 0);
		PlayerTextDrawBackgroundColor(playerid, QuitarPrendasx[playerid][0], 0x0B0B0B99);
		PlayerTextDrawFont(playerid, QuitarPrendasx[playerid][0], 5);
		PlayerTextDrawSetProportional(playerid, QuitarPrendasx[playerid][0], 0);
		PlayerTextDrawSetSelectable(playerid, QuitarPrendasx[playerid][0], 1);
		PlayerTextDrawSetPreviewModel(playerid, QuitarPrendasx[playerid][0], 19382);
		PlayerTextDrawSetPreviewRot(playerid, QuitarPrendasx[playerid][0], 0.000000, 0.000000, 0.000000, 1.000000);

		QuitarPrendasx[playerid][1] = CreatePlayerTextDraw(playerid, 298.000000, 170.000000, "sd");
		PlayerTextDrawLetterSize(playerid, QuitarPrendasx[playerid][1], 0.270000, 8.800002);
		PlayerTextDrawTextSize(playerid, QuitarPrendasx[playerid][1], 87.000000, 93.000000);
		PlayerTextDrawAlignment(playerid, QuitarPrendasx[playerid][1], 2);
		PlayerTextDrawColor(playerid, QuitarPrendasx[playerid][1], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, QuitarPrendasx[playerid][1], 1);
		PlayerTextDrawBoxColor(playerid, QuitarPrendasx[playerid][1], 0x000000FF);
		PlayerTextDrawSetShadow(playerid, QuitarPrendasx[playerid][1], 0);
		PlayerTextDrawSetOutline(playerid, QuitarPrendasx[playerid][1], 0);
		PlayerTextDrawBackgroundColor(playerid, QuitarPrendasx[playerid][1], 0x0B0B0B99);
		PlayerTextDrawFont(playerid, QuitarPrendasx[playerid][1], 5);
		PlayerTextDrawSetProportional(playerid, QuitarPrendasx[playerid][1], 0);
		PlayerTextDrawSetSelectable(playerid, QuitarPrendasx[playerid][1], 1);
		PlayerTextDrawSetPreviewModel(playerid, QuitarPrendasx[playerid][1], 19382);
		PlayerTextDrawSetPreviewRot(playerid, QuitarPrendasx[playerid][1], 0.000000, 0.000000, 0.000000, 1.000000);

		PrendasAcomodar[playerid][0] = CreatePlayerTextDraw(playerid, 209.000000, 170.000000, "sd");
		PlayerTextDrawLetterSize(playerid, PrendasAcomodar[playerid][0], 0.270000, 8.800002);
		PlayerTextDrawTextSize(playerid, PrendasAcomodar[playerid][0], 87.000000, 93.000000);
		PlayerTextDrawAlignment(playerid, PrendasAcomodar[playerid][0], 2);
		PlayerTextDrawColor(playerid, PrendasAcomodar[playerid][0], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, PrendasAcomodar[playerid][0], 1);
		PlayerTextDrawBoxColor(playerid, PrendasAcomodar[playerid][0], 0x000000FF);
		PlayerTextDrawSetShadow(playerid, PrendasAcomodar[playerid][0], 0);
		PlayerTextDrawSetOutline(playerid, PrendasAcomodar[playerid][0], 0);
		PlayerTextDrawBackgroundColor(playerid, PrendasAcomodar[playerid][0], 0x0B0B0B99);
		PlayerTextDrawFont(playerid, PrendasAcomodar[playerid][0], 5);
		PlayerTextDrawSetProportional(playerid, PrendasAcomodar[playerid][0], 0);
		PlayerTextDrawSetSelectable(playerid, PrendasAcomodar[playerid][0], 1);
		PlayerTextDrawSetPreviewModel(playerid, PrendasAcomodar[playerid][0], 19382);
		PlayerTextDrawSetPreviewRot(playerid, PrendasAcomodar[playerid][0], 0.000000, 0.000000, 0.000000, 1.000000);

		PrendasAcomodar[playerid][1] = CreatePlayerTextDraw(playerid, 298.000000, 170.000000, "sd");
		PlayerTextDrawLetterSize(playerid, PrendasAcomodar[playerid][1], 0.270000, 8.800002);
		PlayerTextDrawTextSize(playerid, PrendasAcomodar[playerid][1], 87.000000, 93.000000);
		PlayerTextDrawAlignment(playerid, PrendasAcomodar[playerid][1], 2);
		PlayerTextDrawColor(playerid, PrendasAcomodar[playerid][1], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, PrendasAcomodar[playerid][1], 1);
		PlayerTextDrawBoxColor(playerid, PrendasAcomodar[playerid][1], 0x000000FF);
		PlayerTextDrawSetShadow(playerid, PrendasAcomodar[playerid][1], 0);
		PlayerTextDrawSetOutline(playerid, PrendasAcomodar[playerid][1], 0);
		PlayerTextDrawBackgroundColor(playerid, PrendasAcomodar[playerid][1], 0x0B0B0B99);
		PlayerTextDrawFont(playerid, PrendasAcomodar[playerid][1], 5);
		PlayerTextDrawSetProportional(playerid, PrendasAcomodar[playerid][1], 0);
		PlayerTextDrawSetSelectable(playerid, PrendasAcomodar[playerid][1], 1);
		PlayerTextDrawSetPreviewModel(playerid, PrendasAcomodar[playerid][1], 19382);
		PlayerTextDrawSetPreviewRot(playerid, PrendasAcomodar[playerid][1], 0.000000, 0.000000, 0.000000, 1.000000);

		LogroTitulo[playerid] = CreatePlayerTextDraw(playerid, 260.000000, 326.000000, "Sobre ruedas");
		PlayerTextDrawLetterSize(playerid, LogroTitulo[playerid], 0.559999, 1.700000);
		PlayerTextDrawTextSize(playerid, LogroTitulo[playerid], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, LogroTitulo[playerid], 0);
		PlayerTextDrawColor(playerid, LogroTitulo[playerid], 0xCACA56FF);
		PlayerTextDrawUseBox(playerid, LogroTitulo[playerid], 0);
		PlayerTextDrawBoxColor(playerid, LogroTitulo[playerid], 0x80808080);
		PlayerTextDrawSetShadow(playerid, LogroTitulo[playerid], 1);
		PlayerTextDrawSetOutline(playerid, LogroTitulo[playerid], 0);
		PlayerTextDrawBackgroundColor(playerid, LogroTitulo[playerid], 0x000000FF);
		PlayerTextDrawFont(playerid, LogroTitulo[playerid], 0);
		PlayerTextDrawSetProportional(playerid, LogroTitulo[playerid], 1);
		PlayerTextDrawSetSelectable(playerid, LogroTitulo[playerid], 0);

		LogroTexto1[playerid] = CreatePlayerTextDraw(playerid, 323.000000, 322.000000, "~n~_~n~_~n~Compra su primer vehiculo.~n~_");
		PlayerTextDrawLetterSize(playerid, LogroTexto1[playerid], 0.379999, 1.299999);
		PlayerTextDrawTextSize(playerid, LogroTexto1[playerid], 3.000000, 202.500000);
		PlayerTextDrawAlignment(playerid, LogroTexto1[playerid], 2);
		PlayerTextDrawColor(playerid, LogroTexto1[playerid], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, LogroTexto1[playerid], 1);
		PlayerTextDrawBoxColor(playerid, LogroTexto1[playerid], 0x000000FF);
		PlayerTextDrawSetShadow(playerid, LogroTexto1[playerid], 1);
		PlayerTextDrawSetOutline(playerid, LogroTexto1[playerid], 0);
		PlayerTextDrawBackgroundColor(playerid, LogroTexto1[playerid], 0x000000FF);
		PlayerTextDrawFont(playerid, LogroTexto1[playerid], 1);
		PlayerTextDrawSetProportional(playerid, LogroTexto1[playerid], 1);
		PlayerTextDrawSetSelectable(playerid, LogroTexto1[playerid], 0);

		LogroTexto2[playerid] = CreatePlayerTextDraw(playerid,324.182342, 371.583282, "descartable durante Halloween.");
		PlayerTextDrawLetterSize(playerid, LogroTexto2[playerid], 0.358168, 1.401664);
		PlayerTextDrawAlignment(playerid, LogroTexto2[playerid], 2);
		PlayerTextDrawColor(playerid, LogroTexto2[playerid], -1);
		PlayerTextDrawSetShadow(playerid, LogroTexto2[playerid], 0);
		PlayerTextDrawSetOutline(playerid, LogroTexto2[playerid], 1);
		PlayerTextDrawBackgroundColor(playerid, LogroTexto2[playerid], 51);
		PlayerTextDrawFont(playerid, LogroTexto2[playerid], 1);
		PlayerTextDrawSetProportional(playerid, LogroTexto2[playerid], 1);

		LogroLinea[playerid] = CreatePlayerTextDraw(playerid, 208.000000, 344.000000, ".");
		PlayerTextDrawLetterSize(playerid, LogroLinea[playerid], 22.180044, 0.600000);
		PlayerTextDrawTextSize(playerid, LogroLinea[playerid], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, LogroLinea[playerid], 0);
		PlayerTextDrawColor(playerid, LogroLinea[playerid], 0xCBB788FF);
		PlayerTextDrawUseBox(playerid, LogroLinea[playerid], 0);
		PlayerTextDrawBoxColor(playerid, LogroLinea[playerid], 0x80808080);
		PlayerTextDrawSetShadow(playerid, LogroLinea[playerid], 1);
		PlayerTextDrawSetOutline(playerid, LogroLinea[playerid], 0);
		PlayerTextDrawBackgroundColor(playerid, LogroLinea[playerid], 0x000000FF);
		PlayerTextDrawFont(playerid, LogroLinea[playerid], 1);
		PlayerTextDrawSetProportional(playerid, LogroLinea[playerid], 1);
		PlayerTextDrawSetSelectable(playerid, LogroLinea[playerid], 0);

		LogroRueda[playerid] = CreatePlayerTextDraw(playerid, 204.000000, 304.000000, "LD_BEAT:cring");
		PlayerTextDrawLetterSize(playerid, LogroRueda[playerid], 0.500000, 1.000000);
		PlayerTextDrawTextSize(playerid, LogroRueda[playerid], 60.000000, 60.000000);
		PlayerTextDrawAlignment(playerid, LogroRueda[playerid], 0);
		PlayerTextDrawColor(playerid, LogroRueda[playerid], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, LogroRueda[playerid], 1);
		PlayerTextDrawBoxColor(playerid, LogroRueda[playerid], 0x000000FF);
		PlayerTextDrawSetShadow(playerid, LogroRueda[playerid], 1);
		PlayerTextDrawSetOutline(playerid, LogroRueda[playerid], 0);
		PlayerTextDrawBackgroundColor(playerid, LogroRueda[playerid], 0x00000000);
		PlayerTextDrawFont(playerid, LogroRueda[playerid], 4);
		PlayerTextDrawSetProportional(playerid, LogroRueda[playerid], 1);
		PlayerTextDrawSetSelectable(playerid, LogroRueda[playerid], 0);

		LogroNumero[playerid] = CreatePlayerTextDraw(playerid, 234.000000, 326.000000, "10");
		PlayerTextDrawLetterSize(playerid, LogroNumero[playerid], 0.409999, 1.700000);
		PlayerTextDrawTextSize(playerid, LogroNumero[playerid], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, LogroNumero[playerid], 2);
		PlayerTextDrawColor(playerid, LogroNumero[playerid], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, LogroNumero[playerid], 0);
		PlayerTextDrawBoxColor(playerid, LogroNumero[playerid], 0x80808080);
		PlayerTextDrawSetShadow(playerid, LogroNumero[playerid], 1);
		PlayerTextDrawSetOutline(playerid, LogroNumero[playerid], 0);
		PlayerTextDrawBackgroundColor(playerid, LogroNumero[playerid], 0x000000FF);
		PlayerTextDrawFont(playerid, LogroNumero[playerid], 1);
		PlayerTextDrawSetProportional(playerid, LogroNumero[playerid], 1);
		PlayerTextDrawSetSelectable(playerid, LogroNumero[playerid], 0);

		UsarPrendaO[playerid][0] = CreatePlayerTextDraw(playerid,209.000000, 170.000000, "sd"); //prenda 1
		PlayerTextDrawLetterSize(playerid, UsarPrendaO[playerid][0], 0.270000, 8.800002);
		PlayerTextDrawTextSize(playerid, UsarPrendaO[playerid][0], 87.000000, 93.000000);
		PlayerTextDrawAlignment(playerid, UsarPrendaO[playerid][0], 2);
		PlayerTextDrawColor(playerid, UsarPrendaO[playerid][0], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, UsarPrendaO[playerid][0], 1);
		PlayerTextDrawBoxColor(playerid, UsarPrendaO[playerid][0], 0x000000FF);
		PlayerTextDrawSetShadow(playerid, UsarPrendaO[playerid][0], 0);
		PlayerTextDrawSetOutline(playerid, UsarPrendaO[playerid][0], 0);
		PlayerTextDrawBackgroundColor(playerid, UsarPrendaO[playerid][0], 0x0B0B0B99);
		PlayerTextDrawFont(playerid, UsarPrendaO[playerid][0], 5);
		PlayerTextDrawSetProportional(playerid, UsarPrendaO[playerid][0], 0);
		PlayerTextDrawSetSelectable(playerid, UsarPrendaO[playerid][0], 1);
		PlayerTextDrawSetPreviewModel(playerid, UsarPrendaO[playerid][0], 19382);
		PlayerTextDrawSetPreviewRot(playerid, UsarPrendaO[playerid][0], 0.000000, 0.000000, 0.000000, 1.000000);

		UsarPrendaO[playerid][1] = CreatePlayerTextDraw(playerid,298.000000, 170.000000, "sd"); //prenda 2
		PlayerTextDrawLetterSize(playerid, UsarPrendaO[playerid][1], 0.270000, 8.800002);
		PlayerTextDrawTextSize(playerid, UsarPrendaO[playerid][1], 87.000000, 93.000000);
		PlayerTextDrawAlignment(playerid, UsarPrendaO[playerid][1], 2);
		PlayerTextDrawColor(playerid, UsarPrendaO[playerid][1], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, UsarPrendaO[playerid][1], 1);
		PlayerTextDrawBoxColor(playerid, UsarPrendaO[playerid][1], 0x000000FF);
		PlayerTextDrawSetShadow(playerid, UsarPrendaO[playerid][1], 0);
		PlayerTextDrawSetOutline(playerid, UsarPrendaO[playerid][1], 0);
		PlayerTextDrawBackgroundColor(playerid, UsarPrendaO[playerid][1], 0x0B0B0B99);
		PlayerTextDrawFont(playerid, UsarPrendaO[playerid][1], 5);
		PlayerTextDrawSetProportional(playerid, UsarPrendaO[playerid][1], 0);
		PlayerTextDrawSetSelectable(playerid, UsarPrendaO[playerid][1], 1);
		PlayerTextDrawSetPreviewModel(playerid, UsarPrendaO[playerid][1], 19382);
		PlayerTextDrawSetPreviewRot(playerid, UsarPrendaO[playerid][1], 0.000000, 0.000000, 0.000000, 1.000000);

		UsarPrendaO[playerid][2] = CreatePlayerTextDraw(playerid,209.000000, 265.799988, "sd"); //prenda 3
		PlayerTextDrawLetterSize(playerid, UsarPrendaO[playerid][2], 0.270000, 8.800002);
		PlayerTextDrawTextSize(playerid, UsarPrendaO[playerid][2], 87.000000, 93.000000);
		PlayerTextDrawAlignment(playerid, UsarPrendaO[playerid][2], 2);
		PlayerTextDrawColor(playerid, UsarPrendaO[playerid][2], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, UsarPrendaO[playerid][2], 1);
		PlayerTextDrawBoxColor(playerid, UsarPrendaO[playerid][2], 0x000000FF);
		PlayerTextDrawSetShadow(playerid, UsarPrendaO[playerid][2], 0);
		PlayerTextDrawSetOutline(playerid, UsarPrendaO[playerid][2], 0);
		PlayerTextDrawBackgroundColor(playerid, UsarPrendaO[playerid][2], 0x0B0B0B99);
		PlayerTextDrawFont(playerid, UsarPrendaO[playerid][2], 5);
		PlayerTextDrawSetProportional(playerid, UsarPrendaO[playerid][2], 0);
		PlayerTextDrawSetSelectable(playerid, UsarPrendaO[playerid][2], 1);
		PlayerTextDrawSetPreviewModel(playerid, UsarPrendaO[playerid][2], 19382);
		PlayerTextDrawSetPreviewRot(playerid, UsarPrendaO[playerid][2], 0.000000, 0.000000, 0.000000, 1.000000);

		UsarPrendaO[playerid][3] = CreatePlayerTextDraw(playerid,298.000000, 265.799988, "sd"); //prenda 4
		PlayerTextDrawLetterSize(playerid, UsarPrendaO[playerid][3], 0.270000, 8.800002);
		PlayerTextDrawTextSize(playerid, UsarPrendaO[playerid][3], 87.000000, 93.000000);
		PlayerTextDrawAlignment(playerid, UsarPrendaO[playerid][3], 2);
		PlayerTextDrawColor(playerid, UsarPrendaO[playerid][3], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, UsarPrendaO[playerid][3], 1);
		PlayerTextDrawBoxColor(playerid, UsarPrendaO[playerid][3], 0x000000FF);
		PlayerTextDrawSetShadow(playerid, UsarPrendaO[playerid][3], 0);
		PlayerTextDrawSetOutline(playerid, UsarPrendaO[playerid][3], 0);
		PlayerTextDrawBackgroundColor(playerid, UsarPrendaO[playerid][3], 0x0B0B0B99);
		PlayerTextDrawFont(playerid, UsarPrendaO[playerid][3], 5);
		PlayerTextDrawSetProportional(playerid, UsarPrendaO[playerid][3], 0);
		PlayerTextDrawSetSelectable(playerid, UsarPrendaO[playerid][3], 1);
		PlayerTextDrawSetPreviewModel(playerid, UsarPrendaO[playerid][3], 19382);
		PlayerTextDrawSetPreviewRot(playerid, UsarPrendaO[playerid][3], 0.000000, 0.000000, 0.000000, 1.000000);

		MensajeBox[playerid] = CreatePlayerTextDraw(playerid, 554.000000, 130.000000, "Compraste un vehiculo, ahora comprale una traba de seguridad en algun ~g~24/7 ~w~para que no te lo roben.");
		PlayerTextDrawLetterSize(playerid, MensajeBox[playerid], 0.250000, 1.100000);
		PlayerTextDrawTextSize(playerid, MensajeBox[playerid], 0.000000, 140.000000);
		PlayerTextDrawAlignment(playerid, MensajeBox[playerid], 2);
		PlayerTextDrawColor(playerid, MensajeBox[playerid], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, MensajeBox[playerid], 1);
		PlayerTextDrawBoxColor(playerid, MensajeBox[playerid], 0x000000FF);
		PlayerTextDrawSetShadow(playerid, MensajeBox[playerid], 2);
		PlayerTextDrawSetOutline(playerid, MensajeBox[playerid], 1);
		PlayerTextDrawBackgroundColor(playerid, MensajeBox[playerid], 0x080808FF);
		PlayerTextDrawFont(playerid, MensajeBox[playerid], 1);
		PlayerTextDrawSetProportional(playerid, MensajeBox[playerid], 1);
		PlayerTextDrawSetSelectable(playerid, MensajeBox[playerid], 0);

		RoboCasas[playerid][0] = CreatePlayerTextDraw(playerid, 209.000000, 170.000000, "sd");
		PlayerTextDrawLetterSize(playerid, RoboCasas[playerid][0], 0.200000, 8.000002);
		PlayerTextDrawTextSize(playerid, RoboCasas[playerid][0], 87.000000, 93.000000);
		PlayerTextDrawAlignment(playerid, RoboCasas[playerid][0], 2);
		PlayerTextDrawColor(playerid, RoboCasas[playerid][0], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, RoboCasas[playerid][0], 1);
		PlayerTextDrawBoxColor(playerid, RoboCasas[playerid][0], 0x000000FF);
		PlayerTextDrawSetShadow(playerid, RoboCasas[playerid][0], 0);
		PlayerTextDrawSetOutline(playerid, RoboCasas[playerid][0], 0);
		PlayerTextDrawBackgroundColor(playerid, RoboCasas[playerid][0], 0x0B0B0B99);
		PlayerTextDrawFont(playerid, RoboCasas[playerid][0], 5);
		PlayerTextDrawSetProportional(playerid, RoboCasas[playerid][0], 0);
		PlayerTextDrawSetSelectable(playerid, RoboCasas[playerid][0], 1);
		PlayerTextDrawSetPreviewModel(playerid, RoboCasas[playerid][0], 1498);
		PlayerTextDrawSetPreviewRot(playerid, RoboCasas[playerid][0], 0.000000, 0.000000, 0.000000, 100.000000);

		RoboCasas[playerid][1] = CreatePlayerTextDraw(playerid, 298.000000, 170.000000, "sd");
		PlayerTextDrawLetterSize(playerid, RoboCasas[playerid][1], 0.200000, 8.000002);
		PlayerTextDrawTextSize(playerid, RoboCasas[playerid][1], 87.000000, 93.000000);
		PlayerTextDrawAlignment(playerid, RoboCasas[playerid][1], 2);
		PlayerTextDrawColor(playerid, RoboCasas[playerid][1], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, RoboCasas[playerid][1], 1);
		PlayerTextDrawBoxColor(playerid, RoboCasas[playerid][1], 0x000000FF);
		PlayerTextDrawSetShadow(playerid, RoboCasas[playerid][1], 0);
		PlayerTextDrawSetOutline(playerid, RoboCasas[playerid][1], 0);
		PlayerTextDrawBackgroundColor(playerid, RoboCasas[playerid][1], 0x0B0B0B99);
		PlayerTextDrawFont(playerid, RoboCasas[playerid][1], 5);
		PlayerTextDrawSetProportional(playerid, RoboCasas[playerid][1], 0);
		PlayerTextDrawSetSelectable(playerid, RoboCasas[playerid][1], 1);
		PlayerTextDrawSetPreviewModel(playerid, RoboCasas[playerid][1], 1498);
		PlayerTextDrawSetPreviewRot(playerid, RoboCasas[playerid][1], 0.000000, 0.000000, 0.000000, 100.000000);

		RoboCasas[playerid][2] = CreatePlayerTextDraw(playerid, 209.000000, 265.799988, "sd");
		PlayerTextDrawLetterSize(playerid, RoboCasas[playerid][2], 0.200000, 8.000002);
		PlayerTextDrawTextSize(playerid, RoboCasas[playerid][2], 87.000000, 93.000000);
		PlayerTextDrawAlignment(playerid, RoboCasas[playerid][2], 2);
		PlayerTextDrawColor(playerid, RoboCasas[playerid][2], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, RoboCasas[playerid][2], 1);
		PlayerTextDrawBoxColor(playerid, RoboCasas[playerid][2], 0x000000FF);
		PlayerTextDrawSetShadow(playerid, RoboCasas[playerid][2], 0);
		PlayerTextDrawSetOutline(playerid, RoboCasas[playerid][2], 0);
		PlayerTextDrawBackgroundColor(playerid, RoboCasas[playerid][2], 0x0B0B0B99);
		PlayerTextDrawFont(playerid, RoboCasas[playerid][2], 5);
		PlayerTextDrawSetProportional(playerid, RoboCasas[playerid][2], 0);
		PlayerTextDrawSetSelectable(playerid, RoboCasas[playerid][2], 1);
		PlayerTextDrawSetPreviewModel(playerid, RoboCasas[playerid][2], 1498);
		PlayerTextDrawSetPreviewRot(playerid, RoboCasas[playerid][2], 0.000000, 0.000000, 0.000000, 100.000000);

		RoboCasas[playerid][3] = CreatePlayerTextDraw(playerid, 298.000000, 265.799988, "sd");
		PlayerTextDrawLetterSize(playerid, RoboCasas[playerid][3], 0.270000, 8.800002);
		PlayerTextDrawTextSize(playerid, RoboCasas[playerid][3], 87.000000, 93.000000);
		PlayerTextDrawAlignment(playerid, RoboCasas[playerid][3], 2);
		PlayerTextDrawColor(playerid, RoboCasas[playerid][3], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, RoboCasas[playerid][3], 1);
		PlayerTextDrawBoxColor(playerid, RoboCasas[playerid][3], 0x000000FF);
		PlayerTextDrawSetShadow(playerid, RoboCasas[playerid][3], 0);
		PlayerTextDrawSetOutline(playerid, RoboCasas[playerid][3], 0);
		PlayerTextDrawBackgroundColor(playerid, RoboCasas[playerid][3], 0x0B0B0B99);
		PlayerTextDrawFont(playerid, RoboCasas[playerid][3], 5);
		PlayerTextDrawSetProportional(playerid, RoboCasas[playerid][3], 0);
		PlayerTextDrawSetSelectable(playerid, RoboCasas[playerid][3], 1);
		PlayerTextDrawSetPreviewModel(playerid, RoboCasas[playerid][3], 1498);
		PlayerTextDrawSetPreviewRot(playerid, RoboCasas[playerid][3], 0.000000, 0.000000, 0.000000, 1.000000);

		Login[playerid][0] = CreatePlayerTextDraw(playerid, 8.000000, 274.000000, "_");
		PlayerTextDrawLetterSize(playerid, Login[playerid][0], 0.500000, 3.599999);
		PlayerTextDrawTextSize(playerid, Login[playerid][0], 166.000000, 0.000000);
		PlayerTextDrawAlignment(playerid, Login[playerid][0], 0);
		PlayerTextDrawColor(playerid, Login[playerid][0], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, Login[playerid][0], 1);
		PlayerTextDrawBoxColor(playerid, Login[playerid][0], 0x00000099);
		PlayerTextDrawSetShadow(playerid, Login[playerid][0], 1);
		PlayerTextDrawSetOutline(playerid, Login[playerid][0], 0);
		PlayerTextDrawBackgroundColor(playerid, Login[playerid][0], 0x00000099);
		PlayerTextDrawFont(playerid, Login[playerid][0], 1);
		PlayerTextDrawSetProportional(playerid, Login[playerid][0], 1);
		PlayerTextDrawSetSelectable(playerid, Login[playerid][0], 0);

		Login[playerid][1] = CreatePlayerTextDraw(playerid, 7.000000, 273.000000, "_");
		PlayerTextDrawLetterSize(playerid, Login[playerid][1], 0.500000, 3.850000);
		PlayerTextDrawTextSize(playerid, Login[playerid][1], 167.000000, 0.000000);
		PlayerTextDrawAlignment(playerid, Login[playerid][1], 0);
		PlayerTextDrawColor(playerid, Login[playerid][1], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, Login[playerid][1], 1);
		PlayerTextDrawBoxColor(playerid, Login[playerid][1], 0x00000099);
		PlayerTextDrawSetShadow(playerid, Login[playerid][1], 1);
		PlayerTextDrawSetOutline(playerid, Login[playerid][1], 0);
		PlayerTextDrawBackgroundColor(playerid, Login[playerid][1], 0x00000000);
		PlayerTextDrawFont(playerid, Login[playerid][1], 1);
		PlayerTextDrawSetProportional(playerid, Login[playerid][1], 1);
		PlayerTextDrawSetSelectable(playerid, Login[playerid][1], 0);

		Login[playerid][2] = CreatePlayerTextDraw(playerid, 158.000000, 297.000000, "~>~ SE HA CONECTADO");
		PlayerTextDrawLetterSize(playerid, Login[playerid][2], 0.180000, 0.899999);
		PlayerTextDrawTextSize(playerid, Login[playerid][2], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, Login[playerid][2], 3);
		PlayerTextDrawColor(playerid, Login[playerid][2], 0x70D00090);
		PlayerTextDrawUseBox(playerid, Login[playerid][2], 0);
		PlayerTextDrawBoxColor(playerid, Login[playerid][2], 0x80808080);
		PlayerTextDrawSetShadow(playerid, Login[playerid][2], 1);
		PlayerTextDrawSetOutline(playerid, Login[playerid][2], 0);
		PlayerTextDrawBackgroundColor(playerid, Login[playerid][2], 0x000000FF);
		PlayerTextDrawFont(playerid, Login[playerid][2], 2);
		PlayerTextDrawSetProportional(playerid, Login[playerid][2], 1);
		PlayerTextDrawSetSelectable(playerid, Login[playerid][2], 0);

		Login[playerid][3] = CreatePlayerTextDraw(playerid, 2.000000, 273.000000, "_");
		PlayerTextDrawLetterSize(playerid, Login[playerid][3], 0.500000, 2.899999);
		PlayerTextDrawTextSize(playerid, Login[playerid][3], 35.000000, 35.000000);
		PlayerTextDrawAlignment(playerid, Login[playerid][3], 0);
		PlayerTextDrawColor(playerid, Login[playerid][3], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, Login[playerid][3], 1);
		PlayerTextDrawBoxColor(playerid, Login[playerid][3], 0x00000000);
		PlayerTextDrawSetShadow(playerid, Login[playerid][3], 1);
		PlayerTextDrawSetOutline(playerid, Login[playerid][3], 0);
		PlayerTextDrawBackgroundColor(playerid, Login[playerid][3], 0x00000000);
		PlayerTextDrawFont(playerid, Login[playerid][3], 5);
		PlayerTextDrawSetProportional(playerid, Login[playerid][3], 1);
		PlayerTextDrawSetSelectable(playerid, Login[playerid][3], 0);
		PlayerTextDrawSetPreviewModel(playerid, Login[playerid][3], 4);
		PlayerTextDrawSetPreviewRot(playerid, Login[playerid][3], 0.000000, 0.000000, 20.000000, 1.000000);

		Login[playerid][4] = CreatePlayerTextDraw(playerid, 30.000000, 273.000000, "Edward_Montana");
		PlayerTextDrawLetterSize(playerid, Login[playerid][4], 0.559999, 2.100000);
		PlayerTextDrawTextSize(playerid, Login[playerid][4], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, Login[playerid][4], 1);
		PlayerTextDrawColor(playerid, Login[playerid][4], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, Login[playerid][4], 0);
		PlayerTextDrawBoxColor(playerid, Login[playerid][4], 0x80808080);
		PlayerTextDrawSetShadow(playerid, Login[playerid][4], 1);
		PlayerTextDrawSetOutline(playerid, Login[playerid][4], 0);
		PlayerTextDrawBackgroundColor(playerid, Login[playerid][4], 0x000000FF);
		PlayerTextDrawFont(playerid, Login[playerid][4], 0);
		PlayerTextDrawSetProportional(playerid, Login[playerid][4], 1);
		PlayerTextDrawSetSelectable(playerid, Login[playerid][4], 0);

		LineasPutiNivel[playerid] = CreatePlayerTextDraw(playerid,228.000000, 386.000000, "------------------------------");
		PlayerTextDrawLetterSize(playerid, LineasPutiNivel[playerid], 0.439999, 2.299999);
		PlayerTextDrawTextSize(playerid, LineasPutiNivel[playerid], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, LineasPutiNivel[playerid], 0);
		PlayerTextDrawColor(playerid, LineasPutiNivel[playerid], 0x5C5C5CFF);
		PlayerTextDrawUseBox(playerid, LineasPutiNivel[playerid], 0);
		PlayerTextDrawBoxColor(playerid, LineasPutiNivel[playerid], 0x80808080);
		PlayerTextDrawSetShadow(playerid, LineasPutiNivel[playerid], 1);
		PlayerTextDrawSetOutline(playerid, LineasPutiNivel[playerid], 0);
		PlayerTextDrawBackgroundColor(playerid, LineasPutiNivel[playerid], 0x000000FF);
		PlayerTextDrawFont(playerid, LineasPutiNivel[playerid], 1);
		PlayerTextDrawSetProportional(playerid, LineasPutiNivel[playerid], 1);
		PlayerTextDrawSetSelectable(playerid, LineasPutiNivel[playerid], 0);

		NewPlayerr[playerid] = CreatePlayerTextDraw(playerid, 322.000000, 401.000000, "Pulsa la tecla ~b~T~w~ para hablar o ingresar ~y~comandos~w~.");
		PlayerTextDrawLetterSize(playerid, NewPlayerr[playerid], 0.319999, 1.300000);
		PlayerTextDrawTextSize(playerid, NewPlayerr[playerid], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, NewPlayerr[playerid], 2);
		PlayerTextDrawColor(playerid, NewPlayerr[playerid], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, NewPlayerr[playerid], 0);
		PlayerTextDrawBoxColor(playerid, NewPlayerr[playerid], 0x80808080);
		PlayerTextDrawSetShadow(playerid, NewPlayerr[playerid], 1);
		PlayerTextDrawSetOutline(playerid, NewPlayerr[playerid], 0);
		PlayerTextDrawBackgroundColor(playerid, NewPlayerr[playerid], 0x000000FF);
		PlayerTextDrawFont(playerid, NewPlayerr[playerid], 1);
		PlayerTextDrawSetProportional(playerid, NewPlayerr[playerid], 1);
		PlayerTextDrawSetSelectable(playerid, NewPlayerr[playerid], 0);

		ContadorAsalto[playerid] = CreatePlayerTextDraw(playerid, 322.000000, 419.000000, "00:00");
		PlayerTextDrawLetterSize(playerid, ContadorAsalto[playerid], 0.449999, 2.299998);
		PlayerTextDrawTextSize(playerid, ContadorAsalto[playerid], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, ContadorAsalto[playerid], 2);
		PlayerTextDrawColor(playerid, ContadorAsalto[playerid], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, ContadorAsalto[playerid], 0);
		PlayerTextDrawBoxColor(playerid, ContadorAsalto[playerid], 0x80808080);
		PlayerTextDrawSetShadow(playerid, ContadorAsalto[playerid], 2);
		PlayerTextDrawSetOutline(playerid, ContadorAsalto[playerid], 1);
		PlayerTextDrawBackgroundColor(playerid, ContadorAsalto[playerid], 0x000000FF);
		PlayerTextDrawFont(playerid, ContadorAsalto[playerid], 2);
		PlayerTextDrawSetProportional(playerid, ContadorAsalto[playerid], 1);
		PlayerTextDrawSetSelectable(playerid, ContadorAsalto[playerid], 0);

		MensajeAsalto[playerid][0] = CreatePlayerTextDraw(playerid,130.000000, 394.000000, "l");
		PlayerTextDrawLetterSize(playerid, MensajeAsalto[playerid][0], 44.499886, 2.799998);
		PlayerTextDrawTextSize(playerid, MensajeAsalto[playerid][0], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, MensajeAsalto[playerid][0], 0);
		PlayerTextDrawColor(playerid, MensajeAsalto[playerid][0], 0x00000020);
		PlayerTextDrawUseBox(playerid, MensajeAsalto[playerid][0], 0);
		PlayerTextDrawBoxColor(playerid, MensajeAsalto[playerid][0], 0x80808080);
		PlayerTextDrawSetShadow(playerid, MensajeAsalto[playerid][0], 0);
		PlayerTextDrawSetOutline(playerid, MensajeAsalto[playerid][0], 0);
		PlayerTextDrawBackgroundColor(playerid, MensajeAsalto[playerid][0], 0x000000FF);
		PlayerTextDrawFont(playerid, MensajeAsalto[playerid][0], 1);
		PlayerTextDrawSetProportional(playerid, MensajeAsalto[playerid][0], 1);
		PlayerTextDrawSetSelectable(playerid, MensajeAsalto[playerid][0], 0);

		MensajeAsalto[playerid][1] = CreatePlayerTextDraw(playerid, 322.000000, 401.000000, "TEXTO POR JUGADOR");
		PlayerTextDrawLetterSize(playerid, MensajeAsalto[playerid][1], 0.319999, 1.300000);
		PlayerTextDrawTextSize(playerid, MensajeAsalto[playerid][1], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, MensajeAsalto[playerid][1], 2);
		PlayerTextDrawColor(playerid, MensajeAsalto[playerid][1], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, MensajeAsalto[playerid][1], 0);
		PlayerTextDrawBoxColor(playerid, MensajeAsalto[playerid][1], 0x80808080);
		PlayerTextDrawSetShadow(playerid, MensajeAsalto[playerid][1], 1);
		PlayerTextDrawSetOutline(playerid, MensajeAsalto[playerid][1], 0);
		PlayerTextDrawBackgroundColor(playerid, MensajeAsalto[playerid][1], 0x000000FF);
		PlayerTextDrawFont(playerid, MensajeAsalto[playerid][1], 1);
		PlayerTextDrawSetProportional(playerid, MensajeAsalto[playerid][1], 1);
		PlayerTextDrawSetSelectable(playerid, MensajeAsalto[playerid][1], 0);

		AfinidadconX[playerid] = CreatePlayerTextDraw(playerid, 214.000000, 368.000000, "Afinidad con Colegiala");
		PlayerTextDrawLetterSize(playerid, AfinidadconX[playerid], 0.440000, 1.400000);
		PlayerTextDrawTextSize(playerid, AfinidadconX[playerid], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, AfinidadconX[playerid], 0);
		PlayerTextDrawColor(playerid, AfinidadconX[playerid], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, AfinidadconX[playerid], 0);
		PlayerTextDrawBoxColor(playerid, AfinidadconX[playerid], 0x80808080);
		PlayerTextDrawSetShadow(playerid, AfinidadconX[playerid], 1);
		PlayerTextDrawSetOutline(playerid, AfinidadconX[playerid], 0);
		PlayerTextDrawBackgroundColor(playerid, AfinidadconX[playerid], 0x000000FF);
		PlayerTextDrawFont(playerid, AfinidadconX[playerid], 0);
		PlayerTextDrawSetProportional(playerid, AfinidadconX[playerid], 1);
		PlayerTextDrawSetSelectable(playerid, AfinidadconX[playerid], 0);

		Radly[playerid] = CreatePlayerTextDraw(playerid, 228.000000, 386.000000, "-");
		PlayerTextDrawLetterSize(playerid, Radly[playerid], 0.440000, 2.300000);
		PlayerTextDrawTextSize(playerid, Radly[playerid], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, Radly[playerid], 0);
		PlayerTextDrawColor(playerid, Radly[playerid], 0xFF00FFFF);
		PlayerTextDrawUseBox(playerid, Radly[playerid], 0);
		PlayerTextDrawBoxColor(playerid, Radly[playerid], 0x80808080);
		PlayerTextDrawSetShadow(playerid, Radly[playerid], 1);
		PlayerTextDrawSetOutline(playerid, Radly[playerid], 0);
		PlayerTextDrawBackgroundColor(playerid, Radly[playerid], 0x000000FF);
		PlayerTextDrawFont(playerid, Radly[playerid], 1);
		PlayerTextDrawSetProportional(playerid, Radly[playerid], 1);
		PlayerTextDrawSetSelectable(playerid, Radly[playerid], 0);

		CarreraT[playerid][0] = CreatePlayerTextDraw(playerid,50.625000, 341.833343, "Vuelta: 0/5");
		PlayerTextDrawLetterSize(playerid, CarreraT[playerid][0], 0.285624, 0.795000);
		PlayerTextDrawAlignment(playerid, CarreraT[playerid][0], 1);
		PlayerTextDrawColor(playerid, CarreraT[playerid][0], -1);
		PlayerTextDrawSetShadow(playerid, CarreraT[playerid][0], 0);
		PlayerTextDrawSetOutline(playerid, CarreraT[playerid][0], 1);
		PlayerTextDrawBackgroundColor(playerid, CarreraT[playerid][0], 51);
		PlayerTextDrawFont(playerid, CarreraT[playerid][0], 2);
		PlayerTextDrawSetProportional(playerid, CarreraT[playerid][0], 1);

		CarreraT[playerid][1] = CreatePlayerTextDraw(playerid,71.250000, 368.666687, "0/0");
		PlayerTextDrawLetterSize(playerid, CarreraT[playerid][1], 0.406249, 3.408334);
		PlayerTextDrawAlignment(playerid, CarreraT[playerid][1], 1);
		PlayerTextDrawColor(playerid, CarreraT[playerid][1], -1);
		PlayerTextDrawSetShadow(playerid, CarreraT[playerid][1], 0);
		PlayerTextDrawSetOutline(playerid, CarreraT[playerid][1], 1);
		PlayerTextDrawBackgroundColor(playerid, CarreraT[playerid][1], 51);
		PlayerTextDrawFont(playerid, CarreraT[playerid][1], 2);
		PlayerTextDrawSetProportional(playerid, CarreraT[playerid][1], 1);

		CarreraT[playerid][2] = CreatePlayerTextDraw(playerid,66.250000, 408.333251, "0:0");
		PlayerTextDrawLetterSize(playerid, CarreraT[playerid][2], 0.531250, 1.250000);
		PlayerTextDrawAlignment(playerid, CarreraT[playerid][2], 1);
		PlayerTextDrawColor(playerid, CarreraT[playerid][2], -1);
		PlayerTextDrawSetShadow(playerid, CarreraT[playerid][2], 0);
		PlayerTextDrawSetOutline(playerid, CarreraT[playerid][2], 2);
		PlayerTextDrawBackgroundColor(playerid, CarreraT[playerid][2], 51);
		PlayerTextDrawFont(playerid, CarreraT[playerid][2], 2);
		PlayerTextDrawSetProportional(playerid, CarreraT[playerid][2], 1);

		ContadorVelocimetro[playerid][0] = CreatePlayerTextDraw(playerid, 583.000000, 400.000000, "0");
		PlayerTextDrawLetterSize(playerid, ContadorVelocimetro[playerid][0], 0.529999, 1.600000);
		PlayerTextDrawTextSize(playerid, ContadorVelocimetro[playerid][0], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, ContadorVelocimetro[playerid][0], 3);
		PlayerTextDrawColor(playerid, ContadorVelocimetro[playerid][0], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, ContadorVelocimetro[playerid][0], 0);
		PlayerTextDrawBoxColor(playerid, ContadorVelocimetro[playerid][0], 0x80808080);
		PlayerTextDrawSetShadow(playerid, ContadorVelocimetro[playerid][0], 1);
		PlayerTextDrawSetOutline(playerid, ContadorVelocimetro[playerid][0], 0);
		PlayerTextDrawBackgroundColor(playerid, ContadorVelocimetro[playerid][0], 0x000000FF);
		PlayerTextDrawFont(playerid, ContadorVelocimetro[playerid][0], 1);
		PlayerTextDrawSetProportional(playerid, ContadorVelocimetro[playerid][0], 1);
		PlayerTextDrawSetSelectable(playerid, ContadorVelocimetro[playerid][0], 0);

		ContadorVelocimetro[playerid][1] = CreatePlayerTextDraw(playerid, 580.000000, 353.000000, "0/120");
		PlayerTextDrawLetterSize(playerid, ContadorVelocimetro[playerid][1], 0.500000, 1.600000);
		PlayerTextDrawTextSize(playerid, ContadorVelocimetro[playerid][1], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, ContadorVelocimetro[playerid][1], 2);
		PlayerTextDrawColor(playerid, ContadorVelocimetro[playerid][1], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, ContadorVelocimetro[playerid][1], 0);
		PlayerTextDrawBoxColor(playerid, ContadorVelocimetro[playerid][1], 0x80808080);
		PlayerTextDrawSetShadow(playerid, ContadorVelocimetro[playerid][1], 1);
		PlayerTextDrawSetOutline(playerid, ContadorVelocimetro[playerid][1], 0);
		PlayerTextDrawBackgroundColor(playerid, ContadorVelocimetro[playerid][1], 0x000000FF);
		PlayerTextDrawFont(playerid, ContadorVelocimetro[playerid][1], 1);
		PlayerTextDrawSetProportional(playerid, ContadorVelocimetro[playerid][1], 1);
		PlayerTextDrawSetSelectable(playerid, ContadorVelocimetro[playerid][1], 0);

		CheckPlayer(playerid);
		gettime(Hora, Minuto);
		SetPlayerTime(playerid,Hora,Minuto);
		return 1;
    }
    return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
    if(IsPlayerNPC(playerid))
	{
        new npcname[MAX_PLAYER_NAME];
        GetPlayerName(playerid, npcname, sizeof(npcname));
		if(!strcmp(npcname, ".Motorman1"))  ConnectNPC(".Motorman1",".Motorman1");
		if(!strcmp(npcname, ".Motorman2"))  ConnectNPC(".Motorman2",".Motorman2");
		if(!strcmp(npcname, ".Motorman3"))  ConnectNPC(".Motorman3",".Motorman3");
		if(!strcmp(npcname, ".Motorman4"))  ConnectNPC(".Motorman4",".Motorman4");
		if(!strcmp(npcname, ".Motorman5"))  ConnectNPC(".Motorman5",".Motorman5");
		if(!strcmp(npcname, ".Sergio"   ))  ConnectNPC(".Sergio",".Sergio");
		if(!strcmp(npcname, ".Miguel"))  	ConnectNPC(".Miguel",".Miguel");
	   	if(!strcmp(npcname, ".Marcelo"  ))  ConnectNPC(".Marcelo",".Marcelo");
    	if(!strcmp(npcname, ".Alejandro"))  ConnectNPC(".Alejandro",".Alejandro");
   		if(!strcmp(npcname, ".Ignacio"  ))  ConnectNPC(".Ignacio",".Ignacio");
		if(!strcmp(npcname, ".Hugo"     ))  ConnectNPC(".Hugo",".Hugo");
		if(!strcmp(npcname, ".HippePepe"))  ConnectNPC(".HippiePepe",".HippiePepe");
		if(!strcmp(npcname, ".Angelica" ))  ConnectNPC(".Angelica",".Angelica");
		if(!strcmp(npcname, ".Jorge"    ))  ConnectNPC(".Jorge",".Jorge");
		if(!strcmp(npcname, ".Camello1" ))  ConnectNPC(".Camello1",".Camello1");
		if(!strcmp(npcname, ".Mao"      ))  ConnectNPC(".Mao",".Mao");
		return 1;
	}
	KillTimer(ResetearYaMostro[playerid]);
    KillTimer(HCurando[playerid]);
	SetPlayerName(playerid, PlayerInfo[playerid][NombreTemporal]);
	SaveAccount(playerid);
	GuardarCuenta(playerid);
	QuitarSombreroH(playerid);
	if(IsPlayerInAnyVehicle(playerid))
	{
		new vrID = GetPlayerVehicleID(playerid);
		if(EmisoraEscuchando[vrID] != -1)
		{
			CabinasOcupadasEmisoras[EmisoraEscuchando[vrID]][2]--;
			for(new i=0; i <= MAX_CONECTADOS;i++)
			{
				if(IsPlayerInVehicle(i, vrID))
				{
					CabinasOcupadasEmisoras[EmisoraEscuchando[vrID]][2]--;
				}
			}
		}
		EmisoraEscuchando[vrID] = -1;
	}
	if(RopaMedi[playerid] == 1) MEDICOSON --;
	if(Mats1[playerid] == 1) DarDinero(playerid,1250);
	if(Mats2[playerid] == 1) DarDinero(playerid,1250);
	if(Mats3[playerid] == 1) DarDinero(playerid,6250);
	if(Frecuencia[playerid] == 1) Frencuena1p -= 1;
	if(Frecuencia[playerid] == 2) Frencuena2p -= 1;
	if(Frecuencia[playerid] == 3) Frencuena3p -= 1;
	if(Frecuencia[playerid] == 4) Frencuena4p -= 1;
	if(Frecuencia[playerid] == 5) Frencuena5p -= 1;
	if(Frecuencia[playerid] == 6) Frencuena6p -= 1;
	if(Frecuencia[playerid] == 7) Frencuena7p -= 1;
	if(Frecuencia[playerid] == 8) Frencuena8p -= 1;
	if(TraeDinero[playerid] == 1)
	{
        for(new f = 0; f < MAX_FABRICAS; f++)
		{
		    if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda])
		    {
		        TraeDinero[playerid] = 0;
		        DarDineroFabrica(f,1000000);
		    }
        }
	}
	KillTimer(LoginTimer[playerid]);
	KillTimer(TM[playerid]);
	KillTimer(VerAutos[playerid]);
	KillTimer(TCV[playerid]);
	KillTimer(TCV2[playerid]);
	KillTimer(AntiCarHacks[playerid]);
	KillTimer(BaulPB[playerid]);
	KillTimer(llamadasonido1[playerid]);
	KillTimer(CLlamada[playerid]);
	KillTimer(llamadasonido2[playerid]);
	KillTimer(asd[playerid]);
	KillTimer(asdtren[playerid]);
	if(TieneEncargo[playerid] > 0) CancelarCriminal(playerid);
	if(Specteado[playerid] == 1)
	{
		foreach(Player,i)
		{
			if(SpecJugador[i] == playerid)
			{
				TogglePlayerSpectating(i,false);
			}
		}
	}

	DestroyPlayerProgressBar(playerid, Progressbar[playerid][Camionero]);
	DestroyPlayerProgressBar(playerid, Progressbar[playerid][Camionero]);
	DestroyPlayerProgressBar(playerid, Progressbar[playerid][Cosecha]);
	DestroyPlayerProgressBar(playerid, Progressbar[playerid][ReparandoBar]);
	DestroyPlayerProgressBar(playerid, Progressbar[playerid][Picar]);
	DestroyPlayerProgressBar(playerid, Progressbar[playerid][Velocimetro]);
	DestroyPlayerProgressBar(playerid, Progressbar[playerid][Combustible]);

	if(EnCarreras[playerid] > 0) SacarCarrera(playerid);
	for(new z=0; z<8; z++)
	{
	    TextDrawHideForPlayer(playerid, BoxCarrera[0]);
		TextDrawHideForPlayer(playerid, BoxCarrera[1]);
		TextDrawHideForPlayer(playerid, BoxCarrera[2]);
		TextDrawHideForPlayer(playerid, BoxCarrera[3]);
		TextDrawHideForPlayer(playerid, CarreraPosicion);
	}
	PlayerTextDrawHide(playerid, CarreraT[playerid][0]);
	PlayerTextDrawHide(playerid, CarreraT[playerid][1]);
	PlayerTextDrawHide(playerid, CarreraT[playerid][2]);
	if(GetPlayerScore(playerid) == 0) return 1;
	new pName2[50],stringo[128];
	if(Emisoras[playerid][TransEmisora] == 1)
	{
		CerrarEmisora(Emisoras[playerid][CabinaOcupada]);
		Emisoras[playerid][TransEmisora] = 0;
		Emisoras[playerid][CabinaOcupada] = -1;
	}
	for(new i = 0; i < MAX_REPORTS; i++)
	{
		if(Reports[i][ReportFrom] == playerid)
		{
			Reports[i][ReportFrom] = 999;
			Reports[i][BeingUsed] = 0;
		}
	}
	if(PlayerInfo[playerid][pCama] > 0)
	{
		Camas[PlayerInfo[playerid][pCama]-1][PlayerInfo[playerid][pVwCama]] = 0;
	}
	if(IsValidDynamicObject(Transportistas[playerid][Objeto1]))
	{
		DestroyDynamicObject(Transportistas[playerid][Objeto1]);
		Transportistas[playerid][Objeto1] = INVALID_OBJECT_ID;
	}
	if(IsValidDynamicObject(Transportistas[playerid][Objeto2]))
	{
		DestroyDynamicObject(Transportistas[playerid][Objeto2]);
		Transportistas[playerid][Objeto2] = INVALID_OBJECT_ID;
	}
	if(IsValidDynamicObject(Transportistas[playerid][Objeto3]))
	{
		DestroyDynamicObject(Transportistas[playerid][Objeto3]);
		Transportistas[playerid][Objeto3] = INVALID_OBJECT_ID;
	}
	new szMessage[200];
	switch (reason)
	{
		case 0:
		{
			format(szMessage, sizeof(szMessage), "%s(%d) se desconectó [Posible Crash]", PlayerName(playerid),playerid);
			ProxDetector(10.0, playerid, szMessage, COLOR_COMBATE,COLOR_COMBATE,COLOR_COMBATE,COLOR_COMBATE,COLOR_COMBATE);
		}
		case 1:
		{
			format(szMessage, sizeof(szMessage), "%s(%d) se desconectó [/q]", PlayerName(playerid),playerid);
			ProxDetector(10.0, playerid, szMessage, COLOR_COMBATE,COLOR_COMBATE,COLOR_COMBATE,COLOR_COMBATE,COLOR_COMBATE);
		}
		case 2:
		{
			format(szMessage, sizeof(szMessage), "%s(%d) se desconectó [Baneado o Kickeado]", PlayerName(playerid),playerid);
			ProxDetector(10.0, playerid, szMessage, COLOR_COMBATE,COLOR_COMBATE,COLOR_COMBATE,COLOR_COMBATE,COLOR_COMBATE);
		}
	}
	new adminx[570];
	format(adminx,sizeof(adminx),"--- %s (ID: %d) se desconectó con la IP: %s",PlayerName(playerid),playerid,PlayerIpEz[playerid]);
    MensajeAdmin(0xF6A000FF,adminx, ADMIN_LEVEL_BANEOS);
	if(EnCombate[playerid] == 1)
	{
		if(reason == 1)
		{
			if(NoQuitar[playerid] == 0 && PlayerInfo[playerid][pDuty] != 1)
			{
				GetPlayerName(playerid,pName2,50);
				QuitarArmas(playerid);
				format(stringo, 128, "%s(%d) perdió las armas por cerrar el juego en combate.",pName2,playerid);
				ProxDetector(15.0, playerid, stringo, COLOR_COMBATE,COLOR_COMBATE,COLOR_COMBATE,COLOR_COMBATE,COLOR_COMBATE);
				KillTimer(TimerCombate[playerid]);
			}
		}
	}
	new caller = PlayerInfo[playerid][MobileSub];
	GetPlayerName(caller, pName2, 50);
	if((IsPlayerConnected(caller) && caller != INVALID_PLAYER_ID)|| caller == 2540 || caller == 911)
	{
		if(caller < 50)
		SendClientMessage(caller,  -1, "Colgaron la llamada.");
		finllamada(caller);
		PlayerInfo[caller][MobileSub] = INVALID_PLAYER_ID;
		PlayerInfo[caller][Mobile] = INVALID_PLAYER_ID;
		PlayerInfo[playerid][MobileSub] = INVALID_PLAYER_ID;
		PlayerInfo[playerid][Mobile] = INVALID_PLAYER_ID;
		SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
		SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
	}
	PlayerInfo[playerid][MobileSub] = INVALID_PLAYER_ID;
	PlayerInfo[playerid][Mobile] = INVALID_PLAYER_ID;
	if(Manejando[playerid] == 1)
	{
		DarArmas(playerid);
	}
	for(new i=0;i<MAX_VEHICLES;i++)
	{
		if(Chofer[i] == playerid)
		{
			Chofer[i] = INVALID_PLAYER_ID;
			CamionCargado[i] = 0;
		}
	}
	HidePlayerProgressBar(playerid, Progressbar[playerid][Experiencia]);
	HidePlayerProgressBar(playerid, Progressbar[playerid][Sed]);
	HidePlayerProgressBar(playerid, Progressbar[playerid][Hambre]);
	KillTimer(TimerCheats[playerid]);
	DisablePlayerCheckpoint(playerid);

 	Luces[autos[playerid]] = 0;
	MotorAuto[autos[playerid]] = 0;

	Luces[autos2[playerid]] = 0;
	MotorAuto[autos2[playerid]] = 0;

	Luces[autos3[playerid]] = 0;
	MotorAuto[autos3[playerid]] = 0;

	Luces[autos4[playerid]] = 0;
	MotorAuto[autos4[playerid]] = 0;

	SaveAccount(playerid);
	LimpiarCuenta(playerid);
	return 1;
}
function CerrarIsla1()
{
	MoveDynamicObject(controls[8], 833.4200, -2963.8000, 11.7460-SPEED_CONTROLS, SPEED_CONTROLS, 0.00000, -90.00000, 0.00000);
	return 1;
}
function CerrarIsla2()
{
	MoveDynamicObject(controls[9], 833.4100, -2954.5200, 12.1000-SPEED_CONTROLS, SPEED_CONTROLS, 0.00000, 90.00000, 0.00000);
	return 1;
}

public BorrarDinero(id)
{
	DestroyDynamicPickup(id);
	return 1;
}

public ClearAnim(playerid)
{
	TimerDineroP2[playerid] = 0;
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	return 1;
}

public CerrarAviso(playerid)
{
	TextDrawHideForPlayer(playerid, Cuadroputi);
 	TextDrawHideForPlayer(playerid, Cuadroputi1);
	PlayerTextDrawHide(playerid, AfinidadconX[playerid]);
	PlayerTextDrawHide(playerid, LineasPutiNivel[playerid]);
	TextDrawHideForPlayer(playerid, PuticlubMedia);
	TextDrawHideForPlayer(playerid, PuticlubAlta);
	TextDrawHideForPlayer(playerid, FlechasArribaPuti);
	TextDrawHideForPlayer(playerid, FlechasArribaPuti2);
	PlayerTextDrawHide(playerid, Radly[playerid]);
	return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(newkeys & KEY_FIRE && GetPlayerWeapon(playerid) == 16)
    {
    	SetTimerEx("QuitarGranada",450,0,"d",playerid);
    }
    if((newkeys & KEY_FIRE) && (newkeys & KEY_CROUCH) || (newkeys & KEY_SPRINT) && (newkeys & KEY_FIRE) && (newkeys & KEY_CROUCH))
	{
	   	if(Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
		if(GetPlayerWeapon(playerid) == 24)
		{
			if(IsPlayerInAnyVehicle(playerid)) return 1;
			if(PlayerInfo[playerid][pAdmin] == 8) return 1;
			TogglePlayerControllable(playerid,0);
			SetTimerEx("DescongelarCBUG",2000,false,"d",playerid);
			SetPlayerArmedWeapon(playerid, 0);
		}
	}
	if(newkeys & KEY_CTRL_BACK)
 	{
 	    if(Muriendo[playerid] != 0) { MostrarBoxMedico(playerid); }
 	    Loop(f,MAX_FABRICAS)
 	    if(!IsPlayerInAnyVehicle(playerid))
 	    {
			if(Fabricas[f][pBanda] == PlayerInfo[playerid][pFaccion])
			{
				if(Fabricas[f][pInt] == GetPlayerInterior(playerid))
				{
				    if(IsPlayerInRangeOfPoint(playerid,2.0, -1995.5045,222.0777,1035.8162))
					{
					    switch(TieneCajaMeta[playerid])
					    {
					        case 0:
					        {
					            if(Fabricas[f][Almacen1] == 0) return 1;
					    		if(Fabricas[f][Almacen1] == 1) { DestroyDynamicObject(Fabricas[f][Meta1][0]); }
					    		else if(Fabricas[f][Almacen1] == 2) { DestroyDynamicObject(Fabricas[f][Meta1][1]); }
					    		Fabricas[f][Almacen1] --;
					    		GuardarCajaFabrica(playerid,f,1);
					    		LCaja(playerid);
					    		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
							}
							case 1:
							{
							    if(Fabricas[f][Almacen1] > 2) return 1;
							    if(Fabricas[f][Almacen1] == 2) return SendClientMessage(playerid,-1,"Esta estantería está llena.");
							    if(Fabricas[f][Almacen1] == 0) { Fabricas[f][Meta1][0] = CreateDynamicObject(1271, Cajas1[0][0], Cajas1[0][1], Cajas1[0][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]); }
					    		else if(Fabricas[f][Almacen1] == 1) { Fabricas[f][Meta1][1] = CreateDynamicObject(1271, Cajas1[1][0], Cajas1[1][1], Cajas1[1][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]); }
                                Fabricas[f][Almacen1] ++;
								GuardarCajaFabrica(playerid,f,0);
								DCaja(playerid);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
							}
                        }
					}
	                else if(IsPlayerInRangeOfPoint(playerid,2.0, -1999.6919,222.0572,1035.8162))
					{
					    switch(TieneCajaMeta[playerid])
					    {
					        case 0:
					        {
					            if(Fabricas[f][Almacen2] == 0) return 1;
					    		if(Fabricas[f][Almacen2] == 1) { DestroyDynamicObject(Fabricas[f][Meta2][0]); }
					    		else if(Fabricas[f][Almacen2] == 2) { DestroyDynamicObject(Fabricas[f][Meta2][1]); }
					    		Fabricas[f][Almacen2] --;
						    	GuardarCajaFabrica(playerid,f,1);
						    	LCaja(playerid);
						    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
							}
							case 1:
							{
							    if(Fabricas[f][Almacen2] > 2) return 1;
							    if(Fabricas[f][Almacen2] == 2) return SendClientMessage(playerid,-1,"Esta estantería está llena.");
							    if(Fabricas[f][Almacen2] == 0) { Fabricas[f][Meta2][0] = CreateDynamicObject(1271, Cajas2[0][0], Cajas2[0][1], Cajas2[0][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]); }
					    		else if(Fabricas[f][Almacen2] == 1) { Fabricas[f][Meta2][1] = CreateDynamicObject(1271, Cajas2[1][0], Cajas2[1][1], Cajas2[1][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]); }
                                Fabricas[f][Almacen2] ++;
								GuardarCajaFabrica(playerid,f,0);
								DCaja(playerid);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
							}
                        }
                    }
	                else if(IsPlayerInRangeOfPoint(playerid,2.0, -2003.9482,222.0583,1035.8162))
	                {
	                    switch(TieneCajaMeta[playerid])
					    {
					        case 0:
					        {
					            if(Fabricas[f][Almacen3] == 0) return 1;
					    		if(Fabricas[f][Almacen3] == 1) { DestroyDynamicObject(Fabricas[f][Meta3][0]); }
					    		else if(Fabricas[f][Almacen3] == 2) { DestroyDynamicObject(Fabricas[f][Meta3][1]); }
					    		Fabricas[f][Almacen3] --;
					    		GuardarCajaFabrica(playerid,f,1);
					    		LCaja(playerid);
					    		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
							}
							case 1:
							{
							    if(Fabricas[f][Almacen3] > 2) return 1;
							    if(Fabricas[f][Almacen3] == 2) return SendClientMessage(playerid,-1,"Esta estantería está llena.");
							    if(Fabricas[f][Almacen3] == 0) { Fabricas[f][Meta3][0] = CreateDynamicObject(1271, Cajas3[0][0], Cajas3[0][1], Cajas3[0][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]); }
					    		else if(Fabricas[f][Almacen3] == 1) { Fabricas[f][Meta3][1] = CreateDynamicObject(1271, Cajas3[1][0], Cajas3[1][1], Cajas3[1][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]); }
                                Fabricas[f][Almacen3] ++;
								GuardarCajaFabrica(playerid,f,0);
								DCaja(playerid);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
							}
                        }
                    }
	                else if(IsPlayerInRangeOfPoint(playerid,2.0, -2008.3027,222.0571,1035.8162))
	                {
	                    switch(TieneCajaMeta[playerid])
					    {
					        case 0:
					        {
					            if(Fabricas[f][Almacen4] == 0) return 1;
					    		if(Fabricas[f][Almacen4] == 1) { DestroyDynamicObject(Fabricas[f][Meta4][0]); }
					    		else if(Fabricas[f][Almacen4] == 2) { DestroyDynamicObject(Fabricas[f][Meta4][1]); }
					    		Fabricas[f][Almacen4] --;
                                GuardarCajaFabrica(playerid,f,1);
                                LCaja(playerid);
                                SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
							}
							case 1:
							{
							    if(Fabricas[f][Almacen4] > 2) return 1;
							    if(Fabricas[f][Almacen4] == 2) return SendClientMessage(playerid,-1,"Esta estantería está llena.");
							    if(Fabricas[f][Almacen4] == 0) { Fabricas[f][Meta4][0] = CreateDynamicObject(1271, Cajas4[0][0], Cajas4[0][1], Cajas4[0][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]); }
					    		else if(Fabricas[f][Almacen4] == 1) { Fabricas[f][Meta4][1] = CreateDynamicObject(1271, Cajas4[1][0], Cajas4[1][1], Cajas4[1][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]); }
                                Fabricas[f][Almacen4] ++;
								GuardarCajaFabrica(playerid,f,0);
								DCaja(playerid);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
							}
                        }
                    }
	                else if(IsPlayerInRangeOfPoint(playerid,2.0, -2012.3131,222.0612,1035.8225))
					{
					    switch(TieneCajaMeta[playerid])
					    {
					        case 0:
					        {
					            if(Fabricas[f][Almacen5] == 0) return 1;
					    		if(Fabricas[f][Almacen5] == 1) { DestroyDynamicObject(Fabricas[f][Meta5][0]); }
					    		else if(Fabricas[f][Almacen5] == 2) { DestroyDynamicObject(Fabricas[f][Meta5][1]); }
					    		Fabricas[f][Almacen5] --;
					    		GuardarCajaFabrica(playerid,f,1);
					    		LCaja(playerid);
					    		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
							}
							case 1:
							{
							    if(Fabricas[f][Almacen5] > 2) return 1;
							    if(Fabricas[f][Almacen5] == 2) return SendClientMessage(playerid,-1,"Esta estantería está llena.");
							    if(Fabricas[f][Almacen5] == 0) { Fabricas[f][Meta5][0] = CreateDynamicObject(1271, Cajas5[0][0], Cajas5[0][1], Cajas5[0][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]); }
					    		else if(Fabricas[f][Almacen5] == 1) { Fabricas[f][Meta5][1] = CreateDynamicObject(1271, Cajas5[1][0], Cajas5[1][1], Cajas5[1][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]); }
                                Fabricas[f][Almacen5] ++;
								GuardarCajaFabrica(playerid,f,0);
								DCaja(playerid);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
							}
                        }
                    }
	                else if(IsPlayerInRangeOfPoint(playerid,2.0, -2016.8007,222.0583,1035.8225))
	                {
	                    switch(TieneCajaMeta[playerid])
					    {
					        case 0:
					        {
					            if(Fabricas[f][Almacen6] == 0) return 1;
					    		if(Fabricas[f][Almacen6] == 1) { DestroyDynamicObject(Fabricas[f][Meta6][0]); }
					    		else if(Fabricas[f][Almacen6] == 2) { DestroyDynamicObject(Fabricas[f][Meta6][1]); }
					    		Fabricas[f][Almacen6] --;
					    		GuardarCajaFabrica(playerid,f,1);
					    		LCaja(playerid);
					    		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
							}
							case 1:
							{
							    if(Fabricas[f][Almacen6] > 2) return 1;
							    if(Fabricas[f][Almacen6] == 2) return SendClientMessage(playerid,-1,"Esta estantería está llena.");
							    if(Fabricas[f][Almacen6] == 0) { Fabricas[f][Meta6][0] = CreateDynamicObject(1271, Cajas6[0][0], Cajas6[0][1], Cajas6[0][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]); }
					    		else if(Fabricas[f][Almacen6] == 1) { Fabricas[f][Meta6][1] = CreateDynamicObject(1271, Cajas6[1][0], Cajas6[1][1], Cajas6[1][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]); }
                                Fabricas[f][Almacen6] ++;
								GuardarCajaFabrica(playerid,f,0);
								DCaja(playerid);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
							}
                        }
                    }
	                else if(IsPlayerInRangeOfPoint(playerid,2.0, -2021.0313,222.0580,1035.8225))
	                {
                        switch(TieneCajaMeta[playerid])
					    {
					        case 0:
					        {
					            if(Fabricas[f][Almacen7] == 0) return 1;
					    		if(Fabricas[f][Almacen7] == 1) { DestroyDynamicObject(Fabricas[f][Meta7][0]); }
					    		else if(Fabricas[f][Almacen7] == 2) { DestroyDynamicObject(Fabricas[f][Meta7][1]); }
                                Fabricas[f][Almacen7] --;
								GuardarCajaFabrica(playerid,f,1);
								LCaja(playerid);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
							}
							case 1:
							{
							    if(Fabricas[f][Almacen7] > 2) return 1;
							    if(Fabricas[f][Almacen7] == 2) return SendClientMessage(playerid,-1,"Esta estantería está llena.");
							    if(Fabricas[f][Almacen7] == 0) { Fabricas[f][Meta7][0] = CreateDynamicObject(1271, Cajas7[0][0], Cajas7[0][1], Cajas7[0][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]); }
					    		else if(Fabricas[f][Almacen7] == 1) { Fabricas[f][Meta7][1] = CreateDynamicObject(1271, Cajas7[1][0], Cajas7[1][1], Cajas7[1][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]); }
                                Fabricas[f][Almacen7] ++;
								GuardarCajaFabrica(playerid,f,0);
								DCaja(playerid);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
							}
                        }
                    }
                    else if(IsPlayerInRangeOfPoint(playerid,2.0, -2024.7906,223.9543,1035.8225))
	                {
	                    switch(TieneCajaMeta[playerid])
					    {
					        case 0:
					        {
					            if(Fabricas[f][Almacen8] == 0) return 1;
					    		if(Fabricas[f][Almacen8] == 1) { DestroyDynamicObject(Fabricas[f][Meta8][0]); }
					    		else if(Fabricas[f][Almacen8] == 2) { DestroyDynamicObject(Fabricas[f][Meta8][1]); }
					    		Fabricas[f][Almacen8] --;
					    		GuardarCajaFabrica(playerid,f,1);
					    		LCaja(playerid);
					    		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
							}
							case 1:
							{
							    if(Fabricas[f][Almacen8] > 2) return 1;
							    if(Fabricas[f][Almacen8] == 2) return SendClientMessage(playerid,-1,"Esta estantería está llena.");
							    if(Fabricas[f][Almacen8] == 0) { Fabricas[f][Meta8][0] = CreateDynamicObject(1271, Cajas8[0][0], Cajas8[0][1], Cajas8[0][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]); }
					    		else if(Fabricas[f][Almacen8] == 1) { Fabricas[f][Meta8][1] = CreateDynamicObject(1271, Cajas8[1][0], Cajas8[1][1], Cajas8[1][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]); }
                                Fabricas[f][Almacen8] ++;
								GuardarCajaFabrica(playerid,f,0);
								DCaja(playerid);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
							}
                        }
                    }
	                else if(IsPlayerInRangeOfPoint(playerid,2.0,-2024.7908,227.3648,1035.8162))
	                {
	                    switch(TieneCajaMeta[playerid])
					    {
					        case 0:
					        {
					            if(Fabricas[f][Almacen9] == 0) return 1;
					    		if(Fabricas[f][Almacen9] == 1) { DestroyDynamicObject(Fabricas[f][Meta9][0]); }
					    		else if(Fabricas[f][Almacen9] == 2) { DestroyDynamicObject(Fabricas[f][Meta9][1]); }
					    		Fabricas[f][Almacen9] --;
					    		GuardarCajaFabrica(playerid,f,1);
					    		LCaja(playerid);
					    		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
							}
							case 1:
							{
							    if(Fabricas[f][Almacen9] > 2) return 1;
							    if(Fabricas[f][Almacen9] == 2) return SendClientMessage(playerid,-1,"Esta estantería está llena.");
							    if(Fabricas[f][Almacen9] == 0) { Fabricas[f][Meta9][0] = CreateDynamicObject(1271, Cajas9[0][0], Cajas9[0][1], Cajas9[0][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]); }
					    		else if(Fabricas[f][Almacen9] == 1) { Fabricas[f][Meta9][1] = CreateDynamicObject(1271, Cajas9[1][0], Cajas9[1][1], Cajas9[1][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]); }
                                Fabricas[f][Almacen9] ++;
								GuardarCajaFabrica(playerid,f,0);
								DCaja(playerid);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
							}
                        }
                    }
	                else if(IsPlayerInRangeOfPoint(playerid,2.0,-2018.0074,231.9918,1035.8162 ))
	                {
	                    switch(TieneCajaMeta[playerid])
					    {
					        case 0:
					        {
					            if(Fabricas[f][Almacen10] == 0) return 1;
					    		if(Fabricas[f][Almacen10] == 1) { DestroyDynamicObject(Fabricas[f][Meta10][0]); }
					    		else if(Fabricas[f][Almacen10] == 2) { DestroyDynamicObject(Fabricas[f][Meta10][1]); }
					    		Fabricas[f][Almacen10] --;
					    		GuardarCajaFabrica(playerid,f,1);
					    		LCaja(playerid);
					    		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
							}
							case 1:
							{
							    if(Fabricas[f][Almacen10] > 2) return 1;
							    if(Fabricas[f][Almacen10] == 0) { Fabricas[f][Meta10][0] = CreateDynamicObject(1271, Cajas10[0][0], Cajas10[0][1], Cajas10[0][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]); }
					    		else if(Fabricas[f][Almacen10] == 1) { Fabricas[f][Meta10][1] = CreateDynamicObject(1271, Cajas10[1][0], Cajas10[1][1], Cajas10[1][2],   0.00000, 0.00000, 0.00000, Fabricas[f][pVW],Fabricas[f][pInt]); }
                                Fabricas[f][Almacen10] ++;
								GuardarCajaFabrica(playerid,f,0);
								DCaja(playerid);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
							}
                        }
                    }
                    //Retirar cajas metanfetaminas ya procesadas
                    if(IsPlayerInRangeOfPoint(playerid,2, -2017.67334, 227.02380, 1035.15454))
					{
					    if(TieneCajaMeta[playerid] == 0)
					    {
					        if(Fabricas[f][Termino1] == 1)
					        {
					            Fabricas[f][Termino1] = 0;
					            Fabricas[f][StatoCuoco1] = 2;
					            ActualizarLabelMoledores(f,1);
					            TieneCajaMeta[playerid] = 1;
					            DestroyDynamicObject(Fabricas[f][Bloque1]);
					            LCaja(playerid);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
								SetPlayerAttachedObject(playerid, 2, 1271, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
					        }
					    }
					}
					else if(IsPlayerInRangeOfPoint(playerid,2, -2013.86060, 227.05284, 1035.15454))
					{
					    if(TieneCajaMeta[playerid] == 0)
					    {
					        if(Fabricas[f][Termino2] == 1)
					        {
					            Fabricas[f][Termino2] = 0;
					            Fabricas[f][StatoCuoco2] = 2;
					            ActualizarLabelMoledores(f,2);
					            TieneCajaMeta[playerid] = 1;
					            Fabricas[f][Termino2] = 0;
					            DestroyDynamicObject(Fabricas[f][Bloque2]);
					            LCaja(playerid);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
								SetPlayerAttachedObject(playerid, 2, 1271, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
					        }
					    }
					}
					else if(IsPlayerInRangeOfPoint(playerid,2, -2009.98157, 227.00481, 1035.15454))
					{
					    if(TieneCajaMeta[playerid] == 0)
					    {
					        if(Fabricas[f][Termino3] == 1)
					        {
					            Fabricas[f][Termino3] = 0;
					            Fabricas[f][StatoCuoco3] = 2;
					            ActualizarLabelMoledores(f,3);
					            TieneCajaMeta[playerid] = 1;
					            Fabricas[f][Termino3] = 0;
					            DestroyDynamicObject(Fabricas[f][Bloque3]);
					            LCaja(playerid);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
								SetPlayerAttachedObject(playerid, 2, 1271, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
					        }
					    }
					}
					else if(IsPlayerInRangeOfPoint(playerid,2, -2006.16040, 226.99612, 1035.15454))
					{
					    if(TieneCajaMeta[playerid] == 0)
					    {
					        if(Fabricas[f][Termino4] == 1)
					        {
					            Fabricas[f][Termino4] = 0;
					            Fabricas[f][StatoCuoco4] = 2;
					            ActualizarLabelMoledores(f,4);
					            TieneCajaMeta[playerid] = 1;
					            Fabricas[f][Termino4] = 0;
					            DestroyDynamicObject(Fabricas[f][Bloque4]);
					            LCaja(playerid);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
								SetPlayerAttachedObject(playerid, 2, 1271, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
					        }
					    }
					}
					else if(IsPlayerInRangeOfPoint(playerid,2, -2002.34033, 227.01234, 1035.15454))
					{
					    if(TieneCajaMeta[playerid] == 0)
					    {
					        if(Fabricas[f][Termino5] == 1)
					        {
					            Fabricas[f][Termino5] = 0;
					            Fabricas[f][StatoCuoco5] = 2;
					            ActualizarLabelMoledores(f,5);
					            TieneCajaMeta[playerid] = 1;
					            Fabricas[f][Termino5] = 0;
					            DestroyDynamicObject(Fabricas[f][Bloque5]);
					            LCaja(playerid);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
								SetPlayerAttachedObject(playerid, 2, 1271, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
					        }
					    }
					}
                    //Retirar Cristal (olla)
                    if(IsPlayerInRangeOfPoint(playerid,2, -1992.3154,195.8535,1035.8162))
					{
						if(Fabricas[f][Crisol1] == 1)
						{
						    if(TieneCrisol[playerid] == 0)
						    {
							    Fabricas[f][Crisol1] = 0;
							    new stringas[256];
							    format(stringas,sizeof(stringas),"{DBED16}Cocina: #1{FFFFFF}\nProducción: {3d83ce}%d%%{FFFFFF} completada.\nEstado: %s{FFFFFF}\n\n%s{FFFFFF}%s",Fabricas[f][Porcentaje1],EstadoH(HornoEncendido1[f]),EstadoHo(HornoEncendido1[f]),EstadoCristal(Fabricas[f][Crisol1]));
						        UpdateDynamic3DTextLabelText(Fabricas[f][olla1], COLOR_WHITE, stringas);
							    TieneCrisol[playerid] = 1;
							    ApplyAnimation(playerid,"BAR","Barserve_give",4.1,0,0,0,0,0);
							    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CARRY);
							    SetPlayerAttachedObject(playerid, 2, 19585, 3, 0.250999, -0.444999, -0.215999, -125.200004, -101.400001, -12.700006, 0.637000, 0.648000, 0.829000);
								GuardarFabrica(f);
								AccionesRol(playerid,"retiró el cristal de una cocina.",20);
								SendClientMessage(playerid,-1,"Pulsa {DBED16}'H' {FFFFFF}para dejar el cristal sobre alguna {00CCFF}mesa de producción{FFFFFF}.");
							}
						}
					}
					else if(IsPlayerInRangeOfPoint(playerid,2, -1995.7380,195.8532,1035.8162))
					{
						if(Fabricas[f][Crisol2] == 1)
						{
						    if(TieneCrisol[playerid] == 0)
						    {
							    Fabricas[f][Crisol2] = 0;
							    new stringas[256];
							    format(stringas,sizeof(stringas),"{DBED16}Cocina: #2{FFFFFF}\nProducción: {3d83ce}%d%%{FFFFFF} completada.\nEstado: %s{FFFFFF}\n\n%s{FFFFFF}%s",Fabricas[f][Porcentaje2],EstadoH(HornoEncendido2[f]),EstadoHo(HornoEncendido2[f]),EstadoCristal(Fabricas[f][Crisol2]));
								UpdateDynamic3DTextLabelText(Fabricas[f][olla2], COLOR_WHITE, stringas);
							    TieneCrisol[playerid] = 1;
							    ApplyAnimation(playerid,"BAR","Barserve_give",4.1,0,0,0,0,0);
							    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CARRY);
							    SetPlayerAttachedObject(playerid, 2, 19585, 3, 0.250999, -0.444999, -0.215999, -125.200004, -101.400001, -12.700006, 0.637000, 0.648000, 0.829000);
                                GuardarFabrica(f);
                                AccionesRol(playerid,"retiró el cristal de una cocina.",20);
								SendClientMessage(playerid,-1,"Pulsa {DBED16}'H' {FFFFFF}para dejar el cristal sobre alguna {00CCFF}mesa de producción{FFFFFF}.");
							}
						}
					}
					else if(IsPlayerInRangeOfPoint(playerid,2, -1999.2255,195.8546,1035.8162))
					{
						if(Fabricas[f][Crisol3] == 1)
						{
						    if(TieneCrisol[playerid] == 0)
						    {
							    Fabricas[f][Crisol3] = 0;
							    new stringas[256];
							    format(stringas,sizeof(stringas),"{DBED16}Cocina: #3{FFFFFF}\nProducción: {3d83ce}%d%%{FFFFFF} completada.\nEstado: %s{FFFFFF}\n\n%s{FFFFFF}%s",Fabricas[f][Porcentaje3],EstadoH(HornoEncendido3[f]),EstadoHo(HornoEncendido3[f]),EstadoCristal(Fabricas[f][Crisol3]));
								UpdateDynamic3DTextLabelText(Fabricas[f][olla3], COLOR_WHITE, stringas);
							    TieneCrisol[playerid] = 1;
							    ApplyAnimation(playerid,"BAR","Barserve_give",4.1,0,0,0,0,0);
							    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CARRY);
							    SetPlayerAttachedObject(playerid, 2, 19585, 3, 0.250999, -0.444999, -0.215999, -125.200004, -101.400001, -12.700006, 0.637000, 0.648000, 0.829000);
                                GuardarFabrica(f);
                                AccionesRol(playerid,"retiró el cristal de una cocina.",20);
								SendClientMessage(playerid,-1,"Pulsa {DBED16}'H' {FFFFFF}para dejar el cristal sobre alguna {00CCFF}mesa de producción{FFFFFF}.");
							}
						}
					}
                    //Empezar procesamiento de cristal
                    if(IsPlayerInRangeOfPoint(playerid,1, -2016.3990,226.0631,1035.8225))
					{
					    if(Fabricas[f][TieneCocinero1] != 0)
					    {
         				    if(Fabricas[f][StatoCuoco1] == 2)
						    {
						        if(TieneCrisol[playerid] == 1)
							    {
							        DCaja(playerid);
							        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
							        RemovePlayerAttachedObject(playerid, 2);
							        Fabricas[f][StatoCuoco1] = 1;
	                                TieneCrisol[playerid] = 0;
	                                Fabricas[f][tiempoc1] = SetTimerEx("JobCocinero1",TIEMPO_PROCESO,true,"d",f);
	                                ActualizarLabelMoledores(f,1);
	          					}
						    }
						    else SendClientMessage(playerid,-1,"Este moledor ya tiene trabajo pendiente.");
					    }
					}
					else if(IsPlayerInRangeOfPoint(playerid,1, -2012.5623,227.9782,1035.8162))
					{
						if(Fabricas[f][TieneCocinero2] != 0)
					    {
         				    if(Fabricas[f][StatoCuoco2] == 2)
						    {
						        if(TieneCrisol[playerid] == 1)
							    {
							        DCaja(playerid);
							        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
							        RemovePlayerAttachedObject(playerid, 2);
							        Fabricas[f][StatoCuoco2] = 1;
	                                TieneCrisol[playerid] = 0;
	                                Fabricas[f][tiempoc2] = SetTimerEx("JobCocinero2",TIEMPO_PROCESO,true,"d",f);
	                                ActualizarLabelMoledores(f,2);
	          					}
						    }
						    else SendClientMessage(playerid,-1,"Este moledor ya tiene trabajo pendiente.");
					    }
					}
					else if(IsPlayerInRangeOfPoint(playerid,1, -2008.6569,226.0630,1035.8162))
					{
						if(Fabricas[f][TieneCocinero3] != 0)
					    {
         				    if(Fabricas[f][StatoCuoco3] == 2)
						    {
						        if(TieneCrisol[playerid] == 1)
							    {
							        DCaja(playerid);
							        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
							        RemovePlayerAttachedObject(playerid, 2);
							        Fabricas[f][StatoCuoco3] = 1;
	                                TieneCrisol[playerid] = 0;
	                                Fabricas[f][tiempoc3] = SetTimerEx("JobCocinero3",TIEMPO_PROCESO,true,"d",f);
	                                ActualizarLabelMoledores(f,3);
	          					}
						    }
						    else SendClientMessage(playerid,-1,"Este moledor ya tiene trabajo pendiente.");
					    }
					}
					else if(IsPlayerInRangeOfPoint(playerid,1, -2004.9270,227.9702,1035.8162))
					{
						if(Fabricas[f][TieneCocinero4] != 0)
					    {
         				    if(Fabricas[f][StatoCuoco4] == 2)
						    {
						        if(TieneCrisol[playerid] == 1)
							    {
							        DCaja(playerid);
							        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
							        RemovePlayerAttachedObject(playerid, 2);
							        Fabricas[f][StatoCuoco4] = 1;
	                                TieneCrisol[playerid] = 0;
	                                Fabricas[f][tiempoc4] = SetTimerEx("JobCocinero4",TIEMPO_PROCESO,true,"d",f);
	                                ActualizarLabelMoledores(f,4);
	          					}
						    }
						    else SendClientMessage(playerid,-1,"Este moledor ya tiene trabajo pendiente.");
					    }
					}
					else if(IsPlayerInRangeOfPoint(playerid,1, -2001.0062,226.0610,1035.8162))
					{
						if(Fabricas[f][TieneCocinero5] != 0)
					    {
         				    if(Fabricas[f][StatoCuoco5] == 2)
						    {
						        if(TieneCrisol[playerid] == 1)
							    {
							        DCaja(playerid);
							        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
							        RemovePlayerAttachedObject(playerid, 2);
							        Fabricas[f][StatoCuoco5] = 1;
	                                TieneCrisol[playerid] = 0;
	                                Fabricas[f][tiempoc5] = SetTimerEx("JobCocinero5",TIEMPO_PROCESO,true,"d",f);
	                                ActualizarLabelMoledores(f,5);
	          					}
						    }
						    else SendClientMessage(playerid,-1,"Este moledor ya tiene trabajo pendiente.");
					    }
					}
                    //Tanque1
                    if(IsPlayerInRangeOfPoint(playerid,3.0,-2025.3972, 209.3350, 1041.0414-0.5))
                    {
                        if(TieneBarril[playerid] == 1)
                        {
                            if(Fabricas[f][pTanqueUno] > 99) return SendClientMessage(playerid,-1,"Esta tanque se encuentra lleno.");
                            if(Fabricas[f][pTanqueUno] >= 90) { Fabricas[f][pTanqueUno] = 100; }
                            else { Fabricas[f][pTanqueUno] += 10; }
                            GuardarFBarril(playerid,f);
                            RemovePlayerAttachedObject(playerid, 2);
                            DCaja(playerid);
                            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
                            new stringass[360];
                            AccionesRol(playerid,"cargó químicos en uno de los tanques de almacenaje.",20);
							format(stringass,sizeof(stringass),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #1",Fabricas[f][pTanqueUno]);
							UpdateDynamic3DTextLabelText(Fabricas[f][LTanque1], COLOR_WHITE, stringass);
                        }
                    }
                    //Tanque2
                    else if(IsPlayerInRangeOfPoint(playerid,3.0,-2025.3972, 212.2440, 1041.0414-0.5))
                    {
                        if(TieneBarril[playerid] == 1)
                        {
                            if(Fabricas[f][pTanqueDos] > 99) return SendClientMessage(playerid,-1,"Esta tanque se encuentra lleno.");
                            if(Fabricas[f][pTanqueDos] >= 90) { Fabricas[f][pTanqueDos] = 100; } else { Fabricas[f][pTanqueDos] += 10; }
                            GuardarFBarril(playerid,f);
                            RemovePlayerAttachedObject(playerid, 2);
                            DCaja(playerid);
                            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
                            new stringass[360];
                            AccionesRol(playerid,"cargó químicos en uno de los tanques de almacenaje.",20);
							format(stringass,sizeof(stringass),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #1",Fabricas[f][pTanqueDos]);
							UpdateDynamic3DTextLabelText(Fabricas[f][LTanque2], COLOR_WHITE, stringass);
                        }
                    }
                    //Tanque3
                    else if(IsPlayerInRangeOfPoint(playerid,3.0,-2025.3972, 215.3320, 1041.0414-0.5))
                    {
                        if(TieneBarril[playerid] == 1)
                        {
                            if(Fabricas[f][pTanqueTres] > 99) return SendClientMessage(playerid,-1,"Esta tanque se encuentra lleno.");
                            if(Fabricas[f][pTanqueTres] >= 90) { Fabricas[f][pTanqueTres] = 100; } else { Fabricas[f][pTanqueTres] += 10; }
                            GuardarFBarril(playerid,f);
                            RemovePlayerAttachedObject(playerid, 2);
                            DCaja(playerid);
                            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
                            new stringass[360];
                            AccionesRol(playerid,"cargó químicos en uno de los tanques de almacenaje.",20);
							format(stringass,sizeof(stringass),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #1",Fabricas[f][pTanqueTres]);
							UpdateDynamic3DTextLabelText(Fabricas[f][LTanque3], COLOR_WHITE, stringass);
                        }
                    }
                    //Tanque4
                    if(IsPlayerInRangeOfPoint(playerid,3.0,-2025.3972, 194.5190, 1041.0414-0.5))
                    {
                        if(TieneBarril[playerid] == 1)
                        {
                            if(Fabricas[f][pTanqueCuatro] > 99) return SendClientMessage(playerid,-1,"Esta tanque se encuentra lleno.");
                            if(Fabricas[f][pTanqueCuatro] >= 90) { Fabricas[f][pTanqueCuatro] = 100; } else { Fabricas[f][pTanqueCuatro] += 10; }
                            GuardarFBarril(playerid,f);
                            RemovePlayerAttachedObject(playerid, 2);
                            DCaja(playerid);
                            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
                            new stringass[360];
                            AccionesRol(playerid,"cargó químicos en uno de los tanques de almacenaje.",20);
							format(stringass,sizeof(stringass),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #2",Fabricas[f][pTanqueCuatro]);
							UpdateDynamic3DTextLabelText(Fabricas[f][LTanque4], COLOR_WHITE, stringass);
                        }
                    }
                    //Tanque5
                    else if(IsPlayerInRangeOfPoint(playerid,3.0,-2025.3972, 197.5950, 1041.0414-0.5))
                    {
                        if(TieneBarril[playerid] == 1)
                        {
                            if(Fabricas[f][pTanqueCinco] > 99) return SendClientMessage(playerid,-1,"Esta tanque se encuentra lleno.");
                            if(Fabricas[f][pTanqueCinco] >= 90) { Fabricas[f][pTanqueCinco] = 100; } else { Fabricas[f][pTanqueCinco] += 10; }
                            GuardarFBarril(playerid,f);
                            RemovePlayerAttachedObject(playerid, 2);
                            DCaja(playerid);
                            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
                            new stringass[360];
                            AccionesRol(playerid,"cargó químicos en uno de los tanques de almacenaje.",20);
							format(stringass,sizeof(stringass),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #2",Fabricas[f][pTanqueCinco]);
							UpdateDynamic3DTextLabelText(Fabricas[f][LTanque5], COLOR_WHITE, stringass);
                        }
                    }
                    //Tanque6
                    else if(IsPlayerInRangeOfPoint(playerid,3.0,-2025.3972, 200.4760, 1041.0414-0.5))
                    {
                        if(TieneBarril[playerid] == 1)
                        {
                            if(Fabricas[f][pTanqueSeis] > 99) return SendClientMessage(playerid,-1,"Esta tanque se encuentra lleno.");
                            if(Fabricas[f][pTanqueSeis] >= 90) { Fabricas[f][pTanqueSeis] = 100; } else { Fabricas[f][pTanqueSeis] += 10; }
                            GuardarFBarril(playerid,f);
                            RemovePlayerAttachedObject(playerid, 2);
                            DCaja(playerid);
                            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
                            new stringass[360];
                            AccionesRol(playerid,"cargó químicos en uno de los tanques de almacenaje.",20);
							format(stringass,sizeof(stringass),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #2",Fabricas[f][pTanqueSeis]);
							UpdateDynamic3DTextLabelText(Fabricas[f][LTanque6], COLOR_WHITE, stringass);
                        }
                    }
                    //Tanque7
                    if(IsPlayerInRangeOfPoint(playerid,3.0,-1976.9731, 200.2980, 1041.0414-0.5))
                    {
                        if(TieneBarril[playerid] == 1)
                        {
                            if(Fabricas[f][pTanqueSiete] > 99) return SendClientMessage(playerid,-1,"Esta tanque se encuentra lleno.");
                            if(Fabricas[f][pTanqueSiete] >= 90) { Fabricas[f][pTanqueSiete] = 100; } else { Fabricas[f][pTanqueSiete] += 10; }
                            GuardarFBarril(playerid,f);
                            RemovePlayerAttachedObject(playerid, 2);
                            DCaja(playerid);
                            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
                            new stringass[360];
                            AccionesRol(playerid,"cargó químicos en uno de los tanques de almacenaje.",20);
							format(stringass,sizeof(stringass),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #3",Fabricas[f][pTanqueSiete]);
							UpdateDynamic3DTextLabelText(Fabricas[f][LTanque7], COLOR_WHITE, stringass);
                        }
                    }
                    //Tanque8
                    else if(IsPlayerInRangeOfPoint(playerid,3.0,-1976.9731, 197.4360, 1041.0414-0.5))
                    {
                        if(TieneBarril[playerid] == 1)
                        {
                            if(Fabricas[f][pTanqueOcho] > 99) return SendClientMessage(playerid,-1,"Esta tanque se encuentra lleno.");
                            if(Fabricas[f][pTanqueOcho] >= 90) { Fabricas[f][pTanqueOcho] = 100; } else { Fabricas[f][pTanqueOcho] += 10; }
                            GuardarFBarril(playerid,f);
                            RemovePlayerAttachedObject(playerid, 2);
                            DCaja(playerid);
                            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
                            new stringass[360];
                            AccionesRol(playerid,"cargó químicos en uno de los tanques de almacenaje.",20);
							format(stringass,sizeof(stringass),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #3",Fabricas[f][pTanqueOcho]);
							UpdateDynamic3DTextLabelText(Fabricas[f][LTanque8], COLOR_WHITE, stringass);
                        }
                    }
                    //Tanque9
                    else if(IsPlayerInRangeOfPoint(playerid,3.0,-1976.9731, 194.3620, 1041.0414-0.5))
                    {
                        if(TieneBarril[playerid] == 1)
                        {
                            if(Fabricas[f][pTanqueNueve] > 99) return SendClientMessage(playerid,-1,"Esta tanque se encuentra lleno.");
                            if(Fabricas[f][pTanqueNueve] >= 90) { Fabricas[f][pTanqueNueve] = 100; } else { Fabricas[f][pTanqueNueve] += 10; }
                            GuardarFBarril(playerid,f);
                            RemovePlayerAttachedObject(playerid, 2);
                            DCaja(playerid);
                            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
                            new stringass[360];
                            AccionesRol(playerid,"cargó químicos en uno de los tanques de almacenaje.",20);
							format(stringass,sizeof(stringass),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #3",Fabricas[f][pTanqueNueve]);
							UpdateDynamic3DTextLabelText(Fabricas[f][LTanque9], COLOR_WHITE, stringass);
                        }
                    }
                }

                //Barriles Fabrica 0 (BlueBerry).
	            if(QuimicosActivo[f] == 3)
				{
     				if(IsPlayerInRangeOfPoint(playerid,2.0,-1857.837891, 111.288147, 14.591300)) //Barril 1 SF
					{
						if(IsValidObject(MetaCompra[5]))
						{
							switch(TieneBarril[playerid])
							{
								case 0:
								{
									TieneBarril[playerid] = 1;
									DestroyObject(MetaCompra[5]);
									DestroyDynamic3DTextLabel(MetaCompraText[5]);
									LCaja(playerid);
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
									AccionesRol(playerid,"levantó un tanque de químicos.", 20);
									SendClientMessage(playerid,-1,"Pulsa {DBED15}'H'{FFFFFF} para dejar el tanque sobre el vehículo de la fábrica");
									SetPlayerAttachedObject(playerid, 2, 3632, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
								}
								case 1: SendClientMessage(playerid,-1,"Descarga el barril que llevas en las manos para poder agarrar otro.");
							}
						}
					}
					else if(IsPlayerInRangeOfPoint(playerid,2.0,-1860.744751, 110.884758, 14.591300))			{ //Barril 2 SF
						if(IsValidObject(MetaCompra[6]))
						{
							switch(TieneBarril[playerid])
							{
								case 0:
								{
									TieneBarril[playerid] = 1;
									DestroyObject(MetaCompra[6]);
									DestroyDynamic3DTextLabel(MetaCompraText[6]);
									LCaja(playerid);
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
									AccionesRol(playerid,"levantó un tanque de químicos.", 20);
									SendClientMessage(playerid,-1,"Pulsa {DBED15}'H'{FFFFFF} para dejar el tanque sobre el vehículo de la fábrica");
									SetPlayerAttachedObject(playerid, 2, 3632, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
								}
								case 1: SendClientMessage(playerid,-1,"Descarga el barril que llevas en las manos para poder agarrar otro.");
							}
						}
					}
					else if(IsPlayerInRangeOfPoint(playerid,2.0,-1863.086792, 111.258713, 14.591300))			{ //Barril 3 SF
						if(IsValidObject(MetaCompra[7]))
						{
							switch(TieneBarril[playerid])
							{
								case 0:
								{
									TieneBarril[playerid] = 1;
									DestroyObject(MetaCompra[7]);
									DestroyDynamic3DTextLabel(MetaCompraText[7]);
									LCaja(playerid);
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
									AccionesRol(playerid,"levantó un tanque de químicos.", 20);
									SendClientMessage(playerid,-1,"Pulsa {DBED15}'H'{FFFFFF} para dejar el tanque sobre el vehículo de la fábrica");
									SetPlayerAttachedObject(playerid, 2, 3632, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
								}
								case 1: SendClientMessage(playerid,-1,"Descarga el barril que llevas en las manos para poder agarrar otro.");
							}
						}
					}
					else if(IsPlayerInRangeOfPoint(playerid,2.0,-1859.877441, 113.126198, 14.591300))			{ //Barril 4 SF
						if(IsValidObject(MetaCompra[8]))
						{
							switch(TieneBarril[playerid])
							{
								case 0:
								{
									TieneBarril[playerid] = 1;
									DestroyObject(MetaCompra[8]);
									DestroyDynamic3DTextLabel(MetaCompraText[8]);
									LCaja(playerid);
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
									AccionesRol(playerid,"levantó un tanque de químicos.", 20);
									SendClientMessage(playerid,-1,"Pulsa {DBED15}'H'{FFFFFF} para dejar el tanque sobre el vehículo de la fábrica");
									SetPlayerAttachedObject(playerid, 2, 3632, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
								}
								case 1: SendClientMessage(playerid,-1,"Descarga el barril que llevas en las manos para poder agarrar otro.");
							}
						}
					}
					else if(IsPlayerInRangeOfPoint(playerid,2.0,-1862.731934, 113.749191, 14.591300))			{ //Barril 5 SF
						if(IsValidObject(MetaCompra[9]))
						{
							switch(TieneBarril[playerid])
							{
								case 0:
								{
									TieneBarril[playerid] = 1;
									DestroyObject(MetaCompra[9]);
									DestroyDynamic3DTextLabel(MetaCompraText[9]);
									LCaja(playerid);
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
									AccionesRol(playerid,"levantó un tanque de químicos.", 20);
									SendClientMessage(playerid,-1,"Pulsa {DBED15}'H'{FFFFFF} para dejar el tanque sobre el vehículo de la fábrica");
									SetPlayerAttachedObject(playerid, 2, 3632, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
								}
								case 1: SendClientMessage(playerid,-1,"Descarga el barril que llevas en las manos para poder agarrar otro.");
							}
						}
                    }
				}

                //Barriles Fabrica (Transportista).
	            if(QuimicosActivo[f] == 2)
				{
     				if(IsPlayerInRangeOfPoint(playerid,2.0,-30.697500, 2346.327148, 23.615999)) //Barril 1 LV
					{
						if(IsValidObject(MetaCompra[0]))
						{
							switch(TieneBarril[playerid])
							{
								case 0:
								{
									TieneBarril[playerid] = 1;
									DestroyObject(MetaCompra[0]);
									DestroyDynamic3DTextLabel(MetaCompraText[0]);
									LCaja(playerid);
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
									AccionesRol(playerid,"levantó un tanque de químicos.", 20);
									SendClientMessage(playerid,-1,"Pulsa {DBED15}'H'{FFFFFF} para dejar el tanque sobre el vehículo de la fábrica");
									SetPlayerAttachedObject(playerid, 2, 3632, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
								}
								case 1: SendClientMessage(playerid,-1,"Descarga el barril que llevas en las manos para poder agarrar otro.");
							}
						}
					}
					else if(IsPlayerInRangeOfPoint(playerid,2.0,-33.349918, 2346.823730, 23.615999))			{ //Barril 2 LV
						if(IsValidObject(MetaCompra[1]))
						{
							switch(TieneBarril[playerid])
							{
								case 0:
								{
									TieneBarril[playerid] = 1;
									DestroyObject(MetaCompra[1]);
									DestroyDynamic3DTextLabel(MetaCompraText[1]);
									LCaja(playerid);
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
									AccionesRol(playerid,"levantó un tanque de químicos.", 20);
									SendClientMessage(playerid,-1,"Pulsa {DBED15}'H'{FFFFFF} para dejar el tanque sobre el vehículo de la fábrica");
									SetPlayerAttachedObject(playerid, 2, 3632, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
								}
								case 1: SendClientMessage(playerid,-1,"Descarga el barril que llevas en las manos para poder agarrar otro.");
							}
						}
					}
					else if(IsPlayerInRangeOfPoint(playerid,2.0,-28.303591, 2348.099854, 23.615999))			{ //Barril 3 LV
						if(IsValidObject(MetaCompra[2]))
						{
							switch(TieneBarril[playerid])
							{
								case 0:
								{
									TieneBarril[playerid] = 1;
									DestroyObject(MetaCompra[2]);
									DestroyDynamic3DTextLabel(MetaCompraText[2]);
									LCaja(playerid);
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
									AccionesRol(playerid,"levantó un tanque de químicos.", 20);
									SendClientMessage(playerid,-1,"Pulsa {DBED15}'H'{FFFFFF} para dejar el tanque sobre el vehículo de la fábrica");
									SetPlayerAttachedObject(playerid, 2, 3632, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
								}
								case 1: SendClientMessage(playerid,-1,"Descarga el barril que llevas en las manos para poder agarrar otro.");
							}
						}
					}
					else if(IsPlayerInRangeOfPoint(playerid,2.0,-30.848129, 2349.221680, 23.775999))			{ //Barril 4 LV
						if(IsValidObject(MetaCompra[3]))
						{
							switch(TieneBarril[playerid])
							{
								case 0:
								{
									TieneBarril[playerid] = 1;
									DestroyObject(MetaCompra[3]);
									DestroyDynamic3DTextLabel(MetaCompraText[3]);
									LCaja(playerid);
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
									AccionesRol(playerid,"levantó un tanque de químicos.", 20);
									SendClientMessage(playerid,-1,"Pulsa {DBED15}'H'{FFFFFF} para dejar el tanque sobre el vehículo de la fábrica");
									SetPlayerAttachedObject(playerid, 2, 3632, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
								}
								case 1: SendClientMessage(playerid,-1,"Descarga el barril que llevas en las manos para poder agarrar otro.");
							}
						}
					}
					else if(IsPlayerInRangeOfPoint(playerid,2.0,-33.489899, 2349.594238, 23.775999))			{ //Barril 5 LV
						if(IsValidObject(MetaCompra[4]))
						{
							switch(TieneBarril[playerid])
							{
								case 0:
								{
									TieneBarril[playerid] = 1; DestroyObject(MetaCompra[4]);
									DestroyDynamic3DTextLabel(MetaCompraText[4]);
									LCaja(playerid);
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
									AccionesRol(playerid,"levantó un tanque de químicos.", 20);
									SendClientMessage(playerid,-1,"Pulsa {DBED15}'H'{FFFFFF} para dejar el tanque sobre el vehículo de la fábrica");
									SetPlayerAttachedObject(playerid, 2, 3632, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
								}
								case 1: SendClientMessage(playerid,-1,"Descarga el barril que llevas en las manos para poder agarrar otro.");
							}
						}
                    }
				}
				//Barriles Fabrica (LV)
	            if(QuimicosActivo[f] == 1)
				{
     				if(IsPlayerInRangeOfPoint(playerid,2.0,-1043.100586, 1554.120361, 32.809502)) //Barril 1 LV Parking
					{
						if(IsValidObject(MetaCompra[10]))
						{
							switch(TieneBarril[playerid])
							{
								case 0:
								{
									TieneBarril[playerid] = 1;
									DestroyObject(MetaCompra[10]);
									DestroyDynamic3DTextLabel(MetaCompraText[10]);
									LCaja(playerid);
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
									AccionesRol(playerid,"levantó un tanque de químicos.", 20);
									SendClientMessage(playerid,-1,"Pulsa {DBED15}'H'{FFFFFF} para dejar el tanque sobre el vehículo de la fábrica");
									SetPlayerAttachedObject(playerid, 2, 3632, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
								}
								case 1: SendClientMessage(playerid,-1,"Descarga el barril que llevas en las manos para poder agarrar otro.");
							}
						}
					}
					else if(IsPlayerInRangeOfPoint(playerid,2.0,-1045.420166, 1554.128418, 32.809502))			{ //Barril 2 LV Parking
						if(IsValidObject(MetaCompra[11]))
						{
							switch(TieneBarril[playerid])
							{
								case 0:
								{
									TieneBarril[playerid] = 1;
									DestroyObject(MetaCompra[11]);
									DestroyDynamic3DTextLabel(MetaCompraText[11]);
									LCaja(playerid);
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
									AccionesRol(playerid,"levantó un tanque de químicos.", 20);
									SendClientMessage(playerid,-1,"Pulsa {DBED15}'H'{FFFFFF} para dejar el tanque sobre el vehículo de la fábrica");
									SetPlayerAttachedObject(playerid, 2, 3632, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
								}
								case 1: SendClientMessage(playerid,-1,"Descarga el barril que llevas en las manos para poder agarrar otro.");
							}
						}
					}
					else if(IsPlayerInRangeOfPoint(playerid,2.0,-1044.323853, 1551.946411, 32.869499))			{ //Barril 3 LV Parking
						if(IsValidObject(MetaCompra[12]))
						{
							switch(TieneBarril[playerid])
							{
								case 0:
								{
									TieneBarril[playerid] = 1;
									DestroyObject(MetaCompra[12]);
									DestroyDynamic3DTextLabel(MetaCompraText[12]);
									LCaja(playerid);
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
									AccionesRol(playerid,"levantó un tanque de químicos.", 20);
									SendClientMessage(playerid,-1,"Pulsa {DBED15}'H'{FFFFFF} para dejar el tanque sobre el vehículo de la fábrica");
									SetPlayerAttachedObject(playerid, 2, 3632, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
								}
								case 1: SendClientMessage(playerid,-1,"Descarga el barril que llevas en las manos para poder agarrar otro.");
							}
						}
					}
					else if(IsPlayerInRangeOfPoint(playerid,2.0,-1047.568237, 1552.777954, 32.809502))			{ //Barril 4 LV Parking
						if(IsValidObject(MetaCompra[13]))
						{
							switch(TieneBarril[playerid])
							{
								case 0:
								{
									TieneBarril[playerid] = 1;
									DestroyObject(MetaCompra[13]);
									DestroyDynamic3DTextLabel(MetaCompraText[13]);
									LCaja(playerid);
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
									AccionesRol(playerid,"levantó un tanque de químicos.", 20);
									SendClientMessage(playerid,-1,"Pulsa {DBED15}'H'{FFFFFF} para dejar el tanque sobre el vehículo de la fábrica");
									SetPlayerAttachedObject(playerid, 2, 3632, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
								}
								case 1: SendClientMessage(playerid,-1,"Descarga el barril que llevas en las manos para poder agarrar otro.");
							}
						}
					}
					else if(IsPlayerInRangeOfPoint(playerid,2.0,-1044.697388, 1549.801025, 32.809502))			{ //Barril 5 LV Parking
						if(IsValidObject(MetaCompra[14]))
						{
							switch(TieneBarril[playerid])
							{
								case 0:
								{
									TieneBarril[playerid] = 1; DestroyObject(MetaCompra[14]);
									DestroyDynamic3DTextLabel(MetaCompraText[14]);
									ApplyAnimation(playerid,"CARRY","LIFTUP",2,0,1,1,0,0);
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
									AccionesRol(playerid,"levantó un tanque de químicos.", 20);
									SendClientMessage(playerid,-1,"Pulsa {DBED15}'H'{FFFFFF} para dejar el tanque sobre el vehículo de la fábrica");
									SetPlayerAttachedObject(playerid, 2, 3632, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
								}
								case 1: SendClientMessage(playerid,-1,"Descarga el barril que llevas en las manos para poder agarrar otro.");
							}
						}
                    }
				}
       			if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda])
				{
					new Float:a1x,Float:a1y,Float:a1z;
					GetVehiclePos(Fabricas[f][Auto1F], a1x, a1y, a1z);
					if(IsPlayerInRangeOfPoint(playerid,4.5, a1x, a1y, a1z))
		 	    	{
		 	    	    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				 		{
			 	    	    if(TieneBarril[playerid] == 0)
			 	    	    {
			 	    	        if(VehiculoConCajas[Fabricas[f][Auto1F]] == 0)
			 	    	        {
				 	    	    	if(VehiculoConBarril[Fabricas[f][Auto1F]] > 0)
				 	    	    	{
				 	    	    	    if(!IsPlayerInRangeOfPoint(playerid,50.0,-1998.4272,210.5190,1035.8162)) return 1;
				 	    	        	if(VehiculoConBarril[Fabricas[f][Auto1F]] == 1) { DestroyDynamicObject(BarrilMeta[f][0]); BarrilMeta[f][0] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000); }
										else if(VehiculoConBarril[Fabricas[f][Auto1F]] == 2) { DestroyDynamicObject(BarrilMeta[f][1]); BarrilMeta[f][1] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000); }
										else if(VehiculoConBarril[Fabricas[f][Auto1F]] == 3) { DestroyDynamicObject(BarrilMeta[f][2]); BarrilMeta[f][2] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000); }
										else if(VehiculoConBarril[Fabricas[f][Auto1F]] == 4) { DestroyDynamicObject(BarrilMeta[f][3]); BarrilMeta[f][3] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000); }
										else if(VehiculoConBarril[Fabricas[f][Auto1F]] == 5) { DestroyDynamicObject(BarrilMeta[f][4]); BarrilMeta[f][4] = CreateDynamicObject(3632,0.0000000,0.0000000,-1000.0000000,0.0000000,0.0000000,0.0000000); }
										VehiculoConBarril[Fabricas[f][Auto1F]] --;
										TieneBarril[playerid] = 1;
										LCaja(playerid);
										SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
										SetPlayerAttachedObject(playerid, 2, 3632, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
										AccionesRol(playerid, "sacó un tanque de químicos de la camioneta.", 20);
										SendClientMessage(playerid,-1,"Lleva el {00CCFF}tanque de químicos{FFFFFF} al contenedor que más lo necesite.");
	                                }
								}
		      				}
							else if(TieneBarril[playerid] == 1)
			 	    	    {
			 	    	        if(VehiculoConCajas[Fabricas[f][Auto1F]] == 0)
			 	    	        {
			 	    	            if(VehiculoConBarril[Fabricas[f][Auto1F]] < 5)
			 	    	            {
				 	    	            if(VehiculoConBarril[Fabricas[f][Auto1F]] == 0) AttachDynamicObjectToVehicle(BarrilMeta[f][0], Fabricas[f][Auto1F], 0.394999, -1.084999, 0.230000, 0.000000, 0.000000, 0.000000);
					 	    	        else if(VehiculoConBarril[Fabricas[f][Auto1F]] == 1) AttachDynamicObjectToVehicle(BarrilMeta[f][1], Fabricas[f][Auto1F], -0.519999, -1.084999, 0.199500, 0.000000, 0.000000, 0.000000);
					 	    	        else if(VehiculoConBarril[Fabricas[f][Auto1F]] == 2) AttachDynamicObjectToVehicle(BarrilMeta[f][2], Fabricas[f][Auto1F], -0.049999, -1.729998, 0.230000, 0.000000, 0.000000, 0.000000);
					 	    	        else if(VehiculoConBarril[Fabricas[f][Auto1F]] == 3) AttachDynamicObjectToVehicle(BarrilMeta[f][3], Fabricas[f][Auto1F], 0.429999, -2.320005, 0.165000, 0.000000, 0.000000, 0.000000);
					 	    	        else if(VehiculoConBarril[Fabricas[f][Auto1F]] == 4) AttachDynamicObjectToVehicle(BarrilMeta[f][4], Fabricas[f][Auto1F], -0.554999, -2.285004, 0.220000, 0.000000, 0.000000, 0.000000);
					 	    	        VehiculoConBarril[Fabricas[f][Auto1F]] ++;
					 	    	        TieneBarril[playerid] = 0;
					 	    	        DCaja(playerid);
					 	    	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
					 	    	        RemovePlayerAttachedObject(playerid, 2);
					 	    	        AccionesRol(playerid, "dejó un tanque de químicos en la camioneta.", 20);
				 	    	        }
			 	    	        }
							}
							if(TieneCajaMeta[playerid] == 0)
			 	    	    {
			 	    	        if(VehiculoConBarril[Fabricas[f][Auto1F]] == 0)
			 	    	        {
				 	    	    	if(VehiculoConCajas[Fabricas[f][Auto1F]] > 0)
				 	    	    	{
					 	    	        if(VehiculoConCajas[Fabricas[f][Auto1F]] == 1) { DestroyDynamicObject(CajaMeta[f][0]); CajaMeta[f][0] = CreateDynamicObject(1271,0,0,-1000,0,0,0, Fabricas[f][pVW],Fabricas[f][pInt]); }
										else if(VehiculoConCajas[Fabricas[f][Auto1F]] == 2) { DestroyDynamicObject(CajaMeta[f][1]); CajaMeta[f][1] = CreateDynamicObject(1271,0,0,-1000,0,0,0, Fabricas[f][pVW],Fabricas[f][pInt]); }
										else if(VehiculoConCajas[Fabricas[f][Auto1F]] == 3) { DestroyDynamicObject(CajaMeta[f][2]); CajaMeta[f][2] = CreateDynamicObject(1271,0,0,-1000,0,0,0, Fabricas[f][pVW],Fabricas[f][pInt]); }
										else if(VehiculoConCajas[Fabricas[f][Auto1F]] == 4) { DestroyDynamicObject(CajaMeta[f][3]); CajaMeta[f][3] = CreateDynamicObject(1271,0,0,-1000,0,0,0, Fabricas[f][pVW],Fabricas[f][pInt]); }
										else if(VehiculoConCajas[Fabricas[f][Auto1F]] == 5) { DestroyDynamicObject(CajaMeta[f][4]); CajaMeta[f][4] = CreateDynamicObject(1271,0,0,-1000,0,0,0, Fabricas[f][pVW],Fabricas[f][pInt]); }
										VehiculoConCajas[Fabricas[f][Auto1F]] --;
										TieneCajaMeta[playerid] = 1;
										LCaja(playerid);
										SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
										SetPlayerAttachedObject(playerid, 2, 1271, 1, 0.216000, 0.365000, -0.032000, 0.000000, 0.000000, 0.000000, 0.667000, 0.651999, 0.568000);
										AccionesRol(playerid, "agarró una caja de metanfetaminas de la camioneta.", 20);
									}
								}
	 					    }
							else if(TieneCajaMeta[playerid] == 1)
			 	    	    {
			 	    	        if(VehiculoConBarril[Fabricas[f][Auto1F]] == 0)
			 	    	        {
			 	    	            if(VehiculoConCajas[Fabricas[f][Auto1F]] < 5)
			 	    	            {
				 	    	            if(VehiculoConCajas[Fabricas[f][Auto1F]] == 0) AttachDynamicObjectToVehicle(CajaMeta[f][0], Fabricas[f][Auto1F], -0.011962,-1.074538,0.107927,-0.199999,0.000000,0.000000);
					 	    	        else if(VehiculoConCajas[Fabricas[f][Auto1F]] == 1) AttachDynamicObjectToVehicle(CajaMeta[f][1], Fabricas[f][Auto1F], 0.000000,-1.999999,0.100000,0.349999,-1.149999,0.000000);
					 	    	        else if(VehiculoConCajas[Fabricas[f][Auto1F]] == 2) AttachDynamicObjectToVehicle(CajaMeta[f][2], Fabricas[f][Auto1F], -0.007348,-1.509131,0.746309,0.000000,0.000000,0.000000);
					 	    	        else if(VehiculoConCajas[Fabricas[f][Auto1F]] == 3) AttachDynamicObjectToVehicle(CajaMeta[f][3], Fabricas[f][Auto1F], 0.658764,-2.240282,0.650753,0.000000,34.049999,0.000000);
					 	    	        else if(VehiculoConCajas[Fabricas[f][Auto1F]] == 4) AttachDynamicObjectToVehicle(CajaMeta[f][4], Fabricas[f][Auto1F], -0.714648,-2.216089,0.620124,0.000000,-29.000000,0.000000);
					 	    	        VehiculoConCajas[Fabricas[f][Auto1F]] ++;
					 	    	        TieneCajaMeta[playerid] = 0;
					 	    	        DCaja(playerid);
					 	    	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
					 	    	        RemovePlayerAttachedObject(playerid, 2);
					 	    	        AccionesRol(playerid, "dejó una caja con metanfetaminas en la camioneta.", 20);
				 	    	        }
			 	    	        }
							}
						}
		 	    	}
	            }
	            if(IsPlayerInRangeOfPoint(playerid,2.0, 235.7830,109.9401,1010.2188))
				{
				    if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda])
					{
					    if(TraeDinero[playerid] == 1)
					    {
					        if(Fabricas[f][bolsospagados] < 6 && Fabricas[f][pSoborno] == 0)
					        {
					            if(Fabricas[f][PagarActiva] == 1)
					            {
						            new string[128];
						            RemovePlayerAttachedObject(playerid, 2);
						            TraeDinero[playerid] = 0;
						            Fabricas[f][bolsospagados] += 1;
						            new soborno = 5-Fabricas[f][bolsospagados];
						            if(Fabricas[f][bolsospagados] < 5) format(string,sizeof(string),"Tu banda pagó {00CC00}$1000000{FFFFFF} de soborno y aún falta pagar {EB0000}$%d000000{FFFFFF}.",soborno);
						            else
						            {
						                Fabricas[f][pSoborno] = 1;
						                Fabricas[f][PagarActiva] = 0;
										GuardarFabrica(f);
										format(string,sizeof(string),"Tu banda {00CC00}pagó el soborno{FFFFFF} semanal a la {3399FF}policía{FFFFFF}.",soborno);
			                        }
									MandarMensajeFabrica(f,string);
								}
							}
							else SendClientMessage(playerid,-1,"El dinero del soborno ya se pagó.");
						}
	                }
				}
		 	    if(IsPlayerInRangeOfPoint(playerid,1.8, -2025.2623,253.8624,1035.8389))
		 	    {
				    if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda])
				    {
				        switch(TraeDinero[playerid])
				        {
					        case 0:
					        {
					            if(TiempoBolso[playerid] != 0) return 1;
						        if(Fabricas[f][pCantidadDinero] < 1000000) return SendClientMessage(playerid,-1,"No hay suficiente dinero para sacar.");
		                        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
								TraeDinero[playerid] = 1;
								AccionesRol(playerid,"agarró un bolso con dinero.", 20);
			                    Fabricas[f][pCantidadDinero] -= 1000000;
			                    ActualizarBolsos(f, 2);
			                    SetPlayerAttachedObject(playerid, 2, 1550, 1, 0.116999, -0.283999, -0.046999, -178.400024, 81.999984, -5.399999, 1.000000, 1.000000, 1.000000);
			                    ActualizarDineroPared(f);
			                    GuardarFabrica(f);
			                    TiempoBolso[playerid] = 3;
		                    }
		                    case 1:
					        {
					            if(TiempoBolso[playerid] != 0) return 1;
		                        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
			                    TraeDinero[playerid] = 0;
			                    AccionesRol(playerid,"dejó un bolso de dinero en el suelo.", 20);
			                    Fabricas[f][pCantidadDinero] += 1000000;
			                    ActualizarBolsos(f, 1);
			                    RemovePlayerAttachedObject(playerid, 2);
								ActualizarDineroPared(f);
								GuardarFabrica(f);
								TiempoBolso[playerid] = 3;
		                    }
	                    }
	                }
				}
		 	    if(IsPlayerInRangeOfPoint(playerid,1.5,-2019.9447,243.5474,1035.8162)) // Sacar Armas
		 	    {
		 	        if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda] && GetPlayerVirtualWorld(playerid) == Fabricas[f][pVW])
					{
					    new string[300];
		    	    	format(string,sizeof(string),"Arma\tCantidad Disponible\n{FFFFFF}Sniper rifle\t{00CC00}%d{FFFFFF}\nEscopeta recortada\t{00CC00}%d{FFFFFF}\nMicro UZI\t{00CC00}%d{FFFFFF}\nTec-9\t{00CC00}%d{FFFFFF}",Fabricas[f][pSniper],Fabricas[f][pRecortada],Fabricas[f][pUzi],Fabricas[f][pTec9]);
		    	    	ShowPlayerDialog(playerid, F_SACARMA, DIALOG_STYLE_TABLIST_HEADERS, "Tomar arma", string, "Aceptar","Cancelar");
					}
		 	    }
		    	if(IsPlayerInRangeOfPoint(playerid,1.7,-2020.3898,252.1498,1035.8389))
		    	{
					if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda] && GetPlayerVirtualWorld(playerid) == Fabricas[f][pVW])
					{
						if(PlayerInfo[playerid][pRango] == 8)
				     	{
		    	    		new string[300];
		    	    		format(string,sizeof(string),"Contratar empleados\nComprar armas\nComprar chalecos antibalas\nRegresar vehiculo de la fábrica\nRegresar vehiculo de distracción");
		    	    		ShowPlayerDialog(playerid, ADMINISTRACION, DIALOG_STYLE_LIST, "Administración de fábrica", string, "Siguiente","Salir");
						}
						else SendClientMessage(playerid,-1,"Solamente el {EB0000}líder de la banda{FFFFFF} puede administrar la fábrica.");
	                }
				}
				else if(IsPlayerInRangeOfPoint(playerid,1.5, -2020.0726,238.9793,1035.8162))
				{
	                if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda] && GetPlayerVirtualWorld(playerid) == Fabricas[f][pVW])
				    {
				        new Float:armadura;
						GetPlayerArmour(playerid, armadura);
				        if(Fabricas[f][pChalecos] < 1) return SendClientMessage(playerid,-1,"No hay chalecos aqui.");
						if(armadura >= 91) return 1;
						EstablecerChaleco(playerid,100);
						ActualizarCantidadChalecos(f);
						ActualizarCantidadFChale(f,0,1);
						GuardarFabrica(f);
				    }
				}
		    	else if(IsPlayerInRangeOfPoint(playerid,2,-2018.3846,248.9650,1035.8389))
		    	{
	                if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda] && GetPlayerVirtualWorld(playerid) == Fabricas[f][pVW])
				    {
			    	    new string[128];
			    	    format(string,sizeof(string),"Adquirir químicos\nVender metanfetamina\nPagar soborno a la policía");
			    	    ShowPlayerDialog(playerid, ACTIVIDAD, DIALOG_STYLE_LIST, "Actividades", string, "Realizar","Cancelar");
	                }
	    	    }
            }
	   	}
    }
	if(newkeys & KEY_YES)
	{
	    if(!IsPlayerInAnyVehicle(playerid))
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 1.5, -2019.9447,243.5474,1035.8162))
			{
			    Loop(f,MAX_FABRICAS)
			    if(Fabricas[f][pBanda] == PlayerInfo[playerid][pFaccion])
			    {
			        if(GetPlayerWeapon(playerid) == 32 || GetPlayerWeapon(playerid) == 26 || GetPlayerWeapon(playerid) == 34 || GetPlayerWeapon(playerid) == 28)
					{
					    if(GetPlayerWeapon(playerid) == 34 && Fabricas[f][pSniper] > 9) return SendClientMessage(playerid,-1,"El estante se encuentra lleno.");
					    if(GetPlayerWeapon(playerid) == 26 && Fabricas[f][pRecortada] > 9) return SendClientMessage(playerid,-1,"El estante no puede contener más de este tipo de arma.");
					    if(GetPlayerWeapon(playerid) == 28 && Fabricas[f][pUzi] > 9) return SendClientMessage(playerid,-1,"El estante no puede contener más de este tipo de arma.");
                        if(GetPlayerWeapon(playerid) == 32 && Fabricas[f][pTec9] > 9) return SendClientMessage(playerid,-1,"El estante se encuentra lleno.");
						SendClientMessage(playerid,-1,"{00CC00}Guardaste un arma{FFFFFF} en el depósito de la fábrica.");
					    switch(GetPlayerWeapon(playerid))
					    {
					        case 26: { Fabricas[f][pRecortada] ++; ActualizarRecortadas(f,1); }
					        case 28: { Fabricas[f][pUzi] ++; ActualizarUzi(f,1); }
					        case 32: { Fabricas[f][pTec9] ++; ActualizarTec(f,1);}
					        case 34: { Fabricas[f][pSniper] ++; ActualizarSnipers(f,1); }
                    	}
                    	QuitarArma(playerid, GetPlayerWeapon(playerid));
                    	ActualizarLabelArmas(f);
                    	GuardarFabrica(f);
					}
				}
			}
	        new accesoa=0;
	        //ENTRADA
	        if(IsPlayerInRangeOfPoint(playerid, 1.0, 386.7000, 174.4800, 1040.5500))
			{
			    if(Emisoras[playerid][TieneEmisora] == 1 || PlayerInfo[playerid][pAdmin] > ADMIN_LEVEL_DUDAS) accesoa=1;
				if(accesoa == 1)
				{
					if(YaEstaAbierta[1] == 0)
					{
						YaEstaAbierta[1] = 1;
						ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
						return MoveDynamicObject(PuertasDeBotones[2],390.000000, 174.539993, 1039.109985, 3.0);
					}
					else
					{
						YaEstaAbierta[1] = 0;
						ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
						return MoveDynamicObject(PuertasDeBotones[2],388.7088, 174.3999, 1039.1100, 3.0);
	    			}
				}
			}
			//SALA 1
			if(IsPlayerInRangeOfPoint(playerid, 1.0, 349.0600, 178.2900, 1040.4500))
			{
			    if(CabinasOcupadasEmisoras[1][0] == 1)	{	if(CabinasOcupadasEmisoras[1][1] == playerid) accesoa=1;	}
				else if(CabinasOcupadasEmisoras[1][0] == 0 && (Emisoras[playerid][TieneEmisora] == 1 || PlayerInfo[playerid][pAdmin] > ADMIN_LEVEL_DUDAS)) accesoa=1;
				if(accesoa == 1)
				{
					if(YaEstaAbierta[1] == 0)
					{
						YaEstaAbierta[1] = 1;
						ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
						return MoveDynamicObject(PuertasDeBotones[4],349.2600, 177.4100, 1039.1100, 3.0);
					}
					else
					{
						YaEstaAbierta[1] = 0;
						ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
						return MoveDynamicObject(PuertasDeBotones[4],349.260010, 178.690002, 1039.109985, 3.0);
					}
				}
			}
			//SALA 2
			if(IsPlayerInRangeOfPoint(playerid, 1.0, 349.0272, 160.3499, 1040.4500))
			{
			    if(CabinasOcupadasEmisoras[2][0] == 1)	{	if(CabinasOcupadasEmisoras[2][1] == playerid) accesoa=1;	}
				else if(CabinasOcupadasEmisoras[2][0] == 0 && (Emisoras[playerid][TieneEmisora] == 1 || PlayerInfo[playerid][pAdmin] > ADMIN_LEVEL_DUDAS)) accesoa=1;
				if(accesoa == 1)
				{
					if(YaEstaAbierta[2] == 0)
					{
						YaEstaAbierta[2] = 1;
						ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
						return MoveDynamicObject(PuertasDeBotones[6],349.2600, 159.4300, 1039.1100, 3.0);
					}
					else
					{
						YaEstaAbierta[2] = 0;
						ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
						return MoveDynamicObject(PuertasDeBotones[6],349.260010, 160.729996, 1039.109985, 3.0);
					}
				}
			}
			//SALA 3
			if(IsPlayerInRangeOfPoint(playerid, 1.0, 349.0400, 148.8500, 1040.4500))
			{
			    if(CabinasOcupadasEmisoras[3][0] == 1)	{	if(CabinasOcupadasEmisoras[3][1] == playerid)	accesoa=1;	}
				else if(CabinasOcupadasEmisoras[3][0] == 0 && (Emisoras[playerid][TieneEmisora] == 1 || PlayerInfo[playerid][pAdmin] > ADMIN_LEVEL_DUDAS)) accesoa=1;
				if(accesoa == 1)
				{
					if(YaEstaAbierta[3] == 0)
					{
						YaEstaAbierta[3] = 1;
						ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
						return MoveDynamicObject(PuertasDeBotones[8],349.1800, 147.9900, 1039.1100, 3.0);
					}
					else
					{
						YaEstaAbierta[3] = 0;
						ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
						return MoveDynamicObject(PuertasDeBotones[8],349.1800, 149.2300, 1039.1100, 3.0);
					}
				}
			}
			//SALA 4
			if(IsPlayerInRangeOfPoint(playerid, 1.0, 363.1623, 152.4068, 1040.4500))
			{
			    if(CabinasOcupadasEmisoras[4][0] == 1)	{	if(CabinasOcupadasEmisoras[4][1] == playerid)	accesoa=1;	}
				else if(CabinasOcupadasEmisoras[4][0] == 0 && (Emisoras[playerid][TieneEmisora] == 1 || PlayerInfo[playerid][pAdmin] > ADMIN_LEVEL_DUDAS)) accesoa=1;
				if(accesoa == 0)
				{
					if(YaEstaAbierta[4] == 0)
					{
						YaEstaAbierta[4] = 1;
						ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
						return MoveDynamicObject(PuertasDeBotones[10],359.9500, 152.3300, 1039.1100, 3.0);
					}
					else
					{
						YaEstaAbierta[4] = 0;
						ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
						return MoveDynamicObject(PuertasDeBotones[10],361.2100, 152.3300, 1039.1100, 3.0);
					}
                }
			}
			// BOTON FORT CARSON
			if(IsPlayerInRangeOfPoint(playerid, 1.0, 223.1140, 1429.5740, 1091.4900))
			{
			    if(PlayerInfo[playerid][pDuty] != 0)
				{
				    ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
					MoveDynamicObject(PuertasFC[1],220.6440, 1429.5300, 1091.4500,3);
					SetTimer("Cerrar_RejaFC1", 3000, 0);
				}
			}
			// BOTON FORT CARSON
			if(IsPlayerInRangeOfPoint(playerid, 1.0, 211.4600, 1442.8979, 1091.4900))
			{
			    if(PlayerInfo[playerid][pDuty] != 0)
				{
				    ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
					MoveDynamicObject(PuertasFC[2],208.9680, 1442.9100, 1091.4399,3);
					SetTimer("Cerrar_RejaFC2", 3000, 0);
				}
			}
			// BOTON FORT CARSON
			if(IsPlayerInRangeOfPoint(playerid, 1.0, 206.8940, 1442.9100, 1085.2300))
			{
			    if(PlayerInfo[playerid][pDuty] != 0)
				{
				    ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
					MoveDynamicObject(PuertasFC[3],206.6800, 1440.3900, 1085.0900,3);
					SetTimer("Cerrar_RejaFC3", 3000, 0);
				}
			}
			// BOTON FORT CARSON
			if(IsPlayerInRangeOfPoint(playerid, 1.0, 201.4500, 1447.4900, 1085.2100))
			{
			    if(PlayerInfo[playerid][pDuty] != 0)
				{
				    ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
					MoveDynamicObject(PuertasFC[4],201.3900, 1448.9821, 1083.8400,3);
					SetTimer("Cerrar_RejaFC4", 3000, 0);
				}
			}
			// BOTON FORT CARSON
			if(IsPlayerInRangeOfPoint(playerid, 0.5, 170.3860, 1450.8101, 1085.2100))
			{
       		    if(PlayerInfo[playerid][pDuty] != 0)
				{
				    if(rejacuartilla == 0)
				    {
				        rejacuartilla = 1;
				    	ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
						MoveDynamicObject(PuertasFC[5],170.3500, 1449.9479, 1085.0900,3);
					}
					else if(rejacuartilla == 1)
				    {
				        rejacuartilla = 0;
				    	ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
						MoveDynamicObject(PuertasFC[5],170.35001, 1448.48999, 1085.08997,3);
					}
				}
			}
			// BOTON LVPD
			if(IsPlayerInRangeOfPoint(playerid, 1.0, 209.0449, 177.1701, 1003.5126))
			{
			    if(PlayerInfo[playerid][pDuty] != 0)
				{
				    ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
					MoveDynamicObject(PuertasLVPD[1],208.9700, 179.9100, 1003.2800,3);
					SetTimer("Cerrar_RejaLVPD1", 3000, 0);
				}
			}
			// BOTON LVPD
			if(IsPlayerInRangeOfPoint(playerid, 1.0, 209.1364, 160.2765, 1003.5126))
			{
			    if(PlayerInfo[playerid][pDuty] != 0)
				{
				    ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
					MoveDynamicObject(PuertasLVPD[2],209.0100, 157.4540, 1003.2800,3);
					SetTimer("Cerrar_RejaLVPD2", 3000, 0);
				}
			}
			// BOTON ACADEMIA
			if(IsPlayerInRangeOfPoint(playerid, 1.0, 639.9840, -187.0800, 1277.1400))
			{
			    if(PlayerInfo[playerid][pDuty] != 0 && PlayerInfo[playerid][pRango] > 3)
				{
				    ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
					MoveDynamicObject(PuertasACA[1],636.8300, -187.1200, 1275.8000,3);
					SetTimer("Cerrar_RejaACA1", 3000, 0);
				}
			}
			// BOTON ACADEMIA
			if(IsPlayerInRangeOfPoint(playerid, 1.0, 643.1800, -210.3840, 1277.1400))
			{
			    if(PlayerInfo[playerid][pDuty] != 0 && PlayerInfo[playerid][pRango] > 3)
				{
				    ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
					MoveDynamicObject(PuertasACA[2],646.3500, -210.2300, 1275.8000,3);
					SetTimer("Cerrar_RejaACA2", 3000, 0);
				}
			}
			// BOTON ACADEMIA
			if(IsPlayerInRangeOfPoint(playerid, 1.0, 645.2700, -217.0220, 1277.1400))
			{
			    if(PlayerInfo[playerid][pDuty] != 0 && PlayerInfo[playerid][pRango] > 3)
				{
				    ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
					MoveDynamicObject(PuertasACA[3],646.3920, -217.0800, 1275.7600,3);
					SetTimer("Cerrar_RejaACA3", 3000, 0);
				}
			}
			// BOTON ACADEMIA
			if(IsPlayerInRangeOfPoint(playerid, 1.0, 642.7260, -224.4200, 1277.1400))
			{
			    if(PlayerInfo[playerid][pDuty] != 0 && PlayerInfo[playerid][pRango] > 3)
				{
				    ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
					MoveDynamicObject(PuertasACA[4],642.7700, -227.3580, 1275.7600,3);
					SetTimer("Cerrar_RejaACA4", 3000, 0);
				}
			}
			// BOTON ACADEMIA
			if(IsPlayerInRangeOfPoint(playerid, 1.0, 642.6900, -237.2600, 1277.1400))
			{
			    if(PlayerInfo[playerid][pDuty] != 0 && PlayerInfo[playerid][pRango] > 3)
				{
				    ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
					MoveDynamicObject(PuertasACA[5],642.7500, -236.2000, 1275.7600,3);
					SetTimer("Cerrar_RejaACA5", 3000, 0);
				}
			}
			// BOTON ACADEMIA
			if(IsPlayerInRangeOfPoint(playerid, 1.0, 645.1000, -239.8460, 1277.1400))
			{
			    if(PlayerInfo[playerid][pDuty] != 0 && PlayerInfo[playerid][pRango] > 3)
				{
				    ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
					MoveDynamicObject(PuertasACA[6],643.9860, -239.7800, 1275.7600,3);
					SetTimer("Cerrar_RejaACA6", 3000, 0);
				}
			}
			// BOTON ABRIR PUERTA LSPD
			if(IsPlayerInRangeOfPoint(playerid, 1.0, 1582.40552, -1637.85229, 13.70560))
			{
			    if(PlayerInfo[playerid][pDuty] != 0)
				{
				    ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
					MoveDynamicObject(puerta_1,1581.2899, -1638.0200, 12.4100,3);
					SetTimer("Cerrar_Puerta1", 3000, 0);
				}
			}
			// BOTON ABRIR PUERTA LSPD
			if(IsPlayerInRangeOfPoint(playerid, 1.0, 1582.40283, -1638.34985, 13.70560))
			{
			    if(PlayerInfo[playerid][pDuty] != 0)
				{
					ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
					MoveDynamicObject(puerta_1,1581.2899, -1638.0200, 12.4100,3);
					SetTimer("Cerrar_Puerta1", 3000, 0);
				}
			}
			// BOTON CELDAS LSPD
			if(IsPlayerInRangeOfPoint(playerid, 1.0, 216.32980, 116.65350, 999.39240))
			{
			    if(PlayerInfo[playerid][pDuty] != 0)
				{
				    ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
					MoveDynamicObject(puerta_2,215.5482, 116.5364, 998.0455,3);
					MoveDynamicObject(puerta_3,220.1184, 116.5364, 998.0455,3);
					SetTimer("Cerrar_Puerta2", 3000, 0);
				}
			}
			// BOTON CELDAS LSPD
			if(IsPlayerInRangeOfPoint(playerid, 1.0, 216.28259, 116.40660, 999.39240))
			{
			    if(PlayerInfo[playerid][pDuty] != 0)
				{
				    ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
					MoveDynamicObject(puerta_2,215.5482, 116.5364, 998.0455,3);
					MoveDynamicObject(puerta_3,220.1184, 116.5364, 998.0455,3);
					SetTimer("Cerrar_Puerta2", 3000, 0);
				}
			}
	    }
	}
	if(newkeys & KEY_YES)
	{
	    if(IsAtPantallaStation(playerid)) MostrarPantalla(playerid);
	    if(IsPlayerInRangeOfPoint(playerid, 7.0, -28.0060,-89.9514,1003.5469))  // 24/7
		{
			new str[344+1];
			format(str, sizeof(str), "%sTeléfono móvil ($1500)\nGuía telefónica ($35)\nTraba de seguridad para vehículos\nAlarma para vehículos.\nRadio comunicador ($2000)\nGPS ($1500)\nBebida par", str);
			format(str, sizeof(str), "%sa guardar en heladera: Cerveza x6 unidades ($470)\nBebida para guardar en heladera: Vino x6 unidades ($590)\nBebida para guardar en heladera: Sprunk x4 unidades ($200)\nBebida: Sprunk ($65)", str);
			ShowPlayerDialog(playerid, PRODUCTOS, DIALOG_STYLE_LIST, "{DBED16}Productos y servicios (24/7).", str, "Comprar", "Salir");
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, -784.2098,500.1945,1371.7422)) // Restaurante
		{
			ShowPlayerDialog(playerid, PRODUCTOS2, DIALOG_STYLE_TABLIST_HEADERS, "{DBED16}Lista de productos","Producto\tPrecio\nCerveza\t{00CC00}$80{FFFFFF}\nVino\t{00CC00}$100{FFFFFF}\nVaso de sprunk\t{00CC00}$60{FFFFFF}\n\
			Aquarius\t{00CC00}$160{FFFFFF}","Comprar", "Salir");
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 373.7276,-118.8039,1001.4922)) // Pizzeria
		{
			ShowPlayerDialog(playerid, DIALOG_PIZZA, DIALOG_STYLE_TABLIST_HEADERS, "{DBED16}Lista de productos",
			"Producto\tPrecio\n\
			Porción de pizza\t{00CC00}$40{FFFFFF}\n\
			Pizza completa {232621}- (Para llevar)\t{00CC00}$300{FFFFFF}\n\
			Sprunk\t{00CC00}$70{FFFFFF}\n\
			Aquarius\t{00CC00}$170{FFFFFF}",
			"Comprar", "Salir");
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1214.8492,-13.3533,1000.9219) || IsPlayerInRangeOfPoint(playerid, 2.0, 969.3793,-44.8069,1001.1172) ||IsPlayerInRangeOfPoint(playerid, 2.0, 214.9070,-13.3532,1000.9219) ||IsPlayerInRangeOfPoint(playerid, 2.0, -1262.6428,2119.9490,1246.5457) || IsPlayerInRangeOfPoint(playerid, 2.0, -1396.3044,-320.4939,1052.0834) || IsPlayerInRangeOfPoint(playerid, 2.0, 499.9690,-20.6826,1000.6797)) // Salón de eventos
		{
			ShowPlayerDialog(playerid, DIALOG_SALON, DIALOG_STYLE_TABLIST_HEADERS, "{DBED16}Lista de productos",
			"Producto\tPrecio\n\
			Vino\t{00CC00}$110{FFFFFF}\n\
			Cerveza\t{00CC00}$80{FFFFFF}\n\
			Vaso de sprunk\t{00CC00}$70{FFFFFF}\n\
			Aquarius\t{00CC00}$170{FFFFFF}",
			"Comprar", "Salir");
		}
	    if(EnBotiquin(playerid)) MostrarBotiquin(playerid);
	    if(EnCajero(playerid))
		{
			ShowPlayerDialog(playerid, BANCO, DIALOG_STYLE_LIST, "{FFFFFF}Selecciona la operación que desees realizar", "Retirar\nDepositar\nConsultar saldo \nTransferir dinero", "Seleccionar", "Cancelar");
		}
		if(EnVerMapa(playerid))
		{
			ShowPlayerDialog(playerid, GPS, DIALOG_STYLE_LIST, "Puntos de interés", "Concesionarias\nBancos\n24/7\nTrabajos\nEdificios del gobierno\nTiendas de ropa", "Siguiente", "Cancelar");
        }
       	MostrarHeladera(playerid);
   		if(IsPlayerInRangeOfPoint(playerid,10,254.2685,-41.5420,1002.0308) && GetPlayerInterior(playerid) == 14)
	    {
	       	MostrarEstanteria(playerid);
	    }
        for(new f = 0; f < MAX_FABRICAS; f++)
		{
		    if(IsPlayerInRangeOfPoint(playerid,0.6,-2022.8929, 253.0043, 1036.1030))
			{
			    if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda])
			    {
			        if(PlayerInfo[playerid][pRango] == 8)
			        {
			            if(GetPlayerInterior(playerid) != Fabricas[f][pInt] && GetPlayerVirtualWorld(playerid) != Fabricas[f][pVW]) return 1;
			            if(PuertaAbiertaFabrica[f] == 0)
			    		{
			    	    	PuertaAbiertaFabrica[f] = 1;
			    	    	ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
	                    	MoveDynamicObject(Fabricas[f][pPuerta],-2022.93274, 255.60370, 1036.06921, 0.8);
			    		}
			    		else
			    		{
			    	    	PuertaAbiertaFabrica[f] = 0;
			    	    	ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
			            	MoveDynamicObject(Fabricas[f][pPuerta],-2022.93274, 254.14169, 1036.06921, 0.7);
			    		}
			        }
			    }
			}
			//HORNOS
			if(IsPlayerInRangeOfPoint(playerid,3,-1992.2786, 194.1294, 1035.4269))
			{
			    if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda])
			    {
			        if(GetPlayerInterior(playerid) != Fabricas[f][pInt] && GetPlayerVirtualWorld(playerid) != Fabricas[f][pVW]) return 0;
			        if(HornoUsarP[playerid] != 0) return 1;
			        switch(HornoEncendido1[f])
					{
					    case 0:
						{
						    if(Fabricas[f][pTanqueUno] == 0 && Fabricas[f][pTanqueDos] == 0 && Fabricas[f][pTanqueTres] == 0) return SendClientMessage(playerid,-1,"No hay químicos en los tanques para procesar.");
						    Fabricas[f][humo1] = CreateDynamicObject(18725, -1992.2786, 194.1294, 1035.4269-1.3,   0.00000, 0.00000, 16.73000, Fabricas[f][pVW],Fabricas[f][pInt]);
						    HornoUsarP[playerid] = 2;
						    new string[256];
						    Fabricas[f][tiempoh1] = SetTimerEx("Horno1",TIEMPO_COCINA,true,"d",f);
						    AccionesRol(playerid, "encendió una cocina de metanfetamina.", 20);
						    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
					        HornoEncendido1[f] = 1;
					        format(string,sizeof(string),"{DBED16}Cocina: #1{FFFFFF}\nProducción: {3d83ce}%d%%{FFFFFF} completada.\nEstado: %s{FFFFFF}\n\n%s{FFFFFF}%s",Fabricas[f][Porcentaje1],EstadoH(HornoEncendido1[f]),EstadoHo(HornoEncendido1[f]),EstadoCristal(Fabricas[f][Crisol1]));
					        UpdateDynamic3DTextLabelText(Fabricas[f][olla1], COLOR_WHITE, string);
					    }
					    case 1:
					    {
					        DestroyDynamicObject(Fabricas[f][humo1]);
					        HornoUsarP[playerid] = 2;
					        new string[256];
					        KillTimer(Fabricas[f][tiempoh1]);
					        AccionesRol(playerid, "apagó una cocina de metanfetamina.", 20);
					        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
					        HornoEncendido1[f] = 0;
					        format(string,sizeof(string),"{DBED16}Cocina: #1{FFFFFF}\nProducción: {3d83ce}%d%%{FFFFFF} completada.\nEstado: %s{FFFFFF}\n\n%s{FFFFFF}%s",Fabricas[f][Porcentaje1],EstadoH(HornoEncendido1[f]),EstadoHo(HornoEncendido1[f]),EstadoCristal(Fabricas[f][Crisol1]));
							UpdateDynamic3DTextLabelText(Fabricas[f][olla1], COLOR_WHITE, string);
						}
					}
			    }
			}
			else if(IsPlayerInRangeOfPoint(playerid,3,-1995.6786, 194.1294, 1035.4269))
			{
			    if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda])
			    {
			    	if(GetPlayerInterior(playerid) != Fabricas[f][pInt] && GetPlayerVirtualWorld(playerid) != Fabricas[f][pVW]) return 0;
			    	if(HornoUsarP[playerid] != 0) return 1;
			        switch(HornoEncendido2[f])
					{
					    case 0:
					    {
					        if(Fabricas[f][pTanqueCuatro] == 0 && Fabricas[f][pTanqueCinco] == 0 && Fabricas[f][pTanqueSeis] == 0) return SendClientMessage(playerid,-1,"No hay químicos en los tanques para procesar.");
					        Fabricas[f][humo2] = CreateDynamicObject(18725, -1995.6786, 194.1294, 1035.4269-1.3,   0.00000, 0.00000, 16.73000, Fabricas[f][pVW],Fabricas[f][pInt]);
					        HornoUsarP[playerid] = 2;
					        new string[256];
					        Fabricas[f][tiempoh2] = SetTimerEx("Horno2",TIEMPO_COCINA,true,"d",f);
					        AccionesRol(playerid, "encendió una cocina de metanfetamina.", 20);
					        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
					        HornoEncendido2[f] = 1;
					        format(string,sizeof(string),"{DBED16}Cocina: #2{FFFFFF}\nProducción: {3d83ce}%d%%{FFFFFF} completada.\nEstado: %s{FFFFFF}\n\n%s{FFFFFF}%s",Fabricas[f][Porcentaje2],EstadoH(HornoEncendido2[f]),EstadoHo(HornoEncendido2[f]),EstadoCristal(Fabricas[f][Crisol2]));
							UpdateDynamic3DTextLabelText(Fabricas[f][olla2], COLOR_WHITE, string);
						}
					    case 1:
					    {
					        DestroyDynamicObject(Fabricas[f][humo2]);
					        HornoUsarP[playerid] = 2;
					        new string[256];
					        KillTimer(Fabricas[f][tiempoh2]);
					        AccionesRol(playerid, "apagó una cocina de metanfetamina.", 20);
					        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
					        HornoEncendido2[f] = 0;
					        format(string,sizeof(string),"{DBED16}Cocina: #2{FFFFFF}\nProducción: {3d83ce}%d%%{FFFFFF} completada.\nEstado: %s{FFFFFF}\n\n%s{FFFFFF}%s",Fabricas[f][Porcentaje2],EstadoH(HornoEncendido2[f]),EstadoHo(HornoEncendido2[f]),EstadoCristal(Fabricas[f][Crisol2]));
							UpdateDynamic3DTextLabelText(Fabricas[f][olla2], COLOR_WHITE, string);
					    }
					}
			    }
			}
			else if(IsPlayerInRangeOfPoint(playerid,3,-1999.1986, 194.1294, 1035.4269))
			{
			    if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda])
			    {
			        if(GetPlayerInterior(playerid) != Fabricas[f][pInt] && GetPlayerVirtualWorld(playerid) != Fabricas[f][pVW]) return 0;
			        if(HornoUsarP[playerid] != 0) return 1;
			        switch(HornoEncendido3[f])
					{
					    case 0:
					    {
					        if(Fabricas[f][pTanqueSiete] == 0 && Fabricas[f][pTanqueOcho] == 0 && Fabricas[f][pTanqueNueve] == 0) return SendClientMessage(playerid,-1,"No hay químicos en los tanques para procesar.");
					        Fabricas[f][humo3] = CreateDynamicObject(18725, -1999.1986, 194.1294, 1035.4269-1.3,   0.00000, 0.00000, 16.73000, Fabricas[f][pVW],Fabricas[f][pInt]);
					        HornoUsarP[playerid] = 2;
					        new string[256];
					        Fabricas[f][tiempoh3] = SetTimerEx("Horno3",TIEMPO_COCINA,true,"d",f);
					        AccionesRol(playerid, "encendió una cocina de metanfetamina.", 20);
					        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
					        HornoEncendido3[f] = 1;
					        format(string,sizeof(string),"{DBED16}Cocina: #3{FFFFFF}\nProducción: {3d83ce}%d%%{FFFFFF} completada.\nEstado: %s{FFFFFF}\n\n%s{FFFFFF}",Fabricas[f][Porcentaje3],EstadoH(HornoEncendido3[f]),EstadoHo(HornoEncendido3[f]),EstadoCristal(Fabricas[f][Crisol3]));
							UpdateDynamic3DTextLabelText(Fabricas[f][olla3], COLOR_WHITE, string);
					    }
					    case 1:
					    {
					        DestroyDynamicObject(Fabricas[f][humo3]);
					        HornoUsarP[playerid] = 2;
					        new string[256];
					        KillTimer(Fabricas[f][tiempoh3]);
					        AccionesRol(playerid, "apagó una cocina de metanfetamina.", 20);
					        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
					        HornoEncendido3[f] = 0;
					        format(string,sizeof(string),"{DBED16}Cocina: #3{FFFFFF}\nProducción: {3d83ce}%d%%{FFFFFF} completada.\nEstado: %s{FFFFFF}\n\n%s{FFFFFF}%s",Fabricas[f][Porcentaje3],EstadoH(HornoEncendido3[f]),EstadoHo(HornoEncendido3[f]),EstadoCristal(Fabricas[f][Crisol3]));
							UpdateDynamic3DTextLabelText(Fabricas[f][olla3], COLOR_WHITE, string);
					    }
					}
			    }
			}
  		}
    }
    if(newkeys & KEY_CROUCH)
    {
        if(!IsPlayerNPC(playerid))
        {
            for(new c = 0; c < MAX_GARAGES; c++)
			{
			    if(EstaInfo[c][pEnUso] == 1)
				{
				    //Entrada estacionamiento auto
					if(IsPlayerInRangeOfPoint(playerid,10,EstaInfo[c][pPosX],EstaInfo[c][pPosY],EstaInfo[c][pPosZ]))
					{
						if(GetPlayerVirtualWorld(playerid) == 0)
						{
							if(EstaInfo[c][pAbierta] == 1)
							{
								if(PlayerInfo[playerid][pCargos] >= 2)
								{
									for(new i = 0; i < MAX_PLAYERS; i++)
									{
										if(PlayerInfo[i][pFaccion] == 1 && PlayerInfo[i][pDuty] == 1 && EstaEnP(playerid,i,15))
										{
											SendClientMessage(playerid,-1,"No puedes entrar si la policía te está siguiendo.");
											return 1;
										}
									}
								}
								if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
								{
								    new var = 0;
								    if(var == 0)
								    {
								        var = 1;
										if(!CAMION(GetPlayerVehicleID(playerid)))
					    				{
											SendClientMessage(playerid, -1, "Ingresaste a un {DBED15}estacionamiento{FFFFFF}, se te descontó {00CC00}$150{FFFFFF} y también por cada pago diario.");
											SendClientMessage(playerid, -1, "Por favor, escribe {DBED15}/estacionar{FFFFFF} para dejar tu vehículo guardado en este estacionamiento.");
											SendClientMessage(playerid, -1, "Al guardarlo te aseguras de que nadie pueda sacarlo del estacionamiento.");
											QuitarDinero(playerid,150);
											PlayerInfo[playerid][pEnEstacionamiento] = 1;
											switch(EstaInfo[c][pInteriorID])
											{
											    case 1:
												{
												    SetVehiclePos(GetPlayerVehicleID(playerid),1708.7855,-1877.0781,-48.7518);
												    SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), EstaInfo[c][pInterior]);
													SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), EstaInfo[c][pVW]);
													SetVehicleZAngle(autos[playerid],82.3527);
												}
												case 2:
                                                {
												    SetVehiclePos(GetPlayerVehicleID(playerid),-1262.4271,461.2766,7.0090);
													SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), EstaInfo[c][pVW]);
													SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), 1);
													SetVehicleZAngle(autos[playerid],88.9209);
												}
												case 3:
												{
												    SetVehiclePos(GetPlayerVehicleID(playerid),2061.2832,2431.7893,10.9384);
													SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), EstaInfo[c][pVW]);
													SetVehicleZAngle(autos[playerid],194.6593);
													SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), 1);
												}
											}
											CargarMapeosEx(playerid);
	                      				}
	                      				else return SendClientMessage(playerid,-1,"No puedes entrar con este tipo de vehículo.");
                      				}
								}
							}
							else
							{
								SetPlayerPos(playerid,EstaInfo[c][pPosX],EstaInfo[c][pPosY],EstaInfo[c][pPosZS]);
								SetPlayerFacingAngle(playerid,EstaInfo[c][pPosA]);
								switch(EstaInfo[c][pInteriorID])
								{
								    case 1: SetPlayerInterior(playerid,EstaInfo[c][pInteriorID]);
                                    case 2: SetPlayerInterior(playerid,1);
                                }
                                SetPlayerFacingAngle(playerid,180.0000);
                                SetPlayerVirtualWorld(playerid,EstaInfo[c][pVW]);
								CargarMapeosEx(playerid);
							}
						}
					}
                    if(IsPlayerInRangeOfPoint(playerid,10,EstaInfo[c][pPosXS],EstaInfo[c][pPosYS],EstaInfo[c][pPosZS]))
					{
						if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
						{
							if(HELISAPD(GetPlayerVehicleID(playerid)) || MOTOSAPD(GetPlayerVehicleID(playerid)) ||SAPD(GetPlayerVehicleID(playerid)) || TAXI(GetPlayerVehicleID(playerid)) || GetPlayerVehicleID(playerid) == autos[playerid] || GetPlayerVehicleID(playerid) == autos2[playerid] || GetPlayerVehicleID(playerid) == autos3[playerid] || GetPlayerVehicleID(playerid) == autos4[playerid])
							{
							    if(EstaInfo[c][pVW] == GetPlayerVirtualWorld(playerid))
								{
									new var = 0;
									if(var == 0)
									{
										var = 1;
										PlayerInfo[playerid][pEnEstacionamiento] = 0;
										new Float:posx, Float:posy, Float:sizex, Float:sizey, Float:sizez;
										GetVehicleModelInfo(GetVehicleModel(GetPlayerVehicleID(playerid)), VEHICLE_MODEL_INFO_SIZE, sizex, sizey, sizez);
										posx = EstaInfo[c][pPosX] - (floatsqroot(sizey + sizey + sizey) * floatsin(-EstaInfo[c][pPosA], degrees));
										posy = EstaInfo[c][pPosY] - (floatsqroot(sizey + sizey + sizey) * floatcos(-EstaInfo[c][pPosA], degrees));
										SetVehiclePos(GetPlayerVehicleID(playerid),posx,posy,EstaInfo[c][pPosZ]);
										SetVehicleZAngle(GetPlayerVehicleID(playerid),EstaInfo[c][pPosA]+180);
										SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), 0);
										SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), 0);
										CargarMapeosEx(playerid);
		                      		}
	                      		}
                      		}
							else return SendClientMessage(playerid,-1,"No puedes salir con un vehículo que no sea de tu propiedad.");
						}
						else
						{
						    if(EstaInfo[c][pVW] == GetPlayerVirtualWorld(playerid))
							{
								SetPlayerPos(playerid,EstaInfo[c][pPosXS],EstaInfo[c][pPosYS],EstaInfo[c][pPosZS]);
								SetPlayerFacingAngle(playerid,EstaInfo[c][pPosAS]);
								SetPlayerInterior(playerid,EstaInfo[c][pInteriorID]);
								SetPlayerVirtualWorld(playerid,EstaInfo[c][pVW]);
								CargarMapeosEx(playerid);
							}
						}
					}
				}
				if(PropInfo[c][pEnUso] == 1)
				{
					if(IsPlayerInRangeOfPoint(playerid,2.5,302.0373,302.1373,999.1484) && GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW] && GetPlayerInterior(playerid) == 4)
					{
						if(PlayerInfo[playerid][pID] == PropInfo[c][pIDPropietario])
						{
							CargarMapeosEx(playerid);
							GuardarPropiedad(c);
							new Float:posx, Float:posy, Float:sizex, Float:sizey, Float:sizez;
							GetVehicleModelInfo(GetVehicleModel(GetPlayerVehicleID(playerid)), VEHICLE_MODEL_INFO_SIZE, sizex, sizey, sizez);
							posx = PropInfo[c][pGX] - (floatsqroot(sizey + sizey + sizey) * floatsin(-PropInfo[c][pGA], degrees));
							posy = PropInfo[c][pGY] - (floatsqroot(sizey + sizey + sizey) * floatcos(-PropInfo[c][pGA], degrees));
							SetVehiclePos(GetPlayerVehicleID(playerid),posx,posy,PropInfo[c][pGZ]);
							SetVehicleZAngle(GetPlayerVehicleID(playerid),PropInfo[c][pGA]+180);
							SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), 0);
							SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), 0);
						}
						else SendClientMessage(playerid,-1,"No puedes sacar vehículos de este garaje.");
					}
					else if(IsPlayerInRangeOfPoint(playerid,7.0,1403.4666,594.2648,1001.0300) && GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
					{
						if(PlayerInfo[playerid][pID] == PropInfo[c][pIDPropietario])
						{
							if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
							{
								CargarMapeosEx(playerid);
								GuardarPropiedad(c);
								new Float:posx, Float:posy, Float:sizex, Float:sizey, Float:sizez;
								GetVehicleModelInfo(GetVehicleModel(GetPlayerVehicleID(playerid)), VEHICLE_MODEL_INFO_SIZE, sizex, sizey, sizez);
								posx = PropInfo[c][pGX] - (floatsqroot(sizey + sizey + sizey) * floatsin(-PropInfo[c][pGA], degrees));
								posy = PropInfo[c][pGY] - (floatsqroot(sizey + sizey + sizey) * floatcos(-PropInfo[c][pGA], degrees));
								SetVehiclePos(GetPlayerVehicleID(playerid),posx,posy,PropInfo[c][pGZ]);
								SetVehicleZAngle(GetPlayerVehicleID(playerid),PropInfo[c][pGA]+180);
								SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), 0);
								SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), 0);
							}
							else SendClientMessage(playerid,-1,"Necesitas estar en un vehículo para sacarlo.");
						}
						else SendClientMessage(playerid,-1,"No puedes sacar vehículos de este garaje.");
					}
				}
		    	if(IsPlayerInRangeOfPoint(playerid,4.5,PropInfo[c][pGX],PropInfo[c][pGY],PropInfo[c][pGZ]) && PropInfo[c][pGX] != 0)
				{
					if(PlayerInfo[playerid][pID] == PropInfo[c][pIDPropietario])
					{
					    if(IsPlayerInAnyVehicle(playerid))
					    {
							if(PlayerInfo[playerid][pCargos] >= 2)
							{
								for(new i = 0; i < MAX_PLAYERS; i++)
								{
									if(PlayerInfo[i][pFaccion] == 1 && PlayerInfo[i][pDuty] == 1 && EstaEnP(playerid,i,15))
									{
										SendClientMessage(playerid,-1,"No puedes entrar si la policía te está siguiendo.");
										return 1;
									}
								}
							}
							new vehicleid = GetPlayerVehicleID(playerid);
							if(autos[playerid] == vehicleid || autos2[playerid] == vehicleid || autos3[playerid] == vehicleid || autos4[playerid] == vehicleid)
							{
								if(PropInfo[c][pTipo] != 4)
								{
									SetVehiclePassengersInteriorEx(vehicleid, 4);
									SetVehiclePassengersVWEx(vehicleid, PropInfo[c][pVW]);
									SetVehiclePos(vehicleid,303.7281,306.4251,999.2913);
									SetVehicleZAngle(vehicleid,0);
									GuardarPropiedad(c);
								}
								else if(PropInfo[c][pTipo] == 4)//Empresa Privada
			                    {
				                   	GuardarPropiedad(c);
				                    CargarMapeosEx(playerid);
				                    SetVehiclePos(vehicleid,1403.4666,594.2648,1001.0300);
				                    SetVehicleZAngle(vehicleid,174.4890);
				              		LinkVehicleToInterior(vehicleid, 1);
				              		SetPlayerInterior(playerid, 1);
				              		SetVehicleInterior(playerid, 1);
				               		SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), 1);
				               		SetVehiclePassengersVWEx(vehicleid, PropInfo[c][pVW]);
				               		SetPlayerVirtualWorld(playerid,PropInfo[c][pVW]);
				           		}
                            }
		           		}
					}
					else SendClientMessage(playerid,-1,"El dueño de la casa puede guardar sus vehículos.");
				}
	        }
	        //Salida Estacionamiento
			for(new c = 0; c < MAX_GARAGES; c++)
			{
				if(EstaInfo[c][pEnUso] == 1)
				{
					if(IsPlayerInRangeOfPoint(playerid,2.5,EstaInfo[c][pPosXS],EstaInfo[c][pPosYS],EstaInfo[c][pPosZS]))
					{
						if(GetPlayerVirtualWorld(playerid) == EstaInfo[c][pVW])
						{
							if(GetPlayerState(playerid) == 2)
							{
								if(GetPlayerVehicleID(playerid) == autos[playerid] || GetPlayerVehicleID(playerid) == autos2[playerid] || GetPlayerVehicleID(playerid) == autos3[playerid] || GetPlayerVehicleID(playerid) == autos4[playerid])
								{
									CargarMapeosEx(playerid);
									new carid = GetPlayerVehicleID(playerid);
									new Float:posx, Float:posy, Float:sizex, Float:sizey, Float:sizez;
									GetVehicleModelInfo(GetVehicleModel(carid), VEHICLE_MODEL_INFO_SIZE, sizex, sizey, sizez);
									posx = EstaInfo[c][pPosX] - (floatsqroot(sizey + sizey + sizey) * floatsin(-EstaInfo[c][pPosA], degrees));
									posy = EstaInfo[c][pPosY] - (floatsqroot(sizey + sizey + sizey) * floatcos(-EstaInfo[c][pPosA], degrees));
									SetVehiclePos(GetPlayerVehicleID(playerid),posx,posy,EstaInfo[c][pPosZ]);
									SetVehicleZAngle(carid,EstaInfo[c][pPosZ]+180);
									SetVehiclePassengersInteriorEx(carid, 0);
									SetVehiclePassengersVWEx(carid, 0);

									EstaCamio[GetPlayerVehicleID(playerid)] = 0;
									PlayerInfo[playerid][pEnEstacionamiento] = 0;

									if(PlayerInfo[playerid][vEstacionado1] == 1 && PlayerInfo[playerid][vEstacionado2] == 0 && PlayerInfo[playerid][vEstacionado4] > 0)
									{
										PlayerInfo[playerid][vEstacionado1] = 0;
										PlayerInfo[playerid][vEstacionado4] = 0;
									}
									if(PlayerInfo[playerid][vEstacionado2] > 0) PlayerInfo[playerid][vEstacionado2] -= 1;
									if(PlayerInfo[playerid][vEstacionado4] > 0) PlayerInfo[playerid][vEstacionado4] -= 150;
								}
								else return SendClientMessage(playerid,-1,"No puedes salir con un vehículo que no sea de tu propiedad.");
							}
							else
							{
								CargarMapeosEx(playerid);
								SetPlayerPos(playerid,EstaInfo[c][pPosX],EstaInfo[c][pPosY],EstaInfo[c][pPosZ]);
								SetPlayerFacingAngle(playerid,EstaInfo[c][pPosA]+180.0);
								SetPlayerInterior(playerid,0);
								SetPlayerVirtualWorld(playerid,0);
								CargarMapeosEx(playerid);
								PlayerInfo[playerid][pEnEstacionamiento] = 0;
							}
						}
					}
				}
			}
	        Loop(f,MAX_FABRICAS)
			{
			    if(TieneFabrica(PlayerInfo[playerid][pFaccion]))
				{
			    	if(Fabricas[f][pEnUso] == 1)
					{
				        new vehicleid = GetPlayerVehicleID(playerid);
					    if(IsPlayerInRangeOfPoint(playerid,5.0,-1978.9973,212.0329,1035.8162))
						{
						    if(GetPlayerVehicleID(playerid) == autos[playerid] || GetPlayerVehicleID(playerid) == autos2[playerid] || GetPlayerVehicleID(playerid) == autos3[playerid] || GetPlayerVehicleID(playerid) == autos4[playerid])
					    	{
					    	    new Float:posx, Float:posy, Float:sizex, Float:sizey, Float:sizez;
								GetVehicleModelInfo(GetVehicleModel(vehicleid), VEHICLE_MODEL_INFO_SIZE, sizex, sizey, sizez);
								posx = Fabricas[f][pEntradaGX] - (floatsqroot(sizey + sizey + sizey) * floatsin(-Fabricas[f][pEntradaGA], degrees));
								posy = Fabricas[f][pEntradaGY] - (floatsqroot(sizey + sizey + sizey) * floatcos(-Fabricas[f][pEntradaGA], degrees));
								CargarMapeosEx(playerid);
								SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), 0);
								SetVehiclePos(vehicleid,posx,posy,Fabricas[f][pEntradaGZ]);
								SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), 0);
								SetVehicleZAngle(GetPlayerVehicleID(playerid),Fabricas[f][pEntradaGA]+180);
					    	}
					    	else if(Fabricas[f][Auto1F] == vehicleid || Fabricas[f][Auto2F] == vehicleid)
					    	{
					    	    if(VehiculoConBarril[vehicleid] != 0) return SendClientMessage(playerid,-1,"Tienes que {EB0000}descargar los químicos{FFFFFF} para poder salir con camioneta.");
					    	    if(VehiculoConCajas[vehicleid] < 5 && VehiculoConCajas[vehicleid] != 0) return SendClientMessage(playerid,-1,"La camioneta tiene que estar cargada con {DBED15}5 cajas {FFFFFF}de {00CCFF}metanfetamina{FFFFFF}.");
					    	    new Float:posx, Float:posy, Float:sizex, Float:sizey, Float:sizez;
								GetVehicleModelInfo(GetVehicleModel(vehicleid), VEHICLE_MODEL_INFO_SIZE, sizex, sizey, sizez);
								posx = Fabricas[f][pEntradaGX] - (floatsqroot(sizey + sizey + sizey) * floatsin(-Fabricas[f][pEntradaGA], degrees));
								posy = Fabricas[f][pEntradaGY] - (floatsqroot(sizey + sizey + sizey) * floatcos(-Fabricas[f][pEntradaGA], degrees));
								CargarMapeosEx(playerid);
								SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), 0);
								SetVehiclePos(vehicleid,posx,posy,Fabricas[f][pEntradaGZ]);
								SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), 0);
								SetVehicleZAngle(GetPlayerVehicleID(playerid),Fabricas[f][pEntradaGA]+180);
								if(Fabricas[f][Auto1F] == vehicleid)
								{
								    ObjetosTransporte(vehicleid, f);
								    BarrilesTransporte(vehicleid, f);
								}
								if(Fabricas[f][Auto2F] == vehicleid)
								{
								    ObjetoDistraccion(vehicleid, f);
								}
					    	}
						}
						if(IsPlayerInRangeOfPoint(playerid,5.0,Fabricas[f][pEntradaGX],Fabricas[f][pEntradaGY],Fabricas[f][pEntradaGZ]))
						{
						    if(PlayerInfo[playerid][pFaccion] == Fabricas[f][pBanda])
						    {
							    if(GetPlayerVehicleID(playerid) == autos[playerid] || GetPlayerVehicleID(playerid) == autos2[playerid] || GetPlayerVehicleID(playerid) == autos3[playerid] || GetPlayerVehicleID(playerid) == autos4[playerid])
						    	{
						    	    SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), Fabricas[f][pInt]);
									CargarMapeosEx(playerid);
									SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), Fabricas[f][pVW]);
									SetVehiclePos(GetPlayerVehicleID(playerid), -1988.1583,212.3283,1035.3835);
									SetVehicleZAngle(GetPlayerVehicleID(playerid),90.0000);
						    	}
						    	else if(vehicleid == Fabricas[f][Auto1F] || vehicleid == Fabricas[f][Auto2F])
					    		{
					    		    new var = 0;
					    		    if(var == 0)
         							{
						    		    if(VehiculoConBarril[GetPlayerVehicleID(playerid)] != 0)
						    		    {
											new coco = 2974 + random(150);
											new Float:a1x,Float:a1y,Float:a1z;
											GetVehiclePos(Fabricas[f][Auto1F], a1x, a1y, a1z);
											Loop2(ifp,MAX_PLAYERS)
											if(IsPlayerInRangeOfPoint(ifp,5, a1x, a1y, a1z))
											{
												DarDinero(playerid,coco);
												new string[128];
	 											format(string,sizeof(string),"Productos químicos transportados con éxito. Recibes {00CC00}$%d {FFFFFF}por haber participado.", coco);
												SendClientMessage(playerid,-1,string);
											}
										}
         		    				}
						    	    SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), Fabricas[f][pInt]);
									CargarMapeosEx(playerid);
									SetVehiclePos(GetPlayerVehicleID(playerid), -1988.1583,212.3283,1035.3835);
									SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), Fabricas[f][pVW]);
									SetVehicleZAngle(GetPlayerVehicleID(playerid),90.0000);
									if(Fabricas[f][Auto1F] == vehicleid)
									{
									    ObjetosTransporte(vehicleid, f);
									    BarrilesTransporte(vehicleid, f);
									}
									if(Fabricas[f][Auto2F] == vehicleid)
									{
										ObjetoDistraccion(vehicleid, f);
									}
									var = 1;
						    	}
						    	else SendClientMessage(playerid,-1,"No puedes entrar con un vehículo que no sea de tu propiedad.");
	                        }
						}
	                }
				}
			}
        }
 	}
	if(newkeys & KEY_HANDBRAKE)
	{
	    if(GetPlayerWeapon(playerid) == 4)
		{
		    SetPlayerArmedWeapon(playerid, 0);
        	ClearAnimations(playerid);
		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK)
	{
	    new params[128];
		cmd_entrar(playerid, params);
		cmd_salir(playerid, params);
	}
	if(newkeys & KEY_YES)
	{
		if(EnAscensor(playerid))
		{
		    new stringas1[24],stringas2[24],stringas3[24],stringas4[24],stringas5[24],stringas6[24],stringas7[24],stringas8[24],stringas9[24],stringas10[24];
		    switch(Piso[playerid])
		    {
		        case 1: stringas1 = "{FFFFFF}";
		        case 2: stringas2 = "{FFFFFF}";
		        case 3: stringas3 = "{FFFFFF}";
		        case 4: stringas4 = "{FFFFFF}";
		        case 5: stringas5 = "{FFFFFF}";
		        case 6: stringas6 = "{FFFFFF}";
				case 7: stringas7 = "{FFFFFF}";
				case 8: stringas8 = "{FFFFFF}";
				case 9: stringas9 = "{FFFFFF}";
				case 10: stringas10 = "{FFFFFF}";
            }
		    new string[256];
		    format(string,sizeof(string),"{8baab7}%sPiso 1\n{8baab7}%sPiso 2\n{8baab7}%sPiso 3\n{8baab7}%sPiso 4\n{8baab7}%sPiso 5\n{8baab7}%sPiso 6\n{8baab7}%sPiso 7\n{8baab7}%sPiso 8\n{8baab7}%sPiso 9\n{8baab7}%sPiso 10",stringas1,stringas2,stringas3,stringas4,stringas5,stringas6,stringas7,stringas8,stringas9,stringas10);
			ShowPlayerDialog(playerid, DASCENSOR, DIALOG_STYLE_LIST, "Ascensor", string, "Aceptar" , "Cancelar");
			Piso[playerid] = 0;
		}
	}
    if(newkeys & KEY_YES)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.6,1219.3627,-7.0459,1001.3281) && Bailarina1 == 0) DarAfinidadPuta1(playerid);
		if(IsPlayerInRangeOfPoint(playerid, 2.5,1214.0870,-4.2850,1001.3281) && Bailarina2 == 0) DarAfinidadPuta2(playerid);
		if(IsPlayerInRangeOfPoint(playerid, 2.0,1202.8500,9.1434,1000.9219) && Bailarina3 == 0) DarAfinidadPuta3(playerid);
		if(IsPlayerInRangeOfPoint(playerid, 2.5,1220.9673,8.2033,1001.3356) && Bailarina4 == 0) DarAfinidadPuta4(playerid);
		if(IsPlayerInRangeOfPoint(playerid, 2.5,1208.4001,-6.2825,1001.3281) && Bailarina5 == 0) DarAfinidadPuta5(playerid);
		if(IsPlayerInRangeOfPoint(playerid, 2.5,1202.9122,-8.3771,1002.0255) && Bailarina6 == 0) DarAfinidadPuta6(playerid);
	}
	if(newkeys & KEY_YES)
	{
		if(Emisoras[playerid][TieneEmisora] == 1 || PlayerInfo[playerid][pAdmin] >= ADMIN_LEVEL_BANEOS || PlayerInfo[playerid][pDuty] == 1)
		{
			if(CercaDeObjeto(2.5,playerid,PuertaEmisora[0]))
			{
		    	if(PuertaAbiertaEmisora[0] == 0)
		    	{
		    	    PuertaAbiertaEmisora[0] = 1;
                    MoveDynamicObject(PuertaEmisora[0],390.000000, 174.539993, 1039.109985, 3.0);
		    	}
		    	else
		    	{
		    	    PuertaAbiertaEmisora[0] = 0;
		            MoveDynamicObject(PuertaEmisora[0],388.7088, 174.3999, 1039.1100, 3.0);
		    	}
			}
			else if(CercaDeObjeto(2.5,playerid,PuertaEmisora[1]))
			{
			    if((CabinasOcupadasEmisoras[1][0] == 1 && CabinasOcupadasEmisoras[1][1] == playerid) || CabinasOcupadasEmisoras[1][0] == 0 || PlayerInfo[playerid][pDuty] == 1)
			    {
		    		if(PuertaAbiertaEmisora[1] == 0)
		    		{
		    	    	PuertaAbiertaEmisora[1] = 1;
                    	MoveDynamicObject(PuertaEmisora[1],349.2600, 177.4100, 1039.1100, 3.0);
		    		}
		    		else
		    		{
		    	    	PuertaAbiertaEmisora[1] = 0;
		            	MoveDynamicObject(PuertaEmisora[1],349.260010, 178.690002, 1039.109985, 3.0);
		    		}
		    	}
			}
			else if(CercaDeObjeto(2.5,playerid,PuertaEmisora[2]))
			{
			    if((CabinasOcupadasEmisoras[2][0] == 1 && CabinasOcupadasEmisoras[2][1] == playerid) || CabinasOcupadasEmisoras[2][0] == 0 || PlayerInfo[playerid][pDuty] == 1)
			    {
		    		if(PuertaAbiertaEmisora[2] == 0)
		    		{
		    	    	PuertaAbiertaEmisora[2] = 1;
                    	MoveDynamicObject(PuertaEmisora[2],349.2600, 159.4300, 1039.1100, 3.0);
		    		}
		    		else
		    		{
		    	    	PuertaAbiertaEmisora[2] = 0;
		            	MoveDynamicObject(PuertaEmisora[2],349.2600, 159.3700, 1039.1100, 3.0);
		    		}
		    	}
			}
			else if(CercaDeObjeto(2.5,playerid,PuertaEmisora[3]))
			{
			    if((CabinasOcupadasEmisoras[3][0] == 1 && CabinasOcupadasEmisoras[3][1] == playerid) || CabinasOcupadasEmisoras[3][0] == 0 || PlayerInfo[playerid][pDuty] == 1)
			    {
		    		if(PuertaAbiertaEmisora[3] == 0)
		    		{
		    	    	PuertaAbiertaEmisora[3] = 1;
                    	MoveDynamicObject(PuertaEmisora[3],349.1800, 147.9900, 1039.1100, 3.0);
		    		}
		    		else
		    		{
		    	    	PuertaAbiertaEmisora[3] = 0;
		            	MoveDynamicObject(PuertaEmisora[3],349.1800, 149.2300, 1039.1100, 3.0);
		    		}
		    	}
			}
			else if(CercaDeObjeto(2.5,playerid,PuertaEmisora[4]))
			{
			    if((CabinasOcupadasEmisoras[4][0] == 1 && CabinasOcupadasEmisoras[4][1] == playerid) || CabinasOcupadasEmisoras[4][0] == 0 || PlayerInfo[playerid][pDuty] == 1)
			    {
		    		if(PuertaAbiertaEmisora[4] == 0)
		    		{
		    	    	PuertaAbiertaEmisora[4] = 1;
                    	MoveDynamicObject(PuertaEmisora[3],359.9500, 152.3300, 1039.1100, 3.0);
		    		}
		    		else
		    		{
		    	    	PuertaAbiertaEmisora[4] = 0;
		            	MoveDynamicObject(PuertaEmisora[3],361.2100, 152.3300, 1039.1100, 3.0);
		    		}
		    	}
			}
		}
	}
	if(newkeys & KEY_YES)
	{
	    new name[MAX_PLAYER_NAME];
	    GetPlayerName(playerid,name,sizeof(name));
	    if(Alquilado == true && strcmp(name,Alquilador,true) != 0 && PermisoSalon[playerid] == false)
	    {
	        return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid,1,-1257.0300, 2096.7400, 1246.8900))
	    {
	        if(PuertaAbierta[0] == 0)
			{
			    ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
				MoveObject(Puerta[0],-1258.2170, 2096.6799, 1245.5300,2.5,0.0000, 0.0000, 0.0000);
				PuertaAbierta[0] = 1;
			}
	        else if(PuertaAbierta[0] == 1)
			{
			    ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
		 		MoveObject(Puerta[0],-1256.8500, 2096.6799, 1245.5300,2.5,0.0000, 0.0000, 0.0000);
		 		PuertaAbierta[0] = 0;
			}
	    }
	    else if(IsPlayerInRangeOfPoint(playerid,1,-1244.8000, 2116.8301, 1246.8300))
	    {
	        if(PuertaAbierta[1] == 0)
			{
			    ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
				MoveObject(Puerta[1],-1244.6700, 2117.0041, 1245.5200,2.5,0.0000, 0.0000, 90.0000);
				PuertaAbierta[1] = 1;
			}
	        else if(PuertaAbierta[1] == 1)
			{
			    ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
				MoveObject(Puerta[1],-1244.6700, 2115.6001, 1245.5200,2.5,0.0000, 0.0000, 90.0000);
				PuertaAbierta[1] = 0;
			}
	    }
	    else if(IsPlayerInRangeOfPoint(playerid,1, -1244.7800, 2084.8201, 1246.8900))
	    {
	        if(PuertaAbierta[2] == 0)
	        {
	            ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
	            MoveObject(Puerta[2],-1244.7400, 2083.5960, 1245.5300,2.5,0.0000, 0.0000, 90.0000);
	            PuertaAbierta[2] = 1;
	        }
	        else if(PuertaAbierta[2] == 1)
	        {
	            ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
	            MoveObject(Puerta[2],-1244.7400, 2085.0000, 1245.5300,2.5,0.0000, 0.0000, 90.0000);
	            PuertaAbierta[2] = 0;
	        }
	    }
	    else if(IsPlayerInRangeOfPoint(playerid,1, -1242.7600, 2087.8401, 1246.8300))
	    {
	        if(PuertaAbierta[3] == 0)
	        {
	            ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
	            MoveObject(Puerta[3],-1245.3040, 2087.7700, 1245.5300,2.5,0.0000, 0.0000, 0.0000);
	            PuertaAbierta[3] = 1;
	        }
	        else if(PuertaAbierta[3] == 1)
	        {
	            ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
	            MoveObject(Puerta[3],-1244.4800, 2087.7700, 1245.5300,2.5,0.0000, 0.0000, 0.0000);
	            PuertaAbierta[3] = 0;
	        }
	    }
	    else if(IsPlayerInRangeOfPoint(playerid,1, -1232.6200, 2027.6801, 1246.8900))
	    {
	        if(PuertaAbierta[4] == 0)
	        {
	            ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
	            MoveObject(Puerta[4],-1232.5699, 2026.5060, 1245.5300,2.5,0.0000, 0.0000, 90.0000);
	            PuertaAbierta[4] = 1;
	        }
	        else if(PuertaAbierta[4] == 1)
	        {
	            ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.0, 0, 1, 1, 0,0);
	            MoveObject(Puerta[4],-1232.5699, 2027.9100, 1245.5300,2.5,0.0000, 0.0000, 90.0000);
	            PuertaAbierta[4] = 0;
	        }
	    }
	}
	if(newkeys == KEY_LOOK_BEHIND)  // 2
	{
		if(IsPlayerNPC(playerid))
		{
			if(IsPlayerInRangeOfPoint(playerid, 20, 1571.4235,-1704.3674,5.9946))
			{
				for(new i=0;i<MAX_PLAYERS;i++)
				{
					if(Jail[i] == 1 && TipoPrision[i] == 1)
					{
						if(PlayerInfo[i][pTipoCarcel] != 4 && EstaDomiciliaria[i] == 0)
						{
							SetPlayerVirtualWorld(i, 0);
							SetPlayerInterior(i, 0);
							PlayerInfo[i][pTipoCarcel] = 4;
							SendClientMessage(i,-1,"Estás siendo trasladado a la penitenciaría Fort Carson.");
							EstaEnBus[i] = 1;
							PlayerInfo[i][pEnFC] = 1;
							new asiento = random(8);
							switch(asiento)
							{
								case 0: PutPlayerInVehicle(i, NPC_Tren[4], 1);
								case 1: PutPlayerInVehicle(i, NPC_Tren[4], 2);
								case 2: PutPlayerInVehicle(i, NPC_Tren[4], 3);
								case 3: PutPlayerInVehicle(i, NPC_Tren[4], 4);
								case 4: PutPlayerInVehicle(i, NPC_Tren[4], 5);
								case 5: PutPlayerInVehicle(i, NPC_Tren[4], 6);
								case 6: PutPlayerInVehicle(i, NPC_Tren[4], 7);
								case 7: PutPlayerInVehicle(i, NPC_Tren[4], 8);
							}
							TogglePlayerControllable(i, 0);
							SetPVarInt(i, "IsFrozen", 0);
						}
					}
				}
			}
			//SF
			if(IsPlayerInRangeOfPoint(playerid, 20, -1580.4059,716.8102,-5.2422))
			{
				for(new i=0;i<MAX_PLAYERS;i++)
				{
					if(Jail[i] == 1 && TipoPrision[i] == 2)
					{
						if(PlayerInfo[i][pTipoCarcel] != 4 && EstaDomiciliaria[i] == 0)
						{
							SetPlayerVirtualWorld(i, 0);
							SetPlayerInterior(i, 0);
							PlayerInfo[i][pTipoCarcel] = 4;
							SendClientMessage(i,-1,"Estás siendo trasladado a la penitenciaría Fort Carson.");
							EstaEnBus[i] = 1;
							new asiento = random(8);
							switch(asiento)
							{
								case 0: PutPlayerInVehicle(i, NPC_Tren[5], 1);
								case 1: PutPlayerInVehicle(i, NPC_Tren[5], 2);
								case 2: PutPlayerInVehicle(i, NPC_Tren[5], 3);
								case 3: PutPlayerInVehicle(i, NPC_Tren[5], 4);
								case 4: PutPlayerInVehicle(i, NPC_Tren[5], 5);
								case 5: PutPlayerInVehicle(i, NPC_Tren[5], 6);
								case 6: PutPlayerInVehicle(i, NPC_Tren[5], 7);
								case 7: PutPlayerInVehicle(i, NPC_Tren[5], 8);
							}
							TogglePlayerControllable(i, 0);
							SetPVarInt(i, "IsFrozen", 0);
						}
					}
				}
			}
		}
	}
	if(newkeys == KEY_LOOK_LEFT)    // Q
	{
		if(IsPlayerNPC(playerid))
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(EstaEnBus[i] == 1)
				{
					new rand;
					PlayerInfo[i][pTipoCarcel] = 4;
					SetPlayerVirtualWorld(i, 15);
					SetPlayerInterior(i, 15);
					rand = random(sizeof(FortCarsonSpawn));
					SetPlayerPos(i, FortCarsonSpawn[rand][0], FortCarsonSpawn[rand][1], FortCarsonSpawn[rand][2]);
					EstaEnBus[i] = 0;
					PlayerInfo[i][pEnFC] = 1;
					CargarMapeosEx(i);
				}
			}
		}
	}
	if (PRESSED(KEY_YES))    // Y MINA
	{
	    if (PlayerToPoint(5.0, playerid, 830.1780,-2962.6921,11.9932))
		{
			MoveDynamicObject(controls[8], 833.4200, -2963.8000, 11.7460+SPEED_CONTROLS, SPEED_CONTROLS, 0.0000, -10.0000, 0.0000);
			SetTimer("CerrarIsla1", 3000, 0);
			return 1;
		}
		if (PlayerToPoint(5.0, playerid, 836.8367,-2955.8198,12.2332))
		{
			MoveDynamicObject(controls[9], 833.4100, -2954.5200, 12.1000+SPEED_CONTROLS, SPEED_CONTROLS, 0.0000, 10.0000, 0.0000);
			SetTimer("CerrarIsla2", 3000, 0);
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, -611.3183,2325.3333,79.5786))	// Mina Entrada
		{
	    	if(Armados(playerid) && PlayerInfo[playerid][pDuty] != 1) return SendClientMessage(playerid,-1,"No puedes entrar armado a la mina.");
			if(PlayerInfo[playerid][pTrabajo] == T_Minero || PlayerInfo[playerid][pTrabajo2] == T_Minero)
			{
		    	if(GetPlayerSkin(playerid) == 27 || GetPlayerSkin(playerid) == 131)
	 	    	{
					SetPosEx(playerid,-718.7835,2462.5969,9.9039,192.4327,9,9);
					CargarMapeosEx(playerid);
					return 1;
				}
				else return SendClientMessage(playerid,-1,"Necesitas la ropa de minero para poder ingresar a la mina.");
   			}
			else return SendClientMessage(playerid,-1,"Necesitas el trabajo de minero para poder ingresar a la mina.");
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0,-718.7835,2462.5969,9.9039)) 		// Mina Salida
		{
        	if(PlayerInfo[playerid][pTrabajo] == T_Minero || PlayerInfo[playerid][pTrabajo2] == T_Minero)
			{
				SetPosEx(playerid,-611.3183,2325.3333,79.5786,307.3289,0,0);
				return 1;
  			}
  			else return SendClientMessage(playerid,-1,"Necesitas el trabajo de minero para poder salir de la mina.");
		}
	}
	new TextoUnidad[280];
	new Float: PosSAPD[3];
	GetPlayerPos(playerid, PosSAPD[0], PosSAPD[1], PosSAPD[2]);
	if(newkeys & KEY_LOOK_BEHIND)
	{
		if(TiempoComputadora[playerid] != 0)
		{
			new mensajep[126];
			format(mensajep,126,"Por favor espera {FF3300}%d{FFFFFF} segundos para volver a usar la computadora de tu patrulla.",TiempoComputadora[playerid]);
			SendClientMessage(playerid, -1, mensajep);
			return 1;
		}
		new patrulla = GetPlayerVehicleID(playerid);
		if(SAPD(patrulla) && PlayerInfo[playerid][pDuty] == 1)
		{
			format(TextoUnidad,180,"%s inició la búsqueda de sospechosos en la computadora de la patrulla.",PlayerName(playerid));
			ProxDetector(15.0, playerid, TextoUnidad, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
			TiempoComputadora[playerid] = 60;
			foreach(Player,b)
			{
				if(Armados(b) && IsPlayerInRangeOfPoint(b, 30.0,PosSAPD[0],PosSAPD[1],PosSAPD[2]) && PlayerInfo[b][pDuty] == 0 && PlayerInfo[b][pCargos] < 3)
				{
					format(TextoUnidad,sizeof(TextoUnidad),"[Patrulla de %s] {FFFFFF}Resultado: Se detectó a %s armado, proceder con precaución.",PlayerName(playerid), PlayerName(b));
					SendRadioMessage(1, TEAM_BLUE_COLOR, TextoUnidad,b);
					PlayerInfo[b][pCargos] = 3;
					SetPlayerWantedLevel(b, PlayerInfo[b][pCargos]);
				}
			}
		}
	}
	if(newkeys == KEY_LOOK_BEHIND)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(!IsPlayerNPC(playerid))
		{
		    if(IsPlayerInAnyVehicle(playerid))
		    {
			    if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER && IsPlayerUsingDB(playerid))
				{
					new wd[13][2], w = pweapon[playerid], s = GetWeaponSlot(w), acceptedSlots[] = {2,3,4,5,6}, first = acceptedSlots[0], last = acceptedSlots[sizeof(acceptedSlots)-1];
					if(isAcceptedDBWeapon(w))
					{
					    if(TimeChange[playerid] == 0)
					    {
							for(new i = 0; i < 13; i++) GetPlayerWeaponData(playerid,i,wd[i][0],wd[i][1]);
				            new found = w;
				            for(new i = s + 1; i <= last && found == w; i++) if(isAcceptedDBWeapon(wd[i][0])) found = wd[i][0];
				            if(found == w) for(new i = first; i < s && found == w; i++) if(isAcceptedDBWeapon(wd[i][0])) found = wd[i][0];
				            if(found != w)
				        	{
				 	            SetPlayerArmedWeapon(playerid,found);
				            	pweapon[playerid] = found;
				            	TimeChange[playerid] = 1;
							}
						}
					}
				}
			    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			    {
				    if(TiempoMotor[playerid] == 0)
					{
						if(VehiculosInfo[vehicleid][vcomprable] != 1)
						{
							if(!BICI(vehicleid))
							{
							    if(MotorAuto[vehicleid] == 0)
								{
								    if(VehicleFuel[vehicleid] < 1) return SetTimerEx("SinGasolina",1200, false, "d",playerid);
									SendClientMessage(playerid, COLOR_WHITE, "Arrancando vehículo...");
									SetTimerEx("EncenderMotor",1200, false, "d",playerid);
									TiempoMotor[playerid] = 2;
								}
								else {
								    TiempoMotor[playerid] = 2;
									ApagarMotor(playerid);
								}
							}
						}
					}
				}
			}
		}
	}
	if(newkeys & KEY_NO)
	{
		if(PlayerInfo[playerid][pVip] == 2 && PlayerInfo[playerid][pGPS] == 1)
		{
		    if(TiempoGPS[playerid] == 0)
		    {
		        if(GPSActivado[playerid] == 1) return CerrarGPS(playerid);
				AbrirGPS(playerid, 1);
				TiempoGPS[playerid] = 3;
            }
		}
	}
	if(newkeys == KEY_CROUCH)
	{
		new patrulla;
		patrulla = GetPlayerVehicleID(playerid);
		if(PlayerToPoint(15.0, playerid, 1545.7398,-1627.7280,15.2062) && PlayerInfo[playerid][pDuty] != 0)
		{
			MoveDynamicObject(barrera, 1544.6943359375, -1630.73046875, 13.27956199646+0.0001, 0.00009, 0, 0, 90);
			SetTimer("Cerrar_Barrera", 3000, 0);
		}
		if(PlayerToPoint(15.0, playerid, 1589.0533,-1638.1231,14.1229) && PlayerInfo[playerid][pDuty] != 0)
		{
			if(PlayerInfo[playerid][pDuty] == 1 || MOTOSAPD(patrulla) || SAPD(patrulla) || patrulla == NPC_Tren[4] || GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
			{
				MoveDynamicObject(porton,  1589.274658,-1638.286499,10.616429, 2);
				SetTimer("Cerrar_Porton", 5000, 0);
			}
		}
		if(PlayerToPoint(15.0, playerid, 294.3390,1412.8501,9.9911) && PlayerInfo[playerid][pDuty] != 0)
		{
			if(PlayerInfo[playerid][pDuty] == 1 || MOTOSAPD(patrulla) || SAPD(patrulla) || patrulla == NPC_Tren[4] || GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
			{
				MoveDynamicObject(reja1,  288.9500, 1420.6600, 12.9000, 2);
				MoveDynamicObject(reja2,  288.9500, 1402.3979, 12.9000, 2);
				SetTimer("Cerrar_Rejas1", 3000, 0);
			}
		}
		if(PlayerToPoint(15.0, playerid, 264.4435,1411.4097,10.4904) && PlayerInfo[playerid][pDuty] != 0)
		{
 			if(PlayerInfo[playerid][pDuty] == 1 || MOTOSAPD(patrulla) || SAPD(patrulla) || patrulla == NPC_Tren[4] || GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
			{
				MoveDynamicObject(reja3,  263.1500, 1420.6600, 13.0500, 2);
				MoveDynamicObject(reja4,  263.1500, 1402.2100, 13.0500, 2);
				SetTimer("Cerrar_Rejas2", 3000, 0);
			}
		}
		if(PlayerToPoint(15.0, playerid, 227.9451,1421.2976,10.5859) && PlayerInfo[playerid][pDuty] != 0)
		{
			if(PlayerInfo[playerid][pDuty] == 1 || MOTOSAPD(patrulla) || SAPD(patrulla) || patrulla == NPC_Tren[4] || GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
			{
				MoveDynamicObject(reja5,  237.3140, 1420.7500, 13.1700, 2);
				MoveDynamicObject(reja6,  218.6780, 1420.7500, 13.1700, 2);
				SetTimer("Cerrar_Rejas3", 3000, 0);
			}
		}
		if(PlayerToPoint(10.0, playerid, -88.1874,-1127.1766,1.0847))
		{
		    if(PlayerInfo[playerid][CasaID] == 14 || PlayerInfo[playerid][CasaID2] == 14)
			{
				MoveDynamicObject(controls[10],-85.3078, -1120.4414, 0.3000,3);
				SetTimer("CerrarCasa", 3000, 0);
				return 1;
			}
		}
	}
    if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_DRINK_BEER && (newkeys & KEY_YES))
    {
        if(TieneCerveza[playerid] > 0)
        {
            {
			    if(PlayerInfo[playerid][pBarras] == 0)
			    {
					PlayerInfo[playerid][pSed] -= 4;
					SetPlayerProgressBarValue(playerid,Progressbar[playerid][Sed], PlayerInfo[playerid][pSed]);
					ShowPlayerProgressBar(playerid, Progressbar[playerid][Sed]);
					UpdatePlayerProgressBar(playerid,Progressbar[playerid][Sed]);
					if(GetPlayerDrunkLevel(playerid) > 15000)
					{
						pVomitar(playerid);
					}
				}
				else if(PlayerInfo[playerid][pBarras] == 1)
				{
					PlayerInfo[playerid][pSed] -= 4;
					SetPlayerProgressBarValue(playerid,Progressbar[playerid][Sed], PlayerInfo[playerid][pSed]);
					if(GetPlayerDrunkLevel(playerid) > 15000)
					{
						pVomitar(playerid);
					}
				}
			}
			switch(TieneCerveza[playerid])
	        {
	            case 1: {	TieneCerveza[playerid] ++;	}
	            case 2: {	TieneCerveza[playerid] ++;	}
	            case 3: {	TieneCerveza[playerid] ++;	}
	            case 4: {	TieneCerveza[playerid] ++;	}
	            case 5: {	TieneCerveza[playerid] ++;	}
	            case 6: {	TieneCerveza[playerid] = 0;	ClearAnimations(playerid);	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);	}
	        }
		}
		if(PlayerInfo[playerid][pSed] < 5)
		{
		    if(PlayerInfo[playerid][pBarras] == 0)
		    {
				ClearAnimations(playerid);
				TieneCerveza[playerid] = 0;
				PlayerInfo[playerid][pSed] = 5;
				SetPlayerProgressBarValue(playerid,Progressbar[playerid][Sed], PlayerInfo[playerid][pSed]);
				ShowPlayerProgressBar(playerid, Progressbar[playerid][Sed]);
				UpdatePlayerProgressBar(playerid,Progressbar[playerid][Sed]);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
				if(GetPlayerDrunkLevel(playerid) > 15000)
				{
					pVomitar(playerid);
				}
			}
			else if(PlayerInfo[playerid][pBarras] == 1)
			{
				ClearAnimations(playerid);
				TieneCerveza[playerid] = 0;
				PlayerInfo[playerid][pSed] = 5;
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
				if(GetPlayerDrunkLevel(playerid) > 15000)
				{
					pVomitar(playerid);
				}
			}
		}
		else if(PlayerInfo[playerid][pSed] == 0)
		{
		    if(PlayerInfo[playerid][pBarras] == 0)
		    {
				ClearAnimations(playerid);
				TieneCerveza[playerid] = 0;
				PlayerInfo[playerid][pSed] = 5;
				SetPlayerProgressBarValue(playerid,Progressbar[playerid][Sed], PlayerInfo[playerid][pSed]);
				ShowPlayerProgressBar(playerid, Progressbar[playerid][Sed]);
				UpdatePlayerProgressBar(playerid,Progressbar[playerid][Sed]);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			}
			else if(PlayerInfo[playerid][pBarras] == 1)
			{
				ClearAnimations(playerid);
				TieneCerveza[playerid] = 0;
				PlayerInfo[playerid][pSed] = 5;
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			}
        }
	}
    if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_DRINK_WINE && (newkeys & KEY_YES))
    {
        if(TieneVino[playerid] > 0)
        {
            {
			    if(PlayerInfo[playerid][pBarras] == 0)
			    {
					PlayerInfo[playerid][pSed] -= 4;
					SetPlayerProgressBarValue(playerid,Progressbar[playerid][Sed], PlayerInfo[playerid][pSed]);
					ShowPlayerProgressBar(playerid, Progressbar[playerid][Sed]);
					UpdatePlayerProgressBar(playerid,Progressbar[playerid][Sed]);
				}
				else if(PlayerInfo[playerid][pBarras] == 1)
				{
					PlayerInfo[playerid][pSed] -= 4;
					SetPlayerProgressBarValue(playerid,Progressbar[playerid][Sed], PlayerInfo[playerid][pSed]);
				}
			}
			switch(TieneVino[playerid])
	        {
	            case 1: {	TieneVino[playerid] ++;	}
	            case 2: {	TieneVino[playerid] ++;	}
	            case 3: {	TieneVino[playerid] ++;	}
	            case 4: {	TieneVino[playerid] ++;	}
	            case 5: {	TieneVino[playerid] ++;	}
	            case 6: {	TieneVino[playerid] = 0;	ClearAnimations(playerid);	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);	}
	        }
		}
		if(PlayerInfo[playerid][pSed] < 5)
		{
		    if(PlayerInfo[playerid][pBarras] == 0)
		    {
				ClearAnimations(playerid);
				TieneVino[playerid] = 0;
				PlayerInfo[playerid][pSed] = 5;
				SetPlayerProgressBarValue(playerid,Progressbar[playerid][Sed], PlayerInfo[playerid][pSed]);
				ShowPlayerProgressBar(playerid, Progressbar[playerid][Sed]);
				UpdatePlayerProgressBar(playerid,Progressbar[playerid][Sed]);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			}
			else if(PlayerInfo[playerid][pBarras] == 1)
			{
				ClearAnimations(playerid);
				TieneVino[playerid] = 0;
				PlayerInfo[playerid][pSed] = 5;
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			}
		}
		else if(PlayerInfo[playerid][pSed] == 0)
		{
		    if(PlayerInfo[playerid][pBarras] == 0)
		    {
				ClearAnimations(playerid);
				TieneVino[playerid] = 0;
				PlayerInfo[playerid][pSed] = 5;
				SetPlayerProgressBarValue(playerid,Progressbar[playerid][Sed], PlayerInfo[playerid][pSed]);
				ShowPlayerProgressBar(playerid, Progressbar[playerid][Sed]);
				UpdatePlayerProgressBar(playerid,Progressbar[playerid][Sed]);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			}
			else if(PlayerInfo[playerid][pBarras] == 1)
			{
				ClearAnimations(playerid);
				TieneVino[playerid] = 0;
				PlayerInfo[playerid][pSed] = 5;
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			}
        }
	}
    if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_DRINK_SPRUNK && (newkeys & KEY_YES))
    {
        if(TieneSprunk[playerid] > 0)
        {
            {
			    if(PlayerInfo[playerid][pBarras] == 0)
			    {
					PlayerInfo[playerid][pSed] -= 4;
					SetPlayerProgressBarValue(playerid,Progressbar[playerid][Sed], PlayerInfo[playerid][pSed]);
					ShowPlayerProgressBar(playerid, Progressbar[playerid][Sed]);
					UpdatePlayerProgressBar(playerid,Progressbar[playerid][Sed]);
				}
				else if(PlayerInfo[playerid][pBarras] == 1)
				{
					PlayerInfo[playerid][pSed] -= 4;
					SetPlayerProgressBarValue(playerid,Progressbar[playerid][Sed], PlayerInfo[playerid][pSed]);
				}
			}
			switch(TieneSprunk[playerid])
	        {
	            case 1: {	TieneSprunk[playerid] ++;	}
	            case 2: {	TieneSprunk[playerid] ++;	}
	            case 3: {	TieneSprunk[playerid] ++;	}
	            case 4: {	TieneSprunk[playerid] ++;	}
	            case 5: {	TieneSprunk[playerid] ++;	}
	            case 6: {	TieneSprunk[playerid] = 0;	ClearAnimations(playerid);	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);	}
	        }
		}
		if(PlayerInfo[playerid][pSed] < 5)
		{
		    if(PlayerInfo[playerid][pBarras] == 0)
		    {
				ClearAnimations(playerid);
				TieneSprunk[playerid] = 0;
				PlayerInfo[playerid][pSed] = 5;
				SetPlayerProgressBarValue(playerid,Progressbar[playerid][Sed], PlayerInfo[playerid][pSed]);
				ShowPlayerProgressBar(playerid, Progressbar[playerid][Sed]);
				UpdatePlayerProgressBar(playerid,Progressbar[playerid][Sed]);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			}
			else if(PlayerInfo[playerid][pBarras] == 1)
			{
				ClearAnimations(playerid);
				TieneSprunk[playerid] = 0;
				PlayerInfo[playerid][pSed] = 5;
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			}
		}
		else if(PlayerInfo[playerid][pSed] == 0)
		{
		    if(PlayerInfo[playerid][pBarras] == 0)
		    {
				ClearAnimations(playerid);
				TieneSprunk[playerid] = 0;
				PlayerInfo[playerid][pSed] = 5;
				SetPlayerProgressBarValue(playerid,Progressbar[playerid][Sed], PlayerInfo[playerid][pSed]);
				ShowPlayerProgressBar(playerid, Progressbar[playerid][Sed]);
				UpdatePlayerProgressBar(playerid,Progressbar[playerid][Sed]);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			}
			else if(PlayerInfo[playerid][pBarras] == 1)
			{
				ClearAnimations(playerid);
				TieneSprunk[playerid] = 0;
				PlayerInfo[playerid][pSed] = 5;
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			}
        }
	}
    if(newkeys & KEY_FIRE)
    {
        if(TienePorro[playerid] > 0)
        {
            new Float:Vida, Float:Armour;
			GetPlayerHealth(playerid,Vida);
			GetPlayerArmour(playerid,Armour);
			if(Armour >= 100 && Vida >= 100)
			{
                EstablecerVida(playerid,100);
                EstablecerChaleco(playerid,100);
				return 1;
			}
			if(Vida >= 100)
			{
			    new Float:Chaleco;
                GetPlayerArmour(playerid,Chaleco);
				EstablecerChaleco(playerid,Chaleco+3);
			}
			else
			{
			    EstablecerVida(playerid,Vida+3);
			}
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
			switch(TienePorro[playerid])
	        {
	            case 1: {	TienePorro[playerid] ++;}
	            case 2: {	TienePorro[playerid] ++;}
	            case 3: {	TienePorro[playerid] ++;}
	            case 4: {	TienePorro[playerid] ++;}
	            case 5: {	TienePorro[playerid] ++;}
	            case 6: {	TienePorro[playerid] = 0;	ClearAnimations(playerid);	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);	}
	        }
        }
	}
    if(newkeys & KEY_YES)
    {
        if(TienePizza[playerid] > 0)
        {
            {
			    if(PlayerInfo[playerid][pBarras] == 0)
			    {
					PlayerInfo[playerid][pHambre] -= 4;
					SetPlayerProgressBarValue(playerid,Progressbar[playerid][Hambre], PlayerInfo[playerid][pHambre]);
					LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
					ShowPlayerProgressBar(playerid, Progressbar[playerid][Hambre]);
					UpdatePlayerProgressBar(playerid,Progressbar[playerid][Hambre]);
				}
				else if(PlayerInfo[playerid][pBarras] == 1)
				{
					PlayerInfo[playerid][pHambre] -= 4;
					SetPlayerProgressBarValue(playerid,Progressbar[playerid][Hambre], PlayerInfo[playerid][pHambre]);
					LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
				}
			}
			switch(TienePizza[playerid])
	        {
	            case 1: {	TienePizza[playerid] ++;	}
	            case 2: {	TienePizza[playerid] ++;	}
	            case 3: {	TienePizza[playerid] ++;	}
	            case 4: {	TienePizza[playerid] ++;	}
	            case 5: {	TienePizza[playerid] ++;	}
	            case 6: {	TienePizza[playerid] = 0;	ClearAnimations(playerid);	RemovePlayerAttachedObject(playerid, 2);	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);	}
	        }
		}
		if(PlayerInfo[playerid][pHambre] < 5)
		{
		    if(PlayerInfo[playerid][pBarras] == 0)
		    {
				ClearAnimations(playerid);
				TienePizza[playerid] = 0;
				PlayerInfo[playerid][pHambre] = 5;
				RemovePlayerAttachedObject(playerid, 2);
				SetPlayerProgressBarValue(playerid,Progressbar[playerid][Hambre], PlayerInfo[playerid][pHambre]);
				ShowPlayerProgressBar(playerid, Progressbar[playerid][Hambre]);
				UpdatePlayerProgressBar(playerid,Progressbar[playerid][Hambre]);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			}
			else if(PlayerInfo[playerid][pBarras] == 1)
			{
				ClearAnimations(playerid);
				TienePizza[playerid] = 0;
				PlayerInfo[playerid][pHambre] = 5;
				RemovePlayerAttachedObject(playerid, 2);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			}
		}
		else if(PlayerInfo[playerid][pHambre] == 0)
		{
		    if(PlayerInfo[playerid][pBarras] == 0)
		    {
				ClearAnimations(playerid);
				TienePizza[playerid] = 0;
				PlayerInfo[playerid][pHambre] = 5;
				RemovePlayerAttachedObject(playerid, 2);
				SetPlayerProgressBarValue(playerid,Progressbar[playerid][Hambre], PlayerInfo[playerid][pHambre]);
				ShowPlayerProgressBar(playerid, Progressbar[playerid][Hambre]);
				UpdatePlayerProgressBar(playerid,Progressbar[playerid][Hambre]);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			}
			else if(PlayerInfo[playerid][pBarras] == 1)
			{
				ClearAnimations(playerid);
				TienePizza[playerid] = 0;
				PlayerInfo[playerid][pHambre] = 5;
				RemovePlayerAttachedObject(playerid, 2);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			}
		}
        if(TieneAquariu[playerid] > 0)
        {
            {
			    if(PlayerInfo[playerid][pBarras] == 0)
			    {
					PlayerInfo[playerid][pSed] -= 4;
					SetPlayerProgressBarValue(playerid,Progressbar[playerid][Sed], PlayerInfo[playerid][pSed]);
					ShowPlayerProgressBar(playerid, Progressbar[playerid][Sed]);
					UpdatePlayerProgressBar(playerid,Progressbar[playerid][Sed]);
					LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
				}
				else if(PlayerInfo[playerid][pBarras] == 1)
				{
					PlayerInfo[playerid][pSed] -= 4;
					SetPlayerProgressBarValue(playerid,Progressbar[playerid][Sed], PlayerInfo[playerid][pSed]);
					LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
				}
			}
			switch(TieneAquariu[playerid])
	        {
	            case 1: {	TieneAquariu[playerid] ++;	}
	            case 2: {	TieneAquariu[playerid] ++;	}
	            case 3: {	TieneAquariu[playerid] ++;	}
	            case 4: {	TieneAquariu[playerid] ++;	}
	            case 5: {	TieneAquariu[playerid] ++;	}
	            case 6: {	TieneAquariu[playerid] = 0;	ClearAnimations(playerid);	RemovePlayerAttachedObject(playerid, 2);	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);	}
	        }
		}
		if(PlayerInfo[playerid][pSed] < 5)
		{
		    if(PlayerInfo[playerid][pBarras] == 0)
		    {
				ClearAnimations(playerid);
				TieneAquariu[playerid] = 0;
				PlayerInfo[playerid][pSed] = 5;
				SetPlayerProgressBarValue(playerid,Progressbar[playerid][Sed], PlayerInfo[playerid][pSed]);
				ShowPlayerProgressBar(playerid, Progressbar[playerid][Sed]);
				UpdatePlayerProgressBar(playerid,Progressbar[playerid][Sed]);
				RemovePlayerAttachedObject(playerid, 2);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			}
			else if(PlayerInfo[playerid][pBarras] == 1)
			{
				ClearAnimations(playerid);
				TieneCerveza[playerid] = 0;
				PlayerInfo[playerid][pSed] = 5;
				RemovePlayerAttachedObject(playerid, 2);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			}
		}
		else if(PlayerInfo[playerid][pSed] == 0)
		{
		    if(PlayerInfo[playerid][pBarras] == 0)
		    {
				ClearAnimations(playerid);
				TieneAquariu[playerid] = 0;
				PlayerInfo[playerid][pSed] = 5;
				SetPlayerProgressBarValue(playerid,Progressbar[playerid][Sed], PlayerInfo[playerid][pSed]);
				ShowPlayerProgressBar(playerid, Progressbar[playerid][Sed]);
				RemovePlayerAttachedObject(playerid, 2);
				UpdatePlayerProgressBar(playerid,Progressbar[playerid][Sed]);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			}
			else if(PlayerInfo[playerid][pBarras] == 1)
			{
				ClearAnimations(playerid);
				TieneAquariu[playerid] = 0;
				RemovePlayerAttachedObject(playerid, 2);
				PlayerInfo[playerid][pSed] = 5;
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			}
		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK)
	{
		if(TienePorro[playerid] != 0)
		{
			ClearAnimations(playerid);
			TienePorro[playerid] = 0;
		}
		if(TienePizza[playerid] != 0)
		{
			ClearAnimations(playerid);
			TienePizza[playerid] = 0;
			RemovePlayerAttachedObject(playerid, 2);
		}
		if(TieneAquariu[playerid] != 0)
		{
			ClearAnimations(playerid);
			TieneAquariu[playerid] = 0;
			RemovePlayerAttachedObject(playerid, 2);
		}
	}
	return 1;
}

public SaveAccount(playerid)
{
    if(GetPlayerScore(playerid) == 0) return 1;
	if(JugadorLogeado[playerid] == 1)
	{
        if(GetPVarInt(playerid, "TempName") == 1) return 1;
		JugadorLogeado[playerid] = 0;
		new query[1000];
		new Float:x,Float:y,Float:z,Float:z_a,Float:VidaV;
		new Float:x2,Float:y2,Float:z2,Float:z_a2,Float:VidaV2;
		new Float:x3,Float:y3,Float:z3,Float:z_a3,Float:VidaV3;
		new Float:x4,Float:y4,Float:z4,Float:z_a4,Float:VidaV4;
		new inte,vw;
		new pName[32],day,month,year;
		getdate(day,month,year);

		if(autos[playerid] > 0)
		{
			GetVehicleDamageStatus(autos[playerid], PlayerInfo[playerid][VE1], PlayerInfo[playerid][VE2], PlayerInfo[playerid][VE3], PlayerInfo[playerid][VE4]);
			PlayerInfo[playerid][vGas] = VehicleFuel[autos[playerid]];
			GetVehicleHealth(autos[playerid], VidaV);
			inte = GetVehicleInterior(autos[playerid]); vw = GetVehicleVirtualWorld(autos[playerid]);
			PlayerInfo[playerid][vinterior] = inte;
			PlayerInfo[playerid][vvw] = vw;
			GetVehiclePos(autos[playerid], x,y,z);
			PlayerInfo[playerid][vX] = x;
			PlayerInfo[playerid][vY] = y;
			bloqueado[autos[playerid]] = 0;
			PlayerInfo[playerid][vZ] = z;
			GetVehicleZAngle(autos[playerid], z_a);
			PlayerInfo[playerid][vA] = z_a;
			PlayerInfo[playerid][pVidaV] = VidaV;
			Baul[autos[playerid]] = 0;
			EspacioBaul[autos[playerid]] = 0;
			EspacioBaul2[autos[playerid]] = 0;
			EspacioBaul3[autos[playerid]] = 0;
			EspacioBaul4[autos[playerid]] = 0;
			EspacioBaul5[autos[playerid]] = 0;
			EspacioBaul6[autos[playerid]] = 0;
			EspacioBaul7[autos[playerid]] = 0;
			EspacioBaul8[autos[playerid]] = 0;
			DestroyVehicle(autos[playerid]);
			OldPosx[autos[playerid]] = 0;
			OldPosy[autos[playerid]] = 0;
			OldPosz[autos[playerid]] = 0;
			autos[playerid] = 0;
			format(query,sizeof(query),"UPDATE `p_vehicles` SET `VE1`='%d',`VE2`='%d',`VE3`='%d',`VE4`='%d',`Combustible`='%d', `Vida`='%f',`X`='%f',`Y`='%f',`Z`='%f',`A`='%f',`Interior`='%d',`VW`='%d' WHERE `Propietario`='%d' AND `Slot`='1'",PlayerInfo[playerid][VE1], PlayerInfo[playerid][VE2], PlayerInfo[playerid][VE3], PlayerInfo[playerid][VE4],PlayerInfo[playerid][vGas],PlayerInfo[playerid][pVidaV],PlayerInfo[playerid][vX],PlayerInfo[playerid][vY],PlayerInfo[playerid][vZ],PlayerInfo[playerid][vA],PlayerInfo[playerid][vinterior],PlayerInfo[playerid][vvw],PlayerInfo[playerid][pID]);
            mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
            format(query,sizeof(query),"UPDATE `p_vehicles` SET `Estado_Alarma`='%d',`Estado_Seguro`='%d' WHERE `Propietario`='%d' AND `Slot`='1'",PlayerInfo[playerid][vAAlarma],PlayerInfo[playerid][vSeguro],PlayerInfo[playerid][pID]);
            mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		}
		if(autos2[playerid] > 0)
		{
			GetVehicleDamageStatus(autos2[playerid], PlayerInfo[playerid][V2E1], PlayerInfo[playerid][V2E2], PlayerInfo[playerid][V2E3], PlayerInfo[playerid][V2E4]);
			PlayerInfo[playerid][v2Gas] = VehicleFuel[autos2[playerid]];
			GetVehicleHealth(autos2[playerid], VidaV2);
			inte = GetVehicleInterior(autos2[playerid]); vw = GetVehicleVirtualWorld(autos2[playerid]);
			PlayerInfo[playerid][v2interior] = inte;
			PlayerInfo[playerid][v2vw] = vw;
			GetVehiclePos(autos2[playerid], x2,y2,z2);
			PlayerInfo[playerid][v2X] = x2;
			PlayerInfo[playerid][v2Y] = y2;
			PlayerInfo[playerid][v2Z] = z2;
			GetVehicleZAngle(autos2[playerid], z_a2);
			PlayerInfo[playerid][v2A] = z_a2;
			PlayerInfo[playerid][pVidaV2] = VidaV2;
			Baul[autos2[playerid]] = 0;
			EspacioBaul[autos2[playerid]] = 0;
			EspacioBaul2[autos2[playerid]] = 0;
			EspacioBaul3[autos2[playerid]] = 0;
			EspacioBaul4[autos2[playerid]] = 0;
			EspacioBaul5[autos2[playerid]] = 0;
			EspacioBaul6[autos2[playerid]] = 0;
			EspacioBaul7[autos2[playerid]] = 0;
			EspacioBaul8[autos2[playerid]] = 0;
			bloqueado[autos2[playerid]] = 0;
			DestroyVehicle(autos2[playerid]);
			OldPosx[autos2[playerid]] = 0;
			OldPosy[autos2[playerid]] = 0;
			OldPosz[autos2[playerid]] = 0;
			autos2[playerid] = 0;
            format(query,sizeof(query),"UPDATE `p_vehicles` SET `VE1`='%d',`VE2`='%d',`VE3`='%d',`VE4`='%d',`Combustible`='%d', `Vida`='%f',`X`='%f',`Y`='%f',`Z`='%f',`A`='%f',`Interior`='%d',`VW`='%d' WHERE `Propietario`='%d' AND `Slot`='2'",PlayerInfo[playerid][V2E1], PlayerInfo[playerid][V2E2], PlayerInfo[playerid][V2E3], PlayerInfo[playerid][V2E4],PlayerInfo[playerid][v2Gas],PlayerInfo[playerid][pVidaV2],PlayerInfo[playerid][v2X],PlayerInfo[playerid][v2Y],PlayerInfo[playerid][v2Z],PlayerInfo[playerid][v2A],PlayerInfo[playerid][v2interior],PlayerInfo[playerid][v2vw],PlayerInfo[playerid][pID]);
            mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
            format(query,sizeof(query),"UPDATE `p_vehicles` SET `Estado_Alarma`='%d',`Estado_Seguro`='%d' WHERE `Propietario`='%d' AND `Slot`='2'",PlayerInfo[playerid][vAAlarma2],PlayerInfo[playerid][vSeguro2],PlayerInfo[playerid][pID]);
            mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		}
		if(autos3[playerid] > 0)
		{
			GetVehicleDamageStatus(autos3[playerid], PlayerInfo[playerid][V3E1], PlayerInfo[playerid][V3E2], PlayerInfo[playerid][V3E3], PlayerInfo[playerid][V3E4]);
			PlayerInfo[playerid][v3Gas] = VehicleFuel[autos3[playerid]];
			GetVehicleHealth(autos3[playerid], VidaV3);
			inte = GetVehicleInterior(autos3[playerid]); vw = GetVehicleVirtualWorld(autos3[playerid]);
			PlayerInfo[playerid][v3interior] = inte;
			PlayerInfo[playerid][v3vw] = vw;
			GetVehiclePos(autos3[playerid], x3,y3,z3);
			PlayerInfo[playerid][v3X] = x3;
			PlayerInfo[playerid][v3Y] = y3;
			PlayerInfo[playerid][v3Z] = z3;
			GetVehicleZAngle(autos3[playerid], z_a3);
			PlayerInfo[playerid][v3A] = z_a3;
			PlayerInfo[playerid][pVidaV3] = VidaV3;
			Baul[autos3[playerid]] = 0;
			EspacioBaul[autos3[playerid]] = 0;
			EspacioBaul2[autos3[playerid]] = 0;
			EspacioBaul3[autos3[playerid]] = 0;
			EspacioBaul4[autos3[playerid]] = 0;
			EspacioBaul5[autos3[playerid]] = 0;
			EspacioBaul6[autos3[playerid]] = 0;
			EspacioBaul7[autos3[playerid]] = 0;
			EspacioBaul8[autos3[playerid]] = 0;
			bloqueado[autos3[playerid]] = 0;
			DestroyVehicle(autos3[playerid]);
			OldPosx[autos3[playerid]] = 0;
			OldPosy[autos3[playerid]] = 0;
			OldPosz[autos3[playerid]] = 0;
			autos3[playerid] = 0;
			format(query,sizeof(query),"UPDATE `p_vehicles` SET `VE1`='%d',`VE2`='%d',`VE3`='%d',`VE4`='%d',`Combustible`='%d', `Vida`='%f',`X`='%f',`Y`='%f',`Z`='%f',`A`='%f',`Interior`='%d',`VW`='%d' WHERE `Propietario`='%d' AND `Slot`='3'",PlayerInfo[playerid][V3E1], PlayerInfo[playerid][V3E2], PlayerInfo[playerid][V3E3], PlayerInfo[playerid][V3E4],PlayerInfo[playerid][v3Gas],PlayerInfo[playerid][pVidaV3],PlayerInfo[playerid][v3X],PlayerInfo[playerid][v3Y],PlayerInfo[playerid][v3Z],PlayerInfo[playerid][v3A],PlayerInfo[playerid][v3interior],PlayerInfo[playerid][v3vw],PlayerInfo[playerid][pID]);
            mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
            format(query,sizeof(query),"UPDATE `p_vehicles` SET `Estado_Alarma`='%d',`Estado_Seguro`='%d' WHERE `Propietario`='%d' AND `Slot`='3'",PlayerInfo[playerid][vAAlarma3],PlayerInfo[playerid][vSeguro3],PlayerInfo[playerid][pID]);
            mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		}
		if(autos4[playerid] > 0)
		{
			GetVehicleDamageStatus(autos4[playerid], PlayerInfo[playerid][V4E1], PlayerInfo[playerid][V4E2], PlayerInfo[playerid][V4E3], PlayerInfo[playerid][V4E4]);
			PlayerInfo[playerid][v4Gas] = VehicleFuel[autos4[playerid]];
			GetVehicleHealth(autos4[playerid], VidaV4);
			inte = GetVehicleInterior(autos4[playerid]); vw = GetVehicleVirtualWorld(autos4[playerid]);
			PlayerInfo[playerid][v4interior] = inte;
			PlayerInfo[playerid][v4vw] = vw;
			GetVehiclePos(autos4[playerid], x4,y4,z4);
			PlayerInfo[playerid][v4X] = x4;
			PlayerInfo[playerid][v4Y] = y4;
			PlayerInfo[playerid][v4Z] = z4;
			GetVehicleZAngle(autos4[playerid], z_a4);
			PlayerInfo[playerid][v4A] = z_a4;
			PlayerInfo[playerid][pVidaV4] = VidaV4;
			Baul[autos4[playerid]] = 0;
			EspacioBaul[autos4[playerid]] = 0;
			EspacioBaul2[autos4[playerid]] = 0;
			EspacioBaul3[autos4[playerid]] = 0;
			EspacioBaul4[autos4[playerid]] = 0;
			EspacioBaul5[autos4[playerid]] = 0;
			EspacioBaul6[autos4[playerid]] = 0;
			EspacioBaul7[autos4[playerid]] = 0;
			EspacioBaul8[autos4[playerid]] = 0;
			bloqueado[autos4[playerid]] = 0;
			DestroyVehicle(autos4[playerid]);
			OldPosx[autos4[playerid]] = 0;
			OldPosy[autos4[playerid]] = 0;
			OldPosz[autos4[playerid]] = 0;
			autos4[playerid] = 0;
			format(query,sizeof(query),"UPDATE `p_vehicles` SET `VE1`='%d',`VE2`='%d',`VE3`='%d',`VE4`='%d',`Combustible`='%d', `Vida`='%f',`X`='%f',`Y`='%f',`Z`='%f',`A`='%f',`Interior`='%d',`VW`='%d' WHERE `Propietario`='%d' AND `Slot`='4'",PlayerInfo[playerid][V4E1], PlayerInfo[playerid][V4E2], PlayerInfo[playerid][V4E3], PlayerInfo[playerid][V4E4],PlayerInfo[playerid][v4Gas],PlayerInfo[playerid][pVidaV4],PlayerInfo[playerid][v4X],PlayerInfo[playerid][v4Y],PlayerInfo[playerid][v4Z],PlayerInfo[playerid][v4A],PlayerInfo[playerid][v4interior],PlayerInfo[playerid][v4vw],PlayerInfo[playerid][pID]);
            mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
            format(query,sizeof(query),"UPDATE `p_vehicles` SET `Estado_Alarma`='%d',`Estado_Seguro`='%d' WHERE `Propietario`='%d' AND `Slot`='4'",PlayerInfo[playerid][vAAlarma4],PlayerInfo[playerid][vSeguro4],PlayerInfo[playerid][pID]);
            mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		}

		if(PlayerInfo[playerid][jDinero] < 0) { PlayerInfo[playerid][jDinero] = 0; }
		if(PlayerInfo[playerid][pBanco] < 0) { PlayerInfo[playerid][pBanco] = 0; }
		PlayerInfo[playerid][pInterior] = GetPlayerInterior(playerid);
		PlayerInfo[playerid][pMundoVirtual] = GetPlayerVirtualWorld(playerid);
		GetPlayerPos(playerid, PlayerInfo[playerid][@X], PlayerInfo[playerid][@Y], PlayerInfo[playerid][@Z]);
		if(EnClub[playerid] != 0)
		{
			EnClub[playerid] = 0;
			PlayerInfo[playerid][@X] = 1204.8699;
			PlayerInfo[playerid][@Y] = 12.5584;
			PlayerInfo[playerid][@Z] = 1000.921;
			PlayerInfo[playerid][pInterior] = 2;
			PlayerInfo[playerid][pMundoVirtual] = 5;
  		}
		GetPlayerName(playerid, pName, 32);
		GetPlayerHealth(playerid, PlayerInfo[playerid][@Salud]);
		GetPlayerArmour(playerid, PlayerInfo[playerid][@Chaleco]);

		new hour,minute,second;
		gettime(hour, minute, second);
		format(PlayerInfo[playerid][jConexion], 90, "%02d/%02d/%02d %02d:%02d:%02d", year,month,day,hour,minute,second);

		format(query, sizeof(query), "UPDATE `usuarios` SET `Online`='0',`Vida`='%f', `Chaleco`='%f', `Admin`='%d', `Nivel`='%d', `Money`='%d',`GPS`='%d',`Radio`='%d',`Sexo`='%d',`Numero`='%d',`Guia`='%d',`Sonidos`='%d',`Muteos`='%d',`Barras`='%d',`Alerta`='%d',`Velocimetro`='%d',`Interior`='%d',`MundoVirtual`='%d',`NivelArmero`='%d' WHERE `Username`='%s'", PlayerInfo[playerid][@Salud], PlayerInfo[playerid][@Chaleco],PlayerInfo[playerid][pAdmin],PlayerInfo[playerid][@Nivel],PlayerInfo[playerid][jDinero],PlayerInfo[playerid][pGPS],PlayerInfo[playerid][pRadio],PlayerInfo[playerid][jSexo],PlayerInfo[playerid][pNumero],PlayerInfo[playerid][pGuia],PlayerInfo[playerid][pSonidos],PlayerInfo[playerid][pMuteos],PlayerInfo[playerid][pBarras],PlayerInfo[playerid][pAlerta],PlayerInfo[playerid][pVelocimetro],PlayerInfo[playerid][pInterior],PlayerInfo[playerid][pMundoVirtual],PlayerInfo[playerid][pNivelArmero],PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

		format(query, sizeof(query), "UPDATE `usuarios` SET `Posx`='%f', `Posy`='%f', `Posz`='%f',`TiempoJail`='%d',`Agonizando`='%d',`Trabajo`='%d',`Faccion`='%d',`NivelTransportista`='%d',`NivelLadron`='%d',`NivelPiloto`='%d',`ExpPiloto`='%d',`NivelTransportista`='%d',`ExpTransportista`='%d',`TipoCarcel`='%d',`SocioHP`='%d',`Hambre`='%d',`Licencia`='%d',`Semillas`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][@X], PlayerInfo[playerid][@Y], PlayerInfo[playerid][@Z],PlayerInfo[playerid][pTiempoJailS]*1000,PlayerInfo[playerid][Agonizando],PlayerInfo[playerid][pTrabajo],PlayerInfo[playerid][pFaccion],PlayerInfo[playerid][pNivelTransportista],PlayerInfo[playerid][pNivelLadron],PlayerInfo[playerid][pNivelPiloto],PlayerInfo[playerid][pExpPiloto],PlayerInfo[playerid][pNivelTransportista],PlayerInfo[playerid][pExpTransportista],PlayerInfo[playerid][pTipoCarcel],PlayerInfo[playerid][pSocioHP], PlayerInfo[playerid][pHambre], PlayerInfo[playerid][pLicencia], PlayerInfo[playerid][pSemillas],PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

		format(query, sizeof(query), "UPDATE `usuarios` SET `IP`='%s',`Banco`='%d',`Moneda`='%d',`EnCasa`='%d',`EnRopero`='%d',`EnGarage`='%d',`TiempoPD`='%d', `totems`='%d', `arrestado`='%d', `horasjugadas`='%d', `TieneEmisora`='%d', `NombreEmisora`='%s',`ExpArmero`='%d',`Materiales`='%d',`NivelCamionero`='%d',`NivelBasurero`='%d',`ExpBasurero`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][IP],PlayerInfo[playerid][pBanco],PlayerInfo[playerid][Moneda],PlayerInfo[playerid][EnCasa],PlayerInfo[playerid][EnRopero],PlayerInfo[playerid][EnGarage],PlayerInfo[playerid][TiempoPD], PlayerInfo[playerid][Totems], PlayerInfo[playerid][arrestado], PlayerInfo[playerid][horasjugadas], Emisoras[playerid][TieneEmisora], Emisoras[playerid][NombreEmisora],PlayerInfo[playerid][pExpArmero],PlayerInfo[playerid][pMateriales],PlayerInfo[playerid][pNivelCamionero],PlayerInfo[playerid][pNivelBasurero],PlayerInfo[playerid][pExpBasurero],PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

		format(query, sizeof(query), "UPDATE `usuarios` SET `Cargos`='%d',`SkinTrabajo`='%d',`Duty`='%d',`WP0`='%d',`WP1`='%d',`WP2`='%d',`WP3`='%d',`WP4`='%d',`WP5`='%d',`WP6`='%d',`WP7`='%d',`WP8`='%d',`WP9`='%d',`WP10`='%d',`WP11`='%d',`WP12`='%d',`Experiencia`='%d',`TiempoCarcelM`='%d',`TiempoCarcelS`='%d',`NivelMinero`='%d',`ExpMinero`='%d', `PuntosCarrera`='%d' WHERE `Username`='%s'", PlayerInfo[playerid][pCargos],PlayerInfo[playerid][pModelo],PlayerInfo[playerid][pDuty],PlayerInfo[playerid][pWP0],PlayerInfo[playerid][pWP1],PlayerInfo[playerid][pWP2],PlayerInfo[playerid][pWP3],PlayerInfo[playerid][pWP4],PlayerInfo[playerid][pWP5],PlayerInfo[playerid][pWP6],PlayerInfo[playerid][pWP7],PlayerInfo[playerid][pWP8],PlayerInfo[playerid][pWP9],PlayerInfo[playerid][pWP10],PlayerInfo[playerid][pWP11],PlayerInfo[playerid][pWP12],PlayerInfo[playerid][jExperiencia],PlayerInfo[playerid][pTiempoCarcelM],PlayerInfo[playerid][pTiempoCarcelS],PlayerInfo[playerid][pNivelMinero],PlayerInfo[playerid][pExpMinero],PlayerInfo[playerid][pPuntosCarrera],PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

		format(query, sizeof(query), "UPDATE `usuarios` SET `Conexion`='%s',`Sed`='%d',`NivelPescador`='%d',`ExpPescador`='%d',`RopaBasu`='%d',`RopaMedi`='%d',`RopaMeca`='%d',`RopaMine`='%d',`Martillo`='%d',`Destornillador`='%d',`Barreta`='%d',`Balde`='%d', `Regalo`='%d', `Patines`='%d' WHERE `Username`='%s'", PlayerInfo[playerid][jConexion], PlayerInfo[playerid][pSed], PlayerInfo[playerid][pNivelPescador], PlayerInfo[playerid][pExpPescador], RopaBasu[playerid], RopaMedi[playerid], RopaMeca[playerid], RopaMine[playerid], PlayerInfo[playerid][jMartillo], PlayerInfo[playerid][jDestornillador], PlayerInfo[playerid][jBarreta], PlayerInfo[playerid][jBalde], PlayerInfo[playerid][jRegalo], PlayerInfo[playerid][pPatines],PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

		format(query, sizeof(query), "UPDATE `usuarios` SET `Afinidad1`='%d',`Afinidad2`='%d',`Afinidad3`='%d',`Afinidad4`='%d',`Afinidad5`='%d',`Afinidad6`='%d',`Caramelos`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pAfinidad1],PlayerInfo[playerid][pAfinidad2],PlayerInfo[playerid][pAfinidad3],PlayerInfo[playerid][pAfinidad4],PlayerInfo[playerid][pAfinidad5],PlayerInfo[playerid][pAfinidad6],PlayerInfo[playerid][pCaramelos],PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

		format(query, sizeof(query), "UPDATE `usuarios` SET `ExpCamionero`='%d',`Agenda`='%d',`Crack`='%d',`Medicamentos`='%d',`Marihuana`='%d',`Trabajo2`='%d',`VIP`='%d',`Rango`='%d',`Repuestos`='%d',`NMute`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pExpCamionero],PlayerInfo[playerid][pAgenda],PlayerInfo[playerid][pCrack],PlayerInfo[playerid][pMedicamentos],PlayerInfo[playerid][pMarihuana],PlayerInfo[playerid][pTrabajo2],PlayerInfo[playerid][pVip],PlayerInfo[playerid][pRango],PlayerInfo[playerid][Repuestos],TiempoDuda[playerid],PlayerName(playerid));
        mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

		format(query, sizeof(query), "UPDATE `usuarios` SET `EnFC`='%d', `BaneosHechos`='%d', `BaneosDia`='%d', `XE`='%f',`YE`='%f',`ZE`='%f',`NivelMedico`='%d',`ExpMedico`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pEnFC],PlayerInfo[playerid][BaneosD],PlayerInfo[playerid][BaneosD2],PlayerInfo[playerid][jPosE_x], PlayerInfo[playerid][jPosE_y], PlayerInfo[playerid][jPosE_z],PlayerInfo[playerid][pNivelMedico],PlayerInfo[playerid][pExpMedico],PlayerName(playerid));
  		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

		format(query, sizeof(query), "UPDATE `usuarios` SET `Puesto1H`='%d',`Puesto2H`='%d',`Puesto3H`='%d',`Puesto4H`='%d',`Puesto5H`='%d',`Puesto6H`='%d',`Puesto7H`='%d',`Puesto8H`='%d',`Puesto9H`='%d',`Puesto10H`='%d',`Puesto11H`='%d',`Puesto12H`='%d',`Puesto13H`='%d',`Puesto14H`='%d',`Puesto15H`='%d' WHERE `Username`='%s'", Halloween[playerid][P1Hora],Halloween[playerid][P2Hora],Halloween[playerid][P3Hora],Halloween[playerid][P4Hora],Halloween[playerid][P5Hora],Halloween[playerid][P6Hora],Halloween[playerid][P7Hora],Halloween[playerid][P8Hora],Halloween[playerid][P9Hora],Halloween[playerid][P10Hora],Halloween[playerid][P11Hora],Halloween[playerid][P12Hora],Halloween[playerid][P13Hora],Halloween[playerid][P14Hora],Halloween[playerid][P15Hora],PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

		format(query, sizeof(query), "UPDATE `usuarios` SET `Puesto16H`='%d',`Puesto17H`='%d',`Puesto18H`='%d',`Puesto19H`='%d',`Puesto20H`='%d',`Puesto21H`='%d',`Puesto22H`='%d',`Puesto23H`='%d',`Puesto24H`='%d',`Puesto25H`='%d',`Puesto26H`='%d',`Puesto27H`='%d',`Puesto28H`='%d',`Puesto29H`='%d',`Puesto30H`='%d' WHERE `Username`='%s'", Halloween[playerid][P16Hora],Halloween[playerid][P17Hora],Halloween[playerid][P18Hora],Halloween[playerid][P19Hora],Halloween[playerid][P20Hora],Halloween[playerid][P21Hora],Halloween[playerid][P22Hora],Halloween[playerid][P23Hora],Halloween[playerid][P24Hora],Halloween[playerid][P25Hora],Halloween[playerid][P26Hora],Halloween[playerid][P27Hora],Halloween[playerid][P28Hora],Halloween[playerid][P29Hora],Halloween[playerid][P30Hora],PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

		format(query, sizeof(query), "UPDATE `usuarios` SET `Puesto31H`='%d',`Puesto32H`='%d' WHERE `Username`='%s'", Halloween[playerid][P31Hora],Halloween[playerid][P32Hora],PlayerName(playerid));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);

	}
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	if(EnCarreras[playerid] > 0)
	{
	    if(IsPlayerInRangeOfPoint(playerid,10,-1418.1959,-276.4316,1051.0911))
	    {
	        VueltasCarrera[playerid] ++;
	        new string2[50];
	        format(string2,sizeof(string2),"Vuelta: %d/5",VueltasCarrera[playerid]);
	        PlayerTextDrawSetString(playerid,CarreraT[playerid][0],string2);
	        if(VueltasCarrera[playerid] >= 5)
	        {
	            DisablePlayerRaceCheckpoint(playerid);
				SetPlayerPos(playerid,-1405.2959,-309.6738,1052.0900);
				SetPlayerFacingAngle(playerid,190.0000);
                for(new z=0; z<8; z++)
				{
				    TextDrawHideForPlayer(playerid, BoxCarrera[0]);
			    	TextDrawHideForPlayer(playerid, BoxCarrera[1]);
			    	TextDrawHideForPlayer(playerid, BoxCarrera[2]);
			    	TextDrawHideForPlayer(playerid, BoxCarrera[3]);
					TextDrawHideForPlayer(playerid, CarreraPosicion);
				}
				PlayerTextDrawHide(playerid, CarreraT[playerid][0]);
				PlayerTextDrawHide(playerid, CarreraT[playerid][1]);
				PlayerTextDrawHide(playerid, CarreraT[playerid][2]);
				SlotGanador ++;
				CargarMapeosEx(playerid);
				new string[250],minuto = TiempoCarrera[playerid],segundo = TiempoCarrera2[playerid];
				if(SlotGanador == 1)
				{
				    SendClientMessage(playerid,-1,"¡Felicidades! Ganaste la carrera, tu premio es de {00CC00}$20.000{FFFFFF} y {8c5c35}3 Tótems{FFFFFF}.");
				    DarDinero(playerid,20000);
				    SendClientMessage(playerid,-1,"Conseguiste 3 puntos en el torneo del mes.");
					format(string,sizeof(string),"El corredor {00CCFF}%s{FFFFFF} consiguió el primer puesto tardando {00CC00}%d:%d{FFFFFF}.",PlayerName(playerid),minuto,segundo);
                    PlayerInfo[playerid][pPuntosCarrera] += 3;
                    PlayerInfo[playerid][Totems] += 3;
                    RevisarLogroCarrera(playerid);
				}
				else if(SlotGanador == 2)
				{
					SendClientMessage(playerid,-1,"Lograste terminar la carrera en el segundo puesto, tu premio es de {00CC00}$15.000{FFFFFF} y {8c5c35}2 Tótems{FFFFFF}.");
				    DarDinero(playerid,15000);
				    SendClientMessage(playerid,-1,"Conseguiste 2 puntos en el torneo del mes.");
					format(string,sizeof(string),"El corredor {00CCFF}%s{FFFFFF} consiguió el segundo puesto tardando {00CC00}%d:%d{FFFFFF}.",PlayerName(playerid),minuto,segundo);
                    PlayerInfo[playerid][pPuntosCarrera] += 2;
                    PlayerInfo[playerid][Totems] += 2;
				}
				else if(SlotGanador == 3)
				{
				    SendClientMessage(playerid,-1,"Lograste terminar la cerrera en el tercer puesto, tu premio es de {00CC00}$2.000{FFFFFF} y {8c5c35}1 Tótem{FFFFFF}.");
				    DarDinero(playerid,2000);
				    SendClientMessage(playerid,-1,"Conseguiste 1 punto en el torneo del mes.");
					format(string,sizeof(string),"El corredor {00CCFF}%s{FFFFFF} consiguió el tercer puesto tardando {00CC00}%d:%d{FFFFFF}.",PlayerName(playerid),minuto,segundo);
                    PlayerInfo[playerid][pPuntosCarrera] += 1;
                    PlayerInfo[playerid][Totems] += 1;
				}
				else if(SlotGanador > 3) format(string,sizeof(string),"El corredor {00CCFF}%s{FFFFFF} consiguió terminar en el puesto %d tardando {00CC00}%d:%d{FFFFFF}.",PlayerName(playerid),SlotGanador,minuto,segundo);
				for(new i, j = GetPlayerPoolSize(); i <= j; i++) if(IsPlayerInRangeOfPoint(i,250,-1408.8688,-304.5082,1056.4351) && GetPlayerInterior(i) == 7) SendClientMessage(i,-1,string);
				SacarCarrera(playerid);
				if(ParticipantesCarrera <= 0)
				{
				    ResetearCarrera();
				    HabilitarCarreras = 0;
					Update3DTextLabelText(TextoCarrera,COLOR_WHITE,"{FF3300}Boleteria cerrada\n{DBED16}Horarios de los eventos: {FFFFFF}5hs,11hs,17hs,23hs");
				}
	        }
			else
			{
				SetPlayerRaceCheckpoint(playerid,0,-1357.2258,-130.9288,1051.0356,-1365.4042,-280.5632,1045.2321,10);
				InfoCP[0][VueltasCarrera[playerid]] ++;
				new string[100];
				format(string,sizeof(string),"%d/%d",InfoCP[0][VueltasCarrera[playerid]],ParticipantesCarrera2);
				PlayerTextDrawSetString(playerid,CarreraT[playerid][1],string);
			}
	    }
	    if(IsPlayerInRangeOfPoint(playerid,10,-1357.2258,-130.9288,1051.0356))
	    {
	        InfoCP[1][VueltasCarrera[playerid]] ++;
			SetPlayerRaceCheckpoint(playerid,0,-1365.4042,-280.5632,1045.2321,-1504.3351,-154.6163,1049.3365,10);
			new string[100];
			format(string,sizeof(string),"%d/%d",InfoCP[1][VueltasCarrera[playerid]],ParticipantesCarrera2);
			PlayerTextDrawSetString(playerid,CarreraT[playerid][1],string);
	    }
	    if(IsPlayerInRangeOfPoint(playerid,10,-1365.4042,-280.5632,1045.2321))
	    {
			SetPlayerRaceCheckpoint(playerid,0,-1504.3351,-154.6163,1049.3365,-1418.1959,-276.4316,1051.0911,10);
			InfoCP[2][VueltasCarrera[playerid]] ++;
			new string[100];
			format(string,sizeof(string),"%d/%d",InfoCP[2][VueltasCarrera[playerid]],ParticipantesCarrera2);
			PlayerTextDrawSetString(playerid,CarreraT[playerid][1],string);
	    }
	    if(IsPlayerInRangeOfPoint(playerid,10,-1504.3351,-154.6163,1049.3365))
	    {
			if(VueltasCarrera[playerid] == 4) SetPlayerRaceCheckpoint(playerid,1,-1418.1959,-276.4316,1051.0911,-1357.2258,-130.9288,1051.0356,10);
			else SetPlayerRaceCheckpoint(playerid,0,-1418.1959,-276.4316,1051.0911,-1357.2258,-130.9288,1051.0356,10);
			InfoCP[3][VueltasCarrera[playerid]] ++;
			new string[100];
			format(string,sizeof(string),"%d/%d",InfoCP[3][VueltasCarrera[playerid]],ParticipantesCarrera2);
			PlayerTextDrawSetString(playerid,CarreraT[playerid][1],string);
	    }
	}
	if(Cosechas[playerid][RutaCosecha] != 0)
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
		    new autoid = GetPlayerVehicleID(playerid);
		    if(COSECHA(autoid))
			{
			    if(Cosechas[playerid][ProgresoCosecha] > 19 && Cosechas[playerid][RutaCosecha] == 1 && Cosechas[playerid][CosechaLugar] == 1) return PagarCosechador(playerid);
			    if(Cosechas[playerid][ProgresoCosecha] > 14 && Cosechas[playerid][RutaCosecha] == 2 && Cosechas[playerid][CosechaLugar] == 1) return PagarCosechador(playerid);
			    if(Cosechas[playerid][ProgresoCosecha] > 14 && Cosechas[playerid][RutaCosecha] == 1 && Cosechas[playerid][CosechaLugar] == 2) return PagarCosechador(playerid);
			    if(Cosechas[playerid][ProgresoCosecha] > 14 && Cosechas[playerid][RutaCosecha] == 2 && Cosechas[playerid][CosechaLugar] == 2) return PagarCosechador(playerid);
			    Cosechas[playerid][ProgresoCosecha] ++;
			    RutaCosechador(playerid);
			    SetPlayerProgressBarValue(playerid,Progressbar[playerid][Cosecha],Cosechas[playerid][ProgresoCosecha]);
				UpdatePlayerProgressBar(playerid,Progressbar[playerid][Cosecha]);
			}
		}
	}
	return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
	new autoid = GetPlayerVehicleID(playerid);
	if(BuscandoAmigo[playerid] == 1)
	{
		SendClientMessage(playerid, -1,"Si tu amigo no se encuentra en el lugar, usa nuevamente el GPS para {DBED15}/localizar amigo");
		DisablePlayerCheckpoint(playerid);
		BuscandoAmigo[playerid] = 0;
		return 1;
	}
	if(Localizando[playerid] == 1)
	{
		SendClientMessage(playerid, -1,"Si no encuentras tu vehículo, quiere decir que te lo han robado.");
		SendClientMessage(playerid, -1,"Por favor, llama a la policía para que lo recuperen.");
		DisablePlayerCheckpoint(playerid);
		Localizando[playerid] = 0;
		return 1;
	}
	if(TieneGPSActivo[playerid] == 1)
	{
		TieneGPSActivo[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	if(IsPlayerInRangeOfPoint(playerid, 10.0,1908.3149,935.6036,10.9811))
	{
		SetPlayerCheckpoint(playerid, 1999.6644,933.4708,10.7981, 10.0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 10.0,1999.6644,933.4708,10.7981))
	{
		SetPlayerCheckpoint(playerid, 2010.7413,972.2186,10.7965, 10.0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 10.0,2010.7413,972.2186,10.7965))
	{
		SetPlayerCheckpoint(playerid, 2046.9509,856.2018,6.8548, 10.0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 10.0,2046.9509,856.2018,6.8548))
	{
		SetPlayerCheckpoint(playerid, 1799.7394,846.0538,10.7795, 10.0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 10.0,1799.7394,846.0538,10.7795))
	{
		SetPlayerCheckpoint(playerid, 1708.5696,465.3290,30.7572, 10.0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 10.0,1708.5696,465.3290,30.7572))
	{
		SetPlayerCheckpoint(playerid, 1616.4937,144.9171,36.0788, 10.0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 10.0,1616.4937,144.9171,36.0788))
	{
		SetPlayerCheckpoint(playerid, 1667.7742,-795.5954,55.8881, 10.0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 10.0,1667.7742,-795.5954,55.8881))
	{
		SetPlayerCheckpoint(playerid, 1388.7821,-940.4939,34.2972, 10.0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 10.0,1388.7821,-940.4939,34.2972))
	{
		SetPlayerCheckpoint(playerid, 1262.7042,-937.6155,42.5248, 10.0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 10.0,1262.7042,-937.6155,42.5248))
	{
		SetPlayerCheckpoint(playerid, 1263.4191,-1035.9680,32.0161, 10.0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 10.0,1263.4191,-1035.9680,32.0161))
	{
		SetPlayerCheckpoint(playerid, 1162.8492,-1018.5044,33.9312, 10.0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 10.0,1162.8492,-1018.5044,33.9312))
	{
		SendClientMessage(playerid, COLOR_WHITE, "!Es una emboscada¡ No dejes que el camión sea destruido.");
		SendClientMessage(playerid, COLOR_WHITE, "Se ha marcado el nuevo punto de entrega.");
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 428 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			RestaGuardia = 600;
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(Grupo[i] == 1 && EnAsalto[i] == 1)
				{
					DarArma(i,25);
					DarArma(i,23);
					MandarMensajeAsalto(i,"Tienes que ~r~/colocar c4~w~ en las puertas del camion.");
					SetPlayerMarkerForPlayer(i, playerid, 0xEDE624FF);
					SendClientMessage(i, COLOR_WHITE, "Detén el camión y abre sus puertas traseras para robar el dinero.");
				}
				if(Grupo[i] == 2 && EnAsalto[i] == 1)
				{
					DarArma(i,25);
					DarArma(i,23);
					MandarMensajeAsalto(i,"Lleva el ~g~dinero~w~ al nuevo punto de entrega.");
					SetPlayerCheckpoint(i, -2653.8994,-287.7405,7.5391, 10.0);
					MarcarCoche = 1;
				}
			}
		}
		return 1;
	}
	//---------------GANA GUARDIA----------------------
	if(IsPlayerInRangeOfPoint(playerid, 10.0,-2653.8994,-287.7405,7.5391))
	{
		new string3[60];
		DisablePlayerCheckpoint(playerid);
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 428)
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(Grupo[i] > 0 && EnAsalto[i] == 1)
				{
				    RemovePlayerAttachedObject(i,2);
					if(Grupo[i] == 2 && EnAsalto[i] == 1 || Grupo[i] == 3 && EnAsalto[i] == 1)
					{
						SendClientMessage(i, COLOR_WHITE, "Misión completada.");
						DarDinero(i, 6000);
						format(string3, 160, "Bolsos: %d.", BolsasCamion);
						SendClientMessage(i, -1, string3);
					}
					if(Grupo[i] == 1 && EnAsalto[i] == 1)
					{
						SendClientMessage(i, COLOR_WHITE, "Misión Fallida.");
						SetPlayerVirtualWorld(i,0);
						SetPlayerInterior(i,0);
                    }
                    ColorJugadorDefault(i);
                    EnAsalto[i] = 0;
				}
			}
			ResetearMision();
		}
		return 1;
	}
	//---------------GANA LADRON----------------------
	if(IsPlayerInRangeOfPoint(playerid, 10.0,-66.7037,-1111.8810,1.0781))
	{
		new string3[100];
		DisablePlayerCheckpoint(playerid);
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 428)
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(Grupo[i] > 0 && EnAsalto[i] == 1)
				{
				    RemovePlayerAttachedObject(i,2);
					if(Grupo[i] == 1 && EnAsalto[i] == 1)
					{
						SendClientMessage(i, COLOR_WHITE, "Misión completada.");
						DarDinero(i, 6000);
						format(string3, 160, "Bolsos: %d.", BolsasCamionLadron);
						SendClientMessage(i, -1, string3);
					}
					if(Grupo[i] > 1 && EnAsalto[i] == 1)
					{
						SendClientMessage(i, COLOR_WHITE, "Misión Fallida.");
						SetPlayerVirtualWorld(i,0);
						SetPlayerInterior(i,0);
                    }
                    ColorJugadorDefault(i);
                    EnAsalto[i] = 0;
				}
			}
			ResetearMision();
		}
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,1401.7522,496.2577,1000.0804))
	{
		SendClientMessage(playerid, 0xF6FA84FF, "Aguarda mientras autorizan la apertura de la bóveda.");
		MandarMensajeAsalto(playerid,"Espera que abran la ~y~b¦veda~w~.");
		DisablePlayerCheckpoint(playerid);
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(Grupo[i] == 2 && EnAsalto[i] == 1 && YaGuardias == 0)
			{
				RestaGuardia = 90;
				YaGuardias = 1;
				SetTimer("AbrirBoveda",88000,false);
			}
		}
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,1415.0624,573.1929,1000.9595	)) //penis
	{
		SendClientMessage(playerid, COLOR_WHITE, "Aguarda un momento mientras el mecánico termina de preparar el camión.");
		MandarMensajeAsalto(playerid,"Aguarda mientras el ~b~mecanico~w~ termina su trabajo.");
		DisablePlayerCheckpoint(playerid);
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(Grupo[i] == 1 && EnAsalto[i] == 1 && YaLadron == 0)
			{
				RestaLadron = 120;
				YaLadron = 1;
				SetTimer("Veaemboscada",118000,false);
			}
		}
		return 1;
	}
	//LLEGO EMBOSCADA
	if(IsPlayerInRangeOfPoint(playerid, 8.0,1162.2131,-970.9263,41.1058))
	{
		if(Grupo[playerid] == 1 && EnAsalto[playerid] == 1)
		{
			OcultarMensajeAsalto(playerid);
			DisablePlayerCheckpoint(playerid);
			MandarMensajeAsalto(playerid, "Espera la llegada del ~g~cami¦n~w~.");
			SendClientMessage(playerid, -1,"Prepárate, el camión de caudales está en camino.");
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 428)
			{
				Bloqueo = 1;
				EmpezoMision = 1;
				YaLadron = 0;
				RestaLadron = 0;
			}
		}
		return 1;
	}
	if(EnPrueba[playerid])
 	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0,635.3787,-222.2007,1276.7941))
	    {
	        PruebaOnline[playerid] = true;
        	DisablePlayerCheckpoint(playerid);
	        SetPlayerCheckpoint(playerid, 608.2529,-221.9856,1276.7941, 3.0);
	        return 1;
    	}
	    if(IsPlayerInRangeOfPoint(playerid, 3.0,608.2529,-221.9856,1276.7941))
    	{
	        DisablePlayerCheckpoint(playerid);
    	    SetPlayerCheckpoint(playerid, 593.6731,-221.9529,1276.7941, 3.0);
    	    return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 3.0,593.6731,-221.9529,1276.7941))
    	{
	        DisablePlayerCheckpoint(playerid);
    	    SetPlayerCheckpoint(playerid, 593.2269,-261.0184,1276.7941, 3.0);
    	    return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 3.0,593.2269,-261.0184,1276.7941))
    	{
	        DisablePlayerCheckpoint(playerid);
    	    SetPlayerCheckpoint(playerid, 587.6206,-248.2012,1276.7941, 3.0);
    	    return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 3.0,587.6206,-248.2012,1276.7941))
    	{
	        DisablePlayerCheckpoint(playerid);
	        SetPlayerCheckpoint(playerid, 583.4668,-237.1445,1276.7941, 3.0);
	        return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 3.0,583.4668,-237.1445,1276.7941))
    	{
	        DisablePlayerCheckpoint(playerid);
    	    SetPlayerCheckpoint(playerid, 552.4970,-235.8692,1280.2028, 3.0);
    	    return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 3.0,552.4970,-235.8692,1280.2028))
    	{
	        DisablePlayerCheckpoint(playerid);
    	    SetPlayerCheckpoint(playerid, 552.4763,-266.4409,1276.7941, 3.0);
    	    return 1;
	    }
    	if(IsPlayerInRangeOfPoint(playerid, 3.0,552.4763,-266.4409,1276.7941))
	    {
        	DisablePlayerCheckpoint(playerid);
	        SetPlayerCheckpoint(playerid, 598.8328,-266.1846,1276.7941, 3.0);
	        return 1;
    	}
		if(IsPlayerInRangeOfPoint(playerid, 3.0,598.8328,-266.1846,1276.7941))
    	{
	        DisablePlayerCheckpoint(playerid);
    	    SetPlayerCheckpoint(playerid, 636.0906,-230.4454,1276.7941, 3.0);
    	    return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 3.0,636.0906,-230.4454,1276.7941))
    	{
   			new tempo[160];
        	DisablePlayerCheckpoint(playerid);
			if(TiempoAcademia[playerid] < 60)		format(tempo, 160, "{00CCFF}%s{FFFFFF} terminó la prueba fisica en {00CC00}%d segundos{FFFFFF}.", PlayerName(playerid), TiempoAcademia[playerid]);
			else if(TiempoAcademia[playerid] >= 60)	format(tempo, 160, "{00CCFF}%s{FFFFFF} terminó la prueba fisica en {00CC00}%d minutos con %d segundos{FFFFFF}.", PlayerName(playerid), TiempoAcademia[playerid]/60, TiempoAcademia[playerid]%(60));
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(EnAcademia(i))
    			{
					SendClientMessage(i, -1, tempo);
				}
			}
        	TiempoAcademia[playerid] = 0;
        	PruebaOnline[playerid] = false;
			EnPrueba[playerid] = false;
			return 1;
   		}
   	}
   	if(IsPlayerInRangeOfPoint(playerid, 7.0,2431.9109,-1672.5043,13.6113) || IsPlayerInRangeOfPoint(playerid, 7.0,1091.5337,-1245.3550,15.8272) || IsPlayerInRangeOfPoint(playerid, 7.0,1520.5901,-1473.3662,9.5000) || IsPlayerInRangeOfPoint(playerid, 7.0,2206.5029,-2296.2642,14.7647))
   	{
   	    Loop(f,MAX_FABRICAS)
		if(Fabricas[f][pBanda] == PlayerInfo[playerid][pFaccion])
		{
		    if(GetPlayerVehicleID(playerid) == Fabricas[f][Auto1F])
		    {
		        if(VehiculoConCajas[Fabricas[f][Auto1F]] != 5) return SendClientMessage(playerid,-1,"Necesitas tener todas las cajas de metanfetamina en la camioneta para poder venderlas.");
				new caca;
				if(MetanfetaminaEnSlot[f] == 1) caca = 5362;
				if(MetanfetaminaEnSlot[f] == 2) caca = 7296;
				if(MetanfetaminaEnSlot[f] == 3) caca = 7121;
				if(MetanfetaminaEnSlot[f] == 4) caca = 8665;
				if(MetanfetaminaEnSlot[f] == 5) caca = 9917;
				new coco = caca + random(169), Float:Pos[3],stringas[128];
				GetVehiclePos(Fabricas[f][Auto1F], Pos[0],Pos[1],Pos[2]);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerInRangeOfPoint(i,50.0, Pos[0],Pos[1],Pos[2]))
					{
					    if(PlayerInfo[i][pFaccion] == Fabricas[f][pBanda])
					    {
							DarDinero(i,coco);
							format(stringas,sizeof(stringas),"Metanfetamina transportada con éxito, recibes {00CC00}$%d{FFFFFF} por haber participado.",coco);
							SendClientMessage(i,-1,stringas);
						}
					}
                }
                DarDineroFabrica(f,1150000);
				DestroyObject(CajaMeta[f][0]);	CajaMeta[f][0] = CreateObject(1271,0,0,-1000,0,0,0,100);
				DestroyObject(CajaMeta[f][1]);	CajaMeta[f][1] = CreateObject(1271,0,0,-1000,0,0,0,100);
				DestroyObject(CajaMeta[f][2]);	CajaMeta[f][2] = CreateObject(1271,0,0,-1000,0,0,0,100);
				DestroyObject(CajaMeta[f][3]);	CajaMeta[f][3] = CreateObject(1271,0,0,-1000,0,0,0,100);
				DestroyObject(CajaMeta[f][4]);	CajaMeta[f][4] = CreateObject(1271,0,0,-1000,0,0,0,100);
				VehiculoConCajas[Fabricas[f][Auto1F]] = 0;
				format(stringas,sizeof(stringas),"Tu fábrica recibió {00CC00}$1.150.000{FFFFFF} por la venta de la metanfetamina.");
				DisablePlayerCheckpoint(playerid);
				MandarMensajeFabrica(f,stringas);
				GuardarFabrica(f);
				ActualizarCajasMeta(f);
 		    }
		}
   	}
   	if(IsPlayerInRangeOfPoint(playerid, 5.0,-27.3778,2337.5212,24.1406))
	{
	    SendClientMessage(playerid,-1,"Carga los {00CC00}tanques{FFFFFF} en la camioneta y regrésalos a la {ff3e3e}fábrica{FFFFFF}.");
	    Quimicos1 = 1;
		for(new j=0;j<MAX_FABRICAS;j++)
		{
		    if(PlayerInfo[playerid][pFaccion] == Fabricas[j][pBanda])
		    {
		        ActualizarBarriles(GetPlayerVehicleID(playerid),j);
		    }
	    }
        SetTimerEx("LoadBarrelMeta", TIEMPO_BARRIL, false, "i", 1);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,-1853.9966,123.2759,15.1172))
	{
	    SendClientMessage(playerid,-1,"Carga los {00CC00}tanques{FFFFFF} en la camioneta y regrésalos a la {ff3e3e}fábrica{FFFFFF}.");
	    for(new j=0;j<MAX_FABRICAS;j++)
		{
		    if(PlayerInfo[playerid][pFaccion] == Fabricas[j][pBanda])
		    {
		        ActualizarBarriles(GetPlayerVehicleID(playerid),j);
		    }
	    }
	    Quimicos2 = 1;
        SetTimerEx("LoadBarrelMeta", TIEMPO_BARRIL, false, "i", 2);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,-1043.5349,1546.3799,33.0007))
	{
	    SendClientMessage(playerid,-1,"Carga los {00CC00}tanques{FFFFFF} en la camioneta y regrésalos a la {ff3e3e}fábrica{FFFFFF}.");
	    for(new j=0;j<MAX_FABRICAS;j++)
		{
		    if(PlayerInfo[playerid][pFaccion] == Fabricas[j][pBanda])
		    {
		        ActualizarBarriles(GetPlayerVehicleID(playerid),j);
		    }
	    }
	    Quimicos3 = 1;
        SetTimerEx("LoadBarrelMeta",TIEMPO_BARRIL, false, "i", 3);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,1526.0902,-1017.4032,23.5809))
	{
		if(Encargo[1][Tiene9mm] == 0) return SendClientMessage(playerid, -1, "Necesitas una 9mm silenciada para continuar.");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Necesitas un vehículo para escapar");
		if(TieneEncargo[playerid] == 1 && Encargo[1][IdColega] == playerid)
		{
			TextDrawSetString(MisionColega[1], "~g~Lleva~w~ a tu colega al punto marcado.");
			TextDrawSetString(MisionCriminal[1], "Espera en el ~g~vehiculo~w~ de tu colega.");
			SendClientMessage(Encargo[1][IdCriminal],-1,"Espera en el vehiculo de tu colega para que te acerque.");
			SendClientMessage(Encargo[1][IdColega],-1,"Lleva a tu colega al punto marcado.");
			Encargo[1][SegundosMision] = 30;
			SetPlayerCheckpoint(playerid,1466.6655,-1031.2390,23.2810, 3.0);
			Encargo[1][Actor1] = CreateActor(148,1469.3304,-1013.2700,26.8438,127.7706);
			Encargo[1][Objetivo] = CreateActor(186,1465.1709,-1013.5018,26.8438,175.3351);
			SetActorHealth(Encargo[1][Actor1], 100.0);
			SetActorHealth(Encargo[1][Objetivo], 100.0);
			SetActorInvulnerable(Encargo[1][Actor1], false);
			SetActorInvulnerable(Encargo[1][Objetivo], false);
		}
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,1466.6655,-1031.2390,23.2810))
	{
		if(Encargo[1][Tiene9mm] == 0) return SendClientMessage(playerid, -1, "Necesitas una 9mm silenciada para continuar.");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Necesitas un vehículo para escapar");
		if(TieneEncargo[playerid] == 1 && Encargo[1][IdColega] == playerid)
		{
			TextDrawSetString(MisionColega[1], "~g~Espera~w~ mientras tu colega realiza el encargo.");
			TextDrawSetString(MisionCriminal[1], "~r~Asesina ~w~al objetivo.");
			SendClientMessage(Encargo[1][IdCriminal],-1,"Asesina al objetivo.");
			SendClientMessage(Encargo[1][IdColega],-1,"Espera mientras tu colega realiza el encargo.");
			Encargo[1][SegundosMision] = 60;
			DisablePlayerCheckpoint(playerid);
		}
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,1607.3558,-1703.0073,13.2540))
	{
		if(Encargo[2][Tiene9mm] == 0) return SendClientMessage(playerid, -1, "Necesitas una 9mm silenciada para continuar.");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Necesitas un vehículo para escapar");
		if(TieneEncargo[playerid] == 2 && Encargo[2][IdColega] == playerid)
		{
			TextDrawSetString(MisionColega[2], "~g~Lleva~w~ a tu colega al punto marcado.");
			TextDrawSetString(MisionCriminal[2], "Espera en el ~g~vehiculo~w~ de tu colega.");
			SendClientMessage(Encargo[2][IdCriminal],-1,"Espera en el vehiculo de tu colega para que te acerque.");
			SendClientMessage(Encargo[2][IdColega],-1,"Lleva a tu colega al punto marcado.");
			Encargo[2][SegundosMision] = 30;
			SetPlayerCheckpoint(playerid,1530.5500,-1673.8456,13.0874, 3.0);
			Encargo[2][Actor1] = CreateActor(161,1542.3446,-1666.4531,13.5543,195.9680);
			Encargo[2][Objetivo] = CreateActor(265,1544.9623,-1673.3115,13.5594,92.1910);
			SetActorHealth(Encargo[2][Actor1], 100.0);
			SetActorHealth(Encargo[2][Objetivo], 100.0);
			SetActorInvulnerable(Encargo[2][Actor1], false);
			SetActorInvulnerable(Encargo[2][Objetivo], false);
		}
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,1530.5500,-1673.8456,13.0874))
	{
		if(Encargo[2][Tiene9mm] == 0) return SendClientMessage(playerid, -1, "Necesitas una 9mm silenciada para continuar.");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Necesitas un vehículo para escapar");
		if(TieneEncargo[playerid] == 2 && Encargo[2][IdColega] == playerid)
		{
			TextDrawSetString(MisionColega[2], "~g~Espera~w~ mientras tu colega realiza el encargo.");
			TextDrawSetString(MisionCriminal[2], "~r~Asesina ~w~al objetivo.");
			SendClientMessage(Encargo[2][IdCriminal],-1,"Asesina al objetivo.");
			SendClientMessage(Encargo[2][IdColega],-1,"Espera mientras tu colega realiza el encargo.");
			Encargo[2][SegundosMision] = 60;
			DisablePlayerCheckpoint(playerid);
		}
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,1374.1508,2695.1580,10.5291))
	{
		if(Encargo[3][Tiene9mm] == 0) return SendClientMessage(playerid, -1, "Necesitas una 9mm silenciada para continuar.");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Necesitas un vehículo para escapar");
		if(TieneEncargo[playerid] == 3 && Encargo[3][IdColega] == playerid)
		{
			TextDrawSetString(MisionColega[3], "~g~Lleva~w~ a tu colega al punto marcado.");
			TextDrawSetString(MisionCriminal[3], "Espera en el ~g~vehiculo~w~ de tu colega.");
			SendClientMessage(Encargo[3][IdCriminal],-1,"Espera en el vehiculo de tu colega para que te acerque.");
			SendClientMessage(Encargo[3][IdColega],-1,"Lleva a tu colega al punto marcado.");
			Encargo[3][SegundosMision] = 30;
			SetPlayerCheckpoint(playerid,1433.7010,2671.2415,10.6719, 3.0);
			Encargo[3][Actor1] = CreateActor(31,1429.2253,2656.9607,11.3926,180.7949);
			Encargo[3][Actor2] = CreateActor(39,1434.0170,2657.3088,11.3926,112.5413);
			Encargo[3][Objetivo] = CreateActor(7,1429.5349,2655.2700,11.3926,306.6725);
			SetActorHealth(Encargo[3][Actor1], 100.0);
			SetActorHealth(Encargo[3][Actor2], 100.0);
			SetActorHealth(Encargo[3][Objetivo], 100.0);
			SetActorInvulnerable(Encargo[3][Actor1], false);
			SetActorInvulnerable(Encargo[3][Objetivo], false);
		}
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,1433.7010,2671.2415,10.6719))
	{
		if(Encargo[3][Tiene9mm] == 0) return SendClientMessage(playerid, -1, "Necesitas una 9mm silenciada para continuar.");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Necesitas un vehículo para escapar");
		if(TieneEncargo[playerid] == 3 && Encargo[3][IdColega] == playerid)
		{
			TextDrawSetString(MisionColega[3], "~g~Espera~w~ mientras tu colega realiza el encargo.");
			TextDrawSetString(MisionCriminal[3], "~r~Asesina ~w~al objetivo.");
			SendClientMessage(Encargo[3][IdCriminal],-1,"Asesina al objetivo.");
			SendClientMessage(Encargo[3][IdColega],-1,"Espera mientras tu colega realiza el encargo.");
			Encargo[3][SegundosMision] = 60;
			DisablePlayerCheckpoint(playerid);
		}
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,1218.0623,-874.5742,42.6080))
	{
		if(Encargo[4][Tiene9mm] == 0) return SendClientMessage(playerid, -1, "Necesitas una 9mm silenciada para continuar.");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Necesitas un vehículo para escapar");
		if(TieneEncargo[playerid] == 4 && Encargo[4][IdColega] == playerid)
		{
			TextDrawSetString(MisionColega[4], "~g~Lleva~w~ a tu colega al punto marcado.");
			TextDrawSetString(MisionCriminal[4], "Espera en el ~g~vehiculo~w~ de tu colega.");
			SendClientMessage(Encargo[4][IdCriminal],-1,"Espera en el vehiculo de tu colega para que te acerque.");
			SendClientMessage(Encargo[4][IdColega],-1,"Lleva a tu colega al punto marcado.");
			Encargo[4][SegundosMision] = 30;
			SetPlayerCheckpoint(playerid,1175.5085,-905.2410,43.0075, 3.0);
			Encargo[4][Actor1] = CreateActor(11,1185.1980,-909.3603,43.2700,194.8558);
			ApplyActorAnimation(Encargo[4][Actor1], "COP_AMBIENT", "Coplook_loop", 4.000000, 0, 0, 0, 1, 0);
			Encargo[4][Actor2] = CreateActor(250,1183.5961,-912.2095,43.2882,287.0236);
			ApplyActorAnimation(Encargo[4][Actor2], "PED", "IDLE_chat", 4.000000, 0, 0, 0, 1, 0);
			Encargo[4][Objetivo] = CreateActor(205,1186.4438,-911.4187,43.2618,100.4657);
			ApplyActorAnimation(Encargo[4][Objetivo], "PED", "IDLE_chat", 4.000000, 0, 0, 0, 1, 0);
			SetActorHealth(Encargo[4][Actor1], 100.0);
			SetActorHealth(Encargo[4][Actor2], 100.0);
			SetActorHealth(Encargo[4][Objetivo], 100.0);
			SetActorInvulnerable(Encargo[4][Actor1], false);
			SetActorInvulnerable(Encargo[4][Objetivo], false);
		}
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,1175.5085,-905.2410,43.0075))
	{
		if(Encargo[4][Tiene9mm] == 0) return SendClientMessage(playerid, -1, "Necesitas una 9mm silenciada para continuar.");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Necesitas un vehículo para escapar");
		if(TieneEncargo[playerid] == 4 && Encargo[4][IdColega] == playerid)
		{
			TextDrawSetString(MisionColega[4], "~g~Espera~w~ mientras tu colega realiza el encargo.");
			TextDrawSetString(MisionCriminal[4], "~r~Asesina ~w~al objetivo.");
			SendClientMessage(Encargo[4][IdCriminal],-1,"Asesina al objetivo.");
			SendClientMessage(Encargo[4][IdColega],-1,"Espera mientras tu colega realiza el encargo.");
			Encargo[4][SegundosMision] = 60;
			DisablePlayerCheckpoint(playerid);
		}
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,2337.8752,-1366.0424,24.0111))
	{
		if(Encargo[5][Tiene9mm] == 0) return SendClientMessage(playerid, -1, "Necesitas una 9mm silenciada para continuar.");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Necesitas un vehículo para escapar");
		if(TieneEncargo[playerid] == 5 && Encargo[5][IdColega] == playerid)
		{
			TextDrawSetString(MisionColega[5], "~g~Lleva~w~ a tu colega al punto marcado.");
			TextDrawSetString(MisionCriminal[5], "Espera en el ~g~vehiculo~w~ de tu colega.");
			SendClientMessage(Encargo[5][IdCriminal],-1,"Espera en el vehiculo de tu colega para que te acerque.");
			SendClientMessage(Encargo[5][IdColega],-1,"Lleva a tu colega al punto marcado.");
			Encargo[5][SegundosMision] = 30;
			SetPlayerCheckpoint(playerid,2368.6667,-1361.7528,23.8382, 3.0);
			Encargo[5][Actor1] = CreateActor(32,2353.2302,-1364.0353,24.3984,188.6589);
			Encargo[5][Actor2] = CreateActor(31,2353.2488,-1366.9259,24.3984,359.6988);
			Encargo[5][Objetivo] = CreateActor(29,2347.9490,-1351.1028,24.0177,177.7770);
			SetActorHealth(Encargo[5][Actor1], 100.0);
			SetActorHealth(Encargo[5][Actor2], 100.0);
			SetActorHealth(Encargo[5][Objetivo], 100.0);
			SetActorInvulnerable(Encargo[5][Actor1], false);
			SetActorInvulnerable(Encargo[5][Objetivo], false);
		}
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,2368.6667,-1361.7528,23.8382))
	{
		if(Encargo[5][Tiene9mm] == 0) return SendClientMessage(playerid, -1, "Necesitas una 9mm silenciada para continuar.");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Necesitas un vehículo para escapar");
		if(TieneEncargo[playerid] == 5 && Encargo[5][IdColega] == playerid)
		{
			TextDrawSetString(MisionColega[5], "~g~Espera~w~ mientras tu colega realiza el encargo.");
			TextDrawSetString(MisionCriminal[5], "~r~Asesina ~w~al objetivo.");
			SendClientMessage(Encargo[5][IdCriminal],-1,"Asesina al objetivo.");
			SendClientMessage(Encargo[5][IdColega],-1,"Espera mientras tu colega realiza el encargo.");
			Encargo[5][SegundosMision] = 60;
			DisablePlayerCheckpoint(playerid);
		}
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,-2157.8093,654.7702,51.9927))
	{
		if(TieneEncargo[playerid] > 0 && Encargo[TieneEncargo[playerid]][IdColega] == playerid)
		{
			DisablePlayerCheckpoint(playerid);
			FinMisionCriminal(TieneEncargo[playerid]);
		}
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 10.0,-173.0988,-1619.5331,3.4375) && BASU(autoid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	 	for(new i=0;i<MAX_PLAYERS;i++)
	 	{
	 	    if(PlayerInfo[i][pTrabajo] == T_Basurero && BASU(GetPlayerVehicleID(i)) && GetPlayerVehicleSeat(i) == 1)
	 	    {
	 	        if(GetPlayerSkin(i) == 16)
	 	        {
	                Companero[i] = playerid;
	                Companero[playerid] = i;
	                SendClientMessage(playerid,-1,"Has comenzado tu recorrido, ve hacia el punto rojo para recojer la basura de los diferentes lugares.");
	                SendClientMessage(i,-1,"Has comenzado tu recorrido, espera hasta que el conductor llegue a un punto de recoleccion para recolectar la basura.");
	                PBasura[playerid] = 1;
	       			PBasura[i] = 1;
					SetTimerEx("PrimerP",3000,false,"d",playerid);
					DisablePlayerCheckpoint(playerid);
					return 1;
				}
				else
				{
					SendClientMessage(i,-1,"Debes colocarte la ropa de basurero para poder trabajar");
					SendClientMessage(playerid,-1,"Tu compañero no tiene la ropa de trabajo puesta");
					return 1;
				}
	 	    }
	 	}
	 	SendClientMessage(playerid,-1,"Necesitas un compañero para comenzar el recorrido");
	 	return 1;
   	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,-346.30, -756.40, 29.59))
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
            LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
        	recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
        	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,-427.09, -433.97, 16.63))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
        	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,-916.01, -446.17, 28.50))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
        	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,-1904.68, -567.53, 24.26))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
            RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,-2245.15, -123.60, 34.83))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,-2246.00, 84.55, 34.74))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,-2167.08, 201.88, 34.72))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,-2033.41, 313.70, 34.67))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,-2013.50, 137.14, 27.09))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,-1812.96, -123.07, 5.08))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,-1824.87, -560.26, 15.88))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,-120.47, -1160.25, 2.04))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}//-------------------------------------------------------//
    if(IsPlayerInRangeOfPoint(playerid, 5.0,119.0534,-1600.7428,11.0364) || IsPlayerInRangeOfPoint(playerid, 2.0,113.26455, -1603.06458, 10.01185))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,184.4504,-1737.3945,4.7637) || IsPlayerInRangeOfPoint(playerid, 2.0,188.57368, -1741.20276, 3.91990))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,342.3801,-1768.1283,5.6387) || IsPlayerInRangeOfPoint(playerid, 2.0, 339.93246, -1775.18286, 4.61736))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,643.4162,-1679.9646,15.4936) || IsPlayerInRangeOfPoint(playerid, 2.0, 647.09186, -1679.55090, 14.29020))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,896.4399,-1575.7798,13.9204) || IsPlayerInRangeOfPoint(playerid, 2.0,898.87762, -1579.15076, 13.15463))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,920.3666,-1339.1666,13.9063) || IsPlayerInRangeOfPoint(playerid, 2.0,925.01941, -1335.39722, 13.05267))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,785.8536,-1317.6593,13.9302) || IsPlayerInRangeOfPoint(playerid, 2.0,781.98969, -1314.35901, 13.21057))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,637.4422,-1247.6637,17.7399) || IsPlayerInRangeOfPoint(playerid, 2.0,641.44067, -1243.10571, 17.05386))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,454.3181,-1306.5016,15.6536) || IsPlayerInRangeOfPoint(playerid, 2.0,448.74304, -1305.13831, 14.83350))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,226.2434,-1443.0890,13.6835) || IsPlayerInRangeOfPoint(playerid, 2.0,209.86882, -1434.11890, 12.62387))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,-56.2857,-1594.8873,3.3326) || IsPlayerInRangeOfPoint(playerid, 2.0,-56.0625, -1575.6563, 1.5000))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,1096.53, -1133.90, 23.24))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,974.88, -1134.05, 23.23))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,801.99, -1065.57, 24.11))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
    if(IsPlayerInRangeOfPoint(playerid, 5.0,514.62, -1253.72, 15.82))
 	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
        	return 1;
   		}
   	}
   	if(IsPlayerInRangeOfPoint(playerid, 5.0,107.62, -1526.27, 6.29))
 	{
	 	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)))
	    {
		    SetTimerEx("PuntoB",1000,false,"d",Companero[playerid]);
		    DisablePlayerCheckpoint(playerid);
		    return 1;
        }
        else if(!IsPlayerInAnyVehicle(playerid) && RecorridoBasu[playerid] != 0)
        {
        	LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 12000);
			recogiendo[playerid]++;
        	DisablePlayerCheckpoint(playerid);
         	RTiempo[playerid] = SetTimerEx("Recolectar",12000,false,"d",playerid);
  			return 1;
   		}
   	}
   	if(IsPlayerInRangeOfPoint(playerid, 5.0,-142.9076,-1583.7258,8.4242))
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && BASU(GetPlayerVehicleID(playerid)) && RecorridoBasu[playerid] != 0)
	    {
	    Respawnear(GetPlayerVehicleID(playerid));
	    DisablePlayerCheckpoint(playerid);
		switch(RecorridoBasu[playerid])
		{
		    case 1:
		    {
		        switch(PlayerInfo[playerid][pNivelBasurero])
		        {
		            case 1:
		            {
		                if(PlayerInfo[playerid][pExpBasurero] < 49)
		                {
		                    PlayerInfo[playerid][pExpBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1700{FFFFFF}.");
		                    SendClientMessage(playerid,0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(playerid,1700);
		                }
		                else if(PlayerInfo[playerid][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[playerid][pNivelBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1700{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(playerid,-1,string);
		                    DarDinero(playerid,1700);
		                    PlayerInfo[playerid][pExpBasurero] = 0;
		                }
 					}
 					case 2:
		            {
		                if(PlayerInfo[playerid][pExpBasurero] < 49)
		                {
		                    PlayerInfo[playerid][pExpBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1900{FFFFFF}.");
		                    SendClientMessage(playerid,0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(playerid,1900);
		                }
		                else if(PlayerInfo[playerid][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[playerid][pNivelBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1900{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(playerid,-1,string);
		                    DarDinero(playerid,1900);
		                    PlayerInfo[playerid][pExpBasurero] = 0;
		                }
		            }
                    case 3:
		            {
		                if(PlayerInfo[playerid][pExpBasurero] < 49)
		                {
		                    PlayerInfo[playerid][pExpBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2100{FFFFFF}.");
		                    SendClientMessage(playerid,0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(playerid,2100);
		                }
		                else if(PlayerInfo[playerid][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[playerid][pNivelBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2100{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(playerid,-1,string);
		                    DarDinero(playerid,2100);
		                    PlayerInfo[playerid][pExpBasurero] = 0;
		                }
		          }
                  case 4:
		          {
		                if(PlayerInfo[playerid][pExpBasurero] < 49)
		                {
		                    PlayerInfo[playerid][pExpBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2300{FFFFFF}.");
		                    SendClientMessage(playerid,0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(playerid,2300);
		                }
		                else if(PlayerInfo[playerid][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[playerid][pNivelBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2300{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(playerid,-1,string);
		                    DarDinero(playerid,2300);
		                    PlayerInfo[playerid][pExpBasurero] = 0;
		                }
		            }
                    case 5:
		            {
		                if(PlayerInfo[playerid][pExpBasurero] < 49)
		                {
		                    PlayerInfo[playerid][pExpBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2500{FFFFFF}.");
		                    SendClientMessage(playerid,0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(playerid,2500);
		                }
		                else if(PlayerInfo[playerid][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[playerid][pNivelBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2500{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(playerid,-1,string);
		                    DarDinero(playerid,2500);
		                    PlayerInfo[playerid][pExpBasurero] = 0;
		                }
		        	}
                    case 6:
		            {
		                if(PlayerInfo[playerid][pExpBasurero] < 49)
		                {
		                    PlayerInfo[playerid][pExpBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2900{FFFFFF}.");
		                    SendClientMessage(playerid,0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(playerid,2900);
		                }
		                else if(PlayerInfo[playerid][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[playerid][pNivelBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2900{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(playerid,-1,string);
		                    DarDinero(playerid,2900);
		                    PlayerInfo[playerid][pExpBasurero] = 0;
		                }
		    		}
          		}
			}
   			case 2:
		    {
		        switch(PlayerInfo[playerid][pNivelBasurero])
		        {
		            case 1:
		            {
		                if(PlayerInfo[playerid][pExpBasurero] < 49)
		                {
		                    PlayerInfo[playerid][pExpBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1300{FFFFFF}.");
		                    SendClientMessage(playerid,0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(playerid,1300);
		                }
		                else if(PlayerInfo[playerid][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[playerid][pNivelBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1300{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(playerid,-1,string);
		                    DarDinero(playerid,1300);
		                    PlayerInfo[playerid][pExpBasurero] = 0;
		                }
 					}
 					case 2:
		            {
		                if(PlayerInfo[playerid][pExpBasurero] < 49)
		                {
		                    PlayerInfo[playerid][pExpBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1500{FFFFFF}.");
		                    SendClientMessage(playerid,0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(playerid,1500);
		                }
		                else if(PlayerInfo[playerid][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[playerid][pNivelBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1500{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(playerid,-1,string);
		                    DarDinero(playerid,1500);
		                    PlayerInfo[playerid][pExpBasurero] = 0;
		                }
		            }
                    case 3:
		            {
		                if(PlayerInfo[playerid][pExpBasurero] < 49)
		                {
		                    PlayerInfo[playerid][pExpBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1700{FFFFFF}.");
		                    SendClientMessage(playerid,0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(playerid,1700);
		                }
		                else if(PlayerInfo[playerid][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[playerid][pNivelBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1700{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(playerid,-1,string);
		                    DarDinero(playerid,1700);
		                    PlayerInfo[playerid][pExpBasurero] = 0;
		                }
		          }
                  case 4:
		          {
		                if(PlayerInfo[playerid][pExpBasurero] < 49)
		                {
		                    PlayerInfo[playerid][pExpBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1900{FFFFFF}.");
		                    SendClientMessage(playerid,0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(playerid,1900);
		                }
		                else if(PlayerInfo[playerid][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[playerid][pNivelBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1900{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(playerid,-1,string);
		                    DarDinero(playerid,1900);
		                    PlayerInfo[playerid][pExpBasurero] = 0;
		                }
		            }
                    case 5:
		            {
		                if(PlayerInfo[playerid][pExpBasurero] < 49)
		                {
		                    PlayerInfo[playerid][pExpBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2100{FFFFFF}.");
		                    SendClientMessage(playerid,0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(playerid,2100);
		                }
		                else if(PlayerInfo[playerid][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[playerid][pNivelBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2100{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(playerid,-1,string);
		                    DarDinero(playerid,2100);
		                    PlayerInfo[playerid][pExpBasurero] = 0;
		                }
		        	}
                    case 6:
		            {
		                if(PlayerInfo[playerid][pExpBasurero] < 49)
		                {
		                    PlayerInfo[playerid][pExpBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2350{FFFFFF}.");
		                    SendClientMessage(playerid,0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(playerid,2350);
		                }
		                else if(PlayerInfo[playerid][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[playerid][pNivelBasurero]++;
		                    SendClientMessage(playerid,-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2350{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(playerid,-1,string);
		                    DarDinero(playerid,2350);
		                    PlayerInfo[playerid][pExpBasurero] = 0;
		                }
		    		}
          		}
			}
		}
		switch(RecorridoBasu[Companero[playerid]])
		{
		    case 1:
		    {
		        switch(PlayerInfo[Companero[playerid]][pNivelBasurero])
		        {
		            case 1:
		            {
		                if(PlayerInfo[Companero[playerid]][pExpBasurero] < 49)
		                {
		                    PlayerInfo[Companero[playerid]][pExpBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1700{FFFFFF}.");
		                    SendClientMessage(Companero[playerid],0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(Companero[playerid],1700);
		                }
		                else if(PlayerInfo[Companero[playerid]][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[Companero[playerid]][pNivelBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1700{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(Companero[playerid],-1,string);
		                    DarDinero(Companero[playerid],1700);
		                    PlayerInfo[Companero[playerid]][pExpBasurero] = 0;
		                }
 					}
 					case 2:
		            {
		                if(PlayerInfo[Companero[playerid]][pExpBasurero] < 49)
		                {
		                    PlayerInfo[Companero[playerid]][pExpBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1900{FFFFFF}.");
		                    SendClientMessage(Companero[playerid],0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(Companero[playerid],1900);
		                }
		                else if(PlayerInfo[Companero[playerid]][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[Companero[playerid]][pNivelBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1900{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(Companero[playerid],-1,string);
		                    DarDinero(Companero[playerid],1900);
		                    PlayerInfo[Companero[playerid]][pExpBasurero] = 0;
		                }
		            }
                    case 3:
		            {
		                if(PlayerInfo[Companero[playerid]][pExpBasurero] < 49)
		                {
		                    PlayerInfo[Companero[playerid]][pExpBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2100{FFFFFF}.");
		                    SendClientMessage(Companero[playerid],0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(Companero[playerid],2100);
		                }
		                else if(PlayerInfo[Companero[playerid]][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[Companero[playerid]][pNivelBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2100{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(Companero[playerid],-1,string);
		                    DarDinero(Companero[playerid],2100);
		                    PlayerInfo[Companero[playerid]][pExpBasurero] = 0;
		                }
		          }
                  case 4:
		          {
		                if(PlayerInfo[Companero[playerid]][pExpBasurero] < 49)
		                {
		                    PlayerInfo[Companero[playerid]][pExpBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2300{FFFFFF}.");
		                    SendClientMessage(Companero[playerid],0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(Companero[playerid],2300);
		                }
		                else if(PlayerInfo[Companero[playerid]][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[Companero[playerid]][pNivelBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2300{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(Companero[playerid],-1,string);
		                    DarDinero(Companero[playerid],2300);
		                    PlayerInfo[Companero[playerid]][pExpBasurero] = 0;
		                }
		            }
                    case 5:
		            {
		                if(PlayerInfo[Companero[playerid]][pExpBasurero] < 49)
		                {
		                    PlayerInfo[Companero[playerid]][pExpBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2500{FFFFFF}.");
		                    SendClientMessage(Companero[playerid],0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(Companero[playerid],2500);
		                }
		                else if(PlayerInfo[Companero[playerid]][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[Companero[playerid]][pNivelBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2500{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(Companero[playerid],-1,string);
		                    DarDinero(Companero[playerid],2500);
		                    PlayerInfo[Companero[playerid]][pExpBasurero] = 0;
		                }
		        	}
                    case 6:
		            {
		                if(PlayerInfo[Companero[playerid]][pExpBasurero] < 49)
		                {
		                    PlayerInfo[Companero[playerid]][pExpBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2900{FFFFFF}.");
		                    SendClientMessage(Companero[playerid],0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(Companero[playerid],2900);
		                }
		                else if(PlayerInfo[Companero[playerid]][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[Companero[playerid]][pNivelBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2900{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(Companero[playerid],-1,string);
		                    DarDinero(Companero[playerid],2900);
		                    PlayerInfo[Companero[playerid]][pExpBasurero] = 0;
		                }
		    		}
          		}
			}
   			case 2:
		    {
		        switch(PlayerInfo[Companero[playerid]][pNivelBasurero])
		        {
		            case 1:
		            {
		                if(PlayerInfo[Companero[playerid]][pExpBasurero] < 49)
		                {
		                    PlayerInfo[Companero[playerid]][pExpBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1300{FFFFFF}.");
		                    SendClientMessage(Companero[playerid],0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(Companero[playerid],1300);
		                }
		                else if(PlayerInfo[Companero[playerid]][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[Companero[playerid]][pNivelBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1300{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(Companero[playerid],-1,string);
		                    DarDinero(Companero[playerid],1300);
		                    PlayerInfo[Companero[playerid]][pExpBasurero] = 0;
		                }
 					}
 					case 2:
		            {
		                if(PlayerInfo[Companero[playerid]][pExpBasurero] < 49)
		                {
		                    PlayerInfo[Companero[playerid]][pExpBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1500{FFFFFF}.");
		                    SendClientMessage(Companero[playerid],0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(Companero[playerid],1500);
		                }
		                else if(PlayerInfo[Companero[playerid]][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[Companero[playerid]][pNivelBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1500{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(Companero[playerid],-1,string);
		                    DarDinero(Companero[playerid],1500);
		                    PlayerInfo[Companero[playerid]][pExpBasurero] = 0;
		                }
		            }
                    case 3:
		            {
		                if(PlayerInfo[Companero[playerid]][pExpBasurero] < 49)
		                {
		                    PlayerInfo[Companero[playerid]][pExpBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1700{FFFFFF}.");
		                    SendClientMessage(Companero[playerid],0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(Companero[playerid],1700);
		                }
		                else if(PlayerInfo[Companero[playerid]][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[Companero[playerid]][pNivelBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1700{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(Companero[playerid],-1,string);
		                    DarDinero(Companero[playerid],1700);
		                    PlayerInfo[Companero[playerid]][pExpBasurero] = 0;
		                }
		          }
                  case 4:
		          {
		                if(PlayerInfo[Companero[playerid]][pExpBasurero] < 49)
		                {
		                    PlayerInfo[Companero[playerid]][pExpBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1900{FFFFFF}.");
		                    SendClientMessage(Companero[playerid],0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(Companero[playerid],1900);
		                }
		                else if(PlayerInfo[Companero[playerid]][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[Companero[playerid]][pNivelBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$1900{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(Companero[playerid],-1,string);
		                    DarDinero(Companero[playerid],1900);
		                    PlayerInfo[Companero[playerid]][pExpBasurero] = 0;
		                }
		            }
                    case 5:
		            {
		                if(PlayerInfo[Companero[playerid]][pExpBasurero] < 49)
		                {
		                    PlayerInfo[Companero[playerid]][pExpBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2100{FFFFFF}.");
		                    SendClientMessage(Companero[playerid],0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(Companero[playerid],2100);
		                }
		                else if(PlayerInfo[Companero[playerid]][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[Companero[playerid]][pNivelBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2100{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(Companero[playerid],-1,string);
		                    DarDinero(Companero[playerid],2100);
		                    PlayerInfo[Companero[playerid]][pExpBasurero] = 0;
		                }
		        	}
                    case 6:
		            {
		                if(PlayerInfo[Companero[playerid]][pExpBasurero] < 49)
		                {
		                    PlayerInfo[Companero[playerid]][pExpBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2350{FFFFFF}.");
		                    SendClientMessage(Companero[playerid],0x2d8cecFF,"Habilidad de recolector de basura aumentada +1 punto.");
		                    DarDinero(Companero[playerid],2350);
		                }
		                else if(PlayerInfo[Companero[playerid]][pExpBasurero] == 49)
		                {
		                    new string[126];
		                    PlayerInfo[Companero[playerid]][pNivelBasurero]++;
		                    SendClientMessage(Companero[playerid],-1,"{00CC00}¡Buen trabajo!{FFFFFF} Terminaste correctamente, tus ganancias son {00CC00}$2350{FFFFFF}.");
		                    format(string,126,"{00CC00}¡Felicitaciones!{FFFFFF} Aumentaste un nivel en el trabajo de basurero.");
		                    SendClientMessage(Companero[playerid],-1,string);
		                    DarDinero(Companero[playerid],2350);
		                    PlayerInfo[Companero[playerid]][pExpBasurero] = 0;
		                }
		    		}
          		}
			}
		}
        RecorridoBasu[playerid] = 0;
     	RecorridoBasu[Companero[playerid]] = 0;
     	PBasura[playerid] = 0;
		PBasura[Companero[playerid]] = 0;
	    Companero[Companero[playerid]] = INVALID_PLAYER_ID;
	    Companero[playerid] = INVALID_PLAYER_ID;}
  	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0, 2160.7837,-2280.9233,13.3838))
	{
		new string[256];
		format(string, 256, "Armaste {DBED16}%d {FFFFFF}piezas de armas, las cuales están listas parar crear armas.", PlayerInfo[playerid][piezas]/10);
		SendClientMessage(playerid, -1,string);
		PlayerInfo[playerid][pMateriales] += PlayerInfo[playerid][piezas]/10;
		PlayerInfo[playerid][piezas] = 0;
		Mats1[playerid] = 0;
		Mats2[playerid] = 0;
		Mats3[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0, 1191.43,-1326.39,13.40) || IsPlayerInRangeOfPoint(playerid, 5.0, 2030.36,-1419.79,16.99)|| IsPlayerInRangeOfPoint(playerid, 5.0, 1605.58,1830.17,10.82)|| IsPlayerInRangeOfPoint(playerid, 5.0, -2662.87,631.44,14.45))
	{
		for(new i=0;i<MAX_PLAYERS; i++)
		{
			if(!AMBU(autoid)) return 1;
			if(IsPlayerInVehicle(i,autoid) && LlamadaMedicos[i] == 1)
			for (new u = 0; u < 13; u++)
			{
			   	new ganancias, string[256];
   			 	switch(PlayerInfo[playerid][pNivelMedico])
				{
					case 1:
					{
      					new intento = random(3);
						switch(intento)
						{
							case 0: {	ganancias=800;	}
							case 1: {	ganancias=800;	}
							case 2: {	ganancias=800;	}
						}
					}
					case 2..100:
					{
      					new intento = random(3);
						switch(intento)
						{
							case 0: {	ganancias=800;	}
							case 1: {	ganancias=800;	}
							case 2: {	ganancias=800;	}
						}
					}
				}
				TextDrawHideForPlayer(i, Sangre);
				format(string, sizeof(string), "Ganaste {00CC00}$%d{FFFFFF} por salvar una vida.", ganancias);
				SendClientMessage(playerid, -1, string);
				ExpMedico(playerid);
				format(string, sizeof(string), "Se te desconto {FF3300}$%d{FFFFFF} por el servicio médico.", ganancias);
				SendClientMessage(i, -1, string);
			    new string99[128];
				format(string99,128,"%s (ID: %d | Nivel: %d) recibe $%d por salvarle la vida a %s (ID:%d - Nivel:%d - 2hs)",PlayerName(playerid),playerid,PlayerInfo[playerid][@Nivel], ganancias,PlayerName(i),i,PlayerInfo[i][@Nivel]);
		     	MensajeAdmin(0xFFDBED15,string99, ADMIN_LEVEL_BANEOS);
				QuitarDinero(i, ganancias);
				DarDinero(playerid, ganancias);
				RemovePlayerFromVehicle(i);
				PacienteAmbu[i] = 0;
				LlamadaMedicos[i] = 0;
				TogglePlayerControllable(i, 1);
				SetPVarInt(i, "IsFrozen", 1);
				PlayerInfo[i][Agonizando] = 0;
				DisablePlayerCheckpoint(playerid);
				return 1;
			}
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 7.0, 2880.5110,1751.4082,10.8203) || IsPlayerInRangeOfPoint(playerid, 7.0, -2473.1599,2303.7029,4.9844) || IsPlayerInRangeOfPoint(playerid, 7.0, -2458.4258,2292.2588,4.9844) || IsPlayerInRangeOfPoint(playerid, 7.0, 305.6055,887.2976,20.4063) || IsPlayerInRangeOfPoint(playerid, 7.0, 208.3321,-28.7516,1.5781) || IsPlayerInRangeOfPoint(playerid, 7.0, 1023.9153,2110.9341,10.8203) || IsPlayerInRangeOfPoint(playerid, 7.0, -1741.5210,1425.7820,7.1875) || IsPlayerInRangeOfPoint(playerid, 7.0, -2003.7317,-2413.3181,30.6250) || IsPlayerInRangeOfPoint(playerid, 7.0, 684.1342,896.0093,-39.7265) || IsPlayerInRangeOfPoint(playerid, 7.0, 586.4625,856.0408,-42.9917) || IsPlayerInRangeOfPoint(playerid, 7.0, 1335.5570,286.8253,19.5615)) //Rocas LV
	{
		if(!IsPlayerInAnyVehicle(playerid)) return 1;
		if(tviaje[playerid] == 2) return 1;
		if(DFT(autoid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return SetTimerEx("RutraTransportista",1500,false,"d",playerid);
	}
	if(IsPlayerInRangeOfPoint(playerid, 7.0, 1607.8633,1718.3813,10.8203) || IsPlayerInRangeOfPoint(playerid, 7.0, 2609.3381,-2202.1799,13.5469) || IsPlayerInRangeOfPoint(playerid, 7.0, 1905.8856,958.5278,10.8203) || IsPlayerInRangeOfPoint(playerid, 7.0, 2316.5032,1733.3368,10.8203) || IsPlayerInRangeOfPoint(playerid, 7.0, 789.2708,2028.4414,6.7109) || IsPlayerInRangeOfPoint(playerid, 7.0, 2415.1252,1893.7064,6.0156) || IsPlayerInRangeOfPoint(playerid, 7.0, 2811.3918,1654.1230,10.8203) || IsPlayerInRangeOfPoint(playerid, 7.0, -1733.7360,184.4388,3.5547) || IsPlayerInRangeOfPoint(playerid, 7.0, -267.1364,-2151.0940,28.8347) || IsPlayerInRangeOfPoint(playerid, 7.0, -2097.1208,208.2063,35.3177) || IsPlayerInRangeOfPoint(playerid, 7.0, 1251.0417,-1258.1145,13.1514) || IsPlayerInRangeOfPoint(playerid, 7.0, 1048.7633,2111.3118,10.8203))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			if(DFT(GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				if(tviaje[playerid] == 2)
				{
				    new Paga,vip_price;
					switch(PlayerInfo[playerid][pNivelTransportista])
					{
						case 1: { Paga = 2150; vip_price = 50; }
						case 2: { Paga = 2300; vip_price = 100; }
						case 3: { Paga = 2450; vip_price = 150; }
						case 4: { Paga = 2600; vip_price = 200; }
						case 5: { Paga = 2750; vip_price = 250; }
						case 6: { Paga = 2900; vip_price = 300; }
					}
					new string[128];
					if(PlayerInfo[playerid][pVip] != 2) vip_price = 0;
					new cantidad_final = Paga + vip_price;
					if(PlayerInfo[playerid][pVip] == 2) format(string,sizeof(string),"{00CC00}¡Buen trabajo!{FFFFFF} Tus ganancias son {00CC00}$%d{FFFFFF} + {00CC00}$%d {FFFFFF}por ser ciudadano VIP.",Paga,vip_price);
					else format(string,sizeof(string),"{00CC00}¡Buen trabajo!{FFFFFF} Tus ganancias son {00CC00}$%d{FFFFFF}.",cantidad_final);
					SendClientMessage(playerid,-1,string);
					DarDinero(playerid, cantidad_final);
					if(IsValidDynamicObject(Transportistas[playerid][Objeto1])) DestroyDynamicObject(Transportistas[playerid][Objeto1]);
					if(IsValidDynamicObject(Transportistas[playerid][Objeto2])) DestroyDynamicObject(Transportistas[playerid][Objeto2]);
					if(IsValidDynamicObject(Transportistas[playerid][Objeto3])) DestroyDynamicObject(Transportistas[playerid][Objeto3]);
					tviaje[playerid] = 0;
					Transportistas[playerid][Ruta] = 0;
					DisablePlayerCheckpoint(playerid);
					ExpTrans(playerid);
					return 1;
				}
			}
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 19.0, -1711.7150,62.1237,3.5495))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1, "Necesitas necesitas estar en un camión.");
		if(CAMION(autoid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
		    new color_1,color_2;
		    GetVehicleColor(autoid, color_1, color_2);
		    if(color_1 == 0 && color_2 == 0 && PlayerInfo[playerid][pVip] != 2) return Kick(playerid);
			new string[350];
			CargandoC[playerid] = 1;
			TogglePlayerControllable(playerid, 0);
			SetPVarInt(playerid, "IsFrozen", 0);
			DisablePlayerCheckpoint(playerid);
			switch(PlayerInfo[playerid][pNivelCamionero])
			{
				case 1:
				{
					format(string, 350, "{00CC00}Productos 24/7 {FFFFFF}(Ganancias {00CC00}$1250{FFFFFF}) \n{00CC00}Ropa {FFFFFF}(Ganancias {00CC00}$1250{FFFFFF})\n{FF3300}Drogas {FFFFFF}(Ganancias {00CC00}$1250{FFFFFF} + {00CC00}4{FFFFFF} medicamentos + {FF3300}2g{FFFFFF}. de Crack)\n{FF3300}Armas {FFFFFF}(Ganancias {00CC00}$1250{FFFFFF} + {FF3300}2 piezas de armas{FFFFFF})");
					ShowPlayerDialog(playerid, CAMIOND,DIALOG_STYLE_LIST, "¿Qué deseas transportar?", string, "Cargar","Salir");
					SendClientMessage(playerid, -1, "Seleccionas lo que deseas cargar.");
				}
				case 2:
				{
					format(string, 350, "{00CC00}Productos 24/7 {FFFFFF}(Ganancias {00CC00}$3500{FFFFFF}) \n{00CC00}Ropa {FFFFFF}(Ganancias {00CC00}$1500{FFFFFF})\n{FF3300}Drogas {FFFFFF}(Ganancias {00CC00}$1500{FFFFFF} + {00CC00}6{FFFFFF} medicamentos + {FF3300}3g{FFFFFF}. de Crack)\n{FF3300}Armas {FFFFFF}(Ganancias {00CC00}$1500{FFFFFF} + {FF3300}5 piezas de armas{FFFFFF})");
					ShowPlayerDialog(playerid, CAMIOND,DIALOG_STYLE_LIST, "¿Qué deseas transportar?", string, "Cargar","Salir");
					SendClientMessage(playerid, -1, "Seleccionas lo que deseas cargar.");
				}
				case 3:
				{
					format(string, 350, "{00CC00}Productos 24/7 {FFFFFF}(Ganancias {00CC00}$4500{FFFFFF}) \n{00CC00}Ropa {FFFFFF}(Ganancias {00CC00}$1750{FFFFFF})\n{FF3300}Drogas {FFFFFF}(Ganancias {00CC00}$1750{FFFFFF} + {00CC00}8{FFFFFF} medicamentos + {FF3300}4g{FFFFFF}. de Crack)\n{FF3300}Armas {FFFFFF}(Ganancias {00CC00}$1750{FFFFFF} + {FF3300}7 piezas de armas{FFFFFF})");
					ShowPlayerDialog(playerid, CAMIOND,DIALOG_STYLE_LIST, "¿Qué deseas transportar?", string, "Cargar","Salir");
					SendClientMessage(playerid, -1, "Seleccionas lo que deseas cargar.");
				}
				case 4:
				{
					format(string, 350, "{00CC00}Productos 24/7 {FFFFFF}(Ganancias {00CC00}$5500{FFFFFF}) \n{00CC00}Ropa {FFFFFF}(Ganancias {00CC00}$2000{FFFFFF})\n{FF3300}Drogas {FFFFFF}(Ganancias {00CC00}$2000{FFFFFF} + {00CC00}10{FFFFFF} medicamentos + {FF3300}5g{FFFFFF}. de Crack)\n{FF3300}Armas {FFFFFF}(Ganancias {00CC00}$2000{FFFFFF} + {FF3300}7 piezas de armas{FFFFFF})");
					ShowPlayerDialog(playerid, CAMIOND,DIALOG_STYLE_LIST, "¿Qué deseas transportar?", string, "Cargar","Salir");
					SendClientMessage(playerid, -1, "Seleccionas lo que deseas cargar.");
				}
				case 5:
				{
					format(string, 350, "{00CC00}Productos 24/7 {FFFFFF}(Ganancias {00CC00}$6500{FFFFFF}) \n{00CC00}Ropa {FFFFFF}(Ganancias {00CC00}$2250{FFFFFF})\n{FF3300}Drogas {FFFFFF}(Ganancias {00CC00}$2250{FFFFFF} + {00CC00}12{FFFFFF} medicamentos + {FF3300}6g{FFFFFF}. de Crack)\n{FF3300}Armas {FFFFFF}(Ganancias {00CC00}$2500{FFFFFF} + {FF3300}7 piezas de armas{FFFFFF})");
					ShowPlayerDialog(playerid, CAMIOND,DIALOG_STYLE_LIST, "¿Qué deseas transportar?", string, "Cargar","Salir");
					SendClientMessage(playerid, -1, "Seleccionas lo que deseas cargar.");
				}
				case 6..300:
				{
					format(string, 350, "{00CC00}Productos 24/7 {FFFFFF}(Ganancias {00CC00}$7500{FFFFFF}) \n{00CC00}Ropa {FFFFFF}(Ganancias {00CC00}$2500{FFFFFF})\n{FF3300}Drogas {FFFFFF}(Ganancias {00CC00}$2500{FFFFFF} + {00CC00}12{FFFFFF} medicamentos + {FF3300}6g{FFFFFF}. de Crack)\n{FF3300}Armas {FFFFFF}(Ganancias {00CC00}$2500{FFFFFF} + {FF3300}7 piezas de armas{FFFFFF})");
					ShowPlayerDialog(playerid, CAMIOND,DIALOG_STYLE_LIST, "¿Qué deseas transportar?", string, "Cargar","Salir");
					SendClientMessage(playerid, -1, "Seleccionas lo que deseas cargar.");
				}
			}
			return 1;
		}
		else return SendClientMessage(playerid, -1, "Necesitas necesitas estar en un camión.");
	}
	if(IsPlayerInRangeOfPoint(playerid, 7.0, 1318.1506,-873.8191,39.5781)||IsPlayerInRangeOfPoint(playerid, 7.0, 1851.4362,-1862.8409,13.5781))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return 1;
		if(CAMION(GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			DescargandoTiempo[playerid] = SetTimerEx("DescargandoCamion",10000,false,"d",playerid);
			GameTextForPlayer(playerid, "~w~Descargando camion...", 10000, 5);
			TogglePlayerControllable(playerid, 0);
			SetPVarInt(playerid, "IsFrozen", 0);
			DisablePlayerCheckpoint(playerid);
			ActualizarPuerta(GetPlayerVehicleID(playerid), 2);
			ActualizarPuerta(GetPlayerVehicleID(playerid), 3);
			return 1;
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 7.0, 454.2390,-1501.8813,30.8736)||IsPlayerInRangeOfPoint(playerid, 7.0, 2112.9612,-1216.6085,23.8047)||IsPlayerInRangeOfPoint(playerid, 7.0, 488.1939,-1277.0747,15.9604))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return 1;
		if(CAMION(GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			DescargandoTiempo[playerid] = SetTimerEx("DescargandoCamion",10000,false,"d",playerid);
			GameTextForPlayer(playerid, "~w~Descargando camion...", 10000, 5);
			TogglePlayerControllable(playerid, 0);
			SetPVarInt(playerid, "IsFrozen", 0);
			DisablePlayerCheckpoint(playerid);
			ActualizarPuerta(GetPlayerVehicleID(playerid), 2);
			ActualizarPuerta(GetPlayerVehicleID(playerid), 3);
			return 1;
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 7.0, 2169.3521,-2275.2957,13.1360)||IsPlayerInRangeOfPoint(playerid, 7.0, 2443.0161,-1426.0720,24.0000))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return 1;
		if(CAMION(GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			DescargandoTiempo[playerid] = SetTimerEx("DescargandoCamion",10000,false,"d",playerid);
			GameTextForPlayer(playerid, "~w~Descargando camion...", 10000, 5);
			TogglePlayerControllable(playerid, 0);
			SetPVarInt(playerid, "IsFrozen", 0);
			DisablePlayerCheckpoint(playerid);
			ActualizarPuerta(GetPlayerVehicleID(playerid), 2);
			ActualizarPuerta(GetPlayerVehicleID(playerid), 3);
			return 1;
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 7.0, 2508.4253,-2114.6299,13.5469)||IsPlayerInRangeOfPoint(playerid, 7.0, 2508.4253,-2114.6299,13.5469)||IsPlayerInRangeOfPoint(playerid, 7.0, 2166.8220,-2273.5928,13.3727))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return 1;
		if(CAMION(GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			DescargandoTiempo[playerid] = SetTimerEx("DescargandoCamion",10000,false,"d",playerid);
			GameTextForPlayer(playerid, "~w~Descargando camion...", 10000, 5);
			TogglePlayerControllable(playerid, 0);
			SetPVarInt(playerid, "IsFrozen", 0);
			DisablePlayerCheckpoint(playerid);
			ActualizarPuerta(GetPlayerVehicleID(playerid), 2);
			ActualizarPuerta(GetPlayerVehicleID(playerid), 3);
			return 1;
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 7.0, -1699.9927,10.2943,3.5547))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return 1;
		if(CAMION(GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			Chofer[GetPlayerVehicleID(playerid)] = INVALID_PLAYER_ID;
			CamionCargado[GetPlayerVehicleID(playerid)] = 0;
			Respawnear(GetPlayerVehicleID(playerid));
			DisablePlayerCheckpoint(playerid);
			SetPVarInt(playerid, "Camionero", 0);
			PagoCamionero(playerid, PlayerInfo[playerid][pNivelCamionero],Carga[playerid]);
			return 1;
		}
 	}
	if(IsPlayerInRangeOfPoint(playerid, 7.0, 2786.7866,-2594.8406,-1.0248))
	{
		if(BOTE(GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && RecorridoPescador[playerid] == 1)
		{
			new vehicleid, atext[20], string[150] ,pName[24], paga, peso;
			GetPlayerName(playerid,pName,24);
			switch(pesca[playerid])
			{
				case 1: atext = "la tortuga";
				case 2: atext = "el delfin";
				case 3: atext = "el tiburon";
			}
			vehicleid = GetPlayerVehicleID(playerid);
			SetVehicleToRespawn(vehicleid);
			SetPosEx(playerid,2773.6609,-2597.2288,2.3560,357.6909,0,0);
			DestroyObject(pescador[playerid]);
			DisablePlayerCheckpoint(playerid);
			permisopesca[playerid] = 0;
			RemovePlayerMapIcon(playerid, 99);
			GangZoneHideForPlayer(playerid, mares);
			RecorridoPescador[playerid] = 0;
			switch(PlayerInfo[playerid][pNivelPescador])
			{
				case 1:
				{
					new intento = random(10);
					switch(intento)
					{
						case 0: {	peso=245; paga=1377;	}
						case 1: {	peso=263; paga=1450;	}
						case 2: {	peso=257; paga=1398;	}

						case 3: {	peso=310; paga=1764;	}

						case 4: {	peso=263; paga=1450;	}
						case 5: {	peso=257; paga=1398;	}

						case 6: {	peso=310; paga=1764;	}

						case 7: {	peso=263; paga=1450;	}
						case 8: {	peso=257; paga=1398;	}
						case 9: {	peso=257; paga=1398;	}

					}
				}
				case 2:
				{
     				new intento = random(3);
					switch(intento)
					{
						case 0: {	peso=270; paga=2260;	}
						case 1: {	peso=294; paga=2550;	}
						case 2: {	peso=282; paga=2350;	}
					}
				}
				case 3..100:
				{
     				new intento = random(3);
					switch(intento)
					{
						case 0: {	peso=302; paga=3720;	}
						case 1: {	peso=327; paga=3912;	}
						case 2: {	peso=315; paga=3850;	}
					}
				}
			}
			format(string, 150, "¡Excelente pesca! Te pagamos {00CC00}$%d{FFFFFF} por %s de {00CCFF}%dkg{FFFFFF} que acabas de entregar.", paga, atext, peso);
			SendClientMessage(playerid, -1, string);
			SendClientMessage(playerid,-1,"Si quieres volver a pescar, tienes que solicitar un nuevo {DBED16}/permiso pesca{FFFFFF}.");
			DarDinero(playerid,paga);
			ExpPescador(playerid);
			RevisarLogroPesca(playerid, peso, pesca[playerid]);
		}
	}
	else if(RecorridoBasu[playerid] == 0) return DisablePlayerCheckpoint(playerid);
	return 1;
}

public Logeado(playerid)
{
    if(PlayerInfo[playerid][vModelo] > 0 || PlayerInfo[playerid][vModelo2] > 0 || PlayerInfo[playerid][vModelo3] > 0 || PlayerInfo[playerid][vModelo4] > 0)
	{
	    //printf("%d %d %d %d",PlayerInfo[playerid][vModelo],PlayerInfo[playerid][vModelo2],PlayerInfo[playerid][vModelo3],PlayerInfo[playerid][vModelo4]);
		SetTimerEx("Autos",2500,false,"%d",playerid);
	}
	new query[200],pName[24];
	GetPlayerName(playerid,pName,24);
	if(Jail[playerid] == 1)
	{
		if(PlayerInfo[playerid][pTipoCarcel] == 1)
		{
			SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
			SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 1);
		}
		if(PlayerInfo[playerid][pTipoCarcel] == 2)
		{
			SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
			SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 5);
		}
		if(PlayerInfo[playerid][pTipoCarcel] == 3)
		{
			SetPlayerPos(playerid, 197.6199, 174.8677, 1002.6390);
			SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 7);
		}
		if(PlayerInfo[playerid][pTipoCarcel] == 4)
		{
			SetPlayerPos(playerid, 172.0682,1438.3047,1084.8462);
			SetPlayerInterior(playerid, 15);
			SetPlayerVirtualWorld(playerid, 15);
		}
	}
	else
	{
		GetPlayerPos(playerid,PosTP[playerid][0],PosTP[playerid][1],PosTP[playerid][2]);
		SetPlayerPos(playerid,PosTP[playerid][0],PosTP[playerid][1],PosTP[playerid][2]);
	}
	DarDineroLogin(playerid);
	TimerCheats[playerid] = SetTimerEx("AntiMoneyHack",500,true,"d",playerid);
	VerAutos[playerid] = SetTimerEx("CheckAutos",5000,true,"d",playerid);
	AntiCarHacks[playerid] = SetTimerEx("VerAuto",300,true,"d",playerid);
	format(query, 200, "UPDATE `usuarios` SET `Online`='1' WHERE `Username`='%s'",pName);
	mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
}

public Logeado2(playerid)
{
	PrimerSpawn[playerid] = 1;
}

public SinGasolina(playerid)
{
	AccionesRol(playerid,"intenta encender el motor de su vehículo pero no puede.", 20);
	SendClientMessage(playerid,-1,"El vehículo necesita combustible.");
}

public EncenderMotor(playerid)
{
	MensajeSinGasoEnviado[playerid] = 0;
	new pName[32],autoid;
	autoid = GetPlayerVehicleID(playerid);
	GetPlayerName(playerid, pName, 32);
	if(VehicleFuel[autoid] == 0) return AccionesRol(playerid,"intenta encender el motor de su vehículo pero no puede.", 20);
 	if(averiado[autoid] != 0)
 	{
 	    new Randoming;
 	    Randoming = random(3);
 		switch(Randoming)
      	{
        	case 0:	{  	return MotorMalogrado(playerid);	}
            case 1: {  	return MotorMalogrado(playerid);    }
            case 2:
		    {
	            if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		 		SendClientMessage(playerid, -1, "Vehículo en marcha.");
		 		AccionesRol(playerid,"encendió el motor de su vehículo.", 20);
				GetVehicleParamsEx(autoid, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autoid, 1, lights, alarm, doors, bonnet, boot, objective);
				YaEncendiendo[playerid] = 0;
				MotorAuto[autoid] = 1;
				SetTimerEx("ComprobarDanoMotor", 1000, 0, "d", playerid);
				return 1;
            }
    	}
	}
	if(IsPlayerInAnyVehicle(playerid))
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
 		SendClientMessage(playerid, -1, "Vehículo en marcha.");
		AccionesRol(playerid,"encendió el motor de su vehículo.", 20);
		GetVehicleParamsEx(autoid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(autoid, 1, lights, alarm, doors, bonnet, boot, objective);
		YaEncendiendo[playerid] = 0;
		MotorAuto[autoid] = 1;
		SetTimerEx("ComprobarDanoMotor", 1000, 0, "d", playerid);
	}
	return 1;
}

public Estacionando(playerid)
{
	new autoid,query[1200],pName[32],Float:X,Float:Y,Float:Z,Float:z_A,Float:Health,interior,vw;
	interior = GetPlayerInterior(playerid);
	vw = GetPlayerVirtualWorld(playerid);
	autoid = GetPlayerVehicleID(playerid);
	GetVehicleHealth(autoid, Health);
	if(IsPlayerInAnyVehicle(playerid))
	if(autoid == autos[playerid])
	{
		if(Health < 500.0) return SendClientMessage(playerid,-1,"El vehiculo esta muy dañado, arreglalo primero.");
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		GetPlayerName(playerid, pName, 32);
		GetVehiclePos(autoid, X,Y,Z);
		GetVehicleZAngle(autoid, z_A);
		format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='%f',`EstacionadoY`='%f',`EstacionadoZ`='%f',`EstacionadoA`='%f',`O_Interior`='%d',`O_VW`='%d' WHERE `Propietario`='%d' AND `Slot` = '1'",Float:X,Float:Y,Float:Z,Float:z_A,interior,vw,PlayerInfo[playerid][pID]);
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		PlayerInfo[playerid][pOX] = X;
		PlayerInfo[playerid][pOY] = Y;
		PlayerInfo[playerid][pOZ] = Z;
		PlayerInfo[playerid][pOA] = z_A;
		PlayerInfo[playerid][vOinterior] = interior;
		PlayerInfo[playerid][vOvw] = vw;
		AccionesRol(playerid,"estacionó su vehículo.", 20);
		GetVehicleParamsEx(autoid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(autoid, 0, lights, alarm, doors, bonnet, boot, objective);
		MotorAuto[autoid] = 0;
		TogglePlayerControllable(playerid, 1);
		SetPVarInt(playerid, "IsFrozen", 1);
		SetCameraBehindPlayer(playerid);
	}
	if(autoid == autos2[playerid])
	{
		if(Health < 500.0) return SendClientMessage(playerid,-1,"El vehiculo esta muy dañado, arreglalo primero.");
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		GetPlayerName(playerid, pName, 32);
		GetVehiclePos(autoid, X,Y,Z);
		GetVehicleZAngle(autoid, z_A);
		format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='%f',`EstacionadoY`='%f',`EstacionadoZ`='%f',`EstacionadoA`='%f',`O_Interior`='%d',`O_VW`='%d' WHERE `Propietario`='%d' AND `Slot` = '2'",Float:X,Float:Y,Float:Z,Float:z_A,interior,vw,PlayerInfo[playerid][pID]);
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		PlayerInfo[playerid][pOX2] = X;
		PlayerInfo[playerid][pOY2] = Y;
		PlayerInfo[playerid][pOZ2] = Z;
		PlayerInfo[playerid][pOA2] = z_A;
		PlayerInfo[playerid][v2Ointerior] = interior;
		PlayerInfo[playerid][v2Ovw] = vw;
		AccionesRol(playerid,"estacionó su vehículo.", 20);
		GetVehicleParamsEx(autoid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(autoid, 0, lights, alarm, doors, bonnet, boot, objective);
		MotorAuto[autoid] = 0;
		TogglePlayerControllable(playerid, 1);
		SetPVarInt(playerid, "IsFrozen", 1);
		SetCameraBehindPlayer(playerid);
	}
	if(autoid == autos3[playerid])
	{
		if(Health < 500.0) return SendClientMessage(playerid,-1,"El vehiculo esta muy dañado, arreglalo primero.");
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		GetPlayerName(playerid, pName, 32);
		GetVehiclePos(autoid, X,Y,Z);
		GetVehicleZAngle(autoid, z_A);
		format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='%f',`EstacionadoY`='%f',`EstacionadoZ`='%f',`EstacionadoA`='%f',`O_Interior`='%d',`O_VW`='%d' WHERE `Propietario`='%d' AND `Slot` = '3'",Float:X,Float:Y,Float:Z,Float:z_A,interior,vw,PlayerInfo[playerid][pID]);
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		PlayerInfo[playerid][pOX3] = X;
		PlayerInfo[playerid][pOY3] = Y;
		PlayerInfo[playerid][pOZ3] = Z;
		PlayerInfo[playerid][pOA3] = z_A;
		PlayerInfo[playerid][v3Ointerior] = interior;
		PlayerInfo[playerid][v3Ovw] = vw;
		AccionesRol(playerid,"estacionó su vehículo.", 20);
		GetVehicleParamsEx(autoid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(autoid, 0, lights, alarm, doors, bonnet, boot, objective);
		MotorAuto[autoid] = 0;
		TogglePlayerControllable(playerid, 1);
		SetPVarInt(playerid, "IsFrozen", 1);
		SetCameraBehindPlayer(playerid);
	}
	if(autoid == autos4[playerid])
	{
		if(Health < 500.0) return SendClientMessage(playerid,-1,"El vehiculo esta muy dañado, arreglalo primero.");
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		GetPlayerName(playerid, pName, 32);
		GetVehiclePos(autoid, X,Y,Z);
		GetVehicleZAngle(autoid, z_A);
		format(query, sizeof(query), "UPDATE `p_vehicles` SET `EstacionadoX`='%f',`EstacionadoY`='%f',`EstacionadoZ`='%f',`EstacionadoA`='%f',`O_Interior`='%d',`O_VW`='%d' WHERE `Propietario`='%d' AND `Slot` = '4'",Float:X,Float:Y,Float:Z,Float:z_A,interior,vw,PlayerInfo[playerid][pID]);
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		PlayerInfo[playerid][pOX4] = X;
		PlayerInfo[playerid][pOY4] = Y;
		PlayerInfo[playerid][pOZ4] = Z;
		PlayerInfo[playerid][pOA4] = z_A;
		PlayerInfo[playerid][v4Ointerior] = interior;
		PlayerInfo[playerid][v4Ovw] = vw;
		AccionesRol(playerid,"estacionó su vehículo.", 20);
		GetVehicleParamsEx(autoid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(autoid, 0, lights, alarm, doors, bonnet, boot, objective);
		MotorAuto[autoid] = 0;
		TogglePlayerControllable(playerid, 1);
		SetPVarInt(playerid, "IsFrozen", 1);
		SetCameraBehindPlayer(playerid);
	}
	return 1;
}

public ApagarMotor(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		new carid,pName[32];
		GetPlayerName(playerid, pName, 32);
		carid = GetPlayerVehicleID(playerid);
		AccionesRol(playerid,"detuvo el motor de su vehículo.", 20);
		GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid), 0, lights, alarm, doors, bonnet, boot, objective);
		MotorAuto[carid] = 0;
	}
	return 1;
}

public ComprobarDanoMotor(playerid)
{
    new Float:health;
	new veh = GetPlayerVehicleID(playerid);
	GetVehicleHealth(veh, health);
	if(IsPlayerInAnyVehicle(playerid))
	{
		if(health <= 375.0)
		{
			SetVehicleHealth(veh, 375.0);
			GameTextForPlayer(playerid, "~r~MOTOR AVERIADO", 2500, 3);
			GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(veh, 0, lights, alarm, doors, bonnet, boot, objective);
			averiado[veh] = 1;
			MotorAuto[veh] = 0;
			return 1;
		}
	}
    return 1;
}

public ColorJugadorDefault(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetPlayerColor(playerid,DEFAULT_COLOR);
	}
}

public ApareceHospital2(playerid)
{
    new Float:HospitalLS,Float:HospitalLS2,Float:HospitalLV,Float:HospitalSF;
	HospitalLS = GetPlayerDistanceFromPoint(playerid, 1191.43,-1326.39,13.40);
	HospitalLS2 = GetPlayerDistanceFromPoint(playerid, 2030.36,-1419.79,16.99);
	HospitalLV = GetPlayerDistanceFromPoint(playerid, 1605.58,1830.17,10.82);
	HospitalSF = GetPlayerDistanceFromPoint(playerid, -2662.87,631.44,14.45);
	MedicoCP2[playerid] = 1;
	if(HospitalLS < HospitalLS2 && HospitalLS < HospitalLV && HospitalLS < HospitalSF)
	{
		new rand = random(sizeof(HPCPos));
		SetPosEx(playerid, HPCPos[rand][0], HPCPos[rand][1], HPCPos[rand][2], HPCPos[rand][3], 0, 0);
	}
	else if(HospitalLS2 < HospitalLS && HospitalLS2 < HospitalLV && HospitalLS2 < HospitalSF)
	{
		new rand = random(sizeof(HPGPos));
		SetPosEx(playerid, HPGPos[rand][0], HPGPos[rand][1], HPGPos[rand][2], HPGPos[rand][3], 0, 0);
	}
	else if(HospitalLV < HospitalLS && HospitalLV < HospitalLS2 && HospitalLV < HospitalSF)
	{
		new rand = random(sizeof(HPLVPos));
		SetPosEx(playerid, HPLVPos[rand][0], HPLVPos[rand][1], HPLVPos[rand][2], HPLVPos[rand][3], 0, 0);
	}
	else if(HospitalSF < HospitalLS && HospitalSF < HospitalLS2 && HospitalSF < HospitalLV)
	{
		new rand = random(sizeof(HPSFPos));
		SetPosEx(playerid, HPSFPos[rand][0], HPSFPos[rand][1], HPSFPos[rand][2], HPSFPos[rand][3], 0, 0);
	}
	if(PlayerInfo[playerid][pSocioHP] > 0)
	{
		SendClientMessage(playerid, 0xafafafFF, "{FFBC00}El costo de los servicios fue de {37db45}$400{FFBC00}.");
		QuitarDinero(playerid,400);
	}
	else if(PlayerInfo[playerid][pSocioHP] == 0)
	{
		SendClientMessage(playerid, 0xafafafFF, "{FFBC00}El costo de los servicios fue de {37db45}$450{FFBC00}.");
		QuitarDinero(playerid,450);
	}
	else if(PlayerInfo[playerid][pDuty] == 1)	SendClientMessage(playerid, 0xafafafFF, "{FFBC00}El gobierno de San Andreas pagó por tus servicios médicos.");
	TogglePlayerControllable(playerid,1);
	SetPVarInt(playerid, "IsFrozen", 1);
	SetCameraBehindPlayer(playerid);
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
    PlayerAnticheat[playerid][@Imunidad] = gettime() + 3;
	//TESTAC[vehicleid] = SetTimerEx("PUEDEESTAC",55000,false,"d",vehicleid);
	if(autos[playerid] == vehicleid && alarma[autos[playerid]] == 1)
	{
	    GetVehicleParamsEx(autos[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(autos[playerid], engine, lights, 1, doors, bonnet, boot, objective);
	}
	else if(autos2[playerid] == vehicleid && alarma[autos2[playerid]] == 1)
	{
	    GetVehicleParamsEx(autos2[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(autos2[playerid], engine, lights, 1, doors, bonnet, boot, objective);
	}
	else if(autos3[playerid] == vehicleid && alarma[autos3[playerid]] == 1)
	{
	    GetVehicleParamsEx(autos3[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(autos3[playerid], engine, lights, 1, doors, bonnet, boot, objective);
	}
	else if(autos4[playerid] == vehicleid && alarma[autos4[playerid]] == 1)
	{
	    GetVehicleParamsEx(autos4[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(autos4[playerid], engine, lights, 1, doors, bonnet, boot, objective);
	}
	if(EmisoraEscuchando[vehicleid] != -1)
	{
		StopAudioStreamForPlayer(playerid);
		CabinasOcupadasEmisoras[EmisoraEscuchando[vehicleid]][2]--;
	}
	if(BajandoV[playerid] == 0)
	{
		KillTimer(AntiCarHacks[playerid]);
		SetTimerEx("ActivarTimerCH",1000,false,"d",playerid);
		BajandoV[playerid] = 1;
	}
	if(Taxista[playerid] != INVALID_PLAYER_ID)
	{
	    if(Ficha[Taxista[playerid]] > 0)
	    {
			new string[128],pName[50];
			GetPlayerName(playerid,pName,50);
			TextDrawHideForPlayer(playerid,TAXIMET);
			TextDrawHideForPlayer(playerid,TAXIMET2[Taxista[playerid]]);
			TextDrawHideForPlayer(playerid,TAXIMET3);
			TextDrawHideForPlayer(playerid,TAXIMET4);
			KillTimer(TM[playerid]);
			format(string,128,"Has pagado al conductor un total de {00CC00}$%d{FFFFFF}.",Monto[Taxista[playerid]]);
			SendClientMessage(playerid,-1,string);
			format(string,128,"%s Te ha pagado {00CC00}$%d{FFFFFF} por el recorrido",pName,Monto[Taxista[playerid]]);
			SendClientMessage(Taxista[playerid],-1,string);
			Monto[Taxista[playerid]] = 0;
			Pasajero[Taxista[playerid]] = INVALID_PLAYER_ID;
			Taxista[playerid] = INVALID_PLAYER_ID;
        }
	}
    if(COSECHA(vehicleid))
    {
        SetTimerEx("RespawnearV",500,false,"d",vehicleid);
    }
	if(VehiculosInfo[vehicleid][vcomprable] == 1)
	{
		SetTimerEx("RespawnearV",3000,false,"d",vehicleid);
	}
	EnAuto[playerid] = INVALID_VEHICLE_ID;
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		GetVehiclePos(vehicleid,cpo[vehicleid][0],cpo[vehicleid][1],cpo[vehicleid][2]);
		SetTimerEx("TPV",400,false,"d",vehicleid);
	}
	return 1;
}
EnviarDuda(playerid, duda[])
{
	new string[145];
	if(PlayerInfo[playerid][pAdmin] > ADMIN_LEVEL_USER) format(string, sizeof string, "({009966}Canal /n{009999}) [%s] %s (%d): %s", ADMIN_RANKS[PlayerInfo[playerid][pAdmin]], PlayerName(playerid), playerid, duda);
	else
 	{
		format(string, sizeof string, "({009966}Canal /n{009999}) [Nivel %d] %s (%d): %s", PlayerInfo[playerid][@Nivel], PlayerName(playerid), playerid, duda);
		DudaOff[playerid] = 1;
		TiempoDuda[playerid] = 60;
		SetTimerEx("DudaOn",30000,0,"d",playerid);
	}
	for(new i=0;i<MAX_PLAYERS;i++)
	{
	    if(strcmp(duda, "lag", true) == 0) return 1;
		if(CanalDudas[i] == 1)
		{
			SendClientMessage(i,0x009999FF,string);
		}
	}
	return 1;
}

public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && (GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i)))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
						if(JugadorLogeado[i] == 1) SendClientMessage(i, col1, string);
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
						if(JugadorLogeado[i] == 1) SendClientMessage(i, col2, string);
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
					    if(JugadorLogeado[i] == 1) SendClientMessage(i, col3, string);
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
						if(JugadorLogeado[i] == 1) SendClientMessage(i, col4, string);
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
						if(JugadorLogeado[i] == 1) SendClientMessage(i, col5, string);
					}
				}
				else
				{
					if(JugadorLogeado[i] == 1) SendClientMessage(i, col1, string);
				}
			}
		}
	}
	return 1;
}

function DudaUser(playerid, params[])
{
	if(sscanf(params, "s[300]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/n [Pregunta]{FFFFFF} para preguntar/responder a otros jugadores");
	{
		if(CheckspamString(params))
 		{
 		    if(GetSpam(params,playerid) && !DetectSPAM(params)) MensajeSpam(playerid,params);
		    new spamString[128];
		    format(spamString, sizeof(spamString), "(Bloqueado /n{009999}) %s (%d): %s", PlayerName(playerid),playerid,params);
		   	ASendClientMessage(0xe1e938FF, spamString, 3);
		   	format(spamString, sizeof(spamString), "({009966}Canal /n{009999}) [Nivel %d] %s (%d): %s", PlayerInfo[playerid][@Nivel], PlayerName(playerid), playerid, params);
		   	SendClientMessage(playerid,0x009999FF,spamString);
      		TiempoDuda[playerid] = 60;
      		DudaOff[playerid] = 1;
      		SetTimerEx("DudaOn",30000,0,"d",playerid);
   			return 0;
  		}
  		new string[300];
		if(PlayerInfo[playerid][pTiempoJailS] > 0) return SendClientMessage(playerid, -1, "No puedes utilizar el canal de dudas en una sanción");
		if(TiempoDuda[playerid] > 0)
		{
			format(string,sizeof(string),"Debes esperar %d segundos para volver a utilizar el canal de dudas.",TiempoDuda[playerid]);
			SendClientMessage(playerid, 0xff9a00FF,string);
			return 1;
		}
		format(string, sizeof(string), "({009966}Canal /n{009999}) [Nivel %d] %s (%d): %s", PlayerInfo[playerid][@Nivel], PlayerName(playerid), playerid, params);
		RecienDuda[playerid] = 1;
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(CanalDudas[i] == 1 && JugadorLogeado[i])
			{
				SendClientMessage(i,0x009999FF,string);
			}
		}
		new Query[560];
		format(Query, sizeof(Query), "INSERT INTO `canal_dudas` (Nombre, Mensaje, IDJugador) VALUES (`%s`,`%s`,`%d`)",PlayerName(playerid),params,playerid);
		mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
		DudaOff[playerid] = 1;
	    TiempoDuda[playerid] = 60;
		SetTimerEx("DudaOn",30000,0,"d",playerid);
	}
	return 1;
}

public OnQueryError(errorid, error[], callback[], query[], connectionHandle )
{
	printf("[ERROR] ID: %d - Error: %s - Callback - %s - Query: %s", errorid, error, callback, query);
	return 1;
}

public OnPlayerModelSelectionEx(playerid, response, extraid, modelid)
{
	if(extraid == UNIFORMEHOMBRE)
	{
		if(response)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Te pusiste el uniforme de policía.");
			PlayerInfo[playerid][pDuty] = 1;
			SetPlayerSkin(playerid, modelid);
			PlayerInfo[playerid][pModelo] = modelid;
			SetPlayerColor(playerid,COLOR_POLICIA);
		}
	}
	if(extraid == UNIFORMEMUJER)
	{
		if(response)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Te pusiste el uniforme de policía.");
			PlayerInfo[playerid][pDuty] = 1;
			SetPlayerSkin(playerid, modelid);
			PlayerInfo[playerid][pModelo] = modelid;
			SetPlayerColor(playerid,COLOR_POLICIA);
			AsignarObjetos(playerid);
		}
	}
	if(extraid == OBJETIVOPRENDA)
	{
		if(response)
		{
		    PonerPrenda(playerid, modelid);
		}
	}
	if(extraid == OBJETIVOPRENDA3)
	{
		if(response)
		{
		    QuitarPrenda(playerid, modelid);
		}
	}
	if(extraid == OBJETIVOPRENDA2)
	{
		if(response)
		{
		    AcomodarPrenda(playerid, modelid);
		}
	}
	if(extraid == OBJETIVOPESCA)
	{
		if(response)
		{
			switch(modelid)
			{
				case 1601: // Pescado
				{
				    if(PlayerInfo[playerid][pSonidos] == 0)
				    {
				    	PlayAudioStreamForPlayer(playerid,"http://"AUDIO_ARPON"",0,0,0,0,0);
				    }
					SendClientMessage(playerid,-1,"Fallaste al lanzar el arpon, intenta nuevamente o intenta atrapar otra cosa.");
					AccionesRol(playerid,"lanzó el arpón a los peces pero falló.", 20);
				}
				case 1607: // Delfin
				{
				    if(PlayerInfo[playerid][pSonidos] == 0)
				    {
				    	PlayAudioStreamForPlayer(playerid,"http://"AUDIO_ARPON"",0,0,0,0,0);
				    }
					SetPlayerAttachedObject(playerid, 2, 2036, 2, -0.003002, 0.819994,  0.012999, -176.2, -4.00001, -74.7001, 0.777, 0.771999, 1);
					ApplyAnimation(playerid,"ped", "ARRESTgun", 4.0,0,1,1,1,1);
					Congelado(playerid);
					AccionesRol(playerid,"lanzó el arpón a el Delfín.", 20);
					SetTimerEx("LanzarArpon2",5000,false,"d", playerid);
				}
				case 1608: // Tiburon
				{
				    if(PlayerInfo[playerid][pSonidos] == 0)
				    {
				    	PlayAudioStreamForPlayer(playerid,"http://"AUDIO_ARPON"",0,0,0,0,0);
				    }
					SetPlayerAttachedObject(playerid, 2, 2036, 2, -0.003002, 0.819994,  0.012999, -176.2, -4.00001, -74.7001, 0.777, 0.771999, 1);
					ApplyAnimation(playerid,"ped", "ARRESTgun", 4.0,0,1,1,1,1);
					Congelado(playerid);
					AccionesRol(playerid,"lanzó el arpón a el Tiburón.", 20);
					SetTimerEx("LanzarArpon3",5000,false,"d", playerid);
				}
				case 1609: // Tortuga
				{
				    if(PlayerInfo[playerid][pSonidos] == 0)
				    {
				    	PlayAudioStreamForPlayer(playerid,"http://"AUDIO_ARPON"",0,0,0,0,0);
				    }
					SetPlayerAttachedObject(playerid, 2, 2036, 2, -0.003002, 0.819994,  0.012999, -176.2, -4.00001, -74.7001, 0.777, 0.771999, 1);
					ApplyAnimation(playerid,"ped", "ARRESTgun", 4.0,0,1,1,1,1);
					Congelado(playerid);
					AccionesRol(playerid,"lanzó el arpón a la Tortuta.", 20);
					SetTimerEx("LanzarArpon1",5000,false,"d", playerid);
				}
			}
		}
	}
	if(extraid == OBJETIVOROCA)
	{
		if(response)
		{
			switch(modelid)
			{
				case 897: // ROCA
				{
				    new string[128], ganancias;
				    switch(PlayerInfo[playerid][pNivelMinero])
					{
						case 1:
						{
       						new intento = random(3);
							switch(intento)
							{
								case 0: {	ganancias=148;	}
								case 1: {	ganancias=150;	}
								case 2: {	ganancias=146;	}
							}
						}
						case 2:
						{
       						new intento = random(3);
							switch(intento)
							{
								case 0: {	ganancias=200;	}
								case 1: {	ganancias=210;	}
								case 2: {	ganancias=207;	}
							}
						}
						case 3..100:
						{
       						new intento = random(3);
							switch(intento)
							{
								case 0: {	ganancias=240;	}
								case 1: {	ganancias=255;	}
								case 2: {	ganancias=247;	}
							}
						}
					}
					AccionesRol(playerid,"tira una roca a la procesadora.", 20);
					ExpMinero(playerid);
					format(string, sizeof(string), "{00CC00}¡Buen trabajo!{FFFFFF} Tus ganancias son: {00CC00}$%d{FFFFFF}.", ganancias);
					DarDinero(playerid, ganancias);
					SendClientMessage(playerid, -1, string);
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
					RemovePlayerAttachedObject(playerid,2);
					rocajugador[playerid] = 19382;
				}
			}
		}
	}
	return 1;
}

public OnPlayerModelSelection(playerid, response, listid, modelid)
{
	if(listid == objetos)
	{
		if(response)
		{
			if(NPrendas[playerid] >= 4) return SendClientMessage(playerid,-1,"No puedes comprar más de 4 prendas. Guarda una {DBED15}en la página web.");
			if(PlayerInfo[playerid][Totems] < 3) return SendClientMessage(playerid,-1,"Comprar una prenda cuesta {00CC00}3 Totems{FFFFFF}.");
			if(PlayerInfo[playerid][pObj] == modelid || PlayerInfo[playerid][pObj2] == modelid || PlayerInfo[playerid][pObj3] == modelid || PlayerInfo[playerid][pObj4] == modelid)
			{
				new string[128];
				format(string,128,"Ya tienes esta {DBED15}prenda{FFFFFF}.",GetWeaponNameEx(modelid));
				return SendClientMessage(playerid,-1,string);
			}
			new string3[200];
			PrendaMarcada[playerid] = modelid;
			format(string3,sizeof(string3),"{FFFFFF}El objeto solicitado cuesta {8c5c35}3 Tótems{FFFFFF}.\n\n{FFFFFF}¿Quieres comprar este objeto?");
			ShowPlayerDialog(playerid, COMPRAR_PRENDA, DIALOG_STYLE_MSGBOX, "{DBED15}!ATENCIÓN!",string3,"Comprar","Cancelar");
		}
	}
	return 1;
}

Pescadores(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new trabajo = PlayerInfo[playerid][pTrabajo];
		new trabajo2 = PlayerInfo[playerid][pTrabajo2];
		if(trabajo == T_Pescador){return 1;}
		else if(trabajo2 == T_Pescador){return 1;}
	}
	return 0;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
    PlayerAnticheat[playerid][@Imunidad] = gettime() + 3;
    if(FabricaMedica[playerid] == 1) return ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,0,0,1,0);
    MensajeSinGasoEnviado[playerid] = 0;
    if(BICI(vehicleid) && PlayerInfo[playerid][pCargos] >= 3)
    {
	    SendClientMessage(playerid,-1,"No puedes subirte a una bici si tienes cargos.");
	    RemovePlayerFromVehicle(playerid);
		ClearAnimations(playerid);
	}
	if(EmisoraEscuchando[vehicleid] != -1)
	{
	    CabinasOcupadasEmisoras[EmisoraEscuchando[vehicleid]][2]++;
	}
	if(ispassenger == 0 && AVION(vehicleid) && PlayerInfo[playerid][pLicencia] == 0)
	{
	    SendClientMessage(playerid,-1,"Necesitas licencia de piloto para conducir este vehículo.");
		RemovePlayerFromVehicle(playerid);
		ClearAnimations(playerid);
	}
	if(recogiendo[playerid] > 0)
	{
		RemovePlayerFromVehicle(playerid);
	}
	if(Objeto[playerid] > 1100 || TieneBarril[playerid] != 0)
	{
	    SendClientMessage(playerid,-1,"No puedes subir a un vehiculo con un objeto, usa {DBED16}/tirar objeto.");
		RemovePlayerFromVehicle(playerid);
	}
	if(PlayerInfo[playerid][Agonizando] == 1)
	{
		RemovePlayerFromVehicle(playerid);
	}
	if(bloqueado[vehicleid] == 0)
	{
		EnAuto[playerid] = vehicleid;
		BajandoV[playerid] = 0;
	}
	else
	{
		SendClientMessage(playerid,-1,"El vehículo está cerrado, si eres el propietario escribe {DBED16}/abrir{FFFFFF}.");
		ClearAnimations(playerid);
		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(vehicleid, engine, lights, alarm, 1, bonnet, boot, objective);
		return 1;
	}
	if(ispassenger == 1 && TAXI(vehicleid))
	{
		foreach(Player,i)
		{
			if(IsPlayerInVehicle(i,vehicleid) && GetPlayerState(i) == PLAYER_STATE_DRIVER)
			{
			    if(Ficha[Taxista[playerid]] > 0)
			    {
					Taxista[playerid] = i;
					Pasajero[i] = playerid;
					LlamadaTaxi[playerid] = 0;
					SetPlayerColor(playerid, COLOR_WHITE);
					TM[playerid] = SetTimerEx("Taximetro",15000,true,"d",playerid);
					TextDrawShowForPlayer(playerid,TAXIMET);
					TextDrawShowForPlayer(playerid,TAXIMET2[i]);
					TextDrawShowForPlayer(playerid,TAXIMET3);
					TextDrawShowForPlayer(playerid,TAXIMET4);
					return 1;
                }
			}
		}
	}
	if(CAMION(vehicleid) && ispassenger == 0)
	{
 		if(PlayerInfo[playerid][pTrabajo] != T_Camionero && PlayerInfo[playerid][pTrabajo2] != T_Camionero)
		{
		    SendClientMessage(playerid, -1, "Necesitas el empleo de camionero para usar este vehículo.");
		    SendClientMessage(playerid, -1, "Para aprender más sobre los trabajos disponibles, escribe {DBED16}/ayuda trabajos{FFFFFF}.");
		    RemovePlayerFromVehicle(playerid);
		    ClearAnimations(playerid);
		}
    }
	if(ispassenger == 0)
	{
		if(BICI(vehicleid) && VehiculosInfo[vehicleid][vcomprable] == 0)
		{
			GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(vehicleid, 1, lights, alarm, doors, bonnet, boot, objective);
		}
	}
	if(ispassenger == 0)
	{
		if(VehiculosInfo[vehicleid][vtrabajo] == T_Pescador && !Pescadores(playerid))
		{
			RemovePlayerFromVehicle(playerid);
			new Float:sx, Float:sy, Float:sz;
			GetPlayerPos(playerid, sx, sy, sz);
			SetPlayerPos(playerid, sx, sy, sz);
			SendClientMessage(playerid,-1,"Este barco es solamente para pescadores con licencia.");
			SendClientMessage(playerid,-1,"Para aprender más sobre los trabajos disponibles, escribe {DBED15}/ayuda trabajos{FFFFFF}.");
			EnAuto[playerid] = 0;
		}
	}
	if(ispassenger == 0)
	{
		if(BASU(vehicleid))
		{
			if(PlayerInfo[playerid][pTrabajo] != T_Basurero && PlayerInfo[playerid][pTrabajo2] != T_Basurero)
			{
				SendClientMessage(playerid, -1, "Necesitas el empleo de basurero para usar este vehículo.");
				SendClientMessage(playerid,-1,"Para aprender más sobre los trabajos disponibles, escribe {DBED15}/ayuda trabajos{FFFFFF}.");
				RemovePlayerFromVehicle(playerid);
				new Float:sx, Float:sy, Float:sz;
				GetPlayerPos(playerid, sx, sy, sz);
				SetPlayerPos(playerid, sx, sy, sz);
				EnAuto[playerid] = 0;
				return 1;
			}
			if(RopaBasu[playerid] != 1 && PlayerInfo[playerid][pVip] == 0)
			{
				SendClientMessage(playerid, -1, "Necesitas tener la ropa de trabajo para conducir este vehículo");
				RemovePlayerFromVehicle(playerid);
				new Float:sx, Float:sy, Float:sz;
				GetPlayerPos(playerid, sx, sy, sz);
				SetPlayerPos(playerid, sx, sy, sz);
				EnAuto[playerid] = 0;
				return 1;
			}
			if(RecorridoBasu[playerid] == 0)
			{
				PBasura[playerid] = 1;
				if(RopaBasu[playerid] == 1)
				{
		    		SendClientMessage(playerid,0x9c9d6bff,"Consigue un compañero basurero y comienza a trabajar.");
				}
				else if(RopaBasu[playerid] != 1 && PlayerInfo[playerid][pVip] > 0)
				{
		    		SendClientMessage(playerid,0x9c9d6bff,"Consigue un compañero basurero y comienza a trabajar.");
				}
				SetPlayerCheckpoint(playerid, -173.0988,-1619.5331,3.4375,10.0);
				PuntoBaX[playerid] = -192.9705; PuntoBaY[playerid] = -1625.0140; PuntoBaZ[playerid] = 3.7387; PuntoBaA[playerid] = 10.0;
				return 1;
			}
			else return SendClientMessage(playerid,-1,"Ya tienes activo un recorrido, terminalo para comenzar uno nuevo");
		}
	}
	if(ispassenger == 0)
	{
		if(VehiculosInfo[vehicleid][vfaccion] > 0 && PlayerInfo[playerid][pFaccion] != VehiculosInfo[vehicleid][vfaccion])
		{
			RemovePlayerFromVehicle(playerid);
			new Float:sx, Float:sy, Float:sz;
			GetPlayerPos(playerid, sx, sy, sz);
			SetPlayerPos(playerid, sx, sy, sz);
			SendClientMessage(playerid,-1,"Este vehículo pertenece a una facción, unete a ella para poder utilizarlo.");
			EnAuto[playerid] = 0;
		}
	}
	if(ispassenger == 0)
	{
		if(SAPD(vehicleid) || MOTOSAPD(vehicleid))
		{
			if(PlayerInfo[playerid][pDuty] == 0 && PlayerInfo[playerid][pFaccion] != 1 || PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][pFaccion] != 1 || PlayerInfo[playerid][pDuty] == 0 && PlayerInfo[playerid][pFaccion] == 1)
			{
				SendClientMessage(playerid,-1,"Necesitas ser policía y estar con el uniforme puesto para conducir este vehículo.");RemovePlayerFromVehicle(playerid);
				new Float:sx, Float:sy, Float:sz;
				GetPlayerPos(playerid, sx, sy, sz);
				SetPlayerPos(playerid, sx, sy, sz);
				EnAuto[playerid] = 0;
			}
		}
	}
	if(ispassenger && EsUnTren(vehicleid))
	{
		if(Boletos[playerid] == 0)
		{
			new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx+3, sly+3, slz+2);
			SetCameraBehindPlayer(playerid);
			RemovePlayerFromVehicle(playerid);
			SendClientMessage(playerid, -1, "Te expulsaron del tren porque no has comprado el boleto.");
		}
		else
		{
			Boletos[playerid] = 0;
			SendClientMessage(playerid, -1, "Gracias por viajar con nosotros, disfrute de su viaje.");
		}
	}
	if(ispassenger == 0)
	{
		if(HELISAPD(vehicleid))
		{
			if(PlayerInfo[playerid][pDuty] != 1)
			{
				SendClientMessage(playerid,-1,"Necesitas ser policía y estar con el uniforme puesto para conducir este vehículo.");
				RemovePlayerFromVehicle(playerid);
				new Float:sx, Float:sy, Float:sz;
				GetPlayerPos(playerid, sx, sy, sz);
				SetPlayerPos(playerid, sx, sy, sz);
				EnAuto[playerid] = 0;
				return 1;
			}
			if(PlayerInfo[playerid][pRango] < 2)
			{
				SendClientMessage(playerid, -1, "Necesitas ser oficial para poder manejar este tipo de vehículo.");
				RemovePlayerFromVehicle(playerid);
				new Float:sx, Float:sy, Float:sz;
				GetPlayerPos(playerid, sx, sy, sz);
				SetPlayerPos(playerid, sx, sy, sz);
				EnAuto[playerid] = 0;
				return 1;
			}
		}
	}
	if(ispassenger == 0)
	{
		if(AMBU(vehicleid))
		{
			if(PlayerInfo[playerid][pTrabajo] != T_Medico && PlayerInfo[playerid][pTrabajo2] != T_Medico)
			{
				SendClientMessage(playerid,-1,"Necesitas el empleo de médico para usar este vehículo.");
				SendClientMessage(playerid, -1, "Para aprender más sobre los trabajos disponibles, escribe {DBED16}/ayuda trabajos{FFFFFF}.");
				RemovePlayerFromVehicle(playerid);
				new Float:sx, Float:sy, Float:sz;
				GetPlayerPos(playerid, sx, sy, sz);
				SetPlayerPos(playerid, sx, sy, sz);
				EnAuto[playerid] = 0;
			}
		}
	}
	if(ispassenger == 0){
		if(TAXI(vehicleid)){
			if(PlayerInfo[playerid][pTrabajo] != T_Taxista && PlayerInfo[playerid][pTrabajo2] != T_Taxista)
			{
				SendClientMessage(playerid,-1,"Necesitas el empleo de taxista para usar este vehículo.");
				SendClientMessage(playerid, -1, "Para aprender más sobre los trabajos disponibles, escribe {DBED16}/ayuda trabajos{FFFFFF}.");
				RemovePlayerFromVehicle(playerid);
				new Float:sx, Float:sy, Float:sz;
				GetPlayerPos(playerid, sx, sy, sz);
				SetPlayerPos(playerid, sx, sy, sz);
				EnAuto[playerid] = 0;
			}
		}
	}
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == PLAYER_STATE_DRIVER && i != playerid)
		{
			if(!ispassenger == true)
			{
				new Float:sx, Float:sy, Float:sz;
				GetPlayerPos(playerid, sx, sy, sz);
				SetPlayerPos(playerid, sx, sy, sz);
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 0);
				SetPVarInt(playerid, "IsFrozen", 0);
				EnAuto[playerid] = 0;
				switch(Contador[playerid])
				{
				    case 0: SendClientMessage(playerid, -1, "No intentes robar vehículos sin rol, quedas congelado por 2 segundos.");
					case 1: SendClientMessage(playerid, -1, "No intentes robar vehículos sin rol, quedas congelado por 2 segundos. ({FF0000}Advertencia: 1/5{FFFFFF})");
					case 2: SendClientMessage(playerid, -1, "No intentes robar vehículos sin rol, quedas congelado por 2 segundos. ({FF0000}Advertencia: 2/5{FFFFFF})");
					case 3: SendClientMessage(playerid, -1, "No intentes robar vehículos sin rol, quedas congelado por 2 segundos. ({FF0000}Advertencia: 3/5{FFFFFF})");
					case 4: SendClientMessage(playerid, -1, "No intentes robar vehículos sin rol, quedas congelado por 2 segundos. ({FF0000}Advertencia: 4/5{FFFFFF})");
					case 5: { SendClientMessage(playerid, -1, "No intentes robar vehículos sin rol, quedas congelado por 2 segundos. ({FF0000}Advertencia: 5/5{FFFFFF})"); Kick(playerid); }
				}
				Contador[playerid]++;
			}
		}
	}
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	QuitarSombreroH(playerid);
	TieneSombrero[playerid] = 0;
    new arma[128];
	if(IsPlayerConnected(killerid))
	{
	  	GetWeaponName(reason, arma, sizeof(arma));
	  	if(strcmp(arma, "Minigun", true) == 0 && PlayerInfo[playerid][pAdmin] != ADMIN_LEVEL_ADM) Kick(killerid);
		new string99[128];
		if(strcmp(arma, "", true) == 0) format(arma,sizeof(arma),"los puños");
		format(string99,128,"%s (ID: %d) mató a %s (ID: %d) con %s.",PlayerName(killerid),killerid,PlayerName(playerid),playerid, arma);
		MensajeAdmin(0x9EC73DAA, string99, ADMIN_LEVEL_BANEOS);
	}
	if(killerid != INVALID_PLAYER_ID && Jail[killerid] == 1 && PlayerInfo[killerid][pTiempoCarcelM] > 0)
    {
        SendClientMessage(killerid, -1, "Acabas de asesinar a una persona en prisión, tu condena fue aumentada.");
        PlayerInfo[killerid][pTiempoCarcelM] += 10;
    }
	if(Specteado[playerid] == 1)
	{
	    foreach(Player,i)
	    {
	    	if(SpecJugador[i] == playerid) TogglePlayerSpectating(i,false);
		}
	}
	PlayerInfo[playerid][pInterior] = GetPlayerInterior(playerid);
	PlayerInfo[playerid][pMundoVirtual] = GetPlayerVirtualWorld(playerid);
	PlayerInfo[playerid][EnCasa] = 0;
	PlayerInfo[playerid][EnRopero] = 0;
	PlayerInfo[playerid][EnGarage] = 0;
	Objeto[playerid] = 0;
	if(Manejando[playerid] == 1) { Manejando[playerid] = 0; }
	if(PlayerInfo[playerid][pTiempoCarcelM] > 0) return 1;
	
	if(VariableCaido[playerid] == 0 && PlayerInfo[playerid][pCargos] != 0 && Grupo[playerid] == 0)
	{
		VariableCaido[playerid] = 1;
		return 1;
	}
    if(PlayerInfo[playerid][Agonizando] == 0 && PlayerInfo[playerid][pCargos] == 0 && Grupo[playerid] == 0)
	{
		GetPlayerPos(playerid, DeathX[playerid], DeathY[playerid], DeathZ[playerid]);
		SetSpawnInfo(playerid,0,PlayerInfo[playerid][jRopa],DeathX[playerid], DeathY[playerid], DeathZ[playerid],0,0,0,0,0,0,0);
		PlayerInfo[playerid][Agonizando] = 1;
		return 1;
	}
	else if(PlayerInfo[playerid][Agonizando] == 1 && Grupo[playerid] == 0) PlayerInfo[playerid][Agonizando] = 2;
	if(IsPlayerInRangeOfPoint(Agresor[playerid],180.0,1759.6833,-1892.0160,13.5556) || IsPlayerInRangeOfPoint(Agresor[playerid],180.0,1833.7728,-1842.5350,13.5781))
	{
		if(!IsPlayerInAnyVehicle(Agresor[playerid]) && GetPlayerState(Agresor[playerid]) != PLAYER_STATE_DRIVER)
		if(PlayerInfo[Agresor[playerid]][pDuty] == 0)
		if(PlayerInfo[Agresor[playerid]][pCargos] < 3)
		{
			new pName[24],string[200],string2[150];
			GetPlayerName(Agresor[playerid],pName,24);
			PlayerInfo[Agresor[playerid]][pCargos] = 3;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en Unity Station.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			format(string2,150,"Zona Segura");
			PlayerInfo[Agresor[playerid]][QuienC] = string2;
			TipoCargo[Agresor[playerid]] = 2;
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] >= 3 && PlayerInfo[Agresor[playerid]][pCargos] <= 4)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en Unity Station.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			PlayerInfo[Agresor[playerid]][pCargos] = 5;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] == 5)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] asesino serial, lo queremos vivo o muerto",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 6;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
	}
	if(IsPlayerInRangeOfPoint(Agresor[playerid],70.0,2584.9927,1639.3397,1087.5720))
	{
		if(!IsPlayerInAnyVehicle(Agresor[playerid]) && GetPlayerState(Agresor[playerid]) != PLAYER_STATE_DRIVER)
		if(PlayerInfo[Agresor[playerid]][pDuty] == 0)
		if(PlayerInfo[Agresor[playerid]][pCargos] < 3)
		{
			new pName[24],string[200],string2[150];
			GetPlayerName(Agresor[playerid],pName,24);
			PlayerInfo[Agresor[playerid]][pCargos] = 3;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en RS Haul.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			format(string2,150,"Zona Segura");
			PlayerInfo[Agresor[playerid]][QuienC] = string2;
			TipoCargo[Agresor[playerid]] = 2;
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] >= 3 && PlayerInfo[Agresor[playerid]][pCargos] <= 4)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en RS Haul.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			PlayerInfo[Agresor[playerid]][pCargos] = 5;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] == 5)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] asesino serial, lo queremos vivo o muerto",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 6;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
	}
	if(IsPlayerInRangeOfPoint(Agresor[playerid],50.0,374.3663,-124.7870,1001.4922))
	{
		if(!IsPlayerInAnyVehicle(Agresor[playerid]) && GetPlayerState(Agresor[playerid]) != PLAYER_STATE_DRIVER)
		if(PlayerInfo[Agresor[playerid]][pDuty] == 0)
		if(PlayerInfo[Agresor[playerid]][pCargos] < 3)
		{
			new pName[24],string[200],string2[150];
			GetPlayerName(Agresor[playerid],pName,24);
			PlayerInfo[Agresor[playerid]][pCargos] = 3;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en The Well Stacked Pizza.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			format(string2,150,"Zona Segura");
			PlayerInfo[Agresor[playerid]][QuienC] = string2;
			TipoCargo[Agresor[playerid]] = 2;
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] >= 3 && PlayerInfo[Agresor[playerid]][pCargos] <= 4)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en The Well Stacked Pizza.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			PlayerInfo[Agresor[playerid]][pCargos] = 5;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] == 5)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] asesino serial, lo queremos vivo o muerto",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 6;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
	}
	if(IsPlayerInRangeOfPoint(Agresor[playerid],130.0,1173.2209,-1332.7537,13.9884) || IsPlayerInRangeOfPoint(Agresor[playerid],130.0,1833.7728,-1842.5350,13.5781))
	{
		if(!IsPlayerInAnyVehicle(Agresor[playerid]) && GetPlayerState(Agresor[playerid]) != PLAYER_STATE_DRIVER)
		if(PlayerInfo[Agresor[playerid]][pDuty] == 0)
		if(PlayerInfo[Agresor[playerid]][pCargos] < 3)
		{
			new pName[24],string[200],string2[150];
			GetPlayerName(Agresor[playerid],pName,24);
			PlayerInfo[Agresor[playerid]][pCargos] = 3;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en el Hospital Central de Los Santos.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			format(string2,150,"Zona Segura");
			PlayerInfo[Agresor[playerid]][QuienC] = string2;
			TipoCargo[Agresor[playerid]] = 2;
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] >= 3 && PlayerInfo[Agresor[playerid]][pCargos] <= 4)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en Hospital Central de Los Santos.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 5;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] == 5)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] asesino serial, lo queremos vivo o muerto",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 6;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
	}
	if(IsPlayerInRangeOfPoint(Agresor[playerid],100.0,2023.8416,-1425.0518,16.1023))
	{
		if(!IsPlayerInAnyVehicle(Agresor[playerid]) && GetPlayerState(Agresor[playerid]) != PLAYER_STATE_DRIVER)
		if(PlayerInfo[Agresor[playerid]][pDuty] == 0)
		if(PlayerInfo[Agresor[playerid]][pCargos] < 3)
		{
			new pName[24],string[200],string2[150];
			GetPlayerName(Agresor[playerid],pName,24);
			PlayerInfo[Agresor[playerid]][pCargos] = 3;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en el Hospital Country General.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			format(string2,150,"Zona Segura");
			PlayerInfo[Agresor[playerid]][QuienC] = string2;
			TipoCargo[Agresor[playerid]] = 2;
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] >= 3 && PlayerInfo[Agresor[playerid]][pCargos] <= 4)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en el Hospital Country General.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 5;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] == 5)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] asesino serial, lo queremos vivo o muerto",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 6;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
	}
	if(IsPlayerInRangeOfPoint(Agresor[playerid],70.0,-1745.5931,-131.6944,3.7314) || IsPlayerInRangeOfPoint(Agresor[playerid],70.0,-1821.9308,-122.5035,5.6484))
	{
		if(!IsPlayerInAnyVehicle(Agresor[playerid]) && GetPlayerState(Agresor[playerid]) != PLAYER_STATE_DRIVER)
		if(PlayerInfo[Agresor[playerid]][pDuty] == 0)
		if(PlayerInfo[Agresor[playerid]][pCargos] < 3)
		{
			new pName[24],string[200],string2[150];
			GetPlayerName(Agresor[playerid],pName,24);
			PlayerInfo[Agresor[playerid]][pCargos] = 3;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en los muelles de San Fierro.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			format(string2,150,"Zona Segura");
			PlayerInfo[Agresor[playerid]][QuienC] = string2;
			TipoCargo[Agresor[playerid]] = 2;
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] >= 3 && PlayerInfo[Agresor[playerid]][pCargos] <= 4)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en los muelles de San Fierro.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 5;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] == 5)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] asesino serial, lo queremos vivo o muerto",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 6;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
	}
	if(IsPlayerInRangeOfPoint(Agresor[playerid],70.0,2356.8479,2321.8376,8.1406))
	{
		if(!IsPlayerInAnyVehicle(Agresor[playerid]) && GetPlayerState(Agresor[playerid]) != PLAYER_STATE_DRIVER)
		if(PlayerInfo[Agresor[playerid]][pDuty] == 0)
		if(PlayerInfo[Agresor[playerid]][pCargos] < 3)
		{
			new pName[24],string[200],string2[150];
			GetPlayerName(Agresor[playerid],pName,24);
			PlayerInfo[Agresor[playerid]][pCargos] = 3;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en la academia de LVPD.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			format(string2,150,"Zona Segura");
			PlayerInfo[Agresor[playerid]][QuienC] = string2;
			TipoCargo[Agresor[playerid]] = 2;
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] >= 3 && PlayerInfo[Agresor[playerid]][pCargos] <= 4)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en la academia de LVPD.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 5;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] == 5)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] asesino serial, lo queremos vivo o muerto",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 6;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
	}
	if(IsPlayerInRangeOfPoint(Agresor[playerid],100.0,-384.4948,-1474.2228,25.7266))
	{
		if(!IsPlayerInAnyVehicle(Agresor[playerid]) && GetPlayerState(Agresor[playerid]) != PLAYER_STATE_DRIVER)
		if(PlayerInfo[Agresor[playerid]][pDuty] == 0)
		if(PlayerInfo[Agresor[playerid]][pCargos] < 3)
		{
			new pName[24],string[200],string2[150];
			GetPlayerName(Agresor[playerid],pName,24);
			PlayerInfo[Agresor[playerid]][pCargos] = 3;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en las Granjas de Flint Range.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			format(string2,150,"Zona Segura");
			PlayerInfo[Agresor[playerid]][QuienC] = string2;
			TipoCargo[Agresor[playerid]] = 2;
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] >= 3 && PlayerInfo[Agresor[playerid]][pCargos] <= 4)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en las Granjas de Flint Range.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 5;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] == 5)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] asesino serial, lo queremos vivo o muerto",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 6;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
	}
	if(IsPlayerInRangeOfPoint(Agresor[playerid],100.0,-148.6831,-1577.2129,9.3045))
	{
		if(!IsPlayerInAnyVehicle(Agresor[playerid]) && GetPlayerState(Agresor[playerid]) != PLAYER_STATE_DRIVER)
		if(PlayerInfo[Agresor[playerid]][pDuty] == 0)
		if(PlayerInfo[Agresor[playerid]][pCargos] < 3)
		{
			new pName[24],string[200],string2[150];
			GetPlayerName(Agresor[playerid],pName,24);
			PlayerInfo[Agresor[playerid]][pCargos] = 3;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en el basural.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			format(string2,150,"Zona Segura");
			PlayerInfo[Agresor[playerid]][QuienC] = string2;
			TipoCargo[Agresor[playerid]] = 2;
		}
	    else if(PlayerInfo[Agresor[playerid]][pCargos] >= 3 && PlayerInfo[Agresor[playerid]][pCargos] <= 4)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en el basural.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 5;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] == 5)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] asesino serial, lo queremos vivo o muerto",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 6;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
	}
	if(IsPlayerInRangeOfPoint(Agresor[playerid],200.0,-2647.9409,605.9929,15.2346))
	{
		if(!IsPlayerInAnyVehicle(Agresor[playerid]) && GetPlayerState(Agresor[playerid]) != PLAYER_STATE_DRIVER)
		if(PlayerInfo[Agresor[playerid]][pDuty] == 0)
		if(PlayerInfo[Agresor[playerid]][pCargos] < 3)
		{
			new pName[24],string[200],string2[150];
			GetPlayerName(Agresor[playerid],pName,24);
			PlayerInfo[Agresor[playerid]][pCargos] = 3;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en Hospital de San Fierro",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			format(string2,150,"Zona Segura");
			PlayerInfo[Agresor[playerid]][QuienC] = string2;
			TipoCargo[Agresor[playerid]] = 2;
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] >= 3 && PlayerInfo[Agresor[playerid]][pCargos] <= 4)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en Hospital de San Fierro",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 5;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] == 5)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] asesino serial, lo queremos vivo o muerto",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 6;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
	}
	if(IsPlayerInRangeOfPoint(Agresor[playerid],200.0,1611.4006,1781.1265,37.8510))
	{
		if(!IsPlayerInAnyVehicle(Agresor[playerid]) && GetPlayerState(Agresor[playerid]) != PLAYER_STATE_DRIVER)
		if(PlayerInfo[Agresor[playerid]][pDuty] == 0)
		if(PlayerInfo[Agresor[playerid]][pCargos] < 3)
		{
			new pName[24],string[200],string2[150];
			GetPlayerName(Agresor[playerid],pName,24);
			PlayerInfo[Agresor[playerid]][pCargos] = 3;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en Hospital de Las Venturas",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			format(string2,150,"Zona Segura");
			PlayerInfo[Agresor[playerid]][QuienC] = string2;
            TipoCargo[Agresor[playerid]] = 2;
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] >= 3 && PlayerInfo[Agresor[playerid]][pCargos] <= 4)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en Hospital de Las Venturas",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 5;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] == 5)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] asesino serial, lo queremos vivo o muerto",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 6;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
	}
	if(IsPlayerInRangeOfPoint(Agresor[playerid],200.0,1499.6412,-1664.3955,14.0469))
	{
		if(!IsPlayerInAnyVehicle(Agresor[playerid]) && GetPlayerState(Agresor[playerid]) != PLAYER_STATE_DRIVER)
		if(PlayerInfo[Agresor[playerid]][pDuty] == 0)
		if(PlayerInfo[Agresor[playerid]][pCargos] < 3)
		{
			new pName[24],string[200],string2[150];
			GetPlayerName(Agresor[playerid],pName,24);
			PlayerInfo[Agresor[playerid]][pCargos] = 3;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en la comisaría de Los Santos",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			format(string2,150,"Zona Segura");
			PlayerInfo[Agresor[playerid]][QuienC] = string2;
            TipoCargo[Agresor[playerid]] = 2;
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] >= 3 && PlayerInfo[Agresor[playerid]][pCargos] <= 4)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en la comisaría de Los Santos",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 5;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] == 5)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] asesino serial, lo queremos vivo o muerto",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 6;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
	}
	if(IsPlayerInRangeOfPoint(Agresor[playerid],150.0,2297.1174,2460.5366,10.8203))
	{
		if(!IsPlayerInAnyVehicle(Agresor[playerid]) && GetPlayerState(Agresor[playerid]) != PLAYER_STATE_DRIVER)
		if(PlayerInfo[Agresor[playerid]][pDuty] == 0)
		if(PlayerInfo[Agresor[playerid]][pCargos] < 3)
		{
			new pName[24],string[200],string2[150];
			GetPlayerName(Agresor[playerid],pName,24);
			PlayerInfo[Agresor[playerid]][pCargos] = 3;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en la comisaría de Las Venturas.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			format(string2,150,"Zona Segura");
			PlayerInfo[Agresor[playerid]][QuienC] = string2;
			TipoCargo[Agresor[playerid]] = 2;
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] >= 3 && PlayerInfo[Agresor[playerid]][pCargos] <= 4)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en la comisaría de Las Venturas.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 5;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] == 5)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] asesino serial, lo queremos vivo o muerto",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 6;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
	}
	if(IsPlayerInRangeOfPoint(Agresor[playerid],80.0,2087.8501,2405.3518,10.8203))
	{
		if(!IsPlayerInAnyVehicle(Agresor[playerid]) && GetPlayerState(Agresor[playerid]) != PLAYER_STATE_DRIVER)
		if(PlayerInfo[Agresor[playerid]][pDuty] == 0)
		if(PlayerInfo[Agresor[playerid]][pCargos] < 3)
		{
			new pName[24],string[200],string2[150];
			GetPlayerName(Agresor[playerid],pName,24);
			PlayerInfo[Agresor[playerid]][pCargos] = 3;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en el estacionamiento de Easter Basin",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			format(string2,150,"Zona Segura");
			PlayerInfo[Agresor[playerid]][QuienC] = string2;
			TipoCargo[Agresor[playerid]] = 2;
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] >= 3 && PlayerInfo[Agresor[playerid]][pCargos] <= 4)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en el estacionamiento de Easter Basin",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 5;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] == 5)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] asesino serial, lo queremos vivo o muerto",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 6;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
	}
	if(IsPlayerInRangeOfPoint(Agresor[playerid],200.0,869.8167,873.0883,12.9141))
	{
		if(!IsPlayerInAnyVehicle(Agresor[playerid]) && GetPlayerState(Agresor[playerid]) != PLAYER_STATE_DRIVER)
		if(PlayerInfo[Agresor[playerid]][pDuty] == 0)
		if(PlayerInfo[Agresor[playerid]][pCargos] < 3)
		{
			new pName[24],string[200],string2[150];
			GetPlayerName(Agresor[playerid],pName,24);
			PlayerInfo[Agresor[playerid]][pCargos] = 3;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en la Cantera de Hunter Quarry.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			format(string2,150,"Zona Segura");
			PlayerInfo[Agresor[playerid]][QuienC] = string2;
			TipoCargo[Agresor[playerid]] = 2;
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] >= 3 && PlayerInfo[Agresor[playerid]][pCargos] <= 4)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] cometió un asesinato en la Cantera de Hunter Quarry.",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 5;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
		else if(PlayerInfo[Agresor[playerid]][pCargos] == 5)
		{
			new pName[24],string[200];
			GetPlayerName(Agresor[playerid],pName,24);
			format(string, 200,"{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] asesino serial, lo queremos vivo o muerto",pName,Agresor[playerid]);
			SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
			SendClientMessage(Agresor[playerid],-1,"Acabas de asesinar a una persona, te vio el guardia de seguridad.");
			SendClientMessage(Agresor[playerid],-1,"Ya no tienes forma de escapar, toda la policía fue alertada.");
			PlayerInfo[Agresor[playerid]][pCargos] = 6;
			SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
		}
	}
	// Cargos
	if(PlayerInfo[playerid][pDuty] == 1 && Agresor[playerid] != INVALID_PLAYER_ID)
	{
		if(PlayerInfo[Agresor[playerid]][pDuty] != 1)
		{
			new string[256],string2[150],pName[32],pName2[32];
			GetPlayerName(Agresor[playerid],pName, 32);
			GetPlayerName(playerid,pName2, 32);
			if(PlayerInfo[Agresor[playerid]][pCargos] < 5)
			{
				PlayerInfo[Agresor[playerid]][pCargos] = 5;
				format(string2,150,"%s",PlayerName(playerid));
				PlayerInfo[Agresor[playerid]][QuienC] = string2;
				SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
				format(string, 256, "{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] asesinó a un oficial, detener vivo o muerto.",pName,Agresor[playerid]);
				SendRadioMessage(1, -1, string,playerid);
			}
			else if(PlayerInfo[Agresor[playerid]][pCargos] >= 5)
			{
				PlayerInfo[Agresor[playerid]][pCargos] = 6;
				SetPlayerWantedLevel(Agresor[playerid],PlayerInfo[Agresor[playerid]][pCargos]);
				format(string, 256, "{3399FF}[Central de policía]{FFFFFF} reportando: {00CCFF}%s{FFFFFF} [%d] asesinó a multiple, detener vivo o muerto.",pName,Agresor[playerid]);
				SendRadioMessage(1, -1, string,playerid);
			}
		}
	}
	if(PlayerInfo[playerid][pCargos] > 0)
	{
		if(PlayerInfo[playerid][pCargos] == 1 && CagoSeguro[playerid] == 1)
		{
			PlayerInfo[playerid][pCargos] = 0;
			SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
			CagoSeguro[playerid] = 0;
		}
		/*else
		{
			if(GetPlayerInterior(playerid) > 0)
			{
				SetTimerEx("Encerrando2",2000,false,"d",playerid);
				return 1;
			}
			GetPlayerPos(playerid, DeathXC[playerid], DeathYC[playerid], DeathZC[playerid]);
			SetSpawnInfo(playerid, 0, 0,DeathXC[playerid],DeathYC[playerid],DeathZC[playerid],0,0,0,0,0,0,0);
			VariableCaido[playerid] = 1;
			return 1;
		}*/
	}
	return 1;
}

public MostrarMapas(playerid)
{
	GangZoneShowForPlayer(playerid, isla[1], 0xF6C91DA3);
	GangZoneShowForPlayer(playerid, isla[2], 0x2B801DD2);
	GangZoneShowForPlayer(playerid, isla[3], 0xF6C91DA3);
	GangZoneShowForPlayer(playerid, isla[4], 0x2B801DD2);
	GangZoneShowForPlayer(playerid, isla[5], 0xF6C91DA3);
	GangZoneShowForPlayer(playerid, isla[6], 0x2B801DD2);
	GangZoneShowForPlayer(playerid, pistas[1], 0x060605FF);
	GangZoneShowForPlayer(playerid, pistas[2], 0x060605FF);
	GangZoneShowForPlayer(playerid, pistas[3], 0x060605FF);
	GangZoneShowForPlayer(playerid, pistas[4], 0x060605FF);
	GangZoneShowForPlayer(playerid, pistas[5], 0x060605FF);
	GangZoneShowForPlayer(playerid, pistas[6], 0x060605FF);
	GangZoneShowForPlayer(playerid, pistas[7], 0x060605FF);
	GangZoneShowForPlayer(playerid, pistas[8], 0x060605FF);
	GangZoneShowForPlayer(playerid, suelo[1], 0x7B8384FF);
	GangZoneShowForPlayer(playerid, suelo[2], 0x7B8384FF);
	GangZoneShowForPlayer(playerid, suelo[3], 0x7B8384FF);

	GangZoneShowForPlayer(playerid, muelles[1], 0x7B8384FF);
	GangZoneShowForPlayer(playerid, muelles[2], 0x7B8384FF);
	GangZoneShowForPlayer(playerid, muelles[3], 0x7B8384FF);
	GangZoneShowForPlayer(playerid, muelles[4], 0x7B8384FF);

	GangZoneShowForPlayer(playerid, territorios[1], 0x841ce796);
	GangZoneShowForPlayer(playerid, territorios[2], 0x00CC0096);

}

public OnVehicleDeath(vehicleid, killerid)
{
    new string[128];
	Loop(i,MAX_PLAYERS)
	{
	    if(vehicleid == autos[i])
		{
    		format(string, sizeof(string), "Tu {DBED15}%s{FFFFFF} fue remolcado al último lugar donde lo estacionaste.", NombreAuto[GetVehicleModel(autos[i])-400]);
    		SendClientMessage(i,-1, string);
    		SetTimerEx("RespawnearV",2000,false,"d",vehicleid);
    		Baul[vehicleid] = 0;
		}
		if(vehicleid == autos2[i])
		{
    		format(string, sizeof(string), "Tu {DBED15}%s{FFFFFF} fue remolcado al último lugar donde lo estacionaste.", NombreAuto[GetVehicleModel(autos2[i])-400]);
    		SendClientMessage(i,-1, string);
    		SetTimerEx("RespawnearV",2000,false,"d",vehicleid);
    		Baul[vehicleid] = 0;
		}
		if(vehicleid == autos3[i])
		{
    		format(string, sizeof(string), "Tu {DBED15}%s{FFFFFF} fue remolcado al último lugar donde lo estacionaste.", NombreAuto[GetVehicleModel(autos3[i])-400]);
    		SendClientMessage(i,-1, string);
    		SetTimerEx("RespawnearV",2000,false,"d",vehicleid);
    		Baul[vehicleid] = 0;
		}
		if(vehicleid == autos4[i])
		{
    		format(string, sizeof(string), "Tu {DBED15}%s{FFFFFF} fue remolcado al último lugar donde lo estacionaste.", NombreAuto[GetVehicleModel(autos4[i])-400]);
    		SendClientMessage(i,-1, string);
    		SetTimerEx("RespawnearV",2000,false,"d",vehicleid);
    		Baul[vehicleid] = 0;
		}
	}
	if(CAMION(vehicleid))
	{
	    if(CamionCargado[vehicleid] != 0)
	    {
	        Loop(e,MAX_PLAYERS)
	        {
				if(Chofer[vehicleid] == e)
				{
					CamioneroFallado(e,vehicleid);
            	}
			}
		}
    }
    return 1;
}

public OnPlayerSpawn(playerid)
{
 	if(IsPlayerNPC(playerid))
	{
		new npcname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, npcname, sizeof(npcname));
		if(!strcmp(npcname,".Motorman1"))
		{
			PutPlayerInVehicle(playerid, NPC_Tren[0], 0);
			SetPlayerSkin(playerid,71);
			ColorJugadorDefault(playerid);
			TrenUno = playerid;
			SetVehicleColor(NPC_Tren[0], 1, 1);
		}
		if(!strcmp(npcname,".Motorman2"))
		{
			PutPlayerInVehicle(playerid, NPC_Tren[3], 0);
			SetPlayerSkin(playerid,71);
			ColorJugadorDefault(playerid);
			TrenDos = playerid;
			SetVehicleColor(NPC_Tren[1], 1, 1);
		}
		if(!strcmp(npcname,".Motorman3"))
		{
			PutPlayerInVehicle(playerid, NPC_Tren[1], 0);
			SetPlayerSkin(playerid,71);
			ColorJugadorDefault(playerid);
			TrenTres = playerid;
			SetVehicleColor(NPC_Tren[2], 1, 1);

		}
		if(!strcmp(npcname,".Motorman4"))
		{
			PutPlayerInVehicle(playerid, NPC_Tren[2], 0);
			SetPlayerSkin(playerid,71);
			ColorJugadorDefault(playerid);
			TrenCuatro = playerid;
			SetVehicleColor(NPC_Tren[3], 1, 1);
		}
		if(!strcmp(npcname, ".Motorman5", true))
		{
			PutPlayerInVehicle(playerid, NPC_Tren[4], 0);
			SetPlayerSkin(playerid, 71);
			PlayerInfo[playerid][pDuty] = 1;
			ColorJugadorDefault(playerid);
		}
		if(!strcmp(npcname, ".Miguel", true))
		{
			PutPlayerInVehicle(playerid, NPC_Tren[5], 0);
			SetPlayerSkin(playerid, 71);
			PlayerInfo[playerid][pDuty] = 1;
			ColorJugadorDefault(playerid);
		}
		if(!strcmp(npcname, ".Sergio", true))
		{
			SetPlayerSkin(playerid, 28);
			ColorJugadorDefault(playerid);
		}
	   	if(!strcmp(npcname, ".Marcelo", true)) //Chequea si el nombre del NPC es Correcto.
	   	{
			SetPlayerSkin(playerid,281);
			HabloM[playerid] = 1;
			Marcelo = playerid;
			SetTimer("HacerQueHableM",15000,true);
			Attach3DTextLabelToPlayer(Marcelo1, playerid, 0.0, 0.0, 0.1);
	   		DarArma(playerid, 24);
			SetPlayerColor(playerid,0x00CCFF00);
    	}
    	if(!strcmp(npcname, ".Alejandro", true)) //Chequea si el nombre del NPC es Correcto.
    	{
            SetPlayerInterior(playerid, 0);
      		SetPlayerSkin(playerid, 71);
			HabloA[playerid] = 1;
			Alejandro = playerid;
			SetTimer("HacerQueHableA",15000,true);
			Attach3DTextLabelToPlayer(Alejandro1, playerid, 0.0, 0.0, 0.1);
      		DarArma(playerid, 25);
			SetPlayerColor(playerid,0x00CCFF00);
    	}
		if(!strcmp(npcname, ".Ignacio", true)) //Chequea si el nombre del NPC es Correcto.
		{
          	SetPlayerInterior(playerid, 0);
			SetPlayerSkin(playerid, 71);
			HabloI[playerid] = 1;
			DarArma(playerid, 25);
			Ignacio = playerid;
			SetTimer("HacerQueHableI",15000,true);
			Attach3DTextLabelToPlayer(Ignacio1, playerid, 0.0, 0.0, 0.1);
			SetPlayerColor(playerid, 0x00CCFF00);
		}
		if(!strcmp(npcname, ".Hugo", true)) //Chequea si el nombre del NPC es Correcto.
		{
        	SetPlayerInterior(playerid, 0);
			SetPlayerSkin(playerid, 71);
			HabloH[playerid] = 1;
			DarArma(playerid, 25);
			Hugo = playerid;
			SetTimer("HacerQueHableH",15000,true);
			Attach3DTextLabelToPlayer(Hugo1, playerid, 0.0, 0.0, 0.1);
			SetPlayerColor(playerid, 0x00CCFF00);
		}
		if(!strcmp(npcname, ".HippiePepe", true)) //Chequea si el nombre del NPC es Correcto.
		{
        	SetPlayerInterior(playerid, 0);
			SetPlayerSkin(playerid, 50);
			HabloHp[playerid] = 1;
			HippePepe = playerid;
			SetTimer("HacerQueHableHp",15000,true);
			Attach3DTextLabelToPlayer(HippePepe1, playerid, 0.0, 0.0, 0.1);
			SetPlayerColor(playerid, 0xAFAFAF00);
		}
		if(!strcmp(npcname, ".Angelica", true)) //Chequea si el nombre del NPC es Correcto.
		{
        	SetPlayerInterior(playerid, 0);
			SetPlayerSkin(playerid, 192);
			HabloAg[playerid] = 1;
			Angelica = playerid;
			SetTimer("HacerQueHableAg",15000,true);
			Attach3DTextLabelToPlayer(Angelica1, playerid, 0.0, 0.0, 0.1);
			SetPlayerColor(playerid, 0x00CCFF00);
		}
		if(!strcmp(npcname, ".Jorge", true)) //Chequea si el nombre del NPC es Correcto.
		{
        	SetPosEx(playerid,1146.3733,-1321.9019,-10.7922,0,6,6);
			SetPlayerSkin(playerid, 240);
			HabloJe[playerid] = 1;
			Jorge = playerid;
			SetTimer("HacerQueHableJe",15000,true);
			Attach3DTextLabelToPlayer(Jorge1, playerid, 0.0, 0.0, 0.1);
			SetPlayerColor(playerid, 0xFFFFFF00);
		}
		if(!strcmp(npcname, ".Camello1", true))
		{
			SetPlayerSkin(playerid,29);
			Attach3DTextLabelToPlayer(CamelloTexto, playerid, 0.0, 0.0, 0.2);
			SetPlayerColor(playerid,0xFF330000);
			Camello = playerid;
		}
		if(!strcmp(npcname, ".Mao", true))
		{
			SetPlayerSkin(playerid,57);
			Attach3DTextLabelToPlayer(Mao1, playerid, 0.0, 0.0, 0.2);
			SetPlayerColor(playerid,0xFFFFFF00);
			HabloMo[playerid] = 1;
			Mao = playerid;
			SetTimer("HacerQueHableMo",15000,true);
		}
		return 1;
	}
	KillTimer(LCHAT[playerid]);
	new country[256];
	GetPlayerCountry(playerid, country, sizeof(country));
	KillTimer(LoginTimer[playerid]);
  	if(PrimerSpawn[playerid] == 0)
	{
	    if(LoggedYet[playerid] == 0)
	    {
			CargarMapeosEx(playerid);
			new cadena[128];
			PlayerPlaySound(playerid, 3402, 0.0, 0.0, 0.0);
			LimpiarChat(playerid, 25, 0x000000FF);
			PaisActual[playerid] = GetPlayerCountry(playerid, country, sizeof(country));
			if(strcmp(PlayerInfo[playerid][jConexion], "1", false) != 0)
			{
			    KillTimer(LCHAT[playerid]);
			    TextDrawHideForPlayer(playerid, CN);
				TextDrawHideForPlayer(playerid, CN2);
				TextDrawHideForPlayer(playerid, CN3);
				TextDrawHideForPlayer(playerid, CN4);
			    ForumPermissions(playerid);
				if(PlayerInfo[playerid][@Nivel] == 1) SetTimerEx("MostrarAyudaComandos", 1000, 0, "i", playerid);
				new texto[64], Query[128];
			    format(texto, sizeof(texto), "%s", country);
			    format(Query, sizeof(Query), "UPDATE `usuarios` SET `PaisU`='%s' WHERE `Username`='%s'",texto,PlayerName(playerid));
				mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
				SendClientMessage(playerid, 0xafafafFF, "-----------------------------------------------------------------------------------------------------");
				format(cadena, sizeof(cadena), "{FFFFFF}Hola {00CCFF}%s{FFFFFF}, te vimos por última vez el %s", PlayerName(playerid), PlayerInfo[playerid][jConexion]);
				SendClientMessage(playerid, 0xafafafFF, cadena);
				SendClientMessage(playerid, 0xafafafFF, "-----------------------------------------------------------------------------------------------------");
	            LoggedYet[playerid] = 1;
	            PlayerInfo[playerid][pOnline] = 1;
	            if(PlayerInfo[playerid][pStats] == 0) SendClientMessage(playerid,-1,"Aún no has recibido tus stats, utiliza {00CC00}/recibir stats{FFFFFF} para recibirlas.");
				if(PlayerInfo[playerid][@Nivel] == 1) DisableRemoteVehicleCollisions(playerid,1);
				new banda = PlayerInfo[playerid][pFaccion];
				TogglePlayerControllable(playerid, 0);
				SetPVarInt(playerid, "IsFrozen", 0);
				if(BandasInfo[banda][EnUso] == 0)
				{
				    PlayerInfo[playerid][pFaccion] = 0;
				    PlayerInfo[playerid][pRango] = 0;
				}
			}
		}
   		else
		{
		    PlayerInfo[playerid][pSed] = 0;       PlayerInfo[playerid][pHambre] = 0;
		    SetPlayerProgressBarValue(playerid,Progressbar[playerid][Sed], PlayerInfo[playerid][pSed]);
			SetPlayerProgressBarValue(playerid,Progressbar[playerid][Hambre], PlayerInfo[playerid][pHambre]);
		    KillTimer(LCHAT[playerid]);
		    TextDrawHideForPlayer(playerid, CN);
			TextDrawHideForPlayer(playerid, CN2);
			TextDrawHideForPlayer(playerid, CN3);
			TextDrawHideForPlayer(playerid, CN4);
		    new texto[64], Query[128];
		    format(texto, sizeof(texto), "%s", country);
		    ForumPermissions(playerid);
		    format(Query, sizeof(Query), "UPDATE `usuarios` SET `PaisU`='%s' WHERE `Username`='%s'",texto,PlayerName(playerid));
			mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
			new text0[128];
			format(text0,sizeof(text0),"{FFFFFF}Felicitaciones {00CCFF}%s{FFFFFF}, tu cuenta fue creada correctamente.",PlayerName(playerid));
			SendClientMessage(playerid,0xAFAFAFFF,text0);
			KillTimer(LCHAT[playerid]);
			SetTimerEx("MostrarAyudaComandos", 1000, 0, "i", playerid);
			if(PlayerInfo[playerid][pStats] == 0) SendClientMessage(playerid,-1,"Bienvenido a "SERVER_NAME", utiliza {00CC00}/recibir stats{FFFFFF} para recibir un pack de inicio.");
			DisableRemoteVehicleCollisions(playerid,1);
			PlayerInfo[playerid][pOnline] = 1;
			PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
		}
		
		/*GetPlayerCountry(playerid, country, sizeof(country));
		if(strcmp(PlayerInfo[playerid][pPaisRegistro], "Desconocido", true) == 0){ ActualizarPais(playerid);}
		if(strcmp(PlayerInfo[playerid][pPaisRegistro], "desconocido", true) == 0){ ActualizarPais(playerid);}
		if(strcmp(PlayerInfo[playerid][pPaisRegistro], "Unknown", true) == 0){ ActualizarPais(playerid);}
		if(strcmp(PlayerInfo[playerid][pPaisRegistro], "unknown", true) == 0){ ActualizarPais(playerid);}
		if(strcmp(PlayerInfo[playerid][pPaisRegistro], "0", true) == 0){ ActualizarPais(playerid);}
		if(PlayerInfo[playerid][pBloqueado] == 0)
		{
		    if(strfind(PlayerInfo[playerid][pPaisRegistro], country, true) != -1)
			{
			    if(PlayerInfo[playerid][pAdmin] != ADMIN_LEVEL_USER || PlayerInfo[playerid][pFaccion] == 1)
			    {
			        new string[126];
			        KillTimer(LCHAT[playerid]);
			    	if(PlayerInfo[playerid][pFaccion] == 1) format(string,128,"El policía %s entró desde un país diferente, su cuenta fue bloqueada.",PlayerName(playerid), playerid,PlayerInfo[playerid][@Nivel],country,PlayerInfo[playerid][pPaisRegistro]);
					else if(PlayerInfo[playerid][pAdmin] != 0) format(string,128,"El %s ingresó al servidor desde un país distinto, su cuenta fue bloqueada.",PlayerInfo[playerid][pPaisRegistro],country);
	                MensajeAdmin(0xFFDBED15FF, string, 2);
					PlayerInfo[playerid][pBloqueado] = 1;
					new query[255];
					format(query,sizeof(query),"UPDATE `usuarios` SET `Bloqueado`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pBloqueado],PlayerName(playerid));
	            	mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	            	SendClientMessage(playerid,-1,"Atención: Su cuenta fue bloqueada por ingresar desde un país distinto.");
	            	SendClientMessage(playerid,-1,"Contacte un administrador en https://"WEB_ROL"/foro/index.php para desbloquear su cuenta.");
					SetTimerEx("KickXD",1500,0,"d",playerid);
	            }
			}
		}*/
		ViendoGPS[playerid] = 0;
		for(new i = 0; i < MAX_TEXTDRAWS; i++)
		{
			if(TDPGPSCreado[playerid][i] > 0)
			{
				PlayerTextDrawDestroy(playerid, TextDPGPS[playerid][i]);
				PlayerTextDrawDestroy(playerid, TextDPGPS2[playerid][i]);
				TDPGPSCreado[playerid][i] = 0;
			}
		}
		for(new i = 0; i < TDGPSCreadoS; i++) TextDrawHideForPlayer(playerid, TextDGPS[i]);
		//ESCUELA DE STRIP
		RemoveBuildingForPlayer(playerid, 2024, 960.2500, -58.0625, 1000.3984, 0.25);
		RemoveBuildingForPlayer(playerid, 2118, 960.8672, -45.6484, 1000.5234, 0.25);
		//Camionero NUEVO
		RemoveBuildingForPlayer(playerid, 3682, -1029.3438, -702.8125, 54.8516, 0.25);
RemoveBuildingForPlayer(playerid, 17339, -1041.6641, -728.3359, 44.9531, 0.25);
RemoveBuildingForPlayer(playerid, 17340, -1072.8281, -620.6328, 40.2969, 0.25);
RemoveBuildingForPlayer(playerid, 17341, -1083.4766, -687.9453, 31.0234, 0.25);
RemoveBuildingForPlayer(playerid, 17342, -1107.0703, -620.8906, 40.2969, 0.25);
RemoveBuildingForPlayer(playerid, 17343, -1055.5313, -617.6094, 82.6094, 0.25);
RemoveBuildingForPlayer(playerid, 17344, -1056.0469, -632.4141, 82.7891, 0.25);
RemoveBuildingForPlayer(playerid, 17345, -1026.7500, -705.1719, 82.4063, 0.25);
RemoveBuildingForPlayer(playerid, 17346, -1014.3594, -703.8828, 83.2109, 0.25);
RemoveBuildingForPlayer(playerid, 17347, -1055.1094, -603.5703, 61.8203, 0.25);
RemoveBuildingForPlayer(playerid, 17348, -1004.2969, -704.1484, 63.5000, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -1124.1797, -682.5625, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -1124.1797, -706.7500, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -1124.1797, -658.3750, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -1124.1797, -634.1953, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1114.4531, -595.7969, 36.2578, 0.25);
RemoveBuildingForPlayer(playerid, 17013, -1107.0703, -620.8906, 40.2969, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1107.3906, -595.8281, 36.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1101.1250, -595.8594, 36.2578, 0.25);
RemoveBuildingForPlayer(playerid, 17014, -1041.6641, -728.3359, 44.9531, 0.25);
RemoveBuildingForPlayer(playerid, 17024, -1026.7500, -705.1719, 82.4063, 0.25);
RemoveBuildingForPlayer(playerid, 3673, -1029.3438, -702.8125, 54.8516, 0.25);
RemoveBuildingForPlayer(playerid, 17001, -1083.4766, -687.9453, 31.0234, 0.25);
RemoveBuildingForPlayer(playerid, 17454, -1089.9297, -684.7891, 44.0859, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1037.4219, -694.1016, 36.1172, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1030.3594, -694.1406, 36.1172, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1024.0938, -694.1719, 36.1172, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -999.7813, -682.5625, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -999.7813, -706.7500, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 17022, -1004.2969, -704.1484, 63.5000, 0.25);
RemoveBuildingForPlayer(playerid, 17023, -1014.3594, -703.8828, 83.2109, 0.25);
RemoveBuildingForPlayer(playerid, 3674, -1020.1094, -702.4375, 57.3359, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -973.7031, -706.7500, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -973.7031, -682.5625, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 3637, -992.2891, -711.9766, 38.9922, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -999.7813, -658.3750, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -973.7031, -658.3750, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 17017, -1056.0469, -632.4141, 82.7891, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -973.7031, -634.1953, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 1278, -999.7813, -634.1953, 38.9531, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1043.6406, -632.3281, 36.2578, 0.25);
RemoveBuildingForPlayer(playerid, 17021, -1072.8281, -620.6328, 40.2969, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1043.6406, -626.0625, 36.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1065.9375, -595.8594, 36.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1079.2656, -595.7969, 36.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1072.2031, -595.8281, 36.2578, 0.25);
RemoveBuildingForPlayer(playerid, 17015, -1055.1094, -603.5703, 61.8203, 0.25);
RemoveBuildingForPlayer(playerid, 17016, -1055.5313, -617.6094, 82.6094, 0.25);
RemoveBuildingForPlayer(playerid, 3643, -1043.6406, -619.0000, 36.2578, 0.25);
		//COMISARIA LSPD
		RemoveBuildingForPlayer(playerid, 1715, 221.9766, 123.7344, 1009.2188, 0.25);
		RemoveBuildingForPlayer(playerid, 1715, 222.0781, 124.6641, 1009.2188, 0.25);
		RemoveBuildingForPlayer(playerid, 1715, 223.6016, 123.6797, 1009.2188, 0.25);
		RemoveBuildingForPlayer(playerid, 1715, 223.6406, 124.6250, 1009.2188, 0.25);
		RemoveBuildingForPlayer(playerid, 1715, 222.0547, 125.6719, 1009.2188, 0.25);
		RemoveBuildingForPlayer(playerid, 1715, 222.8281, 127.2266, 1009.2188, 0.25);
		RemoveBuildingForPlayer(playerid, 1715, 223.6250, 125.6797, 1009.2188, 0.25);
		RemoveBuildingForPlayer(playerid, 1715, 228.3516, 124.1172, 1009.2188, 0.25);
		RemoveBuildingForPlayer(playerid, 1714, 229.1953, 126.0234, 1009.2109, 0.25);
		RemoveBuildingForPlayer(playerid, 1715, 229.6328, 124.1172, 1009.2109, 0.25);
		RemoveBuildingForPlayer(playerid, 1715, 235.7500, 109.5469, 1009.2188, 0.25);
		RemoveBuildingForPlayer(playerid, 1715, 235.8438, 110.8203, 1009.2188, 0.25);
		RemoveBuildingForPlayer(playerid, 1714, 237.8438, 109.8906, 1009.2734, 0.25);
		//
		RemoveBuildingForPlayer(playerid, 2255, 1202.2500, 13.7500, 1001.6797, 0.25);
		RemoveBuildingForPlayer(playerid, 1374, -1960.9844, -246.5859, 27.1953, 0.25);
		RemoveBuildingForPlayer(playerid, 1374, -1946.0313, -233.4766, 27.0000, 0.25);
		RemoveBuildingForPlayer(playerid, 1374, -1960.6563, -71.3516, 27.0078, 0.25);
		RemoveBuildingForPlayer(playerid, 1374, -1938.8438, -57.7500, 27.0000, 0.25);
		RemoveBuildingForPlayer(playerid, 4024, 1479.8672, -1790.3984, 56.0234, 0.25);
		RemoveBuildingForPlayer(playerid, 4044, 1481.1875, -1785.0703, 22.3828, 0.25);
		RemoveBuildingForPlayer(playerid, 1527, 1448.2344, -1755.8984, 14.5234, 0.25);
		RemoveBuildingForPlayer(playerid, 1231, 1432.3047, -1832.9141, 15.2891, 0.25);
		RemoveBuildingForPlayer(playerid, 4002, 1479.8672, -1790.3984, 56.0234, 0.25);
		RemoveBuildingForPlayer(playerid, 3980, 1481.1875, -1785.0703, 22.3828, 0.25);
		RemoveBuildingForPlayer(playerid, 4003, 1481.0781, -1747.0313, 33.5234, 0.25);
		RemoveBuildingForPlayer(playerid, 673, 1405.7656, -1424.2500, 13.1797, 0.25);
		RemoveBuildingForPlayer(playerid, 647, 1409.7969, -1429.2734, 14.6250, 0.25);
		RemoveBuildingForPlayer(playerid, 673, 1411.6250, -1430.1328, 13.1797, 0.25);
		RemoveBuildingForPlayer(playerid, 647, 1408.5313, -1425.3984, 14.6250, 0.25);
		RemoveBuildingForPlayer(playerid, 647, 1409.8672, -1418.1328, 14.5000, 0.25);
		RemoveBuildingForPlayer(playerid, 673, 1411.5703, -1416.5391, 12.9063, 0.25);
		RemoveBuildingForPlayer(playerid, 1258, 1510.8906, -1607.3125, 13.6953, 0.25);
		RemoveBuildingForPlayer(playerid, 955, 1789.2109, -1369.2656, 15.1641, 0.25);
		RemoveBuildingForPlayer(playerid, 3669, 1762.4453, -2096.7109, 15.0469, 0.25);
		RemoveBuildingForPlayer(playerid, 956, 1634.1094, -2237.5313, 12.8906, 0.25);
		RemoveBuildingForPlayer(playerid, 3634, 1762.4453, -2096.7109, 15.0469, 0.25);
		RemoveBuildingForPlayer(playerid, 955, 1729.7891, -1943.0469, 12.9453, 0.25);
		RemoveBuildingForPlayer(playerid, 3707, 2720.3203, -2530.9141, 19.9766, 0.25);
		RemoveBuildingForPlayer(playerid, 3708, 2720.3203, -2530.9141, 19.9766, 0.25);
		RemoveBuildingForPlayer(playerid, 955, 2060.1172, -1897.6406, 12.9297, 0.25);
		RemoveBuildingForPlayer(playerid, 1308, 9.0234, 15.1563, -5.7109, 0.25);
		RemoveBuildingForPlayer(playerid, 1535, 2482.6484, -1994.9609, 12.9141, 0.25);
		RemoveBuildingForPlayer(playerid, 5341, 2489.5156, -1987.4219, 14.9453, 0.25);
		RemoveBuildingForPlayer(playerid, 956, 2480.8594, -1959.2734, 12.9609, 0.25);
		RemoveBuildingForPlayer(playerid, 1676, 1941.6563, -1778.4531, 14.1406, 0.25);
		RemoveBuildingForPlayer(playerid, 1676, 1941.6563, -1774.3125, 14.1406, 0.25);
		RemoveBuildingForPlayer(playerid, 955, 1928.7344, -1772.4453, 12.9453, 0.25);
		RemoveBuildingForPlayer(playerid, 1676, 1941.6563, -1771.3438, 14.1406, 0.25);
		RemoveBuildingForPlayer(playerid, 1676, 1941.6563, -1767.2891, 14.1406, 0.25);
		RemoveBuildingForPlayer(playerid, 956, 2139.5156, -1161.4844, 23.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 956, 2153.2344, -1016.1484, 62.2344, 0.25);
		RemoveBuildingForPlayer(playerid, 3654, 2372.6875, -1132.3359, 29.8984, 0.25);
		RemoveBuildingForPlayer(playerid, 17910, 2916.7656, -1877.6484, 0.0703, 0.25);
		RemoveBuildingForPlayer(playerid, 3695, 2239.9297, -1790.6953, 17.0078, 0.25);
		RemoveBuildingForPlayer(playerid, 3695, 2282.9922, -1790.6953, 17.0078, 0.25);
		RemoveBuildingForPlayer(playerid, 3695, 2314.8203, -1790.6953, 17.0078, 0.25);
		RemoveBuildingForPlayer(playerid, 3695, 2352.7188, -1790.6953, 17.0078, 0.25);
		RemoveBuildingForPlayer(playerid, 3695, 2387.8203, -1790.6953, 17.0078, 0.25);
		RemoveBuildingForPlayer(playerid, 17953, 2916.7656, -1877.6484, 0.0703, 0.25);
		RemoveBuildingForPlayer(playerid, 1408, 2229.0469, -1810.0313, 13.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1807.3281, 13.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 3584, 2239.9297, -1790.6953, 17.0078, 0.25);
		RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1775.5078, 13.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 1408, 2273.6953, -1810.0313, 13.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 3584, 2282.9922, -1790.6953, 17.0078, 0.25);
		RemoveBuildingForPlayer(playerid, 1408, 2267.8125, -1767.2734, 13.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 1408, 2273.3359, -1767.3438, 13.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 645, 2285.7578, -1762.1250, 12.2891, 0.25);
		RemoveBuildingForPlayer(playerid, 3584, 2314.8203, -1790.6953, 17.0078, 0.25);
		RemoveBuildingForPlayer(playerid, 1408, 2304.7813, -1767.3828, 13.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 1307, 2322.6484, -1815.4141, 12.7500, 0.25);
		RemoveBuildingForPlayer(playerid, 645, 2332.8281, -1817.7109, 12.1172, 0.25);
		RemoveBuildingForPlayer(playerid, 17887, 2343.6094, -1784.5078, 20.3125, 0.25);
		RemoveBuildingForPlayer(playerid, 673, 2349.6172, -1763.3438, 11.6328, 0.25);
		RemoveBuildingForPlayer(playerid, 955, 2325.9766, -1645.1328, 14.2109, 0.25);
		RemoveBuildingForPlayer(playerid, 3584, 2352.7188, -1790.6953, 17.0078, 0.25);
		RemoveBuildingForPlayer(playerid, 1408, 2376.6172, -1767.2734, 13.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1775.5078, 13.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 3584, 2387.8203, -1790.6953, 17.0078, 0.25);
		RemoveBuildingForPlayer(playerid, 645, 2387.0234, -1763.6406, 12.1797, 0.25);
		RemoveBuildingForPlayer(playerid, 955, 2352.1797, -1357.1563, 23.7734, 0.25);
		RemoveBuildingForPlayer(playerid, 3649, 2372.6875, -1132.3359, 29.8984, 0.25);
		RemoveBuildingForPlayer(playerid, 17907, 2426.1641, -1110.0938, 43.4844, 0.25);
		RemoveBuildingForPlayer(playerid, 6253, 1305.4688, -1619.7422, 13.3984, 0.25);
		RemoveBuildingForPlayer(playerid, 6046, 1305.4688, -1619.7422, 13.3984, 0.25);
		RemoveBuildingForPlayer(playerid, 955, 1154.7266, -1460.8906, 15.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 1307, 937.9375, -986.5391, 37.0313, 0.25);
		RemoveBuildingForPlayer(playerid, 3778, 337.4531, -1875.0000, 3.4063, 0.25);
		RemoveBuildingForPlayer(playerid, 3615, 337.4531, -1875.0000, 3.4063, 0.25);
		RemoveBuildingForPlayer(playerid, 13744, 1272.5938, -803.1094, 86.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 705, -2491.5859, -670.7188, 138.4297, 0.25);
		RemoveBuildingForPlayer(playerid, 10496, -2501.7891, -701.1875, 227.1484, 0.25);
		RemoveBuildingForPlayer(playerid, 10511, -2276.3438, -14.9219, 40.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 3840, -2728.2422, -159.9297, 8.1406, 0.25);
		RemoveBuildingForPlayer(playerid, 3840, -2728.2734, -55.3281, 8.1406, 0.25);
		RemoveBuildingForPlayer(playerid, 10675, -2529.1875, -705.0391, 141.5703, 0.25);
		RemoveBuildingForPlayer(playerid, 10369, -2276.3438, -14.9219, 40.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2529.2813, -594.3281, 133.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2528.0781, -719.9219, 139.9063, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2524.0156, -594.3281, 133.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2522.8125, -719.9219, 139.9063, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2517.5469, -719.9219, 139.9063, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2518.7500, -594.3281, 133.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 654, -2521.0469, -589.3828, 129.2578, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2514.8672, -690.9375, 139.9063, 0.25);
		RemoveBuildingForPlayer(playerid, 654, -2510.4531, -739.5625, 129.5234, 0.25);
		RemoveBuildingForPlayer(playerid, 10357, -2501.7891, -701.1875, 227.1484, 0.25);
		RemoveBuildingForPlayer(playerid, 1684, -2508.5000, -680.9531, 139.8516, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2513.4844, -594.3281, 133.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2508.2188, -594.3281, 133.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 1684, -2508.4063, -669.0938, 139.8516, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2502.9531, -594.3281, 133.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2497.6875, -594.3281, 133.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2492.4219, -594.3281, 133.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 654, -2494.4844, -742.8672, 131.0781, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2487.1563, -594.3281, 133.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2484.2969, -597.1641, 133.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2484.2969, -602.4297, 133.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2484.2969, -607.6953, 133.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 654, -2444.1406, -694.1406, 130.9141, 0.25);
		RemoveBuildingForPlayer(playerid, 1341, -2384.2266, -584.0078, 132.1094, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2541.5000, -690.9609, 139.9063, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2541.5000, -696.1875, 139.9063, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2541.5000, -701.4219, 139.9063, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2541.5000, -706.6563, 139.9063, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2541.5000, -711.8828, 139.9063, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2541.5000, -717.1172, 139.9063, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2538.6094, -719.9219, 139.9063, 0.25);
		RemoveBuildingForPlayer(playerid, 1278, -2539.8359, -718.3203, 152.5078, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2533.3438, -719.9219, 139.9063, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2539.8125, -594.3281, 133.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 1411, -2534.5469, -594.3281, 133.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 3826, -2728.2422, -159.9297, 8.1406, 0.25);
		RemoveBuildingForPlayer(playerid, 3826, -2728.2734, -55.3281, 8.1406, 0.25);
		RemoveBuildingForPlayer(playerid, 10840, -1666.1250, -62.0781, 10.9453, 0.25);
		RemoveBuildingForPlayer(playerid, 10843, -1711.4688, -107.5703, 10.6172, 0.25);
		RemoveBuildingForPlayer(playerid, 10892, -1711.4688, -107.5703, 10.6172, 0.25);
		RemoveBuildingForPlayer(playerid, 10912, -1666.1250, -62.0781, 10.9453, 0.25);
		RemoveBuildingForPlayer(playerid, 10914, -1706.4766, 13.0156, 7.4063, 0.25);
		RemoveBuildingForPlayer(playerid, 11024, -2076.2734, 359.3203, 44.5938, 0.25);
		RemoveBuildingForPlayer(playerid, 3868, -2120.7656, 336.8672, 49.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 3868, -2103.3281, 336.8672, 49.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 3868, -2032.2891, 336.8672, 49.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 3868, -2022.0859, 347.1328, 49.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 3868, -2022.0859, 364.5781, 49.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 3868, -2032.2969, 380.7422, 49.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 3868, -2131.1797, 347.2813, 49.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 3868, -2131.1797, 364.7266, 49.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 3868, -2049.7344, 336.8672, 49.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 3867, -2131.1797, 347.2813, 49.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 3867, -2120.7656, 336.8672, 49.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 3867, -2103.3281, 336.8672, 49.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 3867, -2049.7344, 336.8672, 49.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 3867, -2032.2891, 336.8672, 49.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 3867, -2022.0859, 347.1328, 49.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 3867, -2131.1797, 364.7266, 49.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 10949, -2076.2734, 359.3203, 44.5938, 0.25);
		RemoveBuildingForPlayer(playerid, 3867, -2032.2969, 380.7422, 49.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 3867, -2022.0859, 364.5781, 49.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 792, -1995.4766, 298.0859, 34.2734, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -1685.9688, 409.6406, 6.3828, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -1679.3594, 403.0547, 6.3828, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -1681.8281, 413.7813, 6.3828, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -1675.2188, 407.1953, 6.3828, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -1676.5156, 419.1172, 6.3828, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -1669.9063, 412.5313, 6.3828, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -1672.1328, 423.5000, 6.3828, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -1665.5234, 416.9141, 6.3828, 0.25);
		RemoveBuildingForPlayer(playerid, 955, -1350.1172, 492.2891, 10.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 956, -1350.1172, 493.8594, 10.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 955, -2118.9688, -423.6484, 34.7266, 0.25);
		RemoveBuildingForPlayer(playerid, 955, -2118.6172, -422.4141, 34.7266, 0.25);
		RemoveBuildingForPlayer(playerid, 955, -2097.2734, -398.3359, 34.7266, 0.25);
		RemoveBuildingForPlayer(playerid, 11280, -2137.6875, -198.0781, 34.4141, 0.25);
		RemoveBuildingForPlayer(playerid, 1278, -2126.0859, -279.8203, 48.3516, 0.25);
		RemoveBuildingForPlayer(playerid, 955, -2092.0859, -490.0547, 34.7266, 0.25);
		RemoveBuildingForPlayer(playerid, 955, -2063.2734, -490.0547, 34.7266, 0.25);
		RemoveBuildingForPlayer(playerid, 955, -2005.6484, -490.0547, 34.7266, 0.25);
		RemoveBuildingForPlayer(playerid, 955, -2034.4609, -490.0547, 34.7266, 0.25);
		RemoveBuildingForPlayer(playerid, 955, -2068.5625, -398.3359, 34.7266, 0.25);
		RemoveBuildingForPlayer(playerid, 955, -2039.8516, -398.3359, 34.7266, 0.25);
		RemoveBuildingForPlayer(playerid, 955, -2011.1406, -398.3359, 34.7266, 0.25);
		RemoveBuildingForPlayer(playerid, 956, -2229.1875, 286.4141, 34.7031, 0.25);
		RemoveBuildingForPlayer(playerid, 955, -1980.7891, 142.6641, 27.0703, 0.25);
		RemoveBuildingForPlayer(playerid, 1278, -1996.7109, 238.7344, 48.6563, 0.25);
		RemoveBuildingForPlayer(playerid, 10831, -1706.4766, 13.0156, 7.4063, 0.25);
		RemoveBuildingForPlayer(playerid, 1278, -1706.1172, 33.1641, 16.6172, 0.25);
		RemoveBuildingForPlayer(playerid, 10252, -2175.7578, 661.9219, 50.1016, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -2410.8047, 970.8516, 44.4844, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -2410.8047, 976.1875, 44.4844, 0.25);
		RemoveBuildingForPlayer(playerid, 1209, -2420.2188, 984.5781, 44.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 1302, -2420.1797, 985.9453, 44.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -2410.8047, 981.5234, 44.4844, 0.25);
		RemoveBuildingForPlayer(playerid, 955, 2319.9922, 2532.8516, 10.2188, 0.25);
		RemoveBuildingForPlayer(playerid, 8145, 1493.9297, 751.0156, 20.9141, 0.25);
		RemoveBuildingForPlayer(playerid, 8376, 1325.2188, 1538.5469, 11.8984, 0.25);
		RemoveBuildingForPlayer(playerid, 8132, 1436.5938, 673.2578, 12.4297, 0.25);
		RemoveBuildingForPlayer(playerid, 7980, 1325.2188, 1538.5469, 11.8984, 0.25);
		RemoveBuildingForPlayer(playerid, 746, 1498.3672, 682.0313, 10.0859, 0.25);
		RemoveBuildingForPlayer(playerid, 8130, 1493.9297, 751.0156, 20.9141, 0.25);
		RemoveBuildingForPlayer(playerid, 955, 1520.1484, 1055.2656, 10.0000, 0.25);
		RemoveBuildingForPlayer(playerid, 956, 1659.4609, 1722.8594, 10.2188, 0.25);
		RemoveBuildingForPlayer(playerid, 1278, 2806.2109, 838.6094, 23.9297, 0.25);
		RemoveBuildingForPlayer(playerid, 1278, 2866.0313, 838.6094, 23.9297, 0.25);
		RemoveBuildingForPlayer(playerid, 1278, 2782.6641, 851.7656, 23.9297, 0.25);
		RemoveBuildingForPlayer(playerid, 1278, 2889.7344, 851.7656, 23.9297, 0.25);
		RemoveBuildingForPlayer(playerid, 1278, 2782.6641, 899.2813, 23.9297, 0.25);
		RemoveBuildingForPlayer(playerid, 1219, 2887.3047, 871.9141, 9.9766, 0.25);
		RemoveBuildingForPlayer(playerid, 1219, 2887.3047, 874.5781, 9.9766, 0.25);
		RemoveBuildingForPlayer(playerid, 1278, 2889.6172, 895.2109, 23.9297, 0.25);
		RemoveBuildingForPlayer(playerid, 1278, 2782.6641, 929.2969, 23.9297, 0.25);
		RemoveBuildingForPlayer(playerid, 1219, 2858.2734, 944.9766, 9.9766, 0.25);
		RemoveBuildingForPlayer(playerid, 1343, 2863.4688, 946.0156, 10.4844, 0.25);
		RemoveBuildingForPlayer(playerid, 1344, 2879.6484, 945.9688, 10.5391, 0.25);
		RemoveBuildingForPlayer(playerid, 956, 2647.6953, 1129.6641, 10.2188, 0.25);
		RemoveBuildingForPlayer(playerid, 955, 2503.1406, 1243.6953, 10.2188, 0.25);
		RemoveBuildingForPlayer(playerid, 956, 2845.7266, 1295.0469, 10.7891, 0.25);
		RemoveBuildingForPlayer(playerid, 3548, 1345.1172, 2612.5703, 12.6875, 0.25);
		RemoveBuildingForPlayer(playerid, 3548, 1667.4375, 2612.5703, 12.6875, 0.25);
		RemoveBuildingForPlayer(playerid, 3443, 1667.4375, 2612.5703, 12.6875, 0.25);
		RemoveBuildingForPlayer(playerid, 956, 1398.8438, 2222.6094, 10.4219, 0.25);
		RemoveBuildingForPlayer(playerid, 3443, 1345.1172, 2612.5703, 12.6875, 0.25);
		RemoveBuildingForPlayer(playerid, 955, 2085.7734, 2071.3594, 10.4531, 0.25);
		RemoveBuildingForPlayer(playerid, 3460, 940.3828, 1957.7109, 13.7656, 0.25);
		RemoveBuildingForPlayer(playerid, 3297, -1667.2656, 2594.5469, 82.2344, 0.25);
		RemoveBuildingForPlayer(playerid, 3300, -1464.3438, 2656.5000, 56.6484, 0.25);
		RemoveBuildingForPlayer(playerid, 3341, -1446.4531, 2639.3516, 54.8047, 0.25);
		RemoveBuildingForPlayer(playerid, 3342, -1447.2344, 2653.3047, 54.8203, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -1477.6563, 1859.7344, 31.8203, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -1464.9375, 1860.5625, 31.8203, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -1477.8516, 1867.3125, 31.8203, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -1465.4766, 1868.2734, 31.8203, 0.25);
		RemoveBuildingForPlayer(playerid, 955, -862.8281, 1536.6094, 21.9844, 0.25);
		RemoveBuildingForPlayer(playerid, 3242, -1667.2656, 2594.5469, 82.2344, 0.25);
		RemoveBuildingForPlayer(playerid, 11460, -1523.2891, 2618.5938, 65.4219, 0.25);
		RemoveBuildingForPlayer(playerid, 956, -1455.1172, 2591.6641, 55.2344, 0.25);
		RemoveBuildingForPlayer(playerid, 672, -1454.2734, 2640.1406, 55.8281, 0.25);
		RemoveBuildingForPlayer(playerid, 11461, -1466.0313, 2637.5938, 54.3906, 0.25);
		RemoveBuildingForPlayer(playerid, 669, -1457.8672, 2648.9922, 55.2422, 0.25);
		RemoveBuildingForPlayer(playerid, 1308, -1436.1094, 2607.3906, 55.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 3170, -1446.4531, 2639.3516, 54.8047, 0.25);
		RemoveBuildingForPlayer(playerid, 1308, -1438.6719, 2630.0234, 55.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 700, -1441.7891, 2647.3281, 55.2266, 0.25);
		RemoveBuildingForPlayer(playerid, 3173, -1447.2344, 2653.3047, 54.8203, 0.25);
		RemoveBuildingForPlayer(playerid, 3285, -1464.3438, 2656.5000, 56.6484, 0.25);
		RemoveBuildingForPlayer(playerid, 1308, -1436.1016, 2655.4766, 55.1563, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -1329.2031, 2669.2813, 49.4531, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -1328.5859, 2674.7109, 49.4531, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -1327.7969, 2680.1250, 49.4531, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -1327.0313, 2685.5938, 49.4531, 0.25);
		RemoveBuildingForPlayer(playerid, 3682, 247.9297, 1461.8594, 33.4141, 0.25);
		RemoveBuildingForPlayer(playerid, 3682, 192.2734, 1456.1250, 33.4141, 0.25);
		RemoveBuildingForPlayer(playerid, 3682, 199.7578, 1397.8828, 33.4141, 0.25);
		RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1356.9922, 17.0938, 0.25);
		RemoveBuildingForPlayer(playerid, 3683, 166.7891, 1356.9922, 17.0938, 0.25);
		RemoveBuildingForPlayer(playerid, 3683, 166.7891, 1392.1563, 17.0938, 0.25);
		RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1392.1563, 17.0938, 0.25);
		RemoveBuildingForPlayer(playerid, 3683, 166.7891, 1426.9141, 17.0938, 0.25);
		RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1426.9141, 17.0938, 0.25);
		RemoveBuildingForPlayer(playerid, 3288, 221.5703, 1374.9688, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3289, 212.0781, 1426.0313, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3290, 218.2578, 1467.5391, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1435.1953, 9.6875, 0.25);
		RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1410.5391, 9.6875, 0.25);
		RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1385.8906, 9.6875, 0.25);
		RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1361.2422, 9.6875, 0.25);
		RemoveBuildingForPlayer(playerid, 3290, 190.9141, 1371.7734, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3289, 183.7422, 1444.8672, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3289, 222.5078, 1444.6953, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3289, 221.1797, 1390.2969, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3288, 223.1797, 1421.1875, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1459.6406, 17.0938, 0.25);
		RemoveBuildingForPlayer(playerid, 3289, 207.5391, 1371.2422, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3424, 220.6484, 1355.1875, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3424, 221.7031, 1404.5078, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3424, 210.4141, 1444.8438, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3424, 262.5078, 1465.2031, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 1294, -250.2188, 1202.8828, 23.2031, 0.25);
		RemoveBuildingForPlayer(playerid, 956, -76.0313, 1227.9922, 19.1250, 0.25);
		RemoveBuildingForPlayer(playerid, 955, -14.7031, 1175.3594, 18.9531, 0.25);
		RemoveBuildingForPlayer(playerid, 16359, 821.4063, 862.0781, 11.0391, 0.25);
		RemoveBuildingForPlayer(playerid, 3259, 220.6484, 1355.1875, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1356.9922, 17.0938, 0.25);
		RemoveBuildingForPlayer(playerid, 3636, 166.7891, 1356.9922, 17.0938, 0.25);
		RemoveBuildingForPlayer(playerid, 3256, 190.9141, 1371.7734, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 16392, 150.0781, 1378.3438, 11.8438, 0.25);
		RemoveBuildingForPlayer(playerid, 3636, 166.7891, 1392.1563, 17.0938, 0.25);
		RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1392.1563, 17.0938, 0.25);
		RemoveBuildingForPlayer(playerid, 3258, 207.5391, 1371.2422, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 205.6484, 1394.1328, 10.1172, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 205.6484, 1392.1563, 16.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 205.6484, 1394.1328, 23.7813, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 207.3594, 1390.5703, 19.1484, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 206.5078, 1387.8516, 27.4922, 0.25);
		RemoveBuildingForPlayer(playerid, 3673, 199.7578, 1397.8828, 33.4141, 0.25);
		RemoveBuildingForPlayer(playerid, 3257, 221.5703, 1374.9688, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3258, 221.1797, 1390.2969, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 203.9531, 1409.9141, 16.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 3674, 199.3828, 1407.1172, 35.8984, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 204.6406, 1409.8516, 11.4063, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 206.5078, 1404.2344, 18.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 206.5078, 1400.6563, 22.4688, 0.25);
		RemoveBuildingForPlayer(playerid, 3259, 221.7031, 1404.5078, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 207.3594, 1409.0000, 19.7578, 0.25);
		RemoveBuildingForPlayer(playerid, 3257, 223.1797, 1421.1875, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3258, 212.0781, 1426.0313, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3636, 166.7891, 1426.9141, 17.0938, 0.25);
		RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1426.9141, 17.0938, 0.25);
		RemoveBuildingForPlayer(playerid, 16391, 239.2969, 1367.9922, 11.8359, 0.25);
		RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1361.2422, 9.6875, 0.25);
		RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1385.8906, 9.6875, 0.25);
		RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1410.5391, 9.6875, 0.25);
		RemoveBuildingForPlayer(playerid, 3258, 183.7422, 1444.8672, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3259, 210.4141, 1444.8438, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3258, 222.5078, 1444.6953, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 16086, 232.2891, 1434.4844, 13.5000, 0.25);
		RemoveBuildingForPlayer(playerid, 16393, 149.3750, 1452.9375, 11.8516, 0.25);
		RemoveBuildingForPlayer(playerid, 16394, 238.2734, 1452.9375, 11.8359, 0.25);
		RemoveBuildingForPlayer(playerid, 3673, 192.2734, 1456.1250, 33.4141, 0.25);
		RemoveBuildingForPlayer(playerid, 3674, 183.0391, 1455.7500, 35.8984, 0.25);
		RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1459.6406, 17.0938, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 196.0234, 1462.0156, 10.1172, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 198.0000, 1462.0156, 16.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 196.0234, 1462.0156, 23.7813, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 180.2422, 1460.3203, 16.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 180.3047, 1461.0078, 11.4063, 0.25);
		RemoveBuildingForPlayer(playerid, 3256, 218.2578, 1467.5391, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 199.5859, 1463.7266, 19.1484, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 181.1563, 1463.7266, 19.7578, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 185.9219, 1462.8750, 18.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 202.3047, 1462.8750, 27.4922, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 189.5000, 1462.8750, 22.4688, 0.25);
		RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1435.1953, 9.6875, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 254.6797, 1451.8281, 27.4922, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 253.8203, 1458.1094, 23.7813, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 255.5313, 1454.5469, 19.1484, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 253.8203, 1456.1328, 16.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 253.8203, 1458.1094, 10.1172, 0.25);
		RemoveBuildingForPlayer(playerid, 3259, 262.5078, 1465.2031, 9.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 254.6797, 1468.2109, 18.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 3673, 247.9297, 1461.8594, 33.4141, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 254.6797, 1464.6328, 22.4688, 0.25);
		RemoveBuildingForPlayer(playerid, 3674, 247.5547, 1471.0938, 35.8984, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 255.5313, 1472.9766, 19.7578, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 252.8125, 1473.8281, 11.4063, 0.25);
		RemoveBuildingForPlayer(playerid, 3675, 252.1250, 1473.8906, 16.2969, 0.25);
		RemoveBuildingForPlayer(playerid, 16089, 342.1250, 1431.0938, 5.2734, 0.25);
		RemoveBuildingForPlayer(playerid, 16090, 315.7734, 1431.0938, 5.2734, 0.25);
		RemoveBuildingForPlayer(playerid, 16091, 289.7422, 1431.0938, 5.2734, 0.25);
		RemoveBuildingForPlayer(playerid, 16087, 358.6797, 1430.4531, 11.6172, 0.25);
		RemoveBuildingForPlayer(playerid, 3276, -532.3438, 2345.5859, 72.4766, 0.25);
		RemoveBuildingForPlayer(playerid, 3276, -543.3828, 2351.0469, 74.3125, 0.25);
		RemoveBuildingForPlayer(playerid, 3276, -555.6484, 2354.7109, 76.3906, 0.25);
		RemoveBuildingForPlayer(playerid, 3276, -522.3984, 2338.8672, 70.4531, 0.25);
		RemoveBuildingForPlayer(playerid, 16054, -427.7734, 2238.2578, 44.7969, 0.25);
		RemoveBuildingForPlayer(playerid, 3350, -429.0547, 2237.8359, 41.2109, 0.25);
		RemoveBuildingForPlayer(playerid, 955, -253.7422, 2597.9531, 62.2422, 0.25);
		RemoveBuildingForPlayer(playerid, 956, -253.7422, 2599.7578, 62.2422, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, 624.0469, 1677.6016, 6.1797, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, 603.4844, 1707.2344, 6.1797, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, 606.8984, 1702.2188, 6.1797, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, 610.2500, 1697.2656, 6.1797, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, 613.7188, 1692.2656, 6.1797, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, 617.1250, 1687.4531, 6.1797, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, 620.5313, 1682.4609, 6.1797, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -1610.6172, -2721.0000, 47.9297, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -1607.3047, -2716.6016, 47.9297, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -1603.9922, -2712.2031, 47.9297, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -1600.6719, -2707.8047, 47.9297, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -2246.7031, -2559.7109, 31.0625, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, -2241.7188, -2562.2891, 31.0625, 0.25);
		RemoveBuildingForPlayer(playerid, 13191, 65.2578, -303.9844, 14.4531, 0.25);
		RemoveBuildingForPlayer(playerid, 13192, 164.7109, -234.1875, 0.4766, 0.25);
		RemoveBuildingForPlayer(playerid, 13195, 36.8281, -256.2266, 0.4688, 0.25);
		RemoveBuildingForPlayer(playerid, 3377, -207.6563, -246.7344, 1.5781, 0.25);
		RemoveBuildingForPlayer(playerid, 3377, -196.7188, -246.1641, 1.5781, 0.25);
		RemoveBuildingForPlayer(playerid, 3377, -224.5000, -183.9063, 1.5313, 0.25);
		RemoveBuildingForPlayer(playerid, 3377, -200.3281, -189.7344, 1.6016, 0.25);
		RemoveBuildingForPlayer(playerid, 3377, -200.3281, -189.7344, 3.9453, 0.25);
		RemoveBuildingForPlayer(playerid, 3377, -176.6797, -195.3594, 1.5625, 0.25);
		RemoveBuildingForPlayer(playerid, 3377, -156.9453, -266.9141, 4.0078, 0.25);
		RemoveBuildingForPlayer(playerid, 3377, -149.9141, -324.3438, 1.5781, 0.25);
		RemoveBuildingForPlayer(playerid, 955, 201.0156, -107.6172, 0.8984, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, 655.6641, -571.2109, 15.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, 655.6641, -569.6016, 15.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, 655.6641, -558.9297, 15.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, 655.6641, -560.5469, 15.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 956, 662.4297, -552.1641, 15.7109, 0.25);
		RemoveBuildingForPlayer(playerid, 955, 1277.8359, 372.5156, 18.9531, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, 1378.9609, 461.0391, 19.3281, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, 1380.6328, 460.2734, 19.3281, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, 1385.0781, 458.2969, 19.3281, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, 1383.3984, 459.0703, 19.3281, 0.25);
		RemoveBuildingForPlayer(playerid, 12932, -117.9609, -337.4531, 3.6172, 0.25);
		RemoveBuildingForPlayer(playerid, 3378, -149.9141, -324.3438, 1.5781, 0.25);
		RemoveBuildingForPlayer(playerid, 12934, -184.5781, -289.8984, 3.7109, 0.25);
		RemoveBuildingForPlayer(playerid, 3378, -156.9453, -266.9141, 4.0078, 0.25);
		RemoveBuildingForPlayer(playerid, 12861, 36.8281, -256.2266, 0.4688, 0.25);
		RemoveBuildingForPlayer(playerid, 3378, -207.6563, -246.7344, 1.5781, 0.25);
		RemoveBuildingForPlayer(playerid, 12805, 65.2578, -303.9844, 14.4531, 0.25);
		RemoveBuildingForPlayer(playerid, 12956, 96.3281, -261.1953, 3.8594, 0.25);
		RemoveBuildingForPlayer(playerid, 3378, -196.7188, -246.1641, 1.5781, 0.25);
		RemoveBuildingForPlayer(playerid, 12860, 164.7109, -234.1875, 0.4766, 0.25);
		RemoveBuildingForPlayer(playerid, 1412, 215.0000, -224.0000, 2.0234, 0.25);
		RemoveBuildingForPlayer(playerid, 3378, -176.6797, -195.3594, 1.5625, 0.25);
		RemoveBuildingForPlayer(playerid, 3378, -200.3281, -189.7344, 1.6016, 0.25);
		RemoveBuildingForPlayer(playerid, 3378, -200.3281, -189.7344, 3.9453, 0.25);
		RemoveBuildingForPlayer(playerid, 3378, -224.5000, -183.9063, 1.5313, 0.25);
		RemoveBuildingForPlayer(playerid, 956, 2271.7266, -76.4609, 25.9609, 0.25);
		RemoveBuildingForPlayer(playerid, 17349, -542.0078, -522.8438, 29.5938, 0.25);
		RemoveBuildingForPlayer(playerid, 1308, -1405.0391, -810.6563, 81.4922, 0.25);
		RemoveBuildingForPlayer(playerid, 1308, -1198.9453, -717.8125, 55.8438, 0.25);
		RemoveBuildingForPlayer(playerid, 1676, -92.1016, -1161.7891, 2.9609, 0.25);
		RemoveBuildingForPlayer(playerid, 1676, -97.0703, -1173.7500, 3.0313, 0.25);
		RemoveBuildingForPlayer(playerid, 1676, -85.2422, -1165.0313, 2.6328, 0.25);
		RemoveBuildingForPlayer(playerid, 1676, -90.1406, -1176.6250, 2.6328, 0.25);
		RemoveBuildingForPlayer(playerid, 17019, -606.0313, -528.8203, 30.5234, 0.25);
		RemoveBuildingForPlayer(playerid, 1415, -541.4297, -561.2266, 24.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 17012, -542.0078, -522.8438, 29.5938, 0.25);
		RemoveBuildingForPlayer(playerid, 1415, -513.7578, -561.0078, 24.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 1441, -503.6172, -540.5313, 25.2266, 0.25);
		RemoveBuildingForPlayer(playerid, 1415, -502.6094, -528.6484, 24.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 1440, -502.1172, -521.0313, 25.0234, 0.25);
		RemoveBuildingForPlayer(playerid, 1441, -502.4063, -513.0156, 25.2266, 0.25);
		RemoveBuildingForPlayer(playerid, 1415, -620.4141, -490.5078, 24.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 1415, -619.6250, -473.4531, 24.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 1440, -553.6875, -481.6328, 25.0234, 0.25);
		RemoveBuildingForPlayer(playerid, 1441, -554.4531, -496.1797, 25.1641, 0.25);
		RemoveBuildingForPlayer(playerid, 1441, -537.0391, -469.1172, 25.2266, 0.25);
		RemoveBuildingForPlayer(playerid, 1440, -516.9453, -496.6484, 25.0234, 0.25);
		RemoveBuildingForPlayer(playerid, 1440, -503.1250, -509.0000, 25.0234, 0.25);
		RemoveBuildingForPlayer(playerid, 1278, -491.8594, -479.9219, 38.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 17020, -475.9766, -544.8516, 28.1172, 0.25);
		RemoveBuildingForPlayer(playerid, 1278, -471.5547, -479.9219, 38.6250, 0.25);
		RemoveBuildingForPlayer(playerid, 693, -184.8750, -1587.8516, 8.5078, 0.25);
		RemoveBuildingForPlayer(playerid, 790, -141.2813, -1618.9531, 5.7109, 0.25);
		RemoveBuildingForPlayer(playerid, 790, -130.3203, -1602.4922, 5.7109, 0.25);
		RemoveBuildingForPlayer(playerid, 670, -141.8906, -1584.0156, 6.3438, 0.25);
		RemoveBuildingForPlayer(playerid, 1438, -79.2578, -1593.4688, 1.5000, 0.25);
		RemoveBuildingForPlayer(playerid, 670, -111.7734, -1553.6875, 2.7422, 0.25);
		RemoveBuildingForPlayer(playerid, 1775, 2225.2031, -1153.4219, 1025.9063, 0.25);
		RemoveBuildingForPlayer(playerid, 1775, 2576.7031, -1284.4297, 1061.0938, 0.25);
		RemoveBuildingForPlayer(playerid, 1776, 330.6797, 178.5000, 1020.0703, 0.25);
		RemoveBuildingForPlayer(playerid, 1776, 331.9219, 178.5000, 1020.0703, 0.25);
		RemoveBuildingForPlayer(playerid, 1502, 341.1328, 168.7969, 1018.9766, 0.25);
		RemoveBuildingForPlayer(playerid, 1776, 350.9063, 206.0859, 1008.4766, 0.25);
		RemoveBuildingForPlayer(playerid, 1776, 361.5625, 158.6172, 1008.4766, 0.25);
		RemoveBuildingForPlayer(playerid, 1776, 371.5938, 178.4531, 1020.0703, 0.25);
		RemoveBuildingForPlayer(playerid, 1776, 374.8906, 188.9766, 1008.4766, 0.25);
		RemoveBuildingForPlayer(playerid, 1775, 2155.9063, 1606.7734, 1000.0547, 0.25);
		RemoveBuildingForPlayer(playerid, 1775, 2209.9063, 1607.1953, 1000.0547, 0.25);
		RemoveBuildingForPlayer(playerid, 1776, 2155.8438, 1607.8750, 1000.0625, 0.25);
		RemoveBuildingForPlayer(playerid, 1776, 2202.4531, 1617.0078, 1000.0625, 0.25);
		RemoveBuildingForPlayer(playerid, 1776, 2209.2422, 1621.2109, 1000.0625, 0.25);
		RemoveBuildingForPlayer(playerid, 1776, 2222.3672, 1602.6406, 1000.0625, 0.25);
		RemoveBuildingForPlayer(playerid, 1775, 2222.2031, 1606.7734, 1000.0547, 0.25);
		RemoveBuildingForPlayer(playerid, 1775, -19.0391, -57.8359, 1003.6328, 0.25);
		RemoveBuildingForPlayer(playerid, 1776, -36.1484, -57.8750, 1003.6328, 0.25);
		RemoveBuildingForPlayer(playerid, 1775, -16.1172, -91.6406, 1003.6328, 0.25);
		RemoveBuildingForPlayer(playerid, 1776, -17.5469, -91.7109, 1003.6328, 0.25);
		RemoveBuildingForPlayer(playerid, 1776, -16.5313, -140.2969, 1003.6328, 0.25);
		RemoveBuildingForPlayer(playerid, 1775, -15.1016, -140.2266, 1003.6328, 0.25);
		RemoveBuildingForPlayer(playerid, 1776, -33.8750, -186.7656, 1003.6328, 0.25);
		RemoveBuildingForPlayer(playerid, 1775, -32.4453, -186.6953, 1003.6328, 0.25);
		RemoveBuildingForPlayer(playerid, 1775, -35.7266, -140.2266, 1003.6328, 0.25);
		RemoveBuildingForPlayer(playerid, 1771, 190.6406, 174.7422, 1002.6875, 0.25);
		RemoveBuildingForPlayer(playerid, 1771, 194.8750, 174.7422, 1002.6875, 0.25);
		RemoveBuildingForPlayer(playerid, 1771, 199.1328, 174.7422, 1002.6875, 0.25);
		RemoveBuildingForPlayer(playerid, 14878, 302.2422, 312.7578, 998.5781, 0.25);
		RemoveBuildingForPlayer(playerid, 2204, 225.1094, 122.7422, 1009.2422, 0.25);
		RemoveBuildingForPlayer(playerid, 2204, 225.1094, 125.9688, 1009.2422, 0.25);
		RemoveBuildingForPlayer(playerid, 2210, 226.7891, 128.3984, 1009.2109, 0.25);
		RemoveBuildingForPlayer(playerid, 1771, 188.4922, 162.0234, 1002.6875, 0.25);
		RemoveBuildingForPlayer(playerid, 1771, 192.7266, 162.0234, 1002.6875, 0.25);
		RemoveBuildingForPlayer(playerid, 1771, 196.9844, 162.0234, 1002.6875, 0.25);
		RemoveBuildingForPlayer(playerid, 14856, 198.4688, 168.6797, 1003.8984, 0.25);
		RemoveBuildingForPlayer(playerid, 1775, 495.9688, -24.3203, 1000.7344, 0.25);
		RemoveBuildingForPlayer(playerid, 1776, 500.5625, -1.3672, 1000.7344, 0.25);
		RemoveBuildingForPlayer(playerid, 1775, 501.8281, -1.4297, 1000.7344, 0.25);
		RemoveBuildingForPlayer(playerid, 1775, 373.8281, -178.1406, 1000.7344, 0.25);
		RemoveBuildingForPlayer(playerid, 1776, 379.0391, -178.8828, 1000.7344, 0.25);
		RemoveBuildingForPlayer(playerid, 1977, 316.8750, -140.3516, 998.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 13625, -1336.8281, -305.1094, 1053.3672, 0.25);
		RemoveBuildingForPlayer(playerid, 1432, -788.4766, 491.1641, 1375.2891, 0.25);
		RemoveBuildingForPlayer(playerid, 1432, -787.2500, 497.7656, 1375.2891, 0.25);
		RemoveBuildingForPlayer(playerid, 1432, -787.4766, 504.5938, 1370.8594, 0.25);
		RemoveBuildingForPlayer(playerid, 1432, -790.6016, 509.0391, 1370.8594, 0.25);
		RemoveBuildingForPlayer(playerid, 1432, -787.8203, 509.0469, 1370.8594, 0.25);
		RemoveBuildingForPlayer(playerid, 1432, -783.0078, 509.0156, 1370.8594, 0.25);
		RemoveBuildingForPlayer(playerid, 1432, -779.8750, 509.0547, 1370.8594, 0.25);
		RemoveBuildingForPlayer(playerid, 4269, 2882.0781, -2711.4531, -4.0000, 0.25);
		RemoveBuildingForPlayer(playerid, 4403, 2882.0781, -2711.4531, -4.0000, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1023.1328, -1632.4609, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1062.1406, -1631.7188, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1023.1328, -1629.2813, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1023.1328, -1626.1016, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1023.1328, -1622.9766, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1052.3594, -1631.7188, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1042.4375, -1631.7188, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1032.7031, -1622.9766, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1032.6719, -1631.7188, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1032.7031, -1629.2813, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1032.7031, -1626.1016, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1032.7031, -1632.4609, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1032.7031, -1619.9063, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1023.1328, -1631.7188, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1062.1406, -1622.2031, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1052.3594, -1622.2031, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1042.4375, -1622.2031, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1032.6719, -1622.2031, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1023.1328, -1622.2031, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -991.9531, -1688.1875, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -991.9219, -1703.1094, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -991.9531, -1700.6797, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -991.9531, -1697.5000, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -991.9531, -1703.8594, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -991.9531, -1691.3047, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -991.9531, -1694.3750, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -991.9531, -1685.0781, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -982.3828, -1703.1094, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -991.9219, -1693.6016, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -982.3828, -1693.6016, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -991.9219, -1684.1719, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -982.3828, -1684.1719, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1011.9297, -1655.8672, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1011.8984, -1667.6719, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1011.9297, -1665.2422, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1011.9297, -1662.0625, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1011.9297, -1668.4219, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1011.9297, -1652.7500, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1011.9297, -1658.9375, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1011.9297, -1649.6406, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1011.8984, -1658.1563, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1011.8984, -1648.7344, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1000.7500, -1652.7500, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1000.7266, -1667.6719, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1000.7500, -1665.2422, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1000.7500, -1662.0625, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1000.7500, -1668.4219, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1000.7500, -1655.8672, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1000.7500, -1658.9375, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1000.7500, -1649.6406, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1000.7266, -1658.1563, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1000.7266, -1648.7344, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1052.3828, -1632.4609, 75.3672, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1052.3828, -1629.2813, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1052.3828, -1626.1016, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1052.3828, -1622.9766, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1042.4531, -1631.9375, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3261, -1042.4531, -1635.0547, 75.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1023.1328, -1636.3906, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -991.9219, -1688.8438, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -982.3828, -1688.8438, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -982.3828, -1698.2734, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -991.9219, -1698.2734, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -982.3828, -1707.7813, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1011.8984, -1662.8281, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1000.7266, -1672.3438, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1011.8984, -1653.4063, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1032.6719, -1636.3906, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1052.3594, -1636.3906, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1042.4375, -1636.3906, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1062.1406, -1626.8750, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1023.1328, -1626.8750, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1000.7266, -1662.8281, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1000.7266, -1653.4063, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1032.6719, -1626.8750, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1042.4375, -1626.8750, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1052.3594, -1626.8750, 75.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 3409, -1062.1406, -1636.3906, 75.3359, 0.25);

		StopAudioStreamForPlayer(playerid);

		TextosIslas1 = CreateObject(3337, 825.34314, -1795.46008, 12.63000,   0.00000, 0.00000, 90.00000);
		SetObjectMaterialText(TextosIslas1, "{FFFFFF}Isla Santa Carolina\n1Km", 1, 130, "Bell MT", 60, 0, -1, 0, 1);

		TextosIslas2 = CreateObject(3337, 826.50800, -2942.93457, 11.09385,   0.00000, 0.00000, 58.71920);
		SetObjectMaterialText(TextosIslas2, "{FFFFFF}Welcome to\nIsla Santa Carolina", 1, 130, "Bell MT", 60, 0, -1, 0, 1);

		//Estacionamiento
		CreatePlayerObject(playerid, 7010, 1727.82605, -1891.48206, -41.05000,   0.00000, 0.00000, 359.88000, 1148829696);
		CreatePlayerObject(playerid, 7244, 1653.01001, -1860.55005, -51.76400,   0.00000, 0.00000, 0.00000, 1148829696);
		//Salon de Eventos
		CreatePlayerObject(playerid, 13657, -1252.81006, 2055.30005, 1248.78003,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 13657, -1252.81995, 2099.14990, 1254.63000,   0.00000, 180.00000, 180.00000, 1148829696);
		CreatePlayerObject(playerid, 10766, -1304.91003, 2021.48999, 1269.75000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 10766, -1273.46997, 2017.13000, 1276.88000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 10766, -1265.25000, 1972.28003, 1269.75000,   0.00000, 0.00000, 0.00000, 1148829696);
		// Isla
		CreatePlayerObject(playerid, 19529, 819.02002, -3555.72998, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19529, 819.02002, -3680.72998, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19540, 616.53003, -3048.27002, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19540, 616.53003, -3313.25000, 4.87000,   0.00000, 0.00000, -90.00000, 1148829696);
		CreatePlayerObject(playerid, 19540, 881.51001, -3743.22998, 4.87000,   0.00000, 0.00000, 270.00000, 1148829696);
		CreatePlayerObject(playerid, 19540, 586.54999, -3048.27002, 4.87000,   0.00000, 0.00000, 90.00000, 1148829696);
		CreatePlayerObject(playerid, 19540, 741.53003, -3743.22998, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
		CreatePlayerObject(playerid, 19540, 896.47998, -3033.30005, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19540, 741.53003, -3493.22998, 4.87000,   0.00000, 0.00000, 90.00000, 1148829696);
		CreatePlayerObject(playerid, 19540, 586.54999, -3313.25000, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
		CreatePlayerObject(playerid, 19540, 881.51001, -3493.22998, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19540, 896.47998, -3328.26001, 4.87000,   0.00000, 0.00000, -90.00000, 1148829696);
		CreatePlayerObject(playerid, 19540, 741.53998, -3033.30005, 4.87000,   0.00000, 0.00000, 90.00000, 1148829696);
		CreatePlayerObject(playerid, 19540, 741.53998, -3328.26001, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
		CreatePlayerObject(playerid, 19541, 616.53003, -3180.76001, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19541, 888.98999, -3033.30005, 4.87000,   0.00000, 0.00000, 90.00000, 1148829696);
		CreatePlayerObject(playerid, 19541, 586.54999, -3180.76001, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
		CreatePlayerObject(playerid, 19541, 896.47998, -3040.78003, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19541, 741.53998, -3040.78003, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
		CreatePlayerObject(playerid, 19541, 749.02002, -3033.30005, 4.87000,   0.00000, 0.00000, 90.00000, 1148829696);
		CreatePlayerObject(playerid, 19541, 594.04999, -3048.27002, 4.87000,   0.00000, 0.00000, 90.00000, 1148829696);
		CreatePlayerObject(playerid, 19541, 609.04999, -3048.27002, 4.87000,   0.00000, 0.00000, 90.00000, 1148829696);
		CreatePlayerObject(playerid, 19541, 896.47998, -3180.76001, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19541, 741.53998, -3320.76001, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
		CreatePlayerObject(playerid, 19541, 888.98999, -3328.26001, 4.87000,   0.00000, 0.00000, -90.00000, 1148829696);
		CreatePlayerObject(playerid, 19541, 609.04999, -3313.25000, 4.87000,   0.00000, 0.00000, -90.00000, 1148829696);
		CreatePlayerObject(playerid, 19541, 896.47998, -3320.76001, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19541, 741.53998, -3180.76001, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
		CreatePlayerObject(playerid, 19541, 749.02002, -3493.22998, 4.87000,   0.00000, 0.00000, 90.00000, 1148829696);
		CreatePlayerObject(playerid, 19541, 749.02002, -3328.26001, 4.87000,   0.00000, 0.00000, -90.00000, 1148829696);
		CreatePlayerObject(playerid, 19541, 594.04999, -3313.25000, 4.87000,   0.00000, 0.00000, -90.00000, 1148829696);
		CreatePlayerObject(playerid, 19541, 749.02002, -3743.22998, 4.87000,   0.00000, 0.00000, -90.00000, 1148829696);
		CreatePlayerObject(playerid, 19542, 896.47998, -3110.77002, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19542, 741.53998, -3110.77002, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
		CreatePlayerObject(playerid, 19542, 616.53003, -3250.76001, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19542, 818.98999, -3328.26001, 4.87000,   0.00000, 0.00000, -90.00000, 1148829696);
		CreatePlayerObject(playerid, 19542, 741.53998, -3250.76001, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
		CreatePlayerObject(playerid, 19542, 616.53003, -3110.77002, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19542, 586.54999, -3250.76001, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
		CreatePlayerObject(playerid, 19542, 586.54999, -3110.77002, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
		CreatePlayerObject(playerid, 19542, 896.47998, -3250.76001, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19542, 819.02002, -3033.30005, 4.87000,   0.00000, 0.00000, 90.00000, 1148829696);
		CreatePlayerObject(playerid, 19542, 819.02002, -3493.22998, 4.87000,   0.00000, 0.00000, 90.00000, 1148829696);
		CreatePlayerObject(playerid, 19542, 741.53003, -3555.72998, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
		CreatePlayerObject(playerid, 19542, 881.51001, -3680.72998, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19542, 819.02002, -3743.22998, 4.87000,   0.00000, 0.00000, -90.00000, 1148829696);
		CreatePlayerObject(playerid, 19542, 741.53003, -3680.72998, 4.87000,   0.00000, 0.00000, 180.00000, 1148829696);
		CreatePlayerObject(playerid, 19542, 881.51001, -3555.72998, 4.87000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 8420, 815.82001, -3571.54004, 5.05000,   0.00000, 0.00000, -90.00000, 1148829696);
		CreatePlayerObject(playerid, 9062, 815.79785, -3649.03760, 5.05000,   0.00000, 0.00000, -90.00000, 1148829696);
		CreatePlayerObject(playerid, 19531, 819.02002, -3250.76001, 5.01000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19531, 819.02002, -3110.78003, 5.01000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19532, 888.98999, -3250.76001, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19532, 594.04999, -3110.77002, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19532, 594.04999, -3250.76001, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19532, 749.02002, -3250.76001, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19532, 749.02002, -3680.72998, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19532, 609.04999, -3110.77002, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19532, 749.02002, -3555.72998, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19532, 819.02002, -3180.76001, 4.86000,   0.00000, 0.00000, 90.00000, 1148829696);
		CreatePlayerObject(playerid, 19532, 819.02002, -3040.78003, 4.86000,   0.00000, 0.00000, 90.00000, 1148829696);
		CreatePlayerObject(playerid, 19532, 888.98999, -3110.77002, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19532, 818.98999, -3320.76001, 4.86000,   0.00000, 0.00000, -90.00000, 1148829696);
		CreatePlayerObject(playerid, 19532, 749.02002, -3110.77002, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19532, 609.04999, -3250.76001, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19788, 888.98999, -3320.76001, 4.86000,   0.00000, 0.00000, 0.00000, 1148829696);
		CreatePlayerObject(playerid, 19788, 889.02002, -3040.77002, 4.86000,   0.00000, 0.00000, 90.00000, 1148829696);
		CreatePlayerObject(playerid, 19788, 749.02002, -3040.78003, 4.86000,   0.00000, 0.00000, 180.00000, 1148829696);
		CreatePlayerObject(playerid, 18803, 749.02002, -3403.27002, 4.56000,   0.00000, 0.00000, 90.00000, 1148829696);
		CreatePlayerObject(playerid, 19534, 594.04999, -3180.76001, 4.86000,   0.00000, 0.00000, 180.00000, 1148829696);
		CreatePlayerObject(playerid, 19534, 749.02002, -3485.73999, 4.88000,   0.00000, 0.00000, -90.00000, 1148829696);
		CreatePlayerObject(playerid, 19534, 609.03998, -3180.76001, 4.86000,   0.00000, 0.00000, 180.00000, 1148829696);
		CreatePlayerObject(playerid, 19534, 623.97998, -3180.76001, 4.90000,   0.00000, 0.00000, 180.00000, 1148829696);
		CreatePlayerObject(playerid, 19534, 749.02002, -3180.76001, 4.86000,   0.00000, 0.00000, 180.00000, 1148829696);
		CreatePlayerObject(playerid, 18805, 666.76001, -3180.76001, -0.70000,   0.00000, -4.00000, 0.00000, 1148829696);
		CargarMapeosEx(playerid);
		if(PlayerInfo[playerid][pFaccion] > 0)
		{
			foreach(Player,i)
			{
			    if(JugadorLogeado[i] == 1 && IsPlayerConnected(i) && i != playerid && PlayerInfo[playerid][pFaccion] == PlayerInfo[i][pFaccion])
			    {
			        MostrarBoxLogeo(i,playerid);
			    }
			}
		}
		if(PlayerInfo[playerid][pAdmin] == ADMIN_LEVEL_USER)
		{
			if(TiempoDuda[playerid] == 0)
			{
				TiempoDuda[playerid] = 300;
			}
		}
		if(PlayerInfo[playerid][pVip] > 0) SetTimerEx("CheckVIP",1000,false,"d",playerid);
		CalcularNivel(playerid);
		new year, month,day;
		new hour,minuite,second;
		new string2[128], Query[256], plrIP[16];
		new isp[256];
		getdate(year, month, day);
		gettime(hour,minuite,second);
		if(PlayerInfo[playerid][pAdmin] == ADMIN_LEVEL_USER) TiempoDarDinero[playerid] = 300;
		else TiempoDarDinero[playerid] = 15;
		SendClientMessage(playerid, -1, "{FFFFFF}Cargando datos del juego...");
		SendClientMessage(playerid, -1, "{DBED15}El servidor está en constante crecimiento. Publica tus sugerencias en el foro.");
		SendClientMessage(playerid, -1, "{FFFFFF}Escribe {DBED15}/ayuda{FFFFFF} para recibir ayuda.");
		SendClientMessage(playerid, -1, "Para recibir ayuda de otros jugadores, usa {DBED15}/n {FFFFFF}({DBED15}y tu pregunta{FFFFFF}).");
		if(PlayerInfo[playerid][CodigoEmail] < 100)
		{
			new kquery[200], codigokey;
			codigokey = PlayerInfo[playerid][pID]+434230;
			format(kquery, 200, "UPDATE `usuarios` SET `CodigoKEY`='%d' WHERE `Username`=('%s')",codigokey,PlayerName(playerid));
			mysql_function_query(Conecction, kquery, true, "OnQueryFinish", "ii", 0, playerid);
			PlayerInfo[playerid][CodigoEmail] = codigokey;
		}
		//GPS
		GPSActivado[playerid] = 0;
		for(new i = 0; i < MAX_TEXTDRAWS; i++)
		{
			if(TDPGPSCreado[playerid][i] > 0)
			{
				PlayerTextDrawDestroy(playerid, TextDPGPS[playerid][i]);
				PlayerTextDrawDestroy(playerid, TextDPGPS2[playerid][i]);
				TDPGPSCreado[playerid][i] = 0;
			}
		}
		for(new i = 0; i < TDGPSCreadoS; i++) TextDrawHideForPlayer(playerid, TextDGPS[i]);

		GetPlayerIp(playerid, plrIP, sizeof(plrIP));
		format(PlayerIpEz[playerid],sizeof(plrIP),"%s", plrIP);
		GetPlayerISP(playerid, isp, sizeof(isp));
		if(strcmp("127.0.0.1", plrIP, true) == 0)
		{
		    format(isp, sizeof(isp), "undefined.hostname.localhost");
		    format(country, sizeof(country), "Colombia");
		    format(plrIP, sizeof(plrIP), "localhost");
		}
		else if(strcmp("Venezuela", country, true) == 0) format(isp, sizeof(isp), "%s.genericrev.cantv.net", plrIP);
		else if(strcmp("Unknown", isp, true) == 0) format(isp, sizeof(isp), "%s", plrIP);
		else if(strcmp("Desconocido", isp, true) == 0) format(isp, sizeof(isp), "%s", plrIP);

		format(string2, sizeof(string2), "%02d/%02d/%02d %02d:%02d:%02d", day,month,year,hour,minuite,second);
		format(Query, sizeof(Query),"INSERT INTO `log_ingresos` (`Nombre`, `Pais`, `IP` , `Host`, `Fecha`) VALUES ('%s', '%s', '%s', '%s', '%s')", PlayerName(playerid), country, plrIP, isp, string2);
		mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
		MostrarMapas(playerid);
		LoadAnimLibs(playerid);
  		TextDrawShowForPlayer(playerid, CN5);
		StopAudioStreamForPlayer(playerid);
		ClearAnimations(playerid);
		gettime(Hora, Minuto);
		SetPlayerTime(playerid,Hora,Minuto);
		SetPlayerInterior(playerid, PlayerInfo[playerid][pInterior]);
		SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pMundoVirtual]);
		SetPlayerProgressBarMaxValue(playerid,Progressbar[playerid][Experiencia], PlayerInfo[playerid][NivelExp]);
		SetPlayerProgressBarValue(playerid,Progressbar[playerid][Experiencia],PlayerInfo[playerid][jExperiencia]);
		UpdatePlayerProgressBar(playerid,Progressbar[playerid][Experiencia]);
		ShowPlayerProgressBar(playerid, Progressbar[playerid][Experiencia]);
		if(PlayerInfo[playerid][pBarras] == 1)
		{
			HidePlayerProgressBar(playerid, Progressbar[playerid][Hambre]);
			HidePlayerProgressBar(playerid, Progressbar[playerid][Sed]);
		}
		else
		{
			SetPlayerProgressBarValue(playerid,Progressbar[playerid][Sed], PlayerInfo[playerid][pSed]);
			UpdatePlayerProgressBar(playerid,Progressbar[playerid][Sed]);
			SetPlayerProgressBarMaxValue(playerid,Progressbar[playerid][Sed], 100);
			ShowPlayerProgressBar(playerid, Progressbar[playerid][Sed]);
			SetPlayerProgressBarValue(playerid,Progressbar[playerid][Hambre], PlayerInfo[playerid][pHambre]);
			UpdatePlayerProgressBar(playerid,Progressbar[playerid][Hambre]);
			SetPlayerProgressBarMaxValue(playerid,Progressbar[playerid][Hambre], 100);
			ShowPlayerProgressBar(playerid, Progressbar[playerid][Hambre]);
		}
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
		TextDrawHideForPlayer(playerid, CN);
		TextDrawHideForPlayer(playerid, CN2);
		TextDrawHideForPlayer(playerid, CN3);
		TextDrawHideForPlayer(playerid, CN4);
		ColorJugadorDefault(playerid);
		ResetPlayerMoney(playerid);
		SetTimerEx("Logeado",1000,false,"d",playerid);
		SetTimerEx("Logeado2",3000,false,"d",playerid);
		Logeando[playerid] = 0;
		JugadorLogeado[playerid] = 1;
		DarRopa(playerid);
		LoadPrendas(playerid);
		LoadAchievements(playerid);
		SetPlayerStats(playerid);
		SetPlayerArmedWeapon(playerid, 0);
	}
	if(Specteando[playerid] == 1)
	{
	    DarRopa(playerid);
	    DarArmas(playerid);
	    DarPrendas(playerid);
		SetPlayerPos(playerid,SpecX[playerid],SpecY[playerid],SpecZ[playerid]);
		SetPlayerInterior(playerid,SpecInt[playerid]);
		SetPlayerVirtualWorld(playerid,SpecVW[playerid]);
		Specteando[playerid] = 0;
		Specteado[SpecJugador[playerid]] = 0;
		return 1;
	}
	if(VariableCaido[playerid] == 1 && PlayerInfo[playerid][pCargos] <= 1 && Grupo[playerid] == 0)
	{
	    EstablecerVida(playerid, 90);
	    TextDrawShowForPlayer(playerid, Sangre);
		PlayerInfo[playerid][pCargos] = 0;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
		DarPrendas(playerid);
		DarRopa(playerid);
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
		Muriendo[playerid] = 1;
		DarDinero(playerid,0);
		ClearAnimations(playerid);
		SetPlayerInterior(playerid,PlayerInfo[playerid][pInterior]);
		SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pMundoVirtual]);
		ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0, 1);
		ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0, 1);
		SendClientMessage(playerid, 0xafafafFF,"{FFFFFF}Estás muy malherido y comienzas a perder sangre.");
		MostrarBoxMedico(playerid);
		DarPrendas(playerid);
		return 1;
	}
	if(VariableCaido[playerid] == 1 && PlayerInfo[playerid][pCargos] > 1 && Grupo[playerid] == 0)
	{
	    DarPrendas(playerid);
		PlayerInfo[playerid][Agonizando] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
		DarRopa(playerid);
		TogglePlayerControllable(playerid,0);
		SetPVarInt(playerid, "IsFrozen", 0);
		EstablecerVida(playerid, 10.0);
		SendClientMessage(playerid, 0xafafafFF,"{FFBC00}Los médicos no van a tratar con un delincuente.");
		SendClientMessage(playerid, 0xafafafFF,"{FFBC00}Espera a que la policía te traslade.");
		ClearAnimations(playerid);
		ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0, 1);
		ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0, 1);
		for(new i = 0; i < GetMaxPlayers(); i++)
		if(PlayerInfo[i][pDuty] == 1)
		{
			SetPlayerMarkerForPlayer(i, playerid, COLOR_GREEN2);
		}
		return 1;
	}
	if(PlayerInfo[playerid][pTiempoCarcelS] > 0)
	{
	    DarPrendas(playerid);
		EnviarCarcel(playerid);
		Jail[playerid] = 1;
		return 1;
	}
	if(PlayerInfo[playerid][pTiempoJail] > 0)
	{
	    SancionadoOPricion[playerid] = 1;
	    DarPrendas(playerid);
		SetTimerEx("EnviarJail", 2000, false, "d", playerid);
		SetTimerEx("TiempoJail",PlayerInfo[playerid][pTiempoJail],false,"d",playerid);
		San[playerid] = 1;
		return 1;
	}
	if(EnAsalto[playerid] == 1 && Grupo[playerid] == 1)
	{
	    SetPosEx(playerid, 1244.2466,368.9850,19.5547,247.3525,0,0);
		SetPlayerInterior(playerid,0);
		ColorJugadorDefault(playerid);
 		DarPrendas(playerid);
		DarRopa(playerid);
		DarArmas(playerid);
		TogglePlayerControllable(playerid, 1);
		SetPVarInt(playerid, "IsFrozen", 1);
		SendClientMessage(playerid, -1, "Fuiste atendido en una clínica clandestina y los organizadores del golpe se hicieron cargo de los gastos.");
		OcultarMensajeAsalto(playerid);
		return 1;
	}
	if(EnAsalto[playerid] == 1 && Grupo[playerid] == 2)
	{
		ColorJugadorDefault(playerid);
		DarRopa(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 1);
		DarPrendas(playerid);
		DarArmas(playerid);
		TogglePlayerControllable(playerid, 1);
		SetPVarInt(playerid, "IsFrozen", 1);
		SendClientMessage(playerid, -1, "Fuiste atendido en una clínica privada con influencias del casino.");
		OcultarMensajeAsalto(playerid);
		return 1;
	}
	if(EnAsalto[playerid] == 1 && Grupo[playerid] == 3)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 1);
		DarPrendas(playerid);
		DarRopa(playerid);
		ColorJugadorDefault(playerid);
		DarArmas(playerid);
		TogglePlayerControllable(playerid, 1);
		SetPVarInt(playerid, "IsFrozen", 1);
		SendClientMessage(playerid, -1, "Fuiste atendido en una clínica privada con influencias del casino.");
		OcultarMensajeAsalto(playerid);
		return 1;
	}
 	if(PlayerInfo[playerid][Agonizando] == 1 && Grupo[playerid] == 0)
	{
	    EstablecerVida(playerid, 90);
	    TextDrawShowForPlayer(playerid, Sangre);
		DarPrendas(playerid);
		DarRopa(playerid);
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
		Muriendo[playerid] = 1;
		DarDinero(playerid,0);
		ClearAnimations(playerid);
		SetPlayerInterior(playerid,PlayerInfo[playerid][pInterior]);
		SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pMundoVirtual]);
		ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0, 1);
		ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0, 1);
		SendClientMessage(playerid, 0xafafafFF,"{FFFFFF}Estás muy malherido y comienzas a perder sangre.");
		MostrarBoxMedico(playerid);
		DarPrendas(playerid);
		return 1;
	}
	if(PlayerInfo[playerid][Agonizando] == 2)
	{
	    DarPrendas(playerid);
		if(PlayerInfo[playerid][pDuty] != 1) QuitarArmas(playerid);
		ApareceHospital(playerid);
		return 1;
	}
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
	if(IsPlayerNPC(playerid)) return 1;
	if(JugadorLogeado[playerid] == 1) return SpawnPlayer(playerid);
	return 0;
}

public OnPlayerText(playerid, text[])
{
    if(DetectSPAM(text) && PlayerInfo[playerid][pAdmin] != ADMIN_LEVEL_ADM)
    {
    	new string[128];
		format(string,sizeof(string),"%s(%d) SPAM ({e1190c}Posible IP{00CC00}):{FFFFFF}%s",PlayerName(playerid),playerid,text);
		MensajeAdmin(0x00CC00FF,string,ADMIN_LEVEL_BANEOS);
    }
	if(strfind(text,PlayerInfo[playerid][ContraTemporal],true) != -1)
    {
        new pText[144];
	    format(pText, sizeof(pText), "%s dice: %s",PlayerName(playerid), text);
		SendClientMessage(playerid, 0xE6E6E6E6, pText);
		new dialog[385];
		format(dialog,sizeof(dialog),"{FFFFFF}No le des tu contraseña a NADIE, si alguien te pidió tu la contraseña reportalo usando {DBED16}/reportar [ID o Nombre] Ladrón de cuentas.\n\n{00CC00}** Los administradores no necesitan tu contraseña. **{FFFFFF}\n\nNo te preocupes por haber enviado la contraseña, el mensaje fue filtrado por nuestro sistema.\nDe todas formas puedes cambiar tu contraseña si lo deseas desde la web.");
        ShowPlayerDialog(playerid,INFOMEDICO,DIALOG_STYLE_MSGBOX,"{DBED16}¡ATENCIÓN!",dialog,"Cerrar","");
		return 0;
 	}
    KillTimer(LCHAT[playerid]);
    SacarAyudaComandos(playerid);
    if(GetSpam(text,playerid) && !DetectSPAM(text)) MensajeSpam(playerid,text);
	if(GetPlayerScore(playerid) == 0) return 0;
	if(text[0] == '@' && text[1] != '@')
	{
		if(PlayerInfo[playerid][pAdmin] > ADMIN_LEVEL_AYUDANTE)
		{
			new string[128],pName[32];
			GetPlayerName(playerid,pName,32);
			format(string,128,"%s: %s",pName,text[1]);
			MensajeAdmin(0x00CC00FF, string, ADMIN_LEVEL_DUDAS);
			return 0;
		}
	}
	if(text[0] == '!' && text[1] != '!')
	{
	    if(PlayerInfo[playerid][pTiempoCarcelS] > 0 || PlayerInfo[playerid][pTiempoJailS] > 0) return SendClientMessage(playerid,-1,"Te quitaron el radio comunicador antes de meterte en la celda.");
		if(PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][pFaccion] == 1)
		{
			if(Frecuencia[playerid] == 0)
   			{
   			    MostrarFrecuencias(playerid);
				return 0;
  			}
			if(PlayerInfo[playerid][pDuty] != 1 && PlayerInfo[playerid][pRadio] != 1) { SendClientMessage(playerid,-1,"Necesitas un radio comunicador."); return 0;}
			new chatadmin[256];
			GetPlayerName(playerid,chatadmin,sizeof(chatadmin));
			switch(PlayerInfo[playerid][pRango])
			{
				case 1:
				{
					format(chatadmin,sizeof(chatadmin),"[Radio] {FFFFFF}Cadete %s: %s",PlayerName(playerid), text[1]);
					SendRadioMessage(1, TEAM_BLUE_COLOR, chatadmin,playerid);
					format(chatadmin,sizeof(chatadmin),"[Radio de policía] %s dice: %s",PlayerName(playerid), text[1]);
					ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
					return 0;
				}
				case 2:
				{
					format(chatadmin,sizeof(chatadmin),"[Radio] {FFFFFF}Oficial %s: %s",PlayerName(playerid), text[1]);
					SendRadioMessage(1, TEAM_BLUE_COLOR, chatadmin,playerid);
					format(chatadmin,sizeof(chatadmin),"[Radio de policía] %s dice: %s",PlayerName(playerid), text[1]);
					ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
					return 0;
				}
				case 3:
				{
					format(chatadmin,sizeof(chatadmin),"[Radio] {FFFFFF}Cabo %s: %s",PlayerName(playerid), text[1]);
					SendRadioMessage(1, TEAM_BLUE_COLOR, chatadmin,playerid);
					format(chatadmin,sizeof(chatadmin),"[Radio de policía] %s dice: %s",PlayerName(playerid), text[1]);
					ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
					return 0;
				}
				case 4:
				{
					format(chatadmin,sizeof(chatadmin),"[Radio] {FFFFFF}Sargento %s: %s",PlayerName(playerid), text[1]);
					SendRadioMessage(1, TEAM_BLUE_COLOR, chatadmin,playerid);
					format(chatadmin,sizeof(chatadmin),"[Radio de policía] %s dice: %s",PlayerName(playerid), text[1]);
					ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
					return 0;
				}
				case 5:
				{
					format(chatadmin,sizeof(chatadmin),"[Radio] {FFFFFF}Teniente %s: %s",PlayerName(playerid), text[1]);
					SendRadioMessage(1, TEAM_BLUE_COLOR, chatadmin,playerid);
					format(chatadmin,sizeof(chatadmin),"[Radio de policía] %s dice: %s",PlayerName(playerid), text[1]);
					ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
					return 0;
				}
				case 6:
				{
					format(chatadmin,sizeof(chatadmin),"[Radio] {FFFFFF}Capitán %s: %s",PlayerName(playerid), text[1]);
					SendRadioMessage(1, TEAM_BLUE_COLOR, chatadmin,playerid);
					format(chatadmin,sizeof(chatadmin),"[Radio de policía] %s dice: %s",PlayerName(playerid), text[1]);
					ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
					return 0;
				}
				case 7:
				{
					format(chatadmin,sizeof(chatadmin),"[Radio] {FFFFFF}Inspector %s: %s",PlayerName(playerid), text[1]);
					SendRadioMessage(1, TEAM_BLUE_COLOR, chatadmin,playerid);
					format(chatadmin,sizeof(chatadmin),"[Radio de policía] %s dice: %s",PlayerName(playerid), text[1]);
					ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
					return 0;
				}
				case 8:
				{
					format(chatadmin,sizeof(chatadmin),"[Radio] {FFFFFF}Comisario %s: %s",PlayerName(playerid), text[1]);
					SendRadioMessage(1, TEAM_BLUE_COLOR, chatadmin,playerid);
					format(chatadmin,sizeof(chatadmin),"[Radio de policía] %s dice: %s",PlayerName(playerid), text[1]);
					ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
					return 0;
				}
			}
		}
		else if(PlayerInfo[playerid][pFaccion] > 1)
		{
			if(PlayerInfo[playerid][pDuty] == 1) PlayerInfo[playerid][pDuty] = 0;
			new chatadmin[256],pName[32];
			new banda = PlayerInfo[playerid][pFaccion];
			GetPlayerName(playerid,pName,32);
			switch(PlayerInfo[playerid][pRango])
			{
				case 1:
				{
					format(chatadmin,sizeof(chatadmin),"[Radio]{FFFFFF}%s - %s dice: %s",BandasInfo[banda][BRango1],pName,text[1]);
					SendRadioMessage(banda, 0xFFFFFFFF, chatadmin,playerid);
					format(chatadmin,sizeof(chatadmin),"[Radio de banda] %s dice: %s",pName,text[1]);
					ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
					return 0;
				}
				case 2:
				{
					format(chatadmin,sizeof(chatadmin),"[Radio]{FFFFFF}%s - %s dice: %s",BandasInfo[banda][BRango2],pName,text[1]);
					SendRadioMessage(banda, 0xFFFFFFFF, chatadmin,playerid);
					format(chatadmin,sizeof(chatadmin),"[Radio de banda] %s dice: %s",pName,text[1]);
					ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
					return 0;
				}
				case 3:
				{
					format(chatadmin,sizeof(chatadmin),"[Radio]{FFFFFF}%s - %s dice: %s",BandasInfo[banda][BRango3],pName,text[1]);
					SendRadioMessage(banda, 0xFFFFFFFF, chatadmin,playerid);
					format(chatadmin,sizeof(chatadmin),"[Radio de banda] %s dice: %s",pName,text[1]);
					ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
					return 0;
				}
				case 4:
				{
					format(chatadmin,sizeof(chatadmin),"[Radio]{FFFFFF}%s - %s dice: %s",BandasInfo[banda][BRango4],pName,text[1]);
					SendRadioMessage(banda, 0xFFFFFFFF, chatadmin,playerid);
					format(chatadmin,sizeof(chatadmin),"[Radio de banda] %s dice: %s",pName,text[1]);
					ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
					return 0;
				}
				case 5:
				{
					format(chatadmin,sizeof(chatadmin),"[Radio]{FFFFFF}%s - %s dice: %s",BandasInfo[banda][BRango5],pName,text[1]);
					SendRadioMessage(banda, 0xFFFFFFFF, chatadmin,playerid);
					format(chatadmin,sizeof(chatadmin),"[Radio de banda] %s dice: %s",pName,text[1]);
					ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
					return 0;
				}
				case 6:
				{
					format(chatadmin,sizeof(chatadmin),"[Radio]{FFFFFF}%s - %s dice: %s",BandasInfo[banda][BRango6],pName,text[1]);
					SendRadioMessage(banda, 0xFFFFFFFF, chatadmin,playerid);
					format(chatadmin,sizeof(chatadmin),"[Radio de banda] %s dice: %s",pName,text[1]);
					ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
					return 0;
				}
				case 7:
				{
					format(chatadmin,sizeof(chatadmin),"[Radio]{FFFFFF}%s - %s dice: %s",BandasInfo[banda][BRango7],pName,text[1]);
					SendRadioMessage(banda, 0xFFFFFFFF, chatadmin,playerid);
					format(chatadmin,sizeof(chatadmin),"[Radio de banda] %s dice: %s",pName,text[1]);
					ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
					return 0;
				}
				case 8:
				{
					format(chatadmin,sizeof(chatadmin),"[Radio]{FFFFFF}%s - %s dice: %s",BandasInfo[banda][BRango8],pName,text[1]);
					SendRadioMessage(banda, 0xFFFFFFFF, chatadmin,playerid);
					format(chatadmin,sizeof(chatadmin),"[Radio de banda] %s dice: %s",pName,text[1]);
					ProxDetector(15.0, playerid, chatadmin, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
					return 0;
				}
			}
		}
	}
	if(text[0] == '!' && text[1] == '!')
	{
		if(PlayerInfo[playerid][pFaccion] == 1)
		{
			if(PlayerInfo[playerid][pRadio] != 1 && PlayerInfo[playerid][pDuty] == 0) { SendClientMessage(playerid,-1,"Tu no tienes un radio comunicador, puedes comprar uno en un 24/7"); return 0;}
			new chatadmin[256];
			GetPlayerName(playerid,chatadmin,sizeof(chatadmin));
			format(chatadmin,sizeof(chatadmin),"{3399FF}[Radio]{FFFFFF} %s: (( %s ))", chatadmin, text[2]);
			SendClientMessage(playerid,COLOR_WHITE, chatadmin);
			SendRadioMessage(1, -1, chatadmin, playerid);
			return 0;
		}
		else if(PlayerInfo[playerid][pFaccion] > 1)
		{
			new chatadmin[256], banda;
			GetPlayerName(playerid,chatadmin,sizeof(chatadmin));
			banda = PlayerInfo[playerid][pFaccion];
			switch(PlayerInfo[playerid][pRango])
			{
				case 1:
				{
					format(chatadmin,sizeof(chatadmin),"{FF9900}[Radio] {FFFFFF}%s - %s: (( %s ))",BandasInfo[banda][BRango1], chatadmin, text[2]);
					SendRadioMessage(banda, -1, chatadmin,INVALID_PLAYER_ID);
					return 0;
				}
				case 2:
				{
					format(chatadmin,sizeof(chatadmin),"{FF9900}[Radio] {FFFFFF}%s - %s: (( %s ))",BandasInfo[banda][BRango2], chatadmin, text[2]);
					SendRadioMessage(banda, -1, chatadmin,INVALID_PLAYER_ID);
					return 0;
				}
				case 3:
				{
					format(chatadmin,sizeof(chatadmin),"{FF9900}[Radio] {FFFFFF}%s - %s: (( %s ))",BandasInfo[banda][BRango3], chatadmin, text[2]);
					SendRadioMessage(banda, -1, chatadmin,INVALID_PLAYER_ID);
					return 0;
				}
				case 4:
				{
					format(chatadmin,sizeof(chatadmin),"{FF9900}[Radio] {FFFFFF}%s - %s: (( %s ))",BandasInfo[banda][BRango4], chatadmin, text[2]);
					SendRadioMessage(banda, -1, chatadmin,INVALID_PLAYER_ID);
					return 0;
				}
				case 5:
				{
					format(chatadmin,sizeof(chatadmin),"{FF9900}[Radio] {FFFFFF}%s - %s: (( %s ))",BandasInfo[banda][BRango5], chatadmin, text[2]);
					SendRadioMessage(banda, -1, chatadmin,INVALID_PLAYER_ID);
					return 0;
				}
				case 6:
				{
					format(chatadmin,sizeof(chatadmin),"{FF9900}[Radio] {FFFFFF}%s - %s: (( %s ))",BandasInfo[banda][BRango6], chatadmin, text[2]);
					SendRadioMessage(banda, -1, chatadmin,INVALID_PLAYER_ID);
					return 0;
				}
				case 7:
				{
					format(chatadmin,sizeof(chatadmin),"{FF9900}[Radio] {FFFFFF}%s - %s: (( %s ))",BandasInfo[banda][BRango7], chatadmin, text[2]);
					SendRadioMessage(banda, -1, chatadmin,INVALID_PLAYER_ID);
					return 0;
				}
				case 8:
				{
					format(chatadmin,sizeof(chatadmin),"{FF9900}[Radio] {FFFFFF}%s - %s: (( %s ))",BandasInfo[banda][BRango8], chatadmin, text[2]);
					SendRadioMessage(banda, -1, chatadmin,INVALID_PLAYER_ID);
					return 0;
				}
			}
		}
	}
	if(PlayerInfo[playerid][Mobile] != INVALID_PLAYER_ID)
	{
		if(PlayerInfo[playerid][Mobile] == 2540)
		{
		    if(!strfind(text, "si", true))
			{
				new string[256],sendername[50];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s (por celular) dice: %s", sendername, text);
				ProxDetector(15.0, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
				SetTimerEx("LlamadaAceptada",2000,false,"d",playerid);
				return 0;
			}
			else if(!strfind(text, "no", true))
			{
				new string[256],sendername[50];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s (por celular) dice: %s", sendername, text);
				ProxDetector(15.0, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
				SetTimerEx("LlamadaCancelada",2000,false,"d",playerid);
				return 0;
			}
		}
		if(EnLlamada911[playerid] == 911)
		{
			new string[256],sendername[50];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s (por celular) {FFFFFF}dice: %s", sendername, text);
			SendClientMessage(PlayerInfo[playerid][Mobile],TEAM_BLUE_COLOR,string);
			ProxDetector(15.0, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
			return 0;
		}
		else
		{
			new string[256],sendername[50];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s (por celular) dice: %s", sendername, text);
			SendClientMessage(PlayerInfo[playerid][Mobile],COLOR_DORADO,string);
			ProxDetector(15.0, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
			return 0;
		}
	}
	new string[256];
	if(IsPlayerInRangeOfPoint(playerid, 1.0, -1191.9042,2035.5724,1248.3600) || IsPlayerInRangeOfPoint(playerid, 1.0, 631.2384,-180.1683,1276.7941))
	{
	    format(string, sizeof(string), "%s por micrófono: %s",PlayerName(playerid), text);
		ProxDetector(40.0, playerid, string,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF);
	}
	else if(GetPlayerDrunkLevel(playerid) > 5000)
	{
		format(string, sizeof(string), "%s alcoholizado dice: %s",PlayerName(playerid), text);
		ProxDetector(15.0, playerid, string,Hablar,Hablar2,Hablar3,Hablar4,Hablar5);
		SetPlayerChatBubble(playerid, text, 0xFFFFFFFF, 15.0, 5000);
	}
	else
	{
		format(string, sizeof(string), "%s dice: %s",PlayerName(playerid), text);
		ProxDetector(15.0, playerid, string,Hablar,Hablar2,Hablar3,Hablar4,Hablar5);
		SetPlayerChatBubble(playerid, text, 0xFFFFFFFF, 15.0, 5000);
	}
	return 0;
}

public DarNecesidadNormal()
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pVip] < 2)
			{
			    if(PlayerInfo[i][@Nivel] == 1 && YaMostroAlertaSed[i] == 0)
			    {
			        YaMostroAlertaSed[i] = 1;
			        MandarMensajeAlerta(i,"Tu personaje necesita hidratarse, la barra superior azul indica el nivel de sed.");
			        SetTimerEx("OcultarMensajeAlerta",6000,false,"d",i);
			        SetTimerEx("MandarMensajeAlerta",10000,false,"d",i,"Puedes comprar bebidas en los ~g~supermercados 24/7~w~ . Para mas informacion usa ~y~ayuda sed");
			        ResetearYaMostro[i] = SetTimerEx("ResetAlerta",minutos(40),false,"d",i);
			    }
			    if(PlayerInfo[i][@Nivel] > 1 && PlayerInfo[i][pHambre] > 49 && PlayerInfo[i][pHambre] < 60)
			    {
			        YaMostroAlertaSed[i] = 1;
			        MandarMensajeAlerta(i,"Tu hambre llego al 50 porciento, tienes que comer algo.");
			        SetTimerEx("OcultarMensajeAlerta",8000,false,"d",i);
			        SetTimerEx("MandarMensajeAlerta",10000,false,"d",i,"Tu personaje necesita alimentarse, la barra superior naranja indica el nivel de hambre.");
			        SetTimerEx("OcultarMensajeAlerta",16000,false,"d",i);
			        SetTimerEx("MandarMensajeAlerta",20000,false,"d",i,"Puedes comprar comidas en las ~r~franquicias de pizza.~w~ Para mas informacion usa ~y~/ayuda hambre~w~.");
			        ResetearYaMostro[i] = SetTimerEx("ResetAlerta",minutos(40),false,"d",i);
			    }
			    if(PlayerInfo[i][@Nivel] > 1 && PlayerInfo[i][pSed] > 49 && PlayerInfo[i][pSed] < 60)
			    {
			        YaMostroAlertaSed[i] = 1;
			        MandarMensajeAlerta(i,"Tu nivel de sed llego al 50 porciento y necesitas beber algo.");
			        SetTimerEx("OcultarMensajeAlerta",8000,false,"d",i);
			        ResetearYaMostro[i] = SetTimerEx("ResetAlerta",minutos(25),false,"d",i);
			    }
				new restased = 100-PlayerInfo[i][pSed];
				new restahambre = 100-PlayerInfo[i][pHambre];
				if(restased >= 6) PlayerInfo[i][pSed] += 3;
				else if(restased < 6) PlayerInfo[i][pSed] += restased;
				if(restahambre >= 3) PlayerInfo[i][pHambre] += 2;
				else if(restahambre < 3) PlayerInfo[i][pHambre] += restahambre;
				SetPlayerProgressBarValue(i,Progressbar[i][Sed], PlayerInfo[i][pSed]);
				SetPlayerProgressBarValue(i,Progressbar[i][Hambre], PlayerInfo[i][pHambre]);
				if(SedOculta[i] == 0)
				{
					UpdatePlayerProgressBar(i,Progressbar[i][Sed]);
				    UpdatePlayerProgressBar(i,Progressbar[i][Hambre]);
	   			}
			}
		}
	}
	return 1;
}

public DarNecesidadVIP()
{
	for(new i=0;i<MAX_PLAYERS;i++)
	if(IsPlayerConnected(i))
	{
		if(PlayerInfo[i][pVip] > 1)
		{
			new restased = 100-PlayerInfo[i][pSed];
			new restahambre = 100-PlayerInfo[i][pHambre];

			if(restased >= 6) PlayerInfo[i][pSed] += 3;
			else if(restased < 6) PlayerInfo[i][pSed] += restased;
			if(restahambre >= 3) PlayerInfo[i][pHambre] += 2;
			else if(restahambre < 3) PlayerInfo[i][pHambre] += restahambre;
			
			if(PlayerInfo[i][@Nivel] == 1 && YaMostroAlertaSed[i] == 0)
			{
			    YaMostroAlertaSed[i] = 1;
			    MandarMensajeAlerta(i,"Tu personaje necesita hidratarse, la barra superior azul indica el nivel de sed.");
			    SetTimerEx("OcultarMensajeAlerta",6000,false,"d",i);
			    SetTimerEx("MandarMensajeAlerta",10000,false,"d",i,"Puedes comprar bebidas en los ~g~supermercados 24/7~w~ . Para mas informacion usa ~y~ayuda sed");
			    ResetearYaMostro[i] = SetTimerEx("ResetAlerta",minutos(40),false,"d",i);
			}
			if(PlayerInfo[i][@Nivel] > 1 && PlayerInfo[i][pHambre] > 49 && PlayerInfo[i][pHambre] < 60)
			{
			    YaMostroAlertaSed[i] = 1;
			    MandarMensajeAlerta(i,"Tu hambre llego al 50 porciento, tienes que comer algo.");
			    SetTimerEx("OcultarMensajeAlerta",8000,false,"d",i);
			    SetTimerEx("MandarMensajeAlerta",10000,false,"d",i,"Tu personaje necesita alimentarse, la barra superior naranja indica el nivel de hambre.");
			    SetTimerEx("OcultarMensajeAlerta",16000,false,"d",i);
			    SetTimerEx("MandarMensajeAlerta",20000,false,"d",i,"Puedes comprar comidas en las ~r~franquicias de pizza.~w~ Para mas informacion usa ~y~/ayuda hambre~w~.");
			    ResetearYaMostro[i] = SetTimerEx("ResetAlerta",minutos(40),false,"d",i);
			}
			if(PlayerInfo[i][@Nivel] > 1 && PlayerInfo[i][pSed] > 49 && PlayerInfo[i][pSed] < 60)
			{
			    YaMostroAlertaSed[i] = 1;
			    MandarMensajeAlerta(i,"Tu nivel de sed llego al 50 porciento y necesitas beber algo.");
			    SetTimerEx("OcultarMensajeAlerta",8000,false,"d",i);
			    ResetearYaMostro[i] = SetTimerEx("ResetAlerta",minutos(25),false,"d",i);
			}

            SetPlayerProgressBarValue(i,Progressbar[i][Sed], PlayerInfo[i][pSed]);
			SetPlayerProgressBarValue(i,Progressbar[i][Hambre], PlayerInfo[i][pHambre]);

			if(SedOculta[i] == 0)
			{
				UpdatePlayerProgressBar(i,Progressbar[i][Sed]);
				UpdatePlayerProgressBar(i,Progressbar[i][Hambre]);
            }
		}
	}
	return 1;
}

public MostrarInfoVehiculo(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    MandarMensajeAlerta(playerid,"Compraste un vehiculo, ahora comprale una traba de seguridad en algun ~g~24/7 ~w~para que no te lo roben.");
		SetTimerEx("OcultarMensajeAlerta", 15000, 0, "i", playerid);
	}
	return 1;
}

public MostrarAyudaComandos(playerid)
{
	TextDrawShowForPlayer(playerid, NewPlayer[0]);
	PlayerTextDrawShow(playerid, NewPlayerr[playerid]);
	return 1;
}

public SacarAyudaComandos(playerid)
{
	TextDrawHideForPlayer(playerid, NewPlayer[0]);
	PlayerTextDrawHide(playerid, NewPlayerr[playerid]);
	return 1;
}

PreloadAnimLib(playerid, animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
}

LoadAnimLibs(playerid)
{
	PreloadAnimLib(playerid,"ATTRACTORS"); 				PreloadAnimLib(playerid,"BAR"); 				PreloadAnimLib(playerid,"BASEBALL");
	PreloadAnimLib(playerid,"BENCHPRESS"); 				PreloadAnimLib(playerid,"BOMBER"); 				PreloadAnimLib(playerid,"BLOWJOBZ");
	PreloadAnimLib(playerid,"BSKTBALL"); 				PreloadAnimLib(playerid,"CAR"); 				PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"COP_AMBIENT"); 			PreloadAnimLib(playerid,"CRACK");               PreloadAnimLib(playerid,"FIGHT_C");
	PreloadAnimLib(playerid,"DAM_JUMP"); 				PreloadAnimLib(playerid,"DANCING"); 			PreloadAnimLib(playerid,"DEALER");
	PreloadAnimLib(playerid,"GRAFFITI"); 				PreloadAnimLib(playerid,"FOOD"); 				PreloadAnimLib(playerid,"FREEWEIGHTS");
	PreloadAnimLib(playerid,"GANGS"); 					PreloadAnimLib(playerid,"GHANDS"); 				PreloadAnimLib(playerid,"GRAVEYARD");
	PreloadAnimLib(playerid,"INT_HOUSE"); 				PreloadAnimLib(playerid,"HEIST9"); 				PreloadAnimLib(playerid,"GYMNASIUM");
	PreloadAnimLib(playerid,"POLICE"); 					PreloadAnimLib(playerid,"RAPPING");				PreloadAnimLib(playerid,"KISSING");
	PreloadAnimLib(playerid,"KNIFE");					PreloadAnimLib(playerid,"MD_CHASE");			PreloadAnimLib(playerid,"MEDIC");
	PreloadAnimLib(playerid,"ON_LOOKERS");				PreloadAnimLib(playerid,"PARACHUTE");			PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"PAULNMAC");				PreloadAnimLib(playerid,"PED");					PreloadAnimLib(playerid,"SHOP");
	PreloadAnimLib(playerid,"SKATE");					PreloadAnimLib(playerid,"SMOKING");				PreloadAnimLib(playerid,"SPRAYCAN");
	PreloadAnimLib(playerid,"STRIP");					PreloadAnimLib(playerid,"SUNBATHE"); 			PreloadAnimLib(playerid,"WUZI");
	PreloadAnimLib(playerid,"SWEET");
}

public LanzarArpon1(playerid)
{
	ClearAnimations(playerid);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	RemovePlayerAttachedObject(playerid, 2);
	SetPlayerCheckpoint(playerid, 2786.7866,-2594.8406,-1.0248, 7.0);
	RecorridoPescador[playerid] = 1;
	new vehch = GetPlayerNearestVehicle(playerid);
	pescador[playerid] = CreateObject(1609,0,0,-1000,0,0,0,100);
	AttachObjectToVehicle(pescador[playerid], vehch, -0.075000,-6.524995,2.175000,80.999992,0.000000,0.000000);
	SendClientMessage(playerid, -1, "Atrapaste una tortuga, llévala al muelle de Ocean Docks para recibir el dinero.");
	StopAudioStreamForPlayer(playerid);
	AccionesRol(playerid,"logró atrapar una Tortuga.", 20);
	GangZoneHideForPlayer(playerid, mares);
	pesca[playerid] = 1;
}

public LanzarArpon2(playerid)
{
	ClearAnimations(playerid);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	RemovePlayerAttachedObject(playerid, 2);
	SetPlayerCheckpoint(playerid, 2786.7866,-2594.8406,-1.0248, 7.0);
	RecorridoPescador[playerid] = 1;
	new vehch = GetPlayerNearestVehicle(playerid);
	pescador[playerid] = CreateObject(1607,0,0,-1000,0,0,0,100);
	AttachObjectToVehicle(pescador[playerid], vehch, 0.000000,-6.899994,-0.675000,86.399986,0.000000,0.000000);
	SendClientMessage(playerid, -1, "Atrapaste un delfín, llévalo al muelle de Ocean Docks para recibir el dinero.");
	StopAudioStreamForPlayer(playerid);
	AccionesRol(playerid,"logró atrapar un Delfín.", 20);
	GangZoneHideForPlayer(playerid, mares);
	pesca[playerid] = 2;
}

public LanzarArpon3(playerid)
{
	ClearAnimations(playerid);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	RemovePlayerAttachedObject(playerid, 2);
	SetPlayerCheckpoint(playerid, 2786.7866,-2594.8406,-1.0248, 7.0);
	RecorridoPescador[playerid] = 1;
	new vehch = GetPlayerNearestVehicle(playerid);
	pescador[playerid] = CreateObject(1608,0,0,-1000,0,0,0,100);
	AttachObjectToVehicle(pescador[playerid], vehch, 0.000000,-6.674995,-2.550000,91.799980,0.000000,0.000000);
	SendClientMessage(playerid, -1, "Atrapaste un tiburón, llévalo al muelle de Ocean Docks para recibir el dinero.");
	StopAudioStreamForPlayer(playerid);
	AccionesRol(playerid,"logró atrapar un Tiburón.", 20);
	GangZoneHideForPlayer(playerid, mares);
	pesca[playerid] = 3;
}

public modificarpuntotren(playerid)
{
	foreach (NPC, i)
	{
    	if(i == TrenUno || i == TrenDos || i == TrenTres || i == TrenCuatro)
		{
   			PlayerTextDrawDestroy(playerid, tren[playerid][i]);

	    	new Float:circuloPos[2];
	    	new Float:posicionJugador[3];
		    GetPlayerPos(i, posicionJugador[0], posicionJugador[1], posicionJugador[2]);
   			floatMapa3Da2D(posicionJugador[0], posicionJugador[1], 360.000000, 26.000000,256.000000,256.000000, circuloPos[0], circuloPos[1]);
			tren[playerid][i] = CreatePlayerTextDraw(playerid, circuloPos[0], circuloPos[1], "hud:radar_light");
			PlayerTextDrawLetterSize(playerid, tren[playerid][i], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, tren[playerid][i], 8.444448, 9.457767);
			PlayerTextDrawAlignment(playerid, tren[playerid][i], 2);
			PlayerTextDrawColor(playerid, tren[playerid][i], -1);
			PlayerTextDrawSetShadow(playerid, tren[playerid][i], 0);
			PlayerTextDrawSetOutline(playerid, tren[playerid][i], 0);
			PlayerTextDrawFont(playerid, tren[playerid][i], 4);
			PlayerTextDrawShow(playerid, tren[playerid][i]);
		}
	}
	return 1;
}

public modificarpunto(playerid)
{
	PlayerTextDrawDestroy(playerid, jugador[playerid]);
	new Float:circuloPos[2];
	new Float:posicionJugador[3];
	GetPlayerPos(playerid, posicionJugador[0], posicionJugador[1], posicionJugador[2]);
    floatMapa3Da2D(posicionJugador[0], posicionJugador[1], 360.000000, 26.000000,256.000000,256.000000, circuloPos[0], circuloPos[1]);
	jugador[playerid] = CreatePlayerTextDraw(playerid, circuloPos[0], circuloPos[1], "hud:radar_waypoint");
	PlayerTextDrawLetterSize(playerid, jugador[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, jugador[playerid], 8.444448, 9.457767);
	PlayerTextDrawAlignment(playerid, jugador[playerid], 2);
	PlayerTextDrawColor(playerid, jugador[playerid], -1);
	PlayerTextDrawSetShadow(playerid, jugador[playerid], 0);
	PlayerTextDrawSetOutline(playerid, jugador[playerid], 0);
	PlayerTextDrawFont(playerid, jugador[playerid], 4);
	PlayerTextDrawShow(playerid, jugador[playerid]);
	return 1;
}

public CancelarMeca(playerid)
{
	if(LlamadaMeca[playerid] == 1)
	{
		SendClientMessage(playerid,-1,"El llamado al servicio mecánico fue cancelado automáticamente.");
		SendClientMessage(playerid,-1,"Si aún necesitas un mecánico, escribe {DBED16}/servicio mecanico{FFFFFF} nuevamente.");
		SetPlayerColor(playerid, c0_color);
		LlamadaMeca[playerid] = 0;
	}
}

public CancelarMedi(playerid)
{
	if(MarcadoMedicos[playerid] == 1)
	{
		SendClientMessage(playerid,-1,"El llamado al servicio médico fue cancelado automáticamente.");
		SendClientMessage(playerid,-1,"Si aún necesitas un médico, escribe {DBED16}/servicio medico{FFFFFF} nuevamente.");
		SetPlayerColor(playerid, c0_color);
		MarcadoMedicos[playerid] = 0;
	}
}

public CancelarTaxi(playerid)
{
	if(LlamadaTaxi[playerid] == 1)
	{
		SendClientMessage(playerid,-1,"El llamado al servicio taxi fue cancelado automáticamente.");
		SendClientMessage(playerid,-1,"Si aún necesitas un taxi, escribe {DBED16}/servicio taxi{FFFFFF} nuevamente.");
		SetPlayerColor(playerid, c0_color);
		LlamadaTaxi[playerid] = 0;
	}
}

public llamada(playerid)
{
	PlayerPlaySound(playerid, 3401, 0.0, 0.0, 0.0);
	llamadasonido1[playerid] = SetTimerEx("llamada2", 950, false, "i", playerid);
	return 1;
}

public llamada2(playerid)
{
	PlayerPlaySound(playerid, 3402, 0.0, 0.0, 0.0);
	llamadasonido2[playerid] = SetTimerEx("llamada", 950, false, "i", playerid);
	return 1;
}

public finllamada(playerid)
{
	KillTimer(llamadasonido1[playerid]);
	KillTimer(llamadasonido2[playerid]);
	PlayerPlaySound(playerid, 3402, 0.0, 0.0, 0.0);
	return 1;
}

public finllamadax(playerid)
{
	KillTimer(llamadasonido1[playerid]);
	KillTimer(llamadasonido2[playerid]);
	PlayerPlaySound(playerid, 3402, 0.0, 0.0, 0.0);
	cmd_colgar(playerid);
	return 1;
}

public TimeMiner(playerid)
{
	if(Picando[playerid] < 10)
	{
		Picando[playerid]++;
		SetPlayerProgressBarValue(playerid,Progressbar[playerid][Picar], Picando[playerid]);
		UpdatePlayerProgressBar(playerid,Progressbar[playerid][Picar]);
		if(Picando[playerid] == 10)
		{
		    Picando[playerid] = 0;
		    KillTimer(hands[playerid]);
			HidePlayerProgressBar(playerid, Progressbar[playerid][Picar]);
			TogglePlayerControllable(playerid, 1);
			SetPVarInt(playerid, "IsFrozen", 1);
			ApplyAnimation(playerid,"CARRY","crry_prtial",10,7,5,1,1,1);
			StopAudioStreamForPlayer(playerid);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
			if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
			SetPlayerAttachedObject(playerid,2, 905, 6, 0.121996, -0.002002, -0.212000, -125.299995, 159.900146, -172.099975, 0.207000, 0.293000, 0.202000);
			rocajugador[playerid] = 897;
			AccionesRol(playerid,"agarra una roca con sus manos.", 20);
			SendClientMessage(playerid, -1, "Deja la roca en la procesadora que se encuentra fuera de la mina.");
		}
	}
	return 1;
}

public MoverAlerta(playerid)
{
	TextDrawShowForPlayer(playerid, AlertaRefuerzos[4]);
	SetTimerEx("MoverAlerta1",4000,false,"i",playerid);
	return 1;
}

public MoverAlerta1(playerid)
{
	TextDrawHideForPlayer(playerid, AlertaRefuerzos[4]);
	SetTimerEx("MoverAlerta2",4000,false,"i",playerid);
	return 1;
}

public MoverAlerta2(playerid)
{
	TextDrawShowForPlayer(playerid, AlertaRefuerzos[4]);
	SetTimerEx("MoverAlerta3",4000,false,"i",playerid);
	return 1;
}

public MoverAlerta3(playerid)
{
	TextDrawHideForPlayer(playerid, AlertaRefuerzos[4]);
	SetTimerEx("MoverAlerta4",4000,false,"i",playerid);
	return 1;
}

public MoverAlerta4(playerid)
{
	TextDrawShowForPlayer(playerid, AlertaRefuerzos[4]);
	SetTimerEx("QuitarMovimiento",4000,false,"i",playerid);
	return 1;
}

public QuitarMovimiento(playerid)
{
 	if(TiempoRef[playerid] > 0 || TiempoComputadora[playerid] > 0)
	{
		TextDrawHideForPlayer(playerid, AlertaRefuerzos[4]);
		SetTimerEx("QuitarMovimiento",4000,false,"i",playerid);
	}
	else if(TiempoRef[playerid] == 0 || TiempoComputadora[playerid] == 0)
	{
	    TextDrawHideForPlayer(playerid, AlertaRefuerzos[0]);
	    TextDrawHideForPlayer(playerid, AlertaRefuerzos[1]);
	    TextDrawHideForPlayer(playerid, AlertaRefuerzos[2]);
	    TextDrawHideForPlayer(playerid, AlertaRefuerzos[3]);
	    TextDrawHideForPlayer(playerid, AlertaRefuerzos[4]);
	}
	return 1;
}

public CerrarBlindado()
{
	GetVehicleParamsEx(253,engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(253, engine, lights, alarm, 1, bonnet, boot, objective);
	GetVehicleParamsEx(254,engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(254, engine, lights, alarm, 1, bonnet, boot, objective);
	GetVehicleParamsEx(258,engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(258, engine, lights, alarm, 1, bonnet, boot, objective);
}

public TimerGPS()
{
	foreach(Player,u)
	{
		if(GPSActivado[u] == 1)
		{
			PlayerTextDrawDestroy(u, PlayerGPS[u]);
			new Float:DyGPSPos[2];
			new Float:posicionPlayerGPS[3];
			GetPlayerPos(u, posicionPlayerGPS[0], posicionPlayerGPS[1], posicionPlayerGPS[2]);
   			floatMapa3Da2D(posicionPlayerGPS[0], posicionPlayerGPS[1], 360.000000, 26.000000,256.000000,256.000000, DyGPSPos[0], DyGPSPos[1]);

			PlayerGPS[u] = CreatePlayerTextDraw(u, DyGPSPos[0], DyGPSPos[1], "hud:radar_waypoint");
			PlayerTextDrawLetterSize(u, PlayerGPS[u], 1.000000, 2.000000);
			PlayerTextDrawTextSize(u, PlayerGPS[u], 8.000000, 8.000000);
			PlayerTextDrawAlignment(u, PlayerGPS[u], 0);
			PlayerTextDrawUseBox(u, PlayerGPS[u], 1);
			PlayerTextDrawColor(u, PlayerGPS[u], -1);
			PlayerTextDrawSetShadow(u, PlayerGPS[u], 1);
			PlayerTextDrawSetOutline(u, PlayerGPS[u], 0);
			PlayerTextDrawBackgroundColor(u, PlayerGPS[u], 0x000000FF);
			PlayerTextDrawSetProportional(u, PlayerGPS[u], 1);
			PlayerTextDrawFont(u, PlayerGPS[u], 4);
			PlayerTextDrawShow(u, PlayerGPS[u]);

            for(new i = 0; i <MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i) && GetPlayerInterior(i) == 0)
				{
					new Float: Pos[3];
					GetPlayerPos(i, Pos[0], Pos[1], Pos[2]);
					floatMapa3Da2D(Pos[0], Pos[1], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[i][0], GPSPOS[i][1]);
					if(PlayerInfo[u][pTrabajo] == T_Medico || PlayerInfo[u][pTrabajo2] == T_Medico)
					{
						if(RopaMedi[u] == 1)
						{

							switch(MarcadoMedicos[i])
							{
								case 0: {if(TDPGPSCreado[u][i] == 1){PlayerTextDrawDestroy(u, TextDPGPS[u][i]);PlayerTextDrawDestroy(u, TextDPGPS2[u][i]);TDPGPSCreado[u][i] = 0;}}
								case 1: CrearPlayerIconoGPS(u, i, GPSPOS[i][0], GPSPOS[i][1], 0x00CC00FF);
							}
						}
					}
					if(PlayerInfo[u][pTrabajo] == T_Taxista || PlayerInfo[u][pTrabajo2] == T_Taxista)
					{
						switch(LlamadaTaxi[i])
						{
							case 0: {if(TDPGPSCreado[u][i] == 1){PlayerTextDrawDestroy(u, TextDPGPS[u][i]);PlayerTextDrawDestroy(u, TextDPGPS2[u][i]);TDPGPSCreado[u][i] = 0;}}
							case 1: CrearPlayerIconoGPS(u, i, GPSPOS[i][0], GPSPOS[i][1], 0xDBED16FF);
						}
					}
					if(PlayerInfo[u][pTrabajo] == T_Mecanico || PlayerInfo[u][pTrabajo2] == T_Mecanico)
					{
						if(RopaMeca[u] == 1 || GetPlayerSkin(u) == 50)
						{
							switch(LlamadaMeca[i])
							{
								case 0: {if(TDPGPSCreado[u][i] == 1){PlayerTextDrawDestroy(u, TextDPGPS[u][i]);PlayerTextDrawDestroy(u, TextDPGPS2[u][i]);TDPGPSCreado[u][i] = 0;}}
								case 1: CrearPlayerIconoGPS(u, i, GPSPOS[i][0], GPSPOS[i][1], 0x00CCFFFF);
							}
						}
					}
					if(PlayerInfo[u][pFaccion] == PlayerInfo[i][pFaccion] && PlayerInfo[i][pFaccion] != 1)
					{
						switch(FlashRef2[i])
						{
							case 0: {if(TDPGPSCreado[u][i] == 1){PlayerTextDrawDestroy(u, TextDPGPS[u][i]);PlayerTextDrawDestroy(u, TextDPGPS2[u][i]);TDPGPSCreado[u][i] = 0;}}
							case 1: CrearPlayerIconoGPS(u, i, GPSPOS[i][0], GPSPOS[i][1], 0xFFB833FF);
						}
					}
					if(PlayerInfo[u][pDuty] == 1)
					{
						if(PlayerInfo[i][pCargos] > 0)
						{
							if(VariableCaido[i] == 1 || Esposando[i] == 2)
							{
								if(PlayerInfo[i][pCargos] > 0) CrearPlayerIconoGPS(u, i, GPSPOS[i][0], GPSPOS[i][1], 0x33AA33FF);
							}
							else
							{

								switch(PlayerInfo[i][pCargos])
								{
									case 0: {if(TDPGPSCreado[u][i] == 1){PlayerTextDrawDestroy(u, TextDPGPS[u][i]);PlayerTextDrawDestroy(u, TextDPGPS2[u][i]);TDPGPSCreado[u][i] = 0;}}
									case 1: CrearPlayerIconoGPS(u, i, GPSPOS[i][0], GPSPOS[i][1], 0xFFFDBAFF);
									case 2: CrearPlayerIconoGPS(u, i, GPSPOS[i][0], GPSPOS[i][1], 0xFFC600FF);
									case 3: CrearPlayerIconoGPS(u, i, GPSPOS[i][0], GPSPOS[i][1], 0xFFA200FF);
									case 4: CrearPlayerIconoGPS(u, i, GPSPOS[i][0], GPSPOS[i][1], 0xFF8400FF);
									case 5: CrearPlayerIconoGPS(u, i, GPSPOS[i][0], GPSPOS[i][1], 0xFF5A00FF);
									case 6 .. 10000: CrearPlayerIconoGPS(u, i, GPSPOS[i][0], GPSPOS[i][1], 0xFF1E00FF);
								}
							}
						}
						else
						{
							if(TiempoRef[i] > 0 && i != u)
							{
						     	switch(FlashRef[i])
								{
									case 0: {if(TDPGPSCreado[u][i] == 1){PlayerTextDrawDestroy(u, TextDPGPS[u][i]);PlayerTextDrawDestroy(u, TextDPGPS2[u][i]);TDPGPSCreado[u][i] = 0;}}
									case 1: CrearPlayerIconoGPS(u, i, GPSPOS[i][0], GPSPOS[i][1], 0x3399FFFF);
								}
							}
						}
					}
				}
			}
			if(PuntoCX[u] != 0)
			{
				new i = (MAX_TEXTDRAWS-1);
				floatMapa3Da2D(PuntoCX[u],PuntoCY[u], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[i][0], GPSPOS[i][1]);
				CrearPlayerIconoGPS(u, i, GPSPOS[i][0], GPSPOS[i][1], 0xAA0000FF);
			}
			else if(PuntoCX[u] == 0)
			{
			    new i = (MAX_TEXTDRAWS-1);
				if(TDPGPSCreado[u][i] == 1)
				{
					PlayerTextDrawDestroy(u, TextDPGPS[u][i]);
					PlayerTextDrawDestroy(u, TextDPGPS2[u][i]);
					TDPGPSCreado[u][i] = 0;
				}
			}
			if(PuntoGPSX[u] != 0)
			{
				new i = (MAX_TEXTDRAWS-1);
				floatMapa3Da2D(PuntoGPSX[u],PuntoGPSY[u], 360.000000, 26.000000,256.000000,256.000000, GPSPOS[i][0], GPSPOS[i][1]);
				CrearPlayerIconoGPS(u, i, GPSPOS[i][0], GPSPOS[i][1], 0xAA0000FF);
			}
			else if(PuntoGPSX[u] == 0)
			{
			    new i = (MAX_TEXTDRAWS-1);
				if(TDPGPSCreado[u][i] == 1)
				{
					PlayerTextDrawDestroy(u, TextDPGPS[u][i]);
					PlayerTextDrawDestroy(u, TextDPGPS2[u][i]);
					TDPGPSCreado[u][i] = 0;
				}
			}
		}
	}
}

public SetPlayerStats(playerid)
{
	if(PlayerInfo[playerid][@Nivel] == 1 || PlayerInfo[playerid][@Nivel] == 2)
	{
	    SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 400);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 400);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 400);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 400);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 400);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 400);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 400);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 400);
 		SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 400);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 400);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 400);
	}
	if(PlayerInfo[playerid][@Nivel] == 3)
	{
		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 550);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 1000);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 1000);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 1000);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 400);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 400);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 550);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 550);
 	    SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 550);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 550);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 550);
	}
	if(PlayerInfo[playerid][@Nivel] > 3)
	{
		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 550);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 1000);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 1000);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 1000);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 400);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 400);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 1000);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 1000);
	    SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 1000);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 1000);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 1000);
	}
	return 1;
}

ProxDetectorS(Float:radi, playerid, targetid)
{
	new
	Float: fp_playerPos[3];
	GetPlayerPos(targetid, fp_playerPos[0], fp_playerPos[1], fp_playerPos[2]);
	if(IsPlayerInRangeOfPoint(playerid, radi, fp_playerPos[0], fp_playerPos[1], fp_playerPos[2]) && GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(targetid))
	{
		return 1;
	}
	return 0;
}

PuntosCamello(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid,2.5,2385.2434,-1771.1910,13.5469) || IsPlayerInRangeOfPoint(playerid,2.5, 2293.6973,-1693.1864,13.5482) || IsPlayerInRangeOfPoint(playerid,2.5, 2441.2925,-1689.9332,13.8047) || IsPlayerInRangeOfPoint(playerid,2.5, 2252.9622,-1793.9364,13.5546))
	{
	    CamelloHablar = Create3DTextLabel("/hablar", 0xFFFFFFFF, 0.0, 0.0, 0.0, 10, 1);
		return 1;
	}
	else return Delete3DTextLabel(CamelloHablar);
}

function ClearReports()
{
	for(new i=0;i<MAX_REPORTS;i++)
	{
		strmid(Reports[i][Report], "Ninguno", 0, 4, 4);
		Reports[i][ReportadoID] = 999;
		Reports[i][CheckingReport] = 999;
        Reports[i][ReportFrom] = 999;
        Reports[i][HasBeenUsed] = 0;
        Reports[i][BeingUsed] = 0;
	}
	return 1;
}

RespawnNearbyVehicles(playerid, Float:radi)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	for(new i=1; i<MAX_VEHICLES; i++)
	{
	    if(GetVehicleModel(i))
	    {
	        new Float:posx, Float:posy, Float:posz;
	        new Float:tempposx, Float:tempposy, Float:tempposz;
	        GetVehiclePos(i, posx, posy, posz);
	        tempposx = (posx - x);
	        tempposy = (posy - y);
	        tempposz = (posz - z);
	        if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
	        {
	            SetVehicleToRespawn(i);
	        }
	    }
	}
}
MandarMensajeInvitado(radio, mensaje[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(EmisoraEscuchando[GetPlayerVehicleID(i)] == radio || IsPlayerInDynamicArea(i, AreaCabinas[ radio]))
	 	{
			new string[296], locutor;
			locutor = CabinasOcupadasEmisoras[radio][1];
			format(string, sizeof(string), "[Invitado de radio %s]: %s", Emisoras[locutor][NombreEmisora], mensaje);
			SendClientMessage(i, 0xffd36bff, string);
		}
	}
	return 1;
}
MandarMensajeLocutor(radio, mensaje[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(EmisoraEscuchando[GetPlayerVehicleID(i)] == radio || IsPlayerInDynamicArea(i, AreaCabinas[ radio]))
	 	{
			new string[296], locutor;
			locutor = CabinasOcupadasEmisoras[radio][1];
			format(string, sizeof(string), "[Locutor en radio %s]:: %s", Emisoras[locutor][NombreEmisora], mensaje);
			SendClientMessage(i, 0xffd36bff, string);
		}
	}
	return 1;
}
MandarMensajeSalon(mensaje[], id)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(strcmp(Alquilador,PlayerName(i),true) == 0)
	 	{
	 	    if(id != i)
	 	    {
				SendClientMessage(i, -1, mensaje);
			}
		}
	}
	return 1;
}

public OnPlayerLeaveDynamicArea(playerid, areaid)
{
	if(areaid == AreaCabinas[1])
	{
		if(CabinasOcupadasEmisoras[1][0] != 0)
		{
			new id = CabinasOcupadasEmisoras[1][1];
			if(Emisoras[id][CabinaOcupada] == 1)
			{
				if(Emisoras[id][TransEmisora] == 1)
				{
					StopAudioStreamForPlayer(playerid);
					CabinasOcupadasEmisoras[1][2]--;
					if(id == playerid)
					{
						if(CabinasOcupadasEmisoras[1][0] == 1)
						{
							CabinasOcupadasEmisoras[1][0] = 0;
							CabinasOcupadasEmisoras[1][1] = -1;
							CabinasOcupadasEmisoras[1][2] = 0;
							Emisoras[playerid][TransEmisora] = 0;
							Emisoras[playerid][CabinaOcupada] = 0;
							format(Emisoras[playerid][URLEmisora], 128, "http://"EMISORA_URL"");
							UpdateDynamic3DTextLabelText(CabinasTextos[1], 0xFFFFFFFF, "{FFFFFF}Radio disponible {C0C0C0}[N1]");
							SendClientMessage(playerid, COLOR_WHITE, "Has dejado de transmitir en esta cabina.");
							RemovePlayerAttachedObject(playerid, 2);
							Loop2(id2,MAX_CONECTADOS)
							{
								if(TieneMicrofono[id2] == 1)
								{
									TieneMicrofono[id2] = 0;
								}
								if(IsPlayerInDynamicArea(id2, AreaCabinas[1]))
								{
									SendClientMessage(id2, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
									StopAudioStreamForPlayer(id2);
									print("1");
								}
								if(IsPlayerInAnyVehicle(id2) && EmisoraEscuchando[GetPlayerVehicleID(id2)] == 1)
								{
									SendClientMessage(id2, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
									StopAudioStreamForPlayer(id2);
									print("2");
								}
							}
							for(new vehicleid = 0; vehicleid < MAX_PLAYERS; vehicleid++)
							{
								if(EmisoraEscuchando[vehicleid] == 1)
								{
									EmisoraEscuchando[vehicleid] = -1;
								}
							}
							return 1;
						}
					}
					return 1;
				}
			}
		}
	}
	if(areaid == AreaCabinas[2])
	{
		if(CabinasOcupadasEmisoras[2][0] != 0)
		{
			new id = CabinasOcupadasEmisoras[2][1];
			if(Emisoras[id][CabinaOcupada] == 2)
			{
				if(Emisoras[id][TransEmisora] == 1)
				{
					StopAudioStreamForPlayer(playerid);
					CabinasOcupadasEmisoras[2][2]--;
					if(id == playerid)
					{
						if(CabinasOcupadasEmisoras[2][0] == 1)
						{
							CabinasOcupadasEmisoras[2][0] = 0;
							CabinasOcupadasEmisoras[2][1] = -1;
							CabinasOcupadasEmisoras[2][2] = 0;
							Emisoras[playerid][TransEmisora] = 0;
							Emisoras[playerid][CabinaOcupada] = 0;
							format(Emisoras[playerid][URLEmisora], 128, "http://"EMISORA_URL"");
							UpdateDynamic3DTextLabelText(CabinasTextos[2], 0xFFFFFFFF, "{FFFFFF}Radio disponible {C0C0C0}[N2]");
							SendClientMessage(playerid, COLOR_WHITE, "Has dejado de transmitir en esta cabina.");
							RemovePlayerAttachedObject(playerid, 2);
							for(new id2 = 0; id2 < MAX_PLAYERS; id2++)
							{
								if(TieneMicrofono[id2] == 2)
								{
								TieneMicrofono[id2] = 0;
								}
								if(IsPlayerInDynamicArea(id2, AreaCabinas[2]))
								{
									SendClientMessage(id2, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
									StopAudioStreamForPlayer(id2);
									print("3");
								}
								if(IsPlayerInAnyVehicle(id2) && EmisoraEscuchando[GetPlayerVehicleID(id2)] == 2)
								{
									SendClientMessage(id2, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
									StopAudioStreamForPlayer(id2);
									print("4");
								}
							}
							for(new vehicleid = 0; vehicleid < MAX_PLAYERS; vehicleid++)
							{
								if(EmisoraEscuchando[vehicleid] == 2)
								{
								EmisoraEscuchando[vehicleid] = -1;
								}
							}
							return 1;
						}
					}
					return 1;
				}
			}
		}
	}
	if(areaid == AreaCabinas[3])
	{
		if(CabinasOcupadasEmisoras[3][0] != 0)
		{
			new id = CabinasOcupadasEmisoras[3][1];
			if(Emisoras[id][CabinaOcupada] == 3)
			{
				if(Emisoras[id][TransEmisora] == 1)
				{
					StopAudioStreamForPlayer(playerid);
					CabinasOcupadasEmisoras[3][2]--;
					if(id == playerid)
					{
						if(CabinasOcupadasEmisoras[3][0] == 1)
						{
							CabinasOcupadasEmisoras[3][0] = 0;
							CabinasOcupadasEmisoras[3][1] = -1;
							CabinasOcupadasEmisoras[3][2] = 0;
							Emisoras[playerid][TransEmisora] = 0;
							Emisoras[playerid][CabinaOcupada] = 0;
							format(Emisoras[playerid][URLEmisora], 128, "http://"EMISORA_URL"");
							UpdateDynamic3DTextLabelText(CabinasTextos[3], 0xFFFFFFFF, "{FFFFFF}Radio disponible {C0C0C0}[N3]");
							SendClientMessage(playerid, COLOR_WHITE, "Has dejado de transmitir en esta cabina.");
							RemovePlayerAttachedObject(playerid, 2);
							for(new id2 = 0; id2 < MAX_PLAYERS; id2++)
							{
								if(TieneMicrofono[id2] == 3)
								{
									TieneMicrofono[id2] = 0;
								}
								if(IsPlayerInDynamicArea(id2, AreaCabinas[3]))
								{
									SendClientMessage(id2, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
									StopAudioStreamForPlayer(id2);
									print("5");
								}
								if(IsPlayerInAnyVehicle(id2) && EmisoraEscuchando[GetPlayerVehicleID(id2)] == 3)
								{
									SendClientMessage(id2, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
									StopAudioStreamForPlayer(id2);
									print("6");
								}
							}
							for(new vehicleid = 0; vehicleid < MAX_PLAYERS; vehicleid++)
							{
								if(EmisoraEscuchando[vehicleid] == 3)
								{
									EmisoraEscuchando[vehicleid] = -1;
								}
							}
							return 1;
						}
					}
					return 1;
				}
			}
		}
	}
	if(areaid == AreaCabinas[4])
	{
		if(CabinasOcupadasEmisoras[4][0] != 0)
		{
			new id = CabinasOcupadasEmisoras[4][1];
			if(Emisoras[id][CabinaOcupada] == 4)
			{
				if(Emisoras[id][TransEmisora] == 1)
				{
					StopAudioStreamForPlayer(playerid);
					CabinasOcupadasEmisoras[4][2]--;
					if(id == playerid)
					{
						if(CabinasOcupadasEmisoras[4][0] == 1)
						{
							CabinasOcupadasEmisoras[4][0] = 0;
							CabinasOcupadasEmisoras[4][1] = -1;
							CabinasOcupadasEmisoras[4][2] = 0;
							Emisoras[playerid][TransEmisora] = 0;
							Emisoras[playerid][CabinaOcupada] = 0;
							format(Emisoras[playerid][URLEmisora], 128, "http://"EMISORA_URL"");
							UpdateDynamic3DTextLabelText(CabinasTextos[4], 0xFFFFFFFF, "{FFFFFF}Radio disponible {C0C0C0}[N4]");
							SendClientMessage(playerid, COLOR_WHITE, "Has dejado de transmitir en esta cabina.");
							RemovePlayerAttachedObject(playerid, 2);
							for(new id2 = 0; id2 < MAX_PLAYERS; id2++)
							{
								if(TieneMicrofono[id2] == 4)
								{
									TieneMicrofono[id2] = 0;
								}
								if(IsPlayerInDynamicArea(id2, AreaCabinas[4]))
								{
									SendClientMessage(id2, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
									StopAudioStreamForPlayer(id2);
									print("7");
								}
								if(IsPlayerInAnyVehicle(id2) && EmisoraEscuchando[GetPlayerVehicleID(id2)] == 4)
								{
									SendClientMessage(id2, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
									StopAudioStreamForPlayer(id2);
									print("8");
								}
							}
							for(new vehicleid = 0; vehicleid < MAX_PLAYERS; vehicleid++)
							{
								if(EmisoraEscuchando[vehicleid] == 4)
								{
									EmisoraEscuchando[vehicleid] = -1;
								}
							}
							return 1;
						}
					}
					return 1;
				}
			}
		}
	}
	if(areaid == AreaCabinas[5])
	{
		KillTimer(DANOF[playerid]);
		TextDrawHideForPlayer(playerid, Sangre2);
	}
	return 1;
}

function MotorMalogrado(playerid)
{
    AccionesRol(playerid,"intenta encender el motor de su vehículo pero no puede.", 20);
	SendClientMessage(playerid, -1, "El motor del vehículo está dañado, escribe {DBED16}/servicio mecanico{FFFFFF}.");
	return 1;
}
function Error(playerid)
{
    Kick(playerid);
	return 1;
}
EstablecerVida(playerid, Float:vida)
{
	PlayerInfo[playerid][@Salud] = vida;
	return SetPlayerHealth(playerid, vida);
}

EstablecerChaleco(playerid, Float:chaleco)
{
	PlayerInfo[playerid][@Chaleco] = chaleco;
	return SetPlayerArmour(playerid, chaleco);
}

public bool:Buscar(const search[], const find[])
{
	if(strfind(search, find) != -1) return true;
	return false;
}

public EmpezarCarrera()
{
    new string[300];
	if(TipoConteo == 0)
	{
		if(ConteoCarrera >= 3)
		{
		    ConteoCarrera --;
		    format(string,sizeof(string),"En {00CC00}%d minutos{FFFFFF} comienza la carrera, ya se inscribieron {DBED15}%d{FFFFFF} corredores.",ConteoCarrera,ParticipantesCarrera);
			for(new i, j = GetPlayerPoolSize(); i <= j; i++) if(IsPlayerInRangeOfPoint(i,250,-1408.8688,-304.5082,1056.4351) && GetPlayerInterior(i) == 7) SendClientMessage(i,-1,string);
            SetTimer("EmpezarCarrera",60*1000,0);
		}
		else if(ConteoCarrera <= 2)
		{
            TipoConteo = 1;
            ConteoCarrera = 60;
		    format(string,sizeof(string),"En {00CC00}1 minuto{FFFFFF} comienza la carrera, ya se inscribieron {DBED15}%d{FFFFFF} corredores.",ParticipantesCarrera);
			for(new i, j = GetPlayerPoolSize(); i <= j; i++) if(IsPlayerInRangeOfPoint(i,250,-1408.8688,-304.5082,1056.4351) && GetPlayerInterior(i) == 7) SendClientMessage(i,-1,string);
            SetTimer("EmpezarCarrera",10*1000,0);
		}
	}
	else if(TipoConteo == 1)
	{
	    if(ConteoCarrera > 10)
	    {
		    format(string,sizeof(string),"En {00CC00}%d segundos{FFFFFF} comienza la carrera, ya se inscribieron {DBED15}%d{FFFFFF} corredores.",ConteoCarrera,ParticipantesCarrera);
			for(new i, j = GetPlayerPoolSize(); i <= j; i++) if(IsPlayerInRangeOfPoint(i,250,-1408.8688,-304.5082,1056.4351) && GetPlayerInterior(i) == 7) SendClientMessage(i,-1,string);
            SetTimer("EmpezarCarrera",10*1000,0);
            ConteoCarrera -= 10;
		}
		else if(ConteoCarrera <= 10)
		{
		    ConteoCarrera = 10;
		    format(string,sizeof(string),"En {00CC00}10 segundos{FFFFFF} comienza la carrera, ya se inscribieron {DBED15}%d{FFFFFF} corredores.",ParticipantesCarrera);
			for(new i, j = GetPlayerPoolSize(); i <= j; i++) if(IsPlayerInRangeOfPoint(i,250,-1408.8688,-304.5082,1056.4351) && GetPlayerInterior(i) == 7) SendClientMessage(i,-1,string);
            SetTimer("EmpezarCarrera",1000,0);
            TipoConteo = 2;
		}
	}
	else if(TipoConteo == 2)
	{
	    if(ConteoCarrera > 1)
	    {
	    	ConteoCarrera --;
		    format(string,sizeof(string),"En {00CC00}%d segundos{FFFFFF} comienza la carrera, ya se inscribieron {DBED15}%d{FFFFFF} corredores.",ConteoCarrera,ParticipantesCarrera);
			for(new i, j = GetPlayerPoolSize(); i <= j; i++) if(IsPlayerInRangeOfPoint(i,250,-1408.8688,-304.5082,1056.4351) && GetPlayerInterior(i) == 7) SendClientMessage(i,-1,string);
            SetTimer("EmpezarCarrera",1000,0);
	    }
	    else if(ConteoCarrera <= 1)
	    {
	        TipoConteo = 0;
	        ConteoCarrera = 10;

	        if(ParticipantesCarrera <= 1)
	        {
				ResetearCarrera();
	            for(new i, j = GetPlayerPoolSize(); i <= j; i++)
				{
					if(IsPlayerInRangeOfPoint(i,250,-1408.8688,-304.5082,1056.4351) && GetPlayerInterior(i) == 7)
					{
						SendClientMessage(i,-1,"La carrera se cancelo automaticamente por la falta de corredores.");
						Update3DTextLabelText(TextoCarrera,COLOR_WHITE,"{FF3300}Boleteria cerrada\n{DBED15}Horarios de los eventos: {FFFFFF}5hs,11hs,17hs,23hs");
					}
					if(EnCarreras[i] > 0)
					{
					    SacarCarrera(i);
					}
				}
	        	return true;
	        }
	        for(new i, j = GetPlayerPoolSize(); i <= j; i++)
	        {
	            if(EnCarreras[i] > 0 && IsPlayerConnected(i))
	            {
	                SetPlayerVirtualWorld(i,7);
	                SetVehicleInterior(i,7);
	                new veh;
					if(EnCarreras[i] == 1)  		veh = CreateVehicle(494,-1429.7744, -277.8124, 1051.0447,286.1007 ,-1,-1,-1);
	                else if(EnCarreras[i] == 2)		veh = CreateVehicle(494,-1428.6266, -284.8796, 1051.1610,286.0206 ,-1,-1,-1);
	                else if(EnCarreras[i] == 3)		veh = CreateVehicle(494,-1436.8180, -279.4531, 1051.0262,278.0089 ,-1,-1,-1);
	                else if(EnCarreras[i] == 4)		veh = CreateVehicle(494,-1435.7325, -286.6672, 1051.0447,278.0428 ,-1,-1,-1);
	                else if(EnCarreras[i] == 5)		veh = CreateVehicle(494,-1443.9871, -279.9528, 1051.1610,268.7120 ,-1,-1,-1);
	                else if(EnCarreras[i] == 6)		veh = CreateVehicle(494,-1443.2439, -287.2351, 1051.0262,269.6268 ,-1,-1,-1);
	                else if(EnCarreras[i] == 7)		veh = CreateVehicle(494,-1450.7983, -279.3050, 1051.0447,261.7959 ,-1,-1,-1);
	                else if(EnCarreras[i] == 8)		veh = CreateVehicle(494,-1451.0276, -286.7166, 1051.1610,264.2670 ,-1,-1,-1);
	                else if(EnCarreras[i] == 9)		veh = CreateVehicle(494,-1457.6642, -278.1770, 1051.0447,259.2639 ,-1,-1,-1);
	                else if(EnCarreras[i] == 10)	veh = CreateVehicle(494,-1458.2916, -285.2527, 1051.1610,257.9200 ,-1,-1,-1);
	                else if(EnCarreras[i] == 11)	veh = CreateVehicle(494,-1464.6902, -276.4745, 1051.0447,257.6168 ,-1,-1,-1);
	                else if(EnCarreras[i] == 12)	veh = CreateVehicle(494,-1465.5854, -283.5643, 1051.1610,256.4550 ,-1,-1,-1);
	                else if(EnCarreras[i] == 13)	veh = CreateVehicle(494,-1470.6466, -278.7024, 1051.1610,250.0000 ,-1,-1,-1);
	                else print("ERROR CARRERA");
					if(veh > 0)
					{
	    				SetVehicleInterior(veh,7);
				    	SetVehicleVirtualWorld(veh,7);
				    	ClearAnimations(i);
	    				VehiculoCarrera[EnCarreras[i]-1] = veh;
				    	EnAuto[i] = veh;
				    	PutPlayerInVehicle(i,veh,0);
				    	VehicleFuel[veh] = 100;
		    			GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, objective);
						SetVehicleParamsEx(veh, 1, lights, alarm, doors, bonnet, boot, objective);
						MotorAuto[veh] = 1;
					}
			        TogglePlayerControllable(i,0);
	    	    	GameTextForPlayer(i,"~r~10",800,6);
	    	    	PlayerPlaySound(i, 1085, 0.0, 0.0, 0.0);
				}
	        }
	        SetTimer("ConteoCarrera2",1000,0);
			EmpezoCarrera = 1;
	    }
	}
	return true;
}

public CerrarCamion()
{
	//LADRON FUERA
	SetVehicleVirtualWorld(190,1);
	SetVehicleVirtualWorld(191,1);
	SetVehicleVirtualWorld(192,1);
	SetVehicleVirtualWorld(193,1);

	SetVehicleVirtualWorld(249,2);
	SetVehicleVirtualWorld(250,2);

	//DENTRO
	SetVehicleInterior(253,1);
	SetVehicleVirtualWorld(253,1);
	SetVehicleInterior(254,1);
	SetVehicleVirtualWorld(254,1);
	SetVehicleInterior(262,1);
	SetVehicleVirtualWorld(262,1);
	SetVehicleInterior(259,1);
	SetVehicleVirtualWorld(259,1);
	SetVehicleInterior(258,1);
	SetVehicleVirtualWorld(258,1);

	//GUARDIA AFUERA
	SetVehicleVirtualWorld(252,1);
	SetVehicleVirtualWorld(255,1);
	SetVehicleVirtualWorld(256,1);
	SetVehicleVirtualWorld(257,1);
	SetVehicleVirtualWorld(260,1);
	SetVehicleVirtualWorld(261,1);

	//MAFIOSOS
	SetVehicleVirtualWorld(200,2);
	SetVehicleVirtualWorld(201,2);

	ObjetoCamion1 = CreateObject(19846,0,0,-1000,0,0,0,100);
	AttachObjectToVehicle(ObjetoCamion1, 261, -0.599999,1.275000,1.049999,175.499893,89.099983,91.799980);
	ObjetoCamion2 = CreateObject(19846,0,0,-1000,0,0,0,100);
	AttachObjectToVehicle(ObjetoCamion2, 261, 0.600000,1.275000,1.049999,5.400000,86.399986,89.099983);
	ObjetoCamion3 = CreateObject(19846,0,0,-1000,0,0,0,100);
	AttachObjectToVehicle(ObjetoCamion3, 261, 0.000000,2.850001,-0.225000,450.900695,0.000001,0.000001);
	ObjetoCamion4 = CreateObject(19843,0,0,-1000,0,0,0,100);
	AttachObjectToVehicle(ObjetoCamion4, 261, 0.824999,2.025000,0.000000,0.000000,0.000000,0.000000);
	ObjetoCamion5 = CreateObject(19843,0,0,-1000,0,0,0,100);
	AttachObjectToVehicle(ObjetoCamion5, 261, 1.275000,2.025000,-0.449999,0.000000,89.099983,0.000000);
	ObjetoCamion6 = CreateObject(19843,0,0,-1000,0,0,0,100);
	AttachObjectToVehicle(ObjetoCamion6, 261, 0.824999,2.475000,-0.449999,89.099983,91.799980,83.699989);
	ObjetoCamion7 = CreateObject(19843,0,0,-1000,0,0,0,100);
	AttachObjectToVehicle(ObjetoCamion7, 261, -0.824999,1.950000,0.000000,0.000000,0.000000,0.000000);
	ObjetoCamion8 = CreateObject(19843,0,0,-1000,0,0,0,100);
	AttachObjectToVehicle(ObjetoCamion8, 261, -0.824999,2.400000,-0.449999,89.099983,-5.400000,0.000000);
	ObjetoCamion9 = CreateObject(19843,0,0,-1000,0,0,0,100);
	AttachObjectToVehicle(ObjetoCamion9, 261, -1.350000,1.950000,-0.449999,0.000000,89.099983,0.000000);
	ObjetoCamion10 = CreateObject(18757,0,0,-1000,0,0,0,100);
	SetObjectMaterial(ObjetoCamion10, 1, 19843, "metalpanels", "MetalPanel1", 0);
	AttachObjectToVehicle(ObjetoCamion10, 261, 0.674999,-2.025000,-0.974999,89.099983,0.000000,0.000001);
	ObjetoCamion11 = CreateObject(18757,0,0,-1000,0,0,0,100);
	SetObjectMaterial(ObjetoCamion11, 1, 19843, "metalpanels", "MetalPanel1", 0);
	AttachObjectToVehicle(ObjetoCamion11, 261, 3.150001,-2.025000,-0.974999,89.099983,0.000000,0.000000);
}

public ConteoCarrera2()
{
	if(ConteoCarrera > 0)
	{
		for(new i, j = GetPlayerPoolSize(); i <= j; i++)
	 	{
	  		if(EnCarreras[i] > 0 && IsPlayerConnected(i))
	    	{
	    	    new string[40];
				format(string,sizeof(string),"~r~%d",ConteoCarrera);
	    	    GameTextForPlayer(i,string,800,6);
	    	    PlayerPlaySound(i, 1085, 0.0, 0.0, 0.0);
	    	}
		}
		ConteoCarrera --;
		SetTimer("ConteoCarrera2",1000,0);
	}
	else if(ConteoCarrera <= 0)
	{
		for(new i, j = GetPlayerPoolSize(); i <= j; i++)
	 	{
	  		if(EnCarreras[i] > 0 && IsPlayerConnected(i))
	    	{
	 		    new string[50];
	 		    format(string,sizeof(string),"0/%d",ParticipantesCarrera);
	 		    PlayerTextDrawSetString(i,CarreraT[i][1],string);
                for(new z=0; z<8; z++)
				{
				    TextDrawShowForPlayer(i, BoxCarrera[0]);
			    	TextDrawShowForPlayer(i, BoxCarrera[1]);
			    	TextDrawShowForPlayer(i, BoxCarrera[2]);
			    	TextDrawShowForPlayer(i, BoxCarrera[3]);
					PlayerTextDrawShow(i, CarreraT[i][z]);
					TextDrawShowForPlayer(i, CarreraPosicion);
				}
	    	    GameTextForPlayer(i,"~g~ya",800,6);
	    	    PlayerPlaySound(i, 1083, 0.0, 0.0, 0.0);
	    	    TogglePlayerControllable(i,1);
				SetPlayerRaceCheckpoint(i,0,-1357.2258,-130.9288,1051.0356,-1365.4042,-280.5632,1045.2321,10);
	    	}
		}
		SetTimer("ConteoCarrera3",1000,0);
	}
}

public ConteoCarrera3()
{
	if(EmpezoCarrera == 1)
	{
		for(new i, j = GetPlayerPoolSize(); i <= j; i++)
		{
			if(EnCarreras[i] > 0 && IsPlayerConnected(i))
	 		{
	 		    TiempoCarrera2[i] ++;
	 		    if(TiempoCarrera2[i] >= 60)
	 		    {
	 		        TiempoCarrera2[i] = 0;
	 		        TiempoCarrera[i] ++;
	 		    }
	 		    new string[50];
	 		    format(string,sizeof(string),"%d:%d",TiempoCarrera[i],TiempoCarrera2[i]);
	 		    PlayerTextDrawSetString(i,CarreraT[i][2],string);
	 		}
	 	}
	 	SetTimer("ConteoCarrera3",1000,0);
 	}
}

SacarCarrera(playerid)
{
	if(EnCarreras[playerid] == 0) return 1;
	new a = EnCarreras[playerid]+1;
	EnCarreras[playerid] = 0;
	ParticipantesCarrera --;
	VueltasCarrera[playerid] = 0;
	TiempoCarrera[playerid] = 0;
	TiempoCarrera2[playerid] = 0;
	//
	DisablePlayerRaceCheckpoint(playerid);
	SetPosEx(playerid,-1405.2959,-309.6738,1052.0900,190.0000,7,7);
	for(new i=0; i<8; i++)
	{
	    TextDrawHideForPlayer(playerid, BoxCarrera[0]);
		TextDrawHideForPlayer(playerid, BoxCarrera[1]);
		TextDrawHideForPlayer(playerid, BoxCarrera[2]);
		TextDrawHideForPlayer(playerid, BoxCarrera[3]);
		TextDrawHideForPlayer(playerid, CarreraPosicion);
	}
	PlayerTextDrawHide(playerid, CarreraT[playerid][0]);
	PlayerTextDrawHide(playerid, CarreraT[playerid][1]);
	PlayerTextDrawHide(playerid, CarreraT[playerid][2]);
	//
	if(EmpezoCarrera == 1) return DestroyVehicle(VehiculoCarrera[a-2]),VehiculoCarrera[a-2] = 0;
	for(new i, j = GetPlayerPoolSize(); i <= j; i++)
	{
	    if(a >= ParticipantesCarrera) break;
	    if(JugadorLogeado[i])
	    {
	        if(EnCarreras[i] == a)
	        {
	            EnCarreras[i] = a;
	            a ++;
	        }
	    }
	}
	return true;
}

ResetearCarrera()
{
    ConteoCarrera = 0;
    ParticipantesCarrera = 0;
    ParticipantesCarrera2 = 0;
    lugarcarrera = 0;
	EmpezoCarrera = 0;
	HabilitarCarreras = 0;
	TipoConteo = 0;
	SlotGanador = 0;
	for(new a; a < 4; a++)
	{
	    for(new b; b < 6; b++)
	    {
	        InfoCP[a][b] = 0;
	    }
	}
}

public TimerFC()
{
	PuedenSalirPatio = true;
	SetTimer("TimerFC2",420000,false);
	foreach(Player,i)
	{
		if(GetPlayerVirtualWorld(i) == 15 && GetPlayerInterior(i) == 15)
		{
			SendClientMessage(i, 0x3399FFFF, "[Guardia]:{FFFFFF} Pueden salir al patio por 10 minutos.");
		}
	}
}

public TimerFC2()
{
	SetTimer("TimerFC3",180000,false);
	foreach(Player,i)
	{
		if(GetPlayerVirtualWorld(i) == 15 && GetPlayerInterior(i) == 15)
		{
			SendClientMessage(i, 0x3399FFFF, "[Guardia]:{FFFFFF} Tienen 3 minutos para regresar a sus celdas.");
		}
	}
}

public TimerFC3()
{
	new rand;
	SetTimer("TimerFC",300000,false);
	SetTimer("AbrirRejasxd",300000,false);
	AbrirRejas();
	PuedenSalirPatio = false;
	foreach(Player,i)
	{
		if(GetPlayerVirtualWorld(i) == 15 && GetPlayerInterior(i) == 15)
		{
			if(!EnCelda(i) && PlayerInfo[i][pTipoCarcel] == 4)
			{
				SendClientMessage(i, COLOR_WHITE, "No regresaste a la celda, por mala conducta tu condena fue prolongada.");
				PlayerInfo[i][pTiempoCarcelM] += 3;
				rand = random(sizeof(FortCarsonSpawn));
				SetPlayerPos(i, FortCarsonSpawn[rand][0], FortCarsonSpawn[rand][1], FortCarsonSpawn[rand][2]);
			}
		}
	}
}

public AbrirRejasxd()
{
	CerrarRejas();
}

public HacerQueHableM()
{
	if(HabloM[Marcelo] == 1)
	{
		SetPlayerChatBubble(Marcelo, "Señor, salga de aquí de inmediato.", -1, 10, 5000);
		HabloM[Marcelo]=2;
	}
	else if(HabloM[Marcelo] == 2)
	{
		SetPlayerChatBubble(Marcelo, "[Radio de policía]: Oficiales ¿Me reciben?", -1, 10, 5000);
		HabloM[Marcelo]=3;
	}
	else if(HabloM[Marcelo] == 3)
	{
		SetPlayerChatBubble(Marcelo, "Buenas Oficial, adelante.", -1, 10, 5000);
		HabloM[Marcelo]=4;
	}
	else if(HabloM[Marcelo] == 4)
	{
		SetPlayerChatBubble(Marcelo, "[Radio de policia]: Un individuó molestando en la comisaría de Los Santos, procedan a arrestarlo.", -1, 10, 5000);
		HabloM[Marcelo]=5;
	}
	else if(HabloM[Marcelo] == 5)
	{
		SetPlayerChatBubble(Marcelo, "¡Dios, este trabajo es estresante!", -1, 10, 5000);
		HabloM[Marcelo]=6;
	}
	else if(HabloM[Marcelo] == 6)
	{
		SetPlayerChatBubble(Marcelo, "[Radio de policía] Marcelo dice: Todo en orden aquí en la central.", -1, 10, 5000);
		HabloM[Marcelo]=7;
	}
	else if(HabloM[Marcelo] == 7)
	{
	 	HabloM[Marcelo]=8;
		SetPlayerChatBubble(Marcelo, "¡Hoy el día está precioso!", -1, 10, 5000);
	}
	else if(HabloM[Marcelo] == 8)
	{
	 	HabloM[Marcelo]=1;
		SetPlayerChatBubble(Marcelo, "Muy buenas. ¿Como está usted?", -1, 10, 5000);
	}
	return 1;
}

public HacerQueHableA()
{
	if(HabloA[Alejandro] == 1)
	{
		SetPlayerChatBubble(Alejandro, "Señor, cálmese. Todo tiene su tiempo...", -1, 10, 5000);
		HabloA[Alejandro]=2;
	}
	else if(HabloA[Alejandro] == 2)
	{
		SetPlayerChatBubble(Alejandro, "¡Estoy demasiado cansado!", -1, 10, 5000);
		HabloA[Alejandro]=3;
	}
	else if(HabloA[Alejandro] == 3)
	{
		SetPlayerChatBubble(Alejandro, "Muy buenas médico.", -1, 10, 5000);
		HabloA[Alejandro]=4;
	}
	else if(HabloA[Alejandro] == 4)
	{
	 	HabloA[Alejandro]=1;
		SetPlayerChatBubble(Alejandro, "Tranquilo, los médicos están adentro y lo esperan para el tratado.", -1, 10, 5000);
	}
	return 1;
}

public HacerQueHableH()
{
	if(HabloH[Hugo] == 1)
	{
		SetPlayerChatBubble(Hugo, "Este trabajo es agotador.", -1, 10, 5000);
		HabloH[Hugo]=2;
	}
	else if(HabloH[Hugo] == 2)
	{
		SetPlayerChatBubble(Hugo, "[Radio de seguridad] Hugo dice: En la cámara 4 detecto actividad sospechosa.", -1, 10, 5000);
		HabloH[Hugo]=3;
	}
	else if(HabloH[Hugo] == 3)
	{
		SetPlayerChatBubble(Hugo, "Tendré que renunciar.", -1, 10, 5000);
		HabloH[Hugo]=4;
	}
	else if(HabloH[Hugo] == 4)
	{
	 	HabloH[Hugo]=5;
		SetPlayerChatBubble(Hugo, "[Radio de seguridad] Hugo dice: Guardias, ¿Me copian?", -1, 10, 5000);
	}
	else if(HabloH[Hugo] == 5)
	{
	 	HabloH[Hugo]=6;
		SetPlayerChatBubble(Hugo, "A ver..", -1, 10, 5000);
	}
	else if(HabloH[Hugo] == 6)
	{
	 	HabloH[Hugo]=7;
		SetPlayerChatBubble(Hugo, "¡Estos malditos camioneros!", -1, 10, 5000);
	}
	else if(HabloH[Hugo] == 7)
	{
	 	HabloH[Hugo]=1;
		SetPlayerChatBubble(Hugo, "Odio mi trabajo.", -1, 10, 5000);
	}
	return 1;
}

public HacerQueHableHp()
{
	if(HabloHp[HippePepe] == 1)
	{
		SetPlayerChatBubble(HippePepe, "Dios, cuantos clientes.", -1, 10, 5000);
		HabloHp[HippePepe]=2;
	}
	else if(HabloHp[HippePepe] == 2)
	{
		SetPlayerChatBubble(HippePepe, "¡María, traeme el mate!", -1, 10, 5000);
		HabloHp[HippePepe]=3;
	}
	else if(HabloHp[HippePepe] == 3)
	{
		SetPlayerChatBubble(HippePepe, "Estoy sudando demasiado...", -1, 10, 5000);
		HabloHp[HippePepe]=1;
	}
	return 1;
}

public HacerQueHableAg()
{
	if(HabloAg[Angelica] == 1)
	{
		SetPlayerChatBubble(Angelica, "¿En qué lo puedo ayudar?", -1, 10, 5000);
		HabloAg[Angelica]=2;
	}
	else if(HabloAg[Angelica] == 2)
	{
		SetPlayerChatBubble(Angelica, "Hola, soy Angélica la recepcionista del Edificio Municipal.", -1, 10, 5000);
		HabloAg[Angelica]=3;
	}
	else if(HabloAg[Angelica] == 3)
	{
		SetPlayerChatBubble(Angelica, "Agurde un momento por favor, ya le atendemos...", -1, 10, 5000);
		HabloAg[Angelica]=1;
	}
	return 1;
}

public HacerQueHableJe()
{
	if(HabloJe[Jorge] == 1)
	{
		SetPlayerChatBubble(Jorge, "Hola buenas, ¿necesita tratado médico?", -1, 10, 5000);
		HabloJe[Jorge]=2;
	}
	else if(HabloJe[Jorge] == 2)
	{
		SetPlayerChatBubble(Jorge, "Recuerde que si es socio del Hospital tendrá descuento en servicios.", -1, 10, 5000);
		HabloJe[Jorge]=3;
	}
	else if(HabloJe[Jorge] == 3)
	{
		SetPlayerChatBubble(Jorge, "A ver...", -1, 10, 5000);
		HabloJe[Jorge]=1;
	}
	return 1;
}

public HacerQueHableMo()
{
	if(HabloMo[Mao] == 1)
	{
		SetPlayerChatBubble(Mao, "Tlaiga toltuga que io pago bien!", -1, 10, 5000);
		HabloMo[Mao]=2;
	}
	else if(HabloMo[Mao] == 2)
	{
		SetPlayerChatBubble(Mao, "Estos pesquelos son muy locos.", -1, 10, 5000);
		HabloMo[Mao]=3;
	}
	else if(HabloMo[Mao] == 3)
	{
		SetPlayerChatBubble(Mao, "Mi mujel le ayudalá con el pelmiso de pesca, se ecuentla afuela.", -1, 10, 5000);
		HabloMo[Mao]=1;
	}
	return 1;
}

public HacerQueHableI()
{
	if(HabloI[Ignacio] == 1)
	{
		SetPlayerChatBubble(Ignacio, "[Radio de seguridad] Ignacio dice: Aquí estoy señor, en las cosechas...", -1, 30.0, 5000);
		HabloI[Ignacio]=2;
	}
	else if(HabloI[Ignacio] == 2)
	{
		SetPlayerChatBubble(Ignacio, "[Radio de seguridad] Ignacio dice: Claro, quedese tranquílo...", -1, 30.0, 5000);
		HabloI[Ignacio]=3;
	}
	else if(HabloI[Ignacio] == 3)
	{
		SetPlayerChatBubble(Ignacio, "¡Estos maldítos cosechadores!.", -1, 30.0, 5000);
		HabloI[Ignacio]=4;
	}
	else if(HabloI[Ignacio] == 4)
	{
		SetPlayerChatBubble(Ignacio, "Esta escopeta pesa demasiado.", -1, 30.0, 5000);
		HabloI[Ignacio]=1;
	}
	return 1;
}

ZonasSeguras(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(50,playerid,1542.6593,-1675.6570,13.5549) || PlayerToPoint(30,playerid,1479.3777,-1741.4285,13.5469))
		{ // Comisaria y Concesionario
		    return 1;
		}
		else if(PlayerToPoint(50,playerid,-1580.7948,860.1343,7.4437) || PlayerToPoint(30,playerid,-1605.3289,717.2955,11.9439) || PlayerToPoint(30,playerid,-1603.2389,665.9307,7.1875))
		{ // Comisaria y Banco
		    return 1;
		}
		else if(PlayerToPoint(50,playerid,1472.6334,-1655.7413,13.6334) || PlayerToPoint(30,playerid,1498.2800,-1583.8029,13.5469))
		{ // Plaza LS y Iglesia
		    return 1;
		}
		else if(PlayerToPoint(50,playerid,2436.8701,2290.2356,10.8203) || PlayerToPoint(50,playerid,2262.2063,2452.0066,10.8203))
		{ // Comisaria y Banco
		    return 1;
		}
		else if(PlayerToPoint(50,playerid,107.4082,-163.9219,1.9505) || PlayerToPoint(50,playerid,-43.6179,69.7682,3.1172))
		{ // Cosechadora y Mecánico
		    return 1;
		}
		else if(PlayerToPoint(50,playerid,-159.0519,-1571.7219,6.8370) || PlayerToPoint(50,playerid,-386.2562,-1475.3293,25.7266))
		{ // Basural y Cosechadora
		    return 1;
		}
		else if(PlayerToPoint(50,playerid,-1720.5493,-67.2964,3.5547) || PlayerToPoint(30,playerid,-1821.9308,-122.5035,5.6484))
		{ // Camioneros y Bar
		    return 1;
		}
		else if(PlayerToPoint(50,playerid,1187.1301,-1323.5789,13.5590) || PlayerToPoint(30,playerid,1137.9875,-1365.3645,13.9844))
		{ // Hospital entrada y Sex Shop
		    return 1;
		}
		else if(PlayerToPoint(50,playerid,1715.12,-1903.17,13.56) || PlayerToPoint(30,playerid,1833.7728,-1842.5350,13.5781))
		{ // UNITY STATION y 24/7
		    return 1;
		}
	}
	return 0;
}

public CargarCasas()
{
    new Query[200];
    format(Query, sizeof(Query), "SELECT * FROM `propiedades`");
    mysql_function_query(Conecction, Query, true, "CargarPropiedades","");
}

public CargarFabricas()
{
    new Query[200];
    format(Query, sizeof(Query), "SELECT * FROM `fabricas`");
    mysql_function_query(Conecction, Query, true, "CargarFabricasMeta","");
}

public CargarGarages()
{
    new Query[200];
    format(Query, sizeof(Query), "SELECT * FROM `garages`");
    mysql_function_query(Conecction, Query, true, "CargarEstacionamientos","");
}

public CargarEstacionamientos()
{
	new count;
	for(new i = 0; i < cache_get_row_count(); i++)
	{
		new content[40],p;
		cache_get_field_content(i, "ID", content); p = strval(content); EstaInfo[p][pID] = strval(content);
		if(p != 0)
		{
			cache_get_field_content(i, "EnUso", content);  EstaInfo[p][pEnUso] = strval(content);
			cache_get_field_content(i, "EnVentaPor", content); EstaInfo[p][pEnVentaPor] = strval(content);
			cache_get_field_content(i, "IDPropietario", content); EstaInfo[p][pIDPropietario] = strval(content);
			cache_get_field_content(i, "Propietario", content); format(EstaInfo[p][pPropietario],40,"%s",content);
			cache_get_field_content(i, "Localizacion", content); format(EstaInfo[p][pLocalizacion],40,"%s",content);
			cache_get_field_content(i, "VW", content);  EstaInfo[p][pVW] = strval(content);
			cache_get_field_content(i, "EnVenta", content); EstaInfo[p][pEnVenta] = strval(content);
			cache_get_field_content(i, "Precio", content); EstaInfo[p][pPrecio] = strval(content);
			cache_get_field_content(i, "Nivel", content); EstaInfo[p][pNivel] = strval(content);
			cache_get_field_content(i, "PosX", content); EstaInfo[p][pPosX] = floatstr(content);
			cache_get_field_content(i, "PosY", content); EstaInfo[p][pPosY] = floatstr(content);
			cache_get_field_content(i, "PosZ", content); EstaInfo[p][pPosZ] = floatstr(content);
			cache_get_field_content(i, "PosXS", content); EstaInfo[p][pPosXS] = floatstr(content);
			cache_get_field_content(i, "PosYS", content); EstaInfo[p][pPosYS] = floatstr(content);
			cache_get_field_content(i, "PosZS", content); EstaInfo[p][pPosZS] = floatstr(content);
			cache_get_field_content(i, "PosAS", content); EstaInfo[p][pPosAS] = floatstr(content);
			cache_get_field_content(i, "Ganancias", content);  EstaInfo[p][pGanancias] = strval(content);
			cache_get_field_content(i, "Tipo", content);  EstaInfo[p][pTipo] = strval(content);
			cache_get_field_content(i, "Interior", content);  EstaInfo[p][pInterior] = strval(content);
        	cache_get_field_content(i, "InteriorID", content);  EstaInfo[p][pInteriorID] = strval(content);
        	cache_get_field_content(i, "Abierta", content);  EstaInfo[p][pAbierta] = strval(content);
	    	count ++;
	    	CargarEstacionamiento(p);
		}
	}
	return true;
}

public CargarFabricasMeta()
{
	new count;
	for(new i = 0; i < cache_get_row_count(); i++)
	{
		new content[40],p;
		cache_get_field_content(i, "ID", content);	p = strval(content); Fabricas[p][pID] = strval(content);
		if(p != 0)
		{
			cache_get_field_content(i, "BandaID", content);  		Fabricas[p][pBanda] = strval(content);
			cache_get_field_content(i, "Localizacion", content); 	format(Fabricas[p][pLocalizacion],40,"%s",content);
			cache_get_field_content(i, "VW", content);  			Fabricas[p][pVW] = strval(content);
			cache_get_field_content(i, "Interior", content);  		Fabricas[p][pInt] = strval(content);
			//ENTRADA A PIE
			cache_get_field_content(i, "EntradaX", content);  		Fabricas[p][pEntradaX] = floatstr(content);
			cache_get_field_content(i, "EntradaY", content);  		Fabricas[p][pEntradaY] = floatstr(content);
			cache_get_field_content(i, "EntradaZ", content);  		Fabricas[p][pEntradaZ] = floatstr(content);
			cache_get_field_content(i, "EntradaA", content);  		Fabricas[p][pEntradaA] = floatstr(content);
			//SALIDA A PIE
			cache_get_field_content(i, "SalidaX", content);  		Fabricas[p][pSalidaX] = floatstr(content);
			cache_get_field_content(i, "SalidaY", content);  		Fabricas[p][pSalidaY] = floatstr(content);
			cache_get_field_content(i, "SalidaZ", content);  		Fabricas[p][pSalidaZ] = floatstr(content);
			//ENTRADA GARAGE
			cache_get_field_content(i, "GarajeE_X", content);  		Fabricas[p][pEntradaGX] = floatstr(content);
			cache_get_field_content(i, "GarajeE_Y", content);  		Fabricas[p][pEntradaGY] = floatstr(content);
			cache_get_field_content(i, "GarajeE_Z", content);  		Fabricas[p][pEntradaGZ] = floatstr(content);
			cache_get_field_content(i, "GarajeE_A", content);  		Fabricas[p][pEntradaGA] = floatstr(content);
			//SALIDA GARAGE
			cache_get_field_content(i, "GarajeS_X", content);  		Fabricas[p][pSalidaGX] = floatstr(content);
			cache_get_field_content(i, "GarajeS_Y", content);  		Fabricas[p][pSalidaGY] = floatstr(content);
			cache_get_field_content(i, "GarajeS_Z", content);  		Fabricas[p][pSalidaGZ] = floatstr(content);
			// SOBORNO (YA SOBORNÓ O NO)
			cache_get_field_content(i, "Soborno"  , content);  		Fabricas[p][pSoborno]  = strval(content);
			cache_get_field_content(i, "FechaPaga", content);  		Fabricas[p][FechaPaga] = strval(content);
			//ALMACENES (CAJAS)
			cache_get_field_content(i, "Almacen1", content);  		Fabricas[p][Almacen1] = strval(content);
			cache_get_field_content(i, "Almacen2", content);  		Fabricas[p][Almacen2] = strval(content);
			cache_get_field_content(i, "Almacen3", content);  		Fabricas[p][Almacen3] = strval(content);
			cache_get_field_content(i, "Almacen4", content);  		Fabricas[p][Almacen4] = strval(content);
			cache_get_field_content(i, "Almacen5", content);  		Fabricas[p][Almacen5] = strval(content);
			cache_get_field_content(i, "Almacen6", content);  		Fabricas[p][Almacen6] = strval(content);
			cache_get_field_content(i, "Almacen7", content);  		Fabricas[p][Almacen7] = strval(content);
			cache_get_field_content(i, "Almacen8", content);  		Fabricas[p][Almacen8] = strval(content);
			cache_get_field_content(i, "Almacen9", content);  		Fabricas[p][Almacen9] = strval(content);
			cache_get_field_content(i, "Almacen10", content); 		Fabricas[p][Almacen10] = strval(content);
			//TANQUES
			cache_get_field_content(i, "Tanque1Contenido", content);  Fabricas[p][pTanqueUno] = strval(content);
			cache_get_field_content(i, "Tanque2Contenido", content);  Fabricas[p][pTanqueDos] = strval(content);
			cache_get_field_content(i, "Tanque3Contenido", content);  Fabricas[p][pTanqueTres] = strval(content);
			cache_get_field_content(i, "Tanque4Contenido", content);  Fabricas[p][pTanqueCuatro] = strval(content);
			cache_get_field_content(i, "Tanque5Contenido", content);  Fabricas[p][pTanqueCinco] = strval(content);
			cache_get_field_content(i, "Tanque6Contenido", content);  Fabricas[p][pTanqueSeis] = strval(content);
			//ARMAS ALMACENADAS
			cache_get_field_content(i, "Recortada", content);  		Fabricas[p][pRecortada] = strval(content);
			cache_get_field_content(i, "Sniper", content);  		Fabricas[p][pSniper] = strval(content);
			cache_get_field_content(i, "Uzi", content);  			Fabricas[p][pUzi] = strval(content);
			cache_get_field_content(i, "Tec9", content);  			Fabricas[p][pTec9] = strval(content);
			//CHALECOS ANTIBALAS DISPONIBLES
			cache_get_field_content(i, "Chalecos", content);  			Fabricas[p][pChalecos] = strval(content);
			cache_get_field_content(i, "DineroAlmacenado", content);	Fabricas[p][pCantidadDinero] = strval(content);
			//DEMÁS DATOS
			cache_get_field_content(i, "Coins", content);  			Fabricas[p][pEnVentaPor] = strval(content);
			cache_get_field_content(i, "Precio", content);  		Fabricas[p][pValor] = strval(content);
			cache_get_field_content(i, "EnUso", content);  			Fabricas[p][pEnUso] = strval(content);
			cache_get_field_content(i, "MContra", content); 		Fabricas[p][MedicoContratado] = strval(content);

			cache_get_field_content(i, "Crisol1", content);  		Fabricas[p][Crisol1] = strval(content);
			cache_get_field_content(i, "Crisol2", content);  		Fabricas[p][Crisol2] = strval(content);
			cache_get_field_content(i, "Crisol1", content);  		Fabricas[p][Crisol3] = strval(content);

			cache_get_field_content(i, "EstadoC1", content);  		Fabricas[p][StatoCuoco1] = strval(content);
			cache_get_field_content(i, "EstadoC2", content);  		Fabricas[p][StatoCuoco2] = strval(content);
			cache_get_field_content(i, "EstadoC3", content);  		Fabricas[p][StatoCuoco3] = strval(content);
			cache_get_field_content(i, "EstadoC4", content);  		Fabricas[p][StatoCuoco4] = strval(content);
			cache_get_field_content(i, "EstadoC5", content);  		Fabricas[p][StatoCuoco5] = strval(content);

			cache_get_field_content(i, "ProgresoC1", content);  	Fabricas[p][PorcentajeCocinero1] = strval(content);
			cache_get_field_content(i, "ProgresoC2", content);  	Fabricas[p][PorcentajeCocinero2] = strval(content);
			cache_get_field_content(i, "ProgresoC3", content);  	Fabricas[p][PorcentajeCocinero3] = strval(content);
			cache_get_field_content(i, "ProgresoC4", content);  	Fabricas[p][PorcentajeCocinero4] = strval(content);
			cache_get_field_content(i, "ProgresoC5", content);  	Fabricas[p][PorcentajeCocinero5] = strval(content);

			cache_get_field_content(i, "TieneMoledor1", content);  	Fabricas[p][TieneCocinero1] = strval(content);
			cache_get_field_content(i, "TieneMoledor2", content);  	Fabricas[p][TieneCocinero2] = strval(content);
			cache_get_field_content(i, "TieneMoledor3", content);  	Fabricas[p][TieneCocinero3] = strval(content);
			cache_get_field_content(i, "TieneMoledor4", content);  	Fabricas[p][TieneCocinero4] = strval(content);
			cache_get_field_content(i, "TieneMoledor5", content);   Fabricas[p][TieneCocinero5] = strval(content);

			cache_get_field_content(i, "PorcentajeLleno1", content);  Fabricas[p][Porcentaje1] = strval(content);
			cache_get_field_content(i, "PorcentajeLleno2", content);  Fabricas[p][Porcentaje2] = strval(content);
			cache_get_field_content(i, "PorcentajeLleno3", content);  Fabricas[p][Porcentaje3] = strval(content);

			cache_get_field_content(i, "Termino1", content);  		Fabricas[p][Termino1] = strval(content);
			cache_get_field_content(i, "Termino2", content);  		Fabricas[p][Termino2] = strval(content);
			cache_get_field_content(i, "Termino3", content);  		Fabricas[p][Termino3] = strval(content);
			cache_get_field_content(i, "Termino4", content);  		Fabricas[p][Termino4] = strval(content);
			cache_get_field_content(i, "Termino5", content);  		Fabricas[p][Termino5] = strval(content);
			//Estado de los NPC
			cache_get_field_content(i, "EstadoMedico", content); 	Fabricas[p][EstadoMedico] = strval(content);
			cache_get_field_content(i, "EstadoG1", content);  		Fabricas[p][EstadoG1] = strval(content);
			cache_get_field_content(i, "EstadoG2", content);  		Fabricas[p][EstadoG2] = strval(content);
			cache_get_field_content(i, "EstadoG3", content);  		Fabricas[p][EstadoG3] = strval(content);
			cache_get_field_content(i, "EstadoCoc1", content);  	Fabricas[p][EstadoCoc1] = strval(content);
			cache_get_field_content(i, "EstadoCoc2", content);  	Fabricas[p][EstadoCoc2] = strval(content);
			cache_get_field_content(i, "EstadoCoc3", content);  	Fabricas[p][EstadoCoc3] = strval(content);
			cache_get_field_content(i, "EstadoCoc4", content);  	Fabricas[p][EstadoCoc4] = strval(content);
			cache_get_field_content(i, "EstadoCoc5", content);  	Fabricas[p][EstadoCoc5] = strval(content);
	    	count ++;
	    	CargarFabricass(p);
		}
	}
	return true;
}

public CargarPropiedades()
{
	new count;
	for(new i = 0; i < cache_get_row_count(); i++)
	{
		new content[40],p;
		cache_get_field_content(i, "ID", content); p = strval(content); PropInfo[p][pID] = strval(content);
		if(p != 0)
		{
			cache_get_field_content(i, "EnUso", content);  PropInfo[p][pEnUso] = strval(content);
			cache_get_field_content(i, "EnVentaPor", content); PropInfo[p][pEnVentaPor] = strval(content);
			cache_get_field_content(i, "IDPropietario", content); PropInfo[p][pIDPropietario] = strval(content);
			cache_get_field_content(i, "Propietario", content); format(PropInfo[p][pPropietario],40,"%s",content);
			cache_get_field_content(i, "Localizacion", content); format(PropInfo[p][pLocalizacion],40,"%s",content);
			cache_get_field_content(i, "VW", content);  PropInfo[p][pVW] = strval(content);
			cache_get_field_content(i, "EnVenta", content); PropInfo[p][pEnVenta] = strval(content);
			cache_get_field_content(i, "Precio", content); PropInfo[p][pPrecio] = strval(content);
			cache_get_field_content(i, "Nivel", content); PropInfo[p][pNivel] = strval(content);
			cache_get_field_content(i, "PosX", content); PropInfo[p][pPosX] = floatstr(content);
			cache_get_field_content(i, "PosY", content); PropInfo[p][pPosY] = floatstr(content);
			cache_get_field_content(i, "PosZ", content); PropInfo[p][pPosZ] = floatstr(content);
			cache_get_field_content(i, "PosXS", content); PropInfo[p][pPosXS] = floatstr(content);
			cache_get_field_content(i, "PosYS", content); PropInfo[p][pPosYS] = floatstr(content);
			cache_get_field_content(i, "PosZS", content); PropInfo[p][pPosZS] = floatstr(content);
			cache_get_field_content(i, "PosAS", content); PropInfo[p][pPosAS] = floatstr(content);
			cache_get_field_content(i, "GX", content); PropInfo[p][pGX] = floatstr(content);
			cache_get_field_content(i, "GY", content); PropInfo[p][pGY] = floatstr(content);
			cache_get_field_content(i, "GZ", content); PropInfo[p][pGZ] = floatstr(content);
			cache_get_field_content(i, "GA", content); PropInfo[p][pGA] = floatstr(content);
			cache_get_field_content(i, "Ganancias", content);  PropInfo[p][pGanancias] = strval(content);
			cache_get_field_content(i, "Tipo", content);  PropInfo[p][pTipo] = strval(content);
			cache_get_field_content(i, "Interior", content);  PropInfo[p][pInterior] = strval(content);
        	cache_get_field_content(i, "InteriorID", content);  PropInfo[p][pInteriorID] = strval(content);
        	cache_get_field_content(i, "Abierta", content);  PropInfo[p][pAbierta] = strval(content);
        	cache_get_field_content(i, "Sprunk", content);  PropInfo[p][pSprunk] = strval(content);
        	cache_get_field_content(i, "Cerveza", content);  PropInfo[p][pCerveza] = strval(content);
        	cache_get_field_content(i, "Aquarius", content);  PropInfo[p][pAquarius] = strval(content);
        	cache_get_field_content(i, "Pizzas", content);  PropInfo[p][pPizzas] = strval(content);
        	cache_get_field_content(i, "Vino", content);  PropInfo[p][pVino] = strval(content);
	    	cache_get_field_content(i, "Camara", content);  PropInfo[p][pCamara] = strval(content);
	    	cache_get_field_content(i, "Pala", content);  PropInfo[p][pPala] = strval(content);
	    	cache_get_field_content(i, "BateDeBeisbol", content);  PropInfo[p][pBateDeBeisbol] = strval(content);
	    	cache_get_field_content(i, "PaloDeGolf", content);  PropInfo[p][pPaloDeGolf] = strval(content);
        	cache_get_field_content(i, "Manopla", content);  PropInfo[p][pManopla] = strval(content);
	    	cache_get_field_content(i, "PaloDeBillar", content);  PropInfo[p][pPaloDeBillar] = strval(content);
	    	cache_get_field_content(i, "ConsoladorRosa", content);  PropInfo[p][pConsoladorRosa] = strval(content);
	    	cache_get_field_content(i, "VibradorBlanco", content);  PropInfo[p][pVibradorBlanco] = strval(content);
	    	cache_get_field_content(i, "GranVibradorBlanco", content);  PropInfo[p][pGranVibradorBlanco] = strval(content);
	    	cache_get_field_content(i, "VibradorPlateado", content);  PropInfo[p][pVibradorPlateado] = strval(content);
	    	cache_get_field_content(i, "Baston", content);  PropInfo[p][pBaston] = strval(content);
        	cache_get_field_content(i, "AK47", content);  PropInfo[p][pAK47] = strval(content);
        	cache_get_field_content(i, "M4", content);  PropInfo[p][pM4] = strval(content);
        	cache_get_field_content(i, "EscopetaNormal", content);  PropInfo[p][pEscopetaNormal] = strval(content);
        	cache_get_field_content(i, "EscopetaDeCombate", content);  PropInfo[p][pEscopetaDeCombate] = strval(content);
        	cache_get_field_content(i, "MP5", content);  PropInfo[p][pMP5] = strval(content);
        	cache_get_field_content(i, "9mm", content);  PropInfo[p][p9mm] = strval(content);
        	cache_get_field_content(i, "9mmSilenciada", content);  PropInfo[p][p9mmSilenciada] = strval(content);
        	cache_get_field_content(i, "DesertEagle", content);  PropInfo[p][pDesertEagle] = strval(content);
        	cache_get_field_content(i, "Rifle", content);  PropInfo[p][pRifle] = strval(content);
        	cache_get_field_content(i, "Granada", content);  PropInfo[p][pGranada] = strval(content);
        	cache_get_field_content(i, "Cuchillo", content);  PropInfo[p][pCuchillo] = strval(content);
        	cache_get_field_content(i, "Katana", content);  PropInfo[p][pKatana] = strval(content);
        	cache_get_field_content(i, "Crack", content);  PropInfo[p][pCrack] = strval(content);
        	cache_get_field_content(i, "Medicamentos", content);  PropInfo[p][pMedicamentos] = strval(content);
        	cache_get_field_content(i, "Marihuana", content);  PropInfo[p][pMarihuana] = strval(content);
	    	count ++;
	    	CargarPropiedad(p);
		}
	}
	return true;
}
CargarFabricass(id)
{
	new string[350];
	if(Fabricas[id][pBanda] > 0)
	{
	    CalcularBolsos(id);
	    new banda = Fabricas[id][pBanda];
		format(string, sizeof(string), "{ff3e3e}Fábrica de metanfetamina\n{FFFFFF}Propiedad de {dbed15}%s",BandasInfo[banda][BNombre]);

		Fabricas[id][pLabel] = CreateDynamic3DTextLabel(string, -1, Fabricas[id][pEntradaX],Fabricas[id][pEntradaY],Fabricas[id][pEntradaZ]+1.0, 20);
		Fabricas[id][pLabel2] = CreateDynamic3DTextLabel("{FFFFFF}Usa {DBED16}/salir{FFFFFF} para salir de la propiedad.",0xFFFFFF00,Fabricas[id][pSalidaX],Fabricas[id][pSalidaY],Fabricas[id][pSalidaZ],5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,Fabricas[id][pVW],Fabricas[id][pInt],-1,100.0);
		Fabricas[id][pPickup] = CreateDynamicPickup(19524,23,Fabricas[id][pEntradaX],Fabricas[id][pEntradaY],Fabricas[id][pEntradaZ],0);
		Fabricas[id][pMapIcon] = CreateDynamicMapIcon(Fabricas[id][pEntradaX],Fabricas[id][pEntradaY],Fabricas[id][pEntradaZ], 23, -1, -1, -1, -1, 600.0);

		Fabricas[id][pPuerta] = CreateDynamicObject(19303, -2022.93274, 254.14169, 1036.06921,   0.00000, 0.00000, 90.00000, Fabricas[id][pVW],Fabricas[id][pInt]);

		Fabricas[id][tMoney] = CreateDynamicObject(19353, -2026.86145, 253.81740, 1036.84436,   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt],-1);

		Fabricas[id][Auto1F] = CreateVehicle(554,-2007.1453000,213.5989000,1035.9004000,271.7110000,1,53,-1); //Yosemite
        LinkVehicleToInterior(Fabricas[id][Auto1F], Fabricas[id][pInt]);
        SetVehicleVirtualWorld(Fabricas[id][Auto1F], Fabricas[id][pVW]);
		Fabricas[id][Auto2F] = CreateVehicle(554,-1998.8115,208.2825,1035.9037,285.0887,1,53,-1); //Yosemite
		LinkVehicleToInterior(Fabricas[id][Auto2F], Fabricas[id][pInt]);
        SetVehicleVirtualWorld(Fabricas[id][Auto2F], Fabricas[id][pVW]);
        AutoDeFabrica[Fabricas[id][Auto1F]] = 1;
        AutoDeFabrica[Fabricas[id][Auto2F]] = 2;

		RespawnearVF(Fabricas[id][Auto1F]);
		RespawnearVF2(Fabricas[id][Auto2F]);

		BarrilMeta[id][0] = CreateDynamicObject(3632,0,0,-1000,0,0,0, Fabricas[id][pVW],Fabricas[id][pInt]);
		BarrilMeta[id][1] = CreateDynamicObject(3632,0,0,-1000,0,0,0, Fabricas[id][pVW],Fabricas[id][pInt]);
		BarrilMeta[id][2] = CreateDynamicObject(3632,0,0,-1000,0,0,0, Fabricas[id][pVW],Fabricas[id][pInt]);
		BarrilMeta[id][3] = CreateDynamicObject(3632,0,0,-1000,0,0,0, Fabricas[id][pVW],Fabricas[id][pInt]);
		BarrilMeta[id][4] = CreateDynamicObject(3632,0,0,-1000,0,0,0, Fabricas[id][pVW],Fabricas[id][pInt]);

		CajaMeta[id][0] = CreateDynamicObject(1271,0,0,-1000,0,0,0, Fabricas[id][pVW],Fabricas[id][pInt]);
		CajaMeta[id][1] = CreateDynamicObject(1271,0,0,-1000,0,0,0, Fabricas[id][pVW],Fabricas[id][pInt]);
		CajaMeta[id][2] = CreateDynamicObject(1271,0,0,-1000,0,0,0, Fabricas[id][pVW],Fabricas[id][pInt]);
		CajaMeta[id][3] = CreateDynamicObject(1271,0,0,-1000,0,0,0, Fabricas[id][pVW],Fabricas[id][pInt]);
		CajaMeta[id][4] = CreateDynamicObject(1271,0,0,-1000,0,0,0, Fabricas[id][pVW],Fabricas[id][pInt]);

		//CARGA DE GUARDIAS

		if(Fabricas[id][TieneGuardia1] != 0)
		{
			Fabricas[id][ActorGuardia1] = CreateDynamicActor(66, -1983.3815,207.0429,1040.0468,76.4343, 1, 100.0, Fabricas[id][pVW], Fabricas[id][pInt]);
			SetDynamicActorHealth(Fabricas[id][ActorGuardia1], 100.0);
		}
		else if(Fabricas[id][TieneGuardia2] != 0)
		{
			Fabricas[id][ActorGuardia2] = CreateDynamicActor(163, -2010.1060,208.9797,1035.8162,272.1400, 1, 100.0, Fabricas[id][pVW], Fabricas[id][pInt]);
			SetDynamicActorHealth(Fabricas[id][ActorGuardia2], 100.0);
		}
		else if(Fabricas[id][TieneGuardia3] != 0)
		{
			Fabricas[id][ActorGuardia3] = CreateDynamicActor(223, -2016.1063,233.2106,1035.8162,229.3722, 1, 100.0, Fabricas[id][pVW], Fabricas[id][pInt]);
			SetDynamicActorHealth(Fabricas[id][ActorGuardia3], 100.0);
		}
		else if(Fabricas[id][TieneGuardia4] != 0)
		{
			Fabricas[id][ActorGuardia4] = CreateDynamicActor(166, -2022.6560,243.8168,1035.8162,145.2300, 1, 100.0, Fabricas[id][pVW], Fabricas[id][pInt]);
			SetDynamicActorHealth(Fabricas[id][ActorGuardia4], 100.0);
		}
		else if(Fabricas[id][TieneGuardia5] != 0)
		{
			Fabricas[id][ActorGuardia5] = CreateDynamicActor(124, -2023.5002,244.8579,1035.8389,1.5771, 1, 100.0, Fabricas[id][pVW], Fabricas[id][pInt]);
			SetDynamicActorHealth(Fabricas[id][ActorGuardia5], 100.0);
		}

		if(Fabricas[id][Termino1] == 1) { Fabricas[id][StatoCuoco1] = 4; Fabricas[id][Bloque1] = CreateDynamicObject(1271, -2017.67334, 227.02380, 1035.15454,   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]); }
		if(Fabricas[id][Termino2] == 1) { Fabricas[id][StatoCuoco2] = 4; Fabricas[id][Bloque2] = CreateDynamicObject(1271, -2013.86060, 227.05284, 1035.15454,   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]); }
		if(Fabricas[id][Termino3] == 1) { Fabricas[id][StatoCuoco3] = 4; Fabricas[id][Bloque3] = CreateDynamicObject(1271, -2009.98157, 227.00481, 1035.15454,   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]); }
		if(Fabricas[id][Termino4] == 1) { Fabricas[id][StatoCuoco4] = 4; Fabricas[id][Bloque4] = CreateDynamicObject(1271, -2006.16040, 226.99612, 1035.15454,   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]); }
		if(Fabricas[id][Termino5] == 1) { Fabricas[id][StatoCuoco5] = 4; Fabricas[id][Bloque5] = CreateDynamicObject(1271, -2002.34033, 227.01234, 1035.15454,   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]); }

		if(Fabricas[id][StatoCuoco1] == 1 && Fabricas[id][TieneCocinero1] != 0 || Fabricas[id][PorcentajeCocinero1] > 0 && Fabricas[id][TieneCocinero1] != 0) { Fabricas[id][StatoCuoco1] = 1; Fabricas[id][tiempoc1] = SetTimerEx("JobCocinero1",216000,true,"d",id); }
		if(Fabricas[id][StatoCuoco2] == 1 && Fabricas[id][TieneCocinero2] != 0 || Fabricas[id][PorcentajeCocinero2] > 0 && Fabricas[id][TieneCocinero2] != 0) { Fabricas[id][StatoCuoco2] = 1; Fabricas[id][tiempoc2] = SetTimerEx("JobCocinero2",216000,true,"d",id); }
		if(Fabricas[id][StatoCuoco3] == 1 && Fabricas[id][TieneCocinero3] != 0 || Fabricas[id][PorcentajeCocinero3] > 0 && Fabricas[id][TieneCocinero3] != 0) { Fabricas[id][StatoCuoco3] = 1; Fabricas[id][tiempoc3] = SetTimerEx("JobCocinero3",216000,true,"d",id); }
		if(Fabricas[id][StatoCuoco4] == 1 && Fabricas[id][TieneCocinero4] != 0 || Fabricas[id][PorcentajeCocinero4] > 0 && Fabricas[id][TieneCocinero4] != 0) { Fabricas[id][StatoCuoco4] = 1; Fabricas[id][tiempoc4] = SetTimerEx("JobCocinero4",216000,true,"d",id); }
		if(Fabricas[id][StatoCuoco5] == 1 && Fabricas[id][TieneCocinero5] != 0 || Fabricas[id][PorcentajeCocinero5] > 0 && Fabricas[id][TieneCocinero5] != 0) { Fabricas[id][StatoCuoco5] = 1; Fabricas[id][tiempoc5] = SetTimerEx("JobCocinero5",216000,true,"d",id); }

		if(Fabricas[id][TieneCocinero1] != 0)
		{
		    if(Fabricas[id][StatoCuoco1] == 0 && Fabricas[id][PorcentajeCocinero1] == 0) Fabricas[id][StatoCuoco1] = 2;
		}
		if(Fabricas[id][TieneCocinero2] != 0)
		{
		    if(Fabricas[id][StatoCuoco2] == 0 && Fabricas[id][PorcentajeCocinero2] == 0) Fabricas[id][StatoCuoco2] = 2;
		}
		if(Fabricas[id][TieneCocinero3] != 0)
		{
		    if(Fabricas[id][StatoCuoco3] == 0 && Fabricas[id][PorcentajeCocinero3] == 0) Fabricas[id][StatoCuoco3] = 2;
		}
		if(Fabricas[id][TieneCocinero4] != 0)
		{
		    if(Fabricas[id][StatoCuoco4] == 0 && Fabricas[id][PorcentajeCocinero4] == 0) Fabricas[id][StatoCuoco4] = 2;
		}
		if(Fabricas[id][TieneCocinero5] != 0)
		{
		    if(Fabricas[id][StatoCuoco5] == 0 && Fabricas[id][PorcentajeCocinero5] == 0) Fabricas[id][StatoCuoco5] = 2;
        }
		format(string,sizeof(string),"{000cff}Mesa de producción\n{FFFFFF}Cristal molido: {EB0000}%d%%{FFFFFF}\nEstado:%s",Fabricas[id][PorcentajeCocinero1], EstadoCuoco(Fabricas[id][StatoCuoco1]));
		Fabricas[id][Cocinero1] = CreateDynamic3DTextLabel(string, -1, -2016.39978, 226.99930, 1035.33789+0.2, 4.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);

		format(string,sizeof(string),"{000cff}Mesa de producción\n{FFFFFF}Cristal molido: {EB0000}%d%%{FFFFFF}\nEstado:%s",Fabricas[id][PorcentajeCocinero2], EstadoCuoco(Fabricas[id][StatoCuoco2]));
		Fabricas[id][Cocinero2] = CreateDynamic3DTextLabel(string, -1, -2012.56006, 226.99930, 1035.33789+0.2, 4.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);

		format(string,sizeof(string),"{000cff}Mesa de producción\n{FFFFFF}Cristal molido: {EB0000}%d%%{FFFFFF}\nEstado:%s",Fabricas[id][PorcentajeCocinero3], EstadoCuoco(Fabricas[id][StatoCuoco3]));
		Fabricas[id][Cocinero3] = CreateDynamic3DTextLabel(string, -1, -2008.72021, 226.99930, 1035.33789+0.2, 4.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);

		format(string,sizeof(string),"{000cff}Mesa de producción\n{FFFFFF}Cristal molido: {EB0000}%d%%{FFFFFF}\nEstado:%s",Fabricas[id][PorcentajeCocinero4], EstadoCuoco(Fabricas[id][StatoCuoco4]));
		Fabricas[id][Cocinero4] = CreateDynamic3DTextLabel(string, -1, -2004.88074, 226.99930, 1035.33789+0.2, 4.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);

		format(string,sizeof(string),"{000cff}Mesa de producción\n{FFFFFF}Cristal molido: {EB0000}%d%%{FFFFFF}\nEstado:%s",Fabricas[id][PorcentajeCocinero5], EstadoCuoco(Fabricas[id][StatoCuoco5]));
		Fabricas[id][Cocinero5] = CreateDynamic3DTextLabel(string, -1, -2001.06067, 226.99930, 1035.33789+0.2, 4.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);

		ObjetoDistraccion(Fabricas[id][Auto2F], id);
		ActualizarDineroPared(id);
		CargarCajasFabrica(id);

		//Médico
		if(Fabricas[id][EstadoMedico] == 1 && IsValidActor(Fabricas[id][ActorMedico])) ApplyActorAnimation(Fabricas[id][ActorMedico], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
		//Guardia 1
		if(Fabricas[id][EstadoG1] == 1 && IsValidActor(Fabricas[id][ActorGuardia1])) ApplyActorAnimation(Fabricas[id][ActorGuardia1], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
		//Guardia 2
		if(Fabricas[id][EstadoG2] == 1 && IsValidActor(Fabricas[id][ActorGuardia2])) ApplyActorAnimation(Fabricas[id][ActorGuardia2], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
		//Guardia 3
		if(Fabricas[id][EstadoG3] == 1 && IsValidActor(Fabricas[id][ActorGuardia3])) ApplyActorAnimation(Fabricas[id][ActorGuardia3], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
		//Procesadores de meta 1
		if(Fabricas[id][EstadoCoc1] == 1 && IsValidActor(Fabricas[id][ActorCocinero1])) ApplyActorAnimation(Fabricas[id][ActorCocinero1], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
		//Procesadores de meta 2
		if(Fabricas[id][EstadoCoc3] == 1 && IsValidActor(Fabricas[id][ActorCocinero2])) ApplyActorAnimation(Fabricas[id][ActorCocinero2], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
		//Procesadores de meta 3
		if(Fabricas[id][EstadoCoc4] == 1 && IsValidActor(Fabricas[id][ActorCocinero3])) ApplyActorAnimation(Fabricas[id][ActorCocinero3], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
		//procesadores de meta 4
		if(Fabricas[id][EstadoCoc4] == 1 && IsValidActor(Fabricas[id][ActorCocinero4])) ApplyActorAnimation(Fabricas[id][ActorCocinero4], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
		//Procesadores de meta 5
		if(Fabricas[id][EstadoCoc5] == 1 && IsValidActor(Fabricas[id][ActorCocinero5]))ApplyActorAnimation(Fabricas[id][ActorCocinero5], "WUZI","CS_Dead_Guy", 4.1,1,0,0,1,0);
		//
  		//Moledores de Cristales

		if(Fabricas[id][TieneCocinero1] != 0)
		{
		    new varskin;
            if(Fabricas[id][TieneCocinero1] == 1) varskin = 146;
            if(Fabricas[id][TieneCocinero1] == 2) varskin = 145;
			Fabricas[id][ActorCocinero1] = CreateActor(varskin, -2016.4310,227.9705,1035.8162,180.0000);
			SetActorVirtualWorld(Fabricas[id][ActorCocinero1], Fabricas[id][pVW]);
            SetActorHealth(Fabricas[id][ActorCocinero1], 100.0);
		}
		if(Fabricas[id][TieneCocinero2] != 0)
		{
		    new varskin;
            if(Fabricas[id][TieneCocinero2] == 1) varskin = 146;
            if(Fabricas[id][TieneCocinero2] == 2) varskin = 145;
			Fabricas[id][ActorCocinero2] = CreateActor(varskin, -2012.5667,226.0623,1035.8225,0.0000);
			SetActorVirtualWorld(Fabricas[id][ActorCocinero2], Fabricas[id][pVW]);
            SetActorHealth(Fabricas[id][ActorCocinero2], 100.0);
		}
		if(Fabricas[id][TieneCocinero3] != 0)
		{
		    new varskin;
            if(Fabricas[id][TieneCocinero3] == 1) varskin = 146;
            if(Fabricas[id][TieneCocinero3] == 2) varskin = 145;
			Fabricas[id][ActorCocinero3] = CreateActor(varskin, -2008.7354,227.9745,1035.8162,180.0000);
			SetActorVirtualWorld(Fabricas[id][ActorCocinero3], Fabricas[id][pVW]);
            SetActorHealth(Fabricas[id][ActorCocinero3], 100.0);
		}
		if(Fabricas[id][TieneCocinero4] != 0)
		{
		    new varskin;
            if(Fabricas[id][TieneCocinero4] == 1) varskin = 146;
            if(Fabricas[id][TieneCocinero4] == 2) varskin = 145;
			Fabricas[id][ActorCocinero4] = CreateActor(varskin, -2004.8615,226.0628,1035.8162,0.0000);
			SetActorVirtualWorld(Fabricas[id][ActorCocinero4], Fabricas[id][pVW]);
            SetActorHealth(Fabricas[id][ActorCocinero4], 100.0);
		}
		if(Fabricas[id][TieneCocinero5] != 0)
		{
		    new varskin;
            if(Fabricas[id][TieneCocinero5] == 1) varskin = 146;
            if(Fabricas[id][TieneCocinero5] == 2) varskin = 145;
			Fabricas[id][ActorCocinero5] = CreateActor(varskin, -2001.0369,227.9719,1035.8162,180.0000);
			SetActorVirtualWorld(Fabricas[id][ActorCocinero5], Fabricas[id][pVW]);
            SetActorHealth(Fabricas[id][ActorCocinero5], 100.0);
		}
 		//END
  		for(new cb = 0; cb < Fabricas[id][pCantidadBolsas]; cb++)
		{
			Fabricas[id][Bolso][cb] = CreateDynamicObject(1550, BolsoSpawn[cb][0], BolsoSpawn[cb][1], BolsoSpawn[cb][2],   0.00000, 0.00000, 0.00000, Fabricas[id][pVW],Fabricas[id][pInt]);
		}
        for(new esco = 0; esco < Fabricas[id][pRecortada]; esco++)
		{
			Fabricas[id][EscoObjetos][esco] = CreateDynamicObject(350, EscopetasRecortadas[esco][0], EscopetasRecortadas[esco][1], EscopetasRecortadas[esco][2],   EscopetasRecortadas[esco][3], EscopetasRecortadas[esco][4], EscopetasRecortadas[esco][5], Fabricas[id][pVW],Fabricas[id][pInt]);
		}
		for(new ch = 0; ch < Fabricas[id][pChalecos]; ch++)
		{
			Fabricas[id][Chalecos][ch] = CreateDynamicObject(373, ChalecoSpawn[ch][0], ChalecoSpawn[ch][1], ChalecoSpawn[ch][2],   ChalecoSpawn[ch][3], ChalecoSpawn[ch][4], ChalecoSpawn[ch][5], Fabricas[id][pVW],Fabricas[id][pInt]);
		}
		for(new snip = 0; snip < Fabricas[id][pSniper]; snip++)
		{
			Fabricas[id][SniperObjetos][snip] = CreateDynamicObject(358, PSnipers[snip][0], PSnipers[snip][1], PSnipers[snip][2],   PSnipers[snip][3], PSnipers[snip][4], PSnipers[snip][5], Fabricas[id][pVW],Fabricas[id][pInt]);
		}
		if(Fabricas[id][MedicoContratado] != 0)
		{
			Fabricas[id][ActorMedico] = CreateActor(Fabricas[id][MedicoContratado], -2022.5638,215.6430,1035.8162,302.6615);
			SetActorVirtualWorld(Fabricas[id][ActorMedico], Fabricas[id][pVW]);
            SetActorHealth(Fabricas[id][ActorMedico], 100.0);
		}
		for(new tects = 0; tects < Fabricas[id][pTec9]; tects++)
		{
			Fabricas[id][Tec9Objetos][tects] = CreateDynamicObject(372, PTec[tects][0], PTec[tects][1], PTec[tects][2],   PTec[tects][3], PTec[tects][4], PTec[tects][5], Fabricas[id][pVW],Fabricas[id][pInt]);
		}
		for(new uzis = 0; uzis < Fabricas[id][pUzi]; uzis++)
		{
			Fabricas[id][UziObjetos][uzis] = CreateDynamicObject(352, PUzis[uzis][0], PUzis[uzis][1], PUzis[uzis][2],   PUzis[uzis][3], PUzis[uzis][4], PUzis[uzis][5], Fabricas[id][pVW],Fabricas[id][pInt]);
		}
		//CANTIDAD ARMAS
		format(string,sizeof(string),"{EB0000}Armas{FFFFFF}\nCantidad disponible:{00CC00} %d{FFFFFF}\n\nPulsa {DBED16}'H'{FFFFFF} para equipar una.\nPulsa {00CCFF}'Y'{FFFFFF} para guardar el arma que llevas en tus manos.",Fabricas[id][pRecortada]+Fabricas[id][pUzi]+Fabricas[id][pTec9]+Fabricas[id][pSniper]);
		Fabricas[id][pLabel4] = CreateDynamic3DTextLabel(string, -1, -2019.9447,243.5474,1035.8162+0.3 ,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,Fabricas[id][pVW],Fabricas[id][pInt]);

		//CANTIDAD Chalecos
		format(string,sizeof(string),"{3399FF}Chalecos antibalas{FFFFFF}\nCantidad disponible: {00CC00}%s{FFFFFF}\n\nPulsa {DBED16}'H'{FFFFFF} para equipar uno.",Numeros(Fabricas[id][pChalecos]));
		Fabricas[id][pLabel5] = CreateDynamic3DTextLabel(string, -1, -2020.0555,239.3711,1035.8162+0.3, 3.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);

		//HORNOS
		format(string,sizeof(string),"{DBED16}Cocina: #1{FFFFFF}\nProducción: {3d83ce}%d%%{FFFFFF} completada.\nEstado: %s{FFFFFF}\n\n%s{FFFFFF}%s",Fabricas[id][Porcentaje1],EstadoH(HornoEncendido1[id]),EstadoHo(HornoEncendido1[id]),EstadoCristal(Fabricas[id][Crisol1]));
		Fabricas[id][olla1] = CreateDynamic3DTextLabel(string, -1, -1992.2786, 194.1294, 1035.4269, 4.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);

		format(string,sizeof(string),"{DBED16}Cocina: #2{FFFFFF}\nProducción: {3d83ce}%d%%{FFFFFF} completada.\nEstado: %s{FFFFFF}\n\n%s{FFFFFF}%s",Fabricas[id][Porcentaje2],EstadoH(HornoEncendido2[id]),EstadoHo(HornoEncendido2[id]),EstadoCristal(Fabricas[id][Crisol2]));
		Fabricas[id][olla2] = CreateDynamic3DTextLabel(string, -1, -1995.6786, 194.1294, 1035.4269, 4.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);

		format(string,sizeof(string),"{DBED16}Cocina: #3{FFFFFF}\nProducción: {3d83ce}%d%%{FFFFFF} completada.\nEstado: %s{FFFFFF}\n\n%s{FFFFFF}%s",Fabricas[id][Porcentaje3],EstadoH(HornoEncendido3[id]),EstadoHo(HornoEncendido3[id]),EstadoCristal(Fabricas[id][Crisol3]));
		Fabricas[id][olla3] = CreateDynamic3DTextLabel(string, -1, -1999.1986, 194.1294, 1035.4269, 4.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);

		//TANQUES 1
		format(string,sizeof(string),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #1",Fabricas[id][pTanqueUno]);
		Fabricas[id][LTanque1] = CreateDynamic3DTextLabel(string, -1, -2025.3972, 209.3350, 1041.0414-0.5, 5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);

		format(string,sizeof(string),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #1",Fabricas[id][pTanqueDos]);
		Fabricas[id][LTanque2] = CreateDynamic3DTextLabel(string, -1, -2025.3972, 212.2440, 1041.0414-0.5, 5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);

		format(string,sizeof(string),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #1",Fabricas[id][pTanqueTres]);
		Fabricas[id][LTanque3] = CreateDynamic3DTextLabel(string, -1, -2025.3972, 215.3320, 1041.0414-0.5, 5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);

		//TANQUES 2
		format(string,sizeof(string),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #2",Fabricas[id][pTanqueCuatro]);
		Fabricas[id][LTanque4] = CreateDynamic3DTextLabel(string, -1, -2025.3972, 194.5190, 1041.0414-0.5, 5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);

		format(string,sizeof(string),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #2",Fabricas[id][pTanqueCinco]);
		Fabricas[id][LTanque5] = CreateDynamic3DTextLabel(string, -1, -2025.3972, 197.5950, 1041.0414-0.5, 5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);

		format(string,sizeof(string),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #2",Fabricas[id][pTanqueSeis]);
		Fabricas[id][LTanque6] = CreateDynamic3DTextLabel(string, -1, -2025.3972, 200.4760, 1041.0414-0.5, 5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);

        //TANQUES 3
		format(string,sizeof(string),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #3",Fabricas[id][pTanqueSiete]);
		Fabricas[id][LTanque7] = CreateDynamic3DTextLabel(string, -1, -1976.9731, 200.2980, 1041.0414-0.5, 5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);

		format(string,sizeof(string),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #3",Fabricas[id][pTanqueOcho]);
		Fabricas[id][LTanque8] = CreateDynamic3DTextLabel(string, -1, -1976.9731, 197.4360, 1041.0414-0.5, 5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);

		format(string,sizeof(string),"{3399FF}Tanque de almacenaje de químicos{FFFFFF}\nCapacidad ocupada: {EB0000}%d%%{FFFFFF}\nCocina:{DBED16} #3",Fabricas[id][pTanqueNueve]);
		Fabricas[id][LTanque9] = CreateDynamic3DTextLabel(string, -1, -1976.9731, 194.3620, 1041.0414-0.5, 5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0,Fabricas[id][pVW], Fabricas[id][pInt],-1,100.0);

		if(Fabricas[id][pEntradaGX] != 0)
		{
		    Fabricas[id][pLabel3] = CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'H'{FFFFFF} para ingresar al garaje.", -1, Fabricas[id][pEntradaGX],Fabricas[id][pEntradaGY],Fabricas[id][pEntradaGZ]+1.0, 20);
		}

		//CargarDineroFabrica(id);
	}
	else if(Fabricas[id][pBanda] == 0)
	{
		if(Fabricas[id][pEnVentaPor] == 0) format(string, sizeof(string), "{ff3e3e}Fábrica de metanfetamina\n{FFFFFF}En venta\nPrecio: {00CC00}$%s\n{FFFFFF}Usa {DBED16}/comprar propiedad{FFFFFF} para comprarla.",Numeros(Fabricas[id][pValor]));
		else format(string, sizeof(string), "{ff3e3e}Fábrica de metanfetamina\n{FFFFFF}En venta\nPrecio: {00CC00}$%s "SERVER_COIN"\n{FFFFFF}Usa {DBED16}/comprar propiedad{FFFFFF} para comprarla.",Fabricas[id][pValor]);

		Fabricas[id][pLabel] = CreateDynamic3DTextLabel(string, -1, Fabricas[id][pEntradaX],Fabricas[id][pEntradaY],Fabricas[id][pEntradaZ]+1.0, 20);
		Fabricas[id][pLabel2] = CreateDynamic3DTextLabel("{FFFFFF}Usa {DBED16}/salir{FFFFFF} para salir de la propiedad.",0xFFFFFF00,Fabricas[id][pSalidaX],Fabricas[id][pSalidaY],Fabricas[id][pSalidaZ],5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,Fabricas[id][pVW],Fabricas[id][pInt],-1,100.0);
  		Fabricas[id][pPickup] = CreateDynamicPickup(1273,23,Fabricas[id][pEntradaX],Fabricas[id][pEntradaY],Fabricas[id][pEntradaZ],0);
        Fabricas[id][pMapIcon] = CreateDynamicMapIcon(Fabricas[id][pEntradaX],Fabricas[id][pEntradaY],Fabricas[id][pEntradaZ], 23, -1, -1, -1, -1, 600.0);

		if(Fabricas[id][pEntradaGX] != 0)
		{
		    Fabricas[id][pLabel3] = CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'H'{FFFFFF} para ingresar al garaje.", -1, Fabricas[id][pEntradaGX],Fabricas[id][pEntradaGY],Fabricas[id][pEntradaGZ]+1.0, 20);
		}
	}
	return true;
}
CargarPropiedad(id)
{
	new string[350];
	if(PropInfo[id][pEnVenta] == 0)
	{
		PropInfo[id][pAbierta] = 0;
	    if(PropInfo[id][pTipo] == 1)//Casa
	    {
            format(string, sizeof(string), "{FFFFFF}Casa\n{bdbdbd}%s %d\n{FFFFFF}Propietario: {DBED16}%s{FFFFFF}\n\nEscribe {DBED16}/entrar {FFFFFF}para ingresar.",PropInfo[id][pLocalizacion],PropInfo[id][pID],PropInfo[id][pPropietario]);
            PropInfo[id][pLabel] = CreateDynamic3DTextLabel(string,COLOR_WHITE,PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ]+0.8,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0,-1,100.0);
            PropInfo[id][pLabel2] = CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,PropInfo[id][pPosXS],PropInfo[id][pPosYS],PropInfo[id][pPosZS]+1.0,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[id][pVW],PropInfo[id][pInteriorID],-1,100.0);
            DarPosicionHeladera(id);
			if(PropInfo[id][pRoperoX] != 0)
			{
            	PropInfo[id][pLabel4] = CreateDynamic3DTextLabel("{FFFFFF}Usa {DBED16}/entrar{FFFFFF} para ingresar.",0xFFFFFF00,PropInfo[id][pRoperoX],PropInfo[id][pRoperoY],PropInfo[id][pRoperoZ]+0.6,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[id][pVW],PropInfo[id][pInteriorID],-1,100.0);
			}
			if(PropInfo[id][pGX] != 0)
			{
				PropInfo[id][pLabel5] = CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'H'{FFFFFF} para ingresar al garaje.",0xFFFFFF00,PropInfo[id][pGX],PropInfo[id][pGY],PropInfo[id][pGZ]+0.6,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0,-1,100.0);
			}
	    }
	    else if(PropInfo[id][pTipo] == 2)//Oficina
	    {
            format(string, sizeof(string), "{8c5c35}Oficina{FFFFFF}\n{bdbdbd}%s %d\n{FFFFFF}Propietario: {DBED16}%s{FFFFFF}\n\nEscribe {DBED16}/entrar {FFFFFF}para ingresar.",PropInfo[id][pLocalizacion],PropInfo[id][pID],PropInfo[id][pPropietario]);
            PropInfo[id][pLabel] = CreateDynamic3DTextLabel(string,COLOR_WHITE,PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ]+0.8,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0,-1,100.0);
            PropInfo[id][pLabel2] = CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,PropInfo[id][pPosXS],PropInfo[id][pPosYS],PropInfo[id][pPosZS]+1.0,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[id][pVW],PropInfo[id][pInteriorID],-1,100.0);
            DarPosicionHeladera(id);
			if(PropInfo[id][pRoperoX] != 0)
			{
            	PropInfo[id][pLabel4] = CreateDynamic3DTextLabel("{FFFFFF}Usa {DBED16}/entrar{FFFFFF} para ingresar.",0xFFFFFF00,PropInfo[id][pRoperoX],PropInfo[id][pRoperoY],PropInfo[id][pRoperoZ]+0.6,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[id][pVW],PropInfo[id][pInteriorID],-1,100.0);
			}
			if(PropInfo[id][pGX] != 0)
			{
				PropInfo[id][pLabel5] = CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'H'{FFFFFF} para ingresar al garaje.",0xFFFFFF00,PropInfo[id][pGX],PropInfo[id][pGY],PropInfo[id][pGZ]+0.6,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0,-1,100.0);
			}
	    }
	    else if(PropInfo[id][pTipo] == 3)//Restaurante
	    {
            format(string, sizeof(string), "{99ccff}Restaurante{FFFFFF}\n{bdbdbd}%s %d\n{FFFFFF}Propietario: {DBED16}%s{FFFFFF}\n\nEscribe {DBED16}/entrar {FFFFFF}para ingresar.",PropInfo[id][pLocalizacion],PropInfo[id][pID],PropInfo[id][pPropietario]);
            PropInfo[id][pLabel] = CreateDynamic3DTextLabel(string,COLOR_WHITE,PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ]+0.8,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0,-1,100.0);
            PropInfo[id][pLabel2] = CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,PropInfo[id][pPosXS],PropInfo[id][pPosYS],PropInfo[id][pPosZS]+1.0,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[id][pVW],PropInfo[id][pInteriorID],-1,100.0);
            PropInfo[id][pPickup] = CreateDynamicPickup(1318,23,PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ],0);
            CreateDynamicMapIcon(PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ], 50, 0, 0, 0, -1, 600.0);
            DarPosicionHeladera(id);
			if(PropInfo[id][pRoperoX] != 0)
			{
 				PropInfo[id][pLabel4] = CreateDynamic3DTextLabel("{FFFFFF}Usa {DBED16}/entrar{FFFFFF} para ingresar.",0xFFFFFF00,PropInfo[id][pRoperoX],PropInfo[id][pRoperoY],PropInfo[id][pRoperoZ]+0.6,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[id][pVW],PropInfo[id][pInteriorID],-1,100.0);
			}
			if(PropInfo[id][pGX] != 0)
			{
				PropInfo[id][pLabel5] = CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'H'{FFFFFF} para ingresar al garaje.",0xFFFFFF00,PropInfo[id][pGX],PropInfo[id][pGY],PropInfo[id][pGZ]+0.6,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0,-1,100.0);
			}
	    }
	    else if(PropInfo[id][pTipo] == 4)//Empresa privada
	    {
            format(string, sizeof(string), "{868b9e}Empresa privada{FFFFFF}\n{bdbdbd}%s %d\n{FFFFFF}Propietario: {DBED16}%s{FFFFFF}\n\nEscribe {DBED16}/entrar {FFFFFF}para ingresar.",PropInfo[id][pLocalizacion],PropInfo[id][pID],PropInfo[id][pPropietario]);
            PropInfo[id][pLabel] = CreateDynamic3DTextLabel(string,COLOR_WHITE,PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ]+0.8,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0,-1,100.0);
            PropInfo[id][pLabel2] = CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,PropInfo[id][pPosXS],PropInfo[id][pPosYS],PropInfo[id][pPosZS]+1.0,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[id][pVW],PropInfo[id][pInteriorID],-1,100.0);
            DarPosicionHeladera(id);
            PropInfo[id][Amater] = CreateDynamicObject(17951, 1403.85803, 601.39990, 1001.69550,   0.00000, 0.00000, 270.00000, PropInfo[id][pInterior],PropInfo[id][pVW]);
			if(PropInfo[id][pRoperoX] != 0)
			{
 				PropInfo[id][pLabel4] = CreateDynamic3DTextLabel("{FFFFFF}Usa {DBED16}/entrar{FFFFFF} para ingresar.",0xFFFFFF00,PropInfo[id][pRoperoX],PropInfo[id][pRoperoY],PropInfo[id][pRoperoZ]+0.6,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[id][pVW],PropInfo[id][pInteriorID],-1,100.0);
			}
			if(PropInfo[id][pGX] != 0)
			{
			    PropInfo[id][pLabel6] = CreateDynamic3DTextLabel("{FFFFFF}Escribe {DBED16}/salir{FFFFFF} para salir del garaje.",0xFFFFFF00,1403.8179,601.0150,1001.0300+1,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[id][pVW],PropInfo[id][pInteriorID],-1,100.0);
				PropInfo[id][pLabel5] = CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'H'{FFFFFF} para ingresar al garaje.",0xFFFFFF00,PropInfo[id][pGX],PropInfo[id][pGY],PropInfo[id][pGZ]+0.6,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0,-1,100.0);
			}
	    }
	}
	else
	{
	    PropInfo[id][pAbierta] = 1;
	    if(PropInfo[id][pTipo] == 1)//Casa
	    {
			if(PropInfo[id][pEnVentaPor] == 0) format(string, sizeof(string), "{FFFFFF}Casa\n{bdbdbd}%s %d\n{FFFFFF}En venta por: {00CC00}$%d{FFFFFF}.\nNivel necesario: {00CC00}%d{FFFFFF}.\nUsa {DBED16}/comprar propiedad{FFFFFF} para comprarla.\n\nUsa {DBED16}/entrar{FFFFFF} para ingresar.",PropInfo[id][pLocalizacion],PropInfo[id][pID],PropInfo[id][pPrecio],PropInfo[id][pNivel]);
			else format(string, sizeof(string), "{FFFFFF}Casa\n{bdbdbd}%s %d{FFFFFF}\nEn venta por: {00CC00}%d "SERVER_COIN"{FFFFFF}\nNivel necesario: {00CC00}%d{FFFFFF}\nEscribe {DBED16}/comprar propiedad{FFFFFF} para comprarla.\n\nEscribe {DBED16}/entrar{FFFFFF} para ingresar.",PropInfo[id][pLocalizacion],PropInfo[id][pID],PropInfo[id][pPrecio],PropInfo[id][pNivel]);
			PropInfo[id][pLabel] = CreateDynamic3DTextLabel(string,COLOR_WHITE,PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ]+0.8,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0,-1,100.0);
   			PropInfo[id][pPickup] = CreateDynamicPickup(1273,1,PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ],0);
      		PropInfo[id][pLabel2] = CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,PropInfo[id][pPosXS],PropInfo[id][pPosYS],PropInfo[id][pPosZS]+1.0,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[id][pVW],PropInfo[id][pInteriorID],-1,100.0);
            DarPosicionHeladera(id);
			if(PropInfo[id][pRoperoX] != 0)
			{
 				PropInfo[id][pLabel4] = CreateDynamic3DTextLabel("{FFFFFF}Usa {DBED16}/entrar{FFFFFF} para ingresar.",0xFFFFFF00,PropInfo[id][pRoperoX],PropInfo[id][pRoperoY],PropInfo[id][pRoperoZ]+0.6,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[id][pVW],PropInfo[id][pInteriorID],-1,100.0);
			}
			if(PropInfo[id][pGX] != 0)
			{
				PropInfo[id][pLabel5] = CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'H'{FFFFFF} para ingresar al garaje.",0xFFFFFF00,PropInfo[id][pGX],PropInfo[id][pGY],PropInfo[id][pGZ]+0.6,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0,-1,100.0);
			}
	    }
	    else if(PropInfo[id][pTipo] == 2)//Oficina
	    {
			if(PropInfo[id][pEnVentaPor] == 0) format(string, sizeof(string), "{8c5c35}Oficina\n{bdbdbd}%s %d\n{FFFFFF}En venta por: {00CC00}$%d{FFFFFF}.\nNivel necesario: {00CC00}%d{FFFFFF}.\nUsa {DBED16}/comprar propiedad{FFFFFF} para comprarla.\n\nEscribe {DBED16}/entrar{FFFFFF} para ingresar.",PropInfo[id][pLocalizacion],PropInfo[id][pID],PropInfo[id][pPrecio],PropInfo[id][pNivel]);
			else format(string, sizeof(string), "{8c5c35}Oficina\n{bdbdbd}%s %d{FFFFFF}\n{FFFFFF}En venta por: {00CC00}%d "SERVER_COIN"{FFFFFF}\nNivel necesario: {00CC00}%d{FFFFFF}\nEscribe {DBED16}/comprar propiedad{FFFFFF} para comprarla.\n\nEscribe {DBED16}/entrar{FFFFFF} para ingresar.",PropInfo[id][pLocalizacion],PropInfo[id][pID],PropInfo[id][pPrecio],PropInfo[id][pNivel]);
			PropInfo[id][pLabel] = CreateDynamic3DTextLabel(string,COLOR_WHITE,PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ]+0.8,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0,-1,100.0);
   			PropInfo[id][pPickup] = CreateDynamicPickup(1273,1,PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ],0);
      		PropInfo[id][pLabel2] = CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,PropInfo[id][pPosXS],PropInfo[id][pPosYS],PropInfo[id][pPosZS]+1.0,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[id][pVW],PropInfo[id][pInteriorID],-1,100.0);
            DarPosicionHeladera(id);
			if(PropInfo[id][pRoperoX] != 0)
			{
 				PropInfo[id][pLabel4] = CreateDynamic3DTextLabel("{FFFFFF}Usa {DBED16}/entrar{FFFFFF} para ingresar.",0xFFFFFF00,PropInfo[id][pRoperoX],PropInfo[id][pRoperoY],PropInfo[id][pRoperoZ]+0.6,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[id][pVW],PropInfo[id][pInteriorID],-1,100.0);
			}
			if(PropInfo[id][pGX] != 0)
			{
				PropInfo[id][pLabel5] = CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'H'{FFFFFF} para ingresar al garaje.",0xFFFFFF00,PropInfo[id][pGX],PropInfo[id][pGY],PropInfo[id][pGZ]+0.6,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0,-1,100.0);
			}
	    }
	    else if(PropInfo[id][pTipo] == 3)//Restaurante
	    {
			if(PropInfo[id][pEnVentaPor] == 0) format(string, sizeof(string), "{99ccff}Restaurante\n{bdbdbd}%s %d\n{FFFFFF}En venta por: {00CC00}$%d{FFFFFF}.\nNivel necesario: {00CC00}%d{FFFFFF}.\nUsa {DBED16}/comprar propiedad{FFFFFF} para comprarla.\n\nUsa {DBED16}/entrar{FFFFFF} para ingresar.",PropInfo[id][pLocalizacion],PropInfo[id][pID],PropInfo[id][pPrecio],PropInfo[id][pNivel]);
			else format(string, sizeof(string), "{99ccff}Restaurante\n{bdbdbd}%s %d\n{FFFFFF}En venta por: {00CC00}%d "SERVER_COIN"{FFFFFF}\nNivel necesario: {00CC00}%d{FFFFFF}\nEscribe {DBED16}/comprar propiedad{FFFFFF} para comprarla.\n\nEscribe {DBED16}/entrar{FFFFFF} para ingresar.",PropInfo[id][pLocalizacion],PropInfo[id][pID],PropInfo[id][pPrecio],PropInfo[id][pNivel]);
			PropInfo[id][pLabel] = CreateDynamic3DTextLabel(string,COLOR_WHITE,PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ]+0.8,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0,-1,100.0);
   			PropInfo[id][pPickup] = CreateDynamicPickup(1272,1,PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ],0);
      		PropInfo[id][pLabel2] = CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,PropInfo[id][pPosXS],PropInfo[id][pPosYS],PropInfo[id][pPosZS]+1.0,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[id][pVW],PropInfo[id][pInteriorID],-1,100.0);
            CreateDynamicMapIcon(PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ], 50, 0, 0, 0, -1, 600.0);
            DarPosicionHeladera(id);
			if(PropInfo[id][pRoperoX] != 0)
			{
 				PropInfo[id][pLabel4] = CreateDynamic3DTextLabel("{FFFFFF}Usa {DBED16}/entrar{FFFFFF} para ingresar.",0xFFFFFF00,PropInfo[id][pRoperoX],PropInfo[id][pRoperoY],PropInfo[id][pRoperoZ]+0.6,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[id][pVW],PropInfo[id][pInteriorID],-1,100.0);
			}
			if(PropInfo[id][pGX] != 0)
			{
				PropInfo[id][pLabel5] = CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'H'{FFFFFF} para ingresar al garaje.",0xFFFFFF00,PropInfo[id][pGX],PropInfo[id][pGY],PropInfo[id][pGZ]+0.6,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0,-1,100.0);
			}
	    }
	    else if(PropInfo[id][pTipo] == 4)//Empresa privada
	    {
			if(PropInfo[id][pEnVentaPor] == 0) format(string, sizeof(string), "{868b9e}Empresa privada\n{bdbdbd}%s %d\n{FFFFFF}En venta por: {00CC00}$%d{FFFFFF}.\nNivel necesario: {00CC00}%d{FFFFFF}.\nUsa {DBED16}/comprar propiedad{FFFFFF} para comprarla.\n\nEscribe {DBED16}/entrar{FFFFFF} para ingresar.",PropInfo[id][pLocalizacion],PropInfo[id][pID],PropInfo[id][pPrecio],PropInfo[id][pNivel]);
			else format(string, sizeof(string), "{868b9e}Empresa privada{bdbdbd}\n{bdbdbd}%s %d{FFFFFF}\nEn venta por: {00CC00}%d "SERVER_COIN"{FFFFFF}\nNivel necesario: {00CC00}%d{FFFFFF}\nEscribe {DBED16}/comprar propiedad{FFFFFF} para comprarla.\n\nEscribe {DBED16}/entrar{FFFFFF} para ingresar.",PropInfo[id][pLocalizacion],PropInfo[id][pID],PropInfo[id][pPrecio],PropInfo[id][pNivel]);
			PropInfo[id][pLabel] = CreateDynamic3DTextLabel(string,COLOR_WHITE,PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ]+0.8,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0,-1,100.0);
            PropInfo[id][pPickup] = CreateDynamicPickup(1272,1,PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ],0);
			PropInfo[id][pLabel2] = CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'F'{FFFFFF} para salir.",0xFFFFFF00,PropInfo[id][pPosXS],PropInfo[id][pPosYS],PropInfo[id][pPosZS]+1.0,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[id][pVW],PropInfo[id][pInteriorID],-1,100.0);
            DarPosicionHeladera(id);
            //PropInfo[id][Amater] = CreateDynamicObject(17951, 1403.85803, 601.39990, 1001.69550,   0.00000, 0.00000, 270.00000, PropInfo[id][pInterior],PropInfo[id][pVW]);
			if(PropInfo[id][pRoperoX] != 0)
			{
 				PropInfo[id][pLabel4] = CreateDynamic3DTextLabel("{FFFFFF}Usa {DBED16}/entrar{FFFFFF} para ingresar.",0xFFFFFF00,PropInfo[id][pRoperoX],PropInfo[id][pRoperoY],PropInfo[id][pRoperoZ]+0.6,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[id][pVW],PropInfo[id][pInteriorID],-1,100.0);
			}
			if(PropInfo[id][pGX] != 0)
			{
			    PropInfo[id][pLabel6] = CreateDynamic3DTextLabel("{FFFFFF}Escribe {DBED16}/salir{FFFFFF} para salir del garaje.",0xFFFFFF00,1403.8179,601.0150,1001.0300+1,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,PropInfo[id][pVW],PropInfo[id][pInteriorID],-1,100.0);
				PropInfo[id][pLabel5] = CreateDynamic3DTextLabel("{FFFFFF}Pulsa {DBED16}'H'{FFFFFF} para ingresar al garaje.",0xFFFFFF00,PropInfo[id][pGX],PropInfo[id][pGY],PropInfo[id][pGZ]+0.6,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0,-1,100.0);
			}
	    }
	}
	return true;
}

CargarEstacionamiento(id)
{
	new string[350];
	if(EstaInfo[id][pEnVenta] == 0)
	{
	    if(EstaInfo[id][pTipo] == 3)//Estacionamiento
	    {
	        format(string, sizeof(string), "{37db45}Estacionamiento{FFFFFF}\nPropietario: {00ccff}%s{FFFFFF}.\nCon nivel %d puedes {DBED16}/comprar estacionamiento{FFFFFF}.\nPrecio: {00CC00}$%d{FFFFFF}.\n\nPulsa {DBED16}'F'{FFFFFF} para entrar a pie y {DBED16}'H'{FFFFFF} para entrar en un vehículo.\nEl costo es de {00CC00}$150{FFFFFF}/día.",EstaInfo[id][pPropietario],EstaInfo[id][pNivel], EstaInfo[id][pPrecio]);
            EstaInfo[id][pLabel] = CreateDynamic3DTextLabel(string,COLOR_WHITE,EstaInfo[id][pPosX],EstaInfo[id][pPosY],EstaInfo[id][pPosZ]+0.6,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0,-1,100.0);
            EstaInfo[id][pLabel2] = CreateDynamic3DTextLabel("Pulsa {DBED16}'F'{FFFFFF} para salir a pie y {DBED16}'H'{FFFFFF} para salir en un vehículo",COLOR_WHITE,EstaInfo[id][pPosXS],EstaInfo[id][pPosYS],EstaInfo[id][pPosZS]+1,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,EstaInfo[id][pVW],EstaInfo[id][pInteriorID],-1,100.0);
            EstaInfo[id][pPickup] = CreateDynamicPickup(1318,50,EstaInfo[id][pPosX],EstaInfo[id][pPosY],EstaInfo[id][pPosZ],0);
	    }
	}
	return true;
}

BorrarLabelEstacionamiento(p)
{
    printf("BorrarLabelEstacionamiento: %d", p);
	DestroyDynamicPickup(EstaInfo[p][pPickup]);
	DestroyDynamic3DTextLabel(EstaInfo[p][pLabel]);
	DestroyDynamic3DTextLabel(EstaInfo[p][pLabel2]);
	DestroyDynamic3DTextLabel(EstaInfo[p][pLabel3]);
	DestroyDynamic3DTextLabel(EstaInfo[p][pLabel4]);
	DestroyDynamic3DTextLabel(EstaInfo[p][pLabel5]);
}

BorrarLabelCasa(p)
{
	printf("BorrarLabelCasa: %d", p);
	DestroyDynamicPickup(PropInfo[p][pPickup]);
	DestroyDynamic3DTextLabel(PropInfo[p][pLabel]);
	DestroyDynamic3DTextLabel(PropInfo[p][pLabel2]);
	DestroyDynamic3DTextLabel(PropInfo[p][pLabel3]);
	DestroyDynamic3DTextLabel(PropInfo[p][pLabel4]);
	DestroyDynamic3DTextLabel(PropInfo[p][pLabel5]);
	DestroyDynamic3DTextLabel(PropInfo[p][pLabel]);
	DestroyDynamic3DTextLabel(PropInfo[p][pLabel2]);
	DestroyDynamic3DTextLabel(PropInfo[p][pLabel3]);
	DestroyDynamic3DTextLabel(PropInfo[p][pLabel4]);
	DestroyDynamic3DTextLabel(PropInfo[p][pLabel5]);
	DestroyDynamic3DTextLabel(PropInfo[p][pLabel6]);
	if(IsValidDynamicObject(PropInfo[p][Amater]))
	{
	    DestroyDynamicObject(PropInfo[p][Amater]);
	}
}

BorrarPuntosFabrica(p)
{
	DestroyDynamicObject(Fabricas[p][tMoney]);
	DestroyDynamicObject(Fabricas[p][pPuerta]);
	DestroyDynamicPickup(Fabricas[p][pPickup]);
	DestroyDynamic3DTextLabel(Fabricas[p][pLabel]);
	DestroyDynamic3DTextLabel(Fabricas[p][pLabel2]);
	DestroyDynamic3DTextLabel(Fabricas[p][pLabel3]);
	DestroyDynamic3DTextLabel(Fabricas[p][pLabel4]);
	DestroyDynamic3DTextLabel(Fabricas[p][pLabel5]);
	DestroyDynamicMapIcon(Fabricas[p][pMapIcon]);
	DestroyDynamicActor(Fabricas[p][ActorMedico]);
	DestroyDynamicObject(Fabricas[p][pPuerta]);
	DestroyVehicle(Fabricas[p][Auto1F]);
	DestroyVehicle(Fabricas[p][Auto2F]);
}

public CargarPlantas()
{
	new Query[200];
	format(Query, sizeof(Query), "SELECT * FROM `plantas`");
	mysql_function_query(Conecction, Query, true, "CargarPlantasQuery", "i", 4);
	return 1;
}

public CargarPlantasQuery(resultid, extraid, ConnectionHandle)
{
	new Rows, Field;
	if(resultid != 0)
	{
		cache_get_data(Rows, Field);
	}
	switch(resultid)
	{
		case 4:
		{
			for( new i = 0; i < Rows; i++ )
			{
				new content[29];
				cache_get_field_content(i, "pID", content);			MarihuanaInfo[i][IDMaria] = strval(content);
				cache_get_field_content(i, "Creado", content);		MarihuanaInfo[i][Creado] = strval(content);
				cache_get_field_content(i, "paX", content);			MarihuanaInfo[i][pX] = strval(content);
				cache_get_field_content(i, "paY", content);			MarihuanaInfo[i][pY] = strval(content);
				cache_get_field_content(i, "paZ", content);			MarihuanaInfo[i][pZ] = strval(content);
				cache_get_field_content(i, "pSegundos", content);	MarihuanaInfo[i][Seg] = strval(content);
				cache_get_field_content(i, "pMinutos", content);	MarihuanaInfo[i][Min] = strval(content);
				cache_get_field_content(i, "pHoras", content);		MarihuanaInfo[i][Hor] = strval(content);
				cache_get_field_content(i, "pEstado", content);		MarihuanaInfo[i][Estado] = strval(content);
				cache_get_field_content(i, "Plantador", content);	strmid(MarihuanaInfo[i][Plantador], content, 0, strlen(content), 70);
				if(MarihuanaInfo[i][Creado] == 1)
				{
					CargarMarihuana(i);
				}
			}
		}
	}
	return 1;
}

public CargarMarihuana(i)
{
	new str[300];
	if(MarihuanaInfo[i][Estado] == 1)
	{
		MarihuanaInfo[i][ObjetoID] = CreateDynamicObject(19473, MarihuanaInfo[i][pX], MarihuanaInfo[i][pY], MarihuanaInfo[i][pZ]-2.3, 0.000000, 0.000000, -0.000000);
		format(str, sizeof(str), "{91ed00}Semillas de Marihuana{FFFFFF}\nSembradas por {4C94F6}%s{FFFFFF}\nSe secan en %dm %ds\n{DBED16}/regar{FFFFFF}", MarihuanaInfo[i][Plantador], MarihuanaInfo[i][Min], MarihuanaInfo[i][Seg]);
		MarihuanaInfo[i][Label] = CreateDynamic3DTextLabel(str, COLOR_WHITE, MarihuanaInfo[i][pX], MarihuanaInfo[i][pY], MarihuanaInfo[i][pZ]+0.9, 8.0);
		GuardarPlanta(i);
	}
	else if(MarihuanaInfo[i][Estado] == 2)
	{
		if(MarihuanaInfo[i][Hor] <= 1)
		{
			MarihuanaInfo[i][ObjetoID] = CreateDynamicObject(19473, MarihuanaInfo[i][pX], MarihuanaInfo[i][pY], MarihuanaInfo[i][pZ]-2.04, 0.000000, 0.000000, -0.000000);
		}
		else if(MarihuanaInfo[i][Hor] == 2)
		{
			MarihuanaInfo[i][ObjetoID] = CreateDynamicObject(19473, MarihuanaInfo[i][pX], MarihuanaInfo[i][pY], MarihuanaInfo[i][pZ]-1.78, 0.000000, 0.000000, -0.000000);
		}
		else if(MarihuanaInfo[i][Hor] == 3)
		{
			MarihuanaInfo[i][ObjetoID] = CreateDynamicObject(19473, MarihuanaInfo[i][pX], MarihuanaInfo[i][pY], MarihuanaInfo[i][pZ]-1.52, 0.000000, 0.000000, -0.000000);
		}
		else if(MarihuanaInfo[i][Hor] == 4)
		{
			MarihuanaInfo[i][ObjetoID] = CreateDynamicObject(19473, MarihuanaInfo[i][pX], MarihuanaInfo[i][pY], MarihuanaInfo[i][pZ]-1.26, 0.000000, 0.000000, -0.000000);
		}
		else if(MarihuanaInfo[i][Hor] == 5)
		{
			MarihuanaInfo[i][ObjetoID] = CreateDynamicObject(19473, MarihuanaInfo[i][pX], MarihuanaInfo[i][pY], MarihuanaInfo[i][pZ]-1, 0.000000, 0.000000, -0.000000);
		}
		format(str, sizeof(str), "{00cc00}Planta de Marihuana{FFFFFF}\nSembrada por {00ccff}%s{FFFFFF}\nMadura en %dh %dm %ds", MarihuanaInfo[i][Plantador], MarihuanaInfo[i][Hor], MarihuanaInfo[i][Min], MarihuanaInfo[i][Seg]);
		MarihuanaInfo[i][Label] = CreateDynamic3DTextLabel(str, COLOR_WHITE, MarihuanaInfo[i][pX], MarihuanaInfo[i][pY], MarihuanaInfo[i][pZ]+0.9, 8.0);
		GuardarPlanta(i);
	}
	else if(MarihuanaInfo[i][Estado] == 3)
	{
		MarihuanaInfo[i][ObjetoID] = CreateDynamicObject(19473, MarihuanaInfo[i][pX], MarihuanaInfo[i][pY], MarihuanaInfo[i][pZ]-1, 0.000000, 0.000000, -0.000000);
		format(str, sizeof(str), "{00cc00}Planta de Marihuana{FFFFFF}\nSembrada por {00ccff}%s{FFFFFF}\nSe seca en %dh %dm %ds\n{DBED16}/cosechar planta{FFFFFF}", MarihuanaInfo[i][Plantador], MarihuanaInfo[i][Hor], MarihuanaInfo[i][Min], MarihuanaInfo[i][Seg]);
		MarihuanaInfo[i][Label] = CreateDynamic3DTextLabel(str, COLOR_WHITE, MarihuanaInfo[i][pX], MarihuanaInfo[i][pY], MarihuanaInfo[i][pZ]+0.9, 8.0);
		GuardarPlanta(i);
	}
	return 1;
}

public LlenarBalde(playerid)
{
	// Balde 19468
	BaldeAgua[playerid] = 1;
	Objeto[playerid] = 9003;
	TogglePlayerControllable(playerid, 1);
	StopAudioStreamForPlayer(playerid);
	SendClientMessage(playerid, -1, "Has llenado tu balde de agua, escribe {DBED16}/regar{FFFFFF}.");
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
	SetPlayerAttachedObject(playerid, 2, 19468, 5, 0.126999,-0.089000,0.127998,101.199981,-164.499847,82.999900,1.032001,0.972000,1.002997);
	return 1;
}


GuardarPlanta(i)
{
	new Query[1500];
	format(Query, sizeof(Query), "UPDATE `plantas` SET paX='%f', paY='%f', paZ='%f', pSegundos='%d', pMinutos='%d', pHoras='%d', pEstado='%d', Plantador='%s', Creado='%d' WHERE `pID` = '%i';",
	MarihuanaInfo[i][pX],
	MarihuanaInfo[i][pY],
	MarihuanaInfo[i][pZ],
	MarihuanaInfo[i][Seg],
	MarihuanaInfo[i][Min],
	MarihuanaInfo[i][Hor],
	MarihuanaInfo[i][Estado],
	MarihuanaInfo[i][Plantador],
	MarihuanaInfo[i][Creado],
	MarihuanaInfo[i][IDMaria]);//i
	mysql_function_query(Conecction,Query, false, "", "");
	return 1;
}

public CrearPlanta(playerid, Float:X, Float:Y, Float:Z)
{
	new id;
	id = cache_insert_id();
	MarihuanaInfo[id][Creado] = 1;
	MarihuanaInfo[id][IDMaria] = id;
	MarihuanaInfo[id][pX] = X;
	MarihuanaInfo[id][pY] = Y;
	MarihuanaInfo[id][pZ] = Z;
	// Tiempo planta
	MarihuanaInfo[id][Hor] = 0;
	MarihuanaInfo[id][Min] = 4;
	MarihuanaInfo[id][Seg] = 59;
	MarihuanaInfo[id][Estado] = 1;
	format(MarihuanaInfo[id][Plantador], 24, PlayerName(playerid));
	GuardarPlanta(id);
	CargarMarihuana(id);
	return 1;
}

public CrearPlanta2(playerid)
{
	new Query[680], Float:X, Float:Y, Float:Z;
	TogglePlayerControllable(playerid, 1);
	ClearAnimations(playerid);
	GetPlayerPos(playerid, X, Y, Z);
	mysql_format(Conecction, Query, sizeof(Query),"INSERT INTO `plantas` (`paX`, `paY`, `paZ`) VALUES ('%f', '%f', '%f')", X, Y, Z);
	mysql_tquery(Conecction, Query,  "CrearPlanta", "dfff", playerid, X, Y, Z);
	AccionesRol(playerid,"remueve la tierra con un cuchillo y arroja algunas semillas.", 20);
	return 1;
}

public TimerVelocimetro()
{
    for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
		{
		    if(Manejando[i] == 1)
			{
			    if(PlayerInfo[i][pVelocimetro] == 1) return 1;
				new Float: fCurrentSpeed,
				szSpeed[80];
				fCurrentSpeed = player_get_speed(i);
				fVehSpeed[i] = fCurrentSpeed;
				if(!BICI(GetPlayerVehicleID(i)) && IsPlayerInAnyVehicle(i))
				{
				    new carid = GetPlayerVehicleID(i);
				    new modelo = GetVehicleModel(carid);
				    new vehiclefuel = CombustibleCoche(modelo);
				    new velocityveh = VelocidadMaxAuto(modelo);
					format(szSpeed, sizeof(szSpeed),"%d/%d",VehicleFuel[iVehicle[i]],vehiclefuel);
					PlayerTextDrawSetString(i,ContadorVelocimetro[i][1],szSpeed);
					if(fCurrentSpeed >= velocityveh && fCurrentSpeed <= velocityveh+2) fCurrentSpeed = velocityveh;
					format(szSpeed, sizeof(szSpeed),"%.0f", fCurrentSpeed);
					PlayerTextDrawSetString(i,ContadorVelocimetro[i][0], szSpeed);
					SetPlayerProgressBarValue(i,Progressbar[i][Velocimetro], ObtenerVelocidad(i));
					UpdatePlayerProgressBar(i,Progressbar[i][Velocimetro]);
				}
			}
		}
    }
    return true;
}

public TimerPlantas()
{
	new str[254], Query[254];
	for(new e; e < MAX_PLANTAS; e++)
	{
		if(MarihuanaInfo[e][Creado] == 1)
		{
		    // Restar un segundo
			MarihuanaInfo[e][Seg] -= 1;
			// /Sembrar
			if(MarihuanaInfo[e][Estado] == 1)
			{
				if(MarihuanaInfo[e][Seg] <= 0 && MarihuanaInfo[e][Min] <= 0)
				{
					DestroyDynamicObject(MarihuanaInfo[e][ObjetoID]);
					DestroyDynamic3DTextLabel(MarihuanaInfo[e][Label]);
					GuardarPlanta(e);
					format(Query, sizeof(Query), "DELETE FROM `plantas` WHERE `pID`='%i'", MarihuanaInfo[e][IDMaria]);//e
					mysql_function_query(Conecction, Query, true, "", "");
				}
				if(MarihuanaInfo[e][Seg] <= 0)
				{
					MarihuanaInfo[e][Min] -= 1;
					MarihuanaInfo[e][Seg] = 60;
				}
				format(str, sizeof(str), "{91ed00}Semillas de Marihuana{FFFFFF}\nSembradas por {4C94F6}%s{FFFFFF}\nSe secan en %dm %ds\n{DBED16}/regar{FFFFFF}", MarihuanaInfo[e][Plantador], MarihuanaInfo[e][Min], MarihuanaInfo[e][Seg]);
				UpdateDynamic3DTextLabelText(MarihuanaInfo[e][Label], COLOR_WHITE, str);
			}
			// /Regar
			else if(MarihuanaInfo[e][Estado] == 2)
			{
				if(MarihuanaInfo[e][Min] <= 0 && MarihuanaInfo[e][Hor] > 0)
				{
					MarihuanaInfo[e][Seg] = 60;
					MarihuanaInfo[e][Min] = 60;
					MarihuanaInfo[e][Hor] -= 1;
					DestroyDynamicObject(MarihuanaInfo[e][ObjetoID]);
					if(MarihuanaInfo[e][Hor] <= 1)
					{
						MarihuanaInfo[e][ObjetoID] = CreateDynamicObject(19473, MarihuanaInfo[e][pX], MarihuanaInfo[e][pY], MarihuanaInfo[e][pZ]-2.4, 0.000000, 0.000000, -0.000000);
					}
					else if(MarihuanaInfo[e][Hor] == 2)
					{
						MarihuanaInfo[e][ObjetoID] = CreateDynamicObject(19473, MarihuanaInfo[e][pX], MarihuanaInfo[e][pY], MarihuanaInfo[e][pZ]-1.78, 0.000000, 0.000000, -0.000000);
					}
					else if(MarihuanaInfo[e][Hor] == 3)
					{
						MarihuanaInfo[e][ObjetoID] = CreateDynamicObject(19473, MarihuanaInfo[e][pX], MarihuanaInfo[e][pY], MarihuanaInfo[e][pZ]-1.52, 0.000000, 0.000000, -0.000000);
					}
					else if(MarihuanaInfo[e][Hor] == 4)
					{
						MarihuanaInfo[e][ObjetoID] = CreateDynamicObject(19473, MarihuanaInfo[e][pX], MarihuanaInfo[e][pY], MarihuanaInfo[e][pZ]-1.26, 0.000000, 0.000000, -0.000000);
					}
					else if(MarihuanaInfo[e][Hor] == 5)
					{
						MarihuanaInfo[e][ObjetoID] = CreateDynamicObject(19473, MarihuanaInfo[e][pX], MarihuanaInfo[e][pY], MarihuanaInfo[e][pZ]-1, 0.000000, 0.000000, -0.000000);
					}
				}
				if(MarihuanaInfo[e][Seg] <= 0 && MarihuanaInfo[e][Min] > 0)
				{
					MarihuanaInfo[e][Min] -= 1;
					MarihuanaInfo[e][Seg] = 60;
				}
				format(str, sizeof(str), "{00cc00}Planta de Marihuana{FFFFFF}\nSembrada por {00ccff}%s{FFFFFF}\nMadura en %dh %dm %ds", MarihuanaInfo[e][Plantador], MarihuanaInfo[e][Hor], MarihuanaInfo[e][Min], MarihuanaInfo[e][Seg]);
				UpdateDynamic3DTextLabelText(MarihuanaInfo[e][Label], COLOR_WHITE, str);
				if(MarihuanaInfo[e][Seg] <= 0 && MarihuanaInfo[e][Min] <= 0 && MarihuanaInfo[e][Hor] <= 0)
				{
					MarihuanaInfo[e][Estado] = 3;
					// Tiempo planta
					MarihuanaInfo[e][Hor] = 0;
					MarihuanaInfo[e][Min] = 1;
					MarihuanaInfo[e][Seg] = 0;
					DestroyDynamicObject(MarihuanaInfo[e][ObjetoID]);
					MarihuanaInfo[e][ObjetoID] = CreateDynamicObject(19473, MarihuanaInfo[e][pX], MarihuanaInfo[e][pY], MarihuanaInfo[e][pZ]-1, 0.000000, 0.000000, -0.000000);
					format(str, sizeof(str), "{00cc00}Planta de Marihuana{FFFFFF}\nSembrada por {00ccff}%s{FFFFFF}\nSe seca en %dh %dm %ds\n{DBED16}/cosechar planta{FFFFFF}", MarihuanaInfo[e][Plantador], MarihuanaInfo[e][Hor], MarihuanaInfo[e][Min], MarihuanaInfo[e][Seg]);
					UpdateDynamic3DTextLabelText(MarihuanaInfo[e][Label], COLOR_WHITE, str);
				}
				return 1;
			}
			// Madura
			else if(MarihuanaInfo[e][Estado] == 3)
			{
				if(MarihuanaInfo[e][Seg] <= 0 && MarihuanaInfo[e][Min] > 0)
				{
					MarihuanaInfo[e][Min] -= 1;
					MarihuanaInfo[e][Seg] = 60;
				}
				if(MarihuanaInfo[e][Min] <= 0 && MarihuanaInfo[e][Hor] > 0)
				{
					MarihuanaInfo[e][Seg] = 60;
					MarihuanaInfo[e][Min] = 60;
					MarihuanaInfo[e][Hor] -= 1;
				}
				format(str, sizeof(str), "{00cc00}Planta de Marihuana{FFFFFF}\nSembrada por {00ccff}%s{FFFFFF}\nSe seca en %dh %dm %ds\n{DBED16}/cosechar planta{FFFFFF}", MarihuanaInfo[e][Plantador], MarihuanaInfo[e][Hor], MarihuanaInfo[e][Min], MarihuanaInfo[e][Seg]);
				UpdateDynamic3DTextLabelText(MarihuanaInfo[e][Label], COLOR_WHITE, str);
				if(MarihuanaInfo[e][Seg] <= 0 && MarihuanaInfo[e][Min] <= 0 && MarihuanaInfo[e][Hor] <= 0)
				{
					DestroyDynamicObject(MarihuanaInfo[e][ObjetoID]);
					DestroyDynamic3DTextLabel(MarihuanaInfo[e][Label]);
					MarihuanaInfo[e][Creado] = 0;
					GuardarPlanta(e);
					format(Query, sizeof(Query), "DELETE FROM `plantas` WHERE `pID`='%i'", MarihuanaInfo[e][IDMaria]);//e
					mysql_function_query(Conecction, Query, true, "", "");
				}
			}
		}
	}
	return 1;
}

public CustomProc(cmd[])
{
    new cmdText[32], cmdParams[128];
	sscanf(cmd, "s[32]s[128]", cmdText, cmdParams);
	if(!strcmp(cmdText, "gRankName", true))
	{
		new gID, gRankID[32], gNombre[32], gRankName[32];
		sscanf(cmdParams, "ds[32]s[32]s[32]", gID, gRankID, gNombre, gRankName);
		gID--;
		if(strcmp(gRankID,"0") == 0)
		{
		    new msgGuild[128];
			format(msgGuild, 128, "Banda: {00CCFF}%s{FFFFFF} cambió el nombre del rango {DBED16}%s{FFFFFF} a {DBED16}%s{FFFFFF}.", gNombre, BandasInfo[gID][BRango1], gRankName);
			gID++;
			SendRadioMessage(gID, COLOR_WHITE, msgGuild, INVALID_PLAYER_ID);
			format(BandasInfo[gID][BRango1], 32, "%s", gRankName);
			return 1;
		}
		if(strcmp(gRankID,"1") == 0)
		{
		    new msgGuild[128];
			format(msgGuild, 128, "Banda: {00CCFF}%s{FFFFFF} cambió el nombre del rango {DBED16}%s{FFFFFF} a {DBED16}%s{FFFFFF}.", gNombre, BandasInfo[gID][BRango2], gRankName);
			gID++;
			SendRadioMessage(gID, COLOR_WHITE, msgGuild, INVALID_PLAYER_ID);
			format(BandasInfo[gID][BRango2], 32, "%s", gRankName);
			return 1;
		}
		if(strcmp(gRankID,"2") == 0)
		{
 		    new msgGuild[128];
			format(msgGuild, 128, "Banda: {00CCFF}%s{FFFFFF} cambió el nombre del rango {DBED16}%s{FFFFFF} a {DBED16}%s{FFFFFF}.", gNombre, BandasInfo[gID][BRango3], gRankName);
			gID++;
			SendRadioMessage(gID, COLOR_WHITE, msgGuild, INVALID_PLAYER_ID);
			format(BandasInfo[gID][BRango3], 32, "%s", gRankName);
			return 1;
		}
		if(strcmp(gRankID,"3") == 0)
		{
		    new msgGuild[128];
			format(msgGuild, 128, "Banda: {00CCFF}%s{FFFFFF} cambió el nombre del rango {DBED16}%s{FFFFFF} a {DBED16}%s{FFFFFF}.", gNombre, BandasInfo[gID][BRango4], gRankName);
			gID++;
			SendRadioMessage(gID, COLOR_WHITE, msgGuild, INVALID_PLAYER_ID);
			format(BandasInfo[gID][BRango4], 32, "%s", gRankName);
			return 1;
		}
		if(strcmp(gRankID,"4") == 0)
		{
		    new msgGuild[128];
			format(msgGuild, 128, "Banda: {00CCFF}%s{FFFFFF} cambió el nombre del rango {DBED16}%s{FFFFFF} a {DBED16}%s{FFFFFF}.", gNombre, BandasInfo[gID][BRango5], gRankName);
			gID++;
			SendRadioMessage(gID, COLOR_WHITE, msgGuild, INVALID_PLAYER_ID);
			format(BandasInfo[gID][BRango5], 32, "%s", gRankName);
			return 1;
		}
		if(strcmp(gRankID,"5") == 0)
		{
		    new msgGuild[128];
			format(msgGuild, 128, "Banda: {00CCFF}%s{FFFFFF} cambió el nombre del rango {DBED16}%s{FFFFFF} a {DBED16}%s{FFFFFF}.", gNombre, BandasInfo[gID][BRango6], gRankName);
			gID++;
			SendRadioMessage(gID, COLOR_WHITE, msgGuild, INVALID_PLAYER_ID);
			format(BandasInfo[gID][BRango6], 32, "%s", gRankName);
			return 1;
		}
		if(strcmp(gRankID,"6") == 0)
		{
		    new msgGuild[128];
			format(msgGuild, 128, "Banda: {00CCFF}%s{FFFFFF} cambió el nombre del rango {DBED16}%s{FFFFFF} a {DBED16}%s{FFFFFF}.", gNombre, BandasInfo[gID][BRango7], gRankName);
			gID++;
			SendRadioMessage(gID, COLOR_WHITE, msgGuild, INVALID_PLAYER_ID);
			format(BandasInfo[gID][BRango7], 32, "%s", gRankName);
			return 1;
		}
		if(strcmp(gRankID,"7") == 0)
		{
		    new msgGuild[128];
			format(msgGuild, 128, "Banda: {00CCFF}%s{FFFFFF} cambió el nombre del rango {DBED16}%s{FFFFFF} a {DBED16}%s{FFFFFF}.", gNombre, BandasInfo[gID][BRango8], gRankName);
			gID++;
			SendRadioMessage(gID, COLOR_WHITE, msgGuild, INVALID_PLAYER_ID);
			format(BandasInfo[gID][BRango8], 32, "%s", gRankName);
			return 1;
		}
	}
	if(!strcmp(cmdText, "gMemberRank", true))
	{
	    new gID, gNewRank, gMemberName[32], gString[180], gChangerName[32], usedrank[32], gPlayerID, changerID;
		sscanf(cmdParams, "dds[32]s[32]", gID, gNewRank, gChangerName, gMemberName);
		sscanf(gChangerName, "r", changerID);
		sscanf(gMemberName, "r", gPlayerID);
		gID--;
		switch(gNewRank)
		{
		    case 1:
		    {
		        format(usedrank, 32, "%s", BandasInfo[gID][BRango1]);
		    }
            case 2:
		    {
		        format(usedrank, 32, "%s", BandasInfo[gID][BRango2]);
		    }
      		case 3:
		    {
		        format(usedrank, 32, "%s", BandasInfo[gID][BRango3]);
		    }
    		case 4:
		    {
		        format(usedrank, 32, "%s", BandasInfo[gID][BRango4]);
		    }
    		case 5:
		    {
		        format(usedrank, 32, "%s", BandasInfo[gID][BRango5]);
		    }
    		case 6:
		    {
          		format(usedrank, 32, "%s", BandasInfo[gID][BRango6]);
		    }
		    case 7:
		    {
          		format(usedrank, 32, "%s", BandasInfo[gID][BRango7]);
		    }
		    case 8:
		    {
          		format(usedrank, 32, "%s", BandasInfo[gID][BRango8]);
		    }
			default: return 1;
		}
		if(gNewRank != 6)
		{
			format(gString, 180, "Banda: {00CCFF}%s{FFFFFF} cambio el rango de {00CCFF}%s{FFFFFF} a {FFFF00}%s{FFFFFF}.", gChangerName, gMemberName, usedrank);
			gID++;
			foreach(Player, i)
			{
			    if(PlayerInfo[i][pFaccion] == gID)
			    {
			        SendClientMessage(i, COLOR_WHITE, gString);
			    }
			}
			if(IsPlayerConnected(gPlayerID) && JugadorLogeado[gPlayerID] == 1)
			{
			    PlayerInfo[gPlayerID][pRango] = gNewRank;
			}
			gID--;
		}
		else
		{
  			format(gString, 180, "Banda: {00CCFF}%s{FFFFFF} hizo a {00CCFF}%s{FFFFFF} Líder de la banda.", gChangerName, gMemberName);
			gID++;
			foreach(Player, i)
			{
			    if(PlayerInfo[i][pFaccion] == gID)
			    {
			        SendClientMessage(i, COLOR_WHITE, gString);
			    }
			}
			if(IsPlayerConnected(gPlayerID) && JugadorLogeado[gPlayerID] == 1)
			{
			    PlayerInfo[gPlayerID][pRango] = gNewRank;
			}
			if(IsPlayerConnected(changerID) && JugadorLogeado[changerID] == 1)
			{
			    PlayerInfo[changerID][pRango] = 5;
			}
			gID--;
		}
	}
	if(!strcmp(cmdText, "jugadorinvitacion", true))
	{
	    new gID, gPlayerName[24], gPlayerID;
		sscanf(cmdParams, "ds[24]", gID, gPlayerName);
		sscanf(gPlayerName, "r", gPlayerID);
		gID--;
		if(IsPlayerConnected(gPlayerID) && JugadorLogeado[gPlayerID] == 1)
		{
			new msgPlayer[128];
			PlayerInfo[gPlayerID][pFaccion] = gID + 1;
			PlayerInfo[gPlayerID][pRango] = 1;
			format(msgPlayer, 128, "¡Felicitaciones! Te uniste a la banda {DBED16}%s{FFFFFF}.", BandasInfo[gID][BNombre]);
			SendClientMessage(gPlayerID, COLOR_WHITE, msgPlayer);
			format(msgPlayer, 128, "El jugador {00CCFF}%s{FFFFFF} se unió a la banda.", gPlayerName);
			gID++;
			SendRadioMessage(gID, COLOR_WHITE, msgPlayer, gPlayerID);
			gID--;
			return 1;
		}
		else
		{
			new msgGuild[128];
			format(msgGuild, 128, "El jugador {00CCFF}%s{FFFFFF} se unió a la banda.", gPlayerName);
			gID++;
			SendRadioMessage(gID, COLOR_WHITE, msgGuild, INVALID_PLAYER_ID);
			return 1;
		}
	}
	if(!strcmp(cmdText, "abandonarbanda", true))
	{
	    new gID, gPlayerName[24], gPlayerID;
	    sscanf(cmdParams, "ds[24]", gID, gPlayerName);
		sscanf(gPlayerName, "r", gPlayerID);
		gID--;
  		if(IsPlayerConnected(gPlayerID) && JugadorLogeado[gPlayerID] == 1)
		{
			new msgPlayer[128];
			PlayerInfo[gPlayerID][pFaccion] = 0;
			PlayerInfo[gPlayerID][pRango] = 0;
			format(msgPlayer, 128, "Has abandonado la banda {00CCFF}%s", BandasInfo[gID][BNombre]);
			SendClientMessage(gPlayerID, COLOR_WHITE, msgPlayer);
			format(msgPlayer, 128, "El jugador {00CCFF}%s{FFFFFF} abandonó la banda.", gPlayerName);
			gID++;
			SendRadioMessage(gID, COLOR_WHITE, msgPlayer, gPlayerID);
			gID--;
			return 1;
		}
		else
		{
			new msgGuild[128];
			format(msgGuild, 128, "El jugador {00CCFF}%s{FFFFFF} abandonó la banda.", gPlayerName);
			gID++;
			SendRadioMessage(gID, COLOR_WHITE, msgGuild, INVALID_PLAYER_ID);
			return 1;
		}
	}
	if(!strcmp(cmdText, "expulsarmiembro", true))
	{
	    new gID, gExpulsadorNombre[24], gExpulsadorID, gExpulsadoNombre[24], gExpulsadoID;
	    sscanf(cmdParams, "ds[22]s[22]", gID, gExpulsadorNombre, gExpulsadoNombre);
		sscanf(gExpulsadorNombre, "r", gExpulsadorID);
		sscanf(gExpulsadoNombre, "r", gExpulsadoID);
		gID--;
  		if(IsPlayerConnected(gExpulsadoID) && JugadorLogeado[gExpulsadoID] == 1)
		{
			new msgPlayer[128];
			if(PlayerInfo[gExpulsadoID][pFaccion] == 1)
			{
				SetPlayerSkin(gExpulsadoID, PlayerInfo[gExpulsadoID][jRopa]);
				ClearAnimations(gExpulsadoID);
			}
			PlayerInfo[gExpulsadoID][pFaccion] = 0;
			PlayerInfo[gExpulsadoID][pRango] = 0;
			PlayerInfo[gExpulsadoID][pDuty] = 0;
			format(msgPlayer, 128, "Fuiste expulsado de la banda {00CCFF}%s.", BandasInfo[gID][BNombre]);
			SendClientMessage(gExpulsadoID, COLOR_WHITE, msgPlayer);
			format(msgPlayer, 128, "Banda: {00CCFF}%s{FFFFFF} expulsó a {DBED16}%s{FFFFFF} de la banda.", gExpulsadorNombre, gExpulsadoNombre);
			gID++;
			SendRadioMessage(gID, COLOR_WHITE, msgPlayer, gExpulsadoID);
			gID--;
			return 1;
		}
		else
		{
			new msgGuild[128];
			format(msgGuild, 128, "Banda: {00CCFF}%s{FFFFFF} expulsó a {DBED16}%s{FFFFFF} de la banda.", gExpulsadorNombre, gExpulsadoNombre);
			gID++;
			SendRadioMessage(gID, COLOR_WHITE, msgGuild, INVALID_PLAYER_ID);
			return 1;
		}
	}
	if(!strcmp(cmdText, "recargarbandas", true))
	{
	    CargarFacciones();
	    return 1;
	}
	if(!strcmp(cmdText, "mutepanelx", true))
	{
  		new Razon[22],gExpulsadorNombre[24], gExpulsadorID, gExpulsadoNombre[24], gExpulsadoID, minutossan;
  		sscanf(cmdParams, "s[22]s[22]s[22]d",gExpulsadorNombre, gExpulsadoNombre, Razon,minutossan);
		sscanf(gExpulsadorNombre, "r", gExpulsadorID);
		sscanf(gExpulsadoNombre, "r", gExpulsadoID);
		if(IsPlayerConnected(gExpulsadoID) && JugadorLogeado[gExpulsadoID] == 1)
		{
		    if(IsPlayerNPC(gExpulsadoID)) return 1;
		    RecienDuda[gExpulsadoID] = 0;
			new calculo = minutossan*60*1;
			TiempoDuda[gExpulsadoID] = minutossan*60;
			SetTimerEx("DudaOn",calculo,0,"d",gExpulsadoID);
			new string[160], string2[128];
			format(string, sizeof(string), "A %s no se le permite hablar en el chat de ayuda. Razón: %s",PlayerName(gExpulsadoID), Razon);
			SendClientMessageToAll(0xAA3333FF,string);
			QuitarDinero(gExpulsadoID,minutossan*100);
            format(string2,128,"No se te permite hablar en el chat de ayuda. Por %d minuto(s)",minutossan);
			SendClientMessage(gExpulsadoID,0xDEA600FF,string2);
        	format(string2,128,"Se te descontó $%d por el muteo.",minutossan*100);
			SendClientMessage(gExpulsadoID,0xDEA600FF,string2);
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(PlayerInfo[i][pAdmin] > ADMIN_LEVEL_DUDAS)
				{
					format(string, 128, "Tiempo de muteo: %d minutos, Administrador: %s",minutossan,gExpulsadorNombre);
					SendClientMessage(i,COLOR_GREY,string);
				}
			}
		}
  		return 1;
	}
	if(!strcmp(cmdText, "mutepanely", true))
	{
  		new Razon[22],gExpulsadorNombre[24], gExpulsadorID, gExpulsadoNombre[24], gExpulsadoID, minutossan;
  		sscanf(cmdParams, "s[22]s[22]s[22]d",gExpulsadorNombre, gExpulsadoNombre, Razon,minutossan);
		sscanf(gExpulsadorNombre, "r", gExpulsadorID);
		sscanf(gExpulsadoNombre, "r", gExpulsadoID);
		if(IsPlayerConnected(gExpulsadoID) && JugadorLogeado[gExpulsadoID] == 1)
		{
		    if(IsPlayerNPC(gExpulsadoID)) return 1;
		    RecienDuda[gExpulsadoID] = 0;
			new calculo = minutossan*60*1;
			TiempoDuda[gExpulsadoID] = minutossan*60;
			SetTimerEx("DudaOn",calculo,0,"d",gExpulsadoID);
			new string[128], string2[160];
			format(string, sizeof(string), "A %s no se le permite hablar en el chat de ayuda. Razón: %s",PlayerName(gExpulsadoID), Razon);
			SendClientMessage(gExpulsadoID,0xAA3333FF,string);
			QuitarDinero(gExpulsadoID,minutossan*100);
            format(string2,128,"No se te permite hablar en el chat de ayuda. Por %d minuto(s)",minutossan);
			SendClientMessage(gExpulsadoID,0xDEA600FF,string2);
        	format(string2,128,"Se te descontó $%d por el muteo.",minutossan*100);
			SendClientMessage(gExpulsadoID,0xDEA600FF,string2);
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(PlayerInfo[i][pAdmin] > ADMIN_LEVEL_DUDAS)
				{
					format(string, 128, "Tiempo de muteo: %d minutos, Administrador: %s",minutossan,gExpulsadorNombre);
					SendClientMessage(i,COLOR_GREY,string);
				}
			}
		}
  		return 1;
	}
	if(!strcmp(cmdText, "mutepanelz", true))
	{
  		new Razon[22],gExpulsadorNombre[24], gExpulsadorID, gExpulsadoNombre[24], gExpulsadoID, minutossan;
  		sscanf(cmdParams, "s[22]s[22]s[22]d",gExpulsadorNombre, gExpulsadoNombre, Razon,minutossan);
		sscanf(gExpulsadorNombre, "r", gExpulsadorID);
		sscanf(gExpulsadoNombre, "r", gExpulsadoID);
		if(IsPlayerConnected(gExpulsadoID) && JugadorLogeado[gExpulsadoID] == 1)
		{
		    if(IsPlayerNPC(gExpulsadoID)) return 1;
		    LimpiarLog(150);
		    RecienDuda[gExpulsadoID] = 0;
			new calculo = minutossan*60*1;
			TiempoDuda[gExpulsadoID] = minutossan*60;
			SetTimerEx("DudaOn",calculo,0,"d",gExpulsadoID);
			new string[160], string2[118];
			format(string, sizeof(string), "A %s no se le permite hablar en el chat de ayuda. Razón: %s",PlayerName(gExpulsadoID), Razon);
			SendClientMessageToAll(0xAA3333FF,string);
			QuitarDinero(gExpulsadoID,minutossan*100);
            format(string2,128,"No se te permite hablar en el chat de ayuda. Por %d minuto(s)",minutossan);
			SendClientMessage(gExpulsadoID,0xDEA600FF,string2);
        	format(string2,128,"Se te descontó $%d por el muteo.",minutossan*100);
			SendClientMessage(gExpulsadoID,0xDEA600FF,string2);
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(PlayerInfo[i][pAdmin] > ADMIN_LEVEL_DUDAS)
				{
					format(string, 128, "Tiempo de muteo: %d minutos, Administrador: %s",minutossan,gExpulsadorNombre);
					SendClientMessage(i,COLOR_GREY,string);
				}
			}
		}
  		return 1;
	}
	if(!strcmp(cmdText, "banpanel", true))
	{
  		new Razon[22],gExpulsadorNombre[24], gExpulsadorID, gExpulsadoNombre[24], gExpulsadoID, stringbaneo[256];
  		sscanf(cmdParams, "s[22]s[22]s[22]",gExpulsadorNombre, gExpulsadoNombre, Razon);
		sscanf(gExpulsadorNombre, "r", gExpulsadorID);
		sscanf(gExpulsadoNombre, "r", gExpulsadoID);
		if(IsPlayerConnected(gExpulsadoID) && JugadorLogeado[gExpulsadoID] == 1)
		{
		    if(IsPlayerNPC(gExpulsadoID)) return 1;
			format(stringbaneo, sizeof(stringbaneo), "El jugador {FF3300}%s(ID: %d){FFFFFF} fue baneado por un admin. Razón: {FF3300}%s{FFFFFF}.",gExpulsadoNombre,gExpulsadoID,Razon);
			SendClientMessage(gExpulsadoID,-1, stringbaneo);
			MensajeAdmin(0xA9C4E4, stringbaneo, ADMIN_LEVEL_BANEOS);
 			PlayerInfo[gExpulsadoID][pAdmin] = ADMIN_LEVEL_USER;
			ForumPermissions(gExpulsadoID);
			SetTimerEx("KickXD",500,0,"d",gExpulsadoID);
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(PlayerInfo[i][pAdmin] > ADMIN_LEVEL_DUDAS)
				{
					format(stringbaneo, 256, "Administrador: %s ",gExpulsadorNombre);
					SendClientMessage(i,COLOR_GREY,stringbaneo);
				}
			}
		}
  		return 1;
	}
	if(!strcmp(cmdText, "darmoneda", true))
	{
  		new Razon[22],gExpulsadorNombre[24], gExpulsadorID, gExpulsadoNombre[24], gExpulsadoID, stringbaneo[128];
  		sscanf(cmdParams, "s[22]s[22]s[22]",gExpulsadorNombre, gExpulsadoNombre, Razon);
		sscanf(gExpulsadorNombre, "r", gExpulsadorID);
		sscanf(gExpulsadoNombre, "r", gExpulsadoID);
		if(IsPlayerConnected(gExpulsadoID) && JugadorLogeado[gExpulsadoID] == 1)
		{
		    if(IsPlayerNPC(gExpulsadoID)) return 1;
			format(stringbaneo,sizeof(stringbaneo),"Acabas de comprar {00ccff}%d "SERVER_COIN"",gExpulsadorNombre);
			SendClientMessage(gExpulsadoID,0x00cc00ff,stringbaneo);
			//PlayerInfo[gExpulsadoID][Moneda] += gExpulsadorNombre;
			new message[120];
	 		format(message, 120, "El jugador %s compró %d "SERVER_COIN". (vía panel administrativo)", PlayerName(gExpulsadoID), gExpulsadorNombre);
            MensajeAdmin(0xA9C4E4, message, ADMIN_LEVEL_BANEOS);
		}
		return 1;
    }
	return 1;
}

EnAcademia(playerid)
{
 	if(GetPlayerInterior(playerid) == 55 && GetPlayerInterior(playerid) == 55) return 1;
	return false;
}

EnSalonEvento(playerid)
{
 	if(IsPlayerInArea(playerid, -1244.693847, 2027.578979, -1139.976074, 2129.051025) && GetPlayerInterior(playerid) == 13) return 1;
	return false;
}

EnSalonEvento2(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid,500,-1191.9619,2035.5724,1248.3600)) return true;
    return false;
}

IsPlayerInArea(playerid, Float:minx, Float:maxx, Float:miny, Float:maxy)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	if (x > minx && x < maxx && y > miny && y < maxy) return 1;
	return 0;
}



public OnVehicleStreamIn(vehicleid, forplayerid)
{
	SetVehicleParamsForPlayer(vehicleid, forplayerid, iVehicleObjective[vehicleid][0], iVehicleObjective[vehicleid][1]);
}


public SalonTimer()
{
	new namej[MAX_PLAYER_NAME], string[147], id = -1, rand;
	for(new i,j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			GetPlayerName(i,namej,sizeof(namej));
			if(strcmp(Alquilador,namej,true) == 0)
			{
				id = i;
			}
		}
	}
	for(new i,j = GetPlayerPoolSize(); i <= j; i++)
	{

		if(Boleto[i] == true) Boleto[i] = false;
		if(EnSalonEvento(i) ||EnSalonEvento2(i))
		{
		    if(Alquilado == true)
		    {
				SendClientMessage(i,-1,"El evento acaba de terminar, por favor abandona el salón principal.");
				if(Humo1Ojb == 1)
				{
				   	DestroyDynamicObject(ObjHumo1[0]);
				   	DestroyDynamicObject(ObjHumo1[1]);
					Humo1Ojb = 0;
				}
				if(Humo2Ojb == 1)
				{
				   	DestroyDynamicObject(ObjHumo2[0]);
				   	DestroyDynamicObject(ObjHumo2[1]);
					Humo2Ojb = 0;
    			}
			}
		}
		if(TipoEvento == 2)
		{
			if(BoxObj == 1)
			{
				for(new a = 0; a<33; a++)
				{
					if(IsValidDynamicObject(ObjBox[a]))
					{
						DestroyDynamicObject(ObjBox[a]);
					}
				}
				BoxObj = 0;
			}
		}
		if(TipoEvento == 3)
		{
			if(ExpObj == 1)
			{
				for(new b = 0; b<19; b++)
				{
					if(IsValidDynamicObject(ObjExp[b]))
					{
						DestroyDynamicObject(ObjExp[b]);
					}
				}
				ExpObj = 0;
			}
			SendClientMessage(i,-1,"Si llevaste un vehiculo a la exposición, este fue remolcado al estacionamiento que se encuentra al costado del salón de eventos.");
            if(GetPlayerState(i) == 2)
			{
   				SetVehiclePassengersInteriorEx(GetPlayerVehicleID(i), 27);
				SetVehiclePassengersVWEx(GetPlayerVehicleID(i), 1);
				rand = random(sizeof(EstacionamientoSpawn));
				SetVehiclePos(GetPlayerVehicleID(i), EstacionamientoSpawn[rand][0], EstacionamientoSpawn[rand][1], EstacionamientoSpawn[rand][2]);
				SetVehicleZAngle(GetPlayerVehicleID(i), EstacionamientoSpawn[rand][3]);
			}
			for(new k=0;k<MAX_VEHICLES;k++)
			{
				new inte = GetVehicleInterior(k), vw = GetVehicleVirtualWorld(k);
				if(inte == 13 && vw == 1)
				{
                    SetVehiclePassengersInteriorEx(k, 27);
					SetVehiclePassengersVWEx(k, 1);
					rand = random(sizeof(EstacionamientoSpawn));
					SetVehiclePos(k, EstacionamientoSpawn[rand][0], EstacionamientoSpawn[rand][1], EstacionamientoSpawn[rand][2]);
					SetVehicleZAngle(k, EstacionamientoSpawn[rand][3]);
				}
			}
		}
		if(TipoEvento == 4)
		{
			if(ConObj == 1)
			{
				for(new c = 0; c<4; c++)
				{
					if(IsValidDynamicObject(ObjCon[c]))
					{
						DestroyDynamicObject(ObjCon[c]);
					}
				}
				ConObj = 0;
			}
		}
	}
	if(id != -1)
	{
		format(string,sizeof(string),"Ganaste {00CC00}$%d{FFFFFF} por las entradas vendidas. El dinero ya se encuentra en tu cuenta bancaria.",Personas*PrecioSalon);
		SendClientMessage(id,-1,string);
		PlayerInfo[id][pBanco] += Personas*PrecioSalon;
	}
	format(Alquilador,sizeof(Alquilador),"Nadie");
	Alquilado = false;
	HorasSalon = 0;
	Personas = 0;
	PrecioSalon = 0;
	NivelSalon = 0;
	format(NombreEvento,sizeof(NombreEvento),"Sin Nombre");
	format(DescriEvento,sizeof(DescriEvento),"Sin Descripción");
	TipoEvento = 0;
	TextoSalon = Create3DTextLabel("{FFFFFF}Puedes {F6F61D}/alquilar salon{FFFFFF} de eventos.\nCosto por hora: {00D61C}$20.000", 0xFFFFFF00, -1250.3397,2093.7437,1246.6360, 5, 1, 0);
	Delete3DTextLabel(TextoSalon2);
}

CerrarEmisora(cabinaid)
{
	if(cabinaid == 1)
	{
		CabinasOcupadasEmisoras[1][0] = 0;
		CabinasOcupadasEmisoras[1][0] = 0;
		CabinasOcupadasEmisoras[1][0] = 0;
		CabinasOcupadasEmisoras[1][1] = -1;
		CabinasOcupadasEmisoras[1][2] = 0;
		UpdateDynamic3DTextLabelText(CabinasTextos[1], 0xFFFFFFFF, "{FFFFFF}Radio disponible {C0C0C0}[N1]");
        for(new id = 0; id < MAX_PLAYERS; id++)
		{
			if(Emisoras[id][CabinaOcupada] == 1 && Emisoras[id][TransEmisora] == 1)
			{
				Emisoras[id][TransEmisora] = 0;
				Emisoras[id][CabinaOcupada] = 0;
			}
			if(TieneMicrofono[id] == 1)
			{
			    RemovePlayerAttachedObject(id, 2);
				TieneMicrofono[id] = 0;
			}
			if(IsPlayerInDynamicArea(id, AreaCabinas[1]))
			{
				SendClientMessage(id, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
				StopAudioStreamForPlayer(id);
			}
			if(IsPlayerInAnyVehicle(id) && EmisoraEscuchando[GetPlayerVehicleID(id)] == 1)
			{
				SendClientMessage(id, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
				StopAudioStreamForPlayer(id);
			}
		}
	}
	if(cabinaid == 2)
	{
		CabinasOcupadasEmisoras[2][0] = 0;
		CabinasOcupadasEmisoras[2][1] = -1;
		CabinasOcupadasEmisoras[2][2] = 0;
		UpdateDynamic3DTextLabelText(CabinasTextos[2], 0xFFFFFFFF, "{FFFFFF}Radio disponible {C0C0C0}[N2]");
        for(new id = 0; id < MAX_PLAYERS; id++)
		{
			if(Emisoras[id][CabinaOcupada] == 2 && Emisoras[id][TransEmisora] == 1)
			{
				Emisoras[id][TransEmisora] = 0;
				Emisoras[id][CabinaOcupada] = 0;
			}
			if(TieneMicrofono[id] == 2)
			{
			    RemovePlayerAttachedObject(id, 2);
				TieneMicrofono[id] = 0;
			}
			if(IsPlayerInDynamicArea(id, AreaCabinas[2]))
			{
				SendClientMessage(id, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
				StopAudioStreamForPlayer(id);
			}
			if(IsPlayerInAnyVehicle(id) && EmisoraEscuchando[GetPlayerVehicleID(id)] == 2)
			{
				SendClientMessage(id, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
				StopAudioStreamForPlayer(id);
			}
		}
	}
	if(cabinaid == 3)
	{
		CabinasOcupadasEmisoras[3][0] = 0;
		CabinasOcupadasEmisoras[3][1] = -1;
		CabinasOcupadasEmisoras[3][2] = 0;
		UpdateDynamic3DTextLabelText(CabinasTextos[3], 0xFFFFFFFF, "{FFFFFF}Radio disponible {C0C0C0}[N3]");
        for(new id = 0; id < MAX_PLAYERS; id++)
		{
			if(Emisoras[id][CabinaOcupada] == 3 && Emisoras[id][TransEmisora] == 1)
			{
				Emisoras[id][TransEmisora] = 0;
				Emisoras[id][CabinaOcupada] = 0;
			}
			if(TieneMicrofono[id] == 3)
			{
			    RemovePlayerAttachedObject(id, 2);
				TieneMicrofono[id] = 0;
			}
			if(IsPlayerInDynamicArea(id, AreaCabinas[3]))
			{
				SendClientMessage(id, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
				StopAudioStreamForPlayer(id);
			}
			if(IsPlayerInAnyVehicle(id) && EmisoraEscuchando[GetPlayerVehicleID(id)] == 3)
			{
				SendClientMessage(id, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
				StopAudioStreamForPlayer(id);
			}
		}
	}
	if(cabinaid == 4)
	{
		CabinasOcupadasEmisoras[4][0] = 0;
		CabinasOcupadasEmisoras[4][1] = -1;
		CabinasOcupadasEmisoras[4][2] = 0;
		UpdateDynamic3DTextLabelText(CabinasTextos[4], 0xFFFFFFFF, "{FFFFFF}Radio disponible {C0C0C0}[N4]");
        for(new id = 0; id < MAX_PLAYERS; id++)
		{
			if(Emisoras[id][CabinaOcupada] == 4 && Emisoras[id][TransEmisora] == 1)
			{
				Emisoras[id][TransEmisora] = 0;
				Emisoras[id][CabinaOcupada] = 0;
			}
			if(TieneMicrofono[id] == 4)
			{
			    RemovePlayerAttachedObject(id, 2);
				TieneMicrofono[id] = 0;
			}
			if(IsPlayerInDynamicArea(id, AreaCabinas[4]))
			{
				SendClientMessage(id, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
				StopAudioStreamForPlayer(id);
			}
			if(IsPlayerInAnyVehicle(id) && EmisoraEscuchando[GetPlayerVehicleID(id)] == 4)
			{
				SendClientMessage(id, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
				StopAudioStreamForPlayer(id);
			}
		}
	}
	return 1;
}

NombreTrabajo(trabajo)
{
	new jobstr[64];
	if(trabajo == 0) 						jobstr = "Ninguno";
	else if(trabajo == T_Medico) 			jobstr = "Médico";
	else if(trabajo == T_Taxista)			jobstr = "Taxista";
	else if(trabajo == T_Guardaespaldas)	jobstr = "Guardaespaldas";
	else if(trabajo == T_Camionero) 		jobstr = "Camionero";
	else if(trabajo == T_Basurero) 			jobstr = "Basurero";
	else if(trabajo == T_Armero) 			jobstr = "Fabricante de armas";
	else if(trabajo == T_Mecanico) 			jobstr = "Mecánico";
	else if(trabajo == T_Transportista) 	jobstr = "Transportista";
	else if(trabajo == T_Minero) 			jobstr = "Minero";
	else if(trabajo == T_Pescador) 			jobstr = "Pescador";
	else if(trabajo == T_Criminal) 			jobstr = "Criminal";
	else if(trabajo == T_Prostituta) 		jobstr = "Prostitucion";
	return jobstr;
}

CMD:call(playerid, params[])			{	return cmd_llamar(playerid, params);				}
CMD:agonize(playerid, params[])			{	return cmd_agonizar(playerid, params);				}
CMD:kiss(playerid, params[])			{	return cmd_beso(playerid, params);					}
CMD:drink(playerid, params[])			{	return cmd_beber(playerid, params);					}
CMD:roll(playerid, params[])			{	return cmd_rodar(playerid, params);					}
CMD:serve(playerid, params[])			{	return cmd_servir(playerid, params);				}
CMD:scared(playerid, params[])			{	return cmd_asustado(playerid, params);				}
CMD:sore(playerid, params[])			{	return cmd_adolorido(playerid, params);				}
CMD:encourage(playerid, params[])		{	return cmd_alentar(playerid, params);				}
CMD:tired(playerid, params[])			{	return cmd_cansado(playerid, params);				}
CMD:comfortable(playerid, params[])		{	return cmd_comodo(playerid, params);				}
CMD:injured(playerid, params[])			{	return cmd_herido(playerid);						}
CMD:greeting(playerid, params[])		{	return cmd_saludo(playerid, params);				}
CMD:greeting1(playerid, params[])		{	return cmd_saludo1(playerid, params);				}
CMD:greeting2(playerid, params[])		{	return cmd_saludo2(playerid, params);				}
CMD:greeting3(playerid, params[])		{	return cmd_saludo3(playerid, params);				}
CMD:greeting4(playerid, params[])		{	return cmd_saludo4(playerid, params);				}
CMD:smoke(playerid, params[])			{	return cmd_fumar(playerid, params);					}
CMD:fall(playerid, params[])			{	return cmd_caerse(playerid, params);				}
CMD:decline(playerid, params[])			{	return cmd_negarse(playerid);						}
CMD:enough(playerid, params[])			{	return cmd_basta(playerid);							}
CMD:actions(playerid, params[])			{	return cmd_acciones(playerid);						}
CMD:actions2(playerid, params[])		{	return cmd_acciones2(playerid);						}
CMD:who(playerid, params[])				{	return cmd_quien(playerid, params);					}
CMD:steal(playerid, params[])			{	return cmd_robar(playerid, params);					}
CMD:check(playerid, params[])			{	return cmd_revisar(playerid, params);				}
CMD:repair(playerid, params[])			{	return cmd_reparar(playerid, params);				}
CMD:medic(playerid, params[])			{	return cmd_medico(playerid, params);				}
CMD:harvest(playerid, params[])			{	return cmd_cosechar(playerid, params);				}
CMD:channel(playerid, params[])			{	return cmd_canal(playerid, params);					}
CMD:show(playerid, params[])			{	return cmd_mostrar(playerid, params);				}
CMD:rules(playerid, params[])			{	return cmd_reglas(playerid, params);				}
CMD:report(playerid, params[])			{	return cmd_reportar(playerid, params);				}
CMD:help(playerid, params[])			{	return cmd_ayuda(playerid, params);					}
CMD:garage(playerid, params[])			{	return cmd_garaje(playerid, params);				}
CMD:remove(playerid, params[])			{	return cmd_retirar(playerid, params);				}
CMD:give(playerid, params[])			{	return cmd_dar(playerid, params);					}
CMD:operations(playerid, params[])		{	return cmd_operaciones(playerid, params);			}
CMD:leave(playerid, params[])			{	return cmd_dejar(playerid, params);					}
CMD:load(playerid, params[])			{	return cmd_cargar(playerid, params);				}
CMD:sell(playerid, params[])			{	return cmd_vender(playerid, params);				}
CMD:number(playerid, params[])			{	return cmd_numero(playerid, params);				}
CMD:reanimate(playerid, params[])		{	return cmd_reanimar(playerid, params);				}
CMD:up(playerid, params[])				{	return cmd_subir(playerid, params);					}
CMD:park(playerid, params[])			{	return cmd_estacionar(playerid, params);			}
CMD:hide(playerid, params[])			{	return cmd_ocultar(playerid, params);				}
CMD:handcuff(playerid, params[])		{	return cmd_esposar(playerid, params);				}
CMD:resist(playerid, params[])			{	return cmd_resistirse(playerid, params);			}
CMD:break(playerid, params[])			{	return cmd_liberar(playerid, params);				}
CMD:arrest(playerid, params[])			{	return cmd_arrestar(playerid, params);				}
CMD:job(playerid, params[])				{	return cmd_trabajo(playerid, params);				}
CMD:uniform(playerid, params[])			{	return cmd_uniforme(playerid, params);				}
CMD:accept(playerid, params[])			{	return cmd_aceptar(playerid, params);				}
CMD:use(playerid, params[])				{	return cmd_usar(playerid, params);					}
CMD:cancel(playerid, params[])			{	return cmd_cancelar(playerid, params);				}
CMD:partner(playerid, params[])			{	return cmd_socio(playerid, params);					}
CMD:service(playerid, params[])			{	return cmd_servicio(playerid, params);				}
CMD:reply(playerid, params[])			{	return cmd_responder(playerid, params);				}
CMD:alarm(playerid, params[])			{	return cmd_alarma(playerid, params);				}
CMD:try(playerid, params[])				{	return cmd_intentar(playerid, params);				}
CMD:rent(playerid, params[])			{	return cmd_alquilar(playerid, params);				}
CMD:search(playerid, params[])			{	return cmd_buscar(playerid, params);				}
CMD:trunk(playerid, params[])			{	return cmd_baul(playerid, params);					}
CMD:dance1(playerid, params[])			{	return cmd_danzar1(playerid, params);				}
CMD:dance2(playerid, params[])			{	return cmd_danzar2(playerid, params);				}
CMD:dance3(playerid, params[])			{	return cmd_danzar3(playerid, params);				}
CMD:dance4(playerid, params[])			{	return cmd_danzar4(playerid, params);				}
CMD:dance5(playerid, params[])			{	return cmd_danzar5(playerid, params);				}
CMD:dance6(playerid, params[])			{	return cmd_danzar6(playerid, params);				}
CMD:dance7(playerid, params[])			{	return cmd_danzar7(playerid, params);				}
CMD:dance8(playerid, params[])			{	return cmd_danzar8(playerid, params);				}
CMD:dance9(playerid, params[])			{	return cmd_danzar9(playerid, params);				}
CMD:dance10(playerid, params[])			{	return cmd_danzar10(playerid, params);				}
CMD:dance11(playerid, params[])			{	return cmd_danzar11(playerid, params);				}
CMD:dance12(playerid, params[])			{	return cmd_danzar12(playerid, params);				}
CMD:listeners(playerid, params[])		{	return cmd_oyentes(playerid);						}
CMD:gift(playerid, params[])			{	return cmd_regalo(playerid, params);				}
CMD:refrigerator(playerid, params[])	{	return cmd_heladera(playerid, params);				}
CMD:register(playerid, params[])		{	return cmd_inscribirse(playerid, params);			}
CMD:surrender(playerid, params[])		{	return cmd_rendirse(playerid, params);				}
CMD:throw(playerid, params[])			{	return cmd_tirar(playerid, params);					}
CMD:dance(playerid, params[])			{	return cmd_danzar(playerid, params);				}
CMD:drunk(playerid, params[])			{	return cmd_borracho(playerid, params);				}
CMD:laugh(playerid, params[])			{	return cmd_reirse(playerid, params);				}
CMD:maletero(playerid, params[])		{	return cmd_baul(playerid, params);					}
CMD:reports(playerid, params[])			{	return cmd_reportes(playerid, params);				}
CMD:e(playerid, params[])				{	return cmd_esposar(playerid, params);				}
CMD:a(playerid, params[])				{	return cmd_atender(playerid, params);				}
CMD:estadisticas(playerid, params[])	{	return cmd_est(playerid, params);					}
CMD:c(playerid, params[])				{	return cmd_cargos(playerid, params);				}
CMD:config(playerid, params[])			{	return cmd_configuracion(playerid, params);			}
CMD:start(playerid, params[])			{	return cmd_arrancar(playerid, params);				}
CMD:stop(playerid, params[])			{	return cmd_detener(playerid, params);				}
CMD:pare(playerid, params[])			{	return cmd_detener(playerid, params);				}
CMD:buy(playerid, params[])				{	return cmd_comprar(playerid, params);				}
CMD:enter(playerid, params[])			{	return cmd_entrar(playerid, params);				}
CMD:exit(playerid, params[])			{	return cmd_salir(playerid, params);					}
CMD:sair(playerid, params[])			{	return cmd_salir(playerid, params);					}
CMD:time(playerid, params[])			{	return cmd_hora(playerid, params);					}
CMD:ligar(playerid,params[])            {	return cmd_arrancar(playerid, params);				}
CMD:desligar(playerid,params[])         {	return cmd_detener(playerid, params);				}
CMD:timeleft(playerid, params[])		{	return cmd_tiempo(playerid, params);				}
CMD:inventory(playerid, params[])		{	return cmd_inventario(playerid, params);			}
CMD:open(playerid, params[])			{	return cmd_abrir(playerid, params);					}
CMD:close(playerid, params[])			{	return cmd_cerrar(playerid, params);				}
CMD:hour(playerid, params[])			{	return cmd_hora(playerid, params);					}
CMD:lights(playerid, params[])			{	return cmd_luces(playerid, params);					}
CMD:desbanear(playerid, params[])		{	return cmd_desban(playerid, params);				}
CMD:fill(playerid, params[])			{	return cmd_llenar(playerid, params);				}
CMD:cover(playerid, params[])			{	return cmd_cubrir(playerid, params);				}
CMD:piss(playerid, params[])			{	return cmd_mear(playerid, params);					}
CMD:skills(playerid, params[])			{	return cmd_habilidad(playerid, params);				}
CMD:habilidades(playerid, params[])		{	return cmd_habilidad(playerid, params);				}
CMD:stats(playerid, params[])			{	return cmd_est(playerid, params);					}
CMD:consume(playerid,params[])          {   return cmd_consumir(playerid,params);           	}
CMD:locate(playerid,params[])           {   return cmd_localizar(playerid,params);          	}
CMD:broadcast(playerid,params[])        {   return cmd_transmitir(playerid);         			}
CMD:stereo(playerid,params[])           {   return cmd_estereo(playerid,params);         		}
CMD:finalizar(playerid,params[])        {   return cmd_colgar(playerid);         				}
CMD:fechar(playerid, params[])			{	return cmd_cerrar(playerid, params);				}
CMD:garagem(playerid, params[])			{	return cmd_garaje(playerid, params);				}
CMD:pegar(playerid, params[])			{	return cmd_sacar(playerid, params);					}
CMD:sit(playerid, params[])				{	return cmd_sentarse(playerid, params);				}
CMD:listo(playerid, params[])			{	return cmd_specoff(playerid, params);				}
CMD:ajuda(playerid, params[])			{	return cmd_ayuda(playerid, params);					}
CMD:geladeira(playerid, params[])		{	return cmd_heladera(playerid, params);				}
CMD:estacoes(playerid)     				{   return cmd_emisoras(playerid);              		}
CMD:estacao(playerid,params[])         	{   return cmd_emisora(playerid, params);               }
CMD:luzes(playerid,params[])         	{   return cmd_luces(playerid, params);                 }
CMD:alarme(playerid,params[])         	{   return cmd_alarma(playerid, params);                }
CMD:combustivel(playerid,params[])     	{   return cmd_combustible(playerid, params);           }
CMD:carregar(playerid,params[])     	{   return cmd_combustible(playerid, params);           }
CMD:telefone(playerid,params[])     	{   return cmd_telefono(playerid, params);           	}
CMD:meunumero(playerid,params[])     	{   return cmd_minumero(playerid, params);           	}
CMD:chamar(playerid,params[])     		{   return cmd_llamar(playerid, params);           		}
CMD:aceitar(playerid,params[])     		{   return cmd_aceptar(playerid, params);           	}
CMD:plantar(playerid,params[])     		{   return cmd_sembrar(playerid, params);           	}
CMD:bolar(playerid,params[])     		{   return cmd_rodar(playerid, params);           		}
CMD:colher(playerid,params[])     		{   return cmd_cosechar(playerid, params);           	}
CMD:encher(playerid,params[])     		{   return cmd_llenar(playerid, params);           		}
CMD:acoes(playerid)     				{   return cmd_acciones(playerid);           			}
CMD:acoes2(playerid)     				{   return cmd_acciones2(playerid);           			}
CMD:solicitar(playerid,params[])     	{   return cmd_servicio(playerid, params);           	}
CMD:alugar (playerid,params[])     		{   return cmd_alquilar(playerid, params);           	}
CMD:conta(playerid,params[])     		{   return cmd_operaciones(playerid, params);          	}
CMD:remover(playerid,params[])     		{   return cmd_quitar(playerid, params);           		}
CMD:presente(playerid,params[])     	{   return cmd_regalo(playerid, params);        	   	}

CMD:npckick(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM_TEMP) return 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerNPC(i))
		{
			Kick(i);
		}
	}
	SendClientMessage(playerid, -1, "NPCs Kickeados.");
	npctoggle = 0;
	return 1;
}

CMD:npcjoin(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM_TEMP) return 0;
	if(npctoggle == 0)
	{
		LoadNPCs();
		SendClientMessage(playerid, -1, "NPCs Cargados.");
	}
	else
	{
		SendClientMessage(playerid, -1, " Todos los NPC están cargados, para re-cargarlos use /npckick y despues use este comando.");
	}
	return 1;
}

CMD:academias(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] <= ADMIN_LEVEL_DUDAS) return 0;
	SetPosEx(playerid, 2339.4460,2334.3179,10.8203,231.5187,0,0);
	return 1;
}

CMD:dv(playerid, params[])
{
	new string[128],id;
	if(PlayerInfo[playerid][pAdmin] <= ADMIN_LEVEL_DUDAS) return 0;
	if(sscanf(params,"i", id))return SendClientMessage(playerid, -1, "MODO DE USO: /dv [VEHICLE_ID]");
    Loop2(i,MAX_CONECTADOS)
    {
        if(autos[i] == id || autos2[i] == id || autos3[i] == id || autos4[i] == id)
        {
            if(autos[i] == id) format(string,sizeof(string),"Este %s es de %s(%d) Nivel %d (Patente: %s)", NombreAuto[GetVehicleModel(autos[i])-400], PlayerName(i), i, PlayerInfo[i][@Nivel],PlayerInfo[i][vpatente]);
            else if(autos2[i] == id) format(string,sizeof(string),"Este %s es de %s(%d) Nivel %d (Patente: %s)", NombreAuto[GetVehicleModel(autos2[i])-400], PlayerName(i), i,PlayerInfo[i][@Nivel],PlayerInfo[i][v2patente]);
            else if(autos3[i] == id) format(string,sizeof(string),"Este %s es de %s(%d) Nivel %d (Patente: %s)", NombreAuto[GetVehicleModel(autos3[i])-400], PlayerName(i), i,PlayerInfo[i][@Nivel],PlayerInfo[i][v3patente]);
            else if(autos4[i] == id) format(string,sizeof(string),"Este %s es de %s(%d) Nivel %d (Patente: %s)", NombreAuto[GetVehicleModel(autos4[i])-400], PlayerName(i), i,PlayerInfo[i][@Nivel],PlayerInfo[i][v4patente]);
            SendClientMessage(playerid,0xaa3333FF,string);
        }
        else SendClientMessage(playerid,-1,"Este vehículo es del Gobierno.");
    }
	return 1;
}

CMD:recibir(playerid,params[])
{
	new item[32];
  	if(!sscanf(params, "s[32]", item))
	{
		if(strcmp(item, "stats", true) == 0)
		{
			if(PlayerInfo[playerid][pStats] == 0)
			{
				new Query[256],string[520];
				DarDinero(playerid, 800000);
				PlayerInfo[playerid][@Nivel] = 5;
				PlayerInfo[playerid][pStats] = 1;
				PlayerInfo[playerid][Moneda] += 500;
				PlayerInfo[playerid][pCrack] += 5000;
				PlayerInfo[playerid][pMedicamentos] += 5000;
				PlayerInfo[playerid][pNivelArmero] = 7;
				PlayerInfo[playerid][Totems] += 9;
				PlayerInfo[playerid][pMateriales] = 10000;
				SetPlayerStats(playerid);
				CalcularNivel(playerid);
				Actualizar(playerid);
				RevisarLogroNivel(playerid);
				GuardarCuenta(playerid);
				format(Query, 200, "UPDATE `usuarios` SET `Stats`='1' WHERE `Username`='%s'",PlayerName(playerid));
				mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
				SetPlayerScore(playerid, PlayerInfo[playerid][@Nivel]);
				string="{FFFFFF}Gracias por jugar en {DBED15}"SERVER_NAME"{FFFFFF}.\nAcabas de recibir tus stats de inicio.\n\nPuedes verlos usando los comandos:\n{DBED15}/inventario {FFFFFF}- {DBED15}/habilidad{FFFFFF}\n\n- 500 Monedas "SERVER_COIN"\n- 800.000 dinero\n- 5000 medicamentos - 5000 crack\n- 10.000 Piezas de armas\n- 9 Totems\n\nNivel 7 de armero.";
				ShowPlayerDialog(playerid, INVENTARIO, DIALOG_STYLE_MSGBOX,"{DBED15}"SERVER_NAME" Roleplay",string,"Aceptar","");
				return 1;
			}
		}
	}
	return 0;
}

CMD:registro(playerid)
{
	if(PlayerInfo[playerid][pAdmin] != ADMIN_LEVEL_ADM) return 0;
    switch(HABILITAR_REGISTRO)
    {
	 	case 0:
	 	{
			SendRconCommand("hostname "SERVER_HOSTNAME"");
		    HABILITAR_REGISTRO = 1;
		    SendClientMessage(playerid,-1,"Registro habilitado.");
        }
        case 1:
	 	{
	 	    SendRconCommand("hostname "SERVER_COIN2" Roleplay [S"SERVER_NUMBER"] Ingreso privado");
		    HABILITAR_REGISTRO = 0;
		    SendClientMessage(playerid,-1,"Registro inhabilitado.");
        }
    }
    return 1;
}

CMD:w(playerid,params[])
{
	new pName[50],id,msj[128],string[256];
	GetPlayerName(playerid,pName,50);
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 1;
	if(!sscanf(params,"ds[128]",id,msj)) {
		format(string,256,"%s: %s",pName,msj);
		SendClientMessage(id,0x25AB26FF,string);
		SendClientMessage(playerid,-1,"Enviaste un mensaje con exito");
	}
	return 1;
}
CMD:sembrar(playerid, params[])
{
    if(PlayerInfo[playerid][@Nivel] < 2) return SendClientMessage(playerid, COLOR_WHITE, "Para sembrar necesitas tener como mínimo nivel 2.");
    if(PlayerInfo[playerid][pWP1] != 4) return SendClientMessage(playerid, COLOR_WHITE, "Necesitas un cuchillo para sembrar y cosechar estas plantas.");
	if(PlayerInfo[playerid][pSemillas] < 5) return SendClientMessage(playerid, COLOR_WHITE, "Necesitas 5 semillas de marihuana.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "No puedes hacer esto en un vehículo.");
	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_WHITE, "No puedes hacer esto en un interior.");
	if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_WHITE, "No puedes hacer esto en un interior.");
	PlayerInfo[playerid][pSemillas] -= 5;
	TogglePlayerControllable(playerid, 0);
	GameTextForPlayer(playerid, "~y~Sembrando...", 5000, 4);
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,5000,1);
	SetTimerEx("CrearPlanta2", 5000, false, "u", playerid);
	return 1;
}
CMD:ddfabrica(playerid,params[])
{
	new cantidad,f;
	if(PlayerInfo[playerid][pAdmin] != ADMIN_LEVEL_ADM) return 0;
    if(sscanf(params, "dd", f,cantidad)) return SendClientMessage(playerid, COLOR_GRAD2, "MODO DE USO: /ddfabrica [fabrica_id] [Cantidad_Dinero]");
    new id = FabricaDesocupada();
	if(id == -1) return SendClientMessage(playerid,-1,"No se puedes darle dinero a una fábrica que no existe.");
    DarDineroFabrica(f,cantidad);
    return 1;
}
CMD:desocuparfabrica(playerid,params[])
{
	new f;
	if(PlayerInfo[playerid][pAdmin] != ADMIN_LEVEL_ADM) return 0;
    if(sscanf(params, "dd", f)) return SendClientMessage(playerid, COLOR_GRAD2, "MODO DE USO: /desocuparfabrica [FABRICAID]");
    new id = FabricaDesocupada();
	if(id == -1) return SendClientMessage(playerid,-1,"No se puedes desocupar una fábrica que no existe.");
    Fabricas[f][pBanda] = 0;
    Fabricas[f][pSoborno] = 1;
	BorrarPuntosFabrica(f);
	CargarFabricass(f);
	DarDineroFabrica(f,3000000);
	new query[520];
	format(query,sizeof(query),"UPDATE `fabricas` SET `BandaID`='0' WHERE `ID`='%d'",Fabricas[f][pID]);
	mysql_function_query(Conecction,query,true,"","");
	format(query,sizeof(query),"UPDATE `fabricas` SET `EnVenta`='1', `EnUso`='1' WHERE `ID`='%d'",Fabricas[f][pID]);
	mysql_function_query(Conecction, query, true, "", "");
    return 1;
}
CMD:guia(playerid,params[])
{
     if(PlayerInfo[playerid][pAgenda] != 1) return SendClientMessage(playerid,-1,"Necesitas una guía telefónica para encontrar un número.");
     MostrarGuia(playerid);
     return 1;
}
CMD:runanim(playerid, params[])
{
	new tema[48],animacion[48];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	if(sscanf(params, "s[48]s[48]", tema,animacion)) return SendClientMessage(playerid, COLOR_GRAD2, "MODO DE USO: /runanim [1] [2]");
	ApplyAnimation(playerid,tema,animacion,2,0,1,1,0,0);
	return 1;
}
CMD:unbanip(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_GLOBAL) return 1;
    if(!sscanf(params, "s[128]", params[0]))
    {
        new string[150];
        format(string,sizeof(string),"unbanip %s",params[0]);
        SendRconCommand(string);
        SendRconCommand("reloadbans");
        format(string, sizeof(string), "IP desbaneada por %s (%s)", PlayerName(playerid), params[0]);
        SendClientMessage(playerid, -1, string);
        for(new i=0;i<MAX_PLAYERS;i++)
        {
            if(PlayerInfo[i][pAdmin] > ADMIN_LEVEL_SANCIONES)
            {
                format(string, 128, "%s, Desbaneo la IP: %s", PlayerName(playerid),params[0]);
                SendClientMessage(i,COLOR_GREY,string);
            }
        }
    }
	else SendClientMessage(playerid, COLOR_GRAD2, "MODO DE USO: {DBED15}/unbanip [IP]");
    return 1;
}
CMD:trabajo(playerid, params[])
{
	new item[128];
	if(!sscanf(params, "s[128]", item))
	{
	    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Necesitas estar fuera del vehículo.");
		if(PlayerInfo[playerid][pDuty] > 0) return SendClientMessage(playerid,-1, "No puedes obtener un trabajo estando de servicio.");
		if(strcmp(item, "medico", true) == 0)
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, 1178.1359,-1361.3021,14.2302)) return SendClientMessage(playerid,-1,"No estás donde se consigue el trabajo de médico.");
			if(PlayerInfo[playerid][@Nivel] < 2) return SendClientMessage(playerid,-1,"Necesitas ser al menos nivel 2 para aprender el trabajo de médico.");
			if(PlayerInfo[playerid][jDinero] < 4000) return SendClientMessage(playerid,-1,"Necesitas tener {00CC00}$4000{FFFFFF} para pertenecer al equipo médico.");
			if(PlayerInfo[playerid][pTrabajo] == T_Medico || PlayerInfo[playerid][pTrabajo2] == T_Medico) return SendClientMessage(playerid,-1,"No puedes tener dos trabajos iguales.");
			if(PlayerInfo[playerid][pTrabajo] == T_Ninguno) return ShowPlayerDialog(playerid,TRABAJO_MEDICO,DIALOG_STYLE_MSGBOX,"¿Quieres ser médico?","{FFFFFF}Para fomar parte del equipo de médicos de San Andreas debes pagar {00FC00}$4000{FFFFFF}.\n","Aceptar","Cancelar");
			else if(PlayerInfo[playerid][pTrabajo] != T_Ninguno && PlayerInfo[playerid][pTrabajo2] == T_Ninguno && PlayerInfo[playerid][pVip] == 2) return ShowPlayerDialog(playerid,TRABAJO_MEDICO2,DIALOG_STYLE_MSGBOX,"¿Quieres ser médico?","{FFFFFF}Para fomar parte del equipo de médicos de San Andreas debes pagar {00FC00}$4000{FFFFFF}.\n","Aceptar","Cancelar");
			else if(PlayerInfo[playerid][pTrabajo2] == T_Ninguno) return NoPuedeTrabajo(playerid);
			else if(PlayerInfo[playerid][pTrabajo2] != T_Ninguno) return YaTiene2Jobs(playerid);
		}
		if(strcmp(item, "armero", true) == 0)
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, 2122.9236,-2275.1238,20.6719)) return SendClientMessage(playerid,-1,"No estás donde se consigue el trabajo de Armero.");
			if(PlayerInfo[playerid][@Nivel] < 3) return SendClientMessage(playerid,-1,"Para trabajar de armero necesitas nivel 3 como mínimo.");
			if(PlayerInfo[playerid][pTrabajo] == T_Armero || PlayerInfo[playerid][pTrabajo2] == T_Armero) return SendClientMessage(playerid,-1,"No puedes tener dos trabajos iguales.");
			if(PlayerInfo[playerid][pTrabajo] == T_Ninguno) return AsignarTrabajo(playerid,T_Armero,0);
			else if(PlayerInfo[playerid][pTrabajo] != T_Ninguno && PlayerInfo[playerid][pTrabajo2] == T_Ninguno && PlayerInfo[playerid][pVip] == 2) return AsignarTrabajo(playerid,T_Armero,1);
			else if(PlayerInfo[playerid][pTrabajo2] == T_Ninguno) return NoPuedeTrabajo(playerid);
			else if(PlayerInfo[playerid][pTrabajo2] != T_Ninguno) return YaTiene2Jobs(playerid);
		}
		if(strcmp(item, "camionero", true) == 0)
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, -1715.0378,-63.1466,3.6340)) return SendClientMessage(playerid,-1,"No estás donde se consigue el trabajo de Camionero.");
            if(PlayerInfo[playerid][pTrabajo] == T_Camionero || PlayerInfo[playerid][pTrabajo2] == T_Camionero) return SendClientMessage(playerid,-1,"No puedes tener dos trabajos iguales.");
			if(PlayerInfo[playerid][pTrabajo] == T_Ninguno) return AsignarTrabajo(playerid,T_Camionero,0);
			else if(PlayerInfo[playerid][pTrabajo] != T_Ninguno && PlayerInfo[playerid][pTrabajo2] == T_Ninguno && PlayerInfo[playerid][pVip] == 2) return AsignarTrabajo(playerid,T_Camionero,1);
			else if(PlayerInfo[playerid][pTrabajo2] == T_Ninguno) return NoPuedeTrabajo(playerid);
			else if(PlayerInfo[playerid][pTrabajo2] != T_Ninguno) return YaTiene2Jobs(playerid);
		}
		if(strcmp(item, "guardaespaldas", true) == 0)
		{
			if(!IsPlayerInRangeOfPoint(playerid, 2.0, 2226.2988,-1718.7993,13.5236)) return SendClientMessage(playerid,-1,"No estás donde se consigue el trabajo de Guardaespaldas.");
            if(PlayerInfo[playerid][pTrabajo] == T_Guardaespaldas || PlayerInfo[playerid][pTrabajo2] == T_Guardaespaldas) return SendClientMessage(playerid,-1,"No puedes tener dos trabajos iguales.");
			if(PlayerInfo[playerid][pTrabajo] == T_Ninguno) return AsignarTrabajo(playerid,T_Guardaespaldas,0);
			else if(PlayerInfo[playerid][pTrabajo] != T_Ninguno && PlayerInfo[playerid][pTrabajo2] == T_Ninguno && PlayerInfo[playerid][pVip] == 2) return AsignarTrabajo(playerid,T_Guardaespaldas,1);
			else if(PlayerInfo[playerid][pTrabajo2] == T_Ninguno) return NoPuedeTrabajo(playerid);
			else if(PlayerInfo[playerid][pTrabajo2] != T_Ninguno) return YaTiene2Jobs(playerid);
		}
		if(strcmp(item, "transportista", true) == 0)
		{
			if(!IsPlayerInRangeOfPoint(playerid, 2.0, 2583.8274,1644.3837,1087.5602) && GetPlayerInterior(playerid) == 1) return SendClientMessage(playerid,-1,"No estás donde se consigue el trabajo de Transportista.");
			if(PlayerInfo[playerid][pNivelCamionero] < 3) return SendClientMessage(playerid,-1,"Para conseguir este trabajo necesitas habilidad de camionero. (nivel 3 o más)");
            if(PlayerInfo[playerid][pTrabajo] == T_Transportista || PlayerInfo[playerid][pTrabajo2] == T_Transportista) return SendClientMessage(playerid,-1,"No puedes tener dos trabajos iguales.");
			if(PlayerInfo[playerid][pTrabajo] == T_Ninguno) return AsignarTrabajo(playerid,T_Transportista,0);
			else if(PlayerInfo[playerid][pTrabajo] != T_Ninguno && PlayerInfo[playerid][pTrabajo2] == T_Ninguno && PlayerInfo[playerid][pVip] == 2) return AsignarTrabajo(playerid,T_Transportista,1);
			else if(PlayerInfo[playerid][pTrabajo2] == T_Ninguno) return NoPuedeTrabajo(playerid);
			else if(PlayerInfo[playerid][pTrabajo2] != T_Ninguno) return YaTiene2Jobs(playerid);
		}
		if(strcmp(item, "basurero", true) == 0)
		{
			if(!IsPlayerInRangeOfPoint(playerid, 2.0,-177.6093,-1549.4420,6.3284)) return SendClientMessage(playerid,-1,"No estás donde se consigue el trabajo de Basurero.");
            if(PlayerInfo[playerid][pTrabajo] == T_Basurero || PlayerInfo[playerid][pTrabajo2] == T_Basurero) return SendClientMessage(playerid,-1,"No puedes tener dos trabajos iguales.");
			if(PlayerInfo[playerid][pTrabajo] == T_Ninguno) return AsignarTrabajo(playerid,T_Basurero,0);
			else if(PlayerInfo[playerid][pTrabajo] != T_Ninguno && PlayerInfo[playerid][pTrabajo2] == T_Ninguno && PlayerInfo[playerid][pVip] == 2) return AsignarTrabajo(playerid,T_Basurero,1);
			else if(PlayerInfo[playerid][pTrabajo2] == T_Ninguno) return NoPuedeTrabajo(playerid);
			else if(PlayerInfo[playerid][pTrabajo2] != T_Ninguno) return YaTiene2Jobs(playerid);
		}
		if(strcmp(item, "taxi", true) == 0)
		{
			if(!IsPlayerInRangeOfPoint(playerid, 2.0,-2024.7489,-113.9102,1038.8187)) return SendClientMessage(playerid,-1,"No estás donde se consigue el trabajo de taxista.");
			if(PlayerInfo[playerid][pTrabajo] == T_Taxista || PlayerInfo[playerid][pTrabajo2] == T_Taxista) return SendClientMessage(playerid,-1,"No puedes tener dos trabajos iguales.");
			if(PlayerInfo[playerid][pTrabajo] == T_Ninguno) return AsignarTrabajo(playerid,T_Taxista,0);
			else if(PlayerInfo[playerid][pTrabajo] != T_Ninguno && PlayerInfo[playerid][pTrabajo2] == T_Ninguno && PlayerInfo[playerid][pVip] == 2) return AsignarTrabajo(playerid,T_Taxista,1);
			else if(PlayerInfo[playerid][pTrabajo2] == T_Ninguno) return NoPuedeTrabajo(playerid);
			else if(PlayerInfo[playerid][pTrabajo2] != T_Ninguno) return YaTiene2Jobs(playerid);
		}
		if(strcmp(item, "mecanico", true) == 0)
		{
			if(!IsPlayerInRangeOfPoint(playerid, 2.0,114.7220,-151.4292,1.5781)) return SendClientMessage(playerid,-1,"No estás donde se consigue el trabajo de Mecánico.");
            if(PlayerInfo[playerid][pTrabajo] == T_Mecanico || PlayerInfo[playerid][pTrabajo2] == T_Mecanico) return SendClientMessage(playerid,-1,"No puedes tener dos trabajos iguales.");
			if(PlayerInfo[playerid][pTrabajo] == T_Ninguno) return AsignarTrabajo(playerid,T_Mecanico,0);
			else if(PlayerInfo[playerid][pTrabajo] != T_Ninguno && PlayerInfo[playerid][pTrabajo2] == T_Ninguno && PlayerInfo[playerid][pVip] == 2) return AsignarTrabajo(playerid,T_Mecanico,1);
			else if(PlayerInfo[playerid][pTrabajo2] == T_Ninguno) return NoPuedeTrabajo(playerid);
			else if(PlayerInfo[playerid][pTrabajo2] != T_Ninguno) return YaTiene2Jobs(playerid);
		}
		else if(strcmp(item, "pescador", true) == 0)
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, 2789.3672,-2574.6675,3.1683)) return 1;
			if(PlayerInfo[playerid][@Nivel] < 2) return SendClientMessage(playerid,-1,"Necesitas como mínimo nivel 2 para conseguir este trabajo.");
            if(PlayerInfo[playerid][pTrabajo] == T_Pescador || PlayerInfo[playerid][pTrabajo2] == T_Pescador) return SendClientMessage(playerid,-1,"No puedes tener dos trabajos iguales.");
			if(PlayerInfo[playerid][pTrabajo] == T_Ninguno) return AsignarTrabajo(playerid,T_Pescador,0);
			else if(PlayerInfo[playerid][pTrabajo] != T_Ninguno && PlayerInfo[playerid][pTrabajo2] == T_Ninguno && PlayerInfo[playerid][pVip] == 2) return AsignarTrabajo(playerid,T_Pescador,1);
			else if(PlayerInfo[playerid][pTrabajo2] == T_Ninguno) return NoPuedeTrabajo(playerid);
			else if(PlayerInfo[playerid][pTrabajo2] != T_Ninguno) return YaTiene2Jobs(playerid);
		}
		if(strcmp(item, "minero", true) == 0)
		{
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, -382.5980,2199.3918,25.4105)) return SendClientMessage(playerid,-1,"No estás donde se consigue el trabajo de Minero.");
            if(PlayerInfo[playerid][pTrabajo] == T_Minero || PlayerInfo[playerid][pTrabajo2] == T_Minero) return SendClientMessage(playerid,-1,"No puedes tener dos trabajos iguales.");
			if(PlayerInfo[playerid][pTrabajo] == T_Ninguno) return AsignarTrabajo(playerid,T_Minero,0);
			else if(PlayerInfo[playerid][pTrabajo] != T_Ninguno && PlayerInfo[playerid][pTrabajo2] == T_Ninguno && PlayerInfo[playerid][pVip] == 2) return AsignarTrabajo(playerid,T_Minero,1);
			else if(PlayerInfo[playerid][pTrabajo2] == T_Ninguno) return NoPuedeTrabajo(playerid);
			else if(PlayerInfo[playerid][pTrabajo2] != T_Ninguno) return YaTiene2Jobs(playerid);
		}
		if(strcmp(item, "criminal", true) == 0)
		{
			if(!IsPlayerInRangeOfPoint(playerid, 2.0, -2181.3860,714.7617,53.8915)) return 1;
            if(PlayerInfo[playerid][pTrabajo] == T_Criminal || PlayerInfo[playerid][pTrabajo2] == T_Criminal) return SendClientMessage(playerid,-1,"No puedes tener dos trabajos iguales.");
			if(PlayerInfo[playerid][@Nivel] <= 7 && PlayerInfo[playerid][pVip] == 0)
			{
			    SendClientMessage(playerid, -1, "Necesitas ser {FF3300}nivel 8{FFFFFF} para conseguir este trabajo.");
			    SendClientMessage(playerid, -1, "Si no llegas a ese nivel puedes optar por adquirir membresía {DBED16}Vip1 {FFFFFF}o {DBED16}Vip2");
			    return 1;
			}
			if(PlayerInfo[playerid][pTrabajo] == T_Ninguno) return AsignarTrabajo(playerid,T_Criminal,0);
			else if(PlayerInfo[playerid][pTrabajo] != T_Ninguno && PlayerInfo[playerid][pTrabajo2] == T_Ninguno && PlayerInfo[playerid][pVip] == 2) return AsignarTrabajo(playerid,T_Criminal,1);
			else if(PlayerInfo[playerid][pTrabajo2] == T_Ninguno) return NoPuedeTrabajo(playerid);
			else if(PlayerInfo[playerid][pTrabajo2] != T_Ninguno) return YaTiene2Jobs(playerid);
		}
		if(strcmp(item, "prostitucion", true) == 0)
		{
			if(!IsPlayerInRangeOfPoint(playerid, 2.0, 958.2482,-54.3517,1001.1172)) return 1;
            if(PlayerInfo[playerid][pTrabajo] == T_Prostituta || PlayerInfo[playerid][pTrabajo2] == T_Prostituta) return SendClientMessage(playerid,-1,"No puedes tener dos trabajos iguales.");
			if(PlayerInfo[playerid][pTrabajo] == T_Ninguno) return AsignarTrabajo(playerid,T_Prostituta,0);
			else if(PlayerInfo[playerid][pTrabajo] != T_Ninguno && PlayerInfo[playerid][pTrabajo2] == T_Ninguno && PlayerInfo[playerid][pVip] == 2) return AsignarTrabajo(playerid,T_Prostituta,1);
			else if(PlayerInfo[playerid][pTrabajo2] == T_Ninguno) return NoPuedeTrabajo(playerid);
			else if(PlayerInfo[playerid][pTrabajo2] != T_Ninguno) return YaTiene2Jobs(playerid);
		}
		else SendClientMessage(playerid, COLOR_WHITE, "Por favor usa {DBED15}/trabajo nombre del trabajo");
	}
	return 1;
}
CMD:agarrar(playerid, params[])
{
	new item[20];
	new string[125];
	if(!sscanf(params,"s[20]",item))
	{
		if(strcmp(item,	"bolso",	true) == 0)
		{
			if(IsPlayerInRangeOfPoint(playerid,3.0,	1401.7382,523.9576,1000.9901))
			{
				if(BobedaAbierta == 0) return 1;
				if(BolsasDinero == 0) return SendClientMessage(playerid,-1,"No hay más bolsas.");
				if(EnAsalto[playerid] == 0) return SendClientMessage(playerid,-1,"No estás en una misión.");
				if(TieneBolso[playerid] == 1) return SendClientMessage(playerid,-1,"Ya tomastes un bolso de dinero.");
				if(YaRobastes2[playerid] == 1) return SendClientMessage(playerid,-1,"Ya tomaste una bolsa.");
				if(Grupo[playerid] != 2) return SendClientMessage(playerid,-1,"No eres guardia.");
				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
				format(string,125,"%s agarró un bolso con dinero.",PlayerName(playerid));
				ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				SendClientMessage(playerid,-1,"Lleva el bolso al camión que se encuentra en el estacionamiento.");
				SetPlayerAttachedObject(playerid, 2, 1550, 1, 0.116999, -0.283999, -0.046999, -178.400024, 81.999984, -5.399999, 1.000000, 1.000000, 1.000000);
				TieneBolso[playerid] = 1;
				YaRobastes2[playerid] = 1;
				BolsasDinero--;
				MandarMensajeAsalto(playerid,"Ve al ~y~estacionamiento~w~ y guarda el ~g~bolso~w~ en el cami¦n.");
			}
		}
		if(strcmp(item,	"armas",	true) == 0)
		{
			if(IsPlayerInRangeOfPoint(playerid,1.0,	1424.4259,491.4817,1007.4585))
			{
				if(BobedaAbierta == 0) return SendClientMessage(playerid,-1,"La Boveda está cerrada.");
				if(EnAsalto[playerid] == 0) return SendClientMessage(playerid,-1,"No estás en una misión.");
				if(Grupo[playerid] != 3) return SendClientMessage(playerid,-1,"No eres mafioso.");
				format(string,125,"%s agarró armas de la estantería.",PlayerName(playerid));
				ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				DarArma(playerid, 25);
				DarArma(playerid, 23);
				MandarMensajeAsalto(playerid,"Ve al estacionamiento y ~y~espera~w~ un momento.");
			}
		}
	}
	return 1;
}

CMD:colocar(playerid, params[])
{
	new item[20];
	new string[125];
	new Float:X,Float:Y,Float:Z;
	GetVehiclePos(248, X, Y, Z);
	if(!sscanf(params,"s[20]",item))
	{
		if(strcmp(item,	"c4",	true) == 0)
		{
			if(IsPlayerInRangeOfPoint(playerid, 4.0, X,Y,Z))
			{
				if(ColocoC4 == 1) return SendClientMessage(playerid,-1,"Ya colocaron una c4.");
				if(EnAsalto[playerid] == 0) return SendClientMessage(playerid,-1,"No estás en una misión.");
				if(Grupo[playerid] != 1) return SendClientMessage(playerid,-1,"No eres ladrón.");
				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
				format(string,125,"%s está colocando un C4 en el camión blindado.",PlayerName(playerid));
				ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				ColocoC4 = 1;
				SetTimer("ColocarC4",5000,0);
			}
			else SendClientMessage(playerid,-1,"Tienes que estar en las puertas del camión para {DBED15}/colocar c4");
 		}
	}
	return 1;
}
CMD:destruir(playerid, params[])
{
	new item[30];
	if(!sscanf(params,"s[29]",item))
	{
		if(strcmp(item,"planta",true)==0)
		{
			if(PlayerInfo[playerid][pDuty] == 0) return SendClientMessage(playerid, COLOR_WHITE, "Necesitas estar en servicio para destriur las plantas.");
			for(new e; e < MAX_PLANTAS; e++)
			{
				if(PlayerToPoint(3,playerid,MarihuanaInfo[e][pX], MarihuanaInfo[e][pY], MarihuanaInfo[e][pZ]))
				{
			 		if(MarihuanaInfo[e][Creado] == 0) return 1;
					new string[128];
					format(string, sizeof(string), "El Oficial %s destruye la planta de marihuana.", PlayerName(playerid));
					ProxDetector(20.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					DestroyDynamicObject(MarihuanaInfo[e][ObjetoID]);
					DestroyDynamic3DTextLabel(MarihuanaInfo[e][Label]);
					MarihuanaInfo[e][Creado] = 0;
					ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,2000,1);
					GameTextForPlayer(playerid, "~r~DESTRUYENDO...", 2500, 3);
					return 1;
				}
			}
		}
	}
	return 1;
}
CMD:padmins(playerid, params[])
{
	new string[128],strong[128], ID, ADMIN;
    if(strcmp(PlayerName(playerid), ""OWNER"", false) != 0 && strcmp(PlayerName(playerid), ""OWNER2"", false) != 0)  return 0;
    {
	    if(sscanf(params, "dd", ID,ADMIN)) return SendClientMessage(playerid,COLOR_GRAD2,"MODO DE USO: {DBED16}/padmins {FFFFFF}[{DBED16}ID{FFFFFF}] {FFFFFF}[{DBED16}Cargo [1-8]{FFFFFF}]");
	    {
	        if(PlayerInfo[ID][pAdmin] == ADMIN) return SendClientMessage(playerid, COLOR_WHITE, "{DBED16}Ese jugador ya tiene ese rango en la administración.");
	        if(ADMIN < 0 || ADMIN > 8) return SendClientMessage(playerid,COLOR_GRAD2,"MODO DE USO: {DBED16}/padmins {FFFFFF}[{DBED16}ID{FFFFFF}] {FFFFFF}[{DBED16}Cargo [1-8]{FFFFFF}]");
			switch(ADMIN)
			{
				case 0:	format(string, sizeof(string), "["SERVER_COIN2":RP] %s fue expulsado de la administración.",PlayerName(ID));
				case 1:	format(string, sizeof(string), "["SERVER_COIN2":RP] %s fue asignado Ayudante.",PlayerName(ID));
				case 2:	format(string, sizeof(string), "["SERVER_COIN2":RP] %s fue asignado Moderador del /n.",PlayerName(ID));
				case 3:	format(string, sizeof(string), "["SERVER_COIN2":RP] %s fue asignado Moderador del foro.",PlayerName(ID));
				case 4:	format(string, sizeof(string), "["SERVER_COIN2":RP] %s fue asignado Moderador del juego.",PlayerName(ID));
				case 5:	format(string, sizeof(string), "["SERVER_COIN2":RP] %s fue asignado Moderador global.",PlayerName(ID));
				case 6:	format(string, sizeof(string), "["SERVER_COIN2":RP] %s fue asignado Técnico global.",PlayerName(ID));
				case 7:	format(string, sizeof(string), "["SERVER_COIN2":RP] %s fue asignado Administrador.",PlayerName(ID));
				case 8:	format(string, sizeof(string), "["SERVER_COIN2":RP] %s fue asignado Dueño.",PlayerName(ID));
			}
			switch(ADMIN)
			{
				case 0:	format(strong, sizeof(strong), "{00CCFF}%s{FFFFFF} te expulsó de la administración.",PlayerName(playerid));
				case 1:	format(strong, sizeof(strong), "{00CCFF}%s{FFFFFF} te asignó Ayudante.",PlayerName(playerid));
				case 2:	format(strong, sizeof(strong), "{00CCFF}%s{FFFFFF} te asignó Moderador del /n.",PlayerName(playerid));
				case 3:	format(strong, sizeof(strong), "{00CCFF}%s{FFFFFF} te asignó Moderador del foro.",PlayerName(playerid));
				case 4:	format(strong, sizeof(strong), "{00CCFF}%s{FFFFFF} te asignó Moderador del juego.",PlayerName(playerid));
				case 5:	format(strong, sizeof(strong), "{00CCFF}%s{FFFFFF} te asignó Moderador global.",PlayerName(playerid));
				case 6:	format(strong, sizeof(strong), "{00CCFF}%s{FFFFFF} te asignó Técnico global.",PlayerName(playerid));
				case 7:	format(strong, sizeof(strong), "{00CCFF}%s{FFFFFF} te asignó Administrador.",PlayerName(playerid));
				case 8:	format(strong, sizeof(strong), "{00CCFF}%s{FFFFFF} te asignó Dueño.",PlayerName(playerid));
			}
			SendClientMessage(ID, -1, strong);
			ASendClientMessage(0x00cc00FF, string, 5);
			PlayerInfo[ID][pAdmin] = ADMIN;
			ForumPermissions(ID);
		}
	}
	return 1;
}
CMD:lreports(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 1;
	{
	    ClearReports();
  	}
	return 1;
}
CMD:regar(playerid, params[])
{
	if(Objeto[playerid] != 9003) return SendClientMessage(playerid, COLOR_WHITE, "Necesitas comprar un balde en alguna ferretería.");
	if(BaldeAgua[playerid] == 0) return SendClientMessage(playerid, COLOR_WHITE, "Necesitas tener un balde con agua para regar.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "No puedes hacer esto en un vehículo.");
	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_WHITE, "No puedes hacer esto en un interior.");
	if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_WHITE, "No puedes hacer esto en un interior.");
	for(new e; e<MAX_PLANTAS; e++)
	{
		if(PlayerToPoint(3,playerid,MarihuanaInfo[e][pX], MarihuanaInfo[e][pY], MarihuanaInfo[e][pZ]))
		{
			if(!strcmp(MarihuanaInfo[e][Plantador], PlayerName(playerid)))
			{
				if(MarihuanaInfo[e][Estado] == 1)
				{
					MarihuanaInfo[e][Estado] = 2;
					MarihuanaInfo[e][Hor] = 4;
					MarihuanaInfo[e][Min] = 58;
					MarihuanaInfo[e][Seg] = 59;
					DestroyDynamicObject(MarihuanaInfo[e][ObjetoID]);
					DestroyDynamic3DTextLabel(MarihuanaInfo[e][Label]);
					CargarMarihuana(e);
					BaldeAgua[playerid] = 0;
					GameTextForPlayer(playerid, "~b~Regando...", 5000, 4);
					AccionesRol(playerid,"vacía el balde de agua en la planta.", 20);
					return 1;
				}
			}
		}
	}
	return 1;
}
CMD:emisoras(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "Necesitas estar en un vehículo o junto a una radio para ver las emisoras disponibles.");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_WHITE, "Necesitas estar en un vehículo o junto a una radio para ver las emisoras disponibles.");
	new encontroemisoras=0, string[264];
	for(new id = 0; id < MAX_PLAYERS; id++)
	{
		if(Emisoras[id][TransEmisora] == 1)
		{
			format(string, sizeof(string), "{DBED15}/emisora %d {FFFFFF}- %s", Emisoras[id][CabinaOcupada], Emisoras[id][NombreEmisora]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			encontroemisoras=1;
		}
	}
	if(encontroemisoras == 0)
	{
		format(string, sizeof(string), "No hay emisoras transmitiendo en este momento.");
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	return 1;
}
CMD:emisora(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "Necesitas conducir un vehículo oestar junto a una radio para sintonizar una emisora.");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_WHITE, "Necestas conducir un vehículo o estar junto a una radio para sintonizar una emisora.");
	new emisoraid, vehicleid, string[128];
	vehicleid = GetPlayerVehicleID(playerid);
	if(!sscanf(params, "d", emisoraid))
	{
		new encontroemisoras=0;
		for(new id = 0; id < MAX_PLAYERS; id++)
		{
			if(Emisoras[id][CabinaOcupada] == emisoraid)
			{
				if(Emisoras[id][TransEmisora] == 1)
				{
				    AccionesRol(playerid,"enciende el estéreo.", 20);
					for(new i = 0; i < MAX_PLAYERS; i ++)
					{
						if(!IsPlayerConnected(i) || IsPlayerNPC(i))
						continue;
						if(vehicleid == GetPlayerVehicleID(i))
						{
							format(string, sizeof(string), "Emisora: %d {DBED15}- %s", emisoraid, Emisoras[id][NombreEmisora]);
							SendClientMessage(playerid, COLOR_WHITE, string);
							EmisoraEscuchando[vehicleid] = emisoraid;
							encontroemisoras = 1;
							format(string, sizeof(string),"http://"EMISORA_URL"?sid=%d", Emisoras[id][EmisoraID]);
							if(PlayerInfo[i][pSonidos] == 0)
						    {
						    	PlayAudioStreamForPlayer(i, string);
						    }
							return 1;
						}
					}
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "En este momento no hay ninguna emisora transmitiendo en esa frecuencia.");
			}
		}
		if(encontroemisoras == 0)
		{
			format(string, sizeof(string), "En este momento no hay ninguna emisora transmitiendo en esa frecuencia.");
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	return 1;
}
CMD:estereo(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "Necesitas estar en un vehículo.");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_WHITE, "No eres el conductor de este vehículo.");
	new vehicleid;
	vehicleid = GetPlayerVehicleID(playerid);
	if(strcmp(params,"off",true) == 0)
	{
	    AccionesRol(playerid,"apaga el estéreo.", 20);
		for(new i = 0; i < MAX_PLAYERS; i ++)
		{
			if(!IsPlayerConnected(i) || IsPlayerNPC(i))
			continue;
			if(vehicleid == GetPlayerVehicleID(i))
			{
				EmisoraEscuchando[vehicleid] = -1;
				StopAudioStreamForPlayer(i);
			}
		}
	}
	return 1;
}
CMD:transmitir(playerid)
{
	if(Emisoras[playerid][TieneEmisora] == 0) return SendClientMessage(playerid, COLOR_WHITE, "No tienes una emisora, ve y consigue una en la entrada.");
	if(Emisoras[playerid][TransEmisora] == 1) return SendClientMessage(playerid, COLOR_WHITE, "Ya estas transmitiendo en otra cabina de radio.");
	new stringa[264];
	if(IsPlayerInDynamicArea(playerid, AreaCabinas[1]))
	{
		if(CabinasOcupadasEmisoras[1][0] == 0)
		{
			CabinasOcupadasEmisoras[1][0] = 1;
			CabinasOcupadasEmisoras[1][1] = playerid;
			Emisoras[playerid][TransEmisora] = 1;
			Emisoras[playerid][CabinaOcupada] = 1;
			Emisoras[playerid][EmisoraID] = random(80);
			format(stringa, sizeof(stringa), "{FFFFFF}Ocupado por {DBED15}%s", Emisoras[playerid][NombreEmisora]);
			UpdateDynamic3DTextLabelText(CabinasTextos[1], 0xFFFFFFFF, stringa);
			format(Emisoras[playerid][URLEmisora], 128, "http://"EMISORA_URL"?sid=%d", Emisoras[playerid][EmisoraID]);
			format(stringa, sizeof(stringa), "Ya puedes comenzar a transmitir por Stream ID: {DBED15}%d", Emisoras[playerid][EmisoraID]);
			SetPlayerAttachedObject(playerid, 2, 19610, 5, 0.108999, 0.045000, 0.000000, -105.099998, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
			SendClientMessage(playerid, COLOR_WHITE, stringa);
			for(new id = 0; id < MAX_PLAYERS; id++)
			{
				if(IsPlayerInDynamicArea(id, AreaCabinas[1]))
				{
					format(stringa, sizeof(stringa), "Emisora: 1 {DBED15}- %s", Emisoras[playerid][NombreEmisora]);
					SendClientMessage(id, COLOR_WHITE, stringa);
					format(stringa, sizeof(stringa), "http://"EMISORA_URL"?sid=%d", Emisoras[playerid][EmisoraID]);
					if(PlayerInfo[id][pSonidos] == 0)
					{
						PlayAudioStreamForPlayer(id, stringa);
					}
					CabinasOcupadasEmisoras[1][2]++;
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "Ya hay alguien transmitiendo en esta cabina de radio.");
	}
	else if(IsPlayerInDynamicArea(playerid, AreaCabinas[2]))
	{
		if(CabinasOcupadasEmisoras[2][0] == 0)
		{
			CabinasOcupadasEmisoras[2][0] = 1;
			CabinasOcupadasEmisoras[2][1] = playerid;
			Emisoras[playerid][TransEmisora] = 1;
			Emisoras[playerid][CabinaOcupada] = 2;
			Emisoras[playerid][EmisoraID] = random(80);
			format(stringa, sizeof(stringa), "{FFFFFF}Ocupado por {DBED15}%s", Emisoras[playerid][NombreEmisora]);
			UpdateDynamic3DTextLabelText(CabinasTextos[2], 0xFFFFFFFF, stringa);
			format(Emisoras[playerid][URLEmisora], 128, "http://"EMISORA_URL"?sid=%d", Emisoras[playerid][EmisoraID]);
			format(stringa, sizeof(stringa), "Ya puedes comenzar a transmitir por Stream ID: {DBED15}%d", Emisoras[playerid][EmisoraID]);
			SetPlayerAttachedObject(playerid, 2, 19610, 5, 0.108999, 0.045000, 0.000000, -105.099998, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
			SendClientMessage(playerid, COLOR_WHITE, stringa);
			for(new id = 0; id < MAX_PLAYERS; id++)
			{
				if(IsPlayerInDynamicArea(id, AreaCabinas[2]))
				{
					format(stringa, sizeof(stringa), "Emisora: 2 {DBED15}- %s", Emisoras[playerid][NombreEmisora]);
					SendClientMessage(id, COLOR_WHITE, stringa);
					format(stringa, sizeof(stringa), "http://"EMISORA_URL"?sid=%d", Emisoras[playerid][EmisoraID]);
					if(PlayerInfo[id][pSonidos] == 0)
					{
						PlayAudioStreamForPlayer(id, stringa);
					}
					CabinasOcupadasEmisoras[2][2]++;
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "Ya hay alguien transmitiendo en esta cabina de radio.");
	}
	else if(IsPlayerInDynamicArea(playerid, AreaCabinas[3]))
	{
		if(CabinasOcupadasEmisoras[3][0] == 0)
		{
			CabinasOcupadasEmisoras[3][0] = 1;
			CabinasOcupadasEmisoras[3][1] = playerid;
			Emisoras[playerid][TransEmisora] = 1;
			Emisoras[playerid][CabinaOcupada] = 3;
			Emisoras[playerid][EmisoraID] = random(80);
			format(stringa, sizeof(stringa), "{FFFFFF}Ocupado por {DBED15}%s", Emisoras[playerid][NombreEmisora]);
			UpdateDynamic3DTextLabelText(CabinasTextos[3], 0xFFFFFFFF, stringa);
			format(Emisoras[playerid][URLEmisora], 128, "http://"EMISORA_URL"?sid=%d", Emisoras[playerid][EmisoraID]);
			format(stringa, sizeof(stringa), "Ya puedes comenzar a transmitir por Stream ID: {DBED15}%d", Emisoras[playerid][EmisoraID]);
			SetPlayerAttachedObject(playerid, 2, 19610, 5, 0.108999, 0.045000, 0.000000, -105.099998, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
			SendClientMessage(playerid, COLOR_WHITE, stringa);
			for(new id = 0; id < MAX_PLAYERS; id++)
			{
				if(IsPlayerInDynamicArea(id, AreaCabinas[3]))
				{
					format(stringa, sizeof(stringa), "Emisora: 3 {DBED15}- %s", Emisoras[playerid][NombreEmisora]);
					SendClientMessage(id, COLOR_WHITE, stringa);
					format(stringa, sizeof(stringa), "http://"EMISORA_URL"?sid=%d", Emisoras[playerid][EmisoraID]);
					if(PlayerInfo[id][pSonidos] == 0)
					{
						PlayAudioStreamForPlayer(id, stringa);
					}
					CabinasOcupadasEmisoras[3][2]++;
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "Ya hay alguien transmitiendo en esta cabina de radio.");
	}
	else if(IsPlayerInDynamicArea(playerid, AreaCabinas[4]))
	{
		if(CabinasOcupadasEmisoras[4][0] == 0)
		{
			CabinasOcupadasEmisoras[4][0] = 1;
			CabinasOcupadasEmisoras[4][1] = playerid;
			Emisoras[playerid][TransEmisora] = 1;
			Emisoras[playerid][CabinaOcupada] = 4;
			Emisoras[playerid][EmisoraID] = random(80);
			format(stringa, sizeof(stringa), "{FFFFFF}Ocupado por {DBED15}%s", Emisoras[playerid][NombreEmisora]);
			UpdateDynamic3DTextLabelText(CabinasTextos[4], 0xFFFFFFFF, stringa);
			format(Emisoras[playerid][URLEmisora], 128, "http://"EMISORA_URL"?sid=%d", Emisoras[playerid][EmisoraID]);
			format(stringa, sizeof(stringa), "Ya puedes comenzar a transmitir por Stream ID: {DBED15}%d", Emisoras[playerid][EmisoraID]);
			SetPlayerAttachedObject(playerid, 2, 19610, 5, 0.108999, 0.045000, 0.000000, -105.099998, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
			SendClientMessage(playerid, COLOR_WHITE, stringa);
			for(new id = 0; id < MAX_PLAYERS; id++)
			{
				if(IsPlayerInDynamicArea(id, AreaCabinas[4]))
				{
					format(stringa, sizeof(stringa), "Emisora: 4 {DBED15}- %s", Emisoras[playerid][NombreEmisora]);
					SendClientMessage(id, COLOR_WHITE, stringa);
					format(stringa, sizeof(stringa), "http://"EMISORA_URL"?sid=%d", Emisoras[playerid][EmisoraID]);
					if(PlayerInfo[id][pSonidos] == 0)
					{
						PlayAudioStreamForPlayer(id, stringa);
					}
					CabinasOcupadasEmisoras[4][2]++;
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "Ya hay alguien transmitiendo en esta cabina de radio.");
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "No estas en ninguna cabina de radio.");
	return 1;
}
CMD:transmision(playerid)
{
	if(Emisoras[playerid][TieneEmisora] == 0) return SendClientMessage(playerid, COLOR_WHITE, "No tienes una emisora, ve y consigue una en la entrada.");
	if(Emisoras[playerid][TransEmisora] == 0) return SendClientMessage(playerid, COLOR_WHITE, "No estas transmitiendo en ninguna cabina de radio.");
	new string[128];
	format(string, sizeof(string),"http://"EMISORA_URL"?sid=%d", Emisoras[playerid][EmisoraID]);
	if(PlayerInfo[playerid][pSonidos] == 0)
	{
		PlayAudioStreamForPlayer(playerid, string);
	}
	return 1;
}
CMD:oyentes(playerid)
{
	if(Emisoras[playerid][TieneEmisora] == 0) return SendClientMessage(playerid, COLOR_WHITE, "No tienes una emisora, ve y consigue una en la entrada.");
	if(Emisoras[playerid][TransEmisora] == 0) return SendClientMessage(playerid, COLOR_WHITE, "No estas transmitiendo en ninguna cabina de radio.");
	new emisoraid, string[128];
	emisoraid = Emisoras[playerid][CabinaOcupada];
	format(string, sizeof(string), "Tienes un total de {00CC00}%d{FFFFFF} oyentes.", CabinasOcupadasEmisoras[emisoraid][2]);
	SendClientMessage(playerid,COLOR_WHITE, string);
	return 1;
}
CMD:r(playerid, params[])
{
	new mensaje[128];
	if(sscanf(params, "s[128]", mensaje)) return SendClientMessage(playerid,COLOR_WHITE,"Por favor usa {DBED15}/r texto");
	if(IsPlayerInDynamicArea(playerid, AreaCabinas[1]))
	{
	if(CabinasOcupadasEmisoras[1][1] == playerid)
	{
		MandarMensajeLocutor(1, mensaje);
	}
	else if(TieneMicrofono[playerid] == 1)
	{
		MandarMensajeInvitado(1, mensaje);
	} else return SendClientMessage(playerid, COLOR_WHITE, "No tienes un micrófono para poder hablar por la radio.");
	}
	else if(IsPlayerInDynamicArea(playerid, AreaCabinas[2]))
	{
	if(CabinasOcupadasEmisoras[2][1] == playerid)
	{
		MandarMensajeLocutor(2, mensaje);
	}
	else if(TieneMicrofono[playerid] == 2)
	{
		MandarMensajeInvitado(2, mensaje);
	} else return SendClientMessage(playerid, COLOR_WHITE, "No tienes un micrófono para poder hablar por la radio.");
	}
	else if(IsPlayerInDynamicArea(playerid, AreaCabinas[3]))
	{
	if(CabinasOcupadasEmisoras[3][1] == playerid)
	{
		MandarMensajeLocutor(3, mensaje);
	}
	else if(TieneMicrofono[playerid] == 3)
	{
		MandarMensajeInvitado(3, mensaje);
	} else return SendClientMessage(playerid, COLOR_WHITE, "No tienes un micrófono para poder hablar por la radio.");
	}
	else if(IsPlayerInDynamicArea(playerid, AreaCabinas[4]))
	{
	if(CabinasOcupadasEmisoras[4][1] == playerid)
	{
		MandarMensajeLocutor(4, mensaje);
	}
	else if(TieneMicrofono[playerid] == 4)
	{
		MandarMensajeInvitado(4, mensaje);
	} else return SendClientMessage(playerid, COLOR_WHITE, "No tienes un micrófono para poder hablar por la radio.");
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "No estas en ninguna cabina de radio.");
	return 1;
}
CMD:configuracion(playerid,params[])
{
	MostrarOpciones(playerid);
	return 1;
}


CMD:regalo(playerid, params[])
{
	new day, month,year, second, minute, hour;
	getdate(day,month,year);
	gettime(hour, minute, second);
    if(NidadX == false) return 1;
	if((day >= 24) && (month == 12))
	{
		if(IsPlayerInRangeOfPoint(playerid,7.0,1511.3228,-1611.9078,14.0244))
		{
			if(PlayerInfo[playerid][jRegalo] == 1) return SendClientMessage(playerid,-1,"Ya recibiste tu regalo de navidad, espera al proximo año.");
			PlayerInfo[playerid][jRegalo] = 1;
			AccionesRol(playerid,"abre su regalo de navidad.", 20);
  			AbrirRegalo(playerid);
		}
		else SendClientMessage(playerid, -1, "No estás cerca del arbol de navidad frente al Hospital Central de Los Santos.");
	}
	else return SendClientMessage(playerid,-1,"A partir del día 25 de diciembre puedes recibir tu {DBED15}/regalo{FFFFFF}.");
	return 1;
}

CMD:armar(playerid,params[])
{
	new item[32];
	if(!sscanf(params,"s[29]",item))
	{
		if(strcmp(item, "porro", true)==0)
		{
			if(TiempoMarihuana[playerid] == 0)
			{
				if(EnCombate[playerid] == 1) return SendClientMessage(playerid,-1,"No puedes armar un porro estando en combate");
				if(PlayerInfo[playerid][pMarihuana] <= 0) return SendClientMessage(playerid, -1, "Necesitas almenos 1g de marihuana para arma un porro");
				if(GetPlayerSpecialAction(playerid) == 21) return SendClientMessage(playerid, COLOR_WHITE, "Ya tienes un porro en la mano.");
				SetPlayerSpecialAction(playerid,21);
				TienePorro[playerid] = 1;
				TiempoMarihuana[playerid] = 30;
				SetTimerEx("ConsumirMa",30000,false,"d",playerid);
				PlayerInfo[playerid][pMarihuana] -= 1;
				AccionesRol(playerid,"arma un porro.", 20);
				SendClientMessage(playerid, -1, "Presiona {DBED16}BIR{FFFFFF} para fumar o {DBED16}INTRO{FFFFFF} para tirar el porro.");
				RevisarLogroPorro(playerid);
			}
			else
			{
			    new string[128];
				format(string,128,"Por favor espera {FF3300}%d{FFFFFF} segundos para volver a armar un porro.",TiempoMarihuana[playerid]);
				SendClientMessage(playerid, -1, string);
			}
		}
	}
	return 1;
}
CMD:heladera(playerid,params[])
{
	new opcion[15],opcion2[15],query[250];
	if(!sscanf(params,"s[15]s[15]",opcion,opcion2))
	{
		if(strcmp(opcion,"guardar",true) == 0)
		{
	    	if(strcmp(opcion2,"objeto",true) == 0)
	    	{
	        	if(GetPlayerVirtualWorld(playerid) != 0)
	        	{
	            	for(new p; p < MAX_PROPIEDADES; p++)
	            	{
	                	if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	                	{
	                    	if(IsPlayerInRangeOfPoint(playerid,2,PropInfo[p][pHeladeraX],PropInfo[p][pHeladeraY],PropInfo[p][pHeladeraZ]))
	                    	{
	                    	    if(PropInfo[p][pTipo] == 3)
	                    	    {
									if(PlayerInfo[playerid][pID] != PropInfo[p][pIDPropietario])
									{
										SendClientMessage(playerid, -1, "No puedes ver el contenido de esta heladera.");
										return 1;
									}
	                    	    }
	                    		new total = PropInfo[p][pCerveza] + PropInfo[p][pVino] + PropInfo[p][pSprunk] + PropInfo[p][pPizzas]  + PropInfo[p][pAquarius];
								if(total < PropInfo[p][pLugarHeladera])
								{
									if(Objeto[playerid] == 10000)//Aquarius x12
	                    	    	{
	                    	    	    if(total+12 > PropInfo[p][pLugarHeladera])
	                    	    	    {
											PropInfo[p][pAquarius] += PropInfo[p][pLugarHeladera]-total;
										}
										else
										{
											PropInfo[p][pAquarius] += 12;
										}
										SacarObjeto(playerid,Objeto[playerid]);
                                    	format(query,sizeof(query),"UPDATE `propiedades` SET `Aquarius`='%d' WHERE `ID`='%d'",PropInfo[p][pAquarius],PropInfo[p][pID]);
										mysql_function_query(Conecction,query,true,"","");
										AccionesRol(playerid,"guardó algunas botellas de aquarius en la heladera.", 20);
										GuardarPropiedad(p);
										return 1;
				        	    	}
	                    	    	else if(Objeto[playerid] == 10001)//Vino x12
	                    	    	{
	                    	    	    if(total+12 > PropInfo[p][pLugarHeladera])
	                    	    	    {
											PropInfo[p][pVino] += PropInfo[p][pLugarHeladera]-total;
										}
										else
										{
											PropInfo[p][pVino] += 12;
										}
                                    	SacarObjeto(playerid,Objeto[playerid]);
                                    	format(query,sizeof(query),"UPDATE `propiedades` SET `Vino`='%d' WHERE `ID`='%d'",PropInfo[p][pVino],PropInfo[p][pID]);
										mysql_function_query(Conecction,query,true,"","");
										AccionesRol(playerid,"guardó algunas botellas de vino en la heladera.", 20);
										GuardarPropiedad(p);
										return 1;
	                    	    	}
	                    	    	else if(Objeto[playerid] == 10002)//Cerveza x12
	                    	    	{
	                    	    	    if(total+12 > PropInfo[p][pLugarHeladera])
	                    	    	    {
											PropInfo[p][pCerveza] += PropInfo[p][pLugarHeladera]-total;
										}
										else
										{
											PropInfo[p][pCerveza] += 12;
										}
                                    	SacarObjeto(playerid,Objeto[playerid]);
                                    	format(query,sizeof(query),"UPDATE `propiedades` SET `Cerveza`='%d' WHERE `ID`='%d'",PropInfo[p][pCerveza],PropInfo[p][pID]);
										mysql_function_query(Conecction,query,true,"","");
										AccionesRol(playerid,"guardó algunas botellas de cerveza en la heladera.", 20);GuardarPropiedad(p);
										return 1;
	                    	    	}
	                    	    	else if(Objeto[playerid] == 10003)//Sprunk x12
	                    	    	{
	                    	    	    if(total+12 > PropInfo[p][pLugarHeladera])
	                    	    	    {
											PropInfo[p][pSprunk] += PropInfo[p][pLugarHeladera]-total;
										}
										else
										{
											PropInfo[p][pSprunk] += 12;
										}
                                    	SacarObjeto(playerid,Objeto[playerid]);
                                    	format(query,sizeof(query),"UPDATE `propiedades` SET `Sprunk`='%d' WHERE `ID`='%d'",PropInfo[p][pSprunk],PropInfo[p][pID]);
										mysql_function_query(Conecction,query,true,"","");
										AccionesRol(playerid,"guardó algunos vasos de sprunk en la heladera.", 20);GuardarPropiedad(p);
										return 1;
	                    	    	}
									else if(Objeto[playerid] == 10004)//Pizzas x8
	                    	    	{
	                    	    	    if(total+8 > PropInfo[p][pLugarHeladera])
	                    	    	    {
											PropInfo[p][pPizzas] += PropInfo[p][pLugarHeladera]-total;
										}
										else
										{
											PropInfo[p][pPizzas] += 8;
										}
                                    	SacarObjeto(playerid,Objeto[playerid]);
                                    	format(query,sizeof(query),"UPDATE `propiedades` SET `Pizzas`='%d' WHERE `ID`='%d'",PropInfo[p][pPizzas],PropInfo[p][pID]);
										mysql_function_query(Conecction,query,true,"","");
										AccionesRol(playerid,"guardó algunas porciones de pizza en la heladera.", 20);GuardarPropiedad(p);
										return 1;
	                    	    	}
	                    	    	else if(Objeto[playerid] == 1000)//Cerveza x6
	                    	    	{
	                    	    	    if(total+6 > PropInfo[p][pLugarHeladera])
	                    	    	    {
											PropInfo[p][pCerveza] += PropInfo[p][pLugarHeladera]-total;
										}
										else
										{
											PropInfo[p][pCerveza] += 6;
										}
                                    	SacarObjeto(playerid,Objeto[playerid]);
                                    	format(query,sizeof(query),"UPDATE `propiedades` SET `Cerveza`='%d' WHERE `ID`='%d'",PropInfo[p][pCerveza],PropInfo[p][pID]);
										mysql_function_query(Conecction,query,true,"","");
										AccionesRol(playerid,"guardó algunas botellas de cerveza en la heladera.", 20);GuardarPropiedad(p);
										return 1;
	                    	    	}
	                    	    	else if(Objeto[playerid] == 1001)//Vino x6
	                    	    	{
	                    	    	    if(total+6 > PropInfo[p][pLugarHeladera])
	                    	    	    {
											PropInfo[p][pVino] += PropInfo[p][pLugarHeladera]-total;
										}
										else
										{
											PropInfo[p][pVino] += 6;
										}
                                    	SacarObjeto(playerid,Objeto[playerid]);
                                    	format(query,sizeof(query),"UPDATE `propiedades` SET `Vino`='%d' WHERE `ID`='%d'",PropInfo[p][pVino],PropInfo[p][pID]);
										mysql_function_query(Conecction,query,true,"","");
										AccionesRol(playerid,"guardó algunas botellas de vino en la heladera.", 20);GuardarPropiedad(p);
										return 1;
	                    	    	}
                                    else if(Objeto[playerid] == 1002)//Sprunk x4
	                    	    	{
	                    	    	    if(total+4 > PropInfo[p][pLugarHeladera])
	                    	    	    {
											PropInfo[p][pSprunk] += PropInfo[p][pLugarHeladera]-total;
										}
										else
										{
											PropInfo[p][pSprunk] += 4;
										}
                                    	SacarObjeto(playerid,Objeto[playerid]);
                                    	format(query,sizeof(query),"UPDATE `propiedades` SET `Sprunk`='%d' WHERE `ID`='%d'",PropInfo[p][pSprunk],PropInfo[p][pID]);
										mysql_function_query(Conecction,query,true,"","");
										AccionesRol(playerid,"guardó algunos vasos de sprunk en la heladera.", 20);GuardarPropiedad(p);
										return 1;
	                    	    	}
	                    	    	else SendClientMessage(playerid,-1,"No tienes nada para guardar, puedes comprar bebidas en el Mercado Central de BlueBerry.");
	                    		}
	                    		else SendClientMessage(playerid,-1,"No hay más lugar en la heladera.");
	                    	}
	                	}
	            	}
	        	}
	    	}
		}
		else if(strcmp(opcion,"sacar",true) == 0)
		{
	    	if(strcmp(opcion2,"vino",true) == 0)
	    	{
	        	if(GetPlayerVirtualWorld(playerid) != 0)
	        	{
	            	for(new p; p < MAX_PROPIEDADES; p++)
	            	{
	                	if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	                	{
	                    	if(IsPlayerInRangeOfPoint(playerid,2,PropInfo[p][pHeladeraX],PropInfo[p][pHeladeraY],PropInfo[p][pHeladeraZ]))
	                    	{
	                    	    if(PropInfo[p][pTipo] == 3)
								{
									if(PlayerInfo[playerid][pID] != PropInfo[p][pIDPropietario])
									{
										SendClientMessage(playerid, -1, "No puedes sacar cosas de esta heladera.");
										return 1;
									}
								}
	                    		if(PropInfo[p][pVino] > 0)
	                    		{
	                            	PropInfo[p][pVino] --;
	                            	DarVino(playerid);
									AccionesRol(playerid,"saca una botella de vino de la heladera.", 20);
									GuardarPropiedad(p);
									return 1;
	                    		}
	                    		else SendClientMessage(playerid,-1,"No hay botellas de vino en esta heladera.");
							}
	                	}
					}
				}
	    	}
	    	else if(strcmp(opcion2,"cerveza",true) == 0)
	    	{
	        	if(GetPlayerVirtualWorld(playerid) != 0)
	        	{
	            	for(new p; p < MAX_PROPIEDADES; p++)
	            	{
	                	if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	                	{
	                    	if(IsPlayerInRangeOfPoint(playerid,2,PropInfo[p][pHeladeraX],PropInfo[p][pHeladeraY],PropInfo[p][pHeladeraZ]))
	                    	{
	                    	    if(PropInfo[p][pTipo] == 3)
								{
									if(PlayerInfo[playerid][pID] != PropInfo[p][pIDPropietario])
									{
										SendClientMessage(playerid, -1, "No puedes hacer uso de esta heladera.");
										return 1;
									}
								}
	                    		if(PropInfo[p][pCerveza] > 0)
	                    		{
	                            	PropInfo[p][pCerveza] --;
	                            	DarCerveza(playerid);
									AccionesRol(playerid,"saca una botella de cerveza de la heladera.", 20);
									GuardarPropiedad(p);
									return 1;
	                    		}
	                    		else SendClientMessage(playerid,-1,"No hay botellas de cerveza en esta heladera.");
							}
	                	}
					}
				}
	    	}
	    	else if(strcmp(opcion2,"sprunk",true) == 0)
	    	{
	        	if(GetPlayerVirtualWorld(playerid) != 0)
	        	{
	            	for(new p; p < MAX_PROPIEDADES; p++)
	            	{
	                	if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	                	{
	                    	if(IsPlayerInRangeOfPoint(playerid,2,PropInfo[p][pHeladeraX],PropInfo[p][pHeladeraY],PropInfo[p][pHeladeraZ]))
	                    	{
	                    	    if(PropInfo[p][pTipo] == 3)
								{
									if(PlayerInfo[playerid][pID] != PropInfo[p][pIDPropietario])
									{
										SendClientMessage(playerid, -1, "No puedes hacer uso de esta heladera.");
										return 1;
									}
								}
	                    		if(PropInfo[p][pSprunk] > 0)
	                    		{
	                            	PropInfo[p][pSprunk] --;
									DarSprunk(playerid);
									AccionesRol(playerid,"saca un vaso de sprunk de la heladera.", 20);
									GuardarPropiedad(p);
									return 1;
	                    		}
	                    		else SendClientMessage(playerid,-1,"No hay vasos de sprunk en esta heladera.");
							}
	                	}
					}
				}
	    	}
			else if(strcmp(opcion2,"aquarius",true) == 0)
	    	{
	        	if(GetPlayerVirtualWorld(playerid) != 0)
	        	{
	            	for(new p; p < MAX_PROPIEDADES; p++)
	            	{
	                	if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	                	{
	                    	if(IsPlayerInRangeOfPoint(playerid,2,PropInfo[p][pHeladeraX],PropInfo[p][pHeladeraY],PropInfo[p][pHeladeraZ]))
	                    	{
	                    	    if(PropInfo[p][pTipo] == 3)
								{
									if(PlayerInfo[playerid][pID] != PropInfo[p][pIDPropietario])
									{
										SendClientMessage(playerid, -1, "No puedes hacer uso de esta heladera.");
										return 1;
									}
								}
	                    		if(PropInfo[p][pAquarius] > 0)
	                    		{
	                            	PropInfo[p][pAquarius] --;
									DarAquarius(playerid);
									AccionesRol(playerid,"saca una botella de aquarius de la heladera.", 20);
									GuardarPropiedad(p);
									return 1;
	                    		}
	                    		else SendClientMessage(playerid,-1,"No hay botellas de Aquarius en esta heladera.");
							}
	                	}
					}
				}
	    	}
	    	else if(strcmp(opcion2,"pizza",true) == 0)
	    	{
	        	if(GetPlayerVirtualWorld(playerid) != 0)
	        	{
	            	for(new p; p < MAX_PROPIEDADES; p++)
	            	{
	                	if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
	                	{
	                    	if(IsPlayerInRangeOfPoint(playerid,2,PropInfo[p][pHeladeraX],PropInfo[p][pHeladeraY],PropInfo[p][pHeladeraZ]))
	                    	{
	                    	    if(PropInfo[p][pTipo] == 3)
								{
									if(PlayerInfo[playerid][pID] != PropInfo[p][pIDPropietario])
									{
										SendClientMessage(playerid, -1, "No puedes hacer uso de esta heladera.");
										return 1;
									}
								}
	                    		if(PropInfo[p][pPizzas] > 0)
	                    		{
	                            	PropInfo[p][pPizzas] --;
	                            	DarPizza(playerid);
									AccionesRol(playerid,"saca una porción de pizza de la heladera.", 20);
									GuardarPropiedad(p);
									return 1;
	                    		}
	                    		else SendClientMessage(playerid,-1,"No hay una porción de pizza en esta heladera.");
							}
	                	}
					}
				}
	    	}
		}
	}
	return true;
}
CMD:reloadsv(playerid,params[])
{
	new string[250],tiempo;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	if(ComandoEstado == 0) return SendClientMessage(playerid,-1,"El reinicio del servidor ya está activo.");
 	if(!sscanf(params,"d",tiempo))
	{
	    ComandoEstado = 0;
	    if(tiempo < 2) return SendClientMessage(playerid,-1,"El tiempo para el reinicio debe ser mayor que 1.");
		format(string,250,"El servidor se reiniciará automáticamente en %d minutos.",tiempo);
		SendClientMessageToAll(0xb5bfcbFF, string);
		TiempoReinicio = tiempo-1;
		TimerReinicio = SetTimer("Reinicio",60000,true);
	}
	else return SendClientMessage(playerid,-1,"Utiliza /reiniciarserver [minutos]");
	return 1;
}

CMD:reloadcancel(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	if(ComandoEstado == 1) return SendClientMessage(playerid,-1,"El reinicio del servidor no está activado.");
	{
	    ComandoEstado = 1;
		SendClientMessageToAll(0xb5bfcbFF, "El reinicio del servidor fue cancelado.");
		KillTimer(TimerReinicio);
		KillTimer(TimerReinicio2);
	}
	return 1;
}
CMD:inscribirse(playerid,params[])
{
	if(IsPlayerInRangeOfPoint(playerid,5,-1447.7421,-313.3544,1052.0969))
	{
		if(HabilitarCarreras == 0) return SendClientMessage(playerid,-1,"No hay una carrera en curso para poder inscribirte.");
		if(EnCarreras[playerid] != 0) return SendClientMessage(playerid,-1,"Tu ya estas inscripto en la carrera.");
		if(PlayerInfo[playerid][jDinero] < 2000) return SendClientMessage(playerid,-1,"Necesitas {00CC00}$2.000{FFFFFF} para poder inscribirte en la carrera.");
		if(EmpezoCarrera == 1) return SendClientMessage(playerid,-1,"No puedes inscribirte si la carrera ya comenzo.");
		if(ParticipantesCarrera >= 13) return SendClientMessage(playerid,-1,"No hay mas lugares libres para la carrera, espera a la siguiente.");
		if(PlayerInfo[playerid][@Nivel] < 3) return SendClientMessage(playerid,-1,"Necesitas ser nivel 3 para inscribirte.");
		QuitarDinero(playerid,2000);
		lugarcarrera ++;
		EnCarreras[playerid] = lugarcarrera;
		ParticipantesCarrera ++;
		ParticipantesCarrera2 ++;
		SendClientMessage(playerid,-1,"Te inscribiste para participar en la carrera, por favor espera unos minutos.");
		SendClientMessage(playerid,-1,"Perderas el puesto si sales del estadio.");
    }
    else if(IsPlayerInRangeOfPoint(playerid,2,415.0879,2535.5859,19.1484))
    {
        if(PlayerInfo[playerid][jDinero] < 5000) return SendClientMessage(playerid,-1,"Necesitas {00CC00}$5.000{FFFFFF} para poder inscribirte en la escuela.");
		if(EnParacaidas[playerid] == 1) return SendClientMessage(playerid,-1,"Ya estás inscrito en la escuela de paracaidismo.");
		SendClientMessage(playerid,-1,"Te inscribiste para participar en el curso de paracaidismo, por favor espera unos minutos.");
		SendClientMessage(playerid,-1,"Si te alejas mucho de la oficina, no podrás subirte al avión.");
		QuitarDinero(playerid,5000);
		EnParacaidas[playerid] = 1;
	}
	return 1;
}
CMD:control(playerid,params[])
{
	new maquina1[50],maquina2[50],mensaje[100];
	if(Humo1Ojb == 0)
	{
		maquina1="Encender maquinas de humo delanteras";
	}
	else
	{
		maquina1="Apagar maquinas de humo delanteras";
	}
	if(Humo2Ojb == 0)
	{
		maquina2="Encender maquinas de humo traseras";
	}
	else
	{
		maquina2="Apagar maquinas de humo traseras";
	}
	format(mensaje, sizeof(mensaje), "%s\n%s",	maquina1,maquina2);
	ShowPlayerDialog(playerid, CONTROLES, DIALOG_STYLE_LIST, "Panel de control", mensaje, "Accionar","Cancelar");
	return 1;
}
CMD:entregarse(playerid,params[])
{
    if(PlayerInfo[playerid][pCargos] == 0) return SendClientMessage(playerid,-1,"No te puedes entregar si no tienes cargos en tu contra.");
    if(!EnEntregarse(playerid)) return 1;
	new string[256];
	switch(PlayerInfo[playerid][pCargos])
	{
		case 1:
		{
			format(string,sizeof(string),"{FFFFFF}Tienes solamente {CA5700}1{FFFFFF} cargo en tu contra, podemos retirarlo, pero para ello tendrás que pagar una fianza de {00CC00}$500{FFFFFF}.");
			ShowPlayerDialog(playerid, ENTREGARSE1, DIALOG_STYLE_MSGBOX, "{FFFFFF}¿Quieres entregarte?",string,"Aceptar","Rechazar");
		}
		case 2:
		{
			format(string,sizeof(string),"{FFFFFF}Podemos quitarte {CA5700}1{FFFFFF} de los {CA5700}2{FFFFFF} cargos que se te imputan, pero para ello tendrás que pagar una fianza de {00CC00}$1000{FFFFFF} en este momento.");
			ShowPlayerDialog(playerid, ENTREGARSE2, DIALOG_STYLE_MSGBOX, "{FFFFFF}¿Quieres entregarte?",string,"Aceptar","Rechazar");
		}
		case 3:
		{
			format(string,sizeof(string),"{FFFFFF}Podemos arrestarte con {CA5700}2{FFFFFF} de los {CA5700}3{FFFFFF} cargos que se te imputan, pero para ello tendrás que pagar una fianza de {00CC00}$1500{FFFFFF} en este momento.");
			ShowPlayerDialog(playerid, ENTREGARSE3, DIALOG_STYLE_MSGBOX, "{FFFFFF}¿Quieres entregarte?",string,"Aceptar","Rechazar");
		}
		case 4:
		{
			format(string,sizeof(string),"{FFFFFF}Podemos arrestarte con {CA5700}3{FFFFFF} de los {CA5700}4{FFFFFF} cargos que se te imputan, pero para ello tendrás que pagar una fianza de {00CC00}$2000{FFFFFF} en este momento.");
			ShowPlayerDialog(playerid, ENTREGARSE4, DIALOG_STYLE_MSGBOX, "{FFFFFF}¿Quieres entregarte?",string,"Aceptar","Rechazar");
		}
		case 5:
		{
			switch(TipoCargo[playerid])
			{
				case 1:
				{
					format(string,sizeof(string),"{FFFFFF}No podemos reducir los cargos que se te imputan, pero podemos aligerar los trámites para tu detención.");
					ShowPlayerDialog(playerid, ENTREGARSE5, DIALOG_STYLE_MSGBOX, "{FFFFFF}¿Quieres entregarte?",string,"Aceptar","Rechazar");
				}
				case 2:
				{
					format(string,sizeof(string),"{FFFFFF}Podemos arrestarte con {CA5700}4{FFFFFF} de los {CA5700}5{FFFFFF} cargos que se te imputan, pero para ello tendrás que pagar una fianza de {00CC00}$2500{FFFFFF} en este momento.");
					ShowPlayerDialog(playerid, ENTREGARSE6, DIALOG_STYLE_MSGBOX, "{FFFFFF}¿Quieres entregarte?",string,"Aceptar","Rechazar");
				}
			}
		}
		case 6:
		{
			format(string,sizeof(string),"{FFFFFF}No podemos reducir los cargos que se te imputan, pero podemos aligerar los trámites para tu detención.");
			ShowPlayerDialog(playerid, ENTREGARSE6, DIALOG_STYLE_MSGBOX, "{FFFFFF}¿Quieres entregarte?",string,"Aceptar","Rechazar");
		}
	}
	return 1;
}
CMD:eventos(playerid, params[])
{
	new item[128];
	if(PlayerInfo[playerid][pAdmin] != ADMIN_LEVEL_ADM) return 0;
	if(IsPlayerConnected(playerid))
	{
		if(!sscanf(params, "s[128]", item))
		{
			if(strcmp(item,"halloween",true) == 0)
			{
			    if(NidadX == true || EventoActivo == true) return SendClientMessage(playerid,-1,"No puedes otro evento, debes desactivar el que está acticado en este momento.");
				if(EventoBolo[playerid] == 0)
				{
					new string[128];
					EventoBolo[playerid] = 1;
					if(HallX == true) format(string,sizeof(string),"El evento [Halloween] se encuentra Activo, vuelva a utilizar el comando para confirmar el cambio.");
					else if(HallX == false) format(string,sizeof(string),"El evento [Halloween] se encuentra Desactivado, vuelva a utilizar el comando para confirmar el cambio.");
					SendClientMessage(playerid,-1,string);
					SendClientMessage(playerid,-1,"Desactivarlo en caso que esté activo, o viceverza.");
					return 1;
				}
				if(HallX == false)
				{
					EventoHall(true);
					SendClientMessage(playerid,-1,"Se activó el evento [Halloween]. Utilize /eventos halloween para desactivarlo.");
				}
				else if(HallX == true)
				{
					EventoHall(false);
					SendClientMessage(playerid,-1,"Se desactivó el evento [Halloween]. Utilize /eventos halloween para volverlo a activar.");
				}
				EventoBolo[playerid] = 0;
			}
			if(strcmp(item,"navidad",true) == 0)
			{
			    if(HallX == true || EventoActivo == true) return SendClientMessage(playerid,-1,"No puedes otro evento, debes desactivar el que está acticado en este momento.");
				if(EventoBolo[playerid] == 0)
				{
					new string[128];
					EventoBolo[playerid] = 1;
					if(NidadX == true) format(string,sizeof(string),"El evento [Navidad] se encuentra Activo, vuelva a utilizar el comando para confirmar el cambio.");
					else if(NidadX == false) format(string,sizeof(string),"El evento [Navidad] se encuentra Desactivado, vuelva a utilizar el comando para confirmar el cambio.");
					SendClientMessage(playerid,-1,string);
					SendClientMessage(playerid,-1,"Desactivarlo en caso que esté activo, o viceverza.");
					return 1;
				}
				if(NidadX == false)
				{
					EventoNavi(true);
					SendClientMessage(playerid,-1,"Se activó el evento [Navidad]. Utilize /eventos navidad para desactivarlo.");
				}
				else if(NidadX == true)
				{
					EventoNavi(false);
					SendClientMessage(playerid,-1,"Se desactivó el evento [Navidad]. Utilize /eventos navidad para volverlo a activar.");
				}
				EventoBolo[playerid] = 0;
			}
			if(strcmp(item,"cerveza",true) == 0)
			{
			    if(HallX == true || NidadX == true) return SendClientMessage(playerid,-1,"No puedes otro evento, debes desactivar el que está acticado en este momento.");
				if(EventoBolo[playerid] == 0)
				{
					new string[128];
					EventoBolo[playerid] = 1;
					if(EventoActivo == true) format(string,sizeof(string),"El evento [Fiesta de la cerveza] se encuentra Activo, vuelva a utilizar el comando para confirmar el cambio.");
					else if(EventoActivo == false) format(string,sizeof(string),"El evento [Fiesta de la cerveza] se encuentra Desactivado, vuelva a utilizar el comando para confirmar el cambio.");
					SendClientMessage(playerid,-1,string);
					SendClientMessage(playerid,-1,"Desactivarlo en caso que esté activo, o viceverza.");
					return 1;
				}
				if(EventoActivo == false)
				{
					EventoFC(true);
					SendClientMessage(playerid,-1,"Se activó el evento [Fiesta de la cerveza]. Utilize /eventos cerveza para desactivarlo.");
				}
				else if(EventoActivo == true)
				{
					EventoFC(false);
					SendClientMessage(playerid,-1,"Se desactivó el evento [Fiesta de la cerveza]. Utilize /eventos cerveza para volverlo a activar.");
				}
				EventoBolo[playerid] = 0;
			}
		}
		else SendClientMessage(playerid,COLOR_GREY,"MODO DE USO: /eventos [halloween/navidad/cerveza]");
	}
	return 1;
}

CMD:picar(playerid, params[])
{
	if(rocajugador[playerid] == 897) return SendClientMessage(playerid, -1, "Solo puedes cargar una roca en tu inventario.");
    if(Picando[playerid] > 0) return SendClientMessage(playerid, -1, "Ya estás picando esta roca.");
	if(IsPlayerInRangeOfPoint(playerid, 5.0, -745.1193,2408.8325,1.3375) && PlayerInfo[playerid][pNivelMinero] < 2) return SendClientMessage(playerid, COLOR_WHITE, "Necesitas nivel 2 de minero para poder picar esta roca.");
	if(IsPlayerInRangeOfPoint(playerid, 5.0, -729.0903,2410.1563,7.2710) && PlayerInfo[playerid][pNivelMinero] < 3) return SendClientMessage(playerid, COLOR_WHITE, "Necesitas nivel 3 de minero para poder picar esta roca.");
	if(IsPlayerInRangeOfPoint(playerid, 5.0, -728.3772,2422.0627,7.1895) && PlayerInfo[playerid][pNivelMinero] < 4) return SendClientMessage(playerid, COLOR_WHITE, "Necesitas nivel 4 de minero para poder picar esta roca.");
    if(!EnMinero(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "No estás cerca de ninguna roca para poder picarla.");
    ClearAnimations(playerid);
    if(PlayerInfo[playerid][pSonidos] == 0) PlayAudioStreamForPlayer(playerid, "http://"AUDIO_MINERO"");
	TogglePlayerControllable(playerid, 0);
	SetPVarInt(playerid, "IsFrozen", 0);
	SetPlayerAttachedObject(playerid,2, 18634, 14, 0.333391, 0.000000, 0.042249, 358.219909, 268.014739, 170.032974, 2.003867, 1.764811, 1.579773);
	ApplyAnimation(playerid,"BASEBALL","Bat_4",4.1,1,0,0,1,11000,1);
	ApplyAnimation(playerid,"BASEBALL","Bat_4",4.1,1,0,0,1,11000,1);
	GameTextForPlayer(playerid, "~<~ ~G~PICANDO ROCA ~>~", 10000, 5);
	Picando[playerid]++;
	SetPlayerProgressBarValue(playerid,Progressbar[playerid][Picar], Picando[playerid]);
	UpdatePlayerProgressBar(playerid,Progressbar[playerid][Picar]);
	hands[playerid] = SetTimerEx("TimeMiner",1000,true,"i",playerid);
	SendClientMessage(playerid, -1, "Comienzas a picar la roca.");
	return 1;
}
CMD:permiso(playerid, params[])
{
	if(strcmp(params,"pesca",true) == 0)
	{
		if(PlayerInfo[playerid][pTrabajo] != T_Pescador && PlayerInfo[playerid][pTrabajo2] != T_Pescador) return SendClientMessage(playerid, -1, "Necesitas tener el trabajo de pescador.");
		if(permisopesca[playerid] != 0) return SendClientMessage(playerid,-1,"Ya tienes un permiso de pesca.");
		if(!IsPlayerInRangeOfPoint(playerid, 7.0, 2785.6536,-2575.7666,3.1917)) return SendClientMessage(playerid, -1, "Para solicitar el {DBED16}/permiso pesca{FFFFFF}, tienes que hablar con la mujer que está junto a la casa del muelle de Ocean Docks.");
		SendClientMessage(playerid, -1, "{00CCFF}Se marcaron en el mapa las zonas de pesca permitidas.");
		SendClientMessage(playerid, -1, "Encuentra un barco pesquero para comenzar el viaje.");
		SendClientMessage(playerid, -1, "Cuando llegues a la zona de pesca, escribe {DBED16}/lanzar arpon{FFFFFF}.");
		if(PlayerInfo[playerid][pNivelPescador] == 1)
		{
		    GangZoneShowForPlayer(playerid, mares, 0x0053FF9D);
		    SetPlayerMapIcon(playerid, 99, 890.69623, -2448.19629, -3.40480, 9, 0, MAPICON_GLOBAL);
			permisopesca[playerid] = 1;
		}
		if(PlayerInfo[playerid][pNivelPescador] == 2)
		{
			SetPlayerMapIcon(playerid, 99, 42.95105, -1692.88330, -2.80000, 9, 0, MAPICON_GLOBAL);
			permisopesca[playerid] = 1;
		}
		if(PlayerInfo[playerid][pNivelPescador] == 3)
		{
			SetPlayerMapIcon(playerid, 99, 42.95105, -1692.88330, -2.80000, 9, 0, MAPICON_GLOBAL);
			permisopesca[playerid] = 1;
		}
	}
	return 1;
}
CMD:lanzar(playerid, params[])
{
	if(strcmp(params,"arpon",true) == 0)
	{
		if(PlayerInfo[playerid][pTrabajo] != T_Pescador && PlayerInfo[playerid][pTrabajo2] != T_Pescador) return SendClientMessage(playerid, -1, "No eres pescador.");
		if(!EnPesca(playerid)) return SendClientMessage(playerid, -1, "Los arpones se pueden lanzar únicamente en zonas de pesca.");
		if(permisopesca[playerid] == 0) return SendClientMessage(playerid, -1, "No solicitaste un permiso para poder pescar en esta zona.");
		new vehch = GetPlayerNearestVehicle(playerid), Float:Pos[3], objetivo[5];
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return SendClientMessage(playerid, -1, "No estás en la cubierta de un barco pesquero.");
		GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
		if(GetVehicleDistanceFromPoint(vehch, Pos[0], Pos[1], Pos[2]) < 4.0)
		{
			switch(PlayerInfo[playerid][pNivelPescador])
			{
				case 1:
				{
				    if(IsPlayerInRangeOfPoint(playerid, 20.0, 890.69623, -2448.19629, -3.40480))
				    {
						objetivo[0] = 1601;
						objetivo[1] = 1601;
						objetivo[2] = 1601;
						objetivo[3] = 1609;
						ShowModelSelectionMenuEx2(playerid, objetivo, 4, "Selecciona tu objetivo", OBJETIVOPESCA, 16.0, 0.0, -55.0, 1.0, 0x000000FF, 0x000000FF, 1);
					}
					else SendClientMessage(playerid, -1 ,"No solicitaste un permiso para poder pescar en esta zona.");
				}
				case 2:
				{
				    if(IsPlayerInRangeOfPoint(playerid, 20.0, 42.95105, -1692.88330, -2.80000))
				    {
						objetivo[0] = 1607;
						objetivo[1] = 1601;
						objetivo[2] = 1601;
						objetivo[3] = 1609;
						ShowModelSelectionMenuEx2(playerid, objetivo, 4, "Selecciona tu objetivo", OBJETIVOPESCA, 16.0, 0.0, -55.0, 1.0, 0x000000FF, 0x000000FF, 1);
					}
					else SendClientMessage(playerid, -1 ,"No solicitaste un permiso para poder pescar en esta zona.");
				}
				case 3..100:
				{
				    if(IsPlayerInRangeOfPoint(playerid, 20.0, 42.95105, -1692.88330, -2.80000))
				    {
						objetivo[0] = 1601;
						objetivo[1] = 1607;
						objetivo[2] = 1608;
						objetivo[3] = 1609;
						ShowModelSelectionMenuEx2(playerid, objetivo, 4, "Selecciona tu objetivo", OBJETIVOPESCA, 16.0, 0.0, -55.0, 1.0, 0x000000FF, 0x000000FF, 1);
					}
					else SendClientMessage(playerid, -1 ,"No solicitaste un permiso para poder pescar en esta zona.");
				}
			}
		}
		else SendClientMessage(playerid, -1 ,"No estás en la cubierta de un barco pesquero.");
	}
	return 1;
}

CMD:bailar(playerid,params[]) {
	if(Forzando[playerid] == 1 ||FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT){
 		if(!sscanf(params, "d", params[0]))
		{
		    switch(params[0])
		    {
		        case 1: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
		        case 2: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
		        case 3: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
		        case 4: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
		        default: SendClientMessage(playerid, -1, "Utiliza /bailar [1-4]");
      		}
		} else SendClientMessage(playerid, -1, "Utiliza /bailar [1-4]");
	}return 1;
}
CMD:rendirse(playerid,params[]) {
	if(Forzando[playerid] == 1 ||FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
	}
	return 1;
}
CMD:borracho(playerid,params[]) {
	if(Forzando[playerid] == 1 ||FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		ApplyAnimation(playerid,"PED", "WALK_DRUNK",4.0,1,1,1,1,500);
	}
	return 1;
}
CMD:bomba(playerid,params[]) {
	if(Forzando[playerid] == 1 ||FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
	return 1;
}

CMD:reirse(playerid,params[]) {
	if(Forzando[playerid] == 1 ||FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0,0);
	return 1;
}
CMD:apuntar(playerid, params[])
{
	if(Forzando[playerid] == 1 ||FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	if(sscanf(params, "i", params[0]))   return SendClientMessage(playerid, -1, "Utilize: /apuntar [1-2]");
	if(params[0] < 1 || params[0] > 4)   return SendClientMessage(playerid, -1, "Utilize: /apuntar [1-2]");
	switch(params[0])
	{
		case 1: ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,1,1);
		case 2: ApplyAnimation(playerid,"ped", "ARRESTgun", 4.0,0,1,1,1,1);
	}
	return 1;
}
CMD:paja(playerid,params[]) {
	if(Forzando[playerid] == 1 ||FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4.0, 1, 0, 0, 1, 0);
	SendClientMessage(playerid,-1,"Para acabar usa {DBED15}/acabar");
	return 1;
}
CMD:acabar(playerid,params[]) {
	if(Forzando[playerid] == 1 ||FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "PAULNMAC", "wank_out", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:encender(playerid,params[]) {
	if(Forzando[playerid] == 1 ||FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "SMOKING", "M_smk_in", 4.000000, 0, 0, 1, 1, 0);
	return 1;
}
CMD:inhalar(playerid,params[]) {
	if(Forzando[playerid] == 1 ||FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "SMOKING", "M_smk_drag", 4.000000, 1, 0, 0, 0, -1);
	return 1;
}

CMD:vigilar(playerid,params[]) {
	if(Forzando[playerid] == 1 ||FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 1, 1, 1, 0, 4000);
	return 1;
}
CMD:recostarse(playerid,params[]) {
	if(Forzando[playerid] == 1 ||FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"SUNBATHE", "Lay_Bac_in", 4.0, 0, 0, 0, 1, 0);
	SendClientMessage(playerid,-1,"Para ponerte de pie usa {DBED15}/pararse");
	return 1;
}
CMD:pararse(playerid,params[]) {
	if(Forzando[playerid] == 1 ||FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"SUNBATHE", "Lay_Bac_out", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:cubrirse(playerid,params[]) {
	if(Forzando[playerid] == 1 ||FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "ped", "cower", 4.0, 1, 0, 0, 0, 0);
	SendClientMessage(playerid,-1,"Para ponerte de pie usa {DBED15}/depie1");
	return 1;
}
CMD:vomitar(playerid,params[]) {
	if(Forzando[playerid] == 1 ||FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
	if(PlayerInfo[playerid][@Nivel] > 1)
	{
		PlayerInfo[playerid][pHambre] += 10;
		PlayerInfo[playerid][pSed] += 20;
		SetPlayerProgressBarValue(playerid,Progressbar[playerid][Hambre], PlayerInfo[playerid][pHambre]);
		SetPlayerProgressBarValue(playerid,Progressbar[playerid][Sed], PlayerInfo[playerid][pSed]);
	}
	return 1;
}
CMD:comer(playerid,params[]) {
	if(Forzando[playerid] == 1 ||FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
	return 1;
}
CMD:palmada(playerid,params[]) {
	if(Forzando[playerid] == 1 ||FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:agonizar(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.0, 0, 0, 0, 1, 0);
	SendClientMessage(playerid,-1,"Para ponerte de pie usa {DBED15}/levantarse");
	return 1;
}
CMD:levantarse(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "ped", "getup_front", 4.000000, 0, 0, 0, 0, 0);
	return 1;
}
CMD:beso(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "KISSING", "Playa_Kiss_02", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:mear(playerid,params[])
{
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	SetPlayerSpecialAction(playerid, 68);
	return 1;
}
CMD:explicar(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"SPRAYCAN","SPRAYCAN_FIRE",4.0, 0, 0, 0, 0, -1);
	return 1;
}
CMD:sentarse(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "SUNBATHE", "ParkSit_M_in", 4.000000, 0, 1, 1, 1, 0);
	SendClientMessage(playerid,-1,"Para ponerte de pie usa {DBED15}/pararse");
	return 1;
}
CMD:taichi(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop",  4.1,7,5,1,1,1);
	return 1;
}
CMD:beber(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 1, 1, 0, 4000);
	return 1;
}
CMD:boxear(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "GYMNASIUM", "gym_shadowbox",  4.1,7,5,1,1,1);
	return 1;
}
CMD:pelea(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "ped", "FIGHTIDLE", 4.000000, 0, 1, 1, 1, 1);
	return 1;
}
CMD:asiento(playerid,params[]) {
    SendClientMessage(playerid,0xFC9300AA,"Usa: /asiento[1-2-3]");
	return 1;
}
CMD:asientosexi(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleA",4.000000, 0, 1, 1, 1, 0);
	SendClientMessage(playerid,-1,"Para ponerte de pie usa {DBED15}/pararse");
	return 1;
}
CMD:asiento1(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "ped", "SEAT_down", 4.000000, 0, 0, 0, 1, 0);
	SendClientMessage(playerid,-1,"Para ponerte de pie usa {DBED15}/depie1");
	return 1;
}
CMD:asiento2(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"Attractors","Stepsit_in",4.1,0,0,0,1,0);
	SendClientMessage(playerid,-1,"Para ponerte de pie usa {DBED15}/depie2");
	return 1;
}
CMD:asiento3(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
    new Float:Angle;
	GetPlayerFacingAngle(playerid, Angle);
	SetPlayerFacingAngle(playerid, Angle+180);
	ApplyAnimation(playerid, "ped", "SEAT_down", 4.000000, 0, 0, 0, 1, 0);
	SendClientMessage(playerid,-1,"Para ponerte de pie usa {DBED15}/depie1");
	return 1;
}
CMD:depie1(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "ped", "SEAT_up", 4.000000, 0, 0, 1, 0, 0);
	return 1;
}
CMD:servirse(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"BAR","Barcustom_get",4.1,0,0,0,0,0);
	return 1;
}
CMD:servir(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"BAR","Barserve_give",4.1,0,0,0,0,0);
	return 1;
}
CMD:depie2(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"Attractors","Stepsit_out",4.1,0,0,0,0,0);
	return 1;
}
CMD:rodar(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"MD_CHASE","MD_HANG_Lnd_Roll",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,"Para ponerte de pie usa {DBED15}/levantarse");
	return 1;
}
CMD:saludo1(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"GANGS","hndshkaa",4.1,0,0,0,0,0);
	return 1;
}
CMD:saludo2(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"GANGS","hndshkba",4.1,0,0,0,0,0);
	return 1;
}
CMD:saludo3(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"GANGS","hndshkca",4.1,0,0,0,0,0);
	return 1;
}
CMD:saludo4(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.1,0,0,0,0,0);
	return 1;
}
CMD:llorar(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"GRAVEYARD","mrnF_loop",4.1,0,0,0,0,0);
	return 1;
}
CMD:dormir(playerid,params[]){
    if(Forzando[playerid] == 1 || GetPlayerInterior(playerid) == 0 || GetPlayerVirtualWorld(playerid) == 0) return 1;
	if(PlayerInfo[playerid][pTiempoJailS] == 0 && PlayerInfo[playerid][pTiempoCarcelM] == 0)
	if(FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,0,0,1,0);
	return 1;
}
CMD:strip(playerid,params[]) {
	SendClientMessage(playerid, 0xFC9300AA, "Usa: /strip[1-20]");
	return 1;
}
CMD:strip1(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"CAR","flag_drop",4.1,0,1,1,1,0);
	return 1;
}
CMD:strip2(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"STRIP","PUN_CASH",4.1,7,5,1,1,0);
	return 1;
}
CMD:strip3(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"STRIP","PUN_HOLLER",4.1,7,5,1,1,0);
	return 1;
}
CMD:strip4(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"STRIP","PUN_LOOP",4.1,7,5,1,1,0);
	return 1;
}
CMD:strip5(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"STRIP","strip_A",4.1,7,5,1,1,0);
	return 1;
}
CMD:strip6(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"STRIP","strip_B",4.1,7,5,1,1,0);
	return 1;
}
CMD:strip7(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"STRIP","strip_C",4.1,7,5,1,1,0);
	return 1;
}
CMD:strip8(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"STRIP","strip_D",4.1,7,5,1,1,0);
	return 1;
}
CMD:strip9(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"STRIP","strip_E",4.1,7,5,1,1,0);
	return 1;
}
CMD:strip10(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"STRIP","strip_F",4.1,7,5,1,1,0);
	return 1;
}
CMD:strip11(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"STRIP","strip_G",4.1,7,5,1,1,0);
	return 1;
}
CMD:strip12(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"STRIP","STR_B2A",4.1,0,1,1,1,0);
	return 1;
}
CMD:strip13(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"STRIP","strip_E",4.1,7,5,1,1,0);
	return 1;
}
CMD:strip14(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"STRIP","STR_B2C",4.000000, 0, 1, 1, 1, 0);
	return 1;
}
CMD:strip15(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"STRIP","STR_C1",4.000000, 0, 1, 1, 1, 0);
	return 1;
}
CMD:strip16(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"STRIP","STR_C2",4.000000, 0, 1, 1, 1, 0);
	return 1;
}
CMD:strip17(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"STRIP","STR_C2B",4.1,7,5,1,1,0);
	return 1;
}
CMD:strip18(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"STRIP","STR_Loop_A",4.1,7,5,1,1,0);
	return 1;
}
CMD:strip19(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"STRIP","STR_Loop_C",4.1,7,5,1,1,0);
	return 1;
}
CMD:strip20(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"STRIP","STR_Loop_B",4.1,7,5,1,1,0);
	return 1;
}
CMD:echarse(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"SUNBATHE","SitnWait_in_W",4.000000, 0, 0, 0, 1, 0);
	SendClientMessage(playerid,-1,"Para ponerte de pie usa {DBED15}/pararse");
	return 1;
}
CMD:patada(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"FIGHT_C","FightC_2",4.1,7,5,1,1,1);
	return 1;
}
CMD:danzar(playerid,params[]) {
	SendClientMessage(playerid, 0xFC9300AA, "Usa: /danzar[0-12]");
	return 1;
}
CMD:danzar0(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"DANCING","bd_clap",4.1,7,5,1,1,1);
	return 1;
}
CMD:danzar1(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"DANCING","bd_clap1",4.1,7,5,1,1,1);
	return 1;
}
CMD:danzar2(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"DANCING","dance_loop",4.1,7,5,1,1,1);
	return 1;
}
CMD:danzar3(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"DANCING","DAN_Down_A",4.1,7,5,1,1,1);
	return 1;
}
CMD:danzar4(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"DANCING","DAN_Left_A",4.1,7,5,1,1,1);
	return 1;
}
CMD:danzar5(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"DANCING","DAN_Loop_A",4.1,7,5,1,1,1);
	return 1;
}
CMD:danzar6(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"DANCING","DAN_Right_A",4.1,7,5,1,1,1);
	return 1;
}
CMD:danzar7(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"DANCING","DAN_Up_A",4.1,7,5,1,1,1);
	return 1;
}
CMD:danzar8(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"DANCING","dnce_M_a",4.1,7,5,1,1,1);
	return 1;
}
CMD:danzar9(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"DANCING","dnce_M_b",4.1,7,5,1,1,1);
	return 1;
}
CMD:danzar10(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"DANCING","dnce_M_c",4.1,7,5,1,1,1);
	return 1;
}
CMD:danzar11(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"DANCING","dnce_M_d",4.1,7,5,1,1,1);
	return 1;
}
CMD:danzar12(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"DANCING","dnce_M_e",4.1,7,5,1,1,1);
	return 1;
}
CMD:asustado(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"PED","handscower",4.1,0,1,1,1,1);
	return 1;
}
CMD:taxi(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"PED","IDLE_taxi",4.1,0,1,1,1,1);
	return 1;
}
CMD:adolorido(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"PED","KO_shot_stom",4.1,0,1,1,1,1);
	SendClientMessage(playerid,-1,"Para ponerte de pie usa {DBED15}/levantarse");
	return 1;
}

CMD:fumar(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"SMOKING", "M_smklean_loop",4.1,0,1,1,1,1);
	return 1;
}
CMD:fuerza(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"benchpress","gym_bp_celebrate",4.1,0,1,1,1,1);
	return 1;
}
CMD:mirar(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "DEALER", "DEALER_IDLE", 4.1, 0, 1, 1, 1, 1, 0);
	return 1;
}
CMD:alentar(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"ON_LOOKERS","shout_02",4.1,7,5,1,1,1);
	return 1;
}
CMD:cansado(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"PED","WOMAN_runfatold",4.1,7,5,1,1,1);
	return 1;
}
CMD:comodo(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"INT_HOUSE","LOU_In",4.1,0,1,1,1,1);
	SendClientMessage(playerid,-1,"Para ponerte de pie usa {DBED15}/depie1");
	return 1;
}
CMD:no(playerid,params[])
{
    if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	if(IsPlayerInAnyVehicle(playerid)) return 1;
	if(GetPVarInt(playerid,"IsFrozen") == 0) return 1;
	ClearAnimations(playerid);
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:sentadosexy(playerid)
{
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleA",4.000000, 0, 1, 1, 1, 0);
	return SendClientMessage(playerid,-1,"Para ponerte de pie usa {DBED15}/pararse");
}
CMD:herido(playerid)
{
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid, "SWEET", "LaFin_Sweet", 4.0, 0, 1, 1, 1, 0);
	return SendClientMessage(playerid, 0xF5DEB3AA, "Para ponerte de pie usa {DBED15}/levantarse");
}
CMD:saludo(playerid, params[])
{
	SendClientMessage(playerid, 0xFC9300AA, "Usa: /saludo[1-4]");
	return 1;
}
CMD:patinar(playerid, params[])
{
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	if(PlayerInfo[playerid][pPatines] == 0) return SendClientMessage(playerid,-1,"{DBED15}Para poder patinar necesitas comprar unos patines.");
	SendClientMessage(playerid,0x339900FF,"Usa: /patinar[1-3]");
	return 1;
}
CMD:patinar1(playerid, params[])
{
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	if(PlayerInfo[playerid][pPatines] == 0) return SendClientMessage(playerid,-1,"{DBED15}Para poder patinar necesitas comprar unos patines.");
	ApplyAnimation(playerid,"SKATE","skate_run",4.0,1,1,1,1,500);
	return 1;
}
CMD:patinar2(playerid, params[])
{
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	if(PlayerInfo[playerid][pPatines] == 0) return SendClientMessage(playerid,-1,"{DBED15}Para poder patinar necesitas comprar unos patines.");
	ApplyAnimation(playerid,"SKATE","skate_sprint",4.0,1,1,1,1,500);
	return 1;
}
CMD:patinar3(playerid, params[])
{
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	if(PlayerInfo[playerid][pPatines] == 0) return SendClientMessage(playerid,-1,"{DBED15}Para poder patinar necesitas comprar unos patines.");
	ApplyAnimation(playerid,"SKATE","skate_idle",4.0,1,1,1,1,500);
	return 1;
}
CMD:caerse(playerid,params[]) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	ApplyAnimation(playerid,"PED","BIKE_fallR",4.0,0,1,1,1,0);
	SendClientMessage(playerid,-1,"Para ponerte de pie usa {DBED15}/pararse");
	return 1;
}
CMD:reir(playerid) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	return ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0,0);
}
CMD:arrestado(playerid) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	return ApplyAnimation( playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1,500);
}
CMD:chau(playerid) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	return ApplyAnimation(playerid, "KISSING", "BD_GF_Wave", 3.0, 0, 0, 0, 0, 0);
}
CMD:negarse(playerid) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	return ApplyAnimation(playerid, "GANGS", "Invite_No", 4.0, 0, 0, 0, 0, 0);
}
CMD:basta(playerid) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	return ApplyAnimation(playerid,"POLICE","CopTraf_Stop",4.1,0,0,0,0,0);
}
CMD:regay(playerid) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	return ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.0,1,1,1,1,500);
}
CMD:asustar(playerid) {
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	return ApplyAnimation( playerid,"ped", "fucku", 4.0, 0, 1, 1, 1, 1 );
}
CMD:loro(playerid, params[])
{
	if(PlayerInfo[playerid][pObj] == 19078 && UsandoObj[playerid] == 1|| PlayerInfo[playerid][pObj2] == 19078 && UsandoObj2[playerid] == 1 || PlayerInfo[playerid][pObj3] == 19078 && UsandoObj3[playerid] == 1 || PlayerInfo[playerid][pObj4] == 19078 && UsandoObj4[playerid] == 1)
	{
		ShowPlayerDialog(playerid, DIALOGO_LORO, DIALOG_STYLE_LIST, "Loro", "{FFFFFF}Enseñar frase\n{FFFFFF}Silenciar", "Aceptar" , "Cancelar");
	}
	else return SendClientMessage(playerid,-1,"Necesitas usar un loro para usar este comando.");
	return 1;
}
CMD:vibrar(playerid, params[])
{
	if(Forzando[playerid] == 1 || FabricaMedica[playerid] == 1 || PlayerInfo[playerid][pCama] > 0 || EnClub[playerid] > 0 || Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
	if(PlayerInfo[playerid][pObj] == 19086 && UsandoObj[playerid] == 1 || PlayerInfo[playerid][pObj2] == 19086 && UsandoObj2[playerid] == 1 || PlayerInfo[playerid][pObj3] == 19086 && UsandoObj3[playerid] == 1 || PlayerInfo[playerid][pObj4] == 19086 && UsandoObj4[playerid] == 1 )
	{
		ApplyAnimation(playerid,"CHAINSAW","csaw_part",4.0,1,1,1,1,500);
	}
	else return 1;
	return 1;
}
CMD:acciones(playerid)
{
	SendClientMessage(playerid,COLOR_DORADO,"[--------------------------------------[Acciones]--------------------------------------]");
	SendClientMessage(playerid,COLOR_DORADO,"{DBED15}/apuntar[1-2],/putear[1-3],/asiento[1-3],/saludo[1-4]");
	SendClientMessage(playerid,COLOR_DORADO,"{DBED15}/strip[1-20],/patinar[1-3],/danzar[1-13],/fumar,/bailar [1-4]");
	SendClientMessage(playerid,COLOR_DORADO,"{DBED15}/rendirse,/caerse,/borracho,/bomba,/reir,/esperar,/paja,/acabar");
	SendClientMessage(playerid,COLOR_DORADO,"{DBED15}/arrestado,/herido,/encender,/inhalar,/vigilar,/recostarse");
	SendClientMessage(playerid,COLOR_DORADO,"{DBED15}/pararse,/cubrirse,/vomitar,/comer,/chau,/palmada,/agonizar");
	SendClientMessage(playerid,COLOR_DORADO,"{DBED15}/levantarse,/beso,/mear,/mirar,/explicar,/sentarse,/pararse");
	SendClientMessage(playerid,COLOR_DORADO,"[---------------------------[Mas acciones /acciones2]----------------------------]");
	return 1;
}
CMD:acciones2(playerid)
{
	SendClientMessage(playerid,COLOR_DORADO,"[-------------------------------------[Acciones 2]-------------------------------------]");
	SendClientMessage(playerid,COLOR_DORADO,"{DBED15}/recibir,/negarse,/taichi,/beber,/pelea,/servirse,/servir");
	SendClientMessage(playerid,COLOR_DORADO,"{DBED15}/patada,/asustado,/taxi,/adolorido,/basta,/fuerza,/jorobado,/regay");
	SendClientMessage(playerid,COLOR_DORADO,"{DBED15}/asco,/asustar,/alentar,/cansado,/patada,/comodo,/hablar,/refresco");
	SendClientMessage(playerid,COLOR_DORADO,"{DBED15}/pensar,/rodar,/llorar,/dormir,/parar,/rapear,/echarse,/sentadosexy");
	SendClientMessage(playerid,COLOR_DORADO,"{DBED15}/no (para terminar cualquier acción)");
	SendClientMessage(playerid,COLOR_DORADO,"[-------------------------------------------------------------------------------------------]");
 	return 1;
}

CMD:encargo(playerid)
{
	if(PlayerInfo[playerid][pTrabajo] != T_Criminal && PlayerInfo[playerid][pTrabajo2] != T_Criminal) return SendClientMessage(playerid, -1, "Primero tienes que hablar con el jefe para unirte al crimen.");
	if(PlayerInfo[playerid][@Nivel] < 10 && PlayerInfo[playerid][pVip] == 0)
	{
	    SendClientMessage(playerid,-1,"Para solicitar un encargo necesitas {CF0613}Nivel 10{FFFFFF} o membresía {DBED16}Vip1/vip2");
	    SendClientMessage(playerid,-1,"De todas formas puedes participar uniéndote al encargo de otra persona");
	    return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid,2.0,-2186.6309,714.9852,53.8988))
	{
		if(TomoEncargo[playerid] == 1) return SendClientMessage(playerid, -1, "Ya tienes un encargo.");
		TomoEncargo[playerid] = 1;
		SendClientMessage(playerid,-1,"Para invitar a alguien a participar usa {DBED15}/colega id-o-nombre");
		new e;
		e = random(5);
		if(e == 0) e = 1;
		//e = 5;
		if(Encargo[e][MisionActiva] == 0)
		{
			TieneEncargo[playerid] = e;
			Encargo[e][MisionActiva] = 1;
			Encargo[e][IdCriminal] = playerid;
			Encargo[e][IdColega] = INVALID_PLAYER_ID;
			Encargo[e][SegundosMision] = 119;
			TextDrawSetString(MisionCriminal[e], "Busca un ~g~colega~w~ para realizar el encargo.");
			TextDrawShowForPlayer(playerid, FranjaCriminal);
		}
		else
		{
			e = random(5);
			if(Encargo[e][MisionActiva] == 0)
			{
				TieneEncargo[playerid] = e;
				Encargo[e][MisionActiva] = 1;
				Encargo[e][IdCriminal] = playerid;
				Encargo[e][IdColega] = INVALID_PLAYER_ID;
				Encargo[e][SegundosMision] = 119;
				TextDrawSetString(MisionCriminal[e], "Busca un ~g~colega~w~ para realizar el encargo.");
				TextDrawShowForPlayer(playerid, FranjaCriminal);
			}
			else SendClientMessage(playerid,-1,"No hay encargos disponible, intenta de nuevo..");
		}
	}
	return 1;
}
CMD:participar(playerid)
{
	if(PlayerInfo[playerid][pAdmin] != ADMIN_LEVEL_ADM) return SendClientMessage(playerid,-1,"El sistema de asalto al blindado se encuentra temporalmente inhabilitado.");
	if(PlayerInfo[playerid][@Nivel] < 4) return SendClientMessage(playerid,-1,"Necesitas como mínimo nivel 4 para participar.");
	if(PlayerInfo[playerid][pDuty] == 1) return SendClientMessage(playerid,-1,"No puedes hacer esto estando de servicio.");
	if(EnAsalto[playerid] == 1) return 1;
	if(TiempoAceptar[playerid] > 0) return SendClientMessage(playerid,-1,"Espera la siguiente misión.");
	new stringg[700];
	format(stringg,556,"{FFFFFF}La misión {8baab7}Asalto al Blindado{FFFFFF} se encuenta en una etapa de pruebas.\n\n{ff7800}Durante esta epata:\n\n-{FFFFFF}Al completar la misión recibirán {00CC00}$6000{FFFFFF}. (Cambiará al finalizar la prueba)\n{ff7800}-{FFFFFF}El ingreso es por medio de un comando temporal.\n{ff7800}-{FFFFFF}Puede haber errores y faltantes.\n\n{00CC00}A tener en cuenta:\n-{FFFFFF}No podrás entrar con cargos, arrestado, herido o en combate\n{00CC00}-{FFFFFF}Si entras como {364eff}guardia{FFFFFF} no podrás tener ropa de mecánico.\n{00CC00}-{FFFFFF}Tampoco podrás ingresar con otros uniformes.");
	ShowPlayerDialog(playerid, DROBO, DIALOG_STYLE_MSGBOX, "Información a tener en cuenta", stringg, "Aceptar","");
	return 1;
}

CMD:colega(playerid, params[])
{
	new Float:x,Float:y,Float:z,string[128],ID;
	if(PlayerInfo[playerid][pTrabajo] != T_Criminal && PlayerInfo[playerid][pTrabajo2] != T_Criminal) return 1;
	if(sscanf(params,"d",ID)) return SendClientMessage(playerid, -1,"El comando ingresado no es correcto, usa {DBED15}/colega id-o-nombre{FFFFFF} para invitar.");
	if(TieneEncargo[ID] > 0) return SendClientMessage(playerid, -1, "El jugador que deseas invitar ya tiene un encargo.");
	if(TomoEncargo[playerid] != 1) return SendClientMessage(playerid, -1, "Debes tomar primero un {DBED16}/encargo");
	GetPlayerPos(ID,x,y,z);
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z))
	{
		SendClientMessage(playerid,-1,"Esa persona está muy lejos.");
		return 0;
	}
	CriminalAceptado[playerid] = 0;
	CriminalAceptado[ID] = 0;
	format(string,128,"{00CCFF}%s{FFFFFF} te esta invitando a participar de un encargo\n{DBED16}¿Aceptas la invitacion?",PlayerName(playerid));
	ShowPlayerDialog(ID, INVITARCRI, DIALOG_STYLE_MSGBOX, "Invitación recibida", string, "Aceptar","Cancelar");
	Invito[playerid] = ID;
	Invitador[ID] = playerid;
	SendClientMessage(playerid,0x0CF22BFF,"Invitacion enviada.");
	return 1;
}
CMD:hablar(playerid, params[])
{
	if(ProxDetectorS(2.5,playerid, Camello))
	{
		if(PlayerInfo[playerid][pCargos] > 0)
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(PlayerInfo[i][pDuty] == 1) return SetPlayerChatBubble(Camello, "Ahora no, nos están viendo.", -1, 30.0, 5000);
			}
		}
		if(PuntosCamello(Camello) == -1) return SetPlayerChatBubble(Camello, "Ven... Sígueme.", -1, 30.0, 5000);
		ShowPlayerDialog(playerid, COMPRARCAMELLO, DIALOG_STYLE_LIST, "Camello", "Comprar\nVender", "Aceptar" , "Cancelar");
	}
	else
	{
		if(Muriendo[playerid] == 1 || Consumible[playerid] == 1 || VariableCaido[playerid] == 1 || Esposando[playerid] == 2 || recogiendo[playerid] > 0) return 1;
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			ApplyAnimation(playerid,"PED","IDLE_chat",4.1,7,5,1,1,1);
			ApplyAnimation(playerid,"PED","IDLE_chat",4.1,7,5,1,1,1);
		}
	}
	return 1;
}
CMD:quien(playerid,params[])
{
	new string[200],id;
	if(PlayerInfo[playerid][pDuty] != 1) return 1;
	if(sscanf(params,"d",id)) return SendClientMessage(playerid,-1,"Escribe {DBED16} /quien {FFFFFF}[{DBED16}ID{FFFFFF}]");
	{
		if(PlayerInfo[id][pCargos] == 0) return SendClientMessage(playerid,-1,"Este jugador no tiene cargos");
		format(string,200,"Los cargos los coloco: {DBED16}%s{FFFFFF}, el jugador tiene {FF3300}%d{FFFFFF} cargos",PlayerInfo[id][QuienC],PlayerInfo[id][pCargos]);
		SendClientMessage(playerid,-1,string);
	}
	return 1;
}
CMD:tirar(playerid,params[])
{
	new nombre[128],pName[24],Float:Pos[3];
	GetPlayerName(playerid,pName,24);
	if(GetPlayerState(playerid) == 2 || GetPlayerState(playerid) == 3) return SendClientMessage(playerid, -1, "No puedes tirar cosas estando en un vehiculo.");
    GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
	if(!sscanf(params,"s[128]",nombre))
	{
	    for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(PlayerInfo[i][pDuty] == 1 && i != playerid)
			{
				if(IsPlayerInRangeOfPoint(i,40.0,Pos[0],Pos[1],Pos[2])) return SendClientMessage(playerid,-1,"No puedes tirar el arma, la policía te está viendo.");
			}
		}
	    if(strcmp(nombre,	"ramo-de-flores",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP10] != 14) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,14);
			AccionesRol(playerid,"tira su ramo de flores al suelo.", 20);
		}
		if(strcmp(nombre,	"palo-de-golf",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP1] != 2) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,2);
			AccionesRol(playerid,"tira su palo de golf al suelo.", 20);
		}
	    if(strcmp(nombre,	"granada",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP8] != 16) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,16);
			AccionesRol(playerid,"tira su granada al suelo.", 20);
		}
	    if(strcmp(nombre,	"Consolador-rosa",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP10] != 10) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,10);
			AccionesRol(playerid,"tira su consolador rosa al suelo.", 20);
		}
		if(strcmp(nombre,	"Vibrador-blanco",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP10] != 11) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,11);
			AccionesRol(playerid,"tira su vibrador blanco al suelo.", 20);
		}
		if(strcmp(nombre,	"Gran-vibrador-blanco",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP10] != 12) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,12);
			AccionesRol(playerid,"tira su gran vibrador blanco al suelo.", 20);
		}
		if(strcmp(nombre,	"Vibrador-plateado",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP10] != 13) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,13);
			AccionesRol(playerid,"tira su vibrador plateado al suelo.", 20);
		}
		if(strcmp(nombre,	"manopla",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP0] != 1) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,1);
			AccionesRol(playerid,"tira su manopla al suelo.", 20);
		}
		if(strcmp(nombre,	"bate-de-beisbol",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP1] != 5) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,5);
			AccionesRol(playerid,"tira su bate de beibol al suelo.", 20);
		}
		else if(strcmp(nombre,	"pala",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP1] != 6) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,6);
			AccionesRol(playerid,"tira su pala al suelo.", 20);
		}
		else if(strcmp(nombre,	"camara",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP9] != 43) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,43);
			AccionesRol(playerid,"tira su cámara al suelo.", 20);
		}
		else if(strcmp(nombre,	"desert-eagle",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP2] != 24) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,24);
			AccionesRol(playerid,"tira su desert eagle al suelo.", 20);
		}
		else if(strcmp(nombre,	"9mm",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP2] != 22) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,22);
			AccionesRol(playerid,"tira su 9mm al suelo.", 20);
		}
		else if(strcmp(nombre,	"9mm-silenciada",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP2] != 23) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,23);
			AccionesRol(playerid,"tira su 9mm silenciada al suelo.", 20);
		}
		else if(strcmp(nombre,	"escopeta",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP3] != 25) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,25);
			AccionesRol(playerid,"tira su escopeta al suelo.", 20);
		}
		else if(strcmp(nombre,	"cuchillo",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP1] != 4) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,4);
			AccionesRol(playerid,"tira su cuchillo al suelo.", 20);
		}
		else if(strcmp(nombre,	"katana",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP1] != 8) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,8);
			AccionesRol(playerid,"tira su katana al suelo.", 20);
		}
		else if(strcmp(nombre,	"escopeta-de-combate",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP3] != 27) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,27);
			AccionesRol(playerid,"tira su escopeta de combate al suelo.", 20);
		}
		else if(strcmp(nombre,	"mp5",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP4] != 29) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,29);
			AccionesRol(playerid,"tira su mp5 al suelo.", 20);
		}
		else if(strcmp(nombre,	"m4",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP5] != 31) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,31);
			AccionesRol(playerid,"tira su M4 al suelo.", 20);
		}
		else if(strcmp(nombre,	"ak-47",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP5] != 30) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,30);
			AccionesRol(playerid,"tira su AK-47 al suelo.", 20);
		}
		else if(strcmp(nombre,	"rifle",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP6] != 33) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,33);
			AccionesRol(playerid,"tira su rifle al suelo.", 20);
		}
		else if(strcmp(nombre,	"tec9",	true) == 0)
		{
			if(PlayerInfo[playerid][pWP4] != 28) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			QuitarArma(playerid,28);
			AccionesRol(playerid,"tira su Tec9 al suelo.", 20);
		}
		else if(strcmp(nombre,	"bidon",	true) == 0)
		{
			if(Bidon[playerid] == 0) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			Bidon[playerid] = 0;
			RemovePlayerAttachedObject(playerid, 2);
			AccionesRol(playerid,"tira un bidón de gasolina al suelo.", 20);
		}
		else if(strcmp(nombre,	"objeto",	true) == 0)
		{
			if(Objeto[playerid] == 0 && TieneBarril[playerid] == 0 && TieneCajaMeta[playerid] == 0 && TraeDinero[playerid] == 0) return SendClientMessage(playerid,-1,"No puedes tirar algo que no tienes.");
			Objeto[playerid] = 0;
			TieneBarril[playerid] = 0;
			TieneCajaMeta[playerid] = 0;
			TraeDinero[playerid] = 0;
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(playerid,2);
			AccionesRol(playerid,"deja un objeto en el suelo.", 20);
		}
	}
	else SendClientMessage(playerid,-1,"Usa {DBED15}/tirar nombre-del-arma{FFFFFF} (Recuerda usar guiones - en lugar de espacios) o {DBED15}/tirar bidon{FFFFFF}.");
	return 1;
}
CMD:escapar(playerid,params[])
{
	new pName[24];
	if(IsPlayerInRangeOfPoint(playerid,2.0,-2278.8904,-10.3138,38.2993))
	{
		if(Objeto[playerid] > 0)
		{
			GetPlayerName(playerid,pName,24);
			AccionesRol(playerid,"dejó un objeto en el suelo.", 20);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(playerid,2);
			Objeto[playerid] = 0;
			SetPlayerPos(playerid,-2277.1763,-9.9763,38.2523);
		}
		else
		{
			SetPlayerPos(playerid,-2277.1763,-9.9763,38.2523);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,2.0,	932.2437,1975.8787,11.6227))
	{
		if(Objeto[playerid] > 0)
		{
			GetPlayerName(playerid,pName,24);
			AccionesRol(playerid,"dejó un objeto en el suelo.", 20);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(playerid,2);
			Objeto[playerid] = 0;
			SetPlayerPos(playerid,931.9277,1973.0038,11.3073);
		}
		else
		{
			SetPlayerPos(playerid,931.9277,1973.0038,11.3073);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,2.0,	-2396.0010,-13.0565,35.3486))
	{
		if(Objeto[playerid] > 0)
		{
			GetPlayerName(playerid,pName,24);
			AccionesRol(playerid,"dejó un objeto en el suelo.", 20);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(playerid,2);
			Objeto[playerid] = 0;
			SetPlayerPos(playerid,-2393.9712,-13.1641,35.3125);
		}
		else
		{
			SetPlayerPos(playerid,-2393.9712,-13.1641,35.3125);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,2.0,	2373.7302,-1136.8610,30.0583))
	{
		if(Objeto[playerid] > 0)
		{
			GetPlayerName(playerid,pName,24);
			AccionesRol(playerid,"dejó un objeto en el suelo.", 20);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(playerid,2);
			Objeto[playerid] = 0;
			SetPlayerPos(playerid,2373.8467,-1139.5442,30.0510);
		}
		else
		{
			SetPlayerPos(playerid,2373.8467,-1139.5442,30.0510);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,2.0,	-2729.9800,-50.8513,7.0453))
	{
		if(Objeto[playerid] > 0)
		{
			GetPlayerName(playerid,pName,24);
			AccionesRol(playerid,"dejó un objeto en el suelo.", 20);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(playerid,2);
			Objeto[playerid] = 0;
			SetPlayerPos(playerid,-2727.5435,-50.9449,7.0301);
		}
		else
		{
			SetPlayerPos(playerid,-2727.5435,-50.9449,7.0301);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,2.0,	-2730.4609,-155.6674,7.2174))
	{
		if(Objeto[playerid] > 0)
		{
			GetPlayerName(playerid,pName,24);
			AccionesRol(playerid,"dejó un objeto en el suelo.", 20);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(playerid,2);
			Objeto[playerid] = 0;
			SetPlayerPos(playerid,-2727.5054,-155.6168,7.2009);
		}
		else
		{
			SetPlayerPos(playerid,-2727.5054,-155.6168,7.2009);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,1.0,	-2622.0754,-173.1688,4.7835))
	{
		if(Objeto[playerid] > 0)
		{
			GetPlayerName(playerid,pName,24);
			AccionesRol(playerid,"dejó un objeto en el suelo.", 20);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(playerid,2);
			Objeto[playerid] = 0;
			SetPlayerPos(playerid,-2620.3281,-173.2179,4.8790);
		}
		else
		{
			SetPlayerPos(playerid,-2620.3281,-173.2179,4.8790);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,1.0,	2485.0527,-1995.0458,14.0434))
	{
		if(Objeto[playerid] > 0)
		{
			GetPlayerName(playerid,pName,24);
			AccionesRol(playerid,"dejó un objeto en el suelo.", 20);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(playerid,2);
			Objeto[playerid] = 0;
			SetPlayerPos(playerid,2485.1733,-1997.1724,13.9166);
		}
		else
		{
			SetPlayerPos(playerid,2485.1733,-1997.1724,13.9166);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,1.0,	-1449.7598,2647.9287,56.5345))
	{
		if(Objeto[playerid] > 0)
		{
			GetPlayerName(playerid,pName,24);
			AccionesRol(playerid,"dejó un objeto en el suelo.", 20);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(playerid,2);
			Objeto[playerid] = 0;
			SetPlayerPos(playerid,-1448.9193,2647.9514,56.4912);
		}
		else
		{
			SetPlayerPos(playerid,-1448.9193,2647.9514,56.4912);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,1.0,	1762.7701,-2098.9631,13.9989))
	{
		if(Objeto[playerid] > 0)
		{
			GetPlayerName(playerid,pName,24);
			AccionesRol(playerid,"dejó un objeto en el suelo.", 20);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(playerid,2);
			Objeto[playerid] = 0;
			SetPlayerPos(playerid,1762.8772,-2101.1462,13.9916);
		}
		else
		{
			SetPlayerPos(playerid,1762.8772,-2101.1462,13.9916);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,1.0,	1841.8738,770.7863,11.5959))
	{
		if(Objeto[playerid] > 0)
		{
			GetPlayerName(playerid,pName,24);
			AccionesRol(playerid,"dejó un objeto en el suelo.", 20);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(playerid,2);
			Objeto[playerid] = 0;
			SetPlayerPos(playerid,1844.5101,770.9579,11.4838);
		}
		else
		{
			SetPlayerPos(playerid,1844.5101,770.9579,11.4838);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,1.0,	1344.4647,2612.5925,11.5559))
	{
		if(Objeto[playerid] > 0)
		{
			GetPlayerName(playerid,pName,24);
			AccionesRol(playerid,"dejó un objeto en el suelo.", 20);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(playerid,2);
			Objeto[playerid] = 0;
			SetPlayerPos(playerid,1344.6938,2610.3264,11.5494);
		}
		else
		{
			SetPlayerPos(playerid,1344.6938,2610.3264,11.5494);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,1.0,	1666.9180,2612.6965,11.5559))
	{
		if(Objeto[playerid] > 0)
		{
			GetPlayerName(playerid,pName,24);
			AccionesRol(playerid,"dejó un objeto en el suelo.", 20);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(playerid,2);
			Objeto[playerid] = 0;
			SetPlayerPos(playerid,1667.0402,2610.3267,11.5494);
		}
		else
		{
			SetPlayerPos(playerid,1667.0402,2610.3267,11.5494);
		}
	}
	return 1;
}
CMD:robar(playerid, params[])
{
	new item[20];
	if(PlayerInfo[playerid][@Nivel] < 3 && PlayerInfo[playerid][pVip] == 0) return SendClientMessage(playerid,-1,"Solamente jugadores VIP2 o de nivel 3 en adelante pueden robar casas.");
	if(!sscanf(params,"s[20]",item))
	{
	    if(strcmp(item,	"bolsas",	true) == 0)
		{
			if(YaRobastes[playerid] == 1) return SendClientMessage(playerid,-1,"Ya tomastes una bolsa de dinero, no puedes cargar más.");
			if(SePuedeRobar == 0) return SendClientMessage(playerid,-1,"El camión está sellado, para abrirlo utiliza {FF0000}/detonar.");
			if(GetPlayerWeapon(playerid) == 27 || GetPlayerWeapon(playerid) == 31 || GetPlayerWeapon(playerid) == 30)
			{
				if(IsPlayerInRangeOfPoint(playerid, 3.0, 1674.6251,-73.4099,35.7290))
				{
					new RoboB = random(4);
					switch(RoboB)
					{
						case 0: Bolsa[playerid] = 150000;
						case 1: Bolsa[playerid] = 250000;
						case 2: Bolsa[playerid] = 200000;
						case 3: Bolsa[playerid] = 350000;
						case 4: Bolsa[playerid] = 400000;
					}
					new string5[256],string60[256],string4[256];
					format(string5, sizeof(string5), "{3399FF}[Radio de policía] {FFFFFF} A todas las unidades informan un robo en progreso en unos de los casinos de LV.",playerid);
					SendRadioMessage(1, -1, string5,playerid);
					format(string60,256,"Robastes una bolsa con {FBFE01}%d${FFFFFF} escapa de la zona rápido.",Bolsa[playerid]);
					SendClientMessage(playerid, -1, string60);
					SendClientMessage(playerid,-1,"Tendras que escapar de la policia {FBFE01}20 minutos{FFFFFF} para poder recibir el dinero.");
					PlayerInfo[playerid][pCargos] = 6;
					SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos]);
					SetTimerEx("DarDineroRobo",1200000,false,"d",playerid);
					ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
					YaRobastes[playerid] = 1;
					SetPlayerAttachedObject(playerid, 2, 1550, 1, 0.0000, -0.0954, -0.0012, 359.8081, 89.4325, 358.1167);
					format(string4,256,"%s toma un bolso y comienza a guardar el dinero.",PlayerName(playerid));
					ProxDetector(15.0, playerid, string4, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
			}
		}
		if(strcmp(item,	"objeto",	true) == 0)
		{
			if(RobadoReciente[playerid] == 1) return SendClientMessage(playerid,-1,"Tu personaje está cansado, vuelve a intentarlo en unos segundos.");
			if(IsPlayerInRangeOfPoint(playerid, 2.0,-2279.4539,-15.9261,38.2993))
			{
				if(CasaAbierta == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos.");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro.");
				if(!IsValidDynamicObject(T1) && !IsValidDynamicObject(T2) && !IsValidDynamicObject(T3) && !IsValidDynamicObject(T4) && !IsValidDynamicObject(T5) && !IsValidDynamicObject(T6) && !IsValidDynamicObject(T7)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");
				if(IsValidDynamicObject(T1))
				{
					if(IsPlayerInRangeOfPoint(playerid, 1.5, -2280.60376, -14.82680, 38.03000))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T1);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T2))
				{
					if(IsPlayerInRangeOfPoint(playerid, 1.5, -2280.63721, -16.44526, 38.05420))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T2);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T3))
				{
					if(IsPlayerInRangeOfPoint(playerid, 1.5, -2278.36792, -14.86620, 37.29990))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T3);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T4))
				{
					if(IsPlayerInRangeOfPoint(playerid, 1.5, -2280.72827, -15.26394, 37.77455))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T4);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 );
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidDynamicObject(T5))
				{
					if(IsPlayerInRangeOfPoint(playerid,1.5, -2280.53418, -16.19723, 37.44304))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T5);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T6))
				{
					if(IsPlayerInRangeOfPoint(playerid, 1.5, -2278.22900, -16.77450, 37.40304))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T6);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T7))
				{
					if(IsPlayerInRangeOfPoint(playerid,1.5, -2280.39893, -14.92786, 37.45214))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T7);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,940.9933,1975.9020,11.6227))
			{
				if(CasaAbierta2 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidDynamicObject(T12) && !IsValidDynamicObject(T22) && !IsValidDynamicObject(T32) && !IsValidDynamicObject(T42) && !IsValidDynamicObject(T52) && !IsValidDynamicObject(T62) && !IsValidDynamicObject(T72)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");
				if(IsValidDynamicObject(T12))
				{
					if(IsPlayerInRangeOfPoint(playerid, 1.5, 942.56305, 1976.67395, 11.34690))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T12);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T22))
				{


					if(IsPlayerInRangeOfPoint(playerid, 1.5, 942.44531, 1974.96301, 11.42232))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T22);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T32))
				{


					if(IsPlayerInRangeOfPoint(playerid, 1.5, 939.79364, 1974.82947, 10.62529))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T32);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 );
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T42))
				{


					if(IsPlayerInRangeOfPoint(playerid, 1.5, 939.99139, 1977.32190, 11.11951))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T42);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 );
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidDynamicObject(T52))
				{


					if(IsPlayerInRangeOfPoint(playerid,1.5, 942.32104, 1976.73279, 10.83022))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T52);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 );
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T62))
				{


					if(IsPlayerInRangeOfPoint(playerid, 1.5, 940.09308, 1977.05005, 10.82510))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T62);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 );
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T72))
				{


					if(IsPlayerInRangeOfPoint(playerid,1.5, 942.38721, 1975.06116, 10.73031))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T72);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); //
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,-2395.5342,-17.3052,35.3740))
			{


				if(CasaAbierta3 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidDynamicObject(T13) && !IsValidDynamicObject(T23) && !IsValidDynamicObject(T33) && !IsValidDynamicObject(T43) && !IsValidDynamicObject(T53) && !IsValidDynamicObject(T63) && !IsValidDynamicObject(T73)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");
				if(IsValidDynamicObject(T13))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2394.00562, -15.47150, 36.23100))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T13);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 );
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T23))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2395.78857, -15.53133, 36.23100))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T23);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T33))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2395.92505, -19.09909, 34.42548))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T33);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T43))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2394.71484, -15.21817, 35.98800))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T43);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 );
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidDynamicObject(T53))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0, -2395.75928, -15.45650, 35.19190))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T53);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T63))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2394.01709, -15.45650, 35.19190))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T63);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T73))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0,  -2394.86279, -15.45650, 35.19190))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T73);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,2369.2874,-1129.8945,30.0510))
			{
				if(CasaAbierta4 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidDynamicObject(T14) && !IsValidDynamicObject(T24) && !IsValidDynamicObject(T34) && !IsValidDynamicObject(T44) && !IsValidDynamicObject(T54) && !IsValidDynamicObject(T64) && !IsValidDynamicObject(T74)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");
				if(IsValidDynamicObject(T14))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 2368.61401, -1131.40259, 30.97320))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T14);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T24))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 2370.30200, -1131.43127, 30.97320))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T24);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T34))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 2370.40674, -1129.14221, 28.96821))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T34);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T44))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 2369.12378, -1131.64221, 30.68020))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T44);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 );
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidDynamicObject(T54))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0, 2368.51880, -1131.42798, 29.94000))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T54);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T64))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 2370.12720, -1131.46106, 29.94000))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T64);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T74))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0,  2369.39893, -1131.51331, 29.46600))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T74);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,-2730.4619,-58.3389,7.0453))
			{
				if(CasaAbierta5 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidDynamicObject(T15) && !IsValidDynamicObject(T25) && !IsValidDynamicObject(T35) && !IsValidDynamicObject(T45) && !IsValidDynamicObject(T55) && !IsValidDynamicObject(T65) && !IsValidDynamicObject(T75)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");
				if(IsValidDynamicObject(T15))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2730.06982, -59.74450, 7.20490))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T15);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T25))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2731.72534, -59.64209, 7.20490))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T25);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T35))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2731.85327, -57.35418, 6.03176))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T35);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T45))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2731.16846, -59.89901, 6.93235))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T45);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 );
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidDynamicObject(T55))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0, -2730.06030, -59.85120, 6.16510))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T55);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T65))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2730.97656, -59.74975, 6.60280))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T65);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T75))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0,  -2731.64380, -59.69650, 6.16510))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T75);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,-2731.8608,-163.3383,7.2174))
			{
				if(CasaAbierta6 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidDynamicObject(T16) && !IsValidDynamicObject(T26) && !IsValidDynamicObject(T36) && !IsValidDynamicObject(T46) && !IsValidDynamicObject(T56) && !IsValidDynamicObject(T66) && !IsValidDynamicObject(T76)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");
				if(IsValidDynamicObject(T16))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2731.07056, -164.54240, 7.68000))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T16);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T26))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2732.74170, -164.46756, 7.68000))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T26);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T36))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2733.24390, -163.87219, 6.20990))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T36);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T46))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2732.13647, -164.68983, 7.42307))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T46);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 );
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidDynamicObject(T56))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0, -2731.10449, -164.46933, 7.08504))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T56);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T66))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2731.81323, -164.44690, 6.67120))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T66);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T76))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0,  -2732.57373, -164.33932, 7.12180))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T76);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,2481.6006,-1988.2667,13.6347))
			{
				if(CasaAbierta8 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidDynamicObject(T18) && !IsValidDynamicObject(T28) && !IsValidDynamicObject(T38) && !IsValidDynamicObject(T48) && !IsValidDynamicObject(T58) && !IsValidDynamicObject(T68) && !IsValidDynamicObject(T78) && !IsValidDynamicObject(T88)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");
				if(IsValidDynamicObject(T18))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 2481.20239, -1987.11511, 14.57980))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T18);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T28))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 2482.81030, -1987.17395, 14.59980))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T28);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T38))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 2483.55371, -1988.90125, 12.62243))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T38);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T48))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 2482.27319, -1986.94861, 14.31840))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T48);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 );
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidDynamicObject(T58))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0, 2481.10767, -1987.15283, 13.52780))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T58);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T68))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 2481.93018, -1987.23987, 13.08109))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T68);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T78))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0,  2482.70459, -1987.20215, 13.52780))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T78);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T88))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0,   2481.90552, -1987.28687, 13.89582))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T88);
						SetPlayerAttachedObject(playerid, 2, 2226, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 2226;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,1757.1731,-2093.3801,13.9916))//casa7
			{
				if(CasaAbierta7 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidDynamicObject(T17) && !IsValidDynamicObject(T27) && !IsValidDynamicObject(T37) && !IsValidDynamicObject(T47) && !IsValidDynamicObject(T57) && !IsValidDynamicObject(T67) && !IsValidDynamicObject(T77)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");
				if(IsValidDynamicObject(T17))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 1758.10046, -2094.56860, 14.84190))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T17);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T27))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 1757.27979, -2094.54028, 14.86940))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T27);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T37))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 1756.40784, -2093.84546, 12.97720))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T37);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T47))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 1756.16321, -2094.66846, 14.58550))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T47);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 );
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidDynamicObject(T57))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0, 1757.77637, -2094.57056, 14.23650))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T57);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T67))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 1756.81677, -2094.56934, 14.25400))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T67);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T77))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0,  1757.29041, -2094.61108, 13.80020))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T77);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
			}

			else if(IsPlayerInRangeOfPoint(playerid, 2.0,1842.3849,767.6443,11.5541))//casa9
			{
				if(CasaAbierta9 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidDynamicObject(T19) && !IsValidDynamicObject(T29) && !IsValidDynamicObject(T39) && !IsValidDynamicObject(T49) && !IsValidDynamicObject(T59) && !IsValidDynamicObject(T69) && !IsValidDynamicObject(T79)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");
				if(IsValidDynamicObject(T19))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 1841.54749, 768.94519, 12.49500))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T19);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T29))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 1842.49048, 768.88428, 12.51880))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T29);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T39))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 1843.43506, 768.10840, 10.54610))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T39);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T49))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 1843.46643, 769.13379, 12.23620))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T49);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 );
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidDynamicObject(T59))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0, 1842.00537, 768.90112, 11.88750))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T59);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T69))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 1843.04565, 769.07501, 11.90490))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T69);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T79))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0,  1842.38196, 769.15088, 11.42320))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T79);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,1356.2726,2612.3572,11.5559))//casa11
			{
				if(CasaAbierta11 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidDynamicObject(T111) && !IsValidDynamicObject(T211) && !IsValidDynamicObject(T311) && !IsValidDynamicObject(T411) && !IsValidDynamicObject(T511) && !IsValidDynamicObject(T611) && !IsValidDynamicObject(T711)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");
				if(IsValidDynamicObject(T111))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 1355.97156, 2613.77515, 12.45300))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T111);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T211))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 1356.83423, 2613.72314, 12.47980))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T211);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T311))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 1354.72119, 2613.42578, 11.02990))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T311);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T411))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 1357.78296, 2613.98975, 12.19500))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T411);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 );
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidDynamicObject(T511))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0, 1356.28943, 2613.73511, 11.84600))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T511);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T611))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 1357.32434, 2613.74854, 11.86400))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T611);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T711))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0,  1356.62915, 2613.61646, 11.40970))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T711);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
			}

			else if(IsPlayerInRangeOfPoint(playerid, 2.0,1679.0400, 2613.6699, 11.4100))//casa12
			{
				if(CasaAbierta12 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidDynamicObject(T112) && !IsValidDynamicObject(T212) && !IsValidDynamicObject(T312) && !IsValidDynamicObject(T412) && !IsValidDynamicObject(T512) && !IsValidDynamicObject(T612) && !IsValidDynamicObject(T712)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");
				if(IsValidDynamicObject(T112))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 1678.29834, 2613.74878, 12.45260))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T112);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T212))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 1679.14563, 2613.73535, 12.48270))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T212);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T312))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 1677.09839, 2613.43970, 11.03870))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T312);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T412))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 1680.08850, 2613.91479, 12.19470))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T412);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 );
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidDynamicObject(T512))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0, 1678.56201, 2613.76880, 11.84410))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T512);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T612))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 1679.57751, 2613.75708, 11.86450))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T612);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T712))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0,  1678.98792, 2613.76904, 11.41040))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T712);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,-1449.5641,2644.4102,56.5616))
			{
				new Float:Px[8],Float:Py[8],Float:Pz[8];
				GetObjectPos(T110, Px[0],Py[0],Pz[0]);
				GetObjectPos(T210, Px[1],Py[1],Pz[1]);
				GetObjectPos(T310, Px[2],Py[2],Pz[2]);
				GetObjectPos(T410, Px[3],Py[3],Pz[3]);
				GetObjectPos(T510, Px[4],Py[4],Pz[4]);
				GetObjectPos(T610, Px[5],Py[5],Pz[5]);
				GetObjectPos(T710, Px[6],Py[6],Pz[6]);
				GetObjectPos(T810, Px[7],Py[7],Pz[7]);
				if(CasaAbierta10 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos.");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro.");
				if(!IsValidDynamicObject(T110) && !IsValidDynamicObject(T210) && !IsValidDynamicObject(T310) && !IsValidDynamicObject(T410) && !IsValidDynamicObject(T510) && !IsValidDynamicObject(T610) && !IsValidDynamicObject(T710) && !IsValidDynamicObject(T810)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");
				if(IsValidDynamicObject(T110))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0,  Px[0],Py[0],Pz[0]))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T110);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T210))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0,Px[1],Py[1],Pz[1]))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T210);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T310))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, Px[2],Py[2],Pz[2]))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T310);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T410))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, Px[3],Py[3],Pz[3]))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T410);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 );
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidDynamicObject(T510))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0, Px[4],Py[4],Pz[4]))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T510);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T610))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, Px[5],Py[5],Pz[5]))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T610);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T710))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0,  Px[6],Py[6],Pz[6]))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T710);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
				if(IsValidDynamicObject(T810))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0,   Px[7],Py[7],Pz[7]))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyDynamicObject(T810);
						SetPlayerAttachedObject(playerid, 2, 2226, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 2226;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
					    SendClientMessage(playerid,-1,"Tienes que {DBED16}/baul guardar objeto{FFFFFF} en un baúl y escapar antes que llegue la policía.");
						return 1;
					}
				}
			}
			else return SendClientMessage(playerid,-1,"No estas en ningun lugar de robo.");
		}
	}
	return 1;
}
CMD:revisar(playerid,params[])
{
	new Float:Pos[3],autoid,string[256],texto[10],id;
	if(!sscanf(params,"s[10]d",texto,id))
	{
		if(strcmp(texto,"paciente",	true) == 0)
		{
			if(PlayerInfo[playerid][pTrabajo] != T_Medico && PlayerInfo[playerid][pTrabajo2] != T_Medico) return SendClientMessage(playerid,-1,"Necesitas el trabajo de médico para utilizar este comando");
			if(GetPlayerSkin(playerid) == 274 || GetPlayerSkin(playerid) == 275 || GetPlayerSkin(playerid) == 276 || GetPlayerSkin(playerid) == 308)
			{
				if(PlayerInfo[id][pEnfermedad] == 0) return 1;
				if(PlayerInfo[id][pAtendido] == 1) return SendClientMessage(playerid,-1,"El paciente ya fue atendido");
				new enfermedad[32],pName[24];
				GetPlayerName(playerid,pName,24);
				GetPlayerPos(id,Pos[0],Pos[1],Pos[2]);
				format(enfermedad,sizeof(enfermedad),"%s",Enfermedades(playerid));
				if(IsPlayerInRangeOfPoint(playerid, 2.0, Pos[0],Pos[1],Pos[2]))
				{
					format(string,sizeof(string),"El paciente presenta %s",enfermedad);
					SendClientMessage(playerid,-1,string);
					AccionesRol(playerid,"observa al paciente y procede a revisarlo.", 20);
				}
			}
			else return SendClientMessage(playerid,-1,"Necesitas tener la ropa de médico para utilizar este comando");
		}
		if(strcmp(texto,"camion",	true) == 0)
		{
		    new Float:VPos[3],pName[32];
		    if(PlayerInfo[playerid][pDuty] != 1) return 1;
			for(new i = 0;i<MAX_VEHICLES;i++)
   			{
          		if(CAMION(i))
				{
				    GetPlayerName(Chofer[i], pName, 32);
					new stringas[128];
					GetVehiclePos(i,VPos[0],VPos[1],VPos[2]);
					if(IsPlayerInRangeOfPoint(playerid,1.0,VPos[0],VPos[1],VPos[2]))
					{
					    ActualizarPuerta(i, 2);
						ActualizarPuerta(i, 3);
					    format(stringas, sizeof(stringas), "Camión de carga número: {00cc00}%d{FFFFFF} | Contenido: {00CC00}%sNinguno {FFFFFF}| Chofer: {00cc00}%s", i-28, GetContenido(i), pName);
						SendClientMessage(playerid, -1,stringas);
					}
				}
			}
		}
	}
	else if(!sscanf(params,"s[8]d",texto))
	{
		if(strcmp(texto,"camion",	true) == 0)
		{
		    new Float:VPos[3],pName[32];
		    if(PlayerInfo[playerid][pDuty] != 1) return 1;
			for(new i = 0;i<MAX_VEHICLES;i++)
   			{
          		if(CAMION(i))
				{
				    GetPlayerName(Chofer[i], pName, 32);
					new stringas[128];
					GetVehiclePos(i,VPos[0],VPos[1],VPos[2]);
					if(IsPlayerInRangeOfPoint(playerid,10.0,VPos[0],VPos[1],VPos[2]))
					{
					    format(stringas, sizeof(stringas), "Camión de carga número: {00cc00}%d{FFFFFF} | Contenido: {00CC00}%s {FFFFFF}| Chofer: {00cc00}%s", i-28, CamionCargado[i], pName);
						SendClientMessage(playerid, -1,stringas);
					}
				}
			}
		}
	}
	else if(sscanf(params,"s[10]d",texto,id))
	{
		if(PlayerInfo[playerid][pTrabajo] != T_Mecanico && PlayerInfo[playerid][pTrabajo2] != T_Mecanico) return SendClientMessage(playerid,-1,"Debes ser mecánico para utilizar este comando");
		{
		    if(RopaMeca[playerid] == 0 && PlayerInfo[playerid][pVip] == 0) return SendClientMessage(playerid, -1, "Necesitar usar la ropa de mecánico para poder reparar un vehiculo.");
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(LlamadaMeca[i] == 1 && IsPlayerInAnyVehicle(i))
				{
					GetPlayerPos(i, Pos[0],Pos[1],Pos[2]);
					if(IsPlayerInRangeOfPoint(playerid, 7.0, Pos[0],Pos[1],Pos[2]))
					{
						autoid = GetPlayerVehicleID(i);
						if(Capo[autoid] != 1) return SendClientMessage(playerid,-1,"El capo del vehículo debe estar abierto");
						{
							if(autoid <= AUTOS)
							{
								SendClientMessage(playerid,-1,"El vehículo necesita {00CC00}0{FFFFFF} repuestos.");
								MRepuestos[playerid] = 0;
								return 1;
							}
							else
							{
								foreach(Player,u)
								{
									if(autos[u] == autoid)
									{
										new repuestos = PlayerInfo[u][vPrecio]/5000;
										format(string,256,"Este vehículo necesita {00CC00}%d{FFFFFF} repuestos.",repuestos);
										SendClientMessage(playerid,-1,string);
										MRepuestos[playerid] = repuestos;
										return 1;
									}
									if(autos2[u] == autoid)
									{
										new repuestos = PlayerInfo[u][v2Precio]/5000;
										format(string,256,"Este vehículo necesita {00CC00}%d{FFFFFF} repuestos.",repuestos);
										SendClientMessage(playerid,-1,string);
										MRepuestos[playerid] = repuestos;
										return 1;
									}
									if(autos3[u] == autoid)
									{
										new repuestos = PlayerInfo[u][v3Precio]/5000;
										format(string,256,"Este vehículo necesita {00CC00}%d{FFFFFF} repuestos.",repuestos);
										SendClientMessage(playerid,-1,string);
										MRepuestos[playerid] = repuestos;
										return 1;
									}
									if(autos4[u] == autoid)
									{
										new repuestos = PlayerInfo[u][v4Precio]/5000;
										format(string,256,"Este vehículo necesita {00CC00}%d{FFFFFF} repuestos.",repuestos);
										SendClientMessage(playerid,-1,string);
										MRepuestos[playerid] = repuestos;
										return 1;
									}
								}
							}
						}
					}
				}
			}
		}
	}
	else SendClientMessage(playerid,-1,"Necesitas el trabajo de mecánico para revisar motores de vehículos.");
	return 1;
}
CMD:reparar(playerid,params[])
{
	new Float:Pos[3],autoid,precio,string[256],pName[50], item[32];
	GetPlayerName(playerid,pName,50);
	if(!sscanf(params,"d",precio))
	{
		if(precio < 0) return SendClientMessage(playerid,-1,"Monto inválido");
		if(RopaMeca[playerid] == 0 && PlayerInfo[playerid][pVip] == 0) return SendClientMessage(playerid, -1, "Necesitar usar la ropa de mecánico para poder reparar un vehiculo.");
		if(PlayerInfo[playerid][pTrabajo] != T_Mecanico && PlayerInfo[playerid][pTrabajo2] != T_Mecanico) return SendClientMessage(playerid,-1,"Debes ser mecánico para utilizar este comando");
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(LlamadaMeca[i] == 1 && IsPlayerInAnyVehicle(i))
				{
					GetPlayerPos(i, Pos[0],Pos[1],Pos[2]);
					if(IsPlayerInRangeOfPoint(playerid, 7.0, Pos[0],Pos[1],Pos[2]))
					{
						autoid = GetPlayerVehicleID(i);
						if(Capo[autoid] == 1)
						{
							for(new u=0;u<MAX_PLAYERS;u++)
							{
							    if(GetPlayerState(u) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,-1,"El que solicitó el servicio debe estar en el asiento del conductor.");
								if(autoid == autos[u])
								{
									if(PlayerInfo[playerid][Repuestos] >= PlayerInfo[u][vPrecio]/5000)
									{
										format(string,256,"El mecánico {00CCFF}%s{FFFFFF} te ofrece reparar el vehículo por {00CC00}$%d{FFFFFF}.",pName,precio);
										SendClientMessage(i,-1,string);
										SendClientMessage(i,-1,"Para aceptar la reparación escribe {DBED16}/aceptar reparacion{FFFFFF}.");
										format(string,256,"Le ofreciste una reparación a {00CCFF}%s{FFFFFF} por {00CC00}$%d{FFFFFF}.",PlayerName(i),precio);
										SendClientMessage(playerid,-1,string);
										Mecanico[i] = playerid;
										MConductor[i] = precio;
										return 1;
									}
									else return SendClientMessage(playerid,-1,"No tienes suficientes repuestos para reparar el motor de este vehículo");
								}
								else if(autoid == autos2[u])
								{
									if(PlayerInfo[playerid][Repuestos] >= PlayerInfo[u][v2Precio]/5000)
									{
										format(string,256,"El mecánico {00CCFF}%s{FFFFFF} te ofrece reparar el vehículo por {00CC00}$%d{FFFFFF}.",pName,precio);
										SendClientMessage(i,-1,string);
										SendClientMessage(i,-1,"Para aceptar la reparación escribe {DBED16}/aceptar reparacion{FFFFFF}.");
										format(string,256,"Le ofreciste una reparación a {00CCFF}%s{FFFFFF} por {00CC00}$%d{FFFFFF}.",PlayerName(i),precio);
										SendClientMessage(playerid,-1,string);
										Mecanico[i] = playerid;
										MConductor[i] = precio;
										return 1;
									}
									else return SendClientMessage(playerid,-1,"No tienes suficientes repuestos para reparar el motor de este vehículo");
								}
								else if(autoid == autos3[u])
								{
									if(PlayerInfo[playerid][Repuestos] >= PlayerInfo[u][v3Precio]/5000)
									{
										format(string,256,"El mecánico {00CCFF}%s{FFFFFF} te ofrece reparar el vehículo por {00CC00}$%d{FFFFFF}.",pName,precio);
										SendClientMessage(i,-1,string);
										SendClientMessage(i,-1,"Para aceptar la reparación escribe {DBED16}/aceptar reparacion{FFFFFF}.");
										format(string,256,"Le ofreciste una reparación a {00CCFF}%s{FFFFFF} por {00CC00}$%d{FFFFFF}.",PlayerName(i),precio);
										SendClientMessage(playerid,-1,string);
										Mecanico[i] = playerid;
										MConductor[i] = precio;
										return 1;
									}
									else return SendClientMessage(playerid,-1,"No tienes suficientes repuestos para reparar el motor de este vehículo");
								}
								else if(autoid == autos4[u])
								{
									if(PlayerInfo[playerid][Repuestos] >= PlayerInfo[u][v4Precio]/5000)
									{

										format(string,256,"El mecánico {00CCFF}%s{FFFFFF} te ofrece reparar el vehículo por {00CC00}$%d{FFFFFF}.",pName,precio);
										SendClientMessage(i,-1,string);
										SendClientMessage(i,-1,"Para aceptar la reparación escribe {DBED16}/aceptar reparacion{FFFFFF}.");
										format(string,256,"Le ofreciste una reparación a {00CCFF}%s{FFFFFF} por {00CC00}$%d{FFFFFF}.",PlayerName(i),precio);
										SendClientMessage(playerid,-1,string);
										Mecanico[i] = playerid;
										MConductor[i] = precio;
										return 1;
									}
									else return SendClientMessage(playerid,-1,"No tienes suficientes repuestos para reparar el motor de este vehículo");
								}
								else
								{
									if(PlayerInfo[playerid][Repuestos] >= 0)
									{
										format(string,256,"El mecánico {00CCFF}%s{FFFFFF} te ofrece reparar el vehículo por {00CC00}$%d{FFFFFF}.",pName,precio);
										SendClientMessage(i,-1,string);
										SendClientMessage(i,-1,"Para aceptar la reparación escribe {DBED16}/aceptar reparacion{FFFFFF}.");
										format(string,256,"Le ofreciste una reparación a {00CCFF}%s{FFFFFF} por {00CC00}$%d{FFFFFF}.",PlayerName(i),precio);
										SendClientMessage(playerid,-1,string);
										Mecanico[i] = playerid;
										MConductor[i] = precio;
										return 1;
									}
									else return SendClientMessage(playerid,-1,"No tienes suficientes repuestos para reparar el motor de este vehículo");
								}
							}
						}
						else return SendClientMessage(playerid,-1,"El capo del vehículo debe estar abierto");
					}
				}
			}
		}
	}
	if(!sscanf(params, "s[32]", item))
	{
		if(strcmp(item, "embarcacion",true)==0)
		{
		    if(PlayerInfo[playerid][pTrabajo] != T_Mecanico && PlayerInfo[playerid][pTrabajo2] != T_Mecanico) return 1;
			if(!IsPlayerInRangeOfPoint(playerid, 20.0, 2745.3225,-2596.3396,-0.1532)) return SendClientMessage(playerid,-1,"Debes estar al lado de pesca para reparar tu bote.");
            if(!BOTE(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,-1,"Debes estar en un bote para repararlo.");
			SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
			RepairVehicle(GetPlayerVehicleID(playerid));
			return SendClientMessage(playerid, COLOR_GRAD2, "Embarcación reparada.");
		}
	}
	if(sscanf(params, "s[30]", item))
	{
		if(PlayerInfo[playerid][pTrabajo] != T_Mecanico && PlayerInfo[playerid][pTrabajo2] != T_Mecanico) return 1;
        if(TiempoReparar[playerid] == 0)
		{
		    if(PlayerInfo[playerid][Repuestos] > 10)
		    {
				if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "No estás en ningún vehículo.");
				new Float:angle;
				TogglePlayerControllable(playerid, 0);
				SetPVarInt(playerid, "IsFrozen", 0);
				GetPlayerFacingAngle(playerid,angle);
				SetPlayerFacingAngle(playerid,angle+180);
				LoopingAnim(playerid,"CAR","Fixn_Car_Loop",1,4,0,0,1,19000);
				SetTimerEx("Reparando",13000,false,"d",GetPlayerVehicleID(playerid));
				SetTimerEx("SacarJugadorAuto",13000,false,"d",playerid);
				SetTimerEx("DescongelarCBUG",13000,false,"d",playerid);
				GameTextForPlayer(playerid, "Reparando vehiculo...", 13000, 5);
				AccionesRol(playerid,"comienza a reparar el vehículo.", 20);
				PlayerInfo[playerid][Repuestos] -= 10;
				TiempoReparar[playerid] = 14;
			}
			else return SendClientMessage(playerid,-1,"No tienes los respuestos suficientes para reparar el vehículo.");
		}
		else return 1;
  	}
	return 1;
}
CMD:ficha(playerid,params[])
{
	new monto,autoid,pName[MAX_PLAYER_NAME],string[128], item[128];
	autoid = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][pTrabajo] != T_Taxista && PlayerInfo[playerid][pTrabajo2] != T_Taxista) return SendClientMessage(playerid,-1,"Necesitas ser taxista para utilizar este comando");
	if(TAXI(autoid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(!sscanf(params,"d",monto))
		{
			if(monto >= 2 && monto <= 50)
			{
				Ficha[playerid] = monto;
				GetPlayerName(playerid,pName,50);
				format(string,128,"El taxímetro de ({00cbf7}%s{FFFFFF}) fue configurado con un precio de {11FF00}$%d{FFFFFF} por ficha.",pName,monto);
				for(new i=0;i<MAX_PLAYERS;i++)
				{
					if(IsPlayerInVehicle(i,autoid))
					{
						SendClientMessage(i,-1,string);
					}
				}
				if(TAXI(autoid))
				TextDrawShowForPlayer(playerid,TAXIMET);
				TextDrawShowForPlayer(playerid,TAXIMET2[playerid]);
				TextDrawShowForPlayer(playerid,TAXIMET3);
				TextDrawShowForPlayer(playerid,TAXIMET4);
			}
			else return SendClientMessage(playerid,-1,"El precio de la ficha tiene que ser entre {11FF00}$2{FFFFFF} a {11FF00}$50{FFFFFF}.");
		}
		else if(strcmp(item,"off",true) == 0)
		{
		    Ficha[playerid] = 0;
		    GetPlayerName(playerid,pName,50);
		    format(string,128,"({00cbf7}%s{FFFFFF}) apagó el taxímetro.",pName);
		    TextDrawHideForPlayer(playerid,TAXIMET);
			TextDrawHideForPlayer(playerid,TAXIMET2[playerid]);
			TextDrawHideForPlayer(playerid,TAXIMET3);
			TextDrawHideForPlayer(playerid,TAXIMET4);
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerInVehicle(i,autoid))
				{
					SendClientMessage(i,-1,string);
				}
			}
		}
	}
	else return 1;
	return 1;
}
CMD:mecanico(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return 1;
	if(PlayerInfo[playerid][pTrabajo] != T_Mecanico && PlayerInfo[playerid][pTrabajo2] != T_Mecanico)
	{
	    SendClientMessage(playerid,-1,"Para ponerte en servicio de mecánico con su respectiva ropa, necesitas conseguir el trabajo.");
	    SendClientMessage(playerid,-1,"Usa {DBED15}/ayuda trabajos{FFFFFF} para obtener más información.");
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,84.3491,-149.0520,2.6000))
	{

		if(RopaMeca[playerid] == 0)
		{
            switch(PlayerInfo[playerid][jSexo])
			{
				case 1:
				{
					SetPlayerSkin(playerid, 50);
				}
				case 2:
				{
    				RemovePlayerAttachedObject(playerid, 3);
				    RemovePlayerAttachedObject(playerid, 4);
					SetPlayerSkin(playerid, 309);
					SetPlayerAttachedObject(playerid,3,19773,1,0.227999,0.077000,0.090000,87.700004,57.700054,109.999763,1.165000,0.429000,0.433999);
					SetPlayerAttachedObject(playerid,4,19627,1,0.243999,0.108997,0.082998,108.500007,147.200057,149.900009,0.595997,0.907997,1.306998);
				}
			}
			SendClientMessage(playerid,-1,"Te has colocado la ropa de trabajo");
			RopaMeca[playerid] = 1;
		}
		else if(RopaMeca[playerid] == 1)
		{
			SendClientMessage(playerid,-1,"Te has quitado la ropa de trabajo");
			RemovePlayerAttachedObject(playerid, 3);
			RemovePlayerAttachedObject(playerid, 4);
			SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
			RopaMeca[playerid] = 0;
		}
	}
	return 1;
}
CMD:basurero(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return 1;
	if(PlayerInfo[playerid][pTrabajo] != T_Basurero && PlayerInfo[playerid][pTrabajo2] != T_Basurero) return SendClientMessage(playerid,-1,"Primero tienes que conseguir el trabajo de basurero.");
	if(IsPlayerInRangeOfPoint(playerid, 2.0,-170.1398,-1556.1694,5.6444))
	{
		if(RopaBasu[playerid] == 0)
		{
		    switch(PlayerInfo[playerid][jSexo])
			{
				case 1:
				{
					SetPlayerSkin(playerid, 16);
				}
				case 2:
				{
					SetPlayerSkin(playerid, 131);
					SetPlayerAttachedObject(playerid,3,19904,1,0.103999,0.065000,-0.001998,2.099929,90.200180,174.199905,0.949001,1.222001,0.876000);
				}
			}
			SendClientMessage(playerid,-1,"Te has colocado la ropa de trabajo, ahora puedes comenzar a trabajar");
			RopaBasu[playerid] = 1;
		}
		else if(RopaBasu[playerid] == 1)
		{
		    RemovePlayerAttachedObject(playerid, 3);
			SendClientMessage(playerid,-1,"Te has quitado la ropa de trabajo");
            RemovePlayerAttachedObject(playerid, 3);
			SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
			RopaBasu[playerid] = 0;
		}
	}
	return 1;
}
CMD:medico(playerid,params[])
{
	new autoid = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][pTrabajo] != T_Medico && PlayerInfo[playerid][pTrabajo2] != T_Medico) return 1;
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Debes estar en una ambulancia para colocarte el uniforme");
	if(!AMBU(autoid)) return SendClientMessage(playerid,-1,"Debes estar en una ambulancia para colocarte el uniforme");
	if(GetPlayerVehicleSeat(playerid) == 2 || GetPlayerVehicleSeat(playerid) == 3)
	{
		if(RopaMedi[playerid] == 0)
		{
			RopaMedi[playerid] = 1;
			MEDICOSON ++;
			switch(PlayerInfo[playerid][jSexo])
			{
				case 1:
				{
					SetPlayerSkin(playerid,276);
				}
				case 2:
				{
					SetPlayerSkin(playerid,308);
				}
			}
			RemovePlayerFromVehicle(playerid);
			SendClientMessage(playerid,COLOR_DORADO,"Ropa cambiada, ahora estás en servicio.");
		}
		else if(RopaMedi[playerid] == 1)
		{
			RopaMedi[playerid] = 0;
			MEDICOSON --;
			SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
			RemovePlayerFromVehicle(playerid);
			SendClientMessage(playerid,COLOR_DORADO,"Ya no estás de servicio.");
		}
	}
	else return SendClientMessage(playerid,-1,"Debes estar en la parte trasera de una ambulancia para colocarte el uniforme");
	return 1;
}
CMD:cosechar(playerid, params[])
{
	new item[128];
	if(!sscanf(params,"s[128]",item))
	{
		if(strcmp(item,"planta",true)==0)
		{
		    if(PlayerInfo[playerid][@Nivel] == 1) return SendClientMessage(playerid,-1,"Para sembrar necesitas tener como mínimo nivel 2.");
			for(new e; e<MAX_PLANTAS; e++)
			{
				if(PlayerToPoint(3,playerid,MarihuanaInfo[e][pX], MarihuanaInfo[e][pY], MarihuanaInfo[e][pZ]))
				{
					if(!strcmp(MarihuanaInfo[e][Plantador], PlayerName(playerid)))
					{
						if(MarihuanaInfo[e][Creado] == 0) { continue; }
						if(MarihuanaInfo[e][Estado] == 3)
						{
							PlayerInfo[playerid][pMarihuana] += 5;
							new string[128], Query[128];
							AccionesRol(playerid,"corta con un cuchillo la planta de marihuana.", 20);
							format(string, sizeof(string), "Consigues {00CC00}5 gramos de marihuana{FFFFFF}, ahora puedes {DBED16}/armar porro{FFFFFF}.");
							SendClientMessage(playerid, COLOR_WHITE, string);
							DestroyDynamicObject(MarihuanaInfo[e][ObjetoID]);
							DestroyDynamic3DTextLabel(MarihuanaInfo[e][Label]);
							GuardarPlanta(e);
							GameTextForPlayer(playerid, "~r~Cosechando...", 5000, 4);
							format(Query, sizeof(Query), "DELETE FROM `plantas` WHERE `pID`='%d'", MarihuanaInfo[e][IDMaria]);//e
							mysql_function_query(Conecction, Query, true, "", "");
							RevisarLogroCosecha(playerid);
							return 1;
						}
					}
				}
			}
		}
	}
	if(sscanf(params, "s[30]", item))
	{
		if(IsPlayerInRangeOfPoint(playerid,5.0,-392.1681,-1481.9919,25.6680))
		{
			if(IsPlayerInAnyVehicle(playerid)) return 1;
			if(Cosechas[playerid][CosechaLugar] == 0)
			{
			    new randomly = random(8);
			    switch(randomly)
			    {
			        case 0: randomly = 1;
			        case 1: randomly = 1;
			        case 2: randomly = 2;
			        case 3: randomly = 2;
					default: randomly = 1;
                }
			    Cosechas[playerid][CosechaLugar] = 1;
			    Cosechas[playerid][RutaCosecha] = randomly;
				CosechasPoints(playerid);
				SetPlayerProgressBarValue(playerid,Progressbar[playerid][Cosecha],0);
				UpdatePlayerProgressBar(playerid,Progressbar[playerid][Cosecha]);
				if(randomly == 1) SetPlayerProgressBarMaxValue(playerid,Progressbar[playerid][Cosecha], 20.0);
				else if(randomly == 1) SetPlayerProgressBarMaxValue(playerid,Progressbar[playerid][Cosecha], 16.0);
				SendClientMessage(playerid,-1,"Sube a una cosechadora y comienza a trabajar.");
			}
			else return SendClientMessage(playerid,-1,"Ya te dieron un campo para cosechar.");
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,-31.3545,54.7022,3.1172))
		{
			if(IsPlayerInAnyVehicle(playerid)) return 1;
			if(Cosechas[playerid][CosechaLugar] == 0)
			{
				new randomly = random(8);
			    switch(randomly)
			    {
			        case 0: randomly = 1;
			        case 1: randomly = 1;
			        case 2: randomly = 2;
			        case 3: randomly = 2;
					default: randomly = 2;
                }
			    Cosechas[playerid][CosechaLugar] = 2;
			    Cosechas[playerid][RutaCosecha] = randomly;
				CosechasPoints(playerid);
				SetPlayerProgressBarMaxValue(playerid,Progressbar[playerid][Cosecha], 15.0);
				SetPlayerProgressBarValue(playerid,Progressbar[playerid][Cosecha],0);
				UpdatePlayerProgressBar(playerid,Progressbar[playerid][Cosecha]);
				SendClientMessage(playerid,-1,"Sube a una cosechadora y comienza a trabajar.");
			}
             else return SendClientMessage(playerid,-1,"Ya te dieron un campo para cosechar.");
		}
		else SendClientMessage(playerid,-1,"No estás donde dan el trabajo de cosechador.");
	}
	return 1;
}
CMD:ref(playerid,params[])
{
	new string__[128];
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	if(PlayerInfo[playerid][pDuty] == 0) return SendClientMessage(playerid,-1,"No llevas puesto el uniforme.");
    if(TiempoRef[playerid] > 0)
	{
		format(string__,sizeof(string__),"Debes esperar {00CC00}%d segundos{FFFFFF} para volver a pedir refuerzos.", TiempoRef[playerid]);
		SendClientMessage(playerid, COLOR_WHITE,string__);
		return 1;
	}
	if(PlayerInfo[playerid][pFaccion] == 1 && PlayerInfo[playerid][pDuty] == 1)
	{
		new string[128],zone[MAX_ZONE_NAME],pName[32];
		GetPlayerName(playerid, pName, 32);
		GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);

		if(IsPlayerInRangeOfPoint(playerid,700.0,727.1412,-3320.2461,5.8700)) format(zone, sizeof(zone), "Isla Santa Carolina");
		if(IsPlayerInRangeOfPoint(playerid,700.0,-729.2760,503.0869,1371.9718)) format(zone, sizeof(zone), "Liberty City");
        format(string,128,"{FFFFFF}El oficial {3399FF}%s{FFFFFF} está solicitando refuerzos en{3399FF} %s.",pName,zone);
		SendRadioMessage(1, TEAM_BLUE_COLOR, string,playerid);
		format(string,128,"El oficial %s esta solicitando refuerzos en {3399FF}%s{FFFFFF}.",pName,zone);
  		ProxDetector(15.0, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);

		TextDrawShowForPlayer(playerid, AlertaRefuerzos[0]);
		TextDrawShowForPlayer(playerid, AlertaRefuerzos[1]);
		TextDrawShowForPlayer(playerid, AlertaRefuerzos[2]);
		TextDrawShowForPlayer(playerid, AlertaRefuerzos[3]);
		SetTimerEx("MoverAlerta",4000,false,"i",playerid);
		TiempoRef[playerid] = 30;
		return 1;
	}
	return 1;
}
CMD:canal(playerid,params[])
{
   	if(strcmp(params,"dudas",true) == 0)
	{
		if(CanalDudas[playerid] == 1)
		{
			SendClientMessage(playerid, 0xFF9900FF, "Desactivaste el canal de dudas /n, ingresa el mismo comando para activarlo.");
			CanalDudas[playerid] = 0;
		}
		else if(CanalDudas[playerid] == 0)
		{
			SendClientMessage(playerid, 0xDBED15FF, "Activaste el canal dudas, úsalo con cuidado que puedes llegar a ser baneado.");
			CanalDudas[playerid] = 1;
		}
	}
	else SendClientMessage(playerid, -1, "Escribe {DBED16}/canal dudas");
	return 1;
}
CMD:mostrar(playerid,params[])
{
	Objeto[playerid] = 1000;
	new item[128];
	if(!sscanf(params, "s[128]",item))
	{
		if(strcmp(params,"sed",true) == 0)
		{
		    if(SedOculta[playerid] == 0) return SendClientMessage(playerid,-1,"Ya tienes visible la barra indicadora de sed.");
			SedOculta[playerid] = 0;
			ShowPlayerProgressBar(playerid, Progressbar[playerid][Sed]);
			ShowPlayerProgressBar(playerid, Progressbar[playerid][Hambre]);
			SendClientMessage(playerid,-1,"Ahora puedes ver la barra de sed, para ocultarla usa {DBED15}/ocultar sed{FFFFFF}.");
		}
		if(strcmp(params,"nombres",true) == 0)
		{
		    if(NombresOcultos[playerid] == 0)
			{
            	GameTextForPlayer(playerid, "MOSTRANDO NOMBRES", 1000, 5);
			}
			else
			{
                NombresOcultos[playerid] = 0;
				for(new i = 0; i < MAX_PLAYERS; i++) ShowPlayerNameTagForPlayer(playerid, i, 1);
				GameTextForPlayer(playerid, "MOSTRANDO NOMBRES", 1000, 5);
				SendClientMessage(playerid,-1,"Ahora puedes ver los nombres de los jugadores, para ocultarlos escribe {DBED16}/ocultar nombres{FFFFFF}.");
			}
		}
	}
	return 1;
}
CMD:reglas(playerid,params[])
{
	new string[500];
	if(JugadorLogeado[playerid] == 1)
	{
		string="{FFFF00}Nombres\n{FFFFFF}A la hora de elejir un hombre hay que tener en cuenta:\n- El nombre elejido tiene que ser real, es decir, que alguien en el mundo lo tenga.\n- Se prohibe el uso de diminutivos o sobrenombres. Ejemplo: Nico_Gonzales o Nacho_Lopez.\n- Es importante el uso de mayusculas solo en la primer letra del Nombre y Apellido.\n- Se prohíbe usar nombres de personas famosas. Ejemplo: Marcelo_Tinelli. Chuck_Norris, etc.";
		ShowPlayerDialog(playerid, REGLAS, DIALOG_STYLE_MSGBOX, "Reglas del juego", string, "Siguiente","");
	}
	return 1;
}
CMD:reportar(playerid, params[])
{
	new id,razon[250];
	if(PlayerInfo[playerid][pTiempoJailS] > 0) return SendClientMessage(playerid,-1,"No puedes usar este comando en este momento, en su lugar escribe {DBED16}/reglas");
	if(!sscanf(params,"ds[250]",id,razon))
	{
	    if(IsPlayerNPC(id)) return SendClientMessage(playerid,-1,"Por favor, para reportar escribe {DBED16}/reportar [ID] [Razón]");
	    if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_WHITE,"{DBED16}La persona a la que estás intentando reportar, está desconectada.");
	    if(id == Reportado1[playerid] || id == Reportado2[playerid] || id == Reportado3[playerid] || id == Reportado4[playerid] || id == Reportado5[playerid]) return SendClientMessage(playerid,0xFF3000FF,"Ya tienes un reporte activo.");
	    new length = strlen(razon);
	    if(length > 100) return SendClientMessage(playerid,-1,"No puedes enviar un reporte muy extenso, abrevia tus palabras por favor.");
	    if(Reportado1[playerid] == INVALID_PLAYER_ID)		{
			SendClientMessage(playerid,-1,"{00CC00}El reporte fue enviado correctamente.");
			Reportado1[playerid] = id;
			SetTimerEx("Reportado1quit",180000,false,"d",playerid);
		}
		else if(Reportado2[playerid] == INVALID_PLAYER_ID)		{
			SendClientMessage(playerid,-1,"{00CC00}El reporte fue enviado correctamente.");
			Reportado2[playerid] = id;
			SetTimerEx("Reportado2quit",180000,false,"d",playerid);
		}
		else if(Reportado3[playerid] == INVALID_PLAYER_ID)		{
			SendClientMessage(playerid,-1,"{00CC00}El reporte fue enviado correctamente.");
			Reportado3[playerid] = id;
			SetTimerEx("Reportado3quit",180000,false,"d",playerid);
		}
		else if(Reportado4[playerid] == INVALID_PLAYER_ID)		{
			SendClientMessage(playerid,-1,"{00CC00}El reporte fue enviado correctamente.");
			Reportado4[playerid] = id;
			SetTimerEx("Reportado4quit",180000,false,"d",playerid);
		}
		else if(Reportado5[playerid] == INVALID_PLAYER_ID)		{
			SendClientMessage(playerid,-1,"{00CC00}El reporte fue enviado correctamente.");
			Reportado5[playerid] = id;
			SetTimerEx("Reportado5quit",180000,false,"d",playerid);
		}
		else return SendClientMessage(playerid,-1,"Por favor, para reportar usa {DBED15}/reportar ID Razón");
		SendReportToQue(playerid,id, razon);
		return 1;
	}
	else return SendClientMessage(playerid,-1,"Por favor, para reportar escribe {DBED16}/reportar [ID] [Razón]");
}
CMD:llenar(playerid,params[])
{
	new item[128],autoid,resta,string[128],resta2;
	if(!sscanf(params,"s[128]",item))
	{
		if(strcmp(item, "tanque", true)== 0)
		{
			if(!EnGasolinera(playerid)) return 1;
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Debes estar en un vehiculo para llenar el tanque");
			autoid = GetPlayerVehicleID(playerid);
			if(TiempoLlenar[playerid] > 0) return SendClientMessage(playerid,-1,"Ya estás llenando el tanque, espera un poco.");

            new modelo = GetVehicleModel(autoid);
			new vehiclefuel = CombustibleCoche(modelo);
			if(VehicleFuel[autoid] >= vehiclefuel) return SendClientMessage(playerid, -1, "El tanque de este vehiculo esta lleno");
			resta = vehiclefuel-VehicleFuel[autoid];
			resta2 = vehiclefuel;
			if(PlayerInfo[playerid][jDinero] < resta*10)
			{
				format(string,128,"No tienes suficiente dinero para llenar tu vehículo, necesitas {00CC00}$%d{FFFFFF}.",resta*10);
				return SendClientMessage(playerid, -1,string);
			}
			llenado[autoid] = SetTimerEx("DarGasolina",1000,true,"dd", autoid, resta2);
			llenadobarra[playerid] = SetTimerEx("DarGasolinaBarra",1000,true,"dd", playerid, resta2);
			TextoCombustibleX[playerid] = SetTimerEx("TextoCombustible",2000,true,"i",playerid);
			format(string,128,"Se van a cargar %d litros de combustible.", resta);
			SendClientMessage(playerid, -1,string);
			format(string,128,"Costo total: {00CC00}$%d{FFFFFF}.", resta*10);
			SendClientMessage(playerid, -1,string);
			TogglePlayerControllable(playerid, 0);
			SetPVarInt(playerid, "IsFrozen", 0);
			QuitarDinero(playerid, resta*10);
			SinGaso[autoid] = 0;
			TiempoLlenar[playerid] = 60;
			new striong[20];
			format(striong,sizeof(striong),"~r~-$%d",resta*10);
			GameTextForPlayer(playerid, striong, 5000, 1);
		}
		if(strcmp(item, "balde", true) == 0)
		{
		    if(PlayerInfo[playerid][jBalde] == 0) return SendClientMessage(playerid,-1,"Necesitas tener un balde en tu inventario.");
		    if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya tienes un objeto en tu inventario.");
			if(BaldeAgua[playerid] == 1) return SendClientMessage(playerid, -1, "Tu balde ya contiene agua.");
			for(new i = 0; i < sizeof(LlenarBaldePos); i++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.5, LlenarBaldePos[i][0], LlenarBaldePos[i][1], LlenarBaldePos[i][2]))
				{
					TogglePlayerControllable(playerid, 0);
					if(PlayerInfo[playerid][pSonidos] == 0)
					{
						PlayAudioStreamForPlayer(playerid, "http://"AUDIO_BALDE"");
					}
					SendClientMessage(playerid, COLOR_WHITE, "Se está llenando el balde de agua, espera por favor..");
					GameTextForPlayer(playerid, "~b~Llenando Balde...", 10000, 4);
					SetTimerEx("LlenarBalde", 10000, false, "u", playerid);
                }
            }
		}
	}
	return 1;
}
CMD:combustible(playerid,params[])
{
	new litros,autoid,string[128],petroleo;
	if(!sscanf(params,"d",litros))
	{
		autoid = GetPlayerVehicleID(playerid);
		if(!EnGasolinera(playerid)) return 1;
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Debes estar en un vehiculo para llenar el tanque");
		if(litros < 0) return SendClientMessage(playerid, -1, "El combustible debe ser mayor a 0.");

		new modelo = GetVehicleModel(autoid);
		new vehiclefuel = CombustibleCoche(modelo);
		if(VehicleFuel[autoid] >= vehiclefuel) return SendClientMessage(playerid, -1, "El tanque de este vehiculo esta lleno.");
    	{
			new nuevacantidad = litros+VehicleFuel[autoid];
			if(nuevacantidad > vehiclefuel) return SendClientMessage(playerid,-1,"No puedes recargar esa cantidad de combustible.");
			petroleo = VehicleFuel[autoid]+litros;
			if(PlayerInfo[playerid][jDinero] < litros*10)
			{
				format(string,128,"El litro de combustible cuesta {00CC00}$10{FFFFFF}, necesitas {00CC00}$%d{FFFFFF} para pagar {DBED16}%d{FFFFFF} litros.",litros*10, litros);
				SendClientMessage(playerid, -1,string);
				return 1;
			}
			llenado[autoid] = SetTimerEx("DarGasolina",1000,true,"dd", autoid, petroleo);
			llenadobarra[playerid] = SetTimerEx("DarGasolinaBarra",1000,true,"dd", playerid, petroleo);
			TextoCombustibleX[playerid] = SetTimerEx("TextoCombustible",2000,false,"d",playerid);
			format(string,128,"Se van a cargar %d litros de combustible.", litros);
			SendClientMessage(playerid, -1,string);
			format(string,128,"Costo total: {00CC00}$%d{FFFFFF}.", litros*10);
			SendClientMessage(playerid, -1,string);
			TogglePlayerControllable(playerid, 0);
			SetPVarInt(playerid, "IsFrozen", 0);
			QuitarDinero(playerid, litros*10);
			SinGaso[autoid] = 0;
		}
	}
	return 1;
}
CMD:telefono(playerid,params[])
{
	new item[32],pName[32];
	GetPlayerName(playerid,pName,32);
	if(!sscanf(params,"s[32]",item))
	{
		if(strcmp(item, "on", true)==0)
		{
			if(PlayerInfo[playerid][pNumero] <= 0) return SendClientMessage(playerid,-1,"No tienes un teléfono celular.");
			if(TelefonoEstado[playerid] == 0) return SendClientMessage(playerid,-1,"El teléfono ya está encendido.");
			{
				TelefonoEstado[playerid] = 0;
				AccionesRol(playerid,"encendió su teléfono móvil.", 20);
			}
		}
		if(strcmp(item, "off", true)==0)
		{
			if(PlayerInfo[playerid][pNumero] <= 0) return SendClientMessage(playerid,-1,"No tienes un teléfono celular.");
			if(TelefonoEstado[playerid] == 1) return SendClientMessage(playerid,-1,"El teléfono ya está apagado.");
			{
				TelefonoEstado[playerid] = 1;
				AccionesRol(playerid,"apagó su teléfono móvil.", 20);
				if(PlayerInfo[playerid][MobileSub] != INVALID_PLAYER_ID)
				{
				    cmd_colgar(playerid);
				}
			}
		}
	}
	else return SendClientMessage(playerid,-1,"Escribe {DBED16}/telefono {FFFFFF}[{DBED16}on/off{FFFFFF}]");
	return 1;
}
CMD:ver(playerid,params[])
{
	new item[32],string[385];
	if(!sscanf(params, "s[32]",item))
	{
		if(strcmp(item, "botiquin", true)==0)
		{
			MostrarBotiquin(playerid);
		}
		else if(strcmp(params,"reporte",true) == 0 || strcmp(params,"reportes",true) == 0)
		{
		    if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 1;
		    if(IDReporte[playerid] == -1) return SendClientMessage(playerid, -1, "No tienes un reporte pendiente.");
			format(string, 256, "ID: %d - N: %d - R: {FF3300}%s", IDReporte[playerid], GetPlayerScore(IDReporte[playerid]), IDReporteMensaje[playerid]);
			SendClientMessage(playerid, 0xB1F6F6F6, string);
			if(Specteando[playerid] == 1) return SendClientMessage(playerid, COLOR_WHITE, "Para dejar de ver al jugador escribe {DBED16}/specoff{FFFFFF}.");
		}
		else if(strcmp(params,"mapa",true) == 0)
		{
			if(!EnVerMapa(playerid)) return 1;
			format(string, 150,"Concesionarias\nBancos\n24/7\nTrabajos\nEdificios del gobierno\nTiendas de ropa");
			ShowPlayerDialog(playerid, GPS, DIALOG_STYLE_LIST, "Puntos de interés", string, "Siguiente", "Cancelar");
		}
		else if(strcmp(params,"pantalla",true) == 0)
		{
		    if(!IsAtPantallaStation(playerid)) return 1;
		    MostrarPantalla(playerid);
		}
		else if(strcmp(params,"estanteria",true) == 0)
	    {
	        if(!IsPlayerInRangeOfPoint(playerid,10,254.2685,-41.5420,1002.0308) && GetPlayerInterior(playerid) != 14) return 1;
	        MostrarEstanteria(playerid);
	    }
	    else if(strcmp(params,"heladera",true) == 0 || strcmp(params,"geladeira",true) == 0)
	    {
	        MostrarHeladera(playerid);
	    }
	}
	return 1;
}
CMD:guardar(playerid,params[])
{
	new arma[20],armaid,string[150],cantidad;
	if(!sscanf(params,"s[20]d",arma,cantidad))
	{
	    if(strcmp(arma,"medicamentos",true) == 0 || strcmp(arma,"medicamento",true) == 0) armaid = 100;
	    if(strcmp(arma,"crack",true) == 0) armaid = 200;
	}
	else if(!sscanf(params,"s[20]",arma))
	{
	    if(strcmp(arma,"manopla",true) == 0) armaid = 1;
	    if(strcmp(arma,"palo-de-golf",true) == 0) armaid = 2;
	    if(strcmp(arma,"cuchillo",true) == 0) armaid = 4;
	    if(strcmp(arma,"bate-de-beisbol",true) == 0) armaid = 5;
	    if(strcmp(arma,"pala",true) == 0) armaid = 6;
	    if(strcmp(arma,"palo-de-billar",true) == 0) armaid = 7;
	    if(strcmp(arma,"katana",true) == 0) armaid = 8;
	    if(strcmp(arma,"consolador-rosa",true) == 0) armaid = 10;
	    if(strcmp(arma,"vibrador-blanco",true) == 0) armaid = 11;
	    if(strcmp(arma,"gran-vibrador-blanco",true) == 0) armaid = 12;
	    if(strcmp(arma,"vibrador-plateado",true) == 0) armaid = 13;
	    if(strcmp(arma,"ramo-de-flores",true) == 0) armaid = 14;
	    if(strcmp(arma,"baston",true) == 0) armaid = 15;
	    if(strcmp(arma,"granada",true) == 0) armaid = 16;
	    if(strcmp(arma,"9mm",true) == 0) armaid = 22;
	    if(strcmp(arma,"9mm-silenciada",true) == 0) armaid = 23;
	    if(strcmp(arma,"desert-eagle",true) == 0) armaid = 24;
	    if(strcmp(arma,"escopeta-de-madera",true) == 0 ) armaid = 25;
	    if(strcmp(arma,"escopeta-de-combate",true) == 0) armaid = 27;
	    if(strcmp(arma,"MP5",true) == 0) armaid = 29;
	    if(strcmp(arma,"AK-47",true) == 0) armaid = 30;
	    if(strcmp(arma,"M4",true) == 0) armaid = 31;
	    if(strcmp(arma,"rifle",true) == 0) armaid = 33;
	    if(strcmp(arma,"camara",true) == 0) armaid = 43;

	    if(strcmp(arma,	"bolso",	true) == 0)
		{
			if(IsPlayerInRangeOfPoint(playerid,3.0,1439.8810,472.1569,1007.4581))
			{
				if(BolsasCamion == 4) return SendClientMessage(playerid,-1,"No puedes entrar más bolsas.");
				if(EnAsalto[playerid] == 0) return 1;
				if(YaRobastes2[playerid] == 0) return SendClientMessage(playerid,-1,"No tienes un bolso de dinero.");
				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
				format(string,125,"%s guardó un bolso en el camión.",PlayerName(playerid));
				ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				RemovePlayerAttachedObject(playerid,2);
				YaRobastes2[playerid] = 0;
				TieneBolso[playerid] = 0;
				BolsasCamion ++;
				if(BolsasDinero > 0) MandarMensajeAsalto(playerid, "Agarra ~g~un bolso con dinero~w~.");
    			else MandarMensajeAsalto(playerid,"Espera la ~y~autorizaci¦n~w~ para salir.");

			}
			new Float:X,Float:Y,Float:Z;
			GetVehiclePos(248, X, Y, Z);
			if(IsPlayerInRangeOfPoint(playerid, 4.0, X,Y,Z))
			{
				if(TieneBolso[playerid] == 0) return SendClientMessage(playerid,-1,"No tienes un bolso.");
				if(BolsasCamionLadron == 4) return SendClientMessage(playerid,-1,"No puedes entrar más bolsas.");
				if(EnAsalto[playerid] == 0) return SendClientMessage(playerid,-1,"No estás en una misión.");
				//if(YaRobastes[playerid] == 0) return SendClientMessage(playerid,-1,"No tienes un bolso de dinero.");
				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
				format(string,125,"%s guardó un bolso en el camión.",PlayerName(playerid));
				ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				RemovePlayerAttachedObject(playerid,2);
				MandarMensajeAsalto(playerid,"Espera la ~y~autorizaci¦n~w~ para salir.");
				BolsasCamionLadron += 1;
				if(BolsasCamionLadron == 4)
				{
					for(new i, j = GetPlayerPoolSize(); i <= j; i++)
					{
						if(Grupo[i] == 1 && IsPlayerConnected(i))
						{
							MandarMensajeAsalto(i,"Tienes que ~r~/colocar c4~w~ en las puertas del cami¦n.");
						}
					}
				}
			}
		}
	}
	if(armaid != 0 && armaid == 300) // Marihuana
	{
		if(IsPlayerInRangeOfPoint(playerid,10,254.2685,-41.5420,1002.0308) && GetPlayerInterior(playerid) == 14)
 		{
  			for(new c; c < MAX_PROPIEDADES; c++)
    		{
     			if(GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
       			{
	    			if(PlayerInfo[playerid][pMarihuana] >= cantidad)
	    			{
	        			if(cantidad <= 0) return SendClientMessage(playerid,-1,"Cantidad inválida.");
						PlayerInfo[playerid][pMarihuana] -= cantidad;
						PropInfo[c][pMarihuana] += cantidad;
						GuardarPropiedad(c);
						AccionesRol(playerid,"coloca marihuana en el estante.", 20);
					}
					else SendClientMessage(playerid,-1,"No tienes esa cantidad de marihuana.");
				}
			}
	    }
	}
	if(armaid != 0 && armaid == 100)//Medicamentos
	{
		if(IsPlayerInRangeOfPoint(playerid,10,254.2685,-41.5420,1002.0308) && GetPlayerInterior(playerid) == 14)
 		{
  			for(new c; c < MAX_PROPIEDADES; c++)
    		{
     			if(GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
       			{
	    			if(PlayerInfo[playerid][pMedicamentos] >= cantidad)
	    			{
	        			if(cantidad <= 0) return SendClientMessage(playerid,-1,"Cantidad inválida.");
						PlayerInfo[playerid][pMedicamentos] -= cantidad;
						PropInfo[c][pMedicamentos] += cantidad;
						GuardarPropiedad(c);
						AccionesRol(playerid,"coloca medicamentos en el estante.", 20);
					}
					else SendClientMessage(playerid,-1,"No tienes esa cantidad de medicamentos.");
				}
			}
	    }
	}
	else if(armaid != 0 && armaid == 200)//Crack
	{
		if(IsPlayerInRangeOfPoint(playerid,10,254.2685,-41.5420,1002.0308) && GetPlayerInterior(playerid) == 14)
 		{
  			for(new c; c < MAX_PROPIEDADES; c++)
    		{
     			if(GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
       			{
	    			if(PlayerInfo[playerid][pCrack] >= cantidad)
	    			{
	        			if(cantidad <= 0) return SendClientMessage(playerid,-1,"Cantidad inválida.");
						PlayerInfo[playerid][pCrack] -= cantidad;
						PropInfo[c][pCrack] += cantidad;
						GuardarPropiedad(c);
	     				AccionesRol(playerid,"coloca gramos de crack en el estante.", 20);
					}
					else SendClientMessage(playerid,-1,"No tienes esa cantidad de crack.");
				}
			}
	    }
	}
 	else if(armaid != 0 && armaid != 100 && armaid != 200)//Armas
  	{
		if(IsPlayerInRangeOfPoint(playerid,10,254.2685,-41.5420,1002.0308) && GetPlayerInterior(playerid) == 14)
 		{
  			for(new c; c < MAX_PROPIEDADES; c++)
    		{
     			if(GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
       			{
					if(EspacioRopero(c) < PropInfo[c][pLugarRopero])
					{
						if(SiTieneArma(playerid,armaid))
						{
						    if(armaid == 1) PropInfo[c][pManopla] ++;
						    else if(armaid == 2) PropInfo[c][pPaloDeGolf] ++;
						    else if(armaid == 4) PropInfo[c][pCuchillo] ++;
						    else if(armaid == 5) PropInfo[c][pBateDeBeisbol] ++;
						    else if(armaid == 6) PropInfo[c][pPala] ++;
						    else if(armaid == 7) PropInfo[c][pPaloDeBillar] ++;
						    else if(armaid == 8) PropInfo[c][pKatana] ++;
						    else if(armaid == 10) PropInfo[c][pConsoladorRosa] ++;
						    else if(armaid == 11) PropInfo[c][pVibradorBlanco] ++;
						    else if(armaid == 12) PropInfo[c][pGranVibradorBlanco] ++;
						    else if(armaid == 13) PropInfo[c][pVibradorPlateado] ++;
						    else if(armaid == 14) PropInfo[c][pFlores] ++;
						    else if(armaid == 15) PropInfo[c][pBaston] ++;
						    //else if(armaid == 16) PropInfo[c][pGranada] ++;
							else if(armaid == 22) PropInfo[c][p9mm] ++;
							else if(armaid == 23) PropInfo[c][p9mmSilenciada] ++;
							else if(armaid == 24) PropInfo[c][pDesertEagle] ++;
							else if(armaid == 25) PropInfo[c][pEscopetaNormal] ++;
							else if(armaid == 27) PropInfo[c][pEscopetaDeCombate] ++;
							else if(armaid == 29) PropInfo[c][pMP5] ++;
							else if(armaid == 30) PropInfo[c][pAK47] ++;
							else if(armaid == 31) PropInfo[c][pM4] ++;
							else if(armaid == 33) PropInfo[c][pRifle] ++;
							else if(armaid == 43) PropInfo[c][pCamara] ++;
							QuitarArma(playerid,armaid);
							format(string,sizeof(string),"%s coloca su %s en el estante.",PlayerName(playerid),ArmaNombre2[armaid]);
							ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
							GuardarPropiedad(c);
						}
						else SendClientMessage(playerid,-1,"No tienes esa arma en tus manos.");
					}
					else SendClientMessage(playerid,-1,"No hay espacios libres en el estante.");
				}
			}
		}
	}
	return true;
}
CMD:sacar(playerid,params[])
{
	new arma[128],armaid,string[150],cantidad;
	if(!sscanf(params,"s[128]d",arma,cantidad))
	{
	    if(strcmp(arma,"medicamentos",true) == 0 || strcmp(arma,"medicamento",true) == 0 || strcmp(arma,"remedio",true) == 0 || strcmp(arma,"remedios",true) == 0) armaid = 100;
	    if(strcmp(arma,"crack",true) == 0) armaid = 200;
	}
	else if(!sscanf(params,"s[128]",arma))
	{
	    if(strcmp(arma,"manopla",true) == 0) armaid = 1;
	    if(strcmp(arma,"palo-de-golf",true) == 0) armaid = 2;
	    if(strcmp(arma,"cuchillo",true) == 0) armaid = 4;
	    if(strcmp(arma,"bate-de-beisbol",true) == 0) armaid = 5;
	    if(strcmp(arma,"pala",true) == 0) armaid = 6;
		if(strcmp(arma,"palo-de-billar",true) == 0) armaid = 7;
	    if(strcmp(arma,"katana",true) == 0) armaid = 8;
	    if(strcmp(arma,"consolador-rosa",true) == 0) armaid = 10;
	    if(strcmp(arma,"vibrador-blanco",true) == 0) armaid = 11;
	    if(strcmp(arma,"gran-vibrador-blanco",true) == 0) armaid = 12;
	    if(strcmp(arma,"vibrador-plateado",true) == 0) armaid = 13;
	    if(strcmp(arma,"ramo-de-flores",true) == 0) armaid = 14;
	    if(strcmp(arma,"baston",true) == 0) armaid = 15;
	    if(strcmp(arma,"granada",true) == 0) armaid = 16;
	    if(strcmp(arma,"9mm",true) == 0) armaid = 22;
	    if(strcmp(arma,"9mm-silenciada",true) == 0) armaid = 23;
	    if(strcmp(arma,"desert-eagle",true) == 0) armaid = 24;
	    if( strcmp(arma,"escopeta-de-madera",true) == 0 ) armaid = 25;
	    if(strcmp(arma,"escopeta-de-combate",true) == 0) armaid = 27;
	    if(strcmp(arma,"MP5",true) == 0) armaid = 29;
	    if(strcmp(arma,"AK-47",true) == 0) armaid = 30;
	    if(strcmp(arma,"M4",true) == 0) armaid = 31;
	    if(strcmp(arma,"rifle",true) == 0) armaid = 33;
	    if(strcmp(arma,"camara",true) == 0) armaid = 43;
	    if(strcmp(arma,"caramelos",true) == 0) armaid = 666;
	    if(strcmp(arma,"caramelo",true) == 0) armaid = 666;
	}
	if(armaid == 300)
	{
	    if(PlayerInfo[playerid][@Nivel] < 3) return SendClientMessage(playerid,-1,"Necesitas ser nivel 3 para sacar objetos de la estanteria.");
		if(IsPlayerInRangeOfPoint(playerid,10,254.2685,-41.5420,1002.0308) && GetPlayerInterior(playerid) == 14)
 		{
  			for(new c; c < MAX_PROPIEDADES; c++)
    		{
     			if(GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
       			{
       			    if(PropInfo[c][pMarihuana] >= cantidad)
       			    {
       			        PropInfo[c][pMarihuana] -= cantidad;
       			        PlayerInfo[playerid][pMarihuana] += cantidad;
						AccionesRol(playerid,"toma marihuana del estante.", 20);
						GuardarPropiedad(c);
       			    }
       			    else SendClientMessage(playerid,-1,"No hay esa cantidad de marihuana en el estante.");
       			}
			}
		}
	}
	if(armaid == 666)
	{
		if(HallX == true)
		{
	    	new hora, minuto, segundo,anio, mes, dia;
	    	getdate(anio, mes, dia);
	    	gettime(hora, minuto, segundo);
			if(IsPlayerInRangeOfPoint(playerid, 2.0,1692.5258, -1974.1092, 8.7722))
			{
			    if(Halloween[playerid][P1Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P1Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,-1715.1521, -40.6276, 3.4822))
			{
			    if(Halloween[playerid][P2Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P2Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0, 155.1109, -288.0634, 1.5656))
			{
			    if(Halloween[playerid][P3Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P3Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,-2672.5023, 1372.1165, 7.1026))
			{
			    if(Halloween[playerid][P4Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P4Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2545.7396, 1214.4541, 37.3694))
			{
			    if(Halloween[playerid][P5Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P5Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2354.7189, -644.4589, 128.0773))
			{
			    if(Halloween[playerid][P6Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P6Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,-2671.1478, 229.4940, 4.2891))
			{
			    if(Halloween[playerid][P7Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P7Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,-2748.5333, 197.2070, 7.0754))
			{
			    if(Halloween[playerid][P8Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P8Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,2185.3937, -1344.2394, 23.9319))
			{
			    if(Halloween[playerid][P9Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P9Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2488.6890, -717.7959, 139.2878))
			{
			    if(Halloween[playerid][P10Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P10Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2488.7308, 2357.1545, 10.2017))
			{
			    if(Halloween[playerid][P11Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P11Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0, -1315.2464, 2509.3848, 87.0095))
			{
			    if(Halloween[playerid][P12Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P12Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,2108.2594, 2204.7161, 10.7878))
			{
			    if(Halloween[playerid][P13Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P13Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,1034.1938, 2096.8608, 10.7878))
			{
			    if(Halloween[playerid][P14Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P14Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1099.9021, 1400.0367, 6.6603))
			{
			    if(Halloween[playerid][P15Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P15Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,964.6849, -1543.4922, 13.6514))
			{
			    if(Halloween[playerid][P16Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P16Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,324.9424, -1756.0784, 4.5136))
			{
			    if(Halloween[playerid][P17Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P17Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,-345.8416, -1034.4823, 59.2600))
			{
			    if(Halloween[playerid][P18Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P18Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,-2814.3001, -1529.5759, 140.7513))
			{
			    if(Halloween[playerid][P19Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P19Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2624.9660, 2417.4382, 10.7278))//
			{
			    if(Halloween[playerid][P20Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P20Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,2112.8735, 2737.5784, 10.7278))//
			{
			    if(Halloween[playerid][P21Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P21Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,420.8861, 2543.9834, 16.3283))//
			{
			    if(Halloween[playerid][P22Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P22Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,-277.8821, 2655.0178, 62.6441))//
			{
			    if(Halloween[playerid][P23Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P23Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0, -1477.1939, 2613.2195, 58.6888))//
			{
			    if(Halloween[playerid][P24Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P24Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,-1846.1910, 1280.7598, 22.4700))//
			{
			    if(Halloween[playerid][P25Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P25Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2107.0678, -1940.3813, 13.4744))//
			{
			    if(Halloween[playerid][P26Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P26Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2128.0990, 260.6922, 35.7667))//
			{
			    if(Halloween[playerid][P27Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P27Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,-1360.2823, 16.2454, 6.2434))//
			{
			    if(Halloween[playerid][P28Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P28Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,-2219.8267, -145.8122, 35.2278))//
			{
			    if(Halloween[playerid][P29Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P29Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,-50.6244, -1397.8488, 2.2814))//
			{
			    if(Halloween[playerid][P30Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
				Halloween[playerid][P30Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,1703.4247, -1870.5588, 13.7403))//
			{
			    if(Halloween[playerid][P31Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P31Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,2025.7420, -1780.4427, 13.4544))//
			{
			    if(Halloween[playerid][P32Hora]> gettime()) return SendClientMessage(playerid,-1,"Ya recibiste tus dulces diarios de este puesto, regresa mañana.");
			    Halloween[playerid][P32Hora] = gettime() + 86400; 	DarCaramelos(playerid);
			}
			else return SendClientMessage(playerid,-1,"Los caramelos se consiguen únicamente en los puestos de Halloween.");
			return 1;
		}
	}
	if(armaid == 100)
	{
	    if(PlayerInfo[playerid][@Nivel] < 3) return SendClientMessage(playerid,-1,"Necesitas ser nivel 3 para sacar objetos de la estanteria.");
		if(IsPlayerInRangeOfPoint(playerid,10,254.2685,-41.5420,1002.0308) && GetPlayerInterior(playerid) == 14)
 		{
  			for(new c; c < MAX_PROPIEDADES; c++)
    		{
     			if(GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
       			{
       			    if(PropInfo[c][pMedicamentos] >= cantidad)
       			    {
       			        PropInfo[c][pMedicamentos] -= cantidad;
       			        PlayerInfo[playerid][pMedicamentos] += cantidad;
						AccionesRol(playerid,"toma medicamentos del estante.", 20);
						GuardarPropiedad(c);
       			    }
       			    else SendClientMessage(playerid,-1,"No hay esa cantidad de medicamentos en el estante.");
       			}
			}
		}
	}
	else if(armaid == 200)
	{
	    if(PlayerInfo[playerid][@Nivel] < 3) return SendClientMessage(playerid,-1,"Necesitas ser nivel 3 para sacar objetos de la estanteria.");
		if(IsPlayerInRangeOfPoint(playerid,10,254.2685,-41.5420,1002.0308) && GetPlayerInterior(playerid) == 14)
 		{
  			for(new c; c < MAX_PROPIEDADES; c++)
    		{
     			if(GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
       			{
       			    if(PropInfo[c][pCrack] >= cantidad)
       			    {
       			        PropInfo[c][pCrack] -= cantidad;
       			        PlayerInfo[playerid][pCrack] += cantidad;
						AccionesRol(playerid,"toma gramos de crack del estante.", 20);
						GuardarPropiedad(c);
       			    }
       			    else SendClientMessage(playerid,-1,"No hay esa cantidad de crack en el estante.");
       			}
			}
		}
	}
 	else if(armaid != 0 && armaid != 200 && armaid != 100)
  	{
  	    if(PlayerInfo[playerid][@Nivel] < 3) return SendClientMessage(playerid,-1,"Necesitas ser nivel 3 para sacar objetos de la estanteria.");
		if(IsPlayerInRangeOfPoint(playerid,10,254.2685,-41.5420,1002.0308) && GetPlayerInterior(playerid) == 14)
 		{
  			for(new c; c < MAX_PROPIEDADES; c++)
    		{
     			if(GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
       			{
					if(SiRoperoTiene(c,armaid))
					{
					    if(armaid == 1) PropInfo[c][pManopla] --;
	    				else if(armaid == 2) PropInfo[c][pPaloDeGolf] --;
	    				else if(armaid == 4) PropInfo[c][pCuchillo] --;
	    				else if(armaid == 5) PropInfo[c][pBateDeBeisbol] --;
	    				else if(armaid == 6) PropInfo[c][pPala] --;
	    				else if(armaid == 7) PropInfo[c][pPaloDeBillar] --;
	    				else if(armaid == 8) PropInfo[c][pKatana] --;
	    				else if(armaid == 10) PropInfo[c][pConsoladorRosa] --;
						else if(armaid == 11) PropInfo[c][pVibradorBlanco] --;
						else if(armaid == 12) PropInfo[c][pGranVibradorBlanco] --;
						else if(armaid == 13) PropInfo[c][pVibradorPlateado] --;
	    				else if(armaid == 14) PropInfo[c][pFlores] --;
	    				else if(armaid == 15) PropInfo[c][pBaston] --;
		   				else if(armaid == 16) PropInfo[c][pGranada] --;
						else if(armaid == 22) PropInfo[c][p9mm] --;
						else if(armaid == 23) PropInfo[c][p9mmSilenciada] --;
						else if(armaid == 24) PropInfo[c][pDesertEagle] --;
						else if(armaid == 25) PropInfo[c][pEscopetaNormal] --;
						else if(armaid == 27) PropInfo[c][pEscopetaDeCombate] --;
						else if(armaid == 29) PropInfo[c][pMP5] --;
						else if(armaid == 30) PropInfo[c][pAK47] --;
						else if(armaid == 31) PropInfo[c][pM4] --;
						else if(armaid == 33) PropInfo[c][pRifle] --;
						else if(armaid == 43) PropInfo[c][pCamara] --;
						DarArma(playerid,armaid);
						format(string,sizeof(string),"%s toma un/una %s del estante.",PlayerName(playerid),ArmaNombre2[armaid]);
						ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
						GuardarPropiedad(c);
					}
					else SendClientMessage(playerid,-1,"No hay esa arma en el estante.");
				}
			}
		}
	}
	return true;
}
CMD:garaje(playerid,params[])
{
	for(new p; p < MAX_PROPIEDADES; p++)
	{
		if(PropInfo[p][pEnUso] == 1 && GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW] && GetPlayerInterior(playerid) == PropInfo[p][pInteriorID])
		{
		    if(PropInfo[p][pGX] != 0)
		    {
				SetPlayerPos(playerid,300.3367,311.7175,999.1484);
				SetPlayerInterior(playerid,4);
			}
			else SendClientMessage(playerid,-1,"Esta propiedad no tiene garaje.");
		}
	}
	return true;
}
CMD:retirar(playerid,params[])
{
	new item[32],id,string[250];
	if(!sscanf(params,"s[32]d",item,id))
	{
		if(strcmp(item,"vehiculo", true)==0)
		{
		    if(strcmp(Alquilador,PlayerName(playerid),true) == 0 || PermisoSalon[playerid] == true)
			{
		    	new inte = GetVehicleInterior(id), vw = GetVehicleVirtualWorld(id);
				if(inte == 13 && vw == 1)
				{
				    format(string,sizeof(string),"Retiraste el vehiculo %d del salón de eventos.", id);
				    SendClientMessage(playerid,-1, string);
				    format(string,sizeof(string),"El jugador {DBED16}%s{FFFFFF} retiro el vehiculo {DBED16}%s{FFFFFF} del salón de eventos.", PlayerName(playerid), id);
					MandarMensajeSalon(string, playerid);
                	SetVehiclePassengersInteriorEx(id, 0);
					SetVehiclePassengersVWEx(id, 0);
					SetVehiclePos(id, 1410.2614,-1237.0621,13.3828);
					SetVehicleZAngle(id,177.9267);
				}
				else return SendClientMessage(playerid,-1,"Ese vehiculo no se encuentra en el salón de eventos.");
			}
		}
	}
	else return SendClientMessage(playerid,-1,"Escribe {DBED16}/retirar vehiculo [{DBED16}ID{FFFFFF}]");
	return 1;
}
CMD:dar(playerid,params[])
{
	new id,cantidad,acount=0,Float:x,Float:y,Float:z,string[256],item[15],item2[15];
	if(TiempoDarDinero[playerid] > 0)
	{
		if(TiempoDarDinero[playerid] > 60)format(string,sizeof(string),"Por favor espera {FF0000}%d:%d {FFFFFF}(m:s){FFFFFF}.",TiempoDarDinero[playerid]/60, TiempoDarDinero[playerid]%(60));
		else if(TiempoDarDinero[playerid] < 60)format(string,sizeof(string),"Por favor espera {FF0000}%d segundos{FFFFFF}.",TiempoDarDinero[playerid]%(60));
		return SendClientMessage(playerid, -1,string);
	}
	if(!sscanf(params,"s[15]dd",item,id,cantidad))
	{
		if(strcmp(item,"dinero", true)==0)
		{
			if(IsPlayerConnected(id))
			GetPlayerPos(id, x,y,z);
			if(PlayerInfo[playerid][jDinero] < cantidad) return SendClientMessage(playerid,-1,"Tu no tienes esa cantidad de dinero.");
			if(id == playerid) return 1;
			if(cantidad > 0 && cantidad < 5000000)
			{
				if(IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z))
				{
					new day,month,year,Query[200];
					getdate(day,month,year);
					DarDinero(id, cantidad);
					QuitarDinero(playerid, cantidad);
					AccionesRol(playerid,"saca dinero de su billetera.", 20);
					format(string, sizeof(string), "%s{FFFFFF} te acaba de dar {00CC00}$%d{FFFFFF}.",PlayerName(playerid),cantidad);
					SendClientMessage(id,COLOR_AZUL,string);
					format(Query, sizeof(Query), "INSERT INTO `log_ventas` (Vendedor, item, cantidad, comprador,fecha) VALUES ('%s','Dinero', '%d','%s','%02d/%02d/%02d')",PlayerName(playerid),cantidad,PlayerName(id),day,month,year);
					mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
					return 1;
				}
				else return SendClientMessage(playerid,-1,"No estas cerca de ese jugador.");
			}
			else return SendClientMessage(playerid,-1,"Cantidad invalida.");
		}
	}
	if(!sscanf(params,"s[15]d",item,id))
	{
	    if(strcmp(item,"acceso",true) == 0)
	    {
	    	if(Alquilado == false) return 1;
	    	if(strcmp(Alquilador,PlayerName(playerid),true) == 0)
	    	{
	            if(IsPlayerConnected(id))
	            {
	                if(EnSalonEvento(id) || EnSalonEvento2(id))
	                {
	                    if(PermisoSalon[id] == false)
	                    {
	                        new nombree[MAX_PLAYER_NAME];
	                        GetPlayerName(id,nombree,sizeof(nombree));
	                        PermisoSalon[id] = true;
	                        format(string,sizeof(string),"Le diste acceso al salón a {F6F61D}%s{FFFFFF}, escribe {F6F61D}/quitar acceso{FFFFFF} [id] para quitarle el acceso.",nombree);
							SendClientMessage(playerid,-1,string);
							format(string,sizeof(string),"Recibiste una tarjeta de acceso al salón, escribe {F6F61D}/ayuda salon{FFFFFF} para recibir información.");
							SendClientMessage(id,-1,string);
							return 1;
	                    }
	                    else SendClientMessage(playerid,-1,"Ya le diste el acceso a esa persona.");
	                }
	                else SendClientMessage(playerid,-1,"El jugador debe estar dentro del salón.");
	            }
	            else SendClientMessage(playerid,-1,"Ese jugador está desconectado.");
	    	}
	    	else SendClientMessage(playerid,-1,"No tienes permiso para dar acceso.");
	    }
	    if(strcmp(item,"sprunk",true) == 0)
	    {
	        if(ProxDetectorS(5.0, playerid, id))
			{
			    if(TieneSprunk[playerid] == 0) return SendClientMessage(playerid,-1,"No tienes un vaso de sprunk.");
                if(IsPlayerNPC(id)) return 1;
			    new cantidadd[10];
			    switch(TieneSprunk[playerid])
 				{
					case 1:     cantidadd = "500";
					case 2:     cantidadd = "400";
					case 3:     cantidadd = "300";
					case 4:     cantidadd = "200";
					case 5:     cantidadd = "100";
  				}
  				new stringas[128],string2[128];
				format(stringas, sizeof(stringas), "Le ofreciste un vaso de Sprunk con %s ml a {00CCFF}%s{FFFFFF}.",cantidadd, PlayerName(playerid));
				SendClientMessage(playerid,-1,stringas);
				format(string2, sizeof(string2), "{00CCFF}%s{FFFFFF} te ofrece un vaso de sprunk con %s ml, para aceptar usa {DBED16}/aceptar consumible", PlayerName(playerid), cantidadd);
				SendClientMessage(id,-1,string2);
				SprunkOfrecido[id] = TieneSprunk[playerid];
				TipoOferta[id] = 4;
				Ofertante[id] = playerid;
	    	}
	    	else SendClientMessage(playerid,0xEB0000FF,"Esa persona está muy lejos.");
	    }
	    if(strcmp(item,"vino",true) == 0)
	    {
	        if(ProxDetectorS(5.0, playerid, id))
			{
			    if(TieneSprunk[playerid] == 0) return SendClientMessage(playerid,-1,"No tienes un vaso de sprunk.");
                if(IsPlayerNPC(id)) return 1;
			    new cantidadd[10];
			    switch(TieneVino[playerid])
 				{
					case 1:     cantidadd = "500";
					case 2:     cantidadd = "400";
					case 3:     cantidadd = "300";
					case 4:     cantidadd = "200";
					case 5:     cantidadd = "100";
  				}
  				new stringas[128],string2[128];
				format(stringas, sizeof(stringas), "Le ofreciste una copa de vino con %s ml a {00CCFF}%s{FFFFFF}.",cantidadd, PlayerName(playerid));
				SendClientMessage(playerid,-1,stringas);
				format(string2, sizeof(string2), "{00CCFF}%s{FFFFFF} te ofrece una copa de vino con %s ml, para aceptar usa {DBED16}/aceptar consumible", PlayerName(playerid), cantidadd);
				SendClientMessage(id,-1,string2);
				SprunkOfrecido[id] = TieneVino[playerid];
				TipoOferta[id] = 5;
				Ofertante[id] = playerid;
	    	}
	    	else SendClientMessage(playerid,0xEB0000FF,"Esa persona está muy lejos.");
	    }
	    if(strcmp(item,"cerveza",true) == 0)
	    {
	        if(ProxDetectorS(5.0, playerid, id))
			{
			    if(TieneCerveza[playerid] == 0) return SendClientMessage(playerid,-1,"No tienes una cerveza.");
                if(IsPlayerNPC(id)) return 1;
			    new cantidadd[10];
			    switch(TieneCerveza[playerid])
 				{
					case 1:     cantidadd = "500";
					case 2:     cantidadd = "400";
					case 3:     cantidadd = "300";
					case 4:     cantidadd = "200";
					case 5:     cantidadd = "100";
  				}
  				new stringas[128],string2[128];
				format(stringas, sizeof(stringas), "Le ofreciste una cerveza con %s ml a {00CCFF}%s{FFFFFF}.",cantidadd, PlayerName(playerid));
				SendClientMessage(playerid,-1,stringas);
				format(string2, sizeof(string2), "{00CCFF}%s{FFFFFF} te ofrece una cerveza con %s ml, para aceptar usa {DBED16}/aceptar consumible", PlayerName(playerid), cantidadd);
				SendClientMessage(id,-1,string2);
				SprunkOfrecido[id] = TieneCerveza[playerid];
				TipoOferta[id] = 6;
				Ofertante[id] = playerid;
	    	}
	    	else SendClientMessage(playerid,0xEB0000FF,"Esa persona está muy lejos.");
	    }
		if(strcmp(item,"microfono",true) == 0)
		{
			if(Emisoras[playerid][TieneEmisora] == 0) return SendClientMessage(playerid, COLOR_WHITE, "No tienes una emisora, ve y consigue una en la entrada.");
			if(Emisoras[playerid][TransEmisora] == 0) return SendClientMessage(playerid, COLOR_WHITE, "No estas transmitiendo en ninguna cabina de radio.");
			if(IsPlayerConnected(id))
			{
				if(ProxDetectorS(5.0, playerid, id))
				{
					if(TieneMicrofono[id] == Emisoras[playerid][CabinaOcupada]) return SendClientMessage(playerid, COLOR_WHITE, "Ya le habias prestado un micrófono a ese jugador.");
					format(string, sizeof(string), "%s le presta un micrófono a %s.", PlayerName(playerid), PlayerName(id));
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					SetPlayerAttachedObject(id, 2, 19610, 5, 0.108999, 0.045000, 0.000000, -105.099998, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
					TieneMicrofono[id] = Emisoras[playerid][CabinaOcupada];
				}	else SendClientMessage(playerid, COLOR_WHITE, "Ese jugador esta lejos.");
			}	else SendClientMessage(playerid, COLOR_WHITE, "Ese jugador esta desconectado.");
		}
	}
	if(!sscanf(params,"s[15]s[15]",item,item2))
	{
	    if(strcmp(item,"acceso",true) == 0)
	    {
	    	if(Alquilado == false) return 1;
	    	if(strcmp(Alquilador,PlayerName(playerid),true) == 0)
	    	{
	    	    for(new i; i <= GetPlayerPoolSize(); i++)
	    	    {
					if(IsPlayerConnected(i))
					{
						if(strcmp(item2,PlayerName(i),true) == 0)
						{
						    if(EnSalonEvento(i) || EnSalonEvento2(i))
						    {
						        if(PermisoSalon[i] == false)
						        {
						            new nombree[MAX_PLAYER_NAME];
						            PermisoSalon[i] = true;
						            acount++;
	                        		GetPlayerName(i,nombree,sizeof(nombree));
	                        		format(string,sizeof(string),"Le diste acceso al salón a {F6F61D}%s{FFFFFF}, escribe {F6F61D}/quitar acceso{FFFFFF} [id] para quitarle el acceso.",nombree);
									SendClientMessage(playerid,-1,string);
									format(string,sizeof(string),"Recibiste una tarjeta de acceso al salón, escribe {F6F61D}/ayuda salon{FFFFFF} para recibir información.");
									SendClientMessage(i,-1,string);
									return 1;
						        }
						        else SendClientMessage(playerid,-1,"Ya le diste el acceso a esa persona.");
						    }
						    else SendClientMessage(playerid,-1,"El jugador debe estar dentro del salón.");
						}
					}
	    	    }
	    	    if(acount == 0) return SendClientMessage(playerid,-1,"Ese jugador está desconectado.");
	    	}
	    	else SendClientMessage(playerid,-1,"No tienes permiso para dar acceso.");
	    }
	}
	return 1;
}
CMD:remover2(playerid,params[])
{
	new opcion[128],jugadorid, Query2[256];
    if(PlayerInfo[playerid][pAdmin] <= ADMIN_LEVEL_BANEOS) return 0;
	if(!sscanf(params,"s[128]d",opcion,jugadorid))
	{
 		if(strcmp(opcion,"licencia",true) == 0)
	    {
	        if(PlayerInfo[jugadorid][pLicencia] == 0) return SendClientMessage(playerid,0xC24938FF,"Este jugador no tiene licencia de vuelo.");
	        PlayerInfo[jugadorid][pLicencia] = 0;
			SendClientMessage(playerid, 0xC24938FF, "Se te removió la licencia de vuelo por mal uso.");
			format(Query2, sizeof(Query2), "UPDATE `usuarios` SET `FinDiaL`='0',`FinMesL`='0',`FinAnoL`='0' WHERE `Username`='%s'",PlayerName(jugadorid));
			mysql_function_query(Conecction, Query2, true, "OnQueryFinish", "ii", 0, playerid);
	    }
	    if(strcmp(opcion,"fabrica",true) == 0)
	    {
	        SendClientMessage(playerid,-1,"Comando en mantenimiento.");
	    }
	}
	else SendClientMessage(playerid,-1,"MODO DE USO: /remover [fabrica / licencia] [id]");
	return 1;
}
CMD:quitar(playerid,params[])
{
	new opcion[15],id,string[147],naame[MAX_PLAYER_NAME],opcion2[40],naame2[MAX_PLAYER_NAME],acount=0;
	new jugadorid, seleccion[32];
	if(!sscanf(params,"s[15]",opcion))
	{
 		if(strcmp(opcion,"prenda",true) == 0 || strcmp(opcion,"prendas",true) == 0)
	    {
            QuitarPrendass(playerid);
			return 1;
	    }
	}
	if(!sscanf(params,"s[15]d",opcion,id))
	{
	    if(strcmp(opcion,"acceso",true) == 0)
	    {
	    	if(Alquilado == false) return 1;
	    	GetPlayerName(playerid,naame,sizeof(naame));
	    	if(strcmp(Alquilador,naame,true) == 0 || PermisoSalon[playerid] == true)
	    	{
	            if(IsPlayerConnected(id))
	            {
	                if(EnSalonEvento(id) || EnSalonEvento2(id))
	                {
	                    if(PermisoSalon[id] == true)
	                    {
	                        GetPlayerName(id,naame2,sizeof(naame2));
	                        if(strcmp(naame2,Alquilador,true) == 0) return SendClientMessage(playerid,-1,"No puedes quitarle el acceso a esa persona.");
	                        PermisoSalon[id] = false;
	                        format(string,sizeof(string),"Le quitaste el acceso al salón a {F6F61D}%s [%d]{F6F61D}.",naame2,id);
	                        SendClientMessage(playerid,-1,string);
	                        format(string,sizeof(string),"Te quitaron tu acceso, ya no tendras los beneficios de la tarjeta.");
							SendClientMessage(id,-1,string);
							return 1;
	                    }
	                    else SendClientMessage(playerid,-1,"Ese jugador no tiene acceso al salón.");
	                }
	                else SendClientMessage(playerid,-1,"El jugador debe estar dentro del salón.");
	            }
	            else SendClientMessage(playerid,-1,"Ese jugador está desconectado.");
	    	}
	    	else SendClientMessage(playerid,-1,"No tienes permiso para quitar acceso.");
	    }
	}
	if(!sscanf(params,"s[15]s[40]",opcion,opcion2))
	{
	    if(strcmp(opcion,"acceso",true) == 0)
	    {
	    	if(Alquilado == false) return 1;
	    	GetPlayerName(playerid,naame,sizeof(naame));
	    	if(strcmp(Alquilador,naame,true) == 0)
	    	{
	    	    for(new i; i <= GetPlayerPoolSize(); i++)
	    	    {
					if(IsPlayerConnected(i))
					{
						GetPlayerName(i,naame2,sizeof(naame2));
						if(strcmp(opcion2,naame2,true) == 0 || PermisoSalon[playerid] == true)
						{
						    if(EnSalonEvento(i) || EnSalonEvento2(i))
						    {
						        if(PermisoSalon[i] == true)
						        {
						            if(strcmp(naame2,Alquilador,true) == 0) return SendClientMessage(playerid,-1,"No puedes quitarle el acceso a esa persona.");
						            PermisoSalon[i] = false;
						            acount++;
                  					format(string,sizeof(string),"Le quitaste el acceso al salón a {F6F61D}%s [%d]{F6F61D}.",naame2,i);
	                        		SendClientMessage(playerid,-1,string);
	                        		format(string,sizeof(string),"Te quitaron tu acceso, ya no tendras los beneficios de la tarjeta.");
									SendClientMessage(id,-1,string);
									return 1;
						        }
						        else SendClientMessage(playerid,-1,"Ese jugador no tiene acceso al salón.");
						    }
						    else SendClientMessage(playerid,-1,"El jugador debe estar dentro del salón.");
						}
					}
	    	    }
	    	    if(acount == 0) return SendClientMessage(playerid,-1,"Ese jugador está desconectado.");
	    	}
	    	else SendClientMessage(playerid,-1,"No tienes permiso para quitar acceso.");
	    }
	}
	if(!sscanf(params, "s[32]u", seleccion, jugadorid))
	{
		if(strcmp(seleccion,"microfono",true) == 0)
		{
			if(Emisoras[playerid][TieneEmisora] == 0) return SendClientMessage(playerid, COLOR_WHITE, "No tienes una emisora, ve y consigue una en la entrada.");
			if(Emisoras[playerid][TransEmisora] == 0) return SendClientMessage(playerid, COLOR_WHITE, "No estas transmitiendo en ninguna cabina de radio.");
			if(IsPlayerConnected(jugadorid))
			{
				if(ProxDetectorS(5.0, playerid, jugadorid))
				{
					if(TieneMicrofono[jugadorid] == -1) return SendClientMessage(playerid, COLOR_WHITE, "Ese jugador no tiene micrófono.");
					format(string, sizeof(string), "%s le quito el micrófono a %s.", PlayerName(playerid), PlayerName(jugadorid));
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					TieneMicrofono[jugadorid] = -1;
				}	else SendClientMessage(playerid, COLOR_WHITE, "Ese jugador esta lejos.");
			}	else SendClientMessage(playerid, COLOR_WHITE, "Ese jugador esta desconectado.");
		}
	}
	return true;
}
CMD:cubrir(playerid,params[])
{
	new id,precio,Float:x,Float:y,Float:z,string[256],pName[30],pName2[32];
	if(PlayerInfo[playerid][pTrabajo] != T_Guardaespaldas && PlayerInfo[playerid][pTrabajo2] != T_Guardaespaldas) return SendClientMessage(playerid,-1,"Solamente los guardaespaldas pueden vender protección. Usa {DBED15}/ayuda trabajos{FFFFFF} para más información.");
	if(PlayerInfo[playerid][pTiempoCarcelS] > 0 || PlayerInfo[playerid][pTiempoJailS] > 0 || VariableCaido[playerid] == 1) return 1;
	if(EnCombate[playerid] == 1) return SendClientMessage(playerid,-1,"No puedes ofrecer chaleco mientras estas en combate.");
	if(!sscanf(params, "dd", id,precio))
	{
		if(IsPlayerConnected(id))
		GetPlayerPos(id, x,y,z);
		GetPlayerName(id, pName, 30);
		GetPlayerName(playerid, pName2, 30);
		if(id == playerid) return 1;
		if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid, -1, "No estas cerca de este jugador.");
		if(EnCombate[id] == 1) return SendClientMessage(playerid,-1,"No puedes ofrecer chaleco a un jugador que esta en combate.");
		if(precio >=400 && precio <= 2000)
		{
			format(string, 256, "{03C5DF}%s{FFFFFF} te ofrece un chaleco de protección por {2BFF00}$%d{FFFFFF}, para aceptarlo utiliza {DBED15}/aceptar proteccion", pName2, precio);
			SendClientMessage(id,COLOR_AZUL,string);
			format(string, 256, "Le ofrecistes un chaleco antibalas a {03C5DF}%s{FFFFFF} por {2BFF00}$%d{FFFFFF}.", pName, precio);
			SendClientMessage(playerid, -1, string);
			GuardaEspalda[id] = playerid;
			SetTimerEx("OfertaPerdida",60000,false,"d",id);
			dineropedido[id] = precio;
		}
		else SendClientMessage(playerid, -1, "El precio no peude ser menor a $400 ni mayor a $2000");
	}
	else return SendClientMessage(playerid, -1, "MODO DE USO: /cubrir id precio");
	return 1;
}
CMD:ofrecer(playerid,params[])
{
	new item[128], ID, precio, vehicleid = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][pTiempoCarcelS] > 0 || PlayerInfo[playerid][pTiempoJailS] > 0 || VariableCaido[playerid] == 1) return SendClientMessage(playerid,-1,"No puedes usar este comando en este momento");
	if(!sscanf(params, "s[128]dd", item,ID,precio))
	{
	    if(TiempoSexoOfrecido[playerid] > 0)
	    {
	        new string[128];
	        format(string,sizeof(string),"Debes esperar %d segundos para volver a ofrecer sexo.",TiempoSexoOfrecido[playerid]);
	        SendClientMessage(playerid,-1,string);
		 	return 1;
	    }
		if(ID == playerid) return 1;
		if(!IsPlayerConnected(ID)) return SendClientMessage(playerid, -1, "El jugador no está conectado");
		if(precio < 0) return 1;
		if(precio > 10000) return SendClientMessage(playerid,-1,"El precio máximo que puedes cobrar es de {00CC00}$10000{FFFFFF}.");
		if(strcmp(item, "sexo", true) == 0)
		{
            if(!IsPlayerInVehicle(ID, vehicleid)) return 1;
			{
			    if(GetPlayerVehicleSeat(playerid) != 1) return SendClientMessage(playerid,-1,"Tienes que estar en el asiento del lado derecho del vehículo.");
			    {
			        if(PlayerInfo[playerid][pTrabajo] != T_Prostituta && PlayerInfo[playerid][pTrabajo2] != T_Prostituta) ESPROSTI[ID] = 0;
			        else ESPROSTI[ID] = 1;

			        if(GetPlayerVehicleSeat(ID) != 0) return SendClientMessage(playerid,-1,"El otro tiene que estar en el asiento del lado izquierdo del vehículo.");
			        if(AVION(vehicleid) || MOTO(vehicleid)) return SendClientMessage(playerid,-1,"Busca un vehículo más discreto.");
			        precioofertax[ID] = precio;
			        SexoOral[ID] = playerid;
			        TiempoSexoOfrecido[playerid] = 60;
			        new string2[128];
			        format(string2, sizeof(string2), "Ofreciste practicarle sexo oral a {00CCFF}%s {FFFFFF}por {00CC00}$%d{FFFFFF}.", PlayerName(playerid), precio);
		   			SendClientMessage(playerid,-1,string2);
					format(string2, sizeof(string2), "{00CCFF}%s {FFFFFF}quiere practicarte sexo oral por {00CC00}$%d{FFFFFF}.\n¿Quieres aceptar?", PlayerName(playerid), precio);
					ShowPlayerDialog(ID, DSEXOO, DIALOG_STYLE_MSGBOX,"Oferta de sexo oral", string2, "Si", "No");
			    }
			}
       	}
    	else return SendClientMessage(playerid, -1, "Usa el comando {DBED15}/ofrecer sexo {FFFFFF}[{DBED15}id{FFFFFF}-o-{DBED15}nombre{FFFFFF}]");
	}
	return 1;
}
CMD:operaciones(playerid,params[])
{
	if(!EnCajero(playerid)) return 0;
	ShowPlayerDialog(playerid, BANCO, DIALOG_STYLE_LIST, "{FFFFFF}Selecciona la operación que desees realizar", "Retirar\nDepositar\nConsultar saldo \nTransferir dinero", "Seleccionar", "Cancelar");
	return 1;
}
CMD:consumir(playerid,params[])
{
	new item[32],string[256],pName[32];
	GetPlayerName(playerid, pName, 32);
	if(!sscanf(params, "s[32]", item))
	{
		if(strcmp(item, "crack", true) == 0)
		{
			new Float:resta,Float:Chaleco;
			GetPlayerArmour(playerid, Chaleco);
			resta = 100-Chaleco;
			if(PlayerInfo[playerid][pCrack] <= 0) return SendClientMessage(playerid, -1, "No tienes gramos de crack.");
			if(EnCombate[playerid] == 1) return SendClientMessage(playerid,-1,"No puedes consumir crack estando en combate.");
			if(ConsumirCrack[playerid] == 0)
			{
				if(resta >= 10){
					EstablecerChaleco(playerid, Chaleco+10.0);
				}
				else if(resta < 10){
					EstablecerChaleco(playerid, Chaleco+resta);
				}
				PlayerInfo[playerid][pCrack]--;
				ConsumirCrack[playerid] = 1;
				TiempoCrack[playerid] = 30;
				SetTimerEx("ConsumirC",30000,false,"d",playerid);
				LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
				AccionesRol(playerid,"consume crack.", 20);
				Consumible[playerid] = 1;
				RevisarLogroCrack(playerid);
				SetTimerEx("Consumiendo",5000,false,"d",playerid);
			}
			else
			{
				format(string,256,"Por favor espera {FF3300}%d{FFFFFF} segundos para volver a consumir crack.",TiempoCrack[playerid]);
				SendClientMessage(playerid, -1, string);
			}
		}
		else if(strcmp(item, "caramelo", true) == 0 || strcmp(item, "caramelos", true) == 0 || strcmp(item, "dulces", true) == 0)
		{
			if(PlayerInfo[playerid][pCaramelos] <= 0) return SendClientMessage(playerid, -1, "No tienes caramelos para consumir.");
			if(EnCombate[playerid] == 1) return SendClientMessage(playerid,-1,"No puedes consumir caramelos en combate.");
			if(ConsumirCaramelos[playerid] == 0)
			{
				PlayerInfo[playerid][pCaramelos]--;
				ConsumirCaramelos[playerid] = 1;
				TiempoCaramelos[playerid] = 30;
				PlayerInfo[playerid][pHambre] -= 10;
				SetPlayerProgressBarValue(playerid,Progressbar[playerid][Hambre], PlayerInfo[playerid][pHambre]);
				UpdatePlayerProgressBar(playerid,Progressbar[playerid][Hambre]);
				SetTimerEx("ConsumirCaramelosx",30000,false,"d",playerid);
				LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
				AccionesRol(playerid,"come un caramelo.", 20);
				Consumible[playerid] = 1;
				SetTimerEx("Consumiendo",5000,false,"d",playerid);
			}
			else
			{
				format(string,256,"Por favor espera {FF3300}%d{FFFFFF} segundos para volver a consumir un caramelo.",TiempoCaramelos[playerid]);
				SendClientMessage(playerid, -1, string);
			}
		}
		else if(strcmp(item, "medicamento", true) == 0 || strcmp(item, "medicamentos", true) == 0 || strcmp(item, "remedio", true) == 0)
		{
			new Float:resta2,Float:Vida;
			GetPlayerHealth(playerid, Vida);
			resta2 = 100-Vida;
			if(PlayerInfo[playerid][pMedicamentos] <= 0) return SendClientMessage(playerid, -1, "Ya no te quedan medicamentos.");
			if(EnCombate[playerid] == 1) return SendClientMessage(playerid,-1,"No puedes consumir remedios estando en combate.");
			if(ConsumirMedicamento[playerid] == 0)
			{
				if(resta2 >= 10){
					EstablecerVida(playerid, Vida+10.0);
				}
				else if(resta2 < 10){
					EstablecerVida(playerid, Vida+resta2);
				}
				PlayerInfo[playerid][pMedicamentos]--;
				ConsumirMedicamento[playerid] = 1;
				TiempoMedicamentos[playerid] = 30;
				SetTimerEx("ConsumirM",30000,false,"d",playerid);
				LoopingAnim(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
				AccionesRol(playerid,"consume un medicamento.", 20);
				Consumible[playerid] = 1;
				RevisarLogroRemedio(playerid);
				SetTimerEx("Consumiendo",5000,false,"d",playerid);
			}
			else
			{
				format(string,256,"Por favor espera {FF3300}%d{FFFFFF} segundos para volver a consumir medicamentos.",TiempoMedicamentos[playerid]);
				SendClientMessage(playerid, -1, string);
			}
		}
		else if(sscanf(params, "s[30]", item))
		{
		    SendClientMessage(playerid,-1,"Para consumir usa {DBED16}/consumir crack {FFFFFF}o {DBED16}/consumir medicamentos");
		}
	}
	return 1;
}
CMD:abandonar(playerid,params[])
{
	new item[32];
	if(!sscanf(params, "s[32]", item))
	{
		if(strcmp(item, "carga", true) == 0)
		{
			new autoid;
			if(PlayerInfo[playerid][pTrabajo] != T_Camionero && PlayerInfo[playerid][pTrabajo2] != T_Camionero) return SendClientMessage(playerid, -1, "No eres camionero");
			if(IsPlayerInAnyVehicle(playerid))
			autoid = GetPlayerVehicleID(playerid);
			if(!CAMION(autoid)) return SendClientMessage(playerid, -1, "No estas en un camión");
			if(CamionCargado[autoid] < 1) return SendClientMessage(playerid, -1, "Este camión no esta cargado.");
			{
				Chofer[autoid] = INVALID_PLAYER_ID;
				Respawnear(autoid);
				CamionCargado[autoid]= 0;
				SendClientMessage(playerid, -1, "Fallaste en tu trabajo de camionero, no se te pagará nada.");
			}
		}
	}
	return 1;
}
CMD:cord(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	new Float: pos[3], int;
	if(sscanf(params, "p<,>fffp< >d", pos[0], pos[1], pos[2], int)) return SendClientMessage(playerid, COLOR_WHITE, "USA: /cord [coordenada x] [coordenada y] [coordenada z] [interior]");
	SetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	SetPlayerInterior(playerid, int);
	return 1;
}
CMD:chaleco(playerid,params[])
{
	if(PlayerInfo[playerid][pDuty] != 1) return 1;
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 249.1478,74.3152,1003.6406))
	{
	    if(PlayerInfo[playerid][jSexo] == 2) SetPlayerAttachedObject(playerid, 3,19142,1,0.109797,0.053399,-0.002000,0.000000,-2.299998,0.299997,1.046000,0.986998,0.893000);
		EstablecerChaleco(playerid, 100);
	}
	return 1;
}
CMD:armas(playerid,params[])
{
	if(PlayerInfo[playerid][pDuty] != 1) return 1;
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 250.4184,73.3132,1003.6406))
	{
		DarArma(playerid, 3);
	}
	return 1;
}
CMD:cargar(playerid,params[])
{
	new item[128];
	if(!sscanf(params,"s[128]", item))
	{
		if(strcmp(item, "camion", true) == 0)
		{
			new autoid;
			if(IsPlayerInAnyVehicle(playerid))
			autoid = GetPlayerVehicleID(playerid);
			if(PlayerInfo[playerid][pTrabajo] != T_Camionero && PlayerInfo[playerid][pTrabajo2] != T_Camionero) return 1;
			{
			    if(!IsPlayerInAnyVehicle(playerid)) return 1;
				if(!CAMION(autoid)) return 1;
				{
					for(new i=0;i<MAX_VEHICLES;i++)
					{
        				if(Chofer[i] == playerid && Chofer[i] != INVALID_PLAYER_ID)
						{
						    Chofer[i] = INVALID_PLAYER_ID;
						    CamionCargado[i] = 0;
						}
					}
					if(CamionCargado[autoid] == 0)
					{
						if(CargandoC[playerid] == 0)
						{
							SetPVarInt(playerid, "Camionero", 1);
							SendClientMessage(playerid, -1, "Se ha marcado en el mapa la ubicación donde van a cargar el camión.");
							MarcadoCamioneroGPS(playerid,-1711.7150,62.1237,3.5495,19.0);
							CamionID[playerid] = autoid;
						}
					}
				}
			}
		}
		if(strcmp(item, "tanque", true)==0)
		{
			if(Bidon[playerid] == 0) return SendClientMessage(playerid, -1, "Tu no tienes un bidon de gasolina");
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Debes estar en un vehículo para utilizar el bidon");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,-1,"Debes estar manejando el vehiculo para usar el bidon");
			{
			    new autoid = GetPlayerVehicleID(playerid), lleno, resta;
			    new modelo = GetVehicleModel(autoid);
			    new vehiclefuel = CombustibleCoche(modelo);
			    resta = vehiclefuel-VehicleFuel[autoid];
				lleno = vehiclefuel;
				if(VehicleFuel[autoid] == lleno) return SendClientMessage(playerid,-1,"El tanque de combustible está lleno");
				if(resta > 5)
				{
					VehicleFuel[autoid] += 5;
					Bidon[playerid] = 0;
					SendClientMessage(playerid, -1,"{DBED16}El tanque de combustible fue cargado con el bidón de 5 litros.");
					RemovePlayerAttachedObject(playerid, 2);
				}
				else if(resta < 5)
				{
					VehicleFuel[autoid] += resta;
					Bidon[playerid] = 0;
					SendClientMessage(playerid, -1,"{DBED16}El tanque de combustible fue cargado con el bidón de 5 litros."); // No hay nada
					RemovePlayerAttachedObject(playerid, 2);
				}
			}
		}
	}
	return 1;
}
CMD:vender(playerid,params[])
{
	new item[32],ID,precio, stringas[128],cantidad;
	if(TiempoDarDinero[playerid] > 0)
	{
		if(TiempoDarDinero[playerid] > 60)format(stringas,sizeof(stringas),"Por favor espera {FF0000}%d:%d {FFFFFF}(m:s){FFFFFF}.",TiempoDarDinero[playerid]/60, TiempoDarDinero[playerid]%(60));
		else if(TiempoDarDinero[playerid] < 60)format(stringas,sizeof(stringas),"Por favor espera {FF0000}%d segundos{FFFFFF}.",TiempoDarDinero[playerid]%(60));
		return SendClientMessage(playerid, -1,stringas);
	}
	if(TiempoVenta[playerid] == 0)
	{
		if(!sscanf(params, "s[32]dd", item,ID,precio))
		{
		    new Float:x,Float:y,Float:z;
		    new pName[32],pNameid[32],string[256];
			GetPlayerName(ID, pNameid, 32);
			GetPlayerName(playerid, pName, 32);
			if(strcmp(item, "manopla", true) == 0)
			{
			    GetPlayerPos(ID,x,y,z);
				if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
				if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte un arma tu mismo.");
			    if(PlayerInfo[playerid][pWP0] != 1)	return SendClientMessage(playerid, -1, "No puedes vender un arma que no tienes.");
				if(!procesoOferta(1, precio, playerid, ID))	return 1;
				format(string, 256, "Le ofrecistes a {00CCFF}%s{FFFFFF} una Manopla por {00CC00}$%d{FFFFFF}.",pNameid,precio);
				SendClientMessage(playerid, -1,string);
				format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece una manopla por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar arma{FFFFFF}.", pName,precio);
				SendClientMessage(ID, -1, string);
			}
			else if(strcmp(item, "palo-de-golf", true) == 0)
			{
			    GetPlayerPos(ID,x,y,z);
				if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
				if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte un arma tu mismo.");
				//No tiene bate
				if(!procesoOferta(2, precio, playerid, ID))	return 1;
				format(string, 256, "Le ofrecistes a {00CCFF}%s{FFFFFF} una Palo de golf por {00CC00}$%d{FFFFFF}.",pNameid,precio);
				SendClientMessage(playerid, -1,string);
				format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece un palo de golf por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar arma{FFFFFF}.", pName,precio);
				SendClientMessage(ID, -1, string);
			}
			else if(strcmp(item, "cuchillo", true) == 0)
			{
			    GetPlayerPos(ID,x,y,z);
				if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte un arma tu mismo.");
				if(PlayerInfo[playerid][pWP1] != 4)	return SendClientMessage(playerid, -1, "No puedes vender un arma que no tienes.");
				if(!procesoOferta(4, precio, playerid, ID))	return 1;
				format(string, 256, "Le ofrecistes a {00CCFF}%s{FFFFFF} un cuchillo por {00CC00}$%d{FFFFFF}.",pNameid,precio);
				SendClientMessage(playerid, -1,string);
				format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece un cuchillo por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar arma{FFFFFF}.", pName,precio);
				SendClientMessage(ID, -1, string);
			}
			else if(strcmp(item, "bate-de-beisbol", true) == 0)
			{
			    GetPlayerPos(ID,x,y,z);
				if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
				if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte un arma tu mismo.");
				if(PlayerInfo[playerid][pWP1] != 5) return SendClientMessage(playerid, -1, "No puedes vender un arma que no tienes.");
				if(!procesoOferta(5, precio, playerid, ID))	return 1;
				format(string, 256, "Le ofrecistes a {00CCFF}%s{FFFFFF} un Bate de béisbol por {00CC00}$%d{FFFFFF}.",pNameid,precio);
				SendClientMessage(playerid, -1,string);
				format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece un Bate de béisbol por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar arma{FFFFFF}.", pName,precio);
				SendClientMessage(ID, -1, string);
			}
			else if(strcmp(item, "pala", true) == 0)
			{
			    GetPlayerPos(ID,x,y,z);
				if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
				if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte un arma tu mismo.");
				if(PlayerInfo[playerid][pWP1] != 6)	return SendClientMessage(playerid, -1, "No puedes vender un arma que no tienes.");
				if(!procesoOferta(6, precio, playerid, ID))	return 1;
				format(string, 256, "Le ofrecistes a {00CCFF}%s{FFFFFF} una Pala por {00CC00}$%d{FFFFFF}.",pNameid,precio);
				SendClientMessage(playerid, -1,string);
				format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece una pala por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar arma{FFFFFF}.", pName,precio);
				SendClientMessage(ID, -1, string);
			}
			else if(strcmp(item, "palo-de-billar", true) == 0)
			{
			    GetPlayerPos(ID,x,y,z);
				if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
				if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte un arma tu mismo.");
				if(PlayerInfo[playerid][pWP1] != 7)	return SendClientMessage(playerid, -1, "No puedes vender un arma que no tienes.");
				if(!procesoOferta(7, precio, playerid, ID))	return 1;
				format(string, 256, "Le ofrecistes a {00CCFF}%s{FFFFFF} una Palo de billar por {00CC00}$%d{FFFFFF}.",pNameid,precio);
				SendClientMessage(playerid, -1,string);
				format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece una palo de billar por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar arma{FFFFFF}.", pName,precio);
				SendClientMessage(ID, -1, string);
			}
			else if(strcmp(item, "katana", true) == 0)
			{
			    GetPlayerPos(ID,x,y,z);
				if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
				if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte un arma tu mismo.");
				if(PlayerInfo[playerid][pWP1] != 8)	return SendClientMessage(playerid, -1, "No puedes vender un arma que no tienes.");
				if(!procesoOferta(8, precio, playerid, ID))	return 1;
				format(string, 256, "Le ofrecistes a {00CCFF}%s{FFFFFF} una Katana por {00CC00}$%d{FFFFFF}.",pNameid,precio);
				SendClientMessage(playerid, -1,string);
				format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece una katana por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar arma{FFFFFF}.", pName,precio);
				SendClientMessage(ID, -1, string);
			}
			else if(strcmp(item, "9mm", true) == 0)
			{
			    GetPlayerPos(ID,x,y,z);
				if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
				if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte un arma tu mismo.");
				if(PlayerInfo[playerid][pWP2] != 22) return SendClientMessage(playerid, -1, "No puedes vender un arma que no tienes.");
				if(!procesoOferta(22, precio, playerid, ID)) return 1;
				format(string, 256, "Le ofrecistes a {00CCFF}%s{FFFFFF} una pistola 9mm por {00CC00}$%d{FFFFFF}.",pNameid,precio);
				SendClientMessage(playerid, -1,string);
				format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece una pistola 9mm por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar arma{FFFFFF}.", pName,precio);
				SendClientMessage(ID, -1, string);
			}
			else if(strcmp(item, "9mm-silenciada", true) == 0)
			{
			    GetPlayerPos(ID,x,y,z);
				if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
				if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte un arma tu mismo.");
				if(PlayerInfo[playerid][pWP2] != 23) return SendClientMessage(playerid, -1, "No puedes vender un arma que no tienes.");
				if(!procesoOferta(23, precio, playerid, ID)) return 1;
				format(string, 256, "Le ofrecistes a {00CCFF}%s{FFFFFF} una 9mm silenciada por {00CC00}$%d{FFFFFF}.",pNameid,precio);
				SendClientMessage(playerid, -1,string);
				format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece una 9mm silenciada por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar arma{FFFFFF}.", pName,precio);
				SendClientMessage(ID, -1, string);
			}
			else if(strcmp(item, "desert-eagle", true) == 0)
			{
			    GetPlayerPos(ID,x,y,z);
				if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
				if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte un arma tu mismo.");
				if(PlayerInfo[playerid][pWP2] != 24) return SendClientMessage(playerid, -1, "No puedes vender un arma que no tienes.");
				if(!procesoOferta(24, precio, playerid, ID)) return 1;
				format(string, 256, "Le ofrecistes a {00CCFF}%s{FFFFFF} una Desert eagle por {00CC00}$%d{FFFFFF}.",pNameid,precio);
				SendClientMessage(playerid, -1,string);
				format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece una Desert eagle por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar arma{FFFFFF}.", pName,precio);
				SendClientMessage(ID, -1, string);
			}
			else if(strcmp(item, "escopeta", true) == 0)
			{
			    GetPlayerPos(ID,x,y,z);
				if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
				if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte un arma tu mismo.");
				if(PlayerInfo[playerid][pWP3] != 25) return SendClientMessage(playerid, -1, "No puedes vender un arma que no tienes.");
				if(!procesoOferta(25, precio, playerid, ID)) return 1;
				format(string, 256, "Le ofrecistes a {00CCFF}%s{FFFFFF} una Escopeta por {00CC00}$%d{FFFFFF}.",pNameid,precio);
				SendClientMessage(playerid, -1,string);
				format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece una Escopeta por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar arma{FFFFFF}.", pName,precio);
				SendClientMessage(ID, -1, string);
			}
			else if(strcmp(item, "Escopeta-de-combate", true) == 0)
			{
			    GetPlayerPos(ID,x,y,z);
				if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
				if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte un arma tu mismo.");
				if(PlayerInfo[playerid][pWP3] != 27) return SendClientMessage(playerid, -1, "No puedes vender un arma que no tienes.");
				if(!procesoOferta(27, precio, playerid, ID)) return 1;
				format(string, 256, "Le ofrecistes a {00CCFF}%s{FFFFFF} una Escopeta de Combate por {00CC00}$%d{FFFFFF}.",pNameid,precio);
				SendClientMessage(playerid, -1,string);
				format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece una Escopeta de Combate por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar arma{FFFFFF}.", pName,precio);
				SendClientMessage(ID, -1, string);
			}
			else if(strcmp(item, "mp5", true) == 0)
			{
			    GetPlayerPos(ID,x,y,z);
				if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
				if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte un arma tu mismo.");
				if(PlayerInfo[playerid][pWP4] != 29) return SendClientMessage(playerid, -1, "No puedes vender un arma que no tienes.");
				if(!procesoOferta(29, precio, playerid, ID)) return 1;
				format(string, 256, "Le ofrecistes a {00CCFF}%s{FFFFFF} una MP5 por {00CC00}$%d{FFFFFF}.",pNameid,precio);
				SendClientMessage(playerid, -1,string);
				format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece una MP5 por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar arma{FFFFFF}.", pName,precio);
				SendClientMessage(ID, -1, string);
			}
			else if(strcmp(item, "granada", true) == 0)
			{
			    GetPlayerPos(ID,x,y,z);
				if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
				if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte un arma tu mismo.");
				if(PlayerInfo[playerid][pWP8] != 16) return SendClientMessage(playerid, -1, "No puedes vender un arma que no tienes.");
				if(!procesoOferta(16, precio, playerid, ID)) return 1;
				format(string, 256, "Le ofrecistes a {00CCFF}%s{FFFFFF} una Granada por {00CC00}$%d{FFFFFF}.",pNameid,precio);
				SendClientMessage(playerid, -1,string);
				format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece una Granada por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar arma{FFFFFF}.", pName,precio);
				SendClientMessage(ID, -1, string);
				TiempoVenta[playerid] = 60;
			}
			else if(strcmp(item, "ak-47", true) == 0)
			{
			    GetPlayerPos(ID,x,y,z);
				if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
				if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte un arma tu mismo.");
				if(PlayerInfo[playerid][pWP5] != 30) return SendClientMessage(playerid, -1, "No puedes vender un arma que no tienes.");
				if(!procesoOferta(30, precio, playerid, ID)) return 1;
				format(string, 256, "Le ofrecistes a {00CCFF}%s{FFFFFF} una Ak-47 por {00CC00}$%d{FFFFFF}.",pNameid,precio);
				SendClientMessage(playerid, -1,string);
				format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece una Ak-47 por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar arma{FFFFFF}.", pName,precio);
				SendClientMessage(ID, -1, string);
			}
			else if(strcmp(item, "M4", true) == 0)
			{
			    GetPlayerPos(ID,x,y,z);
				if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
				if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte un arma tu mismo.");
				if(PlayerInfo[playerid][pWP5] != 31) return SendClientMessage(playerid, -1, "No puedes vender un arma que no tienes.");
				if(!procesoOferta(31, precio, playerid, ID)) return 1;
				format(string, 256, "Le ofrecistes a {00CCFF}%s{FFFFFF} una M4 por {00CC00}$%d{FFFFFF}.",pNameid,precio);
				SendClientMessage(playerid, -1,string);
				format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece una M4 por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar arma{FFFFFF}.", pName,precio);
				SendClientMessage(ID, -1, string);
			}
			else if(strcmp(item, "rifle", true) == 0)
			{
			    GetPlayerPos(ID,x,y,z);
				if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
				if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte un arma tu mismo.");
				if(PlayerInfo[playerid][pWP6] != 33) return SendClientMessage(playerid, -1, "No puedes vender un arma que no tienes.");
				if(!procesoOferta(33, precio, playerid, ID)) return 1;
				format(string, 256, "Le ofrecistes a {00CCFF}%s{FFFFFF} un Rifle por {00CC00}$%d{FFFFFF}.",pNameid,precio);
				SendClientMessage(playerid, -1,string);
				format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece un Rifle por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar arma{FFFFFF}.", pName,precio);
				SendClientMessage(ID, -1, string);
			}
			else if(strcmp(item, "camara", true) == 0)
			{
			    GetPlayerPos(ID,x,y,z);
				if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
				if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte un arma tu mismo.");
				if(PlayerInfo[playerid][pWP9] != 43) return SendClientMessage(playerid, -1, "No puedes vender un arma que no tienes.");
				if(!procesoOferta(43, precio, playerid, ID)) return 1;
				format(string, 256, "Le ofrecistes a {00CCFF}%s{FFFFFF} una camara por {00CC00}$%d{FFFFFF}.",pNameid,precio);
				SendClientMessage(playerid, -1,string);
				format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece una camara por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar arma{FFFFFF}.", pName,precio);
				SendClientMessage(ID, -1, string);
			}
			else if(strcmp(item, ""SERVER_COIN3"", true) == 0)
			{
			    GetPlayerPos(ID,x,y,z);
			    if(!sscanf(params, "s[29]ddd", item,ID,cantidad,precio))
			    if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
			    if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte tu mismo.");
			    if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
			    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xEB0000FF,"Esa persona está muy lejos.");
			    if(cantidad == 0) return SendClientMessage(playerid,0xEB0000FF,"Ingresa la cantidad que quieres vender.");
			    if(PlayerInfo[playerid][Moneda] < cantidad) return SendClientMessage(playerid, -1, "{FF0000}No tienes{FFFFFF} la cantidad de "SERVER_COIN" que quieres vender..");
			    if(precio > cantidad*130000) return SendClientMessage(playerid,-1,"No puedes vender a más de $130.000 cada "SERVER_COIN".");
				if(IsPlayerConnected(ID))
				{
					EVOfrecidos[ID] = cantidad;
					dineropedido[ID] = precio;
					ofertador[ID] = playerid;
					LeOfreci[playerid] = ID;
					Deposito[playerid] = ID;
			  		new stringg[256];
					format(stringg,256,"{FFFFFF}Estás por ofrecerle {89746A}%d "SERVER_COIN"{FFFFFF} a {00CCFF}%s{FFFFFF} por {00CC00}$%d{FFFFFF}.\n\nCada "SERVER_COIN" lo estarías cobrando a {00CC00}$%d{FFFFFF}\n\n¿Estás seguro de realizar esta transacción?",EVOfrecidos[ID],pNameid,dineropedido[ID],dineropedido[ID]/EVOfrecidos[ID]);
					ShowPlayerDialog(playerid, VENDERRZ, DIALOG_STYLE_MSGBOX, "{DBED15}!ATENCIÓN!", stringg, "Si","No");
			  		YaOfrecio[playerid] = 0;
					if(idTimerOfertaPerdida[ID] != -1)
					{
						KillTimer(idTimerOfertaPerdida[ID]);
						idTimerOfertaPerdida[ID] = -1;
					}
					if(idTimerTiempoVenta[playerid] != -1)
					{
						KillTimer(idTimerTiempoVenta[playerid]);
						idTimerOfertaPerdida[playerid] = -1;
					}
					idTimerTiempoVenta[playerid] = SetTimerEx("TiempoVender", 60000, false, "d", playerid);
					if(precio <= 100)
					{
						format(string, 256, "Jugador %s (ID:{FFFFFF} %d{DBED15} | Nivel: %d) ofrece %d "SERVER_COIN2" por $%d a %s (ID:{FFFFFF} %d{DBED15} | Nivel: %d)", pName,playerid,GetPlayerScore(playerid),cantidad,precio,pNameid,ID,GetPlayerScore(ID));
						MensajeAdmin(COLOR_YELLOW, string, ADMIN_LEVEL_BANEOS);
					}
				}
			}
			else if(strcmp(item, "piezas", true) == 0)
			{
				if(!sscanf(params, "s[32]ddd", item,ID,cantidad,precio))
			    GetPlayerPos(ID,x,y,z);
			    if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
			    if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte tu mismo.");
			    if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
			    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xEB0000FF,"Esa persona está muy lejos.");
			    if(cantidad == 0) return SendClientMessage(playerid,0xEB0000FF,"Ingresa la cantidad que quieres vender.");
			    if(PlayerInfo[playerid][pMateriales] < cantidad) return SendClientMessage(playerid, -1, "{FF0000}No tienes{FFFFFF} la cantidad de piezas que quieres vender.");
			    if(precio > cantidad*400) return SendClientMessage(playerid,-1,"No puedes vender a más de $400 cada pieza.");
				if(IsPlayerConnected(ID))
				{
				    format(string, 256, "Le ofreciste %d piezas de armas a {00CCFF}%s{FFFFFF} por {00CC00}$%d{FFFFFF}.",cantidad,pNameid,precio);
					SendClientMessage(playerid, -1,string);
					PiezasOfrecidas[ID] = cantidad;
					dineropedido[ID] = precio;
					ofertador[ID] = playerid;
					format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece %d piezas de armas por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar piezas", pName,cantidad,precio);
					SendClientMessage(ID, -1, string);
					TiempoVenta[playerid] = 60;
					if(idTimerOfertaPerdida[ID] != -1)
					{
						KillTimer(idTimerOfertaPerdida[ID]);
						idTimerOfertaPerdida[ID] = -1;
					}
					idTimerOfertaPerdida[ID] = SetTimerEx("OfertaPerdida", 60000, false, "d", ID);
					TiempoVenta[playerid] = 60;
					if(idTimerTiempoVenta[playerid] != -1)
					{
						KillTimer(idTimerTiempoVenta[playerid]);
						idTimerOfertaPerdida[playerid] = -1;
					}
					idTimerTiempoVenta[playerid] = SetTimerEx("TiempoVender", 60000, false, "d", playerid);
					if(precio <= 100)
					{
						format(string, 256, "Jugador %s (ID:{FFFFFF} %d{DBED16} | Nivel: %d) ofrece %d piezas por $%d a %s (ID:{FFFFFF} %d{DBED16} | Nivel: %d)", pName,playerid,GetPlayerScore(playerid),cantidad,precio,pNameid,ID,GetPlayerScore(ID));
						MensajeAdmin(COLOR_YELLOW, string, ADMIN_LEVEL_BANEOS);
					}
				}
			}
			else if(strcmp(item, "crack", true) == 0)
			{
				if(!sscanf(params, "s[32]ddd", item,ID,cantidad,precio))
				{
				    GetPlayerPos(ID,x,y,z);
				    if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
				    if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte tu mismo.");
				    if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xEB0000FF,"Esa persona está muy lejos.");
				    if(cantidad == 0) return SendClientMessage(playerid,0xEB0000FF,"Ingresa la cantidad que quieres vender.");
				    if(PlayerInfo[playerid][pCrack] < cantidad) return SendClientMessage(playerid, -1, "{FF0000}No tienes{FFFFFF} la cantidad de crack que quieres vender.");
				    if(precio > cantidad*400) return SendClientMessage(playerid,-1,"No puedes vender a más de $400 cada gramo de crack.");
					if(IsPlayerConnected(ID))
					{

						format(string, 256, "Le ofreciste %dg de crack a {00CCFF}%s{FFFFFF} por {00CC00}$%d{FFFFFF}.",cantidad,pNameid,precio);
						SendClientMessage(playerid, -1,string);
						CrackOfrecidos[ID] = cantidad;
						dineropedido[ID] = precio;
						ofertador[ID] = playerid;
						TipoOferta[ID] = 1;
						format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece %dg de crack por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar consumibles", pName,cantidad,precio);
						SendClientMessage(ID, -1, string);
						TiempoVenta[playerid] = 60;
						if(idTimerOfertaPerdida[ID] != -1)
						{
							KillTimer(idTimerOfertaPerdida[ID]);
							idTimerOfertaPerdida[ID] = -1;
						}
						idTimerOfertaPerdida[ID] = SetTimerEx("OfertaPerdida", 60000, false, "d", ID);
						TiempoVenta[playerid] = 60;
						if(idTimerTiempoVenta[playerid] != -1)
						{
							KillTimer(idTimerTiempoVenta[playerid]);
							idTimerOfertaPerdida[playerid] = -1;
						}
						idTimerTiempoVenta[playerid] = SetTimerEx("TiempoVender", 60000, false, "d", playerid);
						if(precio <= 100)
						{
							format(string, 256, "Jugador %s (ID:{FFFFFF} %d{DBED16} | Nivel: %d) ofrece %d crack por $%d a %s (ID:{FFFFFF} %d{DBED16} | Nivel: %d)", pName,playerid,GetPlayerScore(playerid),cantidad,precio,pNameid,ID,GetPlayerScore(ID));
							MensajeAdmin(COLOR_YELLOW, string, ADMIN_LEVEL_BANEOS);
						}
					}
				}
				else SendClientMessage(playerid,-1,"Usa /vender [crack/medicamento] [id/nombre] [cantidad] [precio].");
			}
			else if(strcmp(item, "medicamentos", true) == 0 || strcmp(item, "remedio", true) == 0 || strcmp(item, "remedios", true) == 0)
			{
				if(!sscanf(params, "s[32]ddd", item,ID,cantidad,precio))
				{
				    GetPlayerPos(ID,x,y,z);
				    if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
				    if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte tu mismo.");
				    if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
				    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xEB0000FF,"Esa persona está muy lejos.");
				    if(cantidad == 0) return SendClientMessage(playerid,0xEB0000FF,"Ingresa la cantidad que quieres vender.");
				    if(PlayerInfo[playerid][pRemedios] < cantidad) return SendClientMessage(playerid, -1, "{FF0000}No tienes{FFFFFF} la cantidad de medicamentos que quieres vender.");
				    if(precio > cantidad*400) return SendClientMessage(playerid,-1,"No puedes vender a más de $400 cada medicamento.");
					if(IsPlayerConnected(ID))
					{
					    format(string, 256, "Le ofreciste %d medicamentos a {00CCFF}%s{FFFFFF} por {00CC00}$%d{FFFFFF}.",cantidad,pNameid,precio);
						SendClientMessage(playerid, -1,string);
						MedicamentosOfrecidos[ID] = cantidad;
						dineropedido[ID] = precio;
						ofertador[ID] = playerid;
						TipoOferta[ID] = 2;
						format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece %d medicamentos por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar consumibles", pName,cantidad,precio);
						SendClientMessage(ID, -1, string);
						TiempoVenta[playerid] = 60;
						if(idTimerOfertaPerdida[ID] != -1)
						{
							KillTimer(idTimerOfertaPerdida[ID]);
							idTimerOfertaPerdida[ID] = -1;
						}
						idTimerOfertaPerdida[ID] = SetTimerEx("OfertaPerdida", 60000, false, "d", ID);
						TiempoVenta[playerid] = 60;
						if(idTimerTiempoVenta[playerid] != -1)
						{
							KillTimer(idTimerTiempoVenta[playerid]);
							idTimerOfertaPerdida[playerid] = -1;
						}
						idTimerTiempoVenta[playerid] = SetTimerEx("TiempoVender", 60000, false, "d", playerid);
						if(precio <= 100)
						{
							format(string, 256, "Jugador %s (ID:{FFFFFF} %d{DBED16} | Nivel: %d) ofrece %d medicamentos por $%d a %s (ID:{FFFFFF} %d{DBED16} | Nivel: %d)", pName,playerid,GetPlayerScore(playerid),cantidad,precio,pNameid,ID,GetPlayerScore(ID));
							MensajeAdmin(COLOR_YELLOW, string, ADMIN_LEVEL_BANEOS);
						}
					}
				}
				else SendClientMessage(playerid,-1,"Usa /vender [crack/medicamento] [id/nombre] [cantidad] [precio].");
			}
			else if(strcmp(item, "marihuana", true) == 0)
			{
				if(!sscanf(params, "s[32]ddd", item,ID,cantidad,precio))
                GetPlayerPos(ID,x,y,z);
			    if(precio < 0) return SendClientMessage(playerid,0xFF0000FF,"Valor inválido.");
			    if(ID == playerid) return SendClientMessage(playerid,0xFF0000FF,"No puedes venderte tu mismo.");
			    if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0xFF0000FF,"Esa persona está muy lejos.");
			    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,0xEB0000FF,"Esa persona está muy lejos.");
			    if(cantidad == 0) return SendClientMessage(playerid,0xEB0000FF,"Ingresa la cantidad que quieres vender.");
			    if(PlayerInfo[playerid][pMarihuana] < cantidad) return SendClientMessage(playerid, -1, "{FF0000}No tienes{FFFFFF} la cantidad de marihuana que quieres vender.");
			    if(precio > cantidad*500) return SendClientMessage(playerid,-1,"No puedes vender a más de $500 cada gramo de marihuana.");
				if(IsPlayerConnected(ID))
				{
					format(string, 256, "Le ofreciste %dg de marihuana a {00CCFF}%s{FFFFFF} por {00CC00}$%d{FFFFFF}.",cantidad,pNameid,precio);
					SendClientMessage(playerid, -1,string);
					MarihuanaOfrecida[ID] = cantidad;
					dineropedido[ID] = precio;
					ofertador[ID] = playerid;
					TipoOferta[ID] = 3;
					format(string, 256, "{00CCFF}%s{FFFFFF} te ofrece %d marihuana por {00CC00}$%d{FFFFFF}, para aceptar escribe {DBED16}/aceptar consumibles", pName,cantidad,precio);
					SendClientMessage(ID, -1, string);
					TiempoVenta[playerid] = 60;
					if(idTimerOfertaPerdida[ID] != -1)
					{
						KillTimer(idTimerOfertaPerdida[ID]);
						idTimerOfertaPerdida[ID] = -1;
					}
					idTimerOfertaPerdida[ID] = SetTimerEx("OfertaPerdida", 60000, false, "d", ID);
					TiempoVenta[playerid] = 60;
					if(idTimerTiempoVenta[playerid] != -1)
					{
						KillTimer(idTimerTiempoVenta[playerid]);
						idTimerOfertaPerdida[playerid] = -1;
					}
					idTimerTiempoVenta[playerid] = SetTimerEx("TiempoVender", 60000, false, "d", playerid);
					if(precio <= 100)
					{
						format(string, 256, "Jugador %s (ID:{FFFFFF} %d{DBED16} | Nivel: %d) ofrece %d marihuana por $%d a %s (ID:{FFFFFF} %d{DBED16} | Nivel: %d)", pName,playerid,GetPlayerScore(playerid),cantidad,precio,pNameid,ID,GetPlayerScore(ID));
						MensajeAdmin(COLOR_YELLOW, string, ADMIN_LEVEL_BANEOS);
					}
				}
			}
		}
		else
		{
			if(!sscanf(params,"s[32]",item))
			{
				if(strcmp(item,"vehiculo",true)==0)
				{
					if(IsPlayerInRangeOfPoint(playerid, 8.0,1802.7854,-1303.8938,93.0391))
					{
						if(autos[playerid] > 0 || autos2[playerid] > 0 || autos3[playerid] > 0 || autos4[playerid] > 0)
						{
							new string[256];
							format(string,256,"Te vamos a pagar la mitad de la cantidad del precio de venta actual del vehículo.\n¿Quieres vender el vehículo?");
							ShowPlayerDialog(playerid, VENDERAUTO, DIALOG_STYLE_MSGBOX, "Información sobre la venta de vehículos", string, "Si","No");
						}
					}
					else
	  				{
	  		    		SendClientMessage(playerid, -1, "Para vender tu vehículo, necesitas estar en el Edificio Municipal General de LS.");
	  				    SendClientMessage(playerid, -1, "La oficina se encuentra en el piso número 14.");
		   			}
				}
				else if(strcmp(item,"objeto",true)==0 || strcmp(item,"objetos",true)==0)
				{
					if(!IsPlayerInRangeOfPoint(playerid, 5.0,196.3872,-231.1294,1.7786) && !IsPlayerInRangeOfPoint(playerid, 5.0,216.8291,-232.7234,1.7786)) return SendClientMessage(playerid,-1,"No estas en la tienda de objetos");
					{
						if(Objeto[playerid] == 0) return SendClientMessage(playerid,-1,"No tienes ningun objeto para vender");
						switch(Objeto[playerid])
						{
							case 1429:
							{
								SendClientMessage(playerid,-1,"Vendiste una TV Antigua por $1500");
								DarDinero(playerid,1500);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
								RemovePlayerAttachedObject(playerid,2);
								Objeto[playerid] = 0;
							}
							case 1518:
							{
								SendClientMessage(playerid,-1,"Vendiste una TV Moderna por $2000");
								DarDinero(playerid,2000);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
								RemovePlayerAttachedObject(playerid,2);
								Objeto[playerid] = 0;
							}
							case 2912:
							{
								SendClientMessage(playerid,-1,"Vendiste una Caja de Madera por $1300");
								DarDinero(playerid,1300);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
								RemovePlayerAttachedObject(playerid,2);
								Objeto[playerid] = 0;
							}
							case 2190:
							{
								SendClientMessage(playerid,-1,"Vendiste una Computadora por $2000");
								DarDinero(playerid,2000);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
								RemovePlayerAttachedObject(playerid,2);
								Objeto[playerid] = 0;
							}
							case 1788:
							{
								SendClientMessage(playerid,-1,"Vendiste una Videocasetera por $2100");
								DarDinero(playerid,2100);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
								RemovePlayerAttachedObject(playerid,2);
								Objeto[playerid] = 0;
							}
							case 1790:
							{
								SendClientMessage(playerid,-1,"Vendiste un Bluray por $3200");
								DarDinero(playerid,3200);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
								RemovePlayerAttachedObject(playerid,2);
								Objeto[playerid] = 0;
							}
							case 2028:
							{
								SendClientMessage(playerid,-1,"Vendiste una consola de juegos por $2750");
								DarDinero(playerid,2750);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
								RemovePlayerAttachedObject(playerid,2);
								Objeto[playerid] = 0;
							}
							case 2226:
							{
								SendClientMessage(playerid,-1,"Vendiste una radio por $1500");
								DarDinero(playerid,1500);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
								RemovePlayerAttachedObject(playerid,2);
								Objeto[playerid] = 0;
							}
							case 19317:
							{
								SendClientMessage(playerid,-1,"Vendiste una guitarra por $3000");
								DarDinero(playerid,3000);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
								RemovePlayerAttachedObject(playerid,2);
								Objeto[playerid] = 0;
							}
							case 2404:
							{
								SendClientMessage(playerid,-1,"Vendiste una Tabla de Surf T1 por $1500");
								DarDinero(playerid,1500);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
								RemovePlayerAttachedObject(playerid,2);
								Objeto[playerid] = 0;
							}
							case 2405:
							{
								SendClientMessage(playerid,-1,"Vendiste una Tabla de Surf T2 por $1500");
								DarDinero(playerid,1500);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
								RemovePlayerAttachedObject(playerid,2);
								Objeto[playerid] = 0;
							}
							case 2406:
							{
								SendClientMessage(playerid,-1,"Vendiste una Tabla de Surf T3 por $1500");
								DarDinero(playerid,1500);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
								RemovePlayerAttachedObject(playerid,2);
								Objeto[playerid] = 0;
							}
							case 19318:
							{
								SendClientMessage(playerid,-1,"Vendiste un Bajo por $3000");
								DarDinero(playerid,3000);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
								RemovePlayerAttachedObject(playerid,2);
								Objeto[playerid] = 0;
							}
							case 1210:
							{
								SendClientMessage(playerid,-1,"Vendiste un Maletín por $1500");
								DarDinero(playerid,1500);
								SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
								RemovePlayerAttachedObject(playerid,2);
								Objeto[playerid] = 0;
							}
						}
					}
				}
				else if(strcmp(item, "propiedad", true) == 0)
				{
					if(IsPlayerInRangeOfPoint(playerid, 7.0,1809.5894,-1299.8063,65.8125)) {
						if(PlayerInfo[playerid][CasaID] > 0 || PlayerInfo[playerid][CasaID2] > 0) return ShowPlayerDialog(playerid, VENDERCASA, DIALOG_STYLE_MSGBOX,"Advertencia","Por vender tu propiedad en este lugar se te pagara la mitad de su precio original, ¿Quieres continuar?","Aceptar","Cancelar");
						else return SendClientMessage(playerid,-1,"No tienes ninguna propiedad para vender.");
					}
					else {
		  		    	SendClientMessage(playerid, -1, "Para vender tu propiedad, necesitas estar en el Edificio Municipal General de LS.");
		  			    SendClientMessage(playerid, -1, "La oficina se encuentra en el piso número 9.");
		   			}
     			}
			}
		}
	}
	else
	{
		new string[128];
		format(string,128,"Por favor espera {FF3300}%d{FFFFFF} segundos para volver a hacer una venta.",TiempoVenta[playerid]);
		SendClientMessage(playerid, -1, string);
	}
	if(sscanf(params, "s[30]", item)) SendClientMessage(playerid,-1,"VENTAS: {DBED16}/vender vehiculo {FFFFFF}- {DBED16}/vender propiedad {FFFFFF}- {DBED16}/vender [medicamentos/crack/"SERVER_COIN"/nombre-de-arma/piezas]");
	return 1;
}
CMD:cp(playerid, params[])
{
	new item[128];
	if(!sscanf(params,"s[128]", item))
	{
		if(strcmp(item, "armero", true) == 0)
		{
			if(PlayerInfo[playerid][piezas] > 0)
			{
				PuntoMats[playerid] = SetPlayerCheckpoint(playerid,2160.7837,-2280.9233,13.3838, 5.0);
				SendClientMessage(playerid, -1,"Se ha marcado en el mapa la posicion.");
			}
		}
		if(strcmp(item, "camionero", true) == 0)
		{
			if(GetPVarInt(playerid, "Camionero") == 1)
			{
				SetPlayerCheckpoint(playerid,PuntoCX[playerid],PuntoCY[playerid],PuntoCZ[playerid], 7.0);
			}
		}
		if(strcmp(item, "transportista", true) == 0)
		{
		    if(GetPVarInt(playerid, "Transportista") == 1)
			{
				SetPlayerCheckpoint(playerid,PuntoCX[playerid],PuntoCY[playerid],PuntoCZ[playerid], 7.0);
			}
		}
		if(strcmp(item, "basurero", true) == 0)
		{
		    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
            if(PBasura[playerid] > 0)
            {
				SetPlayerCheckpoint(playerid,PuntoBaX[playerid],PuntoBaY[playerid],PuntoBaZ[playerid], PuntoBaA[playerid]);
			}
		}
		if(strcmp(item, "medico", true) == 0)
		{
			if(MedicoCP2[playerid] == 1)
			{
				HospitalCercano(playerid);
				SendClientMessage(playerid, -1,"Se ha marcado en el mapa la posicion.");
			}
		}
		if(strcmp(item, "pescador", true) == 0)
		{
			if(RecorridoPescador[playerid] == 1)
			{
				SetPlayerCheckpoint(playerid, 2786.7866,-2594.8406,-1.0248, 7.0);
			}
			else return SendClientMessage(playerid, -1,"No tienes un recorrido de pescador activo.");
		}
		if(strcmp(item, "borrar", true) == 0)
		{
			DisablePlayerCheckpoint(playerid);
			RemovePlayerMapIcon(playerid, 99);
            PuntoGPSX[playerid] = 0;
            PuntoGPSY[playerid] = 0;
            PuntoGPSZ[playerid] = 0;
		}
	}
	return 1;
}
CMD:crear(playerid,params[])
{
	new item[32];
	if(TiempoCreacion[playerid] == 0)
	{
		if(!sscanf(params, "s[32]", item))
		{
		    if(strcmp(item, "radio", true) == 0)
			{
				if(!IsPlayerInRangeOfPoint(playerid,5, 391.1343,183.0587,1040.1156)) return SendClientMessage(playerid,-1,"Necesitas estar en la oficina principal del estudio de radio y televisión.");
				{
				    if(Emisoras[playerid][TieneEmisora] == 1) return SendClientMessage(playerid,-1,"Ya tienes una emisora de radio");
				    {
						if(PlayerInfo[playerid][pVip] != 2) return SendClientMessage(playerid, COLOR_WHITE, "Solamente los jugadores con cuenta Vip2 pueden crear su propia emisora de radio.");
						if(Emisoras[playerid][TieneEmisora] == 1) return SendClientMessage(playerid, COLOR_WHITE, "Ya tienes una emisora de radio.");
						if(PlayerInfo[playerid][jDinero] < 15000) return SendClientMessage(playerid, COLOR_WHITE, "Necesitas {00CC00}$15000{FFFFFF} para crear una estación de radio");
						ShowPlayerDialog(playerid, COMPRARRADIO, DIALOG_STYLE_INPUT,"Crear estación de radio","Ingresa el nombre de tu nueva estación de radio:","Crear","Cancelar");
						return 1;
					}
				}
			}
			if(PlayerInfo[playerid][pTrabajo] != T_Armero && PlayerInfo[playerid][pTrabajo2] != T_Armero) return 1;
		    if(VariableCaido[playerid] == 1 || PlayerInfo[playerid][Agonizando] == 1) return SendClientMessage(playerid,-1,"No puedes crear armas en este momento.");
			if(GetPlayerState(playerid) == 2 || GetPlayerState(playerid) == 3) return SendClientMessage(playerid, -1, "No puedes crear un arma si estas en un vehiculo.");
			if(PlayerInfo[playerid][pTiempoCarcelS] > 0 || PlayerInfo[playerid][pTiempoJailS] > 0) return SendClientMessage(playerid,-1,"No puedes crear un arma en este momento.");
            if(EstaHospital(playerid)) return 1;
            new nombre_arma[64],string[128],Piezas,armaid,lvlid;
			if(strcmp(item, "9mm",	 true) == 0) { armaid = 22; lvlid = 1; format(nombre_arma,sizeof(nombre_arma),"9mm"); Piezas = 10;}
			else if(strcmp(item, "9mm-silenciada",	true) == 0) { armaid = 23; lvlid = 2; format(nombre_arma,sizeof(nombre_arma),"9mm silenciada"); Piezas = 12; }
			else if(strcmp(item, "escopeta",	true) == 0) { armaid = 25; lvlid = 2; format(nombre_arma,sizeof(nombre_arma),"Escopeta"); Piezas = 20;}
			else if(strcmp(item, "desert-eagle",	true) == 0) { armaid = 24; lvlid = 3; format(nombre_arma,sizeof(nombre_arma),"Desert Eagle"); Piezas = 36;}
			else if(strcmp(item, "mp5",	true) == 0) { armaid = 29; lvlid = 4; format(nombre_arma,sizeof(nombre_arma),"Mp5"); Piezas = 58;}
			else if(strcmp(item, "ak-47",	true) == 0) { armaid = 30; lvlid = 5; format(nombre_arma,sizeof(nombre_arma),"AK-47"); Piezas = 82;}
			else if(strcmp(item, "m4",	true) == 0) { armaid = 31; lvlid = 5; format(nombre_arma,sizeof(nombre_arma),"M4"); Piezas = 96; }
			else if(strcmp(item, "rifle",	true) == 0) { armaid = 33; lvlid = 5; format(nombre_arma,sizeof(nombre_arma),"Rifle"); Piezas = 52;}
			else if(strcmp(item, "escopeta-de-combate",	true) == 0) { armaid = 27; lvlid = 6; format(nombre_arma,sizeof(nombre_arma),"Escopeta de combate"); Piezas = 136;}
			//else if(strcmp(item, "granada",	true) == 0) { armaid = 16; lvlid = 7; format(nombre_arma,sizeof(nombre_arma),"Granada"); Piezas = 156;}
			else return 1;
			if(IsPlayerInRangeOfPoint(playerid,50,-1387.9806,-324.9726,1052.0834)) return SendClientMessage(playerid,-1,"No puedes crear armas en este momento.");
			if(PlayerInfo[playerid][pNivelArmero] < lvlid) return SendClientMessage(playerid, -1, "No tienes el nivel necesario para crear esta arma");
			if(PlayerInfo[playerid][pMateriales] >= Piezas)
			{
				PlayerInfo[playerid][pMateriales] -= Piezas;
				DarArma(playerid, armaid);
				format(string,sizeof(string),"%s saca piezas de su mochila y crea una %s.",PlayerName(playerid), nombre_arma);
				ProxDetector(20, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				SetHabilityWeaponJob(playerid,lvlid);
			}
			else return SendClientMessage(playerid, -1, "No tienes los materiales necesarios");

		}
	}
	return 1;
}
CMD:minumero(playerid,params[])
{
	new string[256];
	if(PlayerInfo[playerid][pNumero] == 0) return SendClientMessage(playerid,-1,"Necesitas comprar un teléfono móvil para tener un número. Puedes comprar un teléfono en cualquier supermercado {DBED15}24/7{FFFFFF}.");
	format(string, 256,"Tu número de teléfono es: {DBED15}%d",PlayerInfo[playerid][pNumero]);
	SendClientMessage(playerid, -1, string);
	return 1;
}
CMD:numero(playerid,params[])
{
	new ID,pName[32],string[256];
	if(PlayerInfo[playerid][pAgenda] != 1) return SendClientMessage(playerid, -1, "Necesitas una guía telefónica para encontrar un número.");
	if(sscanf(params,"r", ID)) return SendClientMessage(playerid, -1, "Modo de uso: {DBED15}/numero {FFFFFF}[{DBED15}ID o Nombre{FFFFFF}]");
	if(ID == playerid) return SendClientMessage(playerid,-1,"Para ver tu número de teléfono, usa: {DBED15}/minumero{FFFFFF}.");
	if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,COLOR_WHITE,"Esa persona no aparece en la guía telefónica, probablemente no tenga teléfono.");
	if(PlayerInfo[ID][pNumero] == 0) return SendClientMessage(playerid, -1, "No se puede encontrar el numero de esta persona, puede que no tenga teléfono");
	if(PlayerInfo[ID][pGuia] == 0)
	{
		GetPlayerName(ID, pName,32);
		format(string, 256, "{DBED16}Guía telefónica: {FFFFFF}El numero de {00ccff}%s{FFFFFF} es {DBED16}%d{FFFFFF}.",pName,PlayerInfo[ID][pNumero]);
		SendClientMessage(playerid, -1, string);
	}
	else SendClientMessage(playerid, -1, "El número de teléfono de esa persona no está registrado en la guía.");
	return 1;
}
CMD:llamar(playerid, params[])
{
	new string[250], phonenumb,pName[50];
	GetPlayerName(playerid, pName, 50);
	if(PlayerInfo[playerid][pNumero] == 0)
	{
	    SendClientMessage(playerid,-1,"Necesitas comprar un teléfono móvil para hacer llamadas.");
	    SendClientMessage(playerid,-1,"Puedes comprar un teléfono en cualquier {DBED15}24/7{FFFFFF}.");
	    return 1;
	}
	if(sscanf(params, "d", phonenumb)) return SendClientMessage(playerid, COLOR_WHITE, "Por favor usa {DBED15}/llamar numero{FFFFFF}.");
	if(PlayerInfo[playerid][pTiempoCarcelS] > 0 || PlayerInfo[playerid][pTiempoJailS] > 0) return SendClientMessage(playerid,-1,"Te quitaron el teléfono antes de meterte en la celda.");
    if(phonenumb == 911 && PlayerInfo[playerid][pDuty] == 1) return SendClientMessage(playerid, -1, "No puedes llamar al 911 si eres un policía en actividad, usa tu radio.");
	if(PlayerInfo[playerid][pNumero] == phonenumb) return SendClientMessage(playerid,-1,"Número inválido");
	if(EnLlamada[playerid] == 1) return SendClientMessage(playerid,-1,"Ya estas en una llamada, escribe /colgar para terminarla");
	if(PlayerInfo[playerid][Agonizando] != 1)	{  SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);   }
	PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
	for(new i=0;i<MAX_PLAYERS; i++)
	{
		if(phonenumb == 911)
		{
			PlayerInfo[playerid][MobileSub] = 911;
			if(PlayerInfo[playerid][Agonizando] != 1)	{  SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);   }
			SetTimerEx("LlamadaCops",2000,false,"d",playerid);
            LlamadaTipo[playerid] = 1;
			SendClientMessage(playerid, -1, "Llamando a la policía... Escribe {DBED16}/colgar{FFFFFF} para cancelar la llamada.");
			return 1;
		}
		if(phonenumb == 815)
		{
			PlayerInfo[playerid][MobileSub] = 815;
			if(PlayerInfo[playerid][Agonizando] != 1)	{  SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);   }
			SetTimerEx("LlamadaGrua",3000,false,"d",playerid);
            LlamadaTipo[playerid] = 1;
			SendClientMessage(playerid, -1, "Llamando al servicio de grúa. Escribe {DBED15}/colgar{FFFFFF} para cancelar la llamada.");
			return 1;
		}
		if(phonenumb == 71) return cmd_servicio(playerid,"medico");
		if(phonenumb == 80) return cmd_servicio(playerid,"mecanico");
		if(phonenumb == 82) return cmd_servicio(playerid,"taxi");
		if(PlayerInfo[i][pNumero] == phonenumb && phonenumb != 0)
		{
		    if(PlayerInfo[i][pTiempoCarcelS] > 0 || PlayerInfo[i][pTiempoJailS] > 0) return SendClientMessage(playerid,-1,"El numero que usted marco no esta disponible en este momento.");
			if(EnLlamada[i] == 1) return SendClientMessage(playerid,-1,"El numero que usted marco se encuentra ocupado");
			if(TelefonoEstado[i] == 1) return SendClientMessage(playerid,-1,"El numero que marco esta fuera de linea");
			{
				new pName2[50];
				GetPlayerName(i,pName2,50);
				if(IsPlayerConnected(i)){
					if(i != INVALID_PLAYER_ID){
						if(PlayerInfo[i][MobileSub] == INVALID_PLAYER_ID)
						{
							if(Specteando[i] == 1) return 1;
							SendClientMessage(playerid,-1,"Llamando... usa {DBED16}/colgar{FFFFFF} para cancelar la llamada.");
							format(string, sizeof(string), "El teléfono de %s está sonando.", pName2);
							ProxDetector(30.0, i, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
							format(string, sizeof(string), "Te están llamando por teléfono desde el número: {DBED16}%d{FFFFFF}, escribe {DBED16}/atender{FFFFFF} o {DBED16}/colgar{FFFFFF}.", PlayerInfo[playerid][pNumero]);
							CLlamada[playerid] = SetTimerEx("finllamadax", 30000, false, "i", playerid);
							SendClientMessage(i, -1, string);
							YoLlame[playerid] = 1;
							PlayerInfo[playerid][MobileSub] = i;
							PlayerInfo[i][MobileSub] = playerid;
							llamada(i);
							return 1;
						}
					}
				}
			}
		}
	}
	SendClientMessage(playerid, COLOR_GRAD2, "Su llamada no puede darse por el numero marcado, por favor, compruebe el número e inténtelo nuevamente.");
	SetTimerEx("StopCell",3000,false,"d",playerid);
	return 1;
}
CMD:sms(playerid, params[])
{
	if(PlayerInfo[playerid][pNumero] > 0)
	{
		if(PlayerInfo[playerid][jDinero] >= 15)
		{
			new numero, mensaje[256], mensaje2[256];
			if(!sscanf(params,"ds[110]",numero,mensaje))
			{
				if(PlayerInfo[playerid][pTiempoCarcelS] > 0 || PlayerInfo[playerid][pTiempoJailS] > 0) return SendClientMessage(playerid,-1,"Te quitaron el teléfono antes de meterte en la celda.");
				EnviarSMS(playerid, numero, mensaje);
				return 1;
			}
			else if(!sscanf(params,"s[110]",mensaje2))
			{
				if(GetPVarInt(playerid, "NumeroSMS") > 0)
				{
					if(PlayerInfo[playerid][pTiempoCarcelS] > 0 || PlayerInfo[playerid][pTiempoJailS] > 0) return SendClientMessage(playerid,-1,"Te quitaron el telefono antes de entrar ala celda.");
					EnviarSMS(playerid, GetPVarInt(playerid, "NumeroSMS"), mensaje2);
					return 1;
				}
				else if(GetPVarInt(playerid, "NumeroSMS") == 0)
				{
					if(PlayerInfo[playerid][pTiempoCarcelS] > 0 || PlayerInfo[playerid][pTiempoJailS] > 0) return SendClientMessage(playerid,-1,"Te quitaron el telefono antes de entrar ala celda.");
					SendClientMessage(playerid, COLOR_WHITE, "El mensaje {FF4202}no se pudo entregar{FFFFFF}, comprueba que el número sea el correcto.");
					SendClientMessage(playerid, COLOR_WHITE, "Si el número está bien, probablemente el teléfono esté apagado.");
					return 1;
				}
			}
			SendClientMessage(playerid, COLOR_WHITE, "Usa: {DBED16}/sms número texto{FFFFFF}. Ejemplo: {DBED16}/sms 5099999 Hola.");
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "No tienes suficiente dinero para enviar un SMS, necesitas {FF4202}$15{FFFFFF}.");
	}
	else
	{
	    SendClientMessage(playerid,-1,"Necesitas comprar un teléfono móvil para enviar mensajes de texto.");
	    SendClientMessage(playerid,-1,"Puedes comprar un teléfono en cualquier {DBED15}24/7{FFFFFF}.");
	    return 1;
	}
	return 1;
}
CMD:atender(playerid, params[])
{
	new string[150],pName[50],pName2[50],texto[10],id,Float:Pos[3];
	GetPlayerName(playerid, pName, 50);
	if(!sscanf(params,"s[10]d",texto,id))
	{
		if(strcmp(texto, "paciente", true)==0)
		{
			new Float:Vida;
			if(PlayerInfo[playerid][pTrabajo] != T_Medico && PlayerInfo[playerid][pTrabajo2] != T_Medico) return SendClientMessage(playerid,-1,"Necesitas el trabajo de médico para utilizar este comando");
			if(GetPlayerSkin(playerid) == 274 || GetPlayerSkin(playerid) == 275 || GetPlayerSkin(playerid) == 276 || GetPlayerSkin(playerid) == 308)
			{
				if(PlayerInfo[playerid][pMedicina] == 0) return SendClientMessage(playerid,-1,"No tienes ninguna medicina para aplicar");
				GetPlayerPos(id,Pos[0],Pos[1],Pos[2]);
				if(!IsPlayerInRangeOfPoint(playerid, 2.0,Pos[0],Pos[1],Pos[2])) return SendClientMessage(playerid,-1,"Tu no estas cerca de este paciente");
				if(PlayerInfo[id][pAtendido] == 1) return SendClientMessage(playerid,-1,"Este paciente ya fue atendido por otro médico");
				GetPlayerHealth(id,Vida);
				if(PlayerInfo[id][pEnfermedad] == PlayerInfo[playerid][pMedicina])
				{
					if(Vida < 90) { EstablecerVida(id, 90); }
					GetPlayerName(id,pName2,50);
					AccionesRol(playerid,"aplica el tratamiento necesario con el paciente.", 20);
					format(string,sizeof(string),"%s comienza a curar las heridas de %s ",pName,pName2);
					ProxDetector(20.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					format(string,sizeof(string),"El tratamiento parece ir correctamente");
					ProxDetector(5.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					PlayerInfo[id][pAtendido] = 1;
					PlayerInfo[playerid][pMedicina] = 0;
					if(PlayerInfo[id][jDinero] >= 600)
					{
						QuitarDinero(id,600);
						DarDinero(playerid,600);
						SendClientMessage(playerid,-1,"El paciente te ha pagado {00CC00}$600{FFFFFF} por tu gran trabajo");
						SendClientMessage(id,-1,"Has pagado {00CC00}$600{FFFFFF} de tu billetera al médico por su trabajo");
					}
					else if(PlayerInfo[id][pBanco] >= 600)
					{
						PlayerInfo[id][pBanco] -= 600;
						DarDinero(playerid,600);
						SendClientMessage(playerid,-1,"El paciente te ha pagado {00CC00}$600{FFFFFF} por tu gran trabajo");
						SendClientMessage(id,-1,"Has pagado {00CC00}$600{FFFFFF} del banco al médico por su trabajo");
					}
					else
					{
						DarDinero(playerid,250);
						SendClientMessage(playerid,-1,"El paciente no tiene suficiente dinero para pagar los servicios, el hospital te ha pagado $250");
						SendClientMessage(id,-1,"No has tenido dinero para pagarle al médico, el hospital cubrio tu cuota");
					}
				}
				else
				{
					if(Vida > 10) { EstablecerVida(id, 10); }
					GetPlayerName(id,pName2,50);
					AccionesRol(playerid,"aplica el tratamiento erroneo con el paciente.", 20);
					SendClientMessage(playerid,COLOR_RED,"Haz aplicado un tratamiento erroneo con el paciente, tu reputacion como medico ha disminuido");
				}
			}
			else return SendClientMessage(playerid,-1,"Necesitas tener la ropa de médico para utilizar este comando");
		}
		return 1;
	}
	if(sscanf(params, "s[30]", texto))
	{
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(PlayerInfo[i][MobileSub] == 911)
			{
				if(PlayerInfo[playerid][pDuty] == 1)
				{
					EnLlamada[playerid] = 1;
					GetPlayerName(i, pName2, 50);
					PlayerInfo[i][Mobile] = playerid;
					PlayerInfo[i][MobileSub] = INVALID_PLAYER_ID;
					EnLlamada911[i] = 911;
					PlayerInfo[playerid][Mobile] = i;
					PlayerInfo[playerid][MobileSub] = INVALID_PLAYER_ID;
					EnLlamada911[playerid] = 911;
					format(string,sizeof(string),"{3399FF}[Central de policía]{FFFFFF} %s %s contesta la llamada de %s.",RangoPolicia(playerid),pName,pName2);
					SendRadioMessage(1,-1,string,INVALID_PLAYER_ID);
					format(string,sizeof(string),"{3399FF}[Central de policía]{FFFFFF} %s %s ha contestado su llamada",RangoPolicia(playerid),pName);
					SendClientMessage(i, -1, string);
					if(PlayerInfo[i][Agonizando] != 1)	{  SetPlayerSpecialAction(i, SPECIAL_ACTION_USECELLPHONE);   }
					if(PlayerInfo[playerid][Agonizando] != 1)	{  SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);   }
					return 1;
				}
			}
		}
		if(Mobile2[playerid] == 2540)
		{
			finllamada(playerid);
			EnLlamada[playerid] = 1;
			Mobile2[playerid] = 0;
			PlayerInfo[playerid][MobileSub] = 2540;
			SendClientMessage(playerid,-1,"Atiendes la llamada.");
			SetTimerEx("MandarMensajeTransportistas",2000,false,"d",playerid);
		}
		else if(PlayerInfo[playerid][MobileSub] != INVALID_PLAYER_ID)
		{
			for(new u=0;u<MAX_PLAYERS;u++)
			{
				if(PlayerInfo[u][MobileSub] == playerid)
				{
                    KillTimer(CLlamada[playerid]);
                    KillTimer(CLlamada[u]);
					finllamada(playerid);
					EnLlamada[playerid] = 1;
					EnLlamada[u] = 1;
					PlayerInfo[playerid][Mobile] = u;
					PlayerInfo[u][Mobile] = playerid;
					PlayerInfo[u][MobileSub] = INVALID_PLAYER_ID;
					PlayerInfo[playerid][MobileSub] = INVALID_PLAYER_ID;
					SendClientMessage(playerid,-1,"Atiendes la llamada.");
					SendClientMessage(u,  -1, "Contestaron la llamada.");
					AccionesRol(playerid,"contesta su teléfono.", 20);
					if(PlayerInfo[playerid][Agonizando] != 1)	{  SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);   }
					if(PlayerInfo[u][Agonizando] != 1)	{  SetPlayerSpecialAction(u, SPECIAL_ACTION_USECELLPHONE);   }
					return 1;
				}
			}
		}
		else return SendClientMessage(playerid,-1,"No hay ninguna llamada para atender.");
	}
	return 1;
}
CMD:colgar(playerid)
{
	new pName[50],pName3[24];
	GetPlayerName(playerid, pName,50);
	if(PlayerInfo[playerid][pNumero] > 0)
	{
		if(PlayerInfo[playerid][MobileSub] == 911 || PlayerInfo[playerid][MobileSub] == 2540 || Mobile2[playerid] == 2540 || PlayerInfo[playerid][MobileSub] == 815)
		{
			GetPlayerName(playerid, pName,50);
			SendClientMessage(playerid,-1,"Cortaste la comunicación.");
			PlayerInfo[playerid][MobileSub] = INVALID_PLAYER_ID;
			PlayerInfo[playerid][Mobile] = INVALID_PLAYER_ID;
			EnLlamada[playerid] = 0;
			Mobile2[playerid] = 0;
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			finllamada(playerid);
			return 1;
		}
		else if(PlayerInfo[playerid][MobileSub] != INVALID_PLAYER_ID)
		{
			GetPlayerName(playerid, pName,50);
			SendClientMessage(playerid,-1,"Cortaste la comunicación.");
			PlayerInfo[playerid][MobileSub] = INVALID_PLAYER_ID;
			PlayerInfo[playerid][Mobile] = INVALID_PLAYER_ID;
			EnLlamada[playerid] = 0;
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			finllamada(playerid);
			return 1;
		}
		else if(PlayerInfo[playerid][Mobile] != INVALID_PLAYER_ID)
		{
			GetPlayerName(PlayerInfo[playerid][Mobile],pName3,24);
			if(YoLlame[PlayerInfo[playerid][Mobile]] == 1)
			{
			    new striing[128],striong[20];
			    SendClientMessage(PlayerInfo[playerid][Mobile],-1,"Guardaste el teléfono móvil, llamada finalizada");
			    format(striing,sizeof(striing),"Costo total de la llamada que acabas de realizar:{00CC00} $%d",MinutoLlamada[PlayerInfo[playerid][Mobile]]/2);
			    SendClientMessage(PlayerInfo[playerid][Mobile],-1,striing);
			    SendClientMessage(playerid,  -1, "Cortaron la comunicación.");
			    QuitarDinero(playerid, MinutoLlamada[PlayerInfo[playerid][Mobile]]/2);
			    format(striong,sizeof(striong),"~r~-$%d",MinutoLlamada[playerid]/2);
			    GameTextForPlayer(PlayerInfo[playerid][Mobile], striong, 5000, 1);
			    MinutoLlamada[PlayerInfo[playerid][Mobile]] = 0;
			}
			else if(YoLlame[playerid] == 1)
			{
			    new striing[128],striong[20];
			    SendClientMessage(playerid,-1,"Guardaste el teléfono móvil, llamada finalizada");
			    format(striing,sizeof(striing),"Costo total de la llamada que acabas de realizar:{00CC00} $%d",MinutoLlamada[playerid]/2);
			    SendClientMessage(playerid,-1,striing);
			    SendClientMessage(PlayerInfo[playerid][Mobile],  -1, "Cortaron la comunicación.");
			    QuitarDinero(playerid, MinutoLlamada[playerid]/2);
			    format(striong,sizeof(striong),"~r~-$%d",MinutoLlamada[playerid]/2);
			    GameTextForPlayer(playerid, striong, 5000, 1);
			    MinutoLlamada[playerid] = 0;
			}
			GetPlayerName(PlayerInfo[playerid][Mobile],pName3,24);
			EnLlamada911[playerid] = 0;
			EnLlamada911[PlayerInfo[playerid][Mobile]] = 0;
			PlayerInfo[PlayerInfo[playerid][Mobile]][MobileSub] = INVALID_PLAYER_ID;
			PlayerInfo[PlayerInfo[playerid][Mobile]][Mobile] = INVALID_PLAYER_ID;
			EnLlamada[PlayerInfo[playerid][Mobile]] = 0;
			SetPlayerSpecialAction(PlayerInfo[playerid][Mobile], SPECIAL_ACTION_STOPUSECELLPHONE);
			SetPlayerSpecialAction(PlayerInfo[playerid][Mobile], SPECIAL_ACTION_STOPUSECELLPHONE);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			PlayerInfo[playerid][MobileSub] = INVALID_PLAYER_ID;
			PlayerInfo[playerid][Mobile] = INVALID_PLAYER_ID;
			EnLlamada[playerid] = 0;
			finllamada(playerid);
			return 1;
		}
		else return SendClientMessage(playerid,  -1, "No puedes colgar el teléfono si no lo estás usando.");
	}
	else SendClientMessage(playerid,  -1, "No puedes colgar el teléfono si no lo estás usando.");
	return 1;
}
CMD:reanimar(playerid,params[])
{
	new ID,Float:x,Float:y,Float:z;
	if(PlayerInfo[playerid][pTrabajo] != T_Medico && PlayerInfo[playerid][pTrabajo2] != T_Medico) return 1;
	if(sscanf(params,"d",ID)) return SendClientMessage(playerid, -1,"Escribe {DBED16}/reanimar [ID]");
	if(!IsPlayerConnected(ID)) return SendClientMessage(playerid, -1,"Jugador desconectado");
	GetPlayerPos(ID,x,y,z);
	if(MarcadoMedicos[ID] != 1) return SendClientMessage(playerid, COLOR_DORADO,"Este jugador no llamó al servicio médico.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"No puedes utilizar este comando estando en un vehículo");
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid, -1,"Debes estar cerca de un paciente para reanimarlo");
    SendClientMessage(playerid, COLOR_DORADO,"Reanimando...");
	LoopingAnim(playerid, "MEDIC", "CPR", 4.0, 0, 0, 0, 0, 0);
	SetTimerEx("ReanimarMedico",8000,false,"d",playerid);
	return 1;
}
CMD:estacionar(playerid, params[])
{
    new autoid = GetPlayerVehicleID(playerid),Float:Health;
	GetVehicleHealth(autoid, Health);
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
	if(Health < 500.0) return SendClientMessage(playerid,-1,"El vehiculo esta muy dañado, arreglalo primero");
	if(PlayerInfo[playerid][pEnEstacionamiento] == 1)
	{
		PlayerInfo[playerid][vEstacionado1] = 1;
		PlayerInfo[playerid][vEstacionado2] += 1;
		PlayerInfo[playerid][vEstacionado4] += 150;
		new pName[32];
		GetPlayerName(playerid, pName, 32);
		AccionesRol(playerid,"está apagando el motor de su vehículo.", 20);
		SetTimerEx("Estacionando",1200, false, "d",playerid);
	}
	else
	{
		new pName[32];
		GetPlayerName(playerid, pName, 32);
		AccionesRol(playerid,"está apagando el motor de su vehículo.", 20);
		SetTimerEx("Estacionando",1200, false, "d",playerid);
	}
	return 1;
}
CMD:ocultar(playerid, params[])
{
 	new item[128];
    if(!sscanf(params, "s[32]", item))
	{
	    if(strcmp(item,"gps",true) == 0)
		{
			CerrarGPS(playerid);
		}
		if(strcmp(item,"pantalla",true) == 0)
		{
		    if(ViendoPantalla[playerid] == 0) return 1;
		    ViendoPantalla[playerid] = 0;
			foreach (NPC, i) PlayerTextDrawDestroy(playerid, tren[playerid][i]);
			KillTimer(asdtren[playerid]);
	  		TextDrawHideForPlayer(playerid,TTren[0]);
		    TextDrawHideForPlayer(playerid,TTren[1]);
		    TextDrawHideForPlayer(playerid,TTren[2]);
		    TextDrawHideForPlayer(playerid,TTren[3]);
		    TextDrawHideForPlayer(playerid,TTren[4]);
		    TextDrawHideForPlayer(playerid,TTren[5]);
		    TextDrawHideForPlayer(playerid,TTren[6]);
		    TextDrawHideForPlayer(playerid,TTren[7]);
			TextDrawHideForPlayer(playerid,TTren[8]);
			if(SedOculta[playerid] == 0)
			{
				ShowPlayerProgressBar(playerid, Progressbar[playerid][Sed]);
	        	ShowPlayerProgressBar(playerid, Progressbar[playerid][Hambre]);
            }
			TogglePlayerControllable(playerid, 1);
			SetPVarInt(playerid, "IsFrozen", 1);
		}
		if(strcmp(item,"sed",true) == 0)
		{
		    if(SedOculta[playerid] == 1) return SendClientMessage(playerid,-1,"Ya tienes oculta la barra indicadora de sed.");
            SedOculta[playerid] = 1;
			HidePlayerProgressBar(playerid, Progressbar[playerid][Hambre]);
			HidePlayerProgressBar(playerid, Progressbar[playerid][Sed]);
			SendClientMessage(playerid,-1,"Ocultaste la barra de sed, para volver a mostrarla usa {DBED15}/mostrar sed{FFFFFF}.");
		}
		if(strcmp(item,"nombres",true) == 0)
		{
	 		if(NombresOcultos[playerid] == 1)
			{
	 			GameTextForPlayer(playerid, "OCULTANDO ~r~NOMBRES", 1000, 5);
			}
			else
			{
	  			NombresOcultos[playerid] = 1;
				for(new i = 0; i < MAX_PLAYERS; i++) ShowPlayerNameTagForPlayer(playerid, i, 0);
				GameTextForPlayer(playerid, "OCULTANDO ~r~NOMBRES", 1000, 5);
				SendClientMessage(playerid,-1,"Ocultaste los nombres de los jugadores, para volver a mostrarlo escribe {DBED16}/mostrar nombres{FFFFFF}.");
			}
		}
	}
	return 1;
}
CMD:gps(playerid, params[])
{
    new carid = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][pGPS] != 1 || GetVehicleModel(carid) != 416 && PlayerInfo[playerid][pGPS] != 1 || GetVehicleModel(carid) != 420 && PlayerInfo[playerid][pGPS] != 1  || GetVehicleModel(carid) != 438 && PlayerInfo[playerid][pGPS] != 1) return SendClientMessage(playerid, -1, "No tienes un {DBED15}GPS{FFFFFF}. Puedes comprar uno en cualquier 24/7");
	new string[150];
 	format(string, 150,"Concesionarias\nBancos\n24/7\nTrabajos\nEdificios del gobierno\nTiendas de ropa\nVer mapa");
	ShowPlayerDialog(playerid, GPS, DIALOG_STYLE_LIST, "GPS: Puntos de interés", string, "Siguiente", "Cerrar");
	AccionesRol(playerid,"mira su GPS.", 20);
	return 1;
}
CMD:tiempo(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return VerTiempos(playerid,playerid);
	new id, string[70],pName[24];
	if(sscanf(params,"d",id)) return VerTiempos(playerid,playerid);
	GetPlayerName(id,pName,24);
	format(string,128,"TIEMPO DE %s",pName);
	SendClientMessage(playerid,COLOR_ROJO,string);
	VerTiempos(playerid,id);
	return 1;
}
CMD:mv(playerid, params[])
{
    if(GetPlayerInterior(playerid) == 0)
	{
    	SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	return 1;
}
CMD:inventario(playerid,params[])
{
	new ID,string[70],pName[24];
	if(sscanf(params, "d", ID)) return Inventario(playerid);
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS)
	{
		Inventario3(ID, playerid);
	}
	else
	{
		GetPlayerName(ID,pName,24);
		format(string,128,"Inventario del jugador %s", PlayerName(ID));
		SendClientMessage(playerid,COLOR_MEGAPHONE,string);
		Inventario2(ID,playerid);
	}
	return 1;
}
CMD:localizar(playerid, params[])
{
	new string[255], item[30], ID, amigoenc=0, contador2=0, info2[1000];
	if(!sscanf(params,"s[32]",item))
	{
		if(strcmp(item,"amigo",true)==0)
		{
			for(new i=0; i < MAX_PLAYERS; i++)
			{
				if(i != playerid)
				{
					if(!IsPlayerNPC(i))
					{
						if(IsPlayerConnected(i))
						{
							if(strcmp(PlayerInfo[playerid][Totem], PlayerName(i), true) == 0)
							{
								if(strcmp(PlayerInfo[i][Totem], PlayerName(playerid)) == 0) continue;
								amigoenc = 1;
								format(info2, sizeof(info2), "%s\n{00CCFF}%s", info2, PlayerName(i));
								TotemBuscar[playerid][contador2] = i;
								contador2++;
							}
							else if(strcmp(PlayerInfo[i][Totem], PlayerName(playerid), true) == 0)
							{
								amigoenc = 1;
								format(info2, sizeof(info2), "%s\n{00CCFF}%s", info2, PlayerName(i));
								TotemBuscar[playerid][contador2] = i;
								contador2++;
							}
						}
					}
				}
			}
			if(amigoenc == 0) return SendClientMessage(playerid, -1, "No hay ningún amigo conectado con cuenta vinculada en este momento.");
			ShowPlayerDialog(playerid, LOCALIZARAMIGO, DIALOG_STYLE_LIST, "Localizar Amigo", info2, "Localizar", "Salir");
		}
	}
	if(!sscanf(params,"d",ID))
	{
	    if(PlayerInfo[playerid][pAdmin] > ADMIN_LEVEL_DUDAS)
		{
		    if(ID == INVALID_PLAYER_ID) return 1;
        	format(string,128,"Listado de vehículos de %s", PlayerName(ID));
			SendClientMessage(playerid,COLOR_MEGAPHONE,string);
			Localizar2(ID,playerid);
		}
	}
	if(sscanf(params, "s[30]", item))
	{
	    if(IsValidVehicle(autos[playerid]) || IsValidVehicle(autos2[playerid]) || IsValidVehicle(autos3[playerid]) || IsValidVehicle(autos4[playerid]))
		{
			Localizar(playerid);
        }
    }
	return 1;
}
CMD:est(playerid, params[])
{
	new id,pName[24],string[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return ShowStats(playerid,playerid);
	if(sscanf(params,"d",id)) return ShowStats(playerid,playerid);
	{
		GetPlayerName(id,pName,24);
		format(string,128,"Estadísticas de %s",pName);
		SendClientMessage(playerid,COLOR_ROJO,string);
		ShowStats(playerid,id);
	}
	return 1;
}
CMD:habilidad(playerid,params[])
{
	new ID,string[70],pName[25];
	if(sscanf(params, "d", ID)) return Habilidad(playerid);
	if(PlayerInfo[playerid][pAdmin] > ADMIN_LEVEL_DUDAS)
	{
		GetPlayerName(ID,pName,24);
		format(string,128,"Listado de Habilidades de %s", PlayerName(ID));
		SendClientMessage(playerid,COLOR_MEGAPHONE,string);
		Habilidad2(ID,playerid);
	}
	return 1;
}
CMD:frecuencias(playerid,params[])
{
    if(PlayerInfo[playerid][pDuty] != 1) return 1;
	MostrarFrecuencias(playerid);
	return 1;
}
CMD:esposar(playerid, params[])
{
	new data[144], Float:pos[3], id;
	if(sscanf(params, "d", id) )return SendClientMessage(playerid,COLOR_WHITE,"Usa: {DBED15}/esposar [id o nombre]");
	GetPlayerPos(id, pos[0], pos[1], pos[2]);
	if(IsPlayerNPC(id)) return 1;
	if(!IsPlayerConnected(id)) return 1;
	if(PlayerInfo[id][pCargos] == 0) return SendClientMessage(playerid,-1,"Esa persona no tiene nivel de búsqueda.");
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid,-1,"Está demasiado lejos, distancia máxima {DBED15}5m{FFFFFF}.");
	{
	    if(PlayerInfo[playerid][pDuty] != 1) return 1;
		Esposando[id] = 1;
		Oficial[id] = playerid;
		TogglePlayerControllable(id,0);
		SetPVarInt(id, "IsFrozen", 0);
		TimerEsposar[id] = SetTimerEx("TiempoArresto", 10000, false, "d", id);
		EnPatrulla[id] = 0;
		SetPlayerSpecialAction(id,SPECIAL_ACTION_HANDSUP);
		format(data, sizeof(data), "Oficial %s intenta esposar a %s",PlayerName(playerid), PlayerName(id));
		ProxDetector(20.0, playerid, data, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
		SendClientMessage(id,-1,"Estas siendo esposado, para resitirte escribe {DBED16}/resistirse");
	}
	return true;
}
CMD:resistirse(playerid, params[])
{
	new string[126];
	new chatadmin[256];
	GetPlayerName(playerid,chatadmin,sizeof(chatadmin));
	if(Esposando[playerid] == 1)
	{
		if(PlayerInfo[playerid][pCargos] == 1)
		{
			SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pCargos] = 2);
			foreach(Player, i)
			{
				if(PlayerInfo[i][pDuty] == 1)
				SetPlayerMarkerForPlayer(i, params[0], c2_color);
			}
		}
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		Esposando[playerid] = 0;
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		KillTimer(TimerEsposar[playerid]);
		format(chatadmin,sizeof(chatadmin),"[Radio] {FFFFFF}%s %s: {00CCFF}%s{FFFFFF} se resistió al arresto, inicio persecución.",RangoPolicia(Oficial[playerid]),PlayerName(Oficial[playerid]), PlayerName(playerid));
		SendRadioMessage(1, TEAM_BLUE_COLOR, chatadmin,playerid);
  		format(string,sizeof(string),"[Radio de policía] (%s %s) dice: %s se resistió al arresto, inicio persecución.",RangoPolicia(Oficial[playerid]),PlayerName(Oficial[playerid]), PlayerName(playerid));
		ProxDetector(15.0, playerid, string, COLOR_GRAD6, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2);
	}
	else return 1;
	return 1;
}
CMD:entregar(playerid,params[])
{
	new string[158],patrulla;
	patrulla = GetPlayerVehicleID(playerid);
	if(IsPlayerInAnyVehicle(playerid))
	if(PlayerInfo[playerid][pDuty] != 1) return SendClientMessage(playerid, COLOR_WHITE, "No estás autorizado para usar este comando");
	if(!SAPD(patrulla) && !HELISAPD(patrulla)) return SendClientMessage(playerid,-1,"Debes estar en una patrulla o helicoptero policial");
	if(!EnComisaria(playerid)) return SendClientMessage(playerid,-1,"No estás en el área de entrega de ninguna comisaria");
	for(new i=0;i<MAX_PLAYERS; i++)
	{
		if(EnAuto[i] == patrulla && PlayerInfo[i][pCargos] > 0)
		{
			RemovePlayerFromVehicle(i);
 			format(string, sizeof(string), "%s baja a %s de su vehículo.", PlayerName(playerid),PlayerName(i));
			ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
			SetTimerEx("EncerrandoNombre",4000,false,"d",playerid,i);
		}
	}
	return 1;
}
CMD:liberar(playerid,params[])
{
	new id,Float:x,Float:y,Float:z,pName[32],string[128];
	GetPlayerName(playerid, pName, 32);
	if(!sscanf(params,"d",id))
	{
		if(PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][pFaccion] == 1)
		{
			GetPlayerPos(id, x,y,z);
			if(PlayerInfo[id][pCargos] > 1) return 1;
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid, -1, "No estas cerca de este jugador");
			if(VariableCaido[id] == 1 || Esposando[id] == 2 || EnPatrulla[id] == 1)
			{
				if(IsPlayerInAnyVehicle(id))
				{
					RemovePlayerFromVehicle(id);
				}
				VariableCaido[id] = 0;
				Esposando[id] = 0;
				SetPlayerSpecialAction(id, SPECIAL_ACTION_NONE);
				PlayerInfo[id][pCargos] = 0;
				SetPlayerWantedLevel(id,PlayerInfo[id][pCargos]);
				TogglePlayerControllable(id, 1);
				SetPVarInt(id, "IsFrozen", 1);
				format(string, 128, "%s %s libera al sospechoso",RangoPolicia(playerid),pName);
				ProxDetector(15.0,playerid,string,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
			}
			else return SendClientMessage(playerid, -1, "El jugador debe estar abatido o esposado");
		}
	}
	else return SendClientMessage(playerid, -1, "Usa: {DBED15}/liberar id");
	return 1;
}
CMD:arrestar(playerid, params[])
{
	new ID, Lugar, patrulla, Float:x, Float:y, Float:z;
	patrulla = GetPlayerVehicleID(playerid);
	if(sscanf(params, "dd", ID, Lugar))return SendClientMessage(playerid,COLOR_WHITE,"Usa: {DBED15}/arrestar id {FFFFFF}[{DBED15}1{FFFFFF} para subirlo en el asiento izquierdo o {DBED15}2{FFFFFF} en el derecho]");
    if(PlayerInfo[playerid][pDuty] != 1) return SendClientMessage(playerid, COLOR_WHITE, "No estás con el uniforme de policía.");
	if(IsPlayerNPC(ID)) return 1;
	if(!IsPlayerConnected(ID)) return 1;
	if(VariableCaido[ID] != 1 && Esposando[ID] != 2) return SendClientMessage(playerid,COLOR_WHITE,"El sospechoso no esta esposado o abatido.");
	if(PlayerInfo[ID][pCargos] == 0) return SendClientMessage(playerid,-1,"Este jugador no tiene nivel de busqueda.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Debes estar en una patrulla o helicoptero policial.");
	if(!SAPD(patrulla) && !HELISAPD(patrulla)) return SendClientMessage(playerid,-1,"Necesitas estar conduciendo un patrullero para arrestar a alguien.");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,-1,"Debes estar conduciendo la patrulla.");
	GetPlayerPos(ID, x,y,z);
	if(IsPlayerInRangeOfPoint(playerid, 40.0,  x, y,z))
	{
		if(Lugar == 1)
		{
			QuitarArmas(ID);
			PutPlayerInVehicle(ID, patrulla, 2);
			SetPlayerArmedWeapon(ID, 0);
			BajandoV[ID] = 0;
			EnAuto[ID] = patrulla;
			EnPatrulla[ID] = 1;
			VariableCaido[ID] = 0;
			TogglePlayerControllable(ID, 0);
			SetPVarInt(ID, "IsFrozen", 0);
			AccionesRol(playerid,"sube al detenido en su patrullero.", 20);
		}
		if(Lugar == 2)
		{
			QuitarArmas(ID);
			PutPlayerInVehicle(ID, patrulla, 3);
			SetPlayerArmedWeapon(ID, 0);
			BajandoV[ID] = 0;
			EnAuto[ID] = patrulla;
			EnPatrulla[ID] = 1;
			VariableCaido[ID] = 0;
			TogglePlayerControllable(ID, 0);
			SetPVarInt(ID, "IsFrozen", 0);
			AccionesRol(playerid,"está apagando el motor de su vehículo.", 20);
		}
	}
	else SendClientMessage(playerid, -1, "No estas cerca de ese jugador.");
	return 1;
}
CMD:daruniforme(playerid, params[])
{
	if(PlayerInfo[playerid][pDuty] != 1 && PlayerInfo[playerid][pFaccion] != 1 && PlayerInfo[playerid][pRango] <= 7) return 1;
	{
		new string[128], giveplayerid, uniforme;
		if(sscanf(params, "rd", giveplayerid, uniforme))
		{
			SendClientMessage(playerid, -1, "Escribe /uniforme [playerid] [uniforme]");
			SendClientMessage(playerid, -1, "Uniformes: 265, 266, 267, 280, 281, 284");
			return 1;
		}
		if(PlayerInfo[playerid][pFaccion] != 1) return SendClientMessage(playerid, -1, "No puedo asignar un uniforme a alguien que no es policia");
		if(uniforme == 285 || uniforme == 286 || uniforme == 288 || uniforme == 283 || uniforme == 282 || uniforme == 211 || uniforme == 265 || uniforme == 266 || uniforme == 267 || uniforme == 280 || uniforme == 281 || uniforme == 284)
		{
			PlayerInfo[giveplayerid][pModelo] = uniforme;
			format(string, sizeof(string), "{FFFFFF}%s {00CCFF}%s {FFFFFF}te asigno el uniforme de policia con el ID %d.", RangoPolicia(playerid), PlayerName(playerid),uniforme);
			SendClientMessage(giveplayerid,-1,string);
			format(string, sizeof(string), "{FFFFFF}Cambiaste el uniforme de policia de %s a %d.", PlayerName(giveplayerid), uniforme);
			SendClientMessage(playerid,-1,string);
			SetPlayerSkin(giveplayerid, uniforme);
			return 1;
		}
	}
	return 1;
}
CMD:domiciliaria(playerid)
{
	new string[128];
	if(PlayerInfo[playerid][pTiempoJailS] == 0 && PlayerInfo[playerid][pTiempoCarcelM] == 0) return 1;
    if(PlayerInfo[playerid][CasaID2] == 0 && PlayerInfo[playerid][CasaID] == 0) return SendClientMessage(playerid,-1,"Necesitas tener al menos una propiedad para cumplir tu arresto en el domicilio.");
	format(string, sizeof(string), "El costo para cumplir la condena en tu domicilio es de {04D616}3800$");
	ShowPlayerDialog(playerid, DOMICILIARIA, DIALOG_STYLE_MSGBOX, "Cumplimiento de condena en domicilio", string, "Aceptar","Rechazar");
	return 1;
}
CMD:entrar(playerid, params[])
{
	if(TiempoEntrada[playerid] != 0) return 1;
	if(Entrando[playerid] == 0)
	{
		Entrando[playerid] = 1;
		SetTimerEx("Entrandos",3000,false,"d",playerid);
	}
	for(new fb = 0; fb < MAX_FABRICAS; fb++)
	{
		if(IsPlayerInRangeOfPoint(playerid,2.0,Fabricas[fb][pEntradaX],Fabricas[fb][pEntradaY],Fabricas[fb][pEntradaZ]))
		{
		    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Tienes que estar parado en la puerta de la propiedad para poder entrar.");
			if(PlayerInfo[playerid][pFaccion] == Fabricas[fb][pBanda] && PlayerInfo[playerid][pFaccion] != 0 || PlayerInfo[playerid][pDuty] == 1)
			{
				if(GetPlayerVirtualWorld(playerid) == 0)
				{
					if(PlayerInfo[playerid][pCargos] >= 2)
					{
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							if(PlayerInfo[i][pFaccion] == 1 && PlayerInfo[i][pDuty] == 1 && EstaEnP(playerid,i,30.00))
							{
								SendClientMessage(playerid,-1,"No puedes entrar si la policía te está siguiendo.");
								return 1;
							}
						}
					}
					SetPlayerPos(playerid,Fabricas[fb][pSalidaX],Fabricas[fb][pSalidaY],Fabricas[fb][pSalidaZ]);
					SetPlayerFacingAngle(playerid,86.5570);
					SetPlayerInterior(playerid,Fabricas[fb][pInt]);
					SetPlayerVirtualWorld(playerid,Fabricas[fb][pVW]);
					CargarMapeosEx(playerid);
					if(PlayerInfo[playerid][pDuty] == 1)
					{
						SetActorInvulnerable(Fabricas[fb][ActorCocinero5], false);
						SetActorInvulnerable(Fabricas[fb][ActorCocinero4], false);
						SetActorInvulnerable(Fabricas[fb][ActorCocinero3], false);
						SetActorInvulnerable(Fabricas[fb][ActorCocinero2], false);
						SetActorInvulnerable(Fabricas[fb][ActorCocinero1], false);
						SetActorInvulnerable(Fabricas[fb][ActorGuardia3], false);
						SetActorInvulnerable(Fabricas[fb][ActorGuardia2], false);
						SetActorInvulnerable(Fabricas[fb][ActorGuardia1], false);
						SetActorInvulnerable(Fabricas[fb][ActorMedico], false);
					}
				}
			}
		}
	}
	for(new c = 0; c < MAX_PROPIEDADES; c++)
	{
		if(PlayerInfo[playerid][pTiempoJailS] == 0)
		{
			if(PropInfo[c][pEnUso] == 1)
			{
				if(IsPlayerInRangeOfPoint(playerid,2.5,PropInfo[c][pPosX],PropInfo[c][pPosY],PropInfo[c][pPosZ]))
				{
				    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Tienes que estar parado en la puerta de la propiedad para poder entrar.");
					if(GetPlayerVirtualWorld(playerid) == 0)
					{
						if(PropInfo[c][pAbierta] == 1)
						{
							if(PlayerInfo[playerid][pCargos] >= 2)
							{
								for(new i = 0; i < MAX_PLAYERS; i++)
								{
									if(PlayerInfo[i][pFaccion] == 1 && PlayerInfo[i][pDuty] == 1 && EstaEnP(playerid,i,30.00))
									{
										SendClientMessage(playerid,-1,"No puedes entrar si la policía te está siguiendo.");
										return 1;
									}
								}
							}
							SetPlayerPos(playerid,PropInfo[c][pPosXS],PropInfo[c][pPosYS],PropInfo[c][pPosZS]);
							if(PropInfo[c][pTipo] == 3) SetPlayerFacingAngle(playerid,180.0000);
							else if(PropInfo[c][pTipo] == 2) SetPlayerFacingAngle(playerid,270.0000);
							else SetPlayerFacingAngle(playerid,PropInfo[c][pPosAS]);
							SetPlayerInterior(playerid,PropInfo[c][pInteriorID]);
							SetPlayerVirtualWorld(playerid,PropInfo[c][pVW]);
							CargarMapeosEx(playerid);
						}
						else
						{
							if(PlayerInfo[playerid][pID] == PropInfo[c][pIDPropietario] || PlayerInfo[playerid][pAdmin] >= ADMIN_LEVEL_ADM)
							{
								if(PlayerInfo[playerid][pCargos] >= 2)
								{
									for(new i = 0; i < MAX_PLAYERS; i++)
									{
										if(PlayerInfo[i][pFaccion] == 1 && PlayerInfo[i][pDuty] == 1 && EstaEnP(playerid,i,15))
										{

											SendClientMessage(playerid,-1,"No puedes entrar si la policía te está siguiendo.");
											return 1;
										}
									}
								}
								SetPlayerPos(playerid,PropInfo[c][pPosXS],PropInfo[c][pPosYS],PropInfo[c][pPosZS]);
								if(PropInfo[c][pTipo] == 3) SetPlayerFacingAngle(playerid,180.0000);
								else if(PropInfo[c][pTipo] == 2) SetPlayerFacingAngle(playerid,270.0000);
								else SetPlayerFacingAngle(playerid,PropInfo[c][pPosAS]);
								SetPlayerInterior(playerid,PropInfo[c][pInteriorID]);
								SetPlayerVirtualWorld(playerid,PropInfo[c][pVW]);
								CargarMapeosEx(playerid);
								SendClientMessage(playerid,-1,"La puerta se encuentra cerrada, escribe {DBED16}/abrir puerta{FFFFFF} para abrirla.");
							}
							else SendClientMessage(playerid,-1,"La propiedad está cerrada, solo el dueño puede entrar.");
						}
					}
				}
				if(IsPlayerInRangeOfPoint(playerid,2.5,PropInfo[c][pRoperoX],PropInfo[c][pRoperoY],PropInfo[c][pRoperoZ]) && GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
				{
				    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Tienes que estar parado en la puerta de la propiedad para poder entrar.");
					if(PlayerInfo[playerid][pID] == PropInfo[c][pIDPropietario])
					{
						if(PropInfo[c][pRoperoAbierto] == 0)
						{
							AccionesRol(playerid,"abre el ropero, entra y lo cierra rápidamente.", 20);
							SendClientMessage(playerid,-1,"El ropero está cerrado, usa {DBED16}/abrir ropero{FFFFFF} para abrirlo.");
						}
						SetPlayerPos(playerid,254.2685,-41.5420,1002.0308);
						SetPlayerFacingAngle(playerid,267.0000);
						SetPlayerInterior(playerid,14);
						CargarMapeosEx(playerid);
					}
					else
					{
						if(PlayerInfo[playerid][@Nivel] < 2) return 1;
						if(PropInfo[c][pRoperoAbierto] == 0)
						{
							SendClientMessage(playerid,-1,"El ropero está cerrado.");
							return true;
						}
						CargarMapeosEx(playerid);
						SetPlayerPos(playerid,254.2685,-41.5420,1002.0308);
						SetPlayerFacingAngle(playerid,267.0000);
						SetPlayerInterior(playerid,14);
					}
				}
				if(IsPlayerInRangeOfPoint(playerid,5,300.3367,311.7175,999.1484) && GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW] && GetPlayerInterior(playerid) == 4)
				{
					if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
					{
						SetPlayerPos(playerid,PropInfo[c][pPosXS],PropInfo[c][pPosYS],PropInfo[c][pPosZS]);
						SetPlayerInterior(playerid,PropInfo[c][pInteriorID]);
					}
					else SendClientMessage(playerid,-1,"Necesitas estar parado en la puerta para entrar.");
				}
			}
		}
		else SendClientMessage(playerid,-1,"No puedes entrar a la propiedad estando en prisión.");
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1094.0945,1597.0083,12.5469)) // Estadio
	{
	    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Tienes que estar parado en la puerta de la propiedad para poder entrar.");
		if(HabilitarCarreras == 0) return SendClientMessage(playerid,-1,"El estadio está cerrado, consulta los horarios en la boletería.");
		if(PlayerInfo[playerid][@Nivel] >= 4)
		{
			if(Armado(playerid) && PlayerInfo[playerid][pDuty] != 1) return SendClientMessage(playerid,-1,"No puedes entrar armado al estadio.");
			if(EntradaCarrera[playerid] == false) return SendClientMessage(playerid,-1,"Debes comprar una entrada en la boleteria primero.");
			if(PlayerInfo[playerid][pCargos] > 0) return SendClientMessage(playerid,-1,"No puedes entrar si la policía te está siguiendo.");
			SetPosEx(playerid,-1387.9806,-324.9726,1052.0834,3.5876,7,7);
			CargarMapeosEx(playerid);
			Boleto[playerid] = false;
			return 1;
		}
	}
	//Entrada Estacionamiento a pie
	for(new c = 0; c < MAX_GARAGES; c++)
	{
		if(EstaInfo[c][pEnUso] == 1)
		{
			if(IsPlayerInRangeOfPoint(playerid,2.5,EstaInfo[c][pPosX],EstaInfo[c][pPosY],EstaInfo[c][pPosZ]))
			{
				if(!IsPlayerInAnyVehicle(playerid))
				{
					CargarMapeosEx(playerid);
					SetPlayerPos(playerid,EstaInfo[c][pPosXS],EstaInfo[c][pPosYS],EstaInfo[c][pPosZS]);
					SetPlayerFacingAngle(playerid,EstaInfo[c][pPosA]);
					SetPlayerInterior(playerid,EstaInfo[c][pInterior]);
					SetPlayerVirtualWorld(playerid,EstaInfo[c][pVW]);
					CargarMapeosEx(playerid);
					PlayerInfo[playerid][pEnEstacionamiento] = 0;
				}
			}
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 186.8628,1428.6979,10.5912) && PlayerInfo[playerid][pTiempoCarcelS] >= 1 && PuedenSalirPatio == true) // Celdas Fort Carson
	{
	    return SetPosEntrar(playerid,168.1524,1436.1014,1084.8462,0,15,15);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1204.8096,12.6643,1000.9219))
	{
	    return MostrarMenuBailarinas(playerid);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1742.9551,-1864.2202,13.5741)) // Unity Station
	{
		return SetPosEntrar(playerid,-2029.7441,-118.6951,1038.8187,355.6106,5,5);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2495.4424,-1691.1359,14.7656)) // Pandilla
	{
	    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Tienes que estar parado en la puerta de la propiedad para poder entrar.");
		return SendClientMessage(playerid,-1,"Solamente los miembros de la banda pueden ingresar a la propiedad.");
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1122.7065,-2036.9232,69.8942)) // Mafia
	{
	    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Tienes que estar parado en la puerta de la propiedad para poder entrar.");
		return SendClientMessage(playerid,-1,"Solamente los miembros de la banda pueden ingresar a la propiedad.");
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 649.0013,-1360.7864,13.5868))  // Estudio de Radio y Television
	{
		if(PlayerInfo[playerid][@Nivel] == 1) return SendClientMessage(playerid,-1,"Necesitas aumentar de nivel para ingresar al Estudio de Radio y Televisión.");
		if(PlayerInfo[playerid][pCargos] > 0) return SendClientMessage(playerid,-1,"La policía te está buscando, no puedes entrar al Estudio de radio y Televisión.");
		return SetPosEntrar(playerid, 387.4330,194.3359,1040.1078,185.9930,5,5);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 224.2623,1443.8137,10.8052))   // Interior FC
	{
		if(Armado(playerid) && PlayerInfo[playerid][pDuty] != 1) return SendClientMessage(playerid,-1,"No puedes entrar armado a la penitenciaría.");
		return SetPosEntrar(playerid,203.4271,1417.9021,1091.2000,278.1793,15,15);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2229.6833,-1721.4192,13.5627)) // GYM Ganton
	{
		return SetPosEx(playerid,772.2999,-5.2435,1000.7286,0,5,0);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2014.8400,1150.4700,10.9203)) // Trabajo prostitución
	{
		return SetPosEntrar(playerid,966.1780,-53.2595,1001.2200,90.0000,3,0);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 824.8679,860.2719,12.3028))    // Bar Cantera
	{
		return SetPosEntrar(playerid,-229.1293,1401.1205,27.7656,0,18,0);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2492.1536,924.8977,11.0234))    // Iglesia LV
	{
		return SetPosEntrar(playerid,-2191.3962,-82.6744,1016.4689,90.0000,1,0);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, -1820.8500,-125.7650,5.7484))  // Bar SF
	{
		return SetPosEntrar(playerid,502.0160,-67.6595,998.7578,180.0000,11,3);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, -1724.9301,-26.2651,3.5547)) // ALBERGUE ENTRAR
	{
	    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Tienes que estar parado en la puerta de la propiedad para poder entrar.");
		if(Armados(playerid) && PlayerInfo[playerid][pDuty] != 1) return SendClientMessage(playerid,-1,"No puedes entrar armado.");
		if(PlayerInfo[playerid][pCargos] > 0) return SendClientMessage(playerid,-1,"La policía te está buscando, no puedes entrar a esta propiedad.");
		SetPosEx(playerid,2332.5701,-1254.7500,1026.2899,0.0000,1,3);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1836.9700,-1682.4700,13.4258)) // ALHAMBRA ENTRAR
	{
	    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Tienes que estar parado en la puerta de la propiedad para poder entrar.");
		if(Armados(playerid) && PlayerInfo[playerid][pDuty] != 1) return SendClientMessage(playerid,-1,"No puedes entrar armado.");
		if(PlayerInfo[playerid][pCargos] > 0) return SendClientMessage(playerid,-1,"La policía te está buscando, no puedes entrar a esta propiedad.");
		SetPosEx(playerid,493.3470,-24.8391,1000.7800,90.0000,17,3);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2014.8101,1107.0100,10.9203)) // Club Striptease
	{
	    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Tienes que estar parado en la puerta de la propiedad para poder entrar.");
		if(Armados(playerid) && PlayerInfo[playerid][pDuty] != 1) return SendClientMessage(playerid,-1,"No puedes entrar armado.");
		if(PlayerInfo[playerid][pCargos] > 0) return SendClientMessage(playerid,-1,"La policía te está buscando, no puedes entrar a esta propiedad.");
		SetPosEx(playerid,1204.8600,-13.8459,1001.0200,0.0000,2,5);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2507.3855,1242.2521,10.8270))  // Bar LS
	{
	    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Tienes que estar parado en la puerta de la propiedad para poder entrar.");
		SetPosEx(playerid,502.0160,-67.6595,998.7578,0,11,6);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2310.0757,-1643.5259,14.8270)) // Bar 88
	{
	    return SetPosEntrar(playerid,502.0160,-67.6595,998.7578,0,11,9);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2348.5005,-1372.6783,24.3984)) // Bar Ganton
	{
	    return SetPosEntrar(playerid,502.0160,-67.6595,998.7578,0,11,12);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, -89.6105,1378.2312,10.4698)) // Bar Ganton
	{
	    return SetPosEntrar(playerid,502.0160,-67.6595,998.7578,0,11,15);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2112.9055,-1211.4561,23.9629)) // Sub Urban
	{
	    return SetPosEntrar(playerid,203.9241,-50.6627,1001.8047,2.5871,1,1);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1377.0605,1152.7566,10.8203))   // RS Haul
	{
	    return SetPosEntrar(playerid,2594.3301,1649.7200,1087.5581,90.0000,1,5);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, -384.8158,2206.0991,42.4235))  // Oficina Minero
	{
	    return SetPosEntrar(playerid,-376.4527,2196.6853,25.4105,92.0502,1,1);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, -550.2115,2347.3640,76.3864))  // Vestuario Minero
	{
	    return SetPosEntrar(playerid,269.1789,293.6963,999.8400,353.5747,1,1);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1451.6393,-2287.0862,13.5469))  // Escuela de Piloto
	{
	    return SetPosEntrar(playerid,1167.2200,-14.5555,1020.7500,0.0000,1,1);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2362.7698,2306.3025,8.1406))	// Academia
	{
		if(PlayerInfo[playerid][@Nivel] < 4) return SendClientMessage(playerid,-1,"Necesitas ser {00CC00}nivel 5{FFFFFF} para poder entrar.");
		if(Armado(playerid) && PlayerInfo[playerid][pDuty] != 1) return SendClientMessage(playerid,-1,"No puedes entrar armado a la academia.");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Tienes que estar parado en la puerta de la propiedad para poder entrar.");
		SetPosEx(playerid,663.4366,-202.8868,1276.7941,97.8041,55,55);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2107.7473,2165.5085,10.8203))  // Ferreteria LV
	{
	    return SetPosEntrar(playerid,-1074.4355,339.9846,1180.5259,356.7959,1,1);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2861.2581,2430.7432,11.0690))  // Ferreteria LV
	{
	    return SetPosEx(playerid,-1074.4355,339.9846,1180.5259,356.7959,1,2);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, -1480.9843,2591.6638,55.8359)) // Ferreteria LV
	{
	    return SetPosEx(playerid,-1074.4355,339.9846,1180.5259,356.7959,1,3);
	}
	if(IsPlayerInRangeOfPoint(playerid,4.0,1423.4301,-1180.1801,25.9922)) 	//Salon de eventos
	{
		if(Armado(playerid) && PlayerInfo[playerid][pDuty] != 1) return SendClientMessage(playerid,-1,"No puedes entrar armado al salón de eventos.");
        if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Tienes que estar parado en la puerta de la propiedad para poder entrar.");
		SetPosEx(playerid,-1275.5626,2108.7246,1246.5457,263.2210,13,1);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid,5.0,1410.7946,-1228.7570,13.5469)) 	//Salon de eventos - vehiculos
	{
		if(TipoEvento != 3) return SendClientMessage(playerid,-1,"Solamente podrán ingresar vehículos al salón cuando haya una exposición.");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Esta entrada es solamente para entrar en vehículo.");
		if(Armado(playerid) && PlayerInfo[playerid][pDuty] != 1) return SendClientMessage(playerid,-1,"No puedes entrar armado al salón de eventos.");
		SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), 13);
		SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), 1);
		SetVehiclePos(GetPlayerVehicleID(playerid), -1165.8710,2118.6238,1246.5457);
		SetVehicleZAngle(GetPlayerVehicleID(playerid),182.4401);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 1172.0782,-1323.3225,15.4029))     // Hospital LS
	{
		if(Armado(playerid) && PlayerInfo[playerid][pDuty] != 1) return SendClientMessage(playerid,-1,"No puedes entrar armado al hospital.");
		if(PlayerInfo[playerid][pCargos] > 0) return SendClientMessage(playerid,-1,"La policía te está buscando, no puedes entrar al hospital.");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Tienes que estar parado en la puerta de la propiedad para poder entrar.");
		SetPosEx(playerid,1156.9583,-1312.1549,-10.7849,180,6,6);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2025.3247,-1401.6721,17.2105))     // Hospital grove
	{
		if(Armado(playerid) && PlayerInfo[playerid][pDuty] != 1) return SendClientMessage(playerid,-1,"No puedes entrar armado al hospital.");
		if(PlayerInfo[playerid][pCargos] > 0) return SendClientMessage(playerid,-1,"La policía te está buscando, no puedes entrar al hospital.");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Tienes que estar parado en la puerta de la propiedad para poder entrar.");
		SetPosEx(playerid,1251.8484,-812.2070,1164.2759,90,6,7);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0, -2665.0000,640.1640,14.5531))      // Hospital SF
	{
		if(Armado(playerid) && PlayerInfo[playerid][pDuty] != 1) return SendClientMessage(playerid,-1,"No puedes entrar armado al hospital.");
		if(PlayerInfo[playerid][pCargos] > 0) return SendClientMessage(playerid,-1,"La policía te está buscando, no puedes entrar al hospital.");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Tienes que estar parado en la puerta de la propiedad para poder entrar.");
		SetPosEx(playerid,-2737.1101,625.3660,1385.6547,270.0000,6,8);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 1.0,1607.4094,1815.2427,10.8203))       // Hospital LV
	{
		if(Armado(playerid) && PlayerInfo[playerid][pDuty] != 1) return SendClientMessage(playerid,-1,"No puedes entrar armado al hospital.");
		if(PlayerInfo[playerid][pCargos] > 0) return SendClientMessage(playerid,-1,"La policía te está buscando, no puedes entrar al hospital.");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Tienes que estar parado en la puerta de la propiedad para poder entrar.");
		SetPosEx(playerid,1251.8484,-812.2070,1164.2759,90,6,9);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1498.4301,-1581.8600,13.5498))     // Banco plaza
	{
	    return SetPosEntrar(playerid,834.4220,7.3780,1004.2900,89.0000,3,0);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, -1581.3199,867.0190,7.7953))       // Banco SF
	{
	    return SetPosEntrar(playerid,2304.8401,-16.4665,26.8422,0.0000,0,5);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2449.4690,2290.2200,10.8203))      // Banco LV
	{
	    return SetPosEntrar(playerid,1092.6782,-152.2306,1001.1160,7.3089,3,6);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1457.1293,-1009.9208,26.8438))     // Banco LS
	{
	    return SetPosEntrar(playerid,1092.6782,-152.2306,1001.1160,7.3089,3,7);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2244.4436,-1665.2526,15.4766))     // Binco
	{
	    return SetPosEntrar(playerid,207.6859,-110.8290,1005.1328,0,15,3);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1456.4785,-1137.6067,23.9485))     // ZIP
	{
	    return SetPosEntrar(playerid,161.4287,-96.9712,1001.8047,355.9063,18,0);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 499.5177,-1360.6284,16.3690))      // Prop Laps
	{
	    return SetPosEntrar(playerid,207.0226,-140.2560,1003.5078,352.1463,3,0);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 454.2013,-1477.9746,30.8137))      // Didier Sachs
	{
	    return SetPosEntrar(playerid,204.2934,-168.8588,1000.5234,358.0996,14,0);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 461.7039,-1500.7959,31.0453))      // Victim
	{
	    return SetPosEntrar(playerid,227.5291,-8.1299,1002.2109,82.0738,5,0);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1940.0084,-2116.0210,13.6953))      // Sex Shop Ganton
	{
	    return SetPosEntrar(playerid,-100.2077,-24.9942,1000.7188,354.1548,3,15);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1087.6561,-922.4826,43.3906))      // Sex Shop Vinewood
	{
	    return SetPosEntrar(playerid,-100.2077,-24.9942,1000.7188,354.1548,3,3);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 953.8881,-1336.8315,13.5389))      // Sex Shop Atras HPC
	{
	    return SetPosEntrar(playerid,-100.4110,-24.9332,1000.7188,90.0000,3,20);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2421.4526,-1219.2432,25.5619))      // Sex Shop LS
	{
	    return SetPosEntrar(playerid,-100.2077,-24.9942,1000.7188,0.0000,3,12);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1137.9877,-1365.3778,13.9844))     // Sex Shop Hospital
	{
	    return SetPosEntrar(playerid,-100.2077,-24.9942,1000.7188,354.1548,3,6);
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2085.1189,2073.9683,11.0547))      // Sex Shop LV
	{
	    return SetPosEntrar(playerid,-100.2077,-24.9942,1000.7188,354.1548,3,9);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,1554.49,-1675.58,16.20))            // LSPD
	{
	    return SetPosEntrar(playerid,246.4140,107.3210,1003.3199,356.0000,10,1);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,2290.4199,2431.8401,10.9203))       // LVPD
	{
	    return SetPosEntrar(playerid,238.7010,138.6510,1003.1200,0.0000,3,7);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,-1605.5137,710.2757,13.8672))       // SFPD
	{
	    return SetPosEntrar(playerid,246.42,107.30,1003.22,0,10,5);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.2,276.2080,122.0958,1004.6172) && PlayerInfo[playerid][pFaccion] == 1)   // Vestuario LSPD - SFPD
	{
		switch(GetPlayerVirtualWorld(playerid))
		{
			case 1:
			{
			    SetPosEntrar(playerid,251.20,76.40,1003.64,180,6,2);
			}
			case 5:
			{
			    SetPosEntrar(playerid,251.20,76.40,1003.64,180,6,6);
			}
		}
	}
	// Autoservicios
	if(IsPlayerInRangeOfPoint(playerid, 5.0,1928.5809,-1776.2848,13.5469))
	{
		return SetPosEntrar(playerid,-25.9019,-188.0416,1007.7300,358.8977,10,1);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,1000.5939,-919.9257,42.3281))
	{
	    return SetPosEntrar(playerid,-25.9019,-188.0416,1007.7300,358.8977,10,2);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,-78.3736,-1169.9005,2.1355))
	{
	    return SetPosEntrar(playerid,-25.9019,-188.0416,1007.7300,358.8977,10,3);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,-1676.1718,432.1964,7.1797))
	{
	    return SetPosEntrar(playerid,-25.9019,-188.0416,1007.7300,358.8977,10,4);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,-2420.1506,969.8429,45.2969))
	{
	    return SetPosEntrar(playerid,-25.9019,-188.0416,1007.7300,358.8977,10,5);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,-1320.4795,2698.6536,50.2663))
	{
	    return SetPosEntrar(playerid,-25.9019,-188.0416,1007.7300,358.8977,10,6);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,639.0652,1683.3542,7.1875))
	{
	    return SetPosEntrar(playerid,-25.9019,-188.0416,1007.7300,358.8977,10,7);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,1599.0673,2221.8108,11.0625))
	{
	    return SetPosEntrar(playerid,-25.9019,-188.0416,1007.7300,358.8977,10,8);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,2637.2786,1129.6777,11.1797))
	{
	    return SetPosEntrar(playerid,-25.9019,-188.0416,1007.7300,358.8977,10,9);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,2117.5002,896.7776,11.1797))
	{
	    return SetPosEntrar(playerid,-25.9019,-188.0416,1007.7300,358.8977,10,10);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,2344.0371,583.3854,11.2078))
	{
	    return SetPosEntrar(playerid,-25.9019,-188.0416,1007.7300,358.8977,10,11);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,2187.7114,2469.6384,11.2422))
	{
	    return SetPosEntrar(playerid,-25.9019,-188.0416,1007.7300,358.8977,10,12);
	}
	// Pizzerias
	if(IsPlayerInRangeOfPoint(playerid, 5.0,-1808.7142,945.9161,24.8906))
	{
	    return SetPosEntrar(playerid,372.3595,-133.5242,1001.4922,358.8977,5,1);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,-1720.9456,1359.7822,7.1853))
	{
	    return SetPosEntrar(playerid,372.3595,-133.5242,1001.4922,358.8977,5,2);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,2083.3376,2224.7012,11.0234))
	{
	    return SetPosEntrar(playerid,372.3595,-133.5242,1001.4922,358.8977,5,3);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,2756.7642,2477.3533,11.0625))
	{
	    return SetPosEntrar(playerid,372.3595,-133.5242,1001.4922,358.8977,5,4);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,2638.7839,1849.7867,11.0234))
	{
	    return SetPosEntrar(playerid,372.3595,-133.5242,1001.4922,358.8977,5,5);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,2331.8098,75.0506,26.6210))
	{
	    return SetPosEntrar(playerid,372.3595,-133.5242,1001.4922,358.8977,5,6);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,1367.5475,248.2522,19.5669))
	{
	    return SetPosEntrar(playerid,372.3595,-133.5242,1001.4922,358.8977,5,7);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,203.3945,-201.9418,1.5781))
	{
	    return SetPosEntrar(playerid,372.3595,-133.5242,1001.4922,358.8977,5,8);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,2105.4844,-1806.4695,13.5547))
	{
	    return SetPosEntrar(playerid,372.3595,-133.5242,1001.4922,358.8977,5,9);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,2351.8242,2533.6289,10.8203))
	{
	    return SetPosEntrar(playerid,372.3595,-133.5242,1001.4922,358.8977,5,10);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,2330.6023,2533.6121,10.8203))
	{
	    return SetPosEntrar(playerid,372.3595,-133.5242,1001.4922,358.8977,5,11);
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,2309.5044,2533.6143,10.8203))
	{
	    return SetPosEntrar(playerid,372.3595,-133.5242,1001.4922,358.8977,5,12);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0,207.9470,142.3866,1003.0234) && PlayerInfo[playerid][pFaccion] == 1)   // Vestuario LVPD
	{
	    return SetPosEntrar(playerid,251.20,76.40,1003.64,0,6,8);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0,638.8741,-218.1260,1276.7928) && PlayerInfo[playerid][pFaccion] == 1)   // Vestuario Academia
	{
	    return SetPosEntrar(playerid,251.20,76.40,1003.64,0,6,10);
	}
	//Supermercados 24/7
	else if(IsPlayerInRangeOfPoint(playerid, 5.0,1833.7693,-1842.5848,13.5781)) // 24-7 Unity
	{
		return SetPosEntrar(playerid,-30.9007,-91.4636,1003.5469,0,18,1,1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0,1315.4862,-897.6825,39.5781))  // 24-7 Vinewood
	{
	    return SetPosEntrar(playerid,-30.9007,-91.4636,1003.5469,0,18,2,1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0,-2442.7354,755.4177,35.1719))  // 24-7 SF
	{
	    return SetPosEntrar(playerid,-30.9007,-91.4636,1003.5469,0,18,3,1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0,1352.3689,-1759.2521,13.5078))  // 24-7 LS
	{
	    return SetPosEntrar(playerid,-30.9007,-91.4636,1003.5469,0,18,4,1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0,2194.9404,1991.0470,12.2969))  // 24-7 LV
	{
	    return SetPosEntrar(playerid,-30.9007,-91.4636,1003.5469,0,18,5,1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0,2424.1951,-1742.8109,13.5454))  // 24-7
	{
	    return SetPosEntrar(playerid,-30.9007,-91.4636,1003.5469,0,18,6,1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0,2884.5591,2454.0518,11.0690))  // 24-7
	{
	    return SetPosEntrar(playerid,-30.9007,-91.4636,1003.5469,0,18,7,1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0,2247.6382,2396.1689,10.8203))  // 24-7
	{
		return SetPosEntrar(playerid,-30.9007,-91.4636,1003.5469,0,18,8,1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0,2546.5747,1972.6678,10.8203))  // 24-7
	{
	    return SetPosEntrar(playerid,-30.9007,-91.4636,1003.5469,0,18,9,1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0,1766.6003,-1398.0162,15.7578))  // 24-7
	{
	    return SetPosEntrar(playerid,-30.9007,-91.4636,1003.5469,0,18,10,1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0,1565.8555,-1171.4226,24.0953))  // 24-7
	{
	    return SetPosEntrar(playerid,-30.9007,-91.4636,1003.5469,0,18,11,1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0,1565.8555,-1171.4226,24.0953))  // 24-7 Estacionamiento Compra VEH
	{
	    return SetPosEntrar(playerid,-30.9685,-91.5752,1003.5469,0,18,24,1);
	}
	return 1;
}
CMD:salir(playerid, params[])
{
	if(TiempoEntrada[playerid] != 0) return 1;
	if(Entrando[playerid] == 0)
	{
		Entrando[playerid] = 1;
		SetTimerEx("Entrandos",3000,false,"d",playerid);
	}
	for(new c = 0; c < MAX_PROPIEDADES; c++)
	{
		if(PropInfo[c][pEnUso] == 1)
		{
			if(IsPlayerInRangeOfPoint(playerid,2.5,PropInfo[c][pPosXS],PropInfo[c][pPosYS],PropInfo[c][pPosZS]))
			{
				if(PlayerInfo[playerid][pTiempoCarcelS] == 0 && PlayerInfo[playerid][pTiempoCarcelM] == 0)
				{
					if(GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
					{
						SetPlayerPos(playerid,PropInfo[c][pPosX],PropInfo[c][pPosY],PropInfo[c][pPosZ]);
						SetPlayerFacingAngle(playerid,PropInfo[c][pPosA]+180.0);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						CargarMapeosEx(playerid);
					}
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid,2.5,254.2685,-41.5420,1002.0308) && GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
			{
				CargarMapeosEx(playerid);
				SetPlayerPos(playerid,PropInfo[c][pRoperoX],PropInfo[c][pRoperoY],PropInfo[c][pRoperoZ]);
				SetPlayerInterior(playerid,PropInfo[c][pInteriorID]);
			}
			if(IsPlayerInRangeOfPoint(playerid,10,303.7281,306.4251,999.2913) && GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW] && GetPlayerInterior(playerid) == 4)
			{
				if(PlayerInfo[playerid][pID] == PropInfo[c][pIDPropietario])
				{
                    if(PlayerInfo[playerid][pTiempoCarcelS] == 0 && PlayerInfo[playerid][pTiempoCarcelM] == 0)
                    {
                        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
						{
							CargarMapeosEx(playerid);
							GuardarPropiedad(c);
							new Float:posx, Float:posy, Float:sizex, Float:sizey, Float:sizez;
							GetVehicleModelInfo(GetVehicleModel(GetPlayerVehicleID(playerid)), VEHICLE_MODEL_INFO_SIZE, sizex, sizey, sizez);
							posx = PropInfo[c][pGX] - (floatsqroot(sizey + sizey + sizey) * floatsin(-PropInfo[c][pGA], degrees));
							posy = PropInfo[c][pGY] - (floatsqroot(sizey + sizey + sizey) * floatcos(-PropInfo[c][pGA], degrees));
							SetVehiclePos(GetPlayerVehicleID(playerid),posx,posy,PropInfo[c][pGZ]);
							SetVehicleZAngle(GetPlayerVehicleID(playerid),PropInfo[c][pGA]+180);
							SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), 0);
							SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), 0);
						}
					}
				}
				else SendClientMessage(playerid,-1,"No puedes sacar vehículos de este garaje.");
			}
			else if(IsPlayerInRangeOfPoint(playerid,7.0,1403.4666,594.2648,1001.0300) && GetPlayerVirtualWorld(playerid) == PropInfo[c][pVW])
			{
				if(PlayerInfo[playerid][pID] == PropInfo[c][pIDPropietario])
				{
					if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
					{
					    if(PlayerInfo[playerid][pTiempoCarcelS] == 0 && PlayerInfo[playerid][pTiempoCarcelM] == 0)
                    	{
							CargarMapeosEx(playerid);
							GuardarPropiedad(c);
							new Float:posx, Float:posy, Float:sizex, Float:sizey, Float:sizez;
							GetVehicleModelInfo(GetVehicleModel(GetPlayerVehicleID(playerid)), VEHICLE_MODEL_INFO_SIZE, sizex, sizey, sizez);
							posx = PropInfo[c][pGX] - (floatsqroot(sizey + sizey + sizey) * floatsin(-PropInfo[c][pGA], degrees));
							posy = PropInfo[c][pGY] - (floatsqroot(sizey + sizey + sizey) * floatcos(-PropInfo[c][pGA], degrees));
							SetVehiclePos(GetPlayerVehicleID(playerid),posx,posy,PropInfo[c][pGZ]);
							SetVehicleZAngle(GetPlayerVehicleID(playerid),PropInfo[c][pGA]+180);
							SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), 0);
							SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), 0);
						}
					}
					else SendClientMessage(playerid,-1,"Necesitas estar en un vehículo para sacarlo.");
				}
				else SendClientMessage(playerid,-1,"No puedes sacar vehículos de este garaje.");
			}
		}
	}
	for(new fb = 0; fb < MAX_FABRICAS; fb++)
	{
		if(PlayerInfo[playerid][pTiempoJailS] == 0)
		{
			if(Fabricas[fb][pEnUso] == 1)
			{
				if(IsPlayerInRangeOfPoint(playerid,2.5,Fabricas[fb][pSalidaX],Fabricas[fb][pSalidaY],Fabricas[fb][pSalidaZ]))
				{
					if(GetPlayerVirtualWorld(playerid) == Fabricas[fb][pVW])
					{
						SetPlayerPos(playerid,Fabricas[fb][pEntradaX],Fabricas[fb][pEntradaY],Fabricas[fb][pEntradaZ]);
						SetPlayerFacingAngle(playerid,Fabricas[fb][pEntradaA]+180.0);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						//CargarMapeosEx(playerid);
						if(PlayerInfo[playerid][pDuty] == 1)
						{
							SetActorInvulnerable(Fabricas[fb][ActorCocinero5], true);
							SetActorInvulnerable(Fabricas[fb][ActorCocinero4], true);
							SetActorInvulnerable(Fabricas[fb][ActorCocinero3], true);
							SetActorInvulnerable(Fabricas[fb][ActorCocinero2], true);
							SetActorInvulnerable(Fabricas[fb][ActorCocinero1], true);
							SetActorInvulnerable(Fabricas[fb][ActorGuardia3], true);
							SetActorInvulnerable(Fabricas[fb][ActorGuardia2], true);
							SetActorInvulnerable(Fabricas[fb][ActorGuardia1], true);
							SetActorInvulnerable(Fabricas[fb][ActorMedico], true);
						}
					}
				}
			}
		}
		else SendClientMessage(playerid,-1,"No puedes salir de la casa si estás en prisión domiciliaria.");
	}
	//Salida Estacionamiento a pie
	for(new c = 0; c < MAX_GARAGES; c++)
	{
		if(EstaInfo[c][pEnUso] == 1)
		{
			if(IsPlayerInRangeOfPoint(playerid,4.5,EstaInfo[c][pPosXS],EstaInfo[c][pPosYS],EstaInfo[c][pPosZS]))
			{
				if(GetPlayerVirtualWorld(playerid) == EstaInfo[c][pVW])
				{
					if(!IsPlayerInAnyVehicle(playerid))
					{
						CargarMapeosEx(playerid);
						SetPlayerPos(playerid,EstaInfo[c][pPosX],EstaInfo[c][pPosY],EstaInfo[c][pPosZ]);
						SetPlayerFacingAngle(playerid,EstaInfo[c][pPosA]+180.0);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						CargarMapeosEx(playerid);
						PlayerInfo[playerid][pEnEstacionamiento] = 0;
					}
				}
			}
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,168.1524,1436.1014,1084.8462) && PlayerInfo[playerid][pTiempoCarcelS] >= 1 && PuedenSalirPatio == true) // Celdas de FC
	{
		CargarMapeosEx(playerid);
		SetPosEx(playerid,186.8628,1428.6979,10.5912,314.1114-90,0,0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,1783.8291,-1301.7024,13.5026)) 		// Elevador
	{
		CargarMapeosEx(playerid);
		SetPosEx(playerid,1786.6675,-1299.3005,13.4228,350.8194,0,0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, -2191.3962,-82.6744,1016.4689))    // Iglesia LV
	{
		CargarMapeosEx(playerid);
		SetPosEx(playerid,2492.1550,925.4753,11.0234,354.8306,0,0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,-1387.9806,-324.9726,1052.0834)) 	// Estadio LV
	{
		CargarMapeosEx(playerid);
		SetPosEx(playerid,1094.0945,1597.0083,12.5469,0,0,0);
		EntradaCarrera[playerid] = false;
		if(EnCarreras[playerid] > 0) SacarCarrera(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,203.4271,1417.9021,1091.2000)) 		// Interior FC
	{
		CargarMapeosEx(playerid);
		SetPosEx(playerid,224.2623,1443.8137,10.8052,0,0,0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,-2029.7441,-118.6951,1038.8187)) 	// Unity Station
	{
		CargarMapeosEx(playerid);
		SetPosEx(playerid,1742.9551,-1864.2202,13.5741,0,0,0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,493.3470,-24.8391,1000.7800)) 	// Club Alhambra
	{
		CargarMapeosEx(playerid);
		SetPosEx(playerid,1836.9700,-1682.4700,13.4258,90.0000,0,0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,772.2999,-5.2435,1000.7286)) 		// GYM Ganton
	{
		CargarMapeosEx(playerid);
		SetPosEx(playerid, 2229.6833,-1721.4192,13.5627,88.3268,0,0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,-229.1293,1401.1205,27.7656)) 		// Bar Pequeño
	{
		CargarMapeosEx(playerid);
		SetPosEx(playerid, 824.8679,860.2719,12.3028,23.8002,0,0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 387.3900,194.3362,1040.1078))      // Emisoras
	{
		CargarMapeosEx(playerid);
		SetPosEx(playerid,649.0013,-1360.7864,13.5868,96.7888,0,0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid,2.5,-1275.5626,2108.7246,1246.5457))     //Salon de eventos
	{
		CargarMapeosEx(playerid);
		SetPosEx(playerid,1423.4301,-1180.1801,25.9922,0,0,0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid,5.0,-1166.5009,2126.8232,1246.5457))     //Salon de eventos - vehiculos
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Esta salida es solamente para salir en vehículo.");
		CargarMapeosEx(playerid);
		SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), 0);
		SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), 0);
		SetVehiclePos(GetPlayerVehicleID(playerid), 1410.2614,-1237.0621,13.3828);
		SetVehicleZAngle(GetPlayerVehicleID(playerid),177.9267);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,-376.4527,2196.6853,25.4105))		// Oficina Minero
	{
		CargarMapeosEx(playerid);
		SetPosEx(playerid,-384.8158,2206.0991,42.4235,99.8075,0,0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,269.1789,293.6963,999.8400)) 		// Vestuario Minero
	{
		CargarMapeosEx(playerid);
		SetPosEx(playerid,-550.2115,2347.3640,76.3864,247.7023,0,0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2332.5701,-1254.7500,1026.2899)) // ALBERGUE SALIR
	{
		CargarMapeosEx(playerid);
		SetPosEx(playerid,-1724.9301,-26.2651,3.5547,180.0000,0,0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1204.8600,-13.8459,1001.0200)) // Club Striptease
	{
		CargarMapeosEx(playerid);
		SetPosEx(playerid,2014.8101,1107.0100,10.9203,210.0000,0,0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 501.8426,-67.7034,998.7578)) 		// Bares Grandes
	{
		switch(GetPlayerVirtualWorld(playerid))
		{
			case 3:
			{
				SetPosEx(playerid,-1820.8500,-125.7650,5.7484,0.0000,0,0);
				CargarMapeosEx(playerid);
				return 1;
			}
			case 6:
			{
				SetPosEx(playerid,2507.3855,1242.2521,10.8270,178.5648,0,0);
				CargarMapeosEx(playerid);
				return 1;
			}
			case 9:
			{
				SetPosEx(playerid,2310.0757,-1643.5259,14.8270,316.1429,0,0);
				CargarMapeosEx(playerid);
				return 1;
			}
			case 12:
			{
				SetPosEx(playerid,2348.5005,-1372.6783,24.3984,316.1429,0,0);
				CargarMapeosEx(playerid);
				return 1;
			}
			case 15:
			{
				SetPosEx(playerid,-89.6105,1378.2312,10.4698,316.1429,0,0);
				CargarMapeosEx(playerid);
				return 1;
			}
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, -100.2077,-24.9942,1000.7188)) 	// Sex Shop's
	{
		switch(GetPlayerVirtualWorld(playerid))
		{
			case 3:
			{
				SetPosEx(playerid,1087.6561,-922.4826,43.3906,186.5433,0,0);
				CargarMapeosEx(playerid);
				return 1;
			}
			case 6:
			{
				SetPosEx(playerid,1137.9877,-1365.3778,13.9844,89.5541,0,0);
				CargarMapeosEx(playerid);
				return 1;
			}
			case 9:
			{
				SetPosEx(playerid,2085.1189,2073.9683,11.0547,93.0609,0,0);
				CargarMapeosEx(playerid);
				return 1;
			}
			case 12:
			{
				SetPosEx(playerid,2421.4468,-1219.3365,25.5559,173.1247,0,0);
				CargarMapeosEx(playerid);
				return 1;
			}
			case 15:
			{
				SetPosEx(playerid,1940.0084,-2116.0210,13.6953,0,0,0);
				CargarMapeosEx(playerid);
				return 1;
			}
			case 20:
			{
				SetPosEx(playerid,953.9083,1336.8312,13.5389,0,0,0);
				CargarMapeosEx(playerid);
				return 1;
			}
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, -1074.4355,339.9846,1180.5259)) 	// Ferreterias LV
	{
		switch(GetPlayerVirtualWorld(playerid))
		{
			case 1:
			{
				SetPosEx(playerid,2107.7473,2165.5085,10.8203,0.2875,0,0);
				CargarMapeosEx(playerid);
				return 1;
			}
			case 2:
			{
				SetPosEx(playerid,2861.2581,2430.7432,11.0690,0.2875,0,0);
				CargarMapeosEx(playerid);
				return 1;
			}
			case 3:
			{
				SetPosEx(playerid,-1480.9843,2591.6638,55.8359,0.2875,0,0);
				CargarMapeosEx(playerid);
				return 1;
			}
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 203.9241,-50.6627,1001.8047)) 		// Sub Urban
	{
		SetPosEx(playerid,2112.9055,-1211.4561,23.9629,91.7501,0,0);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 834.4220,7.3780,1004.2900)) 		// Bancos Pequeños (Plaza)
	{
		SetPosEx(playerid,1498.4301,-1581.8600,13.5498,90.0000,0,0);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0,2304.8401,-16.4665,26.8422))        // Banco SF
	{
		CargarMapeosEx(playerid);
		SetPosEx(playerid,-1581.3199,867.0190,7.7953,90.0000,0,0);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 3.0,1092.6782,-152.2306,1001.1160))     // Banco Central LS - LV
	{
		switch(GetPlayerVirtualWorld(playerid))
		{
			case 6:
			{
				SetPosEx(playerid,2449.4690,2290.2200,10.8203,90.0000,0,0);
				CargarMapeosEx(playerid);
				return 1;
			}
			case 7:
			{
				SetPosEx(playerid,1457.1293,-1009.9208,26.8438,180,0,0);
				CargarMapeosEx(playerid);
				return 1;
			}
		}
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 966.1780,-53.2595,1001.2200)) // Trabajo prostitución
	{
		SetPosEx(playerid,2014.8400,1150.4700,10.9203,328.0000,0,0);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 3.0,207.6859,-110.8290,1005.1328))      // Binco
	{
		SetPosEx(playerid,2244.3147,-1665.3564,15.4766,346.2641,0,0);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 3.0,161.4287,-96.9712,1001.8047))       // ZIP
	{
		SetPosEx(playerid,1456.4785,-1137.6067,23.9485,220.2317,0,0);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 3.0,207.0226,-140.2560,1003.5078))      // Pro Laps
	{
		SetPosEx(playerid,499.5177,-1360.6284,16.3690,339.9262,0,0);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 3.0,204.2934,-168.8588,1000.5234))      // Didier Sachs
	{
		SetPosEx(playerid,454.2013,-1477.9746,30.8137,111.2141,0,0);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1167.2426,-14.5519,1020.6459))  // Escuela de Piloto
	{
		SetPosEx(playerid,1451.6300,-2286.1201,13.5469,90.0000,0,0);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 663.4366,-202.8868,1276.7941))  // Academia
	{
		SetPosEx(playerid,2362.7698,2306.3025,8.1406,184.1203,0,0);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 3.0,227.5291,-8.1299,1002.2109))       // Victim
	{
		SetPosEx(playerid,461.7039,-1500.7959,31.0453,96.1739,0,0);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,2594.2100,1649.7188,1087.5581))     // RS Haul
	{
		if(GetPlayerVirtualWorld(playerid) == 5)
		{
			CargarMapeosEx(playerid);
			SetPosEx(playerid,1377.0605,1152.7566,10.8203,0.0000,0,0);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 3.0,1251.8484,-812.2070,1164.2759)) //Hospital ganton - Lv
	{
		switch(GetPlayerVirtualWorld(playerid))
		{
			case 7:
			{
				SetPosEx(playerid,2025.3247,-1401.6721,17.2105,0,0,0);
				CargarMapeosEx(playerid);
			}
			case 6:
			{
				SetPosEx(playerid,1607.4094,1815.2427,10.8203,0,0,0);
				CargarMapeosEx(playerid);
			}
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,251.20,76.40,1003.64) && PlayerInfo[playerid][pFaccion] == 1) // Vestuario SAPD
	{
		switch(GetPlayerVirtualWorld(playerid))
		{
			case 2:
			{
				CargarMapeosEx(playerid);
				SetPosEx(playerid,276.2080,122.0958,1004.6172,0,10,1);
				CargarMapeosEx(playerid);
			}
			case 6:
			{
				CargarMapeosEx(playerid);
				SetPosEx(playerid,276.2080,122.0958,1004.6172,0,10,5);
				CargarMapeosEx(playerid);
			}
			case 8:
			{
				CargarMapeosEx(playerid);
				SetPosEx(playerid,207.9470,142.3866,1003.0234,0,3,7);
			}
			case 10:
			{
				CargarMapeosEx(playerid);
				SetPosEx(playerid,638.8741,-218.1260,1276.7928,0,55,55);
			}
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0, -30.9007,-91.4636,1003.5469))      // 24/7
	{
		switch(GetPlayerVirtualWorld(playerid))
		{
			case 1: {
				SetPosEx(playerid,1833.7819,-1842.6631,13.5781,271.0529-180,0,0);
				CargarMapeosEx(playerid);
			}
			case 2: {
				SetPosEx(playerid,1315.4862,-897.6825,39.5781,180.0000,0,0);
				CargarMapeosEx(playerid);
			}
			case 3: {
				SetPosEx(playerid,-2442.7354,755.4177,35.1719,180.0000,0,0);
				CargarMapeosEx(playerid);
			}
			case 4: {
				SetPosEx(playerid,1352.3689,-1759.2521,13.5078,1.8684,0,0);
				CargarMapeosEx(playerid);
			}
			case 5: {
				SetPosEx(playerid,2194.9404,1991.0470,12.2969,1.8684,0,0);
				CargarMapeosEx(playerid);
			}
			case 6: {
				SetPosEx(playerid,2424.1951,-1742.8109,13.5454,0,0,0);
				CargarMapeosEx(playerid);
			}
			case 7: {
				SetPosEx(playerid,2884.5591,2454.0518,11.0690,0,0,0);
				CargarMapeosEx(playerid);
			}
			case 8: {
				SetPosEx(playerid,2247.6382,2396.1689,10.8203,0,0,0);
				CargarMapeosEx(playerid);
			}
			case 9: {
				SetPosEx(playerid,2546.5747,1972.6678,10.8203,0,0,0);
				CargarMapeosEx(playerid);
			}
			case 10: {
				SetPosEx(playerid,1766.6003,-1398.0162,15.7578,0,0,0);
				CargarMapeosEx(playerid);
			}
			case 11: {
				SetPosEx(playerid,1565.8555,-1171.4226,24.0953,0,0,0);
				CargarMapeosEx(playerid);
			}
			case 24: {
				SetPosEx(playerid,1565.6500,-1171.0500,24.1925,90.0000,0,0);
				CargarMapeosEx(playerid);
			}
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0, -25.9019,-188.0416,1007.7300))      // Autoservicios
	{
		switch(GetPlayerVirtualWorld(playerid))
		{
			case 1: {
				SetPosEx(playerid,1928.5809,-1776.2848,13.5469,270.0000,0,0);
				CargarMapeosEx(playerid);
			}
			case 2: {
				SetPosEx(playerid,1000.5939,-919.9257,42.3281,94.3611,0,0);
				CargarMapeosEx(playerid);
			}
			case 3: {
				SetPosEx(playerid,-78.3736,-1169.9005,2.1355,61.8761,0,0);
				CargarMapeosEx(playerid);
			}
			case 4: {
				SetPosEx(playerid,-1676.1718,432.1964,7.1797,224.6751,0,0);
				CargarMapeosEx(playerid);
			}
			case 5: {
				SetPosEx(playerid,-2420.1506,969.8429,45.2969,87.5656,0,0);
				CargarMapeosEx(playerid);
			}
			case 6: {
				SetPosEx(playerid,-1320.4795,2698.6536,50.2663,28.8933,0,0);
				CargarMapeosEx(playerid);
			}
			case 7: {
				SetPosEx(playerid,639.0652,1683.3542,7.1875,224.9244,0,0);
				CargarMapeosEx(playerid);
			}
			case 8: {
				SetPosEx(playerid,1599.0673,2221.8108,11.0625,41.5389,0,0);
				CargarMapeosEx(playerid);
			}
			case 9: {
				SetPosEx(playerid,2637.2786,1129.6777,11.1797,2.2830,0,0);
				CargarMapeosEx(playerid);
			}
			case 10: {
				SetPosEx(playerid,2117.5002,896.7776,11.1797,182.6812,0,0);
				CargarMapeosEx(playerid);
			}
			case 11: {
				SetPosEx(playerid,2344.0371,583.3854,11.2078,264.4542,0,0);
				CargarMapeosEx(playerid);
			}
			case 12: {
				SetPosEx(playerid,2187.7114,2469.6384,11.2422,264.4542,0,0);
				CargarMapeosEx(playerid);
			}
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0, 372.3595,-133.5242,1001.4922))      // Pizzerias
	{
		switch(GetPlayerVirtualWorld(playerid))
		{
			case 1: {
				SetPosEx(playerid,-1808.7142,945.9161,24.8906,91.7226,0,0);
				CargarMapeosEx(playerid);
			}
			case 2: {
				SetPosEx(playerid,-1720.9456,1359.7822,7.1853,91.7226,0,0);
				CargarMapeosEx(playerid);
			}
			case 3: {
				SetPosEx(playerid,2083.3376,2224.7012,11.0234,91.7226,0,0);
				CargarMapeosEx(playerid);
			}
			case 4: {
				SetPosEx(playerid,2756.7642,2477.3533,11.0625,91.7226,0,0);
				CargarMapeosEx(playerid);
			}
			case 5: {
				SetPosEx(playerid,2638.7839,1849.7867,11.0234,91.7226,0,0);
				CargarMapeosEx(playerid);
			}
			case 6: {
				SetPosEx(playerid,2331.8098,75.0506,26.6210,91.7226,0,0);
				CargarMapeosEx(playerid);
			}
			case 7: {
				SetPosEx(playerid,1367.5475,248.2522,19.5669,91.7226,0,0);
				CargarMapeosEx(playerid);
			}
			case 8: {
				SetPosEx(playerid,203.3945,-201.9418,1.5781,91.7226,0,0);
				CargarMapeosEx(playerid);
			}
			case 9: {
				SetPosEx(playerid,2105.4844,-1806.4695,13.5547,91.7226,0,0);
				CargarMapeosEx(playerid);
			}
			case 10: {
				SetPosEx(playerid,2351.8242,2533.6289,10.8203,91.7226,0,0);
				CargarMapeosEx(playerid);
			}
			case 11: {
				SetPosEx(playerid,2330.6023,2533.6121,10.8203,91.7226,0,0);
				CargarMapeosEx(playerid);
			}
			case 12: {
				SetPosEx(playerid,2309.5044,2533.6143,10.8203,91.7226,0,0);
				CargarMapeosEx(playerid);
			}
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0, 246.4200,107.3000,1003.2200))      // LSPD - SFPD
	{
		if(GetPlayerVirtualWorld(playerid) == 1)
		{
			CargarMapeosEx(playerid);
			SetPosEx(playerid,1554.9100,-1675.6300,16.1953,90.0000,0,0);
			return 1;
		}
		else if(GetPlayerVirtualWorld(playerid) == 5)
		{
			CargarMapeosEx(playerid);
			SetPosEx(playerid,-1605.4000,711.5900,13.8672,90.0000,0,0);
			return 1;
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0,238.7010,138.6510,1003.1200))       // LVPD
	{
		CargarMapeosEx(playerid);
		SetPosEx(playerid,2290.4199,2431.8401,10.9203,180.0000,0,0);
	}
	if(IsPlayerInRangeOfPoint(playerid, 3.0,-2737.1101,625.3660,1385.6547))     // HOSPITAL SF
	{
		SetPosEx(playerid,-2665.0000,640.1640,14.5531,180.0000,0,0);
		CargarMapeosEx(playerid);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1156.9583,-1312.1549,-10.7849)) 	//Hospital Interior
	{
		SetPosEx(playerid,1172.0782,-1323.3225,15.4029,270.0000,0,0);
		CargarMapeosEx(playerid);
	}
	if(IsPlayerInRangeOfPoint(playerid, 10.0, 1706.9027,-1876.7185,-48.8961)) 	// Estacionamiento
	{
		switch(GetPlayerVirtualWorld(playerid))
		{
			case 1:
			{
				if (GetPlayerState(playerid) == 2)
				{
					if(GetPlayerVehicleID(playerid) == autos[playerid] || GetPlayerVehicleID(playerid) == autos2[playerid] || GetPlayerVehicleID(playerid) == autos3[playerid] || GetPlayerVehicleID(playerid) == autos4[playerid])
					{
						CargarMapeosEx(playerid);
						SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), 0);
						SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), 0);
						SetVehiclePos(GetPlayerVehicleID(playerid), 1396.3224,-1160.4917,23.8313);
						SetVehicleZAngle(GetPlayerVehicleID(playerid),338.9972);
					}
					else return SendClientMessage(playerid,-1,"No puedes salir con un vehículo que no sea de tu propiedad.");
				}
				else
				{
					CargarMapeosEx(playerid);
					SetPosEx(playerid,1392.9570,-1169.8564,23.8203,181.3369,0,0);
				}
			}
			case 2:
			{
				if (GetPlayerState(playerid) == 2)
				{
					if(GetPlayerVehicleID(playerid) == autos[playerid] || GetPlayerVehicleID(playerid) == autos2[playerid] || GetPlayerVehicleID(playerid) == autos3[playerid] || GetPlayerVehicleID(playerid) == autos4[playerid])
					{
						CargarMapeosEx(playerid);
						SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), 0);
						SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), 0);
						SetVehiclePos(GetPlayerVehicleID(playerid), 1448.1564,-1468.2059,13.3761);
						SetVehicleZAngle(GetPlayerVehicleID(playerid),262.4517);
					}
					else return SendClientMessage(playerid,-1,"No puedes salir con un vehículo que no sea de tu propiedad.");
				}
				else
				{
					CargarMapeosEx(playerid);
					SetPosEx(playerid,1442.3940,-1468.2909,13.5293,86.4952,0,0);
				}
			}
			case 3:
			{
				if (GetPlayerState(playerid) == 2)
				{
					if(GetPlayerVehicleID(playerid) == autos[playerid] || GetPlayerVehicleID(playerid) == autos2[playerid] || GetPlayerVehicleID(playerid) == autos3[playerid] || GetPlayerVehicleID(playerid) == autos4[playerid])
					{
						CargarMapeosEx(playerid);
						SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), 0);
						SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), 0);
						SetVehiclePos(GetPlayerVehicleID(playerid), 1654.8175,-1867.3330,13.3828);
						SetVehicleZAngle(GetPlayerVehicleID(playerid),177.2686);
					}
					else return SendClientMessage(playerid,-1,"No puedes salir con un vehículo que no sea de tu propiedad.");
				}
				else
				{
					CargarMapeosEx(playerid);
					SetPosEx(playerid,1655.2574,-1860.8815,13.5490,1.3617,0,0);
				}
			}
			case 4:
			{
				if (GetPlayerState(playerid) == 2)
				{
					if(GetPlayerVehicleID(playerid) == autos[playerid] || GetPlayerVehicleID(playerid) == autos2[playerid] || GetPlayerVehicleID(playerid) == autos3[playerid] || GetPlayerVehicleID(playerid) == autos4[playerid])
					{
						CargarMapeosEx(playerid);
						SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), 0);
						SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), 0);
						SetVehiclePos(GetPlayerVehicleID(playerid), -1724.7244,-122.2444,3.5489);
						SetVehicleZAngle(GetPlayerVehicleID(playerid),143.9871);
					}
					else return SendClientMessage(playerid,-1,"No puedes salir con un vehículo que no sea de tu propiedad.");
				}
				else
				{
					CargarMapeosEx(playerid);
					SetPosEx(playerid,-1720.9270,-117.1379,3.5489,315.8079,0,0);
				}
			}
			case 5:
			{
				if (GetPlayerState(playerid) == 2)
				{
					if(GetPlayerVehicleID(playerid) == autos[playerid] || GetPlayerVehicleID(playerid) == autos2[playerid] || GetPlayerVehicleID(playerid) == autos3[playerid] || GetPlayerVehicleID(playerid) == autos4[playerid])
					{
						CargarMapeosEx(playerid);
						SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), 0);
						SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), 0);
						SetVehiclePos(GetPlayerVehicleID(playerid), -423.1445,2235.3386,42.4297);
						SetVehicleZAngle(GetPlayerVehicleID(playerid),343.3787);
					}
					else return SendClientMessage(playerid,-1,"No puedes salir con un vehículo que no sea de tu propiedad.");
				}
				else
				{
					CargarMapeosEx(playerid);
					SetPosEx(playerid,-426.1187,2225.8433,42.4297,157.0168,0,0);
				}
			}
			case 6:
			{
				if (GetPlayerState(playerid) == 2)
				{
					if(GetPlayerVehicleID(playerid) == autos[playerid] || GetPlayerVehicleID(playerid) == autos2[playerid] || GetPlayerVehicleID(playerid) == autos3[playerid] || GetPlayerVehicleID(playerid) == autos4[playerid])
					{
						CargarMapeosEx(playerid);
						SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), 0);
						SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), 0);
						SetVehiclePos(GetPlayerVehicleID(playerid), 1643.5936,-1531.9646,13.1438);
						SetVehicleZAngle(GetPlayerVehicleID(playerid),181.4253);
					}
					else return SendClientMessage(playerid,-1,"No puedes salir con un vehículo que no sea de tu propiedad.");
				}
				else
				{
					CargarMapeosEx(playerid);
					SetPosEx(playerid,1643.4115,-1521.4697,13.5592,157.0168,0,0);
				}
			}
		}
	}
	return 1;
}
CMD:uniforme(playerid, params[])
{
	new texto[128];
	if(!sscanf(params,"s[128]",texto))
	{
		if(strcmp(texto,	"medico",	true) == 0)
		{
			if(PlayerInfo[playerid][pTrabajo] == T_Medico || PlayerInfo[playerid][pTrabajo2] == T_Medico)
			{
				if(EnRopaMedico(playerid))
				{
					if(RopaMedi[playerid] == 0)
					{
					    switch(PlayerInfo[playerid][jSexo])
						{
							case 1:
							{
								SetPlayerSkin(playerid,276);
							}
							case 2:
							{
					    		RemovePlayerAttachedObject(playerid, 3);
					    		RemovePlayerAttachedObject(playerid, 4);
								SetPlayerSkin(playerid,308);
							}
						}
	     				RopaMedi[playerid] = 1;
	     				RopaBasu[playerid] = 0;
		    			RopaMine[playerid] = 0;
						SendClientMessage(playerid,-1,"Te has colocado el uniforme correctamente.");
					}
					else if(RopaMedi[playerid] == 1)
					{
					    RemovePlayerAttachedObject(playerid, 3);
						RemovePlayerAttachedObject(playerid, 4);
						RopaMedi[playerid] = 0;
						RopaBasu[playerid] = 0;
		    			RopaMine[playerid] = 0;
						SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
						SendClientMessage(playerid,-1,"Te has quitado el uniforme correctamente.");
					}
				}
				else return SendClientMessage(playerid,-1,"Necesitas el trabajo de médico para utilizar este comando");
			}
		}
		if(strcmp(texto,	"minero",	true) == 0)
		{
			if(PlayerInfo[playerid][pTrabajo] == T_Minero || PlayerInfo[playerid][pTrabajo2] == T_Minero)
			{
				if(IsPlayerInRangeOfPoint(playerid,3.0,269.1445,295.4604,999.8400))
				{
					if(RopaMine[playerid] == 0)
					{
					    RopaMine[playerid] = 1;
						SendClientMessage(playerid,-1,"Te has colocado el uniforme correctamente");
           			    switch(PlayerInfo[playerid][jSexo])
						{
						    case 1:
							{
								SetPlayerSkin(playerid, 27);
								RopaMine[playerid] = 1;
							}
							case 2:
							{
							    RemovePlayerAttachedObject(playerid, 3);
								RemovePlayerAttachedObject(playerid, 4);
							    SetPlayerSkin(playerid, 131);
		    					RopaMine[playerid] = 1;
								SetPlayerAttachedObject(playerid,4,18638,2,0.136,0.018999,0.002999,-0.600001,-2.10002,-12.4,1,1,1.072);
							}
						}
					}
					else if(RopaMine[playerid] == 1)
					{
					    RemovePlayerAttachedObject(playerid, 3);
						RemovePlayerAttachedObject(playerid, 4);
						RopaMine[playerid] = 0;
						RopaMedi[playerid] = 0;
						RopaBasu[playerid] = 0;
						SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
						SendClientMessage(playerid,-1,"Te has quitado el uniforme correctamente.");
					}
				}
			}
			else return SendClientMessage(playerid,-1,"Necesitas el trabajo de minero para utilizar este comando");
		}
		if(strcmp(texto,	"policia",	true) == 0)
		{
			if(PlayerInfo[playerid][pFaccion] != 1) return 1;
			if(PlayerInfo[playerid][pDuty] != 1)
            {
				if(PlayerToPoint(2.0, playerid, 254.0884,73.6973,1003.6406))//normal
				{
				    if(PlayerInfo[playerid][jSexo] == 2) return SendClientMessage(playerid,-1,"Aquí solo hay uniformes para hombres.");
					PlayerInfo[playerid][pDuty] = 1;
					SendClientMessage(playerid, COLOR_MEGAPHONE, "Te pusiste el uniforme de policía.");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModelo]);
					SetPlayerColor(playerid,COLOR_POLICIA);
					RopaMine[playerid] = 0;
					RopaMedi[playerid] = 0;
					RopaBasu[playerid] = 0;
				}
				else if(PlayerToPoint(2.0, playerid, 253.2736,77.8771,1003.6406))//MOTO
				{
				    if(PlayerInfo[playerid][jSexo] != 1) return SendClientMessage(playerid,-1,"Aquí solo hay uniformes para hombres.");
					PlayerInfo[playerid][pDuty] = 1;
					RopaMine[playerid] = 0;
					RopaMedi[playerid] = 0;
					RopaBasu[playerid] = 0;
					SendClientMessage(playerid, COLOR_MEGAPHONE, "Te pusiste el uniforme de policía.");
					SetPlayerSkin(playerid, 284);
					PlayerInfo[playerid][pModelo] = GetPlayerSkin(playerid);
					SetPlayerColor(playerid,COLOR_POLICIA);
				}
				else if(PlayerToPoint(2.0, playerid, 258.5233,76.5009,1003.6406))//MUJER
				{
				    if(PlayerInfo[playerid][jSexo] != 2) return SendClientMessage(playerid,-1,"Aquí solo hay uniformes para mujeres.");
					PlayerInfo[playerid][pDuty] = 1;
					SendClientMessage(playerid, COLOR_MEGAPHONE, "Te pusiste el uniforme de policía.");
					SetPlayerSkin(playerid, SAPDF[random(sizeof(SAPDF))]);
					PlayerInfo[playerid][pModelo] = GetPlayerSkin(playerid);
					SetPlayerAttachedObject(playerid, 3,19142,1,0.109797,0.053399,-0.002000,0.000000,-2.299998,0.299997,1.046000,0.986998,0.893000);
					SetPlayerColor(playerid,COLOR_POLICIA);
					RopaMine[playerid] = 0;
					RopaMedi[playerid] = 0;
					RopaBasu[playerid] = 0;
				}
            }
   			else if(PlayerInfo[playerid][pDuty] == 1)
			{
			    if(PlayerToPoint(2.0, playerid, 254.0884,73.6973,1003.6406) || PlayerToPoint(2.0, playerid, 258.5233,76.5009,1003.6406) || PlayerToPoint(2.0, playerid, 253.2736,77.8771,1003.6406))//normal
				SetPlayerColor(playerid,COLOR_WHITE);
    			SendClientMessage(playerid, -1, "Dejaste el uniforme de policía y recuperaste tu ropa.");
				SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]);
				RemovePlayerAttachedObject(playerid, 3);
				PlayerInfo[playerid][pDuty] = 0;
				if(PlayerInfo[playerid][pWP1] == 3)
				{
					QuitarArma(playerid, 3);
				}
				ResetPlayerWeapons(playerid);
				RopaMine[playerid] = 0;
				RopaMedi[playerid] = 0;
				RopaBasu[playerid] = 0;
				DarArmas(playerid);
			}
		}
 	}
	return 1;
}
CMD:dejar(playerid,params[])
{
	new item[32],ID,string[128];
	if(!sscanf(params,"s[32]", item))
	{
		if(strcmp(item, "roca",true)==0)
		{
            if(!IsPlayerInRangeOfPoint(playerid, 10.0, -548.2949,2336.7649,83.4777)) return SendClientMessage(playerid, -1, "No estas en el lugar adecuado.");
			new rocas[5];
			rocas[0] = rocajugador[playerid];
			rocas[1] = 19382;
			rocas[2] = 19382;
			rocas[3] = 19382;
			ShowModelSelectionMenuEx2(playerid, rocas, 4, "Selecciona la roca", OBJETIVOROCA, 16.0, 0.0, -55.0, 1.0, 0x000000FF, 0x000000FF, 1);
		}
		if(strcmp(item, "trabajo",true)==0)
		{
			if(PlayerInfo[playerid][pTrabajo] > T_Ninguno)
			{
				format(string,128,"Escribe {DBED16}/dejar trabajo %d{FFFFFF} para abandonar el trabajo de %s.", PlayerInfo[playerid][pTrabajo], NombreTrabajo(PlayerInfo[playerid][pTrabajo]));
				SendClientMessage(playerid,-1,string);
			}
			if(PlayerInfo[playerid][pTrabajo2] > T_Ninguno)
			{
				format(string,128,"Escribe {DBED16}/dejar trabajo %d{FFFFFF} para abandonar el trabajo de %s.", PlayerInfo[playerid][pTrabajo2], NombreTrabajo(PlayerInfo[playerid][pTrabajo2]));
				SendClientMessage(playerid,-1,string);
			}
		}
	}
	if(!sscanf(params,"s[32]d", item, ID))
	{
		if(strcmp(item, "trabajo",true)==0)
		{
			if(PlayerInfo[playerid][pTrabajo] == ID)
			{
			    format(string,128,"Has abandonado el trabajo de {DBED16}%s{FFFFFF}.", NombreTrabajo(PlayerInfo[playerid][pTrabajo]));
				SendClientMessage(playerid, -1, string);
				if(PlayerInfo[playerid][pDuty] == 0)   { SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]); }
				if(PlayerInfo[playerid][pTrabajo] == T_Medico)  { RopaMedi[playerid] = 0; }
				if(PlayerInfo[playerid][pTrabajo] == T_Basurero)  { RopaBasu[playerid] = 0; }
				if(PlayerInfo[playerid][pTrabajo] == T_Mecanico)  { RopaMeca[playerid] = 0; }
				if(PlayerInfo[playerid][pTrabajo] == T_Minero) { RopaMine[playerid] = 0; }
				{
					RemovePlayerMapIcon(playerid, 99);
					permisopesca[playerid] = 0;
				}
				PlayerInfo[playerid][pTrabajo] = T_Ninguno;
			}
			else if(PlayerInfo[playerid][pTrabajo2] == ID)
			{
				format(string,128,"Has abandonado el trabajo de {DBED16}%s{FFFFFF}.", NombreTrabajo(PlayerInfo[playerid][pTrabajo2]));
				SendClientMessage(playerid, -1, string);
				if(PlayerInfo[playerid][pDuty] == 0)   { SetPlayerSkin(playerid, PlayerInfo[playerid][jRopa]); }
				if(PlayerInfo[playerid][pTrabajo2] == 1)  { RopaMedi[playerid] = 0; }
				if(PlayerInfo[playerid][pTrabajo2] == 6)  { RopaBasu[playerid] = 0; }
				if(PlayerInfo[playerid][pTrabajo2] == 8)  { RopaMeca[playerid] = 0; }
				if(PlayerInfo[playerid][pTrabajo2] == 11) { RopaMine[playerid] = 0; }
				if(permisopesca[playerid] == 1)
				{
					RemovePlayerMapIcon(playerid, 99);
					permisopesca[playerid] = 0;
				}
				PlayerInfo[playerid][pTrabajo2] = T_Ninguno;
			}
		}
	}
	return 1;
}
CMD:aceptar(playerid, params[])
{
	new item[14],Float:X,Float:Y,Float:Z,day,month,year;
	getdate(day,month,year);
	if(IsPlayerConnected(playerid))
	if(sscanf(params, "s[14]", item)) return 1;
	{
		if(strcmp(item, "arma", true) == 0)
		{
		    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"No puedes recibir un arma si estás en un vehículo.");
			if(armaofertada[playerid] == 16 && PlayerInfo[playerid][@Nivel] < 7) return SendClientMessage(playerid, -1, "Necesitas {EB0000}nivel 7{FFFFFF} para equipar esta arma."); // Granada
		 	if(armaofertada[playerid] == 27 && PlayerInfo[playerid][@Nivel] < 6) return SendClientMessage(playerid, -1, "Necesitas {EB0000}nivel 6{FFFFFF} para equipar esta arma."); // Escopeta de combate
   			if(armaofertada[playerid] == 30 && PlayerInfo[playerid][@Nivel] < 5) return SendClientMessage(playerid, -1, "Necesitas {EB0000}nivel 5{FFFFFF} para equipar esta arma."); // AK-47
   			if(armaofertada[playerid] == 31 && PlayerInfo[playerid][@Nivel] < 5) return SendClientMessage(playerid, -1, "Necesitas {EB0000}nivel 5{FFFFFF} para equipar esta arma."); // M4
   			if(armaofertada[playerid] == 29 && PlayerInfo[playerid][@Nivel] < 4) return SendClientMessage(playerid, -1, "Necesitas {EB0000}nivel 4{FFFFFF} para equipar esta arma."); // MP5
   			if(armaofertada[playerid] == 24 && PlayerInfo[playerid][@Nivel] < 4) return SendClientMessage(playerid, -1, "Necesitas {EB0000}nivel 4{FFFFFF} para equipar esta arma."); // Desert Eagle
   			if(armaofertada[playerid] == 25 && PlayerInfo[playerid][@Nivel] < 3) return SendClientMessage(playerid, -1, "Necesitas {EB0000}nivel 3{FFFFFF} para equipar esta arma."); // Escopeta de madera
            if(armaofertada[playerid] == 33 && PlayerInfo[playerid][@Nivel] < 3) return SendClientMessage(playerid, -1, "Necesitas {EB0000}nivel 3{FFFFFF} para equipar esta arma."); // Rifle de caza
			if(ofertador[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid,-1,"Nadie te ofreció un arma.");
			if(IsPlayerInAnyVehicle(ofertador[playerid])) return SendClientMessage(playerid,-1,"La persona que te ha ofrecido el arma se encuentra en un vehículo");
			if(PlayerInfo[playerid][jDinero] >= dineropedido[playerid])
			{
				GetPlayerPos(ofertador[playerid], X,Y,Z);
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, X,Y,Z)) return SendClientMessage(playerid,-1,"No estas cerca del vendedor");
				{
					if(!CheckArma(ofertador[playerid],armaofertada[playerid])) return SendClientMessage(playerid,-1,"El jugador ya no tiene el arma que te ha ofrecido");
					new pName[32],pName2[32],string[256],Query[200];
					GetPlayerName(ofertador[playerid], pName, 32);
					GetPlayerName(playerid, pName2, 32);
					format(Query, sizeof(Query), "INSERT INTO `log_ventas` (Vendedor, item, arma, precio, comprador,fecha) VALUES ('%s','Arma', '%d','%d','%s','%02d/%02d/%02d')",pName,armaofertada[playerid],dineropedido[playerid],pName2,day,month,year);
					mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
					QuitarDinero(playerid, dineropedido[playerid]);
					DarArma(playerid,armaofertada[playerid]);
					QuitarArma(ofertador[playerid],armaofertada[playerid]);
					DarDinero(ofertador[playerid],dineropedido[playerid]);
					format(string, 256, " %s recibe el arma de %s",pName2,pName);
					ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					if(idTimerOfertaPerdida[playerid] != -1)
					{
						KillTimer(idTimerOfertaPerdida[playerid]);
						idTimerOfertaPerdida[playerid] = -1;
					}
					if(idTimerTiempoVenta[ofertador[playerid]] != -1)
					{
						KillTimer(idTimerTiempoVenta[ofertador[playerid]]);
						idTimerTiempoVenta[ofertador[playerid]] = -1;
					}
					armaofertada[playerid] = 0;
					dineropedido[playerid] = 0;
					ofertador[playerid] = INVALID_PLAYER_ID;
				}
			}
			else SendClientMessage(playerid,-1,"No tienes suficiente dinero");
		}
		if(strcmp(item,"Muerte", true) == 0)
		{
			if(PlayerInfo[playerid][Agonizando] == 1 && Muriendo[playerid] == 1)
			{
	   			ApareceHospital(playerid);
				Muriendo[playerid] = 0;
				MarcadoMedicos[playerid] = 0;
				LlamadaMedicos[playerid] = 0;
			}
		}
		if(strcmp(item,"reparacion", true) == 0)
		{
			GetPlayerPos(Mecanico[playerid], X,Y,Z);
			if(Mecanico[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid,-1,"Ningun mecánico te ha ofrecido reparar tu vehículo");
			if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,-1,"Debes estar conduciendo tu vehículo para utilizar este comando");
			if(PlayerInfo[playerid][jDinero] < MConductor[playerid]) return SendClientMessage(playerid,-1,"No tienes suficiente dinero");
			if(PlayerInfo[playerid][@Nivel] == 1 && PlayerInfo[playerid][jExperiencia] < 4) return SendClientMessage(playerid,-1,"Necesitas tener por lo menos 4 horas de juego para aceptar una reparación");
			if(IsPlayerInRangeOfPoint(playerid, 6.0, X,Y,Z))
			{
				new pName[24],Float:angle,autoid = GetPlayerVehicleID(playerid);
				GetPlayerName(Mecanico[playerid],pName,24);
				TogglePlayerControllable(Mecanico[playerid], 0);
				SetPVarInt(Mecanico[playerid], "IsFrozen", 0);
				GetPlayerFacingAngle(Mecanico[playerid],angle);
				SetPlayerFacingAngle(Mecanico[playerid],angle+180);
				LoopingAnim(Mecanico[playerid],"CAR","Fixn_Car_Loop",4.1,0,0,0,1,15000);
				switch(PlayerInfo[Mecanico[playerid]][pNivelPiloto])
				{
					case 1:
					{
						SetTimerEx("Reparando",15000,false,"d",autoid);
						SetTimerEx("Reparando2",15000,false,"d",Mecanico[playerid]);
						GameTextForPlayer(Mecanico[playerid], "REPARANDO VEHICULO", 15000, 5);
					}
					case 2:
					{
						SetTimerEx("Reparando",13000,false,"d",autoid);
						SetTimerEx("Reparando2",13000,false,"d",Mecanico[playerid]);
						GameTextForPlayer(Mecanico[playerid], "REPARANDO VEHICULO", 13000, 5);
					}
					case 3:
					{
						SetTimerEx("Reparando",9000,false,"d",autoid);
						SetTimerEx("Reparando2",9000,false,"d",Mecanico[playerid]);
						GameTextForPlayer(Mecanico[playerid], "REPARANDO VEHICULO", 9000, 5);
					}
					case 4:
					{
						SetTimerEx("Reparando",6000,false,"d",autoid);
						SetTimerEx("Reparando2",6000,false,"d",Mecanico[playerid]);
						GameTextForPlayer(Mecanico[playerid], "REPARANDO VEHICULO", 6000, 5);
					}
					case 5..100:
					{
						SetTimerEx("Reparando",3000,false,"d",autoid);
						SetTimerEx("Reparando2",3000,false,"d",Mecanico[playerid]);
						GameTextForPlayer(Mecanico[playerid], "REPARANDO VEHICULO", 3000, 5);
					}
				}
				new repuestos = MRepuestos[Mecanico[playerid]];
				LlamadaMeca[playerid] = 0;
				SetPlayerColor(playerid, COLOR_WHITE);
				QuitarDinero(playerid, MConductor[playerid]);
				DarDinero(Mecanico[playerid], MConductor[playerid]);
				PlayerInfo[Mecanico[playerid]][Repuestos] -= repuestos;
				Mecanico[playerid] = INVALID_PLAYER_ID;
				AccionesRol(playerid,"comienza a reparar el vehículo.", 20);
				new string99[128];
				for(new z=0;z<MAX_PLAYERS;z++)
				{
					if(PlayerInfo[z][pAdmin] > ADMIN_LEVEL_DUDAS)
					{
						format(string99,128,"%s (ID: %d | Nivel: %d) recibe $%d por reparar el vehiculo de %s (ID:%d - Nivel:%d - 2hs)",PlayerName(Mecanico[playerid]),Mecanico[playerid],PlayerInfo[Mecanico[playerid]][@Nivel],MConductor[playerid],PlayerName(playerid),playerid,PlayerInfo[playerid][@Nivel]);
						SendClientMessage(z,0xFFDBED15FF,string99);
					}
				}
			}
			else return SendClientMessage(playerid,-1,"Debes estar cerca del mecánico para aceptar la reparación");
		}
		if(strcmp(item,"consumible", true) == 0)
		{
			if(TipoOferta[playerid] == 1)
			{
				GetPlayerPos(ofertador[playerid], X,Y,Z);
				if(ofertador[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid,-1,"Nadie te ofreció un consumible.");
				if(PlayerInfo[playerid][jDinero] < dineropedido[playerid]) return SendClientMessage(playerid,-1,"No tienes suficiente dinero");
				if(!IsPlayerInRangeOfPoint(playerid, 4.0, X,Y,Z)) return SendClientMessage(playerid,-1,"No estas cerca del vendedor");
				if(PlayerInfo[ofertador[playerid]][pCrack] < CrackOfrecidos[playerid]) return SendClientMessage(playerid,-1,"El vendedor ya no tiene la cantidad de crack que te ha ofrecido");
				if(CrackOfrecidos[playerid] > 0)
				{
					new pName[32],pName2[32],string[256],Query[200];
					GetPlayerName(ofertador[playerid], pName, 32);
					GetPlayerName(playerid, pName2, 32);
					format(Query, sizeof(Query), "INSERT INTO `log_ventas` (Vendedor, item, cantidad, precio, comprador,fecha) VALUES ('%s','crack', '%d','%d','%s','%02d/%02d/%02d')",pName,CrackOfrecidos[playerid],dineropedido[playerid],pName2,day,month,year);
					mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
					QuitarDinero(playerid,dineropedido[playerid]);
					DarDinero(ofertador[playerid],dineropedido[playerid]);
					PlayerInfo[playerid][pCrack] += CrackOfrecidos[playerid];
					TipoOferta[playerid] = 0;
					PlayerInfo[ofertador[playerid]][pCrack] -= CrackOfrecidos[playerid];
					format(string, 256, " %s recibió algo de %s",pName2,pName);
					ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					if(idTimerOfertaPerdida[playerid] != -1)
					{
						KillTimer(idTimerOfertaPerdida[playerid]);
						idTimerOfertaPerdida[playerid] = -1;
					}
					if(idTimerTiempoVenta[ofertador[playerid]] != -1)
					{
						KillTimer(idTimerTiempoVenta[ofertador[playerid]]);
						idTimerTiempoVenta[ofertador[playerid]] = -1;
					}
					ofertador[playerid] = INVALID_PLAYER_ID;
					CrackOfrecidos[playerid] = 0;
				}
            }
            else if(TipoOferta[playerid] == 2)
			{
				if(ofertador[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid,-1,"Nadie te ofreció un consumible.");
				GetPlayerPos(ofertador[playerid], X,Y,Z);
				if(PlayerInfo[playerid][jDinero] < dineropedido[playerid]) return SendClientMessage(playerid,-1,"No tienes suficiente dinero");
				if(!IsPlayerInRangeOfPoint(playerid, 4.0, X,Y,Z)) return SendClientMessage(playerid,-1,"No estas cerca del vendedor");
				if(PlayerInfo[ofertador[playerid]][pMedicamentos] < MedicamentosOfrecidos[playerid]) return SendClientMessage(playerid,-1,"El vendedor ya no tiene la cantidad de medicamentos que te ha ofrecido");
				if(MedicamentosOfrecidos[playerid] > 0)
				{
					new pName[32],pName2[32],string[256],Query[200];
					GetPlayerName(ofertador[playerid], pName, 32);
					GetPlayerName(playerid, pName2, 32);
					format(Query, sizeof(Query), "INSERT INTO `log_ventas` (Vendedor, item, cantidad, precio, comprador,fecha) VALUES ('%s','Medicamentos', '%d','%d','%s','%02d/%02d/%02d')",pName,MedicamentosOfrecidos[playerid],dineropedido[playerid],pName2,day,month,year);
					mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
					QuitarDinero(playerid,dineropedido[playerid]);
					DarDinero(ofertador[playerid],dineropedido[playerid]);
					TipoOferta[playerid] = 0;
					PlayerInfo[playerid][pMedicamentos] += MedicamentosOfrecidos[playerid];
					PlayerInfo[ofertador[playerid]][pMedicamentos] -= MedicamentosOfrecidos[playerid];
					format(string, 256, " %s recibió algo de %s",pName2,pName);
					ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					if(idTimerOfertaPerdida[playerid] != -1)
					{
						KillTimer(idTimerOfertaPerdida[playerid]);
						idTimerOfertaPerdida[playerid] = -1;
					}
					if(idTimerTiempoVenta[ofertador[playerid]] != -1)
					{
						KillTimer(idTimerTiempoVenta[ofertador[playerid]]);
						idTimerTiempoVenta[ofertador[playerid]] = -1;
					}
					ofertador[playerid] = INVALID_PLAYER_ID;
					MedicamentosOfrecidos[playerid] = 0;
				}
			}
			else if(TipoOferta[playerid] == 3)
			{
				if(ofertador[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid,-1,"Nadie te ofreció un consumible.");
				GetPlayerPos(ofertador[playerid], X,Y,Z);
				if(PlayerInfo[playerid][jDinero] < dineropedido[playerid]) return SendClientMessage(playerid,-1,"No tienes suficiente dinero");
				if(!IsPlayerInRangeOfPoint(playerid, 4.0, X,Y,Z)) return SendClientMessage(playerid,-1,"No estas cerca del vendedor");
				if(PlayerInfo[ofertador[playerid]][pMarihuana] < MarihuanaOfrecida[playerid]) return SendClientMessage(playerid,-1,"El vendedor ya no tiene la cantidad de marihuana que te ha ofrecido");
				if(MarihuanaOfrecida[playerid] > 0)
				{
					new pName[32],pName2[32],string[256],Query[200];
					GetPlayerName(ofertador[playerid], pName, 32);
					GetPlayerName(playerid, pName2, 32);
					format(Query, sizeof(Query), "INSERT INTO `log_ventas` (Vendedor, item, cantidad, precio, comprador,fecha) VALUES ('%s','Marihuana', '%d','%d','%s','%02d/%02d/%02d')",pName,MarihuanaOfrecida[playerid],dineropedido[playerid],pName2,day,month,year);
					mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
					QuitarDinero(playerid,dineropedido[playerid]);
					TipoOferta[playerid] = 0;
					DarDinero(ofertador[playerid],dineropedido[playerid]);
					PlayerInfo[playerid][pMarihuana] += MarihuanaOfrecida[playerid];
					PlayerInfo[ofertador[playerid]][pMarihuana] -= MarihuanaOfrecida[playerid];
					format(string, 256, " %s recibió algo de %s",pName2,pName);
					ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					if(idTimerOfertaPerdida[playerid] != -1)
					{
						KillTimer(idTimerOfertaPerdida[playerid]);
						idTimerOfertaPerdida[playerid] = -1;
					}
					if(idTimerTiempoVenta[ofertador[playerid]] != -1)
					{
						KillTimer(idTimerTiempoVenta[ofertador[playerid]]);
						idTimerTiempoVenta[ofertador[playerid]] = -1;
					}
					ofertador[playerid] = INVALID_PLAYER_ID;
					MarihuanaOfrecida[playerid] = 0;
				}
			}
			else
			{
				if(TieneSprunk[Ofertante[playerid]] == 0) return SendClientMessage(playerid,-1,"El jugador ya no tiene Sprunk.");
				if(TipoOferta[playerid] == 4)   {	TieneSprunk[playerid] = SprunkOfrecido[playerid];   }
				if(TipoOferta[playerid] == 5)   {	TieneVino[playerid] = SprunkOfrecido[playerid];   }
				if(TipoOferta[playerid] == 6)   {	TieneCerveza[playerid] = SprunkOfrecido[playerid];   }
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
				SprunkOfrecido[playerid] = 0;
				TipoOferta[playerid] = 0;
				new string[128];
				ClearAnimations(Ofertante[playerid]);
				SetPlayerSpecialAction(Ofertante[playerid], SPECIAL_ACTION_NONE);
				format(string, sizeof(string), "%s recibió un vaso de sprunk de %s", PlayerName(playerid), PlayerName(Ofertante[playerid]));
				ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				Ofertante[playerid] = -1;
			}
        }
		if(strcmp(item,"piezas", true) == 0)
		{
			GetPlayerPos(ofertador[playerid], X,Y,Z);
			if(ofertador[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid,-1,"Nadie te ofreció piezas de armas");
			if(PlayerInfo[playerid][jDinero] < dineropedido[playerid]) return SendClientMessage(playerid,-1,"No tienes suficiente dinero");
			if(!IsPlayerInRangeOfPoint(playerid, 4.0, X,Y,Z)) return SendClientMessage(playerid,-1,"No estas cerca del vendedor");
			if(PlayerInfo[ofertador[playerid]][pMateriales] < PiezasOfrecidas[playerid]) return SendClientMessage(playerid,-1,"El vendedor ya no tiene la cantidad de piezas de armas que te ha ofrecido");
			if(PiezasOfrecidas[playerid] > 0)
			{
				new pName[32],pName2[32],string[256],Query[200];
				GetPlayerName(ofertador[playerid], pName, 32);
				GetPlayerName(playerid, pName2, 32);
				format(Query, sizeof(Query), "INSERT INTO `log_ventas` (Vendedor, item, cantidad, precio, comprador,fecha) VALUES ('%s','piezas', '%d','%d','%s','%02d/%02d/%02d')",pName,PiezasOfrecidas[playerid],dineropedido[playerid],pName2,day,month,year);
				mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
				QuitarDinero(playerid,dineropedido[playerid]);
				DarDinero(ofertador[playerid],dineropedido[playerid]);
				PlayerInfo[playerid][pMateriales] += PiezasOfrecidas[playerid];
				PlayerInfo[ofertador[playerid]][pMateriales] -= PiezasOfrecidas[playerid];
				format(string, 256, " %s recibió algo de %s",pName2,pName);
				ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				if(idTimerOfertaPerdida[playerid] != -1)
				{
					KillTimer(idTimerOfertaPerdida[playerid]);
					idTimerOfertaPerdida[playerid] = -1;
				}
				if(idTimerTiempoVenta[ofertador[playerid]] != -1)
				{
					KillTimer(idTimerTiempoVenta[ofertador[playerid]]);
					idTimerTiempoVenta[ofertador[playerid]] = -1;
				}
				ofertador[playerid] = INVALID_PLAYER_ID;
				PiezasOfrecidas[playerid] = 0;
			}
		}
		if(strcmp(item,""SERVER_COIN"", true) == 0)
		{
			GetPlayerPos(ofertador[playerid], X,Y,Z);
			if(LeOfreci[ofertador[playerid]] == 0) return SendClientMessage(playerid, COLOR_WHITE, "Esta oferta ya ha caducado.");
			if(ofertador[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid,-1,"Nadie te ha ofrecido "SERVER_COIN2"");
			if(PlayerInfo[playerid][jDinero] < dineropedido[playerid]) return SendClientMessage(playerid,-1,"No tienes suficiente dinero");
			if(!IsPlayerInRangeOfPoint(playerid, 4.0, X,Y,Z)) return SendClientMessage(playerid,-1,"No estas cerca del vendedor");
			if(PlayerInfo[ofertador[playerid]][Moneda] < EVOfrecidos[playerid]) return SendClientMessage(playerid,-1,"El vendedor ya no tiene la cantidad de "SERVER_COIN" que te ha ofrecido");
			if(EVOfrecidos[playerid] > 0)
			{
				new pName[32],pName2[32],string[256],Query[200];
				GetPlayerName(ofertador[playerid], pName, 32);
				GetPlayerName(playerid, pName2, 32);
				format(Query, sizeof(Query), "INSERT INTO `log_ventas` (Vendedor, item, cantidad, precio, comprador,fecha) VALUES ('%s','"SERVER_COIN"', '%d','%d','%s','%02d/%02d/%02d')",pName,EVOfrecidos[playerid],dineropedido[playerid],pName2,day,month,year);
				mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
				QuitarDinero(playerid,dineropedido[playerid]);
				DarDinero(ofertador[playerid],dineropedido[playerid]);
				PlayerInfo[playerid][Moneda] += EVOfrecidos[playerid];
				PlayerInfo[ofertador[playerid]][Moneda] -= EVOfrecidos[playerid];
				format(string, 256, " %s recibió algo de %s",pName2,pName);
				ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				if(idTimerOfertaPerdida[playerid] != -1)
				{
					KillTimer(idTimerOfertaPerdida[playerid]);
					idTimerOfertaPerdida[playerid] = -1;
				}
				if(idTimerTiempoVenta[ofertador[playerid]] != -1)
				{
					KillTimer(idTimerTiempoVenta[ofertador[playerid]]);
					idTimerTiempoVenta[ofertador[playerid]] = -1;
				}
				ofertador[playerid] = INVALID_PLAYER_ID;
				EVOfrecidos[playerid] = 0;
			}
		}
		if(strcmp(item,"proteccion", true) == 0)
		{
			if(GuardaEspalda[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid,-1,"No te han ofrecido ninguna protección");
			GetPlayerPos(GuardaEspalda[playerid], X,Y,Z);
			if(PlayerInfo[playerid][jDinero] < dineropedido[playerid]) return SendClientMessage(playerid,-1,"No tienes suficiente dinero");
			if(!IsPlayerInRangeOfPoint(playerid, 4.0, X,Y,Z)) return SendClientMessage(playerid,-1,"No estas cerca del vendedor");
			{
				new pName[32],pName2[32],string[256],Query[200];
				GetPlayerName(GuardaEspalda[playerid], pName, 32);
				GetPlayerName(playerid, pName2, 32);
				format(Query, sizeof(Query), "INSERT INTO `log_ventas` (Vendedor, item, cantidad, precio, comprador,fecha) VALUES ('%s','Proteccion', '50','%d','%s','%02d/%02d/%02d')",pName,dineropedido[playerid],pName2,day,month,year);
				mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
				QuitarDinero(playerid,dineropedido[playerid]);
				DarDinero(GuardaEspalda[playerid],dineropedido[playerid]);
				if(strcmp(PlayerInfo[GuardaEspalda[playerid]][Totem], PlayerName(playerid), true) == 0 || strcmp(PlayerInfo[playerid][Totem], PlayerName(GuardaEspalda[playerid]), true) == 0)
				{
                    EstablecerChaleco(playerid, 70);
				}
				else
				{
					EstablecerChaleco(playerid, 50);
				}
				format(string, 256, " %s recibe la protección de %s",pName2,pName);
				ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				GuardaEspalda[playerid] = INVALID_PLAYER_ID;
			}
		}

	}
	return 1;
}
CMD:forzar(playerid, params[])
{
	new item[20],pName[24],Float:Pos[3];
	if(!sscanf(params,"s[20]",item))
	{
		if(strcmp(item,	"cerradura",	true) == 0)
		{
			if(PlayerInfo[playerid][@Nivel] < 6 && PlayerInfo[playerid][pVip] == 0) return SendClientMessage(playerid,-1,"Solamente jugadores VIP2 o de nivel 6 en adelante pueden forzar cerraduras.");
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"No puedes hacer esto en un vehículo");
			if(PlayerInfo[playerid][pNivelLadron] == 1 && PlayerInfo[playerid][jMartillo] == 0) return SendClientMessage(playerid,-1,"Necesitas un martillo para forzar la cerradura.");
			if(PlayerInfo[playerid][pNivelLadron] == 2 && PlayerInfo[playerid][jDestornillador] == 0) return SendClientMessage(playerid,-1,"Necesitas un destornillador para forzar la cerradura.");
			if(PlayerInfo[playerid][pNivelLadron] == 3 && PlayerInfo[playerid][jBarreta] == 0) return SendClientMessage(playerid,-1,"Necesitas un barreta para forzar la cerradura.");
            if(IsPlayerInRangeOfPoint(playerid, 2.0,-2277.1763,-9.9763,38.2523))
			{
				if(Forzada1 == 0)
				{
					Forzada1 = 1;
					AnimacionRobar(playerid);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{
						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{
						    AudioLadron(playerid,i,Pos[0],Pos[1],Pos[2]);
						}
					}
					SetTimerEx("Forzado",10000,false,"d",playerid);
					SetTimerEx("Aviso",5000,false,"d",playerid);
					SetTimer("CargarCasa1",1800000,false);
					DestroyDynamic3DTextLabel(EscaparLabel[0]);
					SendClientMessage(playerid,-1,"Forzando cerradura, espera {00CC00}10 segundos{FFFFFF}.");
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde.");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,932.2239,1973.6547,11.6083))
			{
				if(Forzada2 == 0)
				{
					GetPlayerName(playerid,pName,24);
					Forzada2 = 1;
					AnimacionRobar(playerid);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{
						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{
						    AudioLadron(playerid,i,Pos[0],Pos[1],Pos[2]);
						}
					}
					SetTimerEx("Forzado2",10000,false,"d",playerid);
					SetTimerEx("Aviso2",5000,false,"d",playerid);
					SetTimer("CargarCasa2",1800000,false);
					DestroyDynamic3DTextLabel(EscaparLabel[4]);
					SendClientMessage(playerid,-1,"Forzando cerradura, espera {00CC00}10 segundos{FFFFFF}.");
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde.");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,-2393.9712,-13.1641,35.3125))
			{
				if(Forzada3 == 0)
				{
					GetPlayerName(playerid,pName,24);
					Forzada3 = 1;
					AnimacionRobar(playerid);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{
						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{
						    AudioLadron(playerid,i,Pos[0],Pos[1],Pos[2]);
						}
					}
					SetTimerEx("Forzado3",10000,false,"d",playerid);
					SetTimerEx("Aviso",5000,false,"d",playerid);
					SetTimer("CargarCasa3",1800000,false);
					DestroyDynamic3DTextLabel(EscaparLabel[1]);
					SendClientMessage(playerid,-1,"Forzando cerradura, espera {00CC00}10 segundos{FFFFFF}.");
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde.");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,2373.8467,-1139.5442,30.0510))
			{
				if(Forzada4 == 0)
				{
					GetPlayerName(playerid,pName,24);
					Forzada4 = 1;
					AnimacionRobar(playerid);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{
						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{
						    AudioLadron(playerid,i,Pos[0],Pos[1],Pos[2]);
						}
					}
					SetTimerEx("Forzado4",10000,false,"d",playerid);
					SetTimerEx("Aviso4",5000,false,"d",playerid);
					SetTimer("CargarCasa4",1800000,false);
					DestroyDynamic3DTextLabel(EscaparLabel[2]);
					SendClientMessage(playerid,-1,"Forzando cerradura, espera {00CC00}10 segundos{FFFFFF}.");
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde.");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,-2727.5435,-50.9449,7.0301))
			{
				if(Forzada5 == 0)
				{
					GetPlayerName(playerid,pName,24);
					Forzada5 = 1;
					AnimacionRobar(playerid);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{
						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{
						    AudioLadron(playerid,i,Pos[0],Pos[1],Pos[2]);
						}
					}
					SetTimerEx("Forzado5",10000,false,"d",playerid);
					SetTimerEx("Aviso",5000,false,"d",playerid);
					SetTimer("CargarCasa5",1800000,false);
					DestroyDynamic3DTextLabel(EscaparLabel[5]);
					SendClientMessage(playerid,-1,"Forzando cerradura, espera {00CC00}10 segundos{FFFFFF}.");
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde.");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,-2727.5054,-155.6168,7.2009))
			{
				if(Forzada6 == 0)
				{
					GetPlayerName(playerid,pName,24);
					Forzada6 = 1;
					AnimacionRobar(playerid);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{
						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{
						    AudioLadron(playerid,i,Pos[0],Pos[1],Pos[2]);
						}
					}
					SetTimerEx("Forzado6",10000,false,"d",playerid);
					SetTimerEx("Aviso",5000,false,"d",playerid);
					SetTimer("CargarCasa6",1800000,false);
					DestroyDynamic3DTextLabel(EscaparLabel[6]);
					SendClientMessage(playerid,-1,"Forzando cerradura, espera {00CC00}10 segundos{FFFFFF}.");
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde.");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,1762.8772,-2101.1462,13.9916))//casa7
			{
				if(Forzada7 == 0)
				{
					GetPlayerName(playerid,pName,24);
					Forzada7 = 1;
					AnimacionRobar(playerid);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{
						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{
						    AudioLadron(playerid,i,Pos[0],Pos[1],Pos[2]);
						}
					}
					SetTimerEx("Forzado7",10000,false,"d",playerid);
					SetTimerEx("Aviso4",5000,false,"d",playerid);
					SetTimer("CargarCasa7",1800000,false);
					DestroyDynamic3DTextLabel(EscaparLabel[8]);
					SendClientMessage(playerid,-1,"Forzando cerradura, espera {00CC00}10 segundos{FFFFFF}.");
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde.");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,2485.1733,-1997.1724,13.9166))
			{
				if(Forzada8 == 0)
				{
					GetPlayerName(playerid,pName,24);
					Forzada8 = 1;
					AnimacionRobar(playerid);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{
						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{
						    AudioLadron(playerid,i,Pos[0],Pos[1],Pos[2]);
						}
					}
					SetTimerEx("Forzado8",10000,false,"d",playerid);
					SetTimerEx("Aviso4",5000,false,"d",playerid);
					SetTimer("CargarCasa8",1800000,false);
					DestroyDynamic3DTextLabel(EscaparLabel[7]);
					SendClientMessage(playerid,-1,"Forzando cerradura, espera {00CC00}10 segundos{FFFFFF}.");
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde.");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,1844.5101,770.9579,11.4838))//casa9
			{
				if(Forzada9 == 0)
				{
					GetPlayerName(playerid,pName,24);
					Forzada9 = 1;
					AnimacionRobar(playerid);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{
						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{
						    AudioLadron(playerid,i,Pos[0],Pos[1],Pos[2]);
						}
					}
					SetTimerEx("Forzado9",10000,false,"d",playerid);
					SetTimerEx("Aviso2",5000,false,"d",playerid);
					SetTimer("CargarCasa9",1800000,false);
					DestroyDynamic3DTextLabel(EscaparLabel[9]);
					SendClientMessage(playerid,-1,"Forzando cerradura, espera {00CC00}10 segundos{FFFFFF}.");
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde.");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,-1448.9193,2647.9514,56.4912))
			{
				if(Forzada10 == 0)
				{
					GetPlayerName(playerid,pName,24);
					Forzada10 = 1;
					AnimacionRobar(playerid);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{
						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{
						    AudioLadron(playerid,i,Pos[0],Pos[1],Pos[2]);
						}
					}
					SetTimerEx("Forzado10",10000,false,"d",playerid);
					SetTimerEx("Aviso3",5000,false,"d",playerid);
					SetTimer("CargarCasa10",1800000,false);
					DestroyDynamic3DTextLabel(EscaparLabel[3]);
					SendClientMessage(playerid,-1,"Forzando cerradura, espera {00CC00}10 segundos{FFFFFF}.");
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde.");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,1344.6938,2610.3264,11.5494))//casa11
			{
				if(Forzada11 == 0)
				{
					GetPlayerName(playerid,pName,24);
					Forzada11 = 1;
					AnimacionRobar(playerid);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{
						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{
						    AudioLadron(playerid,i,Pos[0],Pos[1],Pos[2]);
						}
					}
					DestroyDynamic3DTextLabel(EscaparLabel[10]);
					SetTimerEx("Forzado11",10000,false,"d",playerid);
					SetTimerEx("Aviso2",5000,false,"d",playerid);
					SetTimer("CargarCasa11",1800000,false);
					DestroyDynamic3DTextLabel(EscaparLabel[10]);
					SendClientMessage(playerid,-1,"Forzando cerradura, espera {00CC00}10 segundos{FFFFFF}.");
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde.");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,1666.2400, 2610.7400, 10.4000))//casa12
			{
				if(Forzada12 == 0)
				{
					GetPlayerName(playerid,pName,24);
					Forzada12 = 1;
					AnimacionRobar(playerid);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{
						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{
							AudioLadron(playerid,i,Pos[0],Pos[1],Pos[2]);
						}
					}
					SetTimerEx("Forzado12",10000,false,"d",playerid);
					SetTimerEx("Aviso2",5000,false,"d",playerid);
					SetTimer("CargarCasa12",1800000,false);
					DestroyDynamic3DTextLabel(EscaparLabel[11]);
					SendClientMessage(playerid,-1,"Forzando cerradura, espera {00CC00}10 segundos{FFFFFF}.");
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde.");
			}
		}
	}
	return 1;
}
CMD:usar(playerid,params[])
{
	new item[32];
	if(!sscanf(params,"s[32]",item))
	{
		if(strcmp(item, "bidon", true)==0)
		{
			if(Bidon[playerid] == 0) return SendClientMessage(playerid, -1, "Tu no tienes un bidon de gasolina");
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Debes estar en un vehículo para utilizar el bidon");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,-1,"Debes estar manejando el vehiculo para usar el bidon");
			{

				new autoid = GetPlayerVehicleID(playerid);
				new resta = 100-VehicleFuel[autoid];
				if(resta > 5)
				{
					VehicleFuel[autoid] += 5;
					Bidon[playerid] = 0;
					SendClientMessage(playerid, -1,"{DBED16}El tanque de combustible fue cargado con el bidón de 5 litros.");
					RemovePlayerAttachedObject(playerid, 2);
				}
				else if(resta < 5)
				{
					VehicleFuel[autoid] += resta;
					Bidon[playerid] = 0;
					SendClientMessage(playerid, -1,"{DBED16}El tanque de combustible fue cargado con el bidón de 5 litros.");
					RemovePlayerAttachedObject(playerid, 2);
				}
			}
		}
		if(strcmp(item, "prenda", true)==0 || strcmp(item, "prendas", true)==0)
        {
            new prendas[4];
            prendas[0] = PlayerInfo[playerid][pObj];
            prendas[1] = PlayerInfo[playerid][pObj2];
            prendas[2] = PlayerInfo[playerid][pObj3];
            prendas[3] = PlayerInfo[playerid][pObj4];
            PlayerTextDrawSetPreviewModel(playerid,UsarPrendaO[playerid][0], prendas[0]);
            PlayerTextDrawSetPreviewModel(playerid,UsarPrendaO[playerid][1], prendas[1]);
            PlayerTextDrawSetPreviewModel(playerid,UsarPrendaO[playerid][2], prendas[2]);
            PlayerTextDrawSetPreviewModel(playerid,UsarPrendaO[playerid][3], prendas[3]);
            TextDrawShowForPlayer(playerid,CuadroPrendasLargo);
            TextDrawShowForPlayer(playerid,CerrarPrenda);
            TextDrawShowForPlayer(playerid,TextoPrendas);
            PlayerTextDrawShow(playerid,UsarPrendaO[playerid][0]);
            PlayerTextDrawShow(playerid,UsarPrendaO[playerid][1]);
            PlayerTextDrawShow(playerid,UsarPrendaO[playerid][2]);
            PlayerTextDrawShow(playerid,UsarPrendaO[playerid][3]);
            retornaprendas[playerid] = 1;
    		SelectTextDraw(playerid,0x272828FF);
            return 1;
		}
	}
	return 1;
}
CMD:comprar(playerid, params[])
{
	new item[128],day,month,year,idjugador;
	getdate(day,month,year);
	if(IsPlayerConnected(playerid))
	if(!sscanf(params, "s[128]", item))
 	{
		if(strcmp(item,"entrada",true) == 0)
		{
	    	if(IsPlayerInRangeOfPoint(playerid,4.5,-1253.2917,2116.7095,1246.5457))
	    	{
	        	if(Alquilado == false) return SendClientMessage(playerid,-1,"No hay un evento en este momento.");
	        	{
	            	if(PlayerInfo[playerid][@Nivel] <= NivelSalon) return SendClientMessage(playerid,-1,"No tienes el nivel necesario para entrar al salón.");
	            	{
	            		if(Boleto[playerid] == true) return SendClientMessage(playerid,-1,"Ya tienes una entrada.");
            			{
	            	    	if(PlayerInfo[playerid][jDinero] < PrecioSalon) return SendClientMessage(playerid,-1,"No tienes suficiente dinero para comprar una entrada."); //Cambiar GetPlayerMoney
	                    	Boleto[playerid] = true;
	                    	SendClientMessage(playerid,-1,"Compraste una entrada.");
	                    	QuitarDinero(playerid,PrecioSalon);
	                    	Personas ++;
	            		}
	            	}
	        	}
	    	}
	    	else if(IsPlayerInRangeOfPoint(playerid,7,1101.2697,1613.1414,12.5469))
	    	{
	    	    if(HabilitarCarreras == 0) return SendClientMessage(playerid,-1,"La boletería está cerrada.");
	    	    if(EntradaCarrera[playerid] == true) return SendClientMessage(playerid,-1,"Ya tienes una entrada.");
	    	    if(PlayerInfo[playerid][jDinero] < 600) return SendClientMessage(playerid,-1,"Necesitas {00CC00}$600{FFFFFF} parar comprar una entrada.");
	    	    QuitarDinero(playerid,600);
	    	    EntradaCarrera[playerid] = true;
	    	    SendClientMessage(playerid,-1,"{00CC00}Compraste una entrada{FFFFFF}, ya puedes ingresar al estadio.");
				return 1;
	    	}
			else SendClientMessage(playerid,-1,"Las entradas se compran en la boletería.");
		}
		else if(strcmp(item, "objetos",true)==0)
	    {
	    	if(IsPlayerInRangeOfPoint(playerid,5.0,196.3872,-231.1294,1.7786))
	        {
	        	new string[250];
	            format(string, 250, "{FFFFFF}Guitarra - {00CC00}$4600{FFFFFF}\n{FFFFFF}Tabla de Surf T1 - {00CC00}$2400{FFFFFF}\n{FFFFFF}Maletin - {00CC00}$4800{FFFFFF}\n{FFFFFF}Tabla de Surf T2 - {00CC00}$2400{FFFFFF}\n{FFFFFF}Bajo (Instrumento Musical) - {00CC00}$4200");
	            ShowPlayerDialog(playerid,CCCOBJETOS, DIALOG_STYLE_LIST,"Listado de Objetos En Venta",string,"Comprar","Cancelar");
          	}
	        else SendClientMessage(playerid, -1, "Tienes que ir a un negocio donde puedas {DBED15}/comprar objetos{FFFFFF}.");
      	}
		else if(strcmp(item,"semillas",true) == 0)
		{
	    	if(IsPlayerInRangeOfPoint(playerid,3.0,-1072.1710,-1202.1224,129.2188))
	    	{
                if(PlayerInfo[playerid][jDinero] < 1500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($1500)");
                PlayerInfo[playerid][pSemillas] += 50;
				QuitarDinero(playerid, 1500);
				SendClientMessage(playerid, -1, "Compraste 50 semillas de marihuana, ahora puedes {DBED15}/sembrar{FFFFFF}.");
				return 1;
	    	}
	    	else if(IsPlayerInRangeOfPoint(playerid,3.0,-1103.5033,-1620.6311,76.3672))
	    	{
	    	    if(PlayerInfo[playerid][jDinero] < 1500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($1500)");
                PlayerInfo[playerid][pSemillas] += 50;
				QuitarDinero(playerid, 1500);
 			    SendClientMessage(playerid, -1, "Compraste 50 semillas de marihuana, ahora puedes {DBED15}/sembrar{FFFFFF}.");
				return 1;
	    	}
		}
		else if(strcmp(item,"caja",true) == 0)
		{
	    	if(IsPlayerInRangeOfPoint(playerid,3.0,93.7855,-305.2337,1.5781))
	    	{
	    	    if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya tienes un objeto en tu inventario.");
                if(PlayerInfo[playerid][jDinero] < 40) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($1560)");
	            SetPlayerAttachedObject(playerid, 2, 2969, 6, 0.137999,0.039999,-0.168998,66.699996,-162.999877,-95.900085,0.533998,0.622999,0.756998);
				Objeto[playerid] = 10000;
				QuitarDinero(playerid, 1560);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
				SendClientMessage(playerid, -1, "Compraste una caja de aquarius de 12 unidades por {00CC00}$1560{FFFFFF}.");
				SendClientMessage(playerid, -1, "Puedes guardarla usando {DBED16}/baul guardar objeto{FFFFFF} o tirarla con {DBED16}/tirar objeto{FFFFFF}.");
				return 1;
	    	}
	    	else if(IsPlayerInRangeOfPoint(playerid,3.0,93.7853,-309.5841,1.5781))
	    	{
	    	    if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya tienes un objeto en tu inventario.");
                if(PlayerInfo[playerid][jDinero] < 40) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($600)");
	            SetPlayerAttachedObject(playerid, 2, 2969, 6, 0.137999,0.039999,-0.168998,66.699996,-162.999877,-95.900085,0.533998,0.622999,0.756998);
				Objeto[playerid] = 10001;
				QuitarDinero(playerid, 600);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
				SendClientMessage(playerid, -1, "Compraste una caja de vino de 12 unidades por {00CC00}$600{FFFFFF}.");
				SendClientMessage(playerid, -1, "Puedes guardarla usando {DBED16}/baul guardar objeto{FFFFFF} o tirarla con {DBED16}/tirar objeto{FFFFFF}.");
				return 1;
	    	}
	    	else if(IsPlayerInRangeOfPoint(playerid,3.0,93.7853,-313.7030,1.5781))
	    	{
	    	    if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya tienes un objeto en tu inventario.");
                if(PlayerInfo[playerid][jDinero] < 40) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($480)");
	            SetPlayerAttachedObject(playerid, 2, 2969, 6, 0.137999,0.039999,-0.168998,66.699996,-162.999877,-95.900085,0.533998,0.622999,0.756998);
				Objeto[playerid] = 10002;
				QuitarDinero(playerid, 480);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
				SendClientMessage(playerid, -1, "Compraste una caja de cerveza de 12 unidades por {00CC00}$480{FFFFFF}.");
				SendClientMessage(playerid, -1, "Puedes guardarla usando {DBED16}/baul guardar objeto{FFFFFF} o tirarla con {DBED16}/tirar objeto{FFFFFF}.");
				return 1;
	    	}
	    	else if(IsPlayerInRangeOfPoint(playerid,3.0,86.0509,-315.2853,1.8494))
	    	{
	    	    if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya tienes un objeto en tu inventario.");
                if(PlayerInfo[playerid][jDinero] < 40) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($480)");
	            SetPlayerAttachedObject(playerid, 2, 2969, 6, 0.137999,0.039999,-0.168998,66.699996,-162.999877,-95.900085,0.533998,0.622999,0.756998);
				Objeto[playerid] = 10003;
				QuitarDinero(playerid, 480);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
				SendClientMessage(playerid, -1, "Compraste una caja de sprunk de 12 unidades por {00CC00}$480{FFFFFF}.");
				SendClientMessage(playerid, -1, "Puedes guardarla usando {DBED16}/baul guardar objeto{FFFFFF} o tirarla con {DBED16}/tirar objeto{FFFFFF}.");
				return 1;
	    	}
		}
		else if(strcmp(item,"nivel",true)==0)
		{
			if(PlayerInfo[playerid][@Nivel] >= 1)
			{
				new infostring[128];
				if(PlayerInfo[playerid][jExperiencia] < PlayerInfo[playerid][NivelExp])
				{
					format(infostring, 128, "Necesitas {DBED16}%d{FFFFFF} puntos de experiencia para subir de nivel.",PlayerInfo[playerid][NivelExp]);
					return SendClientMessage(playerid, COLOR_WHITE, infostring);
				}
				else
				{
					if(PlayerInfo[playerid][jDinero] < PlayerInfo[playerid][PrecioNivel])
					{
						format(infostring,128,"Necesitas {00CC00}$%d{FFFFFF} para comprar este nivel.",PlayerInfo[playerid][PrecioNivel]);
						return SendClientMessage(playerid,-1,infostring);
					}
					SendClientMessage(playerid, 0xFFFF00FF,"Felicidades, aumentaste un nivel. Ahora tu pago diario será mayor.");
					PlayerInfo[playerid][@Nivel]++;
					SetPlayerScore(playerid, PlayerInfo[playerid][@Nivel]);
					PlayerInfo[playerid][jExperiencia] = 1;
					QuitarDinero(playerid, PlayerInfo[playerid][PrecioNivel]);
					CalcularNivel(playerid);
					SetPlayerProgressBarMaxValue(playerid,Progressbar[playerid][Experiencia], PlayerInfo[playerid][NivelExp]);
					SetPlayerProgressBarValue(playerid,Progressbar[playerid][Experiencia], PlayerInfo[playerid][jExperiencia]);
					UpdatePlayerProgressBar(playerid,Progressbar[playerid][Experiencia]);
					Actualizar(playerid);
                    SetPlayerStats(playerid);
                    RevisarLogroNivel(playerid);
					return 1;
				}
			}
			return 1;
		}
		else if(strcmp(item, "herramienta",true) == 0 || strcmp(item, "herramientas",true) == 0)
		{
			if(IsPlayerInRangeOfPoint(playerid,5.0,-1072.1169,354.2132,1180.5259))
			{
			    if(GetPlayerVirtualWorld(playerid) == 0 || GetPlayerVirtualWorld(playerid) == 1 || GetPlayerVirtualWorld(playerid) == 2 || GetPlayerVirtualWorld(playerid) == 3)    {
				new string[520];
				format(string, sizeof(string), "{FFFFFF}Martillo - {00CC00}$20{FFFFFF}\n{FFFFFF}Destornillador - {00CC00}$25{FFFFFF}\n{FFFFFF}Barreta - {00CC00}$60{FFFFFF}\n{FFFFFF}Balde - {00CC00}$120");
				ShowPlayerDialog(playerid,HERRAMIENTAS, DIALOG_STYLE_LIST,"Herramientas",string,"Comprar","Cancelar");
				return 1;	}
			}
			else SendClientMessage(playerid,-1,"Solo se pueden {DBED16}/comprar herramientas{FFFFFF} en las ferreterías.");
			return 1;
		}
		else if(strcmp(item, "licencia",true)==0)
		{
			if(IsPlayerInRangeOfPoint(playerid,2.0,1163.9730,-2.7876,1020.6459))
			{
				ShowPlayerDialog(playerid, COMPRARLICENCIA, DIALOG_STYLE_MSGBOX, "Licencia de piloto", "El costo de la licencia de piloto es de 20"SERVER_COIN" y su vigencia es de 2 meses.\n{AFAFAF}(( Si usan los helicopteros de forma indebida, se les quitará la licencia y no se les regresará el dinero invertido))", "Comprar","Cancelar");
				return 1;
			}
			else SendClientMessage(playerid,-1,"Para {DBED16}/comprar licencia{FFFFFF} necesitas ir a la escuela de aviación.");
			return 1;
		}
		else if(strcmp(item, "boleto",true)==0)
		{
			if(!IsAtTrenStation(playerid)) return SendClientMessage(playerid, -1, "No puedes comprar boletos en este lugar.");
			if(PlayerInfo[playerid][jDinero] < 100) return SendClientMessage(playerid, -1, "No tienes el dinero para comprar un boleto ({00CC00}100${FFFFFF}).");
			SendClientMessage(playerid, -1, "Gracias por comprar un boleto de tren, solo es valido para un viaje.");
			QuitarDinero(playerid,100);
			Boletos[playerid] = 1;
			return 1;
		}
		else if(strcmp(item, "sombrero",true)==0)
		{
			if(HallX == true) DarSombrero(playerid);
		}
		else if(strcmp(item, "sprunk",true)==0)
		{
			if(IsPlayerInRangeOfPoint(playerid,5.0,498.6868,-76.0385,998.7578) || IsPlayerInRangeOfPoint(playerid,5.0,-225.1540,1404.1327,27.7734))
			{
				if(PlayerInfo[playerid][jDinero] < 70) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($70)");
				TieneSprunk[playerid] = 1;
				QuitarDinero(playerid, 70);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
				SendClientMessage(playerid, -1, "Compraste una sprunk por {00CC00}$70{FFFFFF}.");
				SendClientMessage(playerid, -1, "Presiona {DBED16}BIR{FFFFFF} para beber o {DBED16}INTRO{FFFFFF} para dejar de beber.");
				return 1;
			}
			if(
				IsPlayerInRangeOfPoint(playerid,5.0,-19.4871,-180.4452,1007.7656) ||
				IsPlayerInRangeOfPoint(playerid,5.0,-404.43790, -1433.28833, 25.81980) || //COSECHA VER
				IsPlayerInRangeOfPoint(playerid,5.0,-392.41141, 2244.42090, 42.52640) || //MINERO
				IsPlayerInRangeOfPoint(playerid,5.0,172.1788,1431.5389,10.5912)
			)
			{
				if(PlayerInfo[playerid][jDinero] < 65) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($65)");
				TieneSprunk[playerid] = 1;
				QuitarDinero(playerid, 65);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
				SendClientMessage(playerid, -1, "Compraste una sprunk por {00CC00}$65{FFFFFF}.");
				SendClientMessage(playerid, -1, "Presiona {DBED16}BIR{FFFFFF} para beber o {DBED16}INTRO{FFFFFF} para dejar de beber.");
				return 1;
			}
		}
		else if(strcmp(item, "vino",true)==0)
		{
			if(IsPlayerInRangeOfPoint(playerid,5.0,498.6868,-76.0385,998.7578) || IsPlayerInRangeOfPoint(playerid,5.0,-225.1540,1404.1327,27.7734))
			{
				if(PlayerInfo[playerid][jDinero] < 60) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente ($60)");
				QuitarDinero(playerid, 60);
				TieneVino[playerid] = 1;
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
				SendClientMessage(playerid, -1, "Compraste un vino por {00CC00}$60{FFFFFF}.");
				SendClientMessage(playerid, -1, "Presiona {DBED16}BIR{FFFFFF} para beber o {DBED16}INTRO{FFFFFF} para dejar de beber.");
				return 1;
			}
		}
		else if(strcmp(item, "cerveza",true)==0)
		{
		    if(EstaCerveza(playerid))
			{
				if(EventoActivo == false) return 1;
				if(PlayerInfo[playerid][jDinero] < 10) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
				QuitarDinero(playerid, 10);
				AccionesRol(playerid,"compró una botella de cerveza.", 20);
				SendClientMessage(playerid, -1, "Presiona {DBED15}'Y'{FFFFFF} para beber.");
				RevisarLogroCerveza(playerid);
				TieneCerveza[playerid] = 1;
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
   			}
			if(IsPlayerInRangeOfPoint(playerid,5.0,498.6868,-76.0385,998.7578) || IsPlayerInRangeOfPoint(playerid,5.0,-225.1540,1404.1327,27.7734))
			{
				if(PlayerInfo[playerid][jDinero] < 40) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
				QuitarDinero(playerid, 40);
				TieneCerveza[playerid] = 1;
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
				AccionesRol(playerid,"compró una botella de cerveza.", 20);
				SendClientMessage(playerid, -1, "Presiona {DBED15}'Y'{FFFFFF} para beber.");
				return 1;
			}
		}
		else if(strcmp(item, "prenda",true)==0)
		{
			if(IsPlayerInRangeOfPoint(playerid,5.0,175.4841,-92.5689,1002.1417))
			{
			    for(new i = 0, ij = sizeof(cPrendas); i < ij; i++)
				{
        			TextDrawShowForPlayer(playerid, cPrendas[i]);
				}
				retornaprendas[playerid] = 1;
          		SelectTextDraw(playerid, 0xFFB92311);
          		ComprandoPrendas[playerid] = 1;
				return 1;
			}
		}
		else if(strcmp(item, "Bidon",true)==0)
		{
			if(!EnGasolinera(playerid)) return SendClientMessage(playerid, -1, "El bidón de combustible se vende en las estaciones de servicio.");
			if(Bidon[playerid] == 1) return SendClientMessage(playerid, -1, "Tu ya tienes un bidon de gasolina.");
			if(PlayerInfo[playerid][jDinero] < 65) return SendClientMessage(playerid, -1, "No tienes el dinero suficiente para comprar un bidon ($65).");
			{
				QuitarDinero(playerid, 65);
				SetPlayerAttachedObject(playerid,2,1650,5,0.125999,0.011999,0.000000,-4.999999,-98.099983,16.600004,1.000000,1.000000,1.000000);
				Bidon[playerid] = 1;
				SendClientMessage(playerid, -1,"Compraste un bidón con 5 litros de combustible por {00CC00}$65{FFFFFF}. Para usarlo ingresa {DBED16}/cargar tanque");
				return 1;
			}
		}
		else if(strcmp(item,	"vehiculo", true) == 0)
		{
		    if(!IsPlayerInAnyVehicle(playerid)) return 1;
			new carid = GetPlayerVehicleID(playerid);
			if(VehiculosInfo[carid][vcomprable] != 1) return 1;

            new CountVeh = 0;
			if(PlayerInfo[playerid][vModelo] != 0) CountVeh ++;
			if(PlayerInfo[playerid][vModelo2] != 0) CountVeh ++;
			if(PlayerInfo[playerid][vModelo3] != 0) CountVeh ++;
			if(PlayerInfo[playerid][vModelo4] != 0) CountVeh ++;

			if(CountVeh > 1 && PlayerInfo[playerid][pVip] == 0) return SendClientMessage(playerid, -1, "Las cuentas comunes solo pueden tener 2 vehículos.");
			if(CountVeh > 2 && PlayerInfo[playerid][pVip] == 1) return SendClientMessage(playerid, -1, "Las cuentas VIP1 solo pueden tener 3 vehículos.");
			if(CountVeh > 3 && PlayerInfo[playerid][pVip] == 2) return SendClientMessage(playerid, -1, "Las cuentas con membresía VIP solo pueden tener 4 vehículos.");

			new mensaje[10], kevin[5], value = random(999);
			randomString2(kevin, 4);
			format(mensaje, 10,"%s %d",kevin, value);
			switch(VehiculosInfo[carid][vmoneda])
			{
				case 0:
				{
					if(PlayerInfo[playerid][jDinero] >= VehiculosInfo[carid][vprecio])
					{
						new query[900],pName[50];
						GetPlayerName(playerid, pName, 50);
						if(PlayerInfo[playerid][vModelo] == 0)
						{
							format(query, 900, "INSERT INTO `p_vehicles` (Modelo,X,Y,Z,A,Color1,Color2,Vida,Precio,vMoneda,Propietario,Slot,Patente) VALUES ('%d','%f','%f','%f','%f','%d','%d','1000.0','%d','%d','%d','1','%s')", VehiculosInfo[carid][vmodelo],VehiculosInfo[carid][vx],VehiculosInfo[carid][vy],VehiculosInfo[carid][vz],VehiculosInfo[carid][va],VehiculosInfo[carid][vcolor1],VehiculosInfo[carid][vcolor2],VehiculosInfo[carid][vprecio],VehiculosInfo[carid][vmoneda], PlayerInfo[playerid][pID],mensaje);
                            mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
							QuitarDinero(playerid,VehiculosInfo[carid][vprecio]);
							PlayerInfo[playerid][vModelo] = VehiculosInfo[carid][vmodelo];
							PlayerInfo[playerid][vColor1] = VehiculosInfo[carid][vcolor1];
							PlayerInfo[playerid][vColor2] = VehiculosInfo[carid][vcolor2];
							PlayerInfo[playerid][vPrecio] = VehiculosInfo[carid][vprecio];
							PlayerInfo[playerid][vMonedaa] = VehiculosInfo[carid][vmoneda];
							PlayerInfo[playerid][vpatente] = mensaje;
							RemovePlayerFromVehicle(playerid);
							ConceCercano(playerid, VehiculosInfo[carid][vmodelo],VehiculosInfo[carid][vcolor1],VehiculosInfo[carid][vcolor2],1);
							SetTimerEx("EnviarAuto",1000,false,"d",playerid);
						}
						else if(PlayerInfo[playerid][vModelo] != 0 && PlayerInfo[playerid][vModelo2] == 0)
						{
							format(query, 900, "INSERT INTO `p_vehicles` (Modelo,X,Y,Z,A,Color1,Color2,Vida,Precio,vMoneda,Propietario,Slot,Patente) VALUES ('%d','%f','%f','%f','%f','%d','%d','1000.0','%d','%d','%d','2','%s')", VehiculosInfo[carid][vmodelo],VehiculosInfo[carid][vx],VehiculosInfo[carid][vy],VehiculosInfo[carid][vz],VehiculosInfo[carid][va],VehiculosInfo[carid][vcolor1],VehiculosInfo[carid][vcolor2],VehiculosInfo[carid][vprecio],VehiculosInfo[carid][vmoneda], PlayerInfo[playerid][pID],mensaje);
                            mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
							QuitarDinero(playerid,VehiculosInfo[carid][vprecio]);
							PlayerInfo[playerid][vModelo2] = VehiculosInfo[carid][vmodelo];
							PlayerInfo[playerid][v2Color1] = VehiculosInfo[carid][vcolor1];
							PlayerInfo[playerid][v2Color2] = VehiculosInfo[carid][vcolor2];
							PlayerInfo[playerid][v2Precio] = VehiculosInfo[carid][vprecio];
							PlayerInfo[playerid][v2Monedaa] = VehiculosInfo[carid][vmoneda];
							PlayerInfo[playerid][v2patente] = mensaje;
							RemovePlayerFromVehicle(playerid);
							ConceCercano(playerid, VehiculosInfo[carid][vmodelo],VehiculosInfo[carid][vcolor1],VehiculosInfo[carid][vcolor2],2);
							SetTimerEx("EnviarAuto2",1000,false,"d",playerid);
						}
						else if(PlayerInfo[playerid][vModelo] != 0 && PlayerInfo[playerid][vModelo2] != 0 && PlayerInfo[playerid][vModelo3] == 0)
						{
							format(query, 900, "INSERT INTO `p_vehicles` (Modelo,X,Y,Z,A,Color1,Color2,Vida,Precio,vMoneda,Propietario,Slot,Patente) VALUES ('%d','%f','%f','%f','%f','%d','%d','1000.0','%d','%d','%d','3','%s')", VehiculosInfo[carid][vmodelo],VehiculosInfo[carid][vx],VehiculosInfo[carid][vy],VehiculosInfo[carid][vz],VehiculosInfo[carid][va],VehiculosInfo[carid][vcolor1],VehiculosInfo[carid][vcolor2],VehiculosInfo[carid][vprecio],VehiculosInfo[carid][vmoneda], PlayerInfo[playerid][pID],mensaje);
                            mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
							QuitarDinero(playerid,VehiculosInfo[carid][vprecio]);
							PlayerInfo[playerid][vModelo3] = VehiculosInfo[carid][vmodelo];
							PlayerInfo[playerid][v3Color1] = VehiculosInfo[carid][vcolor1];
							PlayerInfo[playerid][v3Color2] = VehiculosInfo[carid][vcolor2];
							PlayerInfo[playerid][v3Precio] = VehiculosInfo[carid][vprecio];
							PlayerInfo[playerid][v3Monedaa] = VehiculosInfo[carid][vmoneda];
							PlayerInfo[playerid][v3patente] = mensaje;
							RemovePlayerFromVehicle(playerid);
							ConceCercano(playerid, VehiculosInfo[carid][vmodelo],VehiculosInfo[carid][vcolor1],VehiculosInfo[carid][vcolor2],3);
							SetTimerEx("EnviarAuto3",1000,false,"d",playerid);
						}
						else if(PlayerInfo[playerid][vModelo] != 0 && PlayerInfo[playerid][vModelo2] != 0 && PlayerInfo[playerid][vModelo3] != 0 && PlayerInfo[playerid][vModelo4] == 0)
						{
							format(query, 900, "INSERT INTO `p_vehicles` (Modelo,X,Y,Z,A,Color1,Color2,Vida,Precio,vMoneda,Propietario,Slot,Patente) VALUES ('%d','%f','%f','%f','%f','%d','%d','1000.0','%d','%d','%d','4','%s')", VehiculosInfo[carid][vmodelo],VehiculosInfo[carid][vx],VehiculosInfo[carid][vy],VehiculosInfo[carid][vz],VehiculosInfo[carid][va],VehiculosInfo[carid][vcolor1],VehiculosInfo[carid][vcolor2],VehiculosInfo[carid][vprecio],VehiculosInfo[carid][vmoneda], PlayerInfo[playerid][pID],mensaje);
                            mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
							QuitarDinero(playerid,VehiculosInfo[carid][vprecio]);
							PlayerInfo[playerid][vModelo4] = VehiculosInfo[carid][vmodelo];
							PlayerInfo[playerid][v4Color1] = VehiculosInfo[carid][vcolor1];
							PlayerInfo[playerid][v4Color2] = VehiculosInfo[carid][vcolor2];
							PlayerInfo[playerid][v4Precio] = VehiculosInfo[carid][vprecio];
							PlayerInfo[playerid][v4Monedaa] = VehiculosInfo[carid][vmoneda];
							PlayerInfo[playerid][v4patente] = mensaje;
							RemovePlayerFromVehicle(playerid);
							ConceCercano(playerid, VehiculosInfo[carid][vmodelo],VehiculosInfo[carid][vcolor1],VehiculosInfo[carid][vcolor2],4);
							SetTimerEx("EnviarAuto4",1000,false,"d",playerid);
						}
					}
					else
					{
					    new precio[128];
					    format(precio,sizeof(precio),"Necesitas {00CC00}$%d{FFFFFF} para comprar este vehículo.",VehiculosInfo[carid][vprecio]);
					    return SendClientMessage(playerid,-1,precio);
					}
				}
				case 1:
				{
					if(PlayerInfo[playerid][Moneda] >= VehiculosInfo[carid][vprecio])
					{
						new query[900],pName[50];
						GetPlayerName(playerid, pName, 50);
						if(PlayerInfo[playerid][vModelo] == 0)
						{
             				format(query, 900, "INSERT INTO `p_vehicles` (Modelo,X,Y,Z,A,Color1,Color2,Vida,Precio,vMoneda,Propietario,Slot,Patente) VALUES ('%d','%f','%f','%f','%f','%d','%d','1000.0','%d','%d','%d','1','%s')", VehiculosInfo[carid][vmodelo],VehiculosInfo[carid][vx],VehiculosInfo[carid][vy],VehiculosInfo[carid][vz],VehiculosInfo[carid][va],VehiculosInfo[carid][vcolor1],VehiculosInfo[carid][vcolor2],VehiculosInfo[carid][vprecio],VehiculosInfo[carid][vmoneda], PlayerInfo[playerid][pID],mensaje);
							mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
							PlayerInfo[playerid][Moneda] -= VehiculosInfo[carid][vprecio];
							PlayerInfo[playerid][vModelo] = VehiculosInfo[carid][vmodelo];
							PlayerInfo[playerid][vColor1] = VehiculosInfo[carid][vcolor1];
							PlayerInfo[playerid][vColor2] = VehiculosInfo[carid][vcolor2];
							PlayerInfo[playerid][vPrecio] = VehiculosInfo[carid][vprecio];
							PlayerInfo[playerid][vMonedaa] = VehiculosInfo[carid][vmoneda];
							PlayerInfo[playerid][vpatente] = mensaje;
							RemovePlayerFromVehicle(playerid);
							ConceCercano(playerid, VehiculosInfo[carid][vmodelo],VehiculosInfo[carid][vcolor1],VehiculosInfo[carid][vcolor2],1);
							SetTimerEx("EnviarAuto",1000,false,"d",playerid);
						}
						else if(PlayerInfo[playerid][vModelo] != 0 && PlayerInfo[playerid][vModelo2] == 0)
						{
							format(query, 900, "INSERT INTO `p_vehicles` (Modelo,X,Y,Z,A,Color1,Color2,Vida,Precio,vMoneda,Propietario,Slot,Patente) VALUES ('%d','%f','%f','%f','%f','%d','%d','1000.0','%d','%d','%d','2','%s')", VehiculosInfo[carid][vmodelo],VehiculosInfo[carid][vx],VehiculosInfo[carid][vy],VehiculosInfo[carid][vz],VehiculosInfo[carid][va],VehiculosInfo[carid][vcolor1],VehiculosInfo[carid][vcolor2],VehiculosInfo[carid][vprecio],VehiculosInfo[carid][vmoneda], PlayerInfo[playerid][pID],mensaje);
							mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
							PlayerInfo[playerid][Moneda] -= VehiculosInfo[carid][vprecio];
							PlayerInfo[playerid][vModelo2] = VehiculosInfo[carid][vmodelo];
							PlayerInfo[playerid][v2Color1] = VehiculosInfo[carid][vcolor1];
							PlayerInfo[playerid][v2Color2] = VehiculosInfo[carid][vcolor2];
							PlayerInfo[playerid][v2Precio] = VehiculosInfo[carid][vprecio];
							PlayerInfo[playerid][v2Monedaa] = VehiculosInfo[carid][vmoneda];
							PlayerInfo[playerid][v2patente] = mensaje;
							RemovePlayerFromVehicle(playerid);
							ConceCercano(playerid, VehiculosInfo[carid][vmodelo],VehiculosInfo[carid][vcolor1],VehiculosInfo[carid][vcolor2],2);
							SetTimerEx("EnviarAuto2",1000,false,"d",playerid);
						}
						else if(PlayerInfo[playerid][vModelo] != 0 && PlayerInfo[playerid][vModelo2] != 0 && PlayerInfo[playerid][vModelo3] == 0)
						{
							format(query, 900, "INSERT INTO `p_vehicles` (Modelo,X,Y,Z,A,Color1,Color2,Vida,Precio,vMoneda,Propietario,Slot,Patente) VALUES ('%d','%f','%f','%f','%f','%d','%d','1000.0','%d','%d','%d','3','%s')", VehiculosInfo[carid][vmodelo],VehiculosInfo[carid][vx],VehiculosInfo[carid][vy],VehiculosInfo[carid][vz],VehiculosInfo[carid][va],VehiculosInfo[carid][vcolor1],VehiculosInfo[carid][vcolor2],VehiculosInfo[carid][vprecio],VehiculosInfo[carid][vmoneda], PlayerInfo[playerid][pID],mensaje);
							mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
							PlayerInfo[playerid][Moneda] -= VehiculosInfo[carid][vprecio];
							PlayerInfo[playerid][vModelo3] = VehiculosInfo[carid][vmodelo];
							PlayerInfo[playerid][v3Color1] = VehiculosInfo[carid][vcolor1];
							PlayerInfo[playerid][v3Color2] = VehiculosInfo[carid][vcolor2];
							PlayerInfo[playerid][v3Precio] = VehiculosInfo[carid][vprecio];
							PlayerInfo[playerid][v3Monedaa] = VehiculosInfo[carid][vmoneda];
							PlayerInfo[playerid][v3patente] = mensaje;
							RemovePlayerFromVehicle(playerid);
							ConceCercano(playerid, VehiculosInfo[carid][vmodelo],VehiculosInfo[carid][vcolor1],VehiculosInfo[carid][vcolor2],3);
							SetTimerEx("EnviarAuto3",1000,false,"d",playerid);
						}
						else if(PlayerInfo[playerid][vModelo] != 0 && PlayerInfo[playerid][vModelo2] != 0 && PlayerInfo[playerid][vModelo3] != 0 && PlayerInfo[playerid][vModelo4] == 0)
						{
							format(query, 900, "INSERT INTO `p_vehicles` (Modelo,X,Y,Z,A,Color1,Color2,Vida,Precio,vMoneda,Propietario,Slot,Patente) VALUES ('%d','%f','%f','%f','%f','%d','%d','1000.0','%d','%d','%d','4','%s')", VehiculosInfo[carid][vmodelo],VehiculosInfo[carid][vx],VehiculosInfo[carid][vy],VehiculosInfo[carid][vz],VehiculosInfo[carid][va],VehiculosInfo[carid][vcolor1],VehiculosInfo[carid][vcolor2],VehiculosInfo[carid][vprecio],VehiculosInfo[carid][vmoneda], PlayerInfo[playerid][pID],mensaje);
							mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
							PlayerInfo[playerid][Moneda] -= VehiculosInfo[carid][vprecio];
							PlayerInfo[playerid][vModelo4] = VehiculosInfo[carid][vmodelo];
							PlayerInfo[playerid][v4Color1] = VehiculosInfo[carid][vcolor1];
							PlayerInfo[playerid][v4Color2] = VehiculosInfo[carid][vcolor2];
							PlayerInfo[playerid][v4Precio] = VehiculosInfo[carid][vprecio];
							PlayerInfo[playerid][v4Monedaa] = VehiculosInfo[carid][vmoneda];
							PlayerInfo[playerid][v4patente] = mensaje;
							RemovePlayerFromVehicle(playerid);
							ConceCercano(playerid, VehiculosInfo[carid][vmodelo],VehiculosInfo[carid][vcolor1],VehiculosInfo[carid][vcolor2],4);
							SetTimerEx("EnviarAuto4",1000,false,"d",playerid);
						}
					}
					else
					{
					    new precio[128];
					    format(precio,sizeof(precio),"Necesitas {00CC00}%d "SERVER_COIN"{FFFFFF} para comprar este vehículo.",VehiculosInfo[carid][vprecio]);
					    return SendClientMessage(playerid,-1,precio);
					}
				}
			}
		}
		else if(strcmp(item,"propiedad", true) == 0)
		{
   	        for(new c = 0; c <MAX_PROPIEDADES; c++)
	        {
         		if(IsPlayerInRangeOfPoint(playerid,1.5,PropInfo[c][pPosX],PropInfo[c][pPosY],PropInfo[c][pPosZ]))
         		{
         		    if(PropInfo[c][pEnVenta] == 1)
         		    {
         		        new query[580];
         		        if(PropInfo[c][pEnVentaPor] == 0)
         		        {
         		            if(PropInfo[c][pPrecio] <= PlayerInfo[playerid][jDinero])
         		            {
         		                if(PlayerInfo[playerid][@Nivel] < PropInfo[c][pNivel]) return SendClientMessage(playerid,-1,"No tienes el nivel necesario para comprar esta propiedad.");
								if(PlayerInfo[playerid][CasaID] == 0)
								{
									PlayerInfo[playerid][CasaID] = PropInfo[c][pID];
									format(query,sizeof(query),"UPDATE `usuarios` SET `CasaID`='%d' WHERE `Username`='%s'",PropInfo[c][pID],PlayerName(playerid));
									mysql_function_query(Conecction,query,true,"","");
								}
								else if(PlayerInfo[playerid][CasaID2] == 0)
								{
								    if(PlayerInfo[playerid][pVip] == 2)
								    {
										PlayerInfo[playerid][CasaID2] = PropInfo[c][pID];
										format(query,sizeof(query),"UPDATE `usuarios` SET `CasaID2`='%d' WHERE `Username`='%s'",PropInfo[c][pID],PlayerName(playerid));
										mysql_function_query(Conecction,query,true,"","");
									}
									else return SendClientMessage(playerid,-1,"Sólo los usuarios VIP pueden tener 2 propiedades.");
								}
								else return SendClientMessage(playerid,-1,"Sólo puedes tener 2 propiedades.");
         		                QuitarDinero(playerid,PropInfo[c][pPrecio]);
								PropInfo[c][pEnVenta] = 0;
         		        		format(PropInfo[c][pPropietario],40,"%s",PlayerName(playerid));
								BorrarLabelCasa(c);
								CargarPropiedad(c);
								format(query,sizeof(query),"UPDATE `propiedades` SET `EnVenta`='0', `Propietario`='%s',`IDPropietario`='%d' WHERE `ID`='%d'", PropInfo[c][pPropietario], PlayerInfo[playerid][pID], PropInfo[c][pID]);
								mysql_function_query(Conecction, query, true, "", "");
								SendClientMessage(playerid,-1,"{00CC00}Acabas de comprar la propiedad.");
								RevisarLogroPropiedad(playerid, PropInfo[c][pTipo]);
								PropInfo[c][pIDPropietario] = PlayerInfo[playerid][pID];
							}
							else SendClientMessage(playerid,-1,"No tienes el dinero suficiente.");
						}
         		        else if(PropInfo[c][pEnVentaPor] == 1)
         		        {
         		            if(PropInfo[c][pPrecio] <= PlayerInfo[playerid][Moneda])
         		            {
         		                if(PlayerInfo[playerid][@Nivel] < PropInfo[c][pNivel]) return SendClientMessage(playerid,-1,"No tienes el nivel necesario para comprar esta propiedad.");
								if(PlayerInfo[playerid][CasaID] == 0)
								{
									PlayerInfo[playerid][CasaID] = PropInfo[c][pID];
									format(query,sizeof(query),"UPDATE `usuarios` SET `CasaID`='%d' WHERE `Username`='%s'",PropInfo[c][pID],PlayerName(playerid));
									mysql_function_query(Conecction,query,true,"","");
								}
								else if(PlayerInfo[playerid][CasaID2] == 0)
								{
								    if(PlayerInfo[playerid][pVip] == 2)
								    {
										PlayerInfo[playerid][CasaID2] = PropInfo[c][pID];
										format(query,sizeof(query),"UPDATE `usuarios` SET `CasaID2`='%d' WHERE `Username`='%s'",PropInfo[c][pID],PlayerName(playerid));
										mysql_function_query(Conecction,query,true,"","");
									}
									else return SendClientMessage(playerid,-1,"Sólo los usuarios VIP pueden tener 2 propiedades.");
								}
								else return SendClientMessage(playerid,-1,"Sólo puedes tener 2 propiedades.");
         		                PlayerInfo[playerid][Moneda] -= PropInfo[c][pPrecio];
         		        		PropInfo[c][pEnVenta] = 0;
         		        		format(PropInfo[c][pPropietario],40,"%s",PlayerName(playerid));
                                BorrarLabelCasa(c);
								CargarPropiedad(c);
								format(query,sizeof(query),"UPDATE `propiedades` SET `EnVenta`='0', `Propietario`='%s',`IDPropietario`='%d' WHERE `ID`='%d'", PropInfo[c][pPropietario], PlayerInfo[playerid][pID], PropInfo[c][pID]);
								mysql_function_query(Conecction, query, true, "", "");
								SendClientMessage(playerid,-1,"{00CC00}Acabas de comprar la propiedad.");
								RevisarLogroPropiedad(playerid, PropInfo[c][pTipo]);
								PropInfo[c][pIDPropietario] = PlayerInfo[playerid][pID];
							}
							else SendClientMessage(playerid,-1,"No tienes los "SERVER_COIN" suficientes.");
						}
         		    }
         		}
 			}
 			Loop(f,MAX_FABRICAS)
		    {
	  			if(IsPlayerInRangeOfPoint(playerid,1.5,Fabricas[f][pEntradaX],Fabricas[f][pEntradaY],Fabricas[f][pEntradaZ]))
			    {
			        if(Fabricas[f][pEnUso] == 1)
			        {
			            if(PlayerInfo[playerid][pFaccion] <= 3) return SendClientMessage(playerid,-1,"{3399FF}Bandas civiles{FFFFFF} no pueden adquirir {EB0000}fábricas de metanfetamina{FFFFFF}.");
						if(TieneFabrica(PlayerInfo[playerid][pFaccion])) return SendClientMessage(playerid,-1,"Tu banda ya controla una {3399FF}fábrica de metanfetaminas{FFFFFF}.");
						if(PlayerInfo[playerid][pRango] == 8)
						{
		              		if(PlayerInfo[playerid][pBanco] >= Fabricas[f][pValor])
							{
				    	      	new query[500];
								format(query,sizeof(query),"UPDATE `fabricas` SET `BandaID`='%d' WHERE `ID`='%d'",PlayerInfo[playerid][pFaccion],Fabricas[f][pID]);
								mysql_function_query(Conecction,query,true,"","");
								PlayerInfo[playerid][pBanco] -= Fabricas[f][pValor];
								Fabricas[f][pBanda] = PlayerInfo[playerid][pFaccion];
								Fabricas[f][pSoborno] = 1;
								Fabricas[f][pEnVenta] = 0;
								BorrarPuntosFabrica(f);
								CargarFabricass(f);
								format(query,sizeof(query),"UPDATE `fabricas` SET `EnVenta`='0', `EnUso`='1' WHERE `ID`='%d'",Fabricas[f][pID]);
								mysql_function_query(Conecction, query, true, "", "");
								SendClientMessage(playerid,-1,"Tu banda ahora controla una {3399FF}fábrica de metanfetamina{FFFFFF}.");
								DarDineroFabrica(f,3000000);
								return 1;
							}
							else
							{
								new textoplano[128];
								format(textoplano,sizeof(textoplano),"Necesitas tener {00CC00}%s{FFFFFF} en tu cuenta bancaria.",Numeros(Fabricas[f][pValor]));
								SendClientMessage(playerid,-1,textoplano);
	                        }
			     		}
			     		return 1;
		     		}
			    }
		    }
 			return 1;
        }
 		else if(strcmp(item,"estacionamiento", true) == 0)
		{
	        for(new c = 0; c <MAX_PROPIEDADES; c++)
	        {
         		if(IsPlayerInRangeOfPoint(playerid,1.5,EstaInfo[c][pPosX],EstaInfo[c][pPosY],EstaInfo[c][pPosZ]))
         		{
         		    if(EstaInfo[c][pEnVenta] == 0)
         		    {
         		        new Nivel = EstaInfo[c][pNivel];
         		        new Dinero = EstaInfo[c][pPrecio];
         		        new query[580];
         		        if(EstaInfo[c][pEnVentaPor] == 0)
         		        {
         		            if(EstaInfo[c][pPrecio] <= PlayerInfo[playerid][pBanco])
         		            {
         		                if(PlayerInfo[playerid][@Nivel] < EstaInfo[c][pNivel]) return SendClientMessage(playerid,-1,"No tienes el nivel necesario para comprar esta propiedad.");
								if(PlayerInfo[playerid][EstacionamientoID] == 0)
								{
									PlayerInfo[playerid][EstacionamientoID] = EstaInfo[c][pID];
									format(query,sizeof(query),"UPDATE `usuarios` SET `EstacionamientoID`='%d' WHERE `Username`='%s'",EstaInfo[c][pID],PlayerName(playerid));
									mysql_function_query(Conecction,query,true,"","");
								}
								else return SendClientMessage(playerid,-1,"Solo puedes tener un estacionamiento.");
								PlayerInfo[playerid][pBanco] -= Dinero;
								EstaInfo[c][pEnVenta] = 0;
								EstaInfo[c][pNivel] = Nivel+1;
								EstaInfo[c][pPrecio] = Dinero+25000;
								PlayerInfo[playerid][vEstacionado3] = 0;
         		        		format(EstaInfo[c][pPropietario],40,"%s",PlayerName(playerid));
								BorrarLabelEstacionamiento(c);
								CargarEstacionamiento(c);
								format(query,sizeof(query),"UPDATE `garages` SET `EnVenta`='0', `Propietario`='%s',`IDPropietario`='%d', `Nivel`='%d', `Precio`='%d' WHERE `ID`='%d'", EstaInfo[c][pPropietario], PlayerInfo[playerid][pID], EstaInfo[c][pNivel], EstaInfo[c][pPrecio], EstaInfo[c][pID]);
								mysql_function_query(Conecction, query, true, "", "");
								SendClientMessage(playerid,-1,"{00CC00}¡Felicitaciones! {FFFFFF}Compraste el estacionamiento. Para más información visita nuestro foro.");
								EstaInfo[c][pIDPropietario] = PlayerInfo[playerid][pID];
							}
							else SendClientMessage(playerid,-1,"No tienes suficiente dinero en el banco para comprar este estacionamiento.");
						}
         		    }
         		}
	        }
		}
		else if(strcmp(item,"repuestos", true) == 0)
		{
			if(PlayerInfo[playerid][pTrabajo] != T_Mecanico && PlayerInfo[playerid][pTrabajo2] != T_Mecanico) return SendClientMessage(playerid,-1,"Para {DBED16}/comprar repuestos{FFFFFF} necesitas ir al taller donde te dieron el empleo.");
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, 93.3250,-161.6600,2.5938)) return SendClientMessage(playerid,-1,"Para {DBED16}/comprar repuestos{FFFFFF} necesitas ir al taller donde te dieron el empleo.");
			{
				new string[256];
				format(string, 256,"Puedes tener un maximo de 100 repuestos\nColoca la cantidad de repuestos que deseas comprar",string);
				ShowPlayerDialog(playerid, CREPUESTOS, DIALOG_STYLE_INPUT, "Comprar Repuestos", string, "Comprar", "Cancelar");
				return 1;
			}

		}
		else if(strcmp(item,"productos", true) == 0)
		{
			if(IsPlayerInRangeOfPoint(playerid, 7.0, -28.0060,-89.9514,1003.5469))  // 24/7
			{
				new str[344+1];
				format(str, sizeof(str), "%sTeléfono móvil ($1500)\nGuía telefónica ($35)\nTraba de seguridad para vehículos\nAlarma para vehículos.\nRadio comunicador ($2000)\nGPS ($1500)\nBebida par", str);
				format(str, sizeof(str), "%sa guardar en heladera: Cerveza x6 unidades ($470)\nBebida para guardar en heladera: Vino x6 unidades ($590)\nBebida para guardar en heladera: Sprunk x4 unidades ($200)\nBebida: Sprunk ($65)", str);
				ShowPlayerDialog(playerid, PRODUCTOS, DIALOG_STYLE_LIST, "{DBED16}Productos y servicios (24/7).", str, "Comprar", "Salir");
				return 1;
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, -784.2098,500.1945,1371.7422)) // Restaurante
			{
				ShowPlayerDialog(playerid, PRODUCTOS2, DIALOG_STYLE_TABLIST_HEADERS, "{DBED16}Lista de productos",
				"Producto\tPrecio\n\
				Cerveza\t{00CC00}$80{FFFFFF}\n\
				Vino\t{00CC00}$100{FFFFFF}\n\
				Vaso de sprunk\t{00CC00}$60{FFFFFF}\n\
				Aquarius\t{00CC00}$160{FFFFFF}",
				"Comprar", "Salir");
				return 1;
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 373.7276,-118.8039,1001.4922)) // Pizzeria
			{
				return ShowPlayerDialog(playerid, DIALOG_PIZZA, DIALOG_STYLE_TABLIST_HEADERS, "{DBED16}Lista de productos","Producto\tPrecio\nPorción de pizza\t{00CC00}$40{FFFFFF}\nPizza completa {232621}- (Para llevar)\t{00CC00}$300{FFFFFF}\nSprunk\t{00CC00}$70{FFFFFF}\nAquarius\t{00CC00}$170{FFFFFF}","Comprar", "Salir");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1214.8492,-13.3533,1000.9219) || IsPlayerInRangeOfPoint(playerid, 2.0, 969.3793,-44.8069,1001.1172) ||IsPlayerInRangeOfPoint(playerid, 2.0, 214.9070,-13.3532,1000.9219) ||IsPlayerInRangeOfPoint(playerid, 2.0, -1262.6428,2119.9490,1246.5457) || IsPlayerInRangeOfPoint(playerid, 2.0, -1396.3044,-320.4939,1052.0834) || IsPlayerInRangeOfPoint(playerid, 2.0, 499.9690,-20.6826,1000.6797)) // Salón de eventos
			{
				return ShowPlayerDialog(playerid, DIALOG_SALON, DIALOG_STYLE_TABLIST_HEADERS, "{DBED16}Lista de productos","Producto\tPrecio\nVino\t{00CC00}$110{FFFFFF}\nCerveza\t{00CC00}$80{FFFFFF}\nVaso de sprunk\t{00CC00}$70{FFFFFF}\nAquarius\t{00CC00}$170{FFFFFF}","Comprar", "Salir");
			}
			else SendClientMessage(playerid,-1,"Para {DBED16}/comprar productos{FFFFFF} necesitas estar dentro de un negocio.");
			return 1;
		}
		else if(strcmp(item,"juguetes", true) == 0)
		{
			if(EnSexShop(playerid))
			{
				new string[400];
				format(string, sizeof(string),"Vibrador blanco ({00CC00}$1000{FFFFFF})\n");
				format(string, sizeof(string),"%sVibrador plateado ({00CC00}$1200{FFFFFF})\n",string);
				format(string, sizeof(string),"%sGran vibrador blanco ({00CC00}$1600{FFFFFF})\nConsolador rosa ({00CC00}$2500{FFFFFF})",string);
				ShowPlayerDialog(playerid, JUGUETES, DIALOG_STYLE_LIST, "Juguetes eróticos", string, "Comprar", "Cancelar");
            }
			else SendClientMessage(playerid,-1,"Solo se puede {DBED16}/comprar juguetes{FFFFFF} en algunos negocios.");
			return 1;
		}
		else if(strcmp(item,"materiales", true) == 0)
		{
			if(PlayerInfo[playerid][pTrabajo] != T_Armero && PlayerInfo[playerid][pTrabajo2] != T_Armero) return SendClientMessage(playerid,-1,"Necesitas tener el trabajo de fabricante de armas para comprar materiales.");
			if(IsPlayerInRangeOfPoint(playerid, 5.0,1422.6765,-1319.3438,13.5547) && Mats1[playerid] == 0)
			{
				if(PlayerInfo[playerid][jDinero] < 2500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente");
				{
					PlayerInfo[playerid][piezas] += 50;
					QuitarDinero(playerid, 1250);
					SendClientMessage(playerid,-1,"Compraste {DBED16}50 materiales{FFFFFF} de armas por {00CC00}$1250{FFFFFF}.");
					SendClientMessage(playerid,-1,"Ahora dirígete a la fabrica (marcado en el mapa) para preparar las piezas.");
					PuntoMats[playerid] = SetPlayerCheckpoint(playerid,2160.7837,-2280.9233,13.3838, 5.0);
					Mats1[playerid] = 1;
					return 1;
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 5.0,2823.3486,-1420.3571,16.2562) && Mats2[playerid] == 0)
			{
				if(PlayerInfo[playerid][jDinero] < 2500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente");
				{
					PlayerInfo[playerid][piezas] += 50;
					QuitarDinero(playerid, 1250);
					SendClientMessage(playerid,-1,"Compraste {DBED16}50 materiales{FFFFFF} de armas por {00CC00}$1250{FFFFFF}.");
					SendClientMessage(playerid,-1,"Ahora dirígete a la fabrica (marcado en el mapa) para preparar las piezas.");
					PuntoMats[playerid] = SetPlayerCheckpoint(playerid,2160.7837,-2280.9233,13.3838, 5.0);
					Mats2[playerid] = 1;
					return 1;
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 5.0,-1735.7610,1244.9299,7.5469) && Mats3[playerid] == 0)
			{
				if(PlayerInfo[playerid][jDinero] < 7500) return SendClientMessage(playerid,-1,"No tienes el dinero suficiente");
				{
					PlayerInfo[playerid][piezas] += 250;
					QuitarDinero(playerid, 6250);
					SendClientMessage(playerid,-1,"Compraste {DBED16}250 materiales{FFFFFF} de armas por {00CC00}$6250{FFFFFF}.");
					SendClientMessage(playerid,-1,"Ahora dirígete a la fabrica (marcado en el mapa) para preparar las piezas.");
					PuntoMats[playerid] = SetPlayerCheckpoint(playerid,2160.7837,-2280.9233,13.3838, 5.0);
					Mats3[playerid] = 1;
					return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid,-1,"NIVELES: {DBED16}/comprar nivel");
			    SendClientMessage(playerid,-1,"VEHICULOS: {DBED16}/comprar vehiculo - /comprar repuestos");
			    SendClientMessage(playerid,-1,"PRODUCTOS: {DBED16}/comprar productos");
			    SendClientMessage(playerid,-1,"PROPIEDADES: {DBED16}/comprar estacionamiento - /comprar casa");
			    return 1;
			}
		}
	}
	if(!sscanf(params, "s[5]d", item, idjugador))
	{
	    new Fechas[3];
		getdate(Fechas[0], Fechas[1], Fechas[2]);
        if(strcmp(item,"EUXY", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,1,1550,1);   } }
        if(strcmp(item,"AREP", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,2,1650,1);   } }
        if(strcmp(item,"WESY", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,7,1670,1);   } }
        if(strcmp(item,"FERA", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,14,1655,1);  } }
        if(strcmp(item,"UHYU", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,15,1730,1);  } }
        if(strcmp(item,"BGAS", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,16,1320,1);  } }
        if(strcmp(item,"SFEW", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,17,2682,1);  } }
        if(strcmp(item,"GTYD", true) == 0) { if(!EnProLaps(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,18,1290,1);  } }
        if(strcmp(item,"BTYU", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,19,1200,1);  } }
        if(strcmp(item,"KILA", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,20,1700,1);  } }
        if(strcmp(item,"DYHG", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,21,1420,1);  } }
        if(strcmp(item,"BTYD", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,22,1350,1);  } }
        if(strcmp(item,"SXCE", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,23,1570,1);  } }
        if(strcmp(item,"ZAEF", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,24,1880,1);  } }
        if(strcmp(item,"VEYT", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,25,1895,1);  } }
        if(strcmp(item,"GHUS", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,26,1574,1);  } }
        if(strcmp(item,"YONR", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,27,1340,1);  } }
        if(strcmp(item,"BTRS", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,28,1450,1);  } }
        if(strcmp(item,"NTYD", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,29,1500,1);  } }
        if(strcmp(item,"MDSR", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,30,1272,1);  } }
        if(strcmp(item,"KTCW", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,32,1395,1);  } }
        if(strcmp(item,"AJRE", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,33,1680,1);  } }
        if(strcmp(item,"SMWA", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,34,1656,1);  } }
        if(strcmp(item,"PERM", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,35,1780,1);  } }
        if(strcmp(item,"SEOL", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,36,1800,1);  } }
        if(strcmp(item,"YOPA", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,37,1589,1);  } }
        if(strcmp(item,"DOSP", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,43,1654,1);  } }
        if(strcmp(item,"VISU", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,44,1330,1);  } }
        if(strcmp(item,"BUSI", true) == 0) { if(!EnProLaps(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,45,1220,1);  } }
        if(strcmp(item,"OISY", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,46,1745,1);  } }
        if(strcmp(item,"ASEQ", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,47,1440,1);  } }
        if(strcmp(item,"CTYD", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,48,1735,1);  } }
        if(strcmp(item,"BRYR", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,49,1770,1);  } }
        if(strcmp(item,"UYBC", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,50,1680,1);  } }
        if(strcmp(item,"BRDS", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,51,1500,1);  } }
        if(strcmp(item,"BRYR", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,52,1500,1);  } }
        if(strcmp(item,"QKIS", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,57,2880,1);  } }
        if(strcmp(item,"BARQ", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,58,1598,1);  } }
        if(strcmp(item,"FEAQ", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,59,1955,1);  } }
        if(strcmp(item,"CTHU", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,60,1632,1);  } }
        if(strcmp(item,"CKOS", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,61,2590,1);  } }
        if(strcmp(item,"CARK", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,62,1600,1);  } }
        if(strcmp(item,"FRTA", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,66,1581,1);  } }
        if(strcmp(item,"GTAW", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,67,1682,1);  } }
        if(strcmp(item,"TYRE", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,68,1700,1);  } }
        if(strcmp(item,"VHFF", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,70,1900,1);  } }
        if(strcmp(item,"VSWR", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,72,1750,1);  } }
        if(strcmp(item,"TWSS", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,73,1800,1);  } }
        if(strcmp(item,"BUHS", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,78,1170,1);  } }
        if(strcmp(item,"IWOS", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,79,1100,1);  } }
        if(strcmp(item,"AIWP", true) == 0) { if(!EnProLaps(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,80,1650,1);  } }
        if(strcmp(item,"WOSP", true) == 0) { if(!EnProLaps(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,81,1660,1);  } }
        if(strcmp(item,"PLSO", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,82,1900,1);  } }
        if(strcmp(item,"MONE", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,83,1920,1);  } }
        if(strcmp(item,"AYUS", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,84,1910,1);  } }
        if(strcmp(item,"KIQW", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,94,1500,1);  } }
        if(strcmp(item,"IJSF", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,95,1400,1);  } }
        if(strcmp(item,"SETA", true) == 0) { if(!EnProLaps(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,96,1650,1);  } }
        if(strcmp(item,"LYST", true) == 0) { if(!EnProLaps(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,97,1520,1);  } }
        if(strcmp(item,"QAJU", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,98,1900,1);  } }
        if(strcmp(item,"MJAF", true) == 0) { if(!EnProLaps(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,99,1540,1);  } }
        if(strcmp(item,"BOSK", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,100,1800,1); } }
        if(strcmp(item,"BOSS", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,101,1990,1); } }
        if(strcmp(item,"BBRS", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,128,1600,1); } }
        if(strcmp(item,"PARL", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,132,1500,1); } }
        if(strcmp(item,"NEPA", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,133,1600,1); } }
        if(strcmp(item,"YIMQ", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,134,1359,1); } }
		if(strcmp(item,"LSYG", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,135,1300,1); } }
        if(strcmp(item,"SKOI", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,136,1400,1); } }
        if(strcmp(item,"BNSI", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,137,1100,1); } }
        if(strcmp(item,"KDOK", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,142,1700,1); } }
        if(strcmp(item,"VUSW", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,143,1600,1); } }
        if(strcmp(item,"JSTI", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,144,1900,1); } }
        if(strcmp(item,"JSOG", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,146,2000,1); } }
        if(strcmp(item,"BUST", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,147,2700,1); } }
        if(strcmp(item,"FKSU", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,153,2800,1); } }
        if(strcmp(item,"MQNB", true) == 0) { if(!EnProLaps(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,154,1700,1); } }
        if(strcmp(item,"POSL", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,156,1600,1); } }
        if(strcmp(item,"PORF", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,158,1400,1); } }
        if(strcmp(item,"AQPO", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,159,1100,1); } }
        if(strcmp(item,"GSPL", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,160,1200,1); } }
        if(strcmp(item,"UFCS", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,161,1500,1); } }
		if(strcmp(item,"LSOS", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,162,1050,1); } }
        if(strcmp(item,"FRTN", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,163,3699,1); } }
        if(strcmp(item,"GRUS", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,164,3600,1); } }
        if(strcmp(item,"KMXU", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,165,3300,1); } }
        if(strcmp(item,"XCMS", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,166,3000,1); } }
        if(strcmp(item,"VSIG", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,168,1100,1); } }
        if(strcmp(item,"FKIS", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,170,1900,1); } }
        if(strcmp(item,"AYUQ", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,171,2600,1); } }
        if(strcmp(item,"KENU", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,176,1799,1); } }
        if(strcmp(item,"KFCP", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,177,1690,1); } }
        if(strcmp(item,"LAPO", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,179,2000,1); } }
        if(strcmp(item,"NFTY", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,180,1590,1); } }
        if(strcmp(item,"SPOF", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,181,1500,1); } }
        if(strcmp(item,"XAXY", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,182,1200,1); } }
        if(strcmp(item,"XOIK", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,183,1699,1); } }
        if(strcmp(item,"LFPO", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,184,1799,1); } }
        if(strcmp(item,"FRIK", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,185,2899,1); } }
        if(strcmp(item,"YJLA", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,186,3000,1); } }
        if(strcmp(item,"EKRI", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,187,3200,1); } }
        if(strcmp(item,"KENA", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,188,1600,1); } }
        if(strcmp(item,"DEVT", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,189,2600,1); } }
        if(strcmp(item,"BOMT", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,200,1500,1); } }
        if(strcmp(item,"SORL", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,202,2010,1); } }
        if(strcmp(item,"RAIJ", true) == 0) { if(!EnProLaps(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,203,2450,1); } }
        if(strcmp(item,"CAME", true) == 0) { if(!EnProLaps(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,204,2500,1); } }
        if(strcmp(item,"GAWQ", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,206,2300,1); } }
        if(strcmp(item,"SWQX", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,209,1300,1); } }
        if(strcmp(item,"DERS", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,210,3000,1); } }
        if(strcmp(item,"BERO", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,212,1050,1); } }
        if(strcmp(item,"VSPT", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,213,1000,1); } }
        if(strcmp(item,"FPSI", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,220,1710,1); } }
        if(strcmp(item,"RTXS", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,221,1699,1); } }
        if(strcmp(item,"FGSW", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,222,1800,1); } }
        if(strcmp(item,"GGSW", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,223,3300,1); } }
        if(strcmp(item,"BGSG", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,227,2699,1); } }
        if(strcmp(item,"FKKK", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,229,1899,1); } }
        if(strcmp(item,"MSUA", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,230,1090,1); } }
        if(strcmp(item,"TPSA", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,234,1899,1); } }
        if(strcmp(item,"BHYF", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,235,1700,1); } }
        if(strcmp(item,"HGFE", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,236,1600,1); } }
        if(strcmp(item,"FPLA", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,239,1000,1); } }
        if(strcmp(item,"SDMJ", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,240,2600,1); } }
        if(strcmp(item,"KJQA", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,241,1899,1); } }
        if(strcmp(item,"MSIF", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,242,1799,1); } }
        if(strcmp(item,"QQSJ", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,247,1599,1); } }
        if(strcmp(item,"ELAC", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,248,1600,1); } }
        if(strcmp(item,"MAIS", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,249,2000,1); } }
        if(strcmp(item,"CXSS", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,250,2000,1); } }
        if(strcmp(item,"BNUT", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,252,2100,1); } }
        if(strcmp(item,"SHUE", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,253,2500,1); } }
        if(strcmp(item,"MSOF", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,254,1599,1); } }
        if(strcmp(item,"POFS", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,255,2699,1); } }
        if(strcmp(item,"ERTA", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,258,1999,1); } }
        if(strcmp(item,"JJTF", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,259,1899,1); } }
        if(strcmp(item,"NTAD", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,260,1599,1); } }
        if(strcmp(item,"CCHU", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,261,1750,1); } }
        if(strcmp(item,"INPI", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,262,1520,1); } }
        if(strcmp(item,"SIUF", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,264,1030,1); } }
        if(strcmp(item,"MSJF", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,268,1150,1); } }
        if(strcmp(item,"LAPU", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,295,3000,1); } }
        if(strcmp(item,"PAME", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,296,2650,1); } }
        if(strcmp(item,"KSIO", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,297,1500,1); } }
        if(strcmp(item,"FISS", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,299,1959,1); } }
        if(strcmp(item,"FERU", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { SendClientMessage(playerid,-1,"2"); CodigoRopa(playerid,9,2559,2);   } }
        if(strcmp(item,"CGES", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,10,1000,2);   } }
        if(strcmp(item,"SERE", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,11,1780,2);   } }
        if(strcmp(item,"LUJA", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,13,1090,2);   } }
        if(strcmp(item,"BTDK", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,31,1660,2);   } }
        if(strcmp(item,"TANB", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,38,1352,2);   } }
        if(strcmp(item,"SFSH", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,39,1420,2);   } }
        if(strcmp(item,"EUSI", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,40,1650,2);   } }
        if(strcmp(item,"DDOS", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,41,1920,2);   } }
        if(strcmp(item,"OPSF", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,53,1360,2);   } }
        if(strcmp(item,"EOWL", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,54,1290,2);   } }
        if(strcmp(item,"VJUS", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,55,1850,2);   } }
        if(strcmp(item,"QAID", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,56,1665,2);   } }
        if(strcmp(item,"CONH", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,63,1780,2);   } }
        if(strcmp(item,"KSOF", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,64,1100,2);   } }
        if(strcmp(item,"TYWE", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,75,1400,2);   } }
        if(strcmp(item,"OSIF", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,76,2600,2);   } }
		if(strcmp(item,"BHSU", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,77,1200,2);   } }
        if(strcmp(item,"WIOS", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,85,1810,2);   } }
        if(strcmp(item,"CAOI", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,87,2100,2);   } }
        if(strcmp(item,"VSLS", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,88,1702,2);   } }
        if(strcmp(item,"VPSO", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,89,1430,2);   } }
        if(strcmp(item,"LSSF", true) == 0) { if(!EnProLaps(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,90,1550,2);   } }
        if(strcmp(item,"SFPO", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,91,2300,2);   } }
        if(strcmp(item,"LVPO", true) == 0) { if(!EnProLaps(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,92,1460,2);   } }
        if(strcmp(item,"SEPW", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,93,2000,2);   } }
        if(strcmp(item,"BRTF", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,129,1515,2);  } }
        if(strcmp(item,"MUAY", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,130,1595,2);  } }
        if(strcmp(item,"THAI", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,131,1600,2);  } }
        if(strcmp(item,"NHSU", true) == 0) { if(!EnProLaps(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,138,1690,2);  } }
        if(strcmp(item,"SICV", true) == 0) { if(!EnProLaps(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,139,1590,2);  } }
        if(strcmp(item,"VNSM", true) == 0) { if(!EnProLaps(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,140,1899,2);  } }
        if(strcmp(item,"JSPM", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,145,2100,2);  } }
        if(strcmp(item,"LSMU", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,148,2500,2);  } }
        if(strcmp(item,"KOKU", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,150,2700,2);  } }
        if(strcmp(item,"PSLO", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,151,1600,2);  } }
        if(strcmp(item,"NQAR", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,152,1800,2);  } }
        if(strcmp(item,"HLAO", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,157,1359,2);  } }
        if(strcmp(item,"DAPL", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,172,2600,2);  } }
        if(strcmp(item,"NYRE", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,178,1700,2);  } }
        if(strcmp(item,"LARN", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,190,1900,2);  } }
        if(strcmp(item,"SLHP", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,192,2000,2);  } }
        if(strcmp(item,"NICU", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,193,1800,2);  } }
        if(strcmp(item,"XASE", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,194,2700,2);  } }
        if(strcmp(item,"XSAE", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,196,1100,2);  } }
        if(strcmp(item,"QWER", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,197,1200,2);  } }
        if(strcmp(item,"RRIO", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,198,1750,2);  } }
        if(strcmp(item,"SBPV", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,201,1900,2);  } }
        if(strcmp(item,"BPSL", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,205,3000,2);  } }
        if(strcmp(item,"VIPE", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,207,1800,2);  } }
        if(strcmp(item,"TURN", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,214,2100,2);  } }
        if(strcmp(item,"NRDS", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,215,2100,2);  } }
        if(strcmp(item,"ESPO", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,216,3600,2);  } }
        if(strcmp(item,"BETD", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,218,1400,2);  } }
        if(strcmp(item,"QXZV", true) == 0) { if(!EnDidierSachs(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,219,3500,2);  } }
        if(strcmp(item,"OOIS", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,224,1690,2);  } }
        if(strcmp(item,"XXVD", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,225,1590,2);  } }
        if(strcmp(item,"XXSE", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,226,2000,2);  } }
        if(strcmp(item,"BMER", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,231,1550,2);  } }
        if(strcmp(item,"SVGW", true) == 0) { if(!EnBinco(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,232,1500,2);  } }
        if(strcmp(item,"ADSO", true) == 0) { if(!EnZIP(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,233,1899,2);  } }
        if(strcmp(item,"PPAR", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,237,1700,2);  } }
        if(strcmp(item,"XXTE", true) == 0) { if(!EnSubUrban(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,238,1200,2);  } }
        if(strcmp(item,"VRTA", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,243,1699,2);  } }
        if(strcmp(item,"BNMT", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,244,1599,2);  } }
        if(strcmp(item,"NRTF", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,245,1699,2);  } }
        if(strcmp(item,"VERA", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,246,1900,2);  } }
        if(strcmp(item,"SDBG", true) == 0) { if(!EnProLaps(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,251,1500,2);  } }
		if(strcmp(item,"MTYF", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,256,1600,2);  } }
		if(strcmp(item,"ZRSF", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,257,1799,2);  } }
		if(strcmp(item,"GGRT", true) == 0) { if(!EnVictim(playerid)) return 1; if(idjugador == PlayerInfo[playerid][pID]+1329771+Fechas[2]) { CodigoRopa(playerid,263,1750,2);  } }
	}
	return 1;
}
CMD:cancelar(playerid, params[])
{
	new item[32];
	new vw = GetPlayerVirtualWorld(playerid);
	if(IsPlayerConnected(playerid))
	if(!sscanf(params, "s[32]", item))
	{
		if(strcmp(item,"mutual",true) ==0)
		{
		    if(!IsPlayerInRangeOfPoint(playerid, 20.0, 1147.9966,-1322.4128,-10.7922)) return SendClientMessage(playerid, -1, "Tienes que ir al hospital para cancelar la mutual.");
		    switch(PlayerInfo[playerid][pSocioHP])
			{
			    case 0: SendClientMessage(playerid,-1,"{FFFFFF}No eres socio de este hospital.");
			    case 1: // Central
			    {
			        if(vw != 6) return SendClientMessage(playerid, -1, "{FFFFFF}No eres socio de este hospital.");
				    PlayerInfo[playerid][pSocioHP] = 0;
					SendClientMessage(playerid,-1,"{c04306}Dejaste de ser socio de este hospital.");
			    }
			    case 2: // Grove
			    {
			        if(vw != 9) return SendClientMessage(playerid, -1, "{FFFFFF}No eres socio de este hospital.");
				    PlayerInfo[playerid][pSocioHP] = 0;
					SendClientMessage(playerid,-1,"{c04306}Dejaste de ser socio de este hospital.");
			    }
			    case 3: // SF
			    {
			        if(vw != 7) return SendClientMessage(playerid, -1, "{FFFFFF}No eres socio de este hospital.");
				    PlayerInfo[playerid][pSocioHP] = 0;
					SendClientMessage(playerid,-1,"{c04306}Dejaste de ser socio de este hospital.");
			    }
			    case 4: // LV
			    {
			        if(vw != 8) return SendClientMessage(playerid, -1, "{FFFFFF}No eres socio de este hospital.");
				    PlayerInfo[playerid][pSocioHP] = 0;
					SendClientMessage(playerid,-1,"{c04306}Dejaste de ser socio de este hospital.");
			    }
			}
		}
	}
	return 1;
}
CMD:socio(playerid, params[])
{
	new item[32];
	if(IsPlayerConnected(playerid))
	if(!sscanf(params, "s[32]", item))
	{
		if(strcmp(item,"ayuda",true) ==0)
		{
			SendClientMessage(playerid,-1,"{FFFFFF}Haciendote socio de este hospital, serás atendido a un menor costo.");
			SendClientMessage(playerid,-1,"{FFFFFF}El precio de la atención, pasará de {00CC00}$450{FFFFFF} a {00CC00}$400{FFFFFF}.");
			SendClientMessage(playerid,-1,"{FFFFFF}Siempre que tengas un problema, serás atendido en este hospital.");
			SendClientMessage(playerid,-1,"{FFFFFF}Puedes hacerte {DBED15}/socio{FFFFFF} por un único pago de {00CC00}$500{FFFFFF}");
			SendClientMessage(playerid,-1,"{FFFFFF}Puedes usar en cualquier momento {DBED15}/cancelar mutual{FFFFFF} para dejar de ser socio.");
		}
	}
	if(sscanf(params, "s[30]", item))
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1147.9966,-1322.4128,-10.7922))
		{
			switch(GetPlayerVirtualWorld(playerid))
			{
				case 6: // LS Central
				{
				    SendClientMessage(playerid,-1,"{FFFFFF}Muchas gracias por hacerte socio de nuestro hospital.");
                    PlayerInfo[playerid][pSocioHP] = 1;
                    QuitarDinero(playerid,500);
				}
				case 9: // LS Groove
				{
				    SendClientMessage(playerid,-1,"{FFFFFF}Muchas gracias por hacerte socio de nuestro hospital.");
                    PlayerInfo[playerid][pSocioHP] = 2;
                    QuitarDinero(playerid,500);
				}
				case 7: // SF
				{
				    SendClientMessage(playerid,-1,"{FFFFFF}Muchas gracias por hacerte socio de nuestro hospital.");
                    PlayerInfo[playerid][pSocioHP] = 3;
                    QuitarDinero(playerid,500);
				}
				case 8: // LV
				{
				    SendClientMessage(playerid,-1,"{FFFFFF}Muchas gracias por hacerte socio de nuestro hospital.");
                    PlayerInfo[playerid][pSocioHP] = 4;
                    QuitarDinero(playerid,500);
				}
			}
		}
	}
	return 1;
}
CMD:expulsar(playerid,params[])
{
	new id,string[250];
	if(PlayerInfo[playerid][@Nivel] == 1) return SendClientMessage(playerid,-1,"No tienes permiso para usar ese comando.");
	if(PlayerInfo[playerid][pTiempoCarcelS] > 0 || PlayerInfo[playerid][pTiempoJailS] > 0) return SendClientMessage(playerid,-1,"No tienes permiso para usar ese comando.");
	if(!sscanf(params,"d",id))
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
	    	if(Alquilado == false) return SendClientMessage(playerid,-1,"El salón debe estar alquilado.");
	    	if(strcmp(PlayerName(playerid),Alquilador,true) == 0 || PermisoSalon[playerid] == true)
	    	{
	            if(IsPlayerConnected(id))
	            {
	                if(EnSalonEvento(id) || EnSalonEvento2(id))
	                {
						if(strcmp(PlayerName(id),Alquilador,true) == 0) return SendClientMessage(playerid,-1,"No puedes expulsar a esa persona del salón.");
	    				SetPlayerPos(id,1423.4301,-1180.1801,25.9922);
	    				SetPlayerVirtualWorld(id,0);
	    				SetPlayerInterior(id,0);
	    				format(string,sizeof(string),"Los guardias agarran a %s del brazo y lo expulsan del salón.",PlayerName(id));
						ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
	    				SendClientMessage(id,-1,"Los guardias de seguridad de sacaron del salón de evento.");
						format(string,sizeof(string),"El jugador {DBED15}%s{FFFFFF} expulso a {DBED15}%s{FFFFFF} del salón de eventos.", PlayerName(playerid), PlayerName(id));
						MandarMensajeSalon(string, playerid);
	    				Boleto[id] = false;
						if(strcmp(PlayerName(playerid),Alquilador,true) == 0)	PermisoSalon[id] = false;
	                }
	                else SendClientMessage(playerid,-1,"El jugador debe estar dentro del salón.");
	            }
	            else SendClientMessage(playerid,-1,"Ese jugador está desconectado.");
	    	}
	    	else SendClientMessage(playerid,-1,"No tienes permiso para expulsar a esa persona.");
		}
		else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(TiempoExpulsar[playerid] > 0)
			{
			    new tmpString[64];
			    format(tmpString, sizeof(tmpString), "Debes de esperar {00CC00}%d segundos{FFFFFF}.", TiempoExpulsar[playerid]);
			    return SendClientMessage(playerid, COLOR_WHITE, tmpString);
			}
			if(IsPlayerConnected(id))
			{
				if(id == playerid) return SendClientMessage(playerid, -1, "No puedes expulsar del vehículo a esa persona.");
				if(IsPlayerInAnyVehicle(id))
				{
					if(GetPlayerVehicleID(playerid) == GetPlayerVehicleID(id))
					{
						new resulT = random(2);
						switch(resulT)
						{
						    case 0:
						    {
							    format(string, sizeof(string), "%s intenta bajar a %s de su vehículo y lo logra.", PlayerName(playerid), PlayerName(id));
								ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
								RemovePlayerFromVehicle(id);
								TiempoExpulsar[playerid] = 59;
						    }
						    case 1:
						    {
						    	format(string, sizeof(string), "%s intenta bajar a %s de su vehículo y no lo logra.", PlayerName(playerid), PlayerName(id));
								ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
								TiempoExpulsar[playerid] = 59;
						    }
						}
					}
					else SendClientMessage(playerid, -1, "No puedes expulsar del vehículo a esa persona.");
				}
				else SendClientMessage(playerid, -1, "No puedes expulsar del vehículo a esa persona.");
			}
			else SendClientMessage(playerid, -1, "No puedes expulsar del vehículo a esa persona.");
		}
		else SendClientMessage(playerid,-1,"No tienes permiso para usar ese comando.");
	}
	else return SendClientMessage(playerid,-1,"Usa {DBED15}/expulsar {FFFFFF}[{DBED15}id o nombre{FFFFFF}]");
	return true;
}
CMD:ayuda(playerid, params[])
{
	new item[32];
	if(IsPlayerConnected(playerid))
	if(!sscanf(params, "s[32]", item))
	{
		if(strcmp(item,"casas",true) ==0)
		{
			new string[2000];
			string="{DBED16}Casas sin garaje\n\n{FFFFFF}Para comprar una casa es simple, acercace al icono de la casa verde, disponer del dinero para\ncomprarla y complir el requisito de nivel que tenga la casa a comprar.\nParar comprar la casa se usa: {DBED16}/comprar propiedad{FFFFFF} para en la puerta de la misma.\nLuego, dentro de la casa, tenemos un ropero, el cual se abre y cierra con {DBED16}/abrir ropero{FFFFFF} y {DBED16}/cerrar ropero{FFFFFF}.\nDentro del ropero hay una estanteria, donde se pueden guardar objetos.\nPara ver la estanteria se escribe {DBED16}/ver estanteria{FFFFFF},\nPara guardar y sacar armas se usa: {DBED16}/guardar [nombre-del-arma{FFFFFF}] y {DBED16}/sacar [nombre-del-arma{FFFFFF}] (Siempre usando guiones en lugar de espacios)\nPara guardar Crack y/o Medicamentos se usa el comando {DBED16}/guardar crack {FFFFFF}[{DBED16}cantidad{FFFFFF}] o {DBED16}/guardar medicamentos {FFFFFF}[{DBED16}cantidad{FFFFFF}]\nPara sacarlos se escribe {DBED16}/sacar crack {FFFFFF}[{DBED16}cantidad{FFFFFF}] y {DBED16}/sacar medicamentos {FFFFFF}[{DBED16}cantidad{FFFFFF}]\nLas casas también se pueden cerrar para que nadie pueda ingresar,\nparar cerrarlas {DBED16}/cerrar puerta{FFFFFF} y para volverla a abrir {DBED16}/abrir puerta{FFFFFF} (Siempre estando adentro)\n\n{DBED16}Casas con garaje\n\n{FFFFFF}Las casas con garaje disponen de un garaje exclusivo, donde pueden guardar sus vehículos.\nPara entrar al garaje con el auto, te acercas al portón de la casas y pones {DBED16}/entrar{FFFFFF} (estando dentro del\nvehículo), para sacar el auto se escribe {DBED16}/salir{FFFFFF} (estando dentro del vehículo).\nPara entrar al garaje, sin auto, solo se puede hacerlo desde dentro de la casa con {DBED16}/garaje{FFFFFF}\nPara salir del garaje sin auto, debemos volver a la casa poniendo {DBED16}/entrar{FFFFFF} en la puerta.\n\n{DBED16}Un auto que este en un garaje, no puede ser robado ni por un cheater.";
			ShowPlayerDialog(playerid, INMIGRACION, DIALOG_STYLE_MSGBOX, "Ayuda sobre las casas, todo lo que necesitas saber:",string,"Cerrar","");
		}
		else if(strcmp(item,"sed",true) ==0)
		{
			new string[500];
			string="{FFFFFF}La sed puede verse en la barra superario azul, mientras\nmás llena esté la barra, más sed tendrás.\n\nSi la barra se llena, comenzarás a perder vida con el paso del tiempo\ny morirás si no te hidratas.\n\nPara hidratarte necesitas ir a un supermercado 24/7 o restaurante\ny comprar un {00CC00}vaso de Sprunk{FFFFFF}.\n\nPara ocultar la barra de sed, escribe {DBED16}/ocultar sed{FFFFFF} y para mostrarla {DBED16}/mostrar sed";
			ShowPlayerDialog(playerid, 500, DIALOG_STYLE_MSGBOX, "Sed:",string,"Cerrar","");
		}
		else if(strcmp(item,"nivel",true) ==0 || strcmp(item,"level",true) ==0)
		{
			new string[290];
			string="Para subir de nivel necesitas llenar la barra de reputación\nque se ve en la parte inferior de la pantalla.\n\nPor cada hora de juego se gana 1 punto de reputación\n\nCon el comando /est se pueden ver esas estadisticas.\n\nAl llenar la barra de reputación tienes que /comprar nivel";
			ShowPlayerDialog(playerid, INMIGRACION, DIALOG_STYLE_MSGBOX, "Nivel:",string,"Cerrar","");
		}
		else if(strcmp(item,"hambre",true) ==0)
		{
			new string[500];
			string="{FFFFFF}La hambre puede verse en la barra superario naranja, mientras\nmás llena esté la barra, más hambre tendrás.\n\nSi la barra se llena, comenzarás a perder vida con el paso del tiempo\ny morirás si no comes.\n\nPara comer necesitas ir a una pizzeria\ny comprar un {00CC00}una porción de pizza{FFFFFF}.\n\nPara ocultar la barra de hambre, escribe {DBED16}/ocultar hambre{FFFFFF} y para mostrarla {DBED16}/mostrar hambre";
			ShowPlayerDialog(playerid, 500, DIALOG_STYLE_MSGBOX, "Hambre:",string,"Cerrar","");
		}
		else if(strcmp(item,"totem",true) ==0 || strcmp(item,"totems",true) ==0)
		{
			new string[290];
			string="{FFFFFF}Los {8c5c35}tótems{FFFFFF} se ganan como recompenza al invitar amigos al juego\nPara obtener los {8c5c35}tótems{FFFFFF} tienen que ingresar a la web, iniciar sesión e ir a {6CACFF}Invitar a un amigo{FFFFFF},\nluego copiar el enlace y enviarselo a sus amigos.";
			ShowPlayerDialog(playerid, INMIGRACION, DIALOG_STYLE_MSGBOX, "Ayuda sobre los totems",string,"Cerrar","");
		}
		else if(strcmp(item,"salon",true) ==0)
		{
			new string[950];
			string="{FFFFFF}El salón de eventos puede ser alquilado para realizar conciertos, presentaciones, fiestas y espectáculos.\nPara alquilar el salón necesitas nivel 6 y pagar {00CC00}$20.000{FFFFFF} por cada hora de alquiler.\nEl costo de la entrada lo decide el propietario(locatario) del salón.\n\nComandos para el propietario:\n{DBED16}/dar acceso [id-o-nombre]{FFFFFF} (Comando para dar permiso al control del escenario y expulsar personas del salón).\n{DBED16}/quitar acceso [id-o-nombre]{FFFFFF} (Comando para quitar permisos).\n{DBED16}/expulsar [id-o-nombre]{FFFFFF} (Le quita la entrada y lo expulsa del salón)\n{DBED16}/sincronizar{FFFFFF} (Reconecta a la radio a todos los jugadores en caso de bug)\n\nComandos para personas con tarjeta de acceso:\n{DBED16}/expulsar [id-o-nombre]{FFFFFF} (Le quita la entrada y lo expulsa del salón)\n{DBED16}/sincronizar\n/retirar vehiculo [id]{FFFFFF} (El ID se puede ver usando /dl)";
			ShowPlayerDialog(playerid, INMIGRACION, DIALOG_STYLE_MSGBOX, "{FFFFFF}Salón de eventos",string,"Cerrar","");
		}
		else if(strcmp(item,"trabajos",true) ==0)
		{
			new string[270];
			format(string, 250, "Información general\nMédico\nTaxista\nGuardaespaldas\nCamionero\nPolicía\nFabricante de armas\nMecánico\nCosechador (Sin habilidad)\nBasurero (2 jugadores)\nTransportista\nLadrón\nMinero\nPescador\nProstitución");
			ShowPlayerDialog(playerid,TRABAJOS, DIALOG_STYLE_LIST,"Trabajos:",string,"Ver ayuda","Salir");
		}
		else if(strcmp(item,"vehiculos",true) ==0 || strcmp(item,"vehiculo",true) ==0)
		{
			new string[2000];
			string="{FFFFFF}Existen varios concesionarias, las cuales tienen una gran variedad de vehículos a la venta.\nLos vehículos más económicos se encuentran a la vuelta de Unity Station.\nCuando quieras cambiar de vehículo, puedes vender el usado, solamente tienes que ir al Edificio Municipal General de LS e iniciar el trámite.\nLa oficina se encuentra en el piso número 17.\n\nPara que no usen tu vehículo te recomendamos {DBED16}/estacionar{FFFFFF} dentro de un estacionamiento. El costo es de {00CC00}$150{FFFFFF} por día.\nO sino también puedes comprar un sistema de traba en cualquier 24/7.\nSi tienes el sistema de traba, escribe {DBED16}/cerrar{FFFFFF} para trabar las puertas del vehículo.\nPara abrirlo {DBED16}/abrir{FFFFFF}, tienes que estar cerca o dentro del vehículo.\nSi no encuentrsa tu vehículo, escribe {DBED16}/localizar{FFFFFF}.\nSi tu vehículo fue robado, llama a la policía, ellos te van a pedir la patente para poder localizarlo.\n\nPara enceender o apagar las luces, escribe {DBED16}/luces{FFFFFF}\nPara detener el motor, escribe {DBED16}/detener{FFFFFF}\nPara encender el motor, escribe {DBED16}/arrancar{FFFFFF}\nPara activar o desactivar la alarma, escribe {DBED16}/alarma{FFFFFF}\n\nPara guardar o sacar cosas del maletero de tu vehículo necesitas abrirlo, acercate al maletero y escribe {DBED16}/abrir maletero{FFFFFF}\nDespués de abrirlo, tienes que mirar el interior usando {DBED16}/maletero{FFFFFF} o en caso de que no sea tu vehículo escribe {DBED16}/maletero [id o nombre del dueño]{FFFFFF}\nPara sacar algo del maletero escribe {DBED16}/maletero sacar [numero de lugar]{FFFFFF}, para sacar crack o medicamentos {DBED16}/maletero sacar [crack/medicamentos] [cantidad]{FFFFFF}\nPara guardar armas escribe {DBED16}/maletero guardar nombre-de-arma{FFFFFF}, para guardar crack o medicamentos escribe {DBED16}/maletero guardar [crack/medicamentos] [cantidad]{FFFFFF}\nRecuerda siempre {DBED16}/cerrar maletero{FFFFFF} para evitar robos.";
			ShowPlayerDialog(playerid, INMIGRACION, DIALOG_STYLE_MSGBOX, "Ayuda sobre vehículos, todo lo que necesitas saber:",string,"Cerrar","");
		}
		else if(strcmp(item,"club",true) ==0)
		{
			new string[2000];
			string="{FFFFFF}Encontrarás el {ef5bff}club de striptease{FFFFFF} en el mapa de tu {dbed15}GPS{ffffff} marcado con un {ff0000}corazón{ffffff}.\n\nDentro del club podrás beber e interactuar con las bailarias.\nSi le arojas dinero, ganarás afinidad con ellas. Actualmente hay 3 niveles de afinidad: {f0e02f}Baja{FFFFFF},{ff7c1d}Media {FFFFFF}y {ff0000}Alta{FFFFFF}.\n\nSi quieres algo más íntimo, hay un cuarto privado en el cual tu afinidad con la bailarina cobrará importancia.\n\n{8ab9e6}Sala privada según afinidad{FFFFFF}:\n\n- {f0e02f}Afinidad baja{FFFFFF}: Baile.\n- {ff7c1d}Afinidad media{FFFFFF}: Baile seguido de sexo oral.\n- {ff0000}Afinidad alta{FFFFFF}: Baile y sexo oral.(Con descuento monetario)\n\nPerderás un leve porcentaje de afinidad con la bailarina cuando ingreses al cuarto privado, si es que\ntienes afinidad media o alta. Será recuperada si luego le arrojas más dinero.\n\nPara {00cc00}lanzarles dinero{ffffff} a las bailarinas pulsa {dbe715}'Y'{FFFFFF} cerca de ellas.";
			ShowPlayerDialog(playerid, INMIGRACION, DIALOG_STYLE_MSGBOX, "Ayuda relacionada al club de striptease:",string,"Cerrar","");
		}
	}
	if(sscanf(params, "s[30]", item))
	{
		SendClientMessage(playerid, COLOR_WHITE, "VEHICULOS: {DBED15}/arrancar {FFFFFF}|{DBED15} /detener {FFFFFF}|{DBED15} /estacionar {FFFFFF}|{DBED15} /localizar | /luces");
		SendClientMessage(playerid, COLOR_WHITE, "TELEFONO: {DBED15}/minumero | /sms | /llamar | /colgar | /telefono [{FFFFFF}on/off{DBED15}]");
		SendClientMessage(playerid, COLOR_WHITE, "VENTAS: {DBED15}/vender vehiculo | /vender [nombre-del-arma] [id o nombre] [precio] | /vender [crack/medicamento]");
		SendClientMessage(playerid, COLOR_WHITE, "JUEGO: {DBED15}/hora {FFFFFF}| {DBED15}/config{FFFFFF}uracion");
		SendClientMessage(playerid, COLOR_WHITE, "AYUDA DETALLADA: {DBED15}/ayuda vehiculos | /ayuda trabajos | /ayuda nivel | /ayuda casas | /ayuda sed");
		SendClientMessage(playerid, COLOR_WHITE, "PERSONAJE: {DBED15}/est{FFFFFF}adisticas | {DBED15}/y{FFFFFF} (/me) {FFFFFF}|{DBED15} /p | /g | /b | /inventario | /consumir | /gps | /acciones");
		SendClientMessage(playerid, COLOR_WHITE, "TRABAJOS: {DBED15}/ayuda trabajos {FFFFFF}|{DBED15} /habilidad {FFFFFF}|{DBED15} /dejar trabajo");
		SendClientMessage(playerid, COLOR_WHITE, "SERVICIOS: {DBED15}/servicio taxi {FFFFFF}|{DBED15} /servicio grua {FFFFFF}|{DBED15} /servicio medico | /servicio mecanico");
		SendClientMessage(playerid, COLOR_WHITE, "GENERAL: Para recibir ayuda de otros jugadores usa {DBED15}/n pregunta{FFFFFF}.");
	}
	return 1;
}
CMD:servicio(playerid, params[])
{
	new item[128];
	if(IsPlayerConnected(playerid))
	if(!sscanf(params, "s[128]", item))
	{
		if(strcmp(item,	"medico",true) == 0)
		{
		    MedicoServicioHospital[playerid] = 0;
			if(IsPlayerInRangeOfPoint(playerid,1.0,1148.0066,-1322.5038,-10.7922)) MedicoServicioHospital[playerid] = 1;
			else if(IsPlayerInRangeOfPoint(playerid,1.0,-2713.3152,636.8893,1385.6547)) MedicoServicioHospital[playerid] = 2;
			else if(IsPlayerInRangeOfPoint(playerid,1.0,1242.1221,-809.4786,1164.2759)) MedicoServicioHospital[playerid] = 3;
			ObtenerEstadoSalud(playerid);
			if(MedicoServicioHospital[playerid] != 0)
			{
			    if(PlayerInfo[playerid][pCama] > 0) return 1;
				new Float:Vida,Float:calculo,string[256];
				GetPlayerHealth(playerid,Vida);
				if(Vida > 99) return 1;
				calculo = 100-Vida;
				HCalculo[playerid] = floatround(calculo, floatround_round);
				format(string,256,"{FFFFFF}Necesitas ser internado con urgencia por {a9c4e4}%s{FFFFFF}.\nCosto de internación {00CC00}$%d",Enfermedades(playerid),HCalculo[playerid]*10);
				ShowPlayerDialog(playerid,DHOSPITAL,DIALOG_STYLE_MSGBOX,"Diagnóstico médico",string,"Aceptar","Cancelar");
			}
			else if(PlayerInfo[playerid][Agonizando] == 1 && LlamadaMedicos[playerid] == 0)
			{
				for(new i=0; i<MAX_PLAYERS;i++)
				{
					if(RopaMedi[i] == 1 && PlayerInfo[i][pTrabajo] == T_Medico || PlayerInfo[i][pTrabajo2] == T_Medico && RopaMedi[i] == 1)
					{
						new string[256];
						if(GetPlayerVirtualWorld(playerid) == 0) SetPlayerMarkerForPlayer(i, playerid, COLOR_AMARILLO);
						else
						{
						    Loop2(p,MAX_PROPIEDADES)
						    {
						        if(PropInfo[p][pVW] == GetPlayerVirtualWorld(playerid))
						        {
                                    SetPlayerCheckpoint(i,PropInfo[p][pPosX],PropInfo[p][pPosY],PropInfo[p][pPosZ],5.0);
						        }
                            }
						}
						format(string, sizeof(string), "{FFFFFF}Hay un nuevo paciente solicitando {DBED16}/servicio medico{FFFFFF}, para avisarle que vas a atenderlo escribe {DBED16}/responder medico", PlayerName(playerid), playerid);
						SendClientMessage(i, 0x00CC00FF, string);
						SetTimerEx("CancelarMedi",minutos(5),false,"d",playerid);
						ResponderMedi[i] = 1;
						MarcadoMedicos[i] = 1;
					}
			 	}
				SendClientMessage(playerid, -1,"Llamaste al servicio medico, por favor espera un momento.");
				GameTextForPlayer(playerid, "~n~~n~             ~<~~r~Malherido~>~              ~w~Esperando servicio medico", 5000, 4);
				MarcadoMedicos[playerid] = 1;
				LlamadaMedicos[playerid] = 1;
			}
			else SendClientMessage(playerid, -1,"{FFFFFF}Para escribir {DBED16}/servicio medico{FFFFFF}, tienes que estar herido o dentro de un hospital.");
		}
		else if(strcmp(item,"grua",true) ==0)
		{
			if(IsPlayerInRangeOfPoint(playerid, 5, 1821.7529,-1280.6038,109.3594))
			{
				ShowPlayerDialog(playerid,SERVICIOGRUA1 , DIALOG_STYLE_MSGBOX, "Información sobre el servicio de grúa", "El Servicio de grua sirve para recuperar el vehiculo, en caso de que haya\nquedao en un lugar inaccesible.\nPor ejemplo: En el agua, dentro del estacionamiento de una propiedad, en una pileta, etc.\n\n¿Quieres utilizar el servicio?", "Si","No");
			}
			else
	  		{
	  		    SendClientMessage(playerid, -1, "Puedes solicitar este servicio en el {00CCFF}piso 17{FFFFFF} del {00CCFF}Edificio Municipal General de LS{FFFFFF}.");
	  		    SendClientMessage(playerid, -1, "O bien llamando al {DBED15}número 815{FFFFFF} desde tu teléfono móvil.");
   			}
		}
		else if(strcmp(item,	"taxi",true) == 0)
		{
			if(LlamadaTaxi[playerid] == 0)
			{
				for(new i=0; i<MAX_PLAYERS;i++)
				{
					if(PlayerInfo[i][pTrabajo] == T_Taxista || PlayerInfo[i][pTrabajo2] == T_Taxista)
					{
						new pName[50],autoid;
						autoid = GetPlayerVehicleID(i);
						if(!TAXI(autoid)) return 1;
						GetPlayerName(playerid, pName, 50);
						SetPlayerMarkerForPlayer(i, playerid, COLOR_AMARILLO);
						SendClientMessage(i, 0xDBED15FF, "Hay un nuevo cliente {FFFFFF}llamando al {DBED15}/servicio taxi{FFFFFF}, para avisarle que vas a buscarlo usa {DBED15}/responder taxi");
						SetTimerEx("CancelarTaxi",minutos(5),false,"d",playerid);
						ResponderTaxi[i] = 1;
					}
				}
				SendClientMessage(playerid, -1,"Llamaste al servicio de taxi, por favor espera un momento.");
				LlamadaTaxi[playerid] = 1;
			}
			else return SendClientMessage(playerid,-1,"Ya has solicitado un taxi");
		}
		else if(strcmp(item,	"mecanico",true) == 0)
		{
			new Float:vida, autoid = GetPlayerVehicleID(playerid);
			GetVehicleHealth(autoid, vida);
			if(PlayerInfo[playerid][@Nivel] == 1 && PlayerInfo[playerid][jExperiencia] < 3)
			{
			    SendClientMessage(playerid,-1,"Para llamar al servicio mecánico, necesitas tener como mínimo 3 puntos de reputación.");
			    SendClientMessage(playerid,-1,"Se gana 1 punto de reputación por cada hora de juego.");
			    SendClientMessage(playerid,-1,"Puedes consultar en cualquier momento tu reputación usando el comando /estadisticas o /est.");
			    SendClientMessage(playerid,-1,"O sino también puedes ver la barra gris en la parte inferior de la pantalla.");
			    return 1;
			}
			if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				if(vida > 375.0) return SendClientMessage(playerid,-1,"El motor del vehículo no está averiado.");
				if(LlamadaMeca[playerid] == 0)
				{
					for(new i=0; i<MAX_PLAYERS;i++)
					{
						if(RopaMeca[i] == 1)
						{
							new string[256],pName[50];
							GetPlayerName(playerid, pName, 50);
							SetPlayerMarkerForPlayer(i, playerid, COLOR_AZUL);
							format(string, 256, "{FFFFFF}Hay un nuevo cliente llamando al {DBED16}/servicio mecanico{FFFFFF}, para confimar escribe {DBED16}/responder mecanico", pName);
							SendClientMessage(i, 0x00CCFFFF, string);
							ResponderMeca[i] = 1;
							SetTimerEx("CancelarMeca",minutos(5),false,"d",playerid);
						}
					}
					SendClientMessage(playerid, -1,"Llamaste al servicio mecánico, por favor espera un momento.");
					LlamadaMeca[playerid] = 1;
				}
				else return SendClientMessage(playerid,-1,"Ya has solicitado un mecánico");
			}
			else return SendClientMessage(playerid,-1,"Debes estar en un vehiculo para solicitar un mecanico");
		}
		else if(sscanf(params, "s[30]", item))
		{
		    SendClientMessage(playerid,-1,"SERVICIOS: {DBED16}/servicio medico {FFFFFF}- {DBED16}/servicio taxi {FFFFFF}- {DBED16}/servicio grua {FFFFFF}- {DBED16}/servicio mecanico");
		}
	}
	return 1;
}
CMD:subir(playerid,params[])
{
	new Float:X, Float:Y, Float:Z, carid, seat, item[128];
	carid = GetPlayerVehicleID(playerid);
	if(!sscanf(params, "s[128]d", item,seat))
	{
		if(strcmp(item, "paciente", true) ==0)
		{
		    new Value = 1;
			if(PlayerInfo[playerid][pTrabajo] != T_Medico && PlayerInfo[playerid][pTrabajo2] != T_Medico) return 1;
			if(Paciente[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1,"No has reanimado a ningun paciente para subirlo.");
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1,"Debes estar en una ambulancia.");
			if(!AMBU(carid)) return SendClientMessage(playerid, -1,"Debes estar en una ambulancia.");
			if(GetPlayerVirtualWorld(Paciente[playerid]) == 0) GetPlayerPos(Paciente[playerid], X,Y,Z);
			else
			{
				Loop2(p,MAX_PROPIEDADES) {
				    if(GetPlayerVirtualWorld(Paciente[playerid]) == PropInfo[p][pVW]) {
				    	printf(Paciente[playerid]);
				        X = PropInfo[p][pPosX];
				        Y = PropInfo[p][pPosY];
				        Z = PropInfo[p][pPosZ];
				        Value = 2;
				    }
				}
			}
			if(IsPlayerInRangeOfPoint(playerid, 10.0, X,Y,Z))
			{
			    if(!IsSeatTaken(GetPlayerVehicleID(playerid),1))
			    {
				    SetPlayerVirtualWorld(Paciente[playerid], 0);
					SetPlayerInterior(Paciente[playerid], 0);
					EnAuto[Paciente[playerid]] = carid;
					MarcadoMedicos[Paciente[playerid]] = 0;
					SetPlayerColor(Paciente[playerid], COLOR_WHITE);
					PutPlayerInVehicle(Paciente[playerid], carid, 2);
					HospitalCercano(playerid);
					SendClientMessage(playerid, -1, "Has subido al paciente, llevalo al hospital antes que sea tarde");
					TogglePlayerControllable(Paciente[playerid], 0);
					SetPVarInt(Paciente[playerid], "IsFrozen", 0);
					Reanimado[Paciente[playerid]] = 0;
					PacienteAmbu[Paciente[playerid]] = 1;
				}
				else if(!IsSeatTaken(GetPlayerVehicleID(playerid),2))
			    {
				    SetPlayerVirtualWorld(Paciente[playerid], 0);
					SetPlayerInterior(Paciente[playerid], 0);
					EnAuto[Paciente[playerid]] = carid;
					MarcadoMedicos[Paciente[playerid]] = 0;
					SetPlayerColor(Paciente[playerid], COLOR_WHITE);
					PutPlayerInVehicle(Paciente[playerid], carid, 3);
					SendClientMessage(playerid, -1, "Has subido al paciente, llevalo al hospital antes que sea tarde");
					HospitalCercano(playerid);
					TogglePlayerControllable(Paciente[playerid], 0);
					SetPVarInt(Paciente[playerid], "IsFrozen", 0);
					Reanimado[Paciente[playerid]] = 0;
					PacienteAmbu[Paciente[playerid]] = 1;
				}
				else return 1;
			}
			else
			{
			    if(Value == 2) SendClientMessage(playerid,-1,"Acerca la ambulancia a la puerta de la propiedad.");
			}
		}
	}
	if(sscanf(params, "s[128]d", item,seat))
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0,905.4720,-3021.9995,7.5059))	// Faro ISLA Salida
		{
			SetPosEx(playerid,909.7603,-3016.5725,49.9987,307.7599,0,0);
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.0,154.1846,-1946.6228,5.3903))	// Faro Verona Beach Salida
		{
			SetPosEx(playerid,154.4787,-1953.9596,47.8722,151.6741,0,0);
			return 1;
		}
	}
	return 1;
}
CMD:bajar(playerid, params[])
{
    if(IsPlayerInRangeOfPoint(playerid, 2.0,154.4787,-1953.9596,47.8722)) 		// Faro Verona Beach
	{
 		SetPosEx(playerid,154.1846,-1946.6228,5.3903,359.0472,0,0);
		return 1;
   	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,909.7603,-3016.5725,49.9987)) 		// Faro ISLA
	{
 		SetPosEx(playerid,905.4720,-3021.9995,7.5059,132.8333,0,0);
		return 1;
	}
	return 1;
}
CMD:responder(playerid, params[])
{
	new item[32];
	if(IsPlayerConnected(playerid))
	if(!sscanf(params, "s[32]", item))
	{
		if(strcmp(item,	"medico",true) == 0)
		{
			if(PlayerInfo[playerid][pTrabajo] != T_Medico && PlayerInfo[playerid][pTrabajo2] != T_Medico) return SendClientMessage(playerid,-1,"No eres médico");
			if(ResponderMedi[playerid] == 1)
			{
				for(new i=0; i<MAX_PLAYERS;i++)
				{
					if(LlamadaMedicos[i] == 1)
					{
      					SendClientMessage(i,-1,"{00CC00}Un médico respondió a tu llamado y va en camino.");
      				}
					if(GetPlayerInterior(i) != 0)
			   		{
						SendClientMessage(playerid,-1,"El paciente que solicito médico se encuentra en un interior, se marcó la entrada de la puerta en tu {DBED16}GPS");
				      	SetPlayerCheckpoint(playerid, PlayerInfo[i][jPosE_x], PlayerInfo[i][jPosE_y], PlayerInfo[i][jPosE_z], 5.0);
					}
				}
				SendClientMessage(playerid, -1,"{00CC00}Acabas de avisarle al paciente que vas a su posición.");
				ResponderMedi[playerid] = 0;
			}
			else return SendClientMessage(playerid,-1,"Ya fueron atendidos todos los llamados.");
		}
		if(strcmp(item,	"taxi",true) == 0)
		{
			if(PlayerInfo[playerid][pTrabajo] != T_Taxista && PlayerInfo[playerid][pTrabajo2] != T_Taxista) return SendClientMessage(playerid,-1,"No eres taxista");
			if(ResponderTaxi[playerid] == 1)
			{
				for(new i=0; i<MAX_PLAYERS;i++)
				{
					if(LlamadaTaxi[i] == 1)
					{
						SendClientMessage(i,-1,"{00CC00}Un taxista respondió a tu llamado y va en camino.");
					}
				}
				SendClientMessage(playerid, -1,"{00CC00}Acabas de avisarle al cliente que vas a buscarlo.");
				ResponderTaxi[playerid] = 0;
			}
			else return SendClientMessage(playerid,-1,"Ya fueron atendidos todos los llamados.");
		}
		if(strcmp(item,	"mecanico",true) == 0)
		{
			if(PlayerInfo[playerid][pTrabajo] != T_Mecanico && PlayerInfo[playerid][pTrabajo2] != T_Mecanico) return SendClientMessage(playerid,-1,"No eres mecánico");
			if(ResponderMeca[playerid] == 1)
			{
				for(new i=0; i<MAX_PLAYERS;i++)
				{
					if(LlamadaMeca[i] == 1)
					{
						SendClientMessage(i,-1,"{00CC00}Un mecánico respondió a tu llamado y va en camino.");
					}
				}
				SendClientMessage(playerid, -1,"{00CC00}Acabas de avisarle al cliente que vas a reparar su vehículo.");
				ResponderMeca[playerid] = 0;
			}
			else return SendClientMessage(playerid,-1,"Ya fueron atendidos todos los llamados.");
		}
	}
	return 1;
}
CMD:arrancar(playerid, params[])
{
    new vehicleid = GetPlayerVehicleID(playerid);
   	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
   	if(VehiculosInfo[vehicleid][vcomprable] == 1) return 1;
   	if(BICI(vehicleid)) return 1;
	if(MotorAuto[vehicleid] == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Arrancando vehículo...");
		SetTimerEx("EncenderMotor",1200, false, "d",playerid);
	}
	return 1;
}
CMD:luces(playerid,params[])
{
	new pName[32],autoid;
	autoid = GetPlayerVehicleID(playerid);
	GetPlayerName(playerid, pName, 32);
 	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
	if(Luces[autoid] == 0)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(vehicleid, engine, 1, alarm, doors, bonnet, boot, objective);
		Luces[autoid] = 1;
		SendClientMessage(playerid, COLOR_WHITE, "Encendiendo luces...");
		AccionesRol(playerid,"enciende las luces de su vehículo.", 20);
	}
	else if(Luces[autoid] == 1)
	{

		new vehicleid = GetPlayerVehicleID(playerid);
		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(vehicleid, engine, 0, alarm, doors, bonnet, boot, objective);
		SendClientMessage(playerid, COLOR_WHITE, "Apagando luces...");
		AccionesRol(playerid,"apaga las luces de su vehículo.", 20);
		Luces[autoid] = 0;
	}
	return 1;
}
CMD:cerrar(playerid,params[])
{
	new item[10];
	new Float:x,Float:y,Float:z, Float:x2,Float:y2,Float:z2, Float:x3,Float:y3,Float:z3, Float:x4,Float:y4,Float:z4;
	GetVehiclePos(autos[playerid],  x,y,z);
	GetVehiclePos(autos2[playerid], x2,y2,z2);
	GetVehiclePos(autos3[playerid], x3,y3,z3);
	GetVehiclePos(autos4[playerid], x4,y4,z4);
	if(!sscanf(params,"s[10]",item))
	{
		if(strcmp(item,"patrulla",true)==0)
		{
			if(PlayerInfo[playerid][pDuty] != 1) return 1;
			new Float:VPos[3];
			for(new i = 0;i<MAX_VEHICLES;i++)
			{
				if(SAPD(i) || MOTOSAPD(i))
				{
					GetVehiclePos(i,VPos[0],VPos[1],VPos[2]);
					if(IsPlayerInRangeOfPoint(playerid,2.0,VPos[0],VPos[1],VPos[2]))
					{
						if(bloqueado[i] == 1) return SendClientMessage(playerid,-1,"Esta patrulla ya esta cerrada");
						AccionesRol(playerid,"trabó las puertas de su patrullero.", 20);
						GetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, boot, objective);
						PlayerPlaySound(playerid, 1145, VPos[0], VPos[1], VPos[2]);
						SetVehicleParamsEx(i, engine, lights, alarm, 1, bonnet, boot, objective);
						bloqueado[i] = 1;
					}
				}
			}
		}
		if(strcmp(item,"baul",true)==0 || strcmp(item,"maletero",true)==0)
		{
			if(IsPlayerInRangeOfPoint(playerid, 4.0, x,y,z))
			{

				if(Baul[autos[playerid]] == 0) return SendClientMessage(playerid,-1,"El baul ya esta cerrado");
				GetVehicleParamsEx(autos[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos[playerid], engine, lights, alarm, doors, bonnet, 0, objective);
				Baul[autos[playerid]] = 0;
				AccionesRol(playerid,"cierra el maletero de su vehículo.", 20);
				return 1;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 4.0, x2,y2,z2))
			{
				if(Baul[autos2[playerid]] == 0) return SendClientMessage(playerid,-1,"El baul ya esta cerrado");
				GetVehicleParamsEx(autos2[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos2[playerid], engine, lights, alarm, doors, bonnet, 0, objective);
				Baul[autos2[playerid]] = 0;
				AccionesRol(playerid,"cierra el maletero de su vehículo.", 20);
				return 1;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 4.0, x3,y3,z3))
			{
				if(Baul[autos3[playerid]] == 0) return SendClientMessage(playerid,-1,"El baul ya esta cerrado");
				GetVehicleParamsEx(autos3[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos3[playerid], engine, lights, alarm, doors, bonnet, 0, objective);
				Baul[autos3[playerid]] = 0;
				AccionesRol(playerid,"cierra el maletero de su vehículo.", 20);
				return 1;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 4.0, x4,y4,z4))
			{
				if(Baul[autos4[playerid]] == 0) return SendClientMessage(playerid,-1,"El baul ya esta cerrado");
				GetVehicleParamsEx(autos4[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos4[playerid], engine, lights, alarm, doors, bonnet, 0, objective);
				Baul[autos4[playerid]] = 0;
				AccionesRol(playerid,"cierra el maletero de su vehículo.", 20);
				return 1;
			}
			else if(PlayerInfo[playerid][pAdmin] >= ADMIN_LEVEL_BANEOS)
			{
				new id = GetPlayerVehicleID(playerid);
				if(!IsPlayerInAnyVehicle(playerid)) return 1;
				if(Baul[id] == 0) return SendClientMessage(playerid,-1,"El baul ya esta cerrado");
				AccionesRol(playerid,"cierra el maletero de su vehículo.", 20);
				GetVehicleParamsEx(id, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(id, engine, lights, alarm, doors, bonnet, 0, objective);
				Baul[id] = 0;
			}
			else return SendClientMessage(playerid, -1,"Debes estar cerca de tu vehiculo para cerrar su baúl.");
		}
		if(strcmp(item,"capo",true)==0)
		{
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Debes estar conduciendo un vehículo para abrir su capo");
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				new autoid = GetPlayerVehicleID(playerid);
				GetVehicleParamsEx(autoid, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autoid, engine, lights, alarm, doors, 0, boot, objective);
				Capo[autoid] = 0;
				AccionesRol(playerid,"cierra el capó de su vehículo.", 20);
				return 1;
			}
			else return SendClientMessage(playerid,-1,"Debes estar conduciendo un vehículo para abrir su capo");
		}
		if(strcmp(item,"puerta",true) == 0)
		{
		    cmd_cerrar(playerid,"casa");
			return true;
		}
		if(strcmp(item,"ropero",true) == 0 || strcmp(item,"roupeiro",true) == 0)
		{
			for(new p = 0; p < MAX_PROPIEDADES; p++)
			{
				if(PropInfo[p][pEnUso] == 1)
				{
					if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
					{
						if(PlayerInfo[playerid][pID] == PropInfo[p][pIDPropietario])
						{
						    if(IsPlayerInRangeOfPoint(playerid,1.5,254.2685,-41.5420,1002.0308) || IsPlayerInRangeOfPoint(playerid,5,PropInfo[p][pRoperoX],PropInfo[p][pRoperoY],PropInfo[p][pRoperoZ]))
						    {
						    	if(PropInfo[p][pRoperoAbierto] == 1)
						    	{
						        	PropInfo[p][pRoperoAbierto] = 0;
									AccionesRol(playerid,"cierra el ropero.", 20);
									GuardarPropiedad(p);
						    	}
						    	else SendClientMessage(playerid,-1,"El ropero ya está cerrado, escribe {DBED16}/abrir ropero{FFFFFF} para abrirlo.");
							}
					    }
					}
				}
			}
		}
		if(strcmp(item,"casa",true) == 0)
		{
			for(new p = 0; p < MAX_PROPIEDADES; p++)
			{
				if(PropInfo[p][pEnUso] == 1)
				{
					if(PlayerInfo[playerid][pID] == PropInfo[p][pIDPropietario])
					{
						if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW] && GetPlayerInterior(playerid) == PropInfo[p][pInteriorID])
						{
							if(PropInfo[p][pAbierta] == 1)
							{
								PropInfo[p][pAbierta] = 0;
								AccionesRol(playerid,"cierra la puerta de su propiedad.", 20);
								GuardarPropiedad(p);
							}
							else SendClientMessage(playerid,-1,"Esta propiedad ya está cerrada, escribe {DBED16}/abrir puerta{FFFFFF} para abrirla.");
						}
					}
				}
			}
		}
		if(strcmp(item,"puerta",true) == 0)
		{
		    cmd_cerrar(playerid,"casa");
		    return true;
		}
	}
	if(sscanf(params, "s[10]", item))
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z))
		{
		    if(PlayerInfo[playerid][vTraba] == 0) return SendClientMessage(playerid, COLOR_WHITE, "Para poder cerrar el vehículo, necesitas instalar un sistema de traba. Puedes comprar uno en cualquier {DBED16}24/7");
			if(bloqueado[autos[playerid]] == 0)
			{
				GetVehicleParamsEx(autos[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos[playerid], engine, lights, alarm, 1, bonnet, boot, objective);
				AccionesRol(playerid,"trabó las puertas de su vehículo.", 20);
				SendClientMessage(playerid,-1,"{FFFFFF}Escribe {DBED16}/abrir {FFFFFF}para destrabar las puertas de tu vehículo.");
				PlayerPlaySound(playerid, 1145, x, y, z);
				bloqueado[autos[playerid]] = 1;
				PlayerInfo[playerid][vSeguro] = 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Este vehículo ya está cerrado.");
				SendClientMessage(playerid,-1,"{FFFFFF}Escribe {DBED16}/abrir {FFFFFF}para destrabar las puertas de tu vehículo.");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0, x2,y2,z2))
		{
		    if(PlayerInfo[playerid][v2Traba] == 0) return SendClientMessage(playerid, COLOR_WHITE, "Para poder cerrar el vehículo, necesitas instalar un sistema de traba. Puedes comprar uno en cualquier {DBED16}24/7");
			if(bloqueado[autos2[playerid]] == 0)
			{
				GetVehicleParamsEx(autos2[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos2[playerid], engine, lights, alarm, 1, bonnet, boot, objective);
				AccionesRol(playerid,"trabó las puertas de su vehículo.", 20);
				SendClientMessage(playerid,-1,"{FFFFFF}Escribe {DBED16}/abrir {FFFFFF}para destrabar las puertas de tu vehículo.");
				PlayerPlaySound(playerid, 1145, x2, y2, z2);
				bloqueado[autos2[playerid]] = 1;
				PlayerInfo[playerid][vSeguro2] = 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Este vehículo ya está cerrado.");
				SendClientMessage(playerid,-1,"{FFFFFF}Escribe {DBED16}/abrir {FFFFFF}para destrabar las puertas de tu vehículo.");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, x3,y3,z3))
		{
		    if(PlayerInfo[playerid][v3Traba] == 0) return SendClientMessage(playerid, COLOR_WHITE, "Para poder cerrar el vehículo, necesitas instalar un sistema de traba. Puedes comprar uno en cualquier {DBED16}24/7");
			if(bloqueado[autos3[playerid]] == 0)
			{
				GetVehicleParamsEx(autos3[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos3[playerid], engine, lights, alarm, 1, bonnet, boot, objective);
				AccionesRol(playerid,"trabó las puertas de su vehículo.", 20);
				SendClientMessage(playerid,-1,"{FFFFFF}Escribe {DBED16}/abrir {FFFFFF}para destrabar las puertas de tu vehículo.");
				PlayerPlaySound(playerid, 1145, x3, y3, z3);
				bloqueado[autos3[playerid]] = 1;
				PlayerInfo[playerid][vSeguro3] = 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Este vehículo ya está cerrado.");
				SendClientMessage(playerid,-1,"{FFFFFF}Escribe {DBED16}/abrir {FFFFFF}para destrabar las puertas de tu vehículo.");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, x4,y4,z4))
		{
		    if(PlayerInfo[playerid][v4Traba] == 0) return SendClientMessage(playerid, COLOR_WHITE, "Para poder cerrar el vehículo, necesitas instalar un sistema de traba. Puedes comprar uno en cualquier {DBED16}24/7");
			if(bloqueado[autos4[playerid]] == 0)
			{
				GetVehicleParamsEx(autos4[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos4[playerid], engine, lights, alarm, 1, bonnet, boot, objective);
				AccionesRol(playerid,"trabó las puertas de su vehículo.", 20);
				SendClientMessage(playerid,-1,"{FFFFFF}Escribe {DBED16}/abrir {FFFFFF}para destrabar las puertas de tu vehículo.");
				PlayerPlaySound(playerid, 1145, x4, y4, z4);
				bloqueado[autos4[playerid]] = 1;
				PlayerInfo[playerid][vSeguro4] = 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Este vehículo ya está cerrado.");
				SendClientMessage(playerid,-1,"{FFFFFF}Escribe {DBED16}/abrir {FFFFFF}para destrabar las puertas de tu vehículo.");
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_WHITE, "Necesitas estar al lado de un vehículo para poder cerrarlo.");
		}
	}
	return 1;
}
CMD:alarma(playerid,params[])
{
    new vehicleid = GetPlayerVehicleID(playerid);
    new Float:x,Float:y,Float:z,Float:x2,Float:y2,Float:z2,Float:x3,Float:y3,Float:z3,Float:x4,Float:y4,Float:z4;
	GetVehiclePos(autos[playerid], x,y,z);
	GetVehiclePos(autos2[playerid], x2,y2,z2);
	GetVehiclePos(autos3[playerid], x3,y3,z3);
	GetVehiclePos(autos4[playerid], x4,y4,z4);
	if(IsPlayerInRangeOfPoint(playerid, 3.0, x,y,z))
	{
	    if(PlayerInfo[playerid][vAlarma] != 1) {
		    SendClientMessage(playerid,-1,"Tu vehículo no tiene instalado el sistema de alarma. Puedes comprar uno en cualquier {DBED15}24/7");
		    SendClientMessage(playerid,-1,"Tienes que estar cerca o dentro de tu vehículo para activar o desactivar la {DBED15}/alarma");
		    return 1;
     	}
	    if(alarma[autos[playerid]] == 1)
		{
			GetVehicleParamsEx(autos[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos[playerid], engine, lights, 0, doors, bonnet, boot, objective);
			AccionesRol(playerid,"desactivó la alarma de su vehículo.", 20);
			alarma[autos[playerid]] = 0;
			PlayerInfo[playerid][vAAlarma] = 0;
		}
		else
		{
		    if(vehicleid != autos[playerid])
			{
				GetVehicleParamsEx(autos[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos[playerid], engine, lights, 1, doors, bonnet, boot, objective);
			}
			AccionesRol(playerid,"activa la alarma de su vehículo.", 20);
			alarma[autos[playerid]] = 1;
			PlayerInfo[playerid][vAAlarma] = 1;
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 3.0, x2,y2,z2))
	{
	    if(PlayerInfo[playerid][v2Alarma] != 1) {
		    SendClientMessage(playerid,-1,"Tu vehículo no tiene instalado el sistema de alarma. Puedes comprar uno en cualquier {DBED15}24/7");
		    SendClientMessage(playerid,-1,"Tienes que estar cerca o dentro de tu vehículo para activar o desactivar la {DBED15}/alarma");
		    return 1;
     	}
		if(alarma[autos2[playerid]] == 1)
		{
			GetVehicleParamsEx(autos2[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos2[playerid], engine, lights, 0, doors, bonnet, boot, objective);
			AccionesRol(playerid,"desactivó la alarma de su vehículo.", 20);
			alarma[autos2[playerid]] = 0;
			PlayerInfo[playerid][vAAlarma2] = 0;
		}
		else
		{
		    if(vehicleid != autos2[playerid])
			{
				GetVehicleParamsEx(autos2[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos2[playerid], engine, lights, 1, doors, bonnet, boot, objective);
			}
			AccionesRol(playerid,"activa la alarma de su vehículo.", 20);
			alarma[autos2[playerid]] = 1;
			PlayerInfo[playerid][vAAlarma2] = 1;
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 3.0, x3,y3,z3))
	{
	    if(PlayerInfo[playerid][v3Alarma] != 1) {
		    SendClientMessage(playerid,-1,"Tu vehículo no tiene instalado el sistema de alarma. Puedes comprar uno en cualquier {DBED15}24/7");
		    SendClientMessage(playerid,-1,"Tienes que estar cerca o dentro de tu vehículo para activar o desactivar la {DBED15}/alarma");
		    return 1;
     	}
		if(alarma[autos3[playerid]] == 1)
		{
			GetVehicleParamsEx(autos3[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos3[playerid], engine, lights, 0, doors, bonnet, boot, objective);
			AccionesRol(playerid,"desactivó la alarma de su vehículo.", 20);
			alarma[autos3[playerid]] = 0;
			PlayerInfo[playerid][vAAlarma3] = 0;
		}
		else
		{
			if(vehicleid != autos3[playerid])
			{
				GetVehicleParamsEx(autos3[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos3[playerid], engine, lights, 1, doors, bonnet, boot, objective);
			}
			AccionesRol(playerid,"activa la alarma de su vehículo.", 20);
			alarma[autos3[playerid]] = 1;
			PlayerInfo[playerid][vAAlarma3] = 1;
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 3.0, x4,y4,z4))
	{
	    if(PlayerInfo[playerid][v4Alarma] != 1) {
		    SendClientMessage(playerid,-1,"Tu vehículo no tiene instalado el sistema de alarma. Puedes comprar uno en cualquier {DBED15}24/7");
		    SendClientMessage(playerid,-1,"Tienes que estar cerca o dentro de tu vehículo para activar o desactivar la {DBED15}/alarma");
		    return 1;
     	}
		if(alarma[autos4[playerid]] == 1)
		{
			GetVehicleParamsEx(autos4[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(autos4[playerid], engine, lights, 0, doors, bonnet, boot, objective);
			AccionesRol(playerid,"desactivó la alarma de su vehículo.", 20);
			alarma[autos4[playerid]] = 0;
			PlayerInfo[playerid][vAAlarma4] = 0;
		}
		else
		{
			if(vehicleid != autos4[playerid])
			{
				GetVehicleParamsEx(autos4[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos4[playerid], engine, lights, 1, doors, bonnet, boot, objective);
			}
			AccionesRol(playerid,"activa la alarma de su vehículo.", 20);
			alarma[autos4[playerid]] = 1;
			PlayerInfo[playerid][vAAlarma4] = 1;
		}
	}
	else SendClientMessage(playerid, COLOR_WHITE, "Tienes que estar cerca o dentro de tu vehículo para activar o desactivar la {DBED15}/alarma");
 	return 1;
}
CMD:abrir(playerid,params[])
{
	new item[128];
	new Float:x,Float:y,Float:z,Float:x2,Float:y2,Float:z2,Float:x3,Float:y3,Float:z3,Float:x4,Float:y4,Float:z4;
	GetVehiclePos(autos[playerid], x,y,z);
	GetVehiclePos(autos2[playerid], x2,y2,z2);
	GetVehiclePos(autos3[playerid], x3,y3,z3);
	GetVehiclePos(autos4[playerid], x4,y4,z4);
	if(!sscanf(params,"s[128]",item))
	{
		if(strcmp(item,"patrulla",true)==0)
		{
			if(PlayerInfo[playerid][pDuty] != 1) return 1;
			new Float:VPos[3];
			for(new i = 0;i<MAX_VEHICLES;i++)
			{
				if(SAPD(i) || MOTOSAPD(i))
				{
					GetVehiclePos(i,VPos[0],VPos[1],VPos[2]);
					if(IsPlayerInRangeOfPoint(playerid,2.0,VPos[0],VPos[1],VPos[2]))
					{
						if(bloqueado[i] == 0) return SendClientMessage(playerid,-1,"Esta patrulla ya esta abierta");
						AccionesRol(playerid,"destrabó las puertas de su patrullero.", 20);
						GetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, boot, objective);
						PlayerPlaySound(playerid, 1145, VPos[0], VPos[1], VPos[2]);
						SetVehicleParamsEx(i, engine, lights, alarm, 0, bonnet, boot, objective);
						bloqueado[i] = 0;
					}
				}
			}
		}
		if(strcmp(item,"capo",true)==0)
		{
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"Debes estar conduciendo un vehículo para abrir su capo");
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				new autoid = GetPlayerVehicleID(playerid);
				GetVehicleParamsEx(autoid, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autoid, engine, lights, alarm, doors, 1, boot, objective);
				Capo[autoid] = 1;
				AccionesRol(playerid,"abre el capó de su vehículo.", 20);
				return 1;
			}
			else return SendClientMessage(playerid,-1,"Debes estar conduciendo un vehículo para abrir su capo");
		}
		if(strcmp(item,"baul",true)==0 || strcmp(item,"maletero",true)==0)
		{
			new var;
			if(IsPlayerInRangeOfPoint(playerid, 4.0, x,y,z)) { var = autos[playerid]; }
			else if(IsPlayerInRangeOfPoint(playerid, 4.0, x2,y2,z2)) { var = autos2[playerid]; }
			else if(IsPlayerInRangeOfPoint(playerid, 4.0, x3,y3,z3)) { var = autos3[playerid]; }
			else if(IsPlayerInRangeOfPoint(playerid, 4.0, x4,y4,z4)) { var = autos4[playerid]; }
			else return 1;

			if(MOTO(var) && PlayerInfo[playerid][pVip] != 0)
			{
				if(Baul[var] == 1) return SendClientMessage(playerid,-1,"El baul ya esta abierto");
				GetVehicleParamsEx(autos[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos[playerid], engine, lights, alarm, doors, bonnet, 1, objective);
				Baul[var] = 1;
				AccionesRol(playerid,"abre el maletero de su vehículo.", 20);
				return 1;
			}
			else if(!MOTO(var))
			{
				if(Baul[var] == 1) return SendClientMessage(playerid,-1,"El baul ya esta abierto");
				GetVehicleParamsEx(autos[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos[playerid], engine, lights, alarm, doors, bonnet, 1, objective);
				Baul[var] = 1;
				AccionesRol(playerid,"abre el maletero de su vehículo.", 20);
				return 1;
			}
			else if(PlayerInfo[playerid][pAdmin] >= ADMIN_LEVEL_BANEOS)
			{
				new id = GetPlayerVehicleID(playerid);
				if(!IsPlayerInAnyVehicle(playerid)) return 1;
    			if(!NOBAUL(id))
				{
					if(Baul[id] == 1) return SendClientMessage(playerid,-1,"El baul ya esta abierto");
					GetVehicleParamsEx(id, engine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(id, engine, lights, alarm, doors, bonnet, 1, objective);
					Baul[id] = 1;
					AccionesRol(playerid,"abre el maletero del vehículo.", 20);
				}
				return 1;
			}
		}
		if(strcmp(item,"ropero",true) == 0)
		{
			for(new p = 0; p < MAX_PROPIEDADES; p++)
			{
				if(PropInfo[p][pEnUso] == 1)
				{
					if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW])
					{
						if(PlayerInfo[playerid][pID] == PropInfo[p][pIDPropietario])
						{
						    if(IsPlayerInRangeOfPoint(playerid,1.5,254.2685,-41.5420,1002.0308) || IsPlayerInRangeOfPoint(playerid,5,PropInfo[p][pRoperoX],PropInfo[p][pRoperoY],PropInfo[p][pRoperoZ]))
						    {
						    	if(PropInfo[p][pRoperoAbierto] == 0)
						    	{
						    	   	PropInfo[p][pRoperoAbierto] = 1;
									AccionesRol(playerid,"abre el ropero.", 20);
									GuardarPropiedad(p);
						    	}
						    	else SendClientMessage(playerid,-1,"El ropero ya está abierto, escribe {DBED16}/cerrar ropero{FFFFFF} para cerrarlo.");
							}
					    }
					}
				}
			}
		}
		if(strcmp(item,"casa",true) == 0)
		{
			for(new p = 0; p < MAX_PROPIEDADES; p++)
			{
				if(PropInfo[p][pEnUso] == 1)
				{
					if(PlayerInfo[playerid][pID] == PropInfo[p][pIDPropietario])
					{
						if(GetPlayerVirtualWorld(playerid) == PropInfo[p][pVW] && GetPlayerInterior(playerid) == PropInfo[p][pInteriorID])
						{
							if(PropInfo[p][pAbierta] == 0)
							{
								PropInfo[p][pAbierta] = 1;
								AccionesRol(playerid,"abre la puerta de su propiedad.", 20);
								GuardarPropiedad(p);
							}
							else SendClientMessage(playerid,-1,"Esta propiedad ya está abierta, escribe {DBED16}/cerrar puerta{FFFFFF} para cerrarla.");
							return 1;
						}
					}
				}
			}
		}
		if(strcmp(item,"puerta",true) == 0)
		{
		    cmd_abrir(playerid,"casa");
		    return true;
		}
	}
	if(sscanf(params, "s[128]", item))
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z))
		{
		    if(bloqueado[autos[playerid]] == 1)
			{
				GetVehicleParamsEx(autos[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos[playerid], engine, lights, alarm, 0, bonnet, boot, objective);
				AccionesRol(playerid,"destrabó las puertas de su vehículo.", 20);
				SendClientMessage(playerid,-1,"{FFFFFF}Escribe {DBED16}/cerrar {FFFFFF}para trabar las puertas de tu vehículo.");
				PlayerPlaySound(playerid, 1145, x, y, z);
				bloqueado[autos[playerid]] = 0;
				PlayerInfo[playerid][vSeguro] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Este vehículo ya está abierto.");
				SendClientMessage(playerid,-1,"{FFFFFF}Escribe {DBED16}/cerrar {FFFFFF}para trabar las puertas de tu vehículo.");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, x2,y2,z2))
		{
			if(bloqueado[autos2[playerid]] == 1)
			{
				GetVehicleParamsEx(autos2[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos2[playerid], engine, lights, alarm, 0, bonnet, boot, objective);
				AccionesRol(playerid,"destrabó las puertas de su vehículo.", 20);
				SendClientMessage(playerid,-1,"{FFFFFF}Escribe {DBED16}/cerrar {FFFFFF}para trabar las puertas de tu vehículo.");
				PlayerPlaySound(playerid, 1145, x2, y2, z2);
				bloqueado[autos2[playerid]] = 0;
				PlayerInfo[playerid][vSeguro2] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Este vehículo ya está abierto.");
				SendClientMessage(playerid,-1,"{FFFFFF}Escribe {DBED16}/cerrar {FFFFFF}para trabar las puertas de tu vehículo.");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, x3,y3,z3))
		{
			if(bloqueado[autos3[playerid]] == 1)
			{
				GetVehicleParamsEx(autos3[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos3[playerid], engine, lights, alarm, 0, bonnet, boot, objective);
				AccionesRol(playerid,"destrabó las puertas de su vehículo.", 20);
				SendClientMessage(playerid,-1,"{FFFFFF}Escribe {DBED16}/cerrar {FFFFFF}para trabar las puertas de tu vehículo.");
				PlayerPlaySound(playerid, 1145, x3, y3, z3);
				bloqueado[autos3[playerid]] = 0;
				PlayerInfo[playerid][vSeguro3] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Este vehículo ya está abierto.");
				SendClientMessage(playerid,-1,"{FFFFFF}Escribe {DBED16}/cerrar {FFFFFF}para trabar las puertas de tu vehículo.");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, x4,y4,z4))
		{
			if(bloqueado[autos4[playerid]] == 1)
			{
				GetVehicleParamsEx(autos4[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(autos4[playerid], engine, lights, alarm, 0, bonnet, boot, objective);
				AccionesRol(playerid,"destrabó las puertas de su vehículo.", 20);
				SendClientMessage(playerid,-1,"{FFFFFF}Escribe {DBED16}/cerrar {FFFFFF}para trabar las puertas de tu vehículo.");
				PlayerPlaySound(playerid, 1145, x4, y4, z4);
				bloqueado[autos4[playerid]] = 0;
				PlayerInfo[playerid][vSeguro4] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Este vehículo ya está abierto.");
				SendClientMessage(playerid,-1,"{FFFFFF}Escribe {DBED16}/cerrar {FFFFFF}para trabar las puertas de tu vehículo.");
			}
		}
		else
		{
  			SendClientMessage(playerid, COLOR_WHITE, "Necesitas estar al lado de un vehículo para poder abrirlo.");
		}
	}
	return 1;
}
CMD:detener(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid);
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
	if(MotorAuto[vehicleid] == 1)
	{
        ApagarMotor(playerid);
	}
	return 1;
}
CMD:kill(playerid, params[])
{
	if(Jail[playerid] == 1 || PlayerInfo[playerid][pTiempoJailS] > 0 || PlayerInfo[playerid][Agonizando] > 0 || VariableCaido[playerid] == 1) return 1;
	{
		EstablecerVida(playerid, 0.0);
	}
	return 1;
}
CMD:m(playerid, params[])
{
	new text[128];
	if(PlayerInfo[playerid][pDuty] != 1) return 1;
	if(IsPlayerInAnyVehicle(playerid))
	{
		if(SAPD(GetPlayerVehicleID(playerid)) || MOTOSAPD(GetPlayerVehicleID(playerid)))
		{
			if(!sscanf(params, "s[128]",text))
			{
				new string[128];
				format(string, sizeof(string), "(Megáfono) %s: {3399FF}¡¡ {FFFFFF}%s{3399FF} !!",PlayerName(playerid), text);
				ProxDetector(60.0, playerid, string,COLOR_MEGAPHONE,COLOR_MEGAPHONE,COLOR_MEGAPHONE,COLOR_MEGAPHONE,COLOR_MEGAPHONE);
			}
		}
		else if(HELISAPD(GetPlayerVehicleID(playerid)) || MOTOSAPD(GetPlayerVehicleID(playerid)))
		{
			if(!sscanf(params, "s[128]",text))
			{
				new string[128];
				format(string, sizeof(string), "(Megáfono) %s: {3399FF}¡¡ {FFFFFF}%s{3399FF} !!",PlayerName(playerid), text);
				ProxDetector(90.0, playerid, string,COLOR_MEGAPHONE,COLOR_MEGAPHONE,COLOR_MEGAPHONE,COLOR_MEGAPHONE,COLOR_MEGAPHONE);
			}
		}
		else SendClientMessage(playerid,-1,"Solamente los vehículos de la policía cuentan con megáfonos.");
	}
	else
	{
		new Float:VPos[3];
		for(new i = 0;i<MAX_VEHICLES;i++)
		{
			if(SAPD(i) || MOTOSAPD(i) || HELISAPD(i))
			{
				new string[128];
				GetVehiclePos(i,VPos[0],VPos[1],VPos[2]);
				if(IsPlayerInRangeOfPoint(playerid,4.0,VPos[0],VPos[1],VPos[2]))
				{
				    if(!sscanf(params, "s[128]",text))
					{
						format(string, sizeof(string), "(Megáfono) %s: {3399FF}¡¡ {FFFFFF}%s{3399FF} !!",PlayerName(playerid), text);
						ProxDetector(60.0, playerid, string,COLOR_MEGAPHONE,COLOR_MEGAPHONE,COLOR_MEGAPHONE,COLOR_MEGAPHONE,COLOR_MEGAPHONE);
					}
				}
			}
		}
	}
	return 1;
}
CMD:cargos(playerid, params[])
{
	new name[24], name2[24], Float:pos[3], string[150],string2[150],id,cargos;
 	if(PlayerInfo[playerid][pFaccion] != 1) return SendClientMessage(playerid,-1,"Solamente los policías pueden cambiar niveles de búsqueda.");
	if(sscanf(params,"dd",id,cargos)) return SendClientMessage(playerid, -1, "Escribe {DBED16}/cargos [ID] {FFFFFF}[{DBED16}Cargos{FFFFFF}]");
	if(IsPlayerNPC(id)) return 1;
	if(PlayerInfo[id][pCargos] == cargos) return SendClientMessage(playerid, -1, "Ese jugador ya tiene los mismos cargos.");
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	if(!IsPlayerInRangeOfPoint(id, 400.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid,-1,"Debes estar a 400 metros de la persona para colocarle cargos.");
	{
		if(PlayerInfo[id][pDuty] == 1 && id != playerid) return SendClientMessage(playerid, -1, "No puedes ponerle cargos a un policía.");
		{
			format(string2,150,"%s",PlayerName(playerid));
			PlayerInfo[id][QuienC] = string2;
			CargosRobar[id] = 0;
			CagoSeguro[id] = 0;
			GetPlayerName(id, name, sizeof(name));
			GetPlayerName(playerid, name2, sizeof(name2));
			if(PlayerInfo[playerid][pDuty] == 1)
			switch(cargos)
			{
				case 0:
				{
					PlayerInfo[id][pCargos] = 0;
					SetPlayerWantedLevel(id, PlayerInfo[id][pCargos]);
					TipoCargo[id] = 1;
					format(string, sizeof(string), "{3399FF}[Radio de policía] {FFFFFF}%s reportando: {00CCFF}%s{FFFFFF}[%d] tiene todo en orden, lo dejo continuar. {DBED16}(0)*", name2, name,id);
					SendRadioMessage(1, -1, string,playerid);
					format(string2, sizeof(string), "[Radio de policía] {FFFFFF}%s reportando: %s[%d] tiene todo en orden, lo dejo continuar.", name2, name,id);
					ProxDetector(15.0, playerid, string2, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
					SetPlayerColor(id,c0_color);
					return 1;
				}
				case 1:
				{
					SendClientMessage(id, COLOR_YELLOW, "La policia quiere hablar con usted, si se da a la fuga, sera arrestado.");
					PlayerInfo[id][pCargos] = 1;
					SetPlayerWantedLevel(id, PlayerInfo[id][pCargos]);
	  				TipoCargo[id] = 1;
					format(string, sizeof(string), "{3399FF}[Radio de policía] {FFFFFF}%s reportando: {00CCFF}%s{FFFFFF}[%d] parece sospechoso, voy a interrogarlo. {DBED16}(1)*", name2, name,id);
					SendRadioMessage(1, -1, string,playerid);
					format(string2, sizeof(string2), "[Radio de policía] {FFFFFF}%s reportando: %s[%d] parece sospechoso, voy a interrogarlo.", name2, name,id);
					ProxDetector(15.0, playerid, string2, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
					for(new i = 0; i < MAX_PLAYERS; i++)
					if(PlayerInfo[i][pDuty] == 1)
					SetPlayerMarkerForPlayer(i, id, c1_color);
					return 1;
				}
				case 2:
				{
					PlayerInfo[id][pCargos] = 2;
					SetPlayerWantedLevel(id, PlayerInfo[id][pCargos]);
	  				TipoCargo[id] = 1;
					format(string, sizeof(string), "{3399FF}[Radio de policía] {FFFFFF}%s reportando: {00CCFF}%s{FFFFFF}[%d] se da a la fuga, procedemos a su persecución. {DBED16}(2)*", name2, name,id);
					SendRadioMessage(1, -1, string,playerid);
					format(string2, sizeof(string2), "[Radio de policía] {FFFFFF}%s reportando: %s[%d] se da a la fuga, procedemos a su persecución.", name2, name,id);
					ProxDetector(15.0, playerid, string2, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
					for(new i = 0; i < MAX_PLAYERS; i++)
					if(PlayerInfo[i][pDuty] == 1)
					SetPlayerMarkerForPlayer(i, id, c2_color);
					return 1;
				}
				case 3:
				{
					PlayerInfo[id][pCargos] = 3;
					SetPlayerWantedLevel(id, PlayerInfo[id][pCargos]);
					TipoCargo[id] = 1;
					format(string, sizeof(string), "{3399FF}[Radio de policía] {FFFFFF}%s reportando: {00CCFF}%s{FFFFFF}[%d] se encuentra armado, procedan con precaución. {DBED16}(3)*", name2, name,id);
					SendRadioMessage(1, -1, string,playerid);
					format(string2, sizeof(string2), "[Radio de policía] {FFFFFF}%s reportando: %s[%d] se encuentra armado, procedan con precaución.", name2, name,id);
					ProxDetector(15.0, playerid, string2, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
					for(new i = 0; i < MAX_PLAYERS; i++)
					if(PlayerInfo[i][pDuty] == 1)
					SetPlayerMarkerForPlayer(i, id, c3_color);
					return 1;
				}
				case 4:
				{
					PlayerInfo[id][pCargos] = 4;
					SetPlayerWantedLevel(id, PlayerInfo[id][pCargos]);
					TipoCargo[id] = 1;
					format(string, sizeof(string), "{3399FF}[Radio de policía] {FFFFFF}%s reportando: {00CCFF}%s{FFFFFF}[%d] abrió fuego, necesito refuerzos. {DBED16}(4)*", name2, name,id);
					SendRadioMessage(1, -1, string,playerid);
					format(string2, sizeof(string2), "[Radio de policía] {FFFFFF}%s reportando: %s[%d] abrió fuego, necesito refuerzos.", name2, name,id);
					ProxDetector(15.0, playerid, string2, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
					for(new i = 0; i < MAX_PLAYERS; i++)
					if(PlayerInfo[i][pDuty] == 1)
					SetPlayerMarkerForPlayer(i, id, c4_color);
					return 1;
				}
				case 5:
				{
					PlayerInfo[id][pCargos] = 5;
					SetPlayerWantedLevel(id, PlayerInfo[id][pCargos]);
					TipoCargo[id] = 1;
					format(string, sizeof(string), "{3399FF}[Radio de policía] {FFFFFF}%s reportando: {00CCFF}%s{FFFFFF}[%d] asesinó, detener vivo o muerto. {DBED16}(5)*", name2, name,id);
					SendRadioMessage(1, -1, string,playerid);
					format(string2, sizeof(string2), "[Radio de policía] {FFFFFF}%s reportando: %s[%d] asesinó, detener vivo o muerto.", name2, name,id);
					ProxDetector(15.0, playerid, string2, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
					for(new i = 0; i < MAX_PLAYERS; i++)
					if(PlayerInfo[i][pDuty] == 1)
					SetPlayerMarkerForPlayer(i, id, c5_color);
					return 1;
				}
				case 6:
				{
					PlayerInfo[id][pCargos] = 6;
					SetPlayerWantedLevel(id, PlayerInfo[id][pCargos]);
					TipoCargo[id] = 1;
					format(string, sizeof(string), "{3399FF}[Radio de policía] {FFFFFF}%s reportando: {00CCFF}%s{FFFFFF}[%d] es extremadamente peligroso, disparen a matar. {DBED16}(6)*", name2, name,id);
					SendRadioMessage(1, -1, string,playerid);
					format(string2, sizeof(string2), "[Radio de policía] {FFFFFF}%s reportando: %s[%d] es extremadamente peligroso, disparen a matar.", name2, name,id);
					ProxDetector(15.0, playerid, string2, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
					for(new i = 0; i < MAX_PLAYERS; i++)
					if(PlayerInfo[i][pDuty] == 1)
					SetPlayerMarkerForPlayer(i, id, c6_color);
					return 1;
				}
			}
		}
	}
 	if(PlayerInfo[playerid][pDuty] == 0 && PlayerInfo[playerid][pFaccion] == 1)
	{
		if(PlayerInfo[id][pDuty] == 1 && id != playerid) return SendClientMessage(playerid, -1, "Estás intentando colocarle cargos a un policía.");
		{
			if(!IsPlayerInRangeOfPoint(id, 400, pos[0], pos[1], pos[2])) return SendClientMessage(playerid,-1,"Debes estar en un radio de 400 metros para colocar cargos a esta persona.");
			{
				format(string2,150,"%s",PlayerName(playerid));
				PlayerInfo[id][QuienC] = string2;
				CargosRobar[id] = 0;
				CagoSeguro[id] = 0;
				GetPlayerName(id, name, sizeof(name));
				GetPlayerName(playerid, name2, sizeof(name2));
				if(PlayerInfo[playerid][pDuty] == 0)
				switch(cargos)
				{
					case 0:
					{
						PlayerInfo[id][pCargos] = 0;
						SetPlayerWantedLevel(id, PlayerInfo[id][pCargos]);
						TipoCargo[id] = 1;
						format(string, sizeof(string), "{3399FF}[Radio de policía] {FFFFFF}%s reportando: {00CCFF}%s{FFFFFF}[%d] tiene todo en orden, lo dejo continuar. {DBED16}(0)*", name2, name,id);
						SendRadioMessage(1, -1, string,playerid);
						format(string2, sizeof(string), "[Radio de policía] {FFFFFF}%s reportando: %s[%d] tiene todo en orden, lo dejo continuar.", name2, name,id);
						ProxDetector(15.0, playerid, string2, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
						SendClientMessage(id,-1,"Un policía de civil te quitó los cargos.");
						SetPlayerColor(id,c0_color);
					}
					case 1:
					{
						SendClientMessage(id, COLOR_YELLOW, "La policia quiere hablar con usted, si se da a la fuga, sera arrestado.");
						PlayerInfo[id][pCargos] = 1;
						SetPlayerWantedLevel(id, PlayerInfo[id][pCargos]);
		  				TipoCargo[id] = 1;
						format(string, sizeof(string), "{3399FF}[Radio de policía] {FFFFFF}%s reportando: {00CCFF}%s{FFFFFF}[%d] parece sospechoso, voy a interrogarlo. {DBED16}(1)*", name2, name,id);
						SendRadioMessage(1, -1, string,playerid);
						format(string2, sizeof(string2), "[Radio de policía] {FFFFFF}%s reportando: %s[%d] parece sospechoso, voy a interrogarlo.", name2, name,id);
						ProxDetector(15.0, playerid, string2, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
						SendClientMessage(id,-1,"Un policía de civil te puso cargos.");
						for(new i = 0; i < MAX_PLAYERS; i++)
						if(PlayerInfo[i][pDuty] == 1)
						SetPlayerMarkerForPlayer(i, id, c1_color);
					}
					case 2:
					{
						PlayerInfo[id][pCargos] = 2;
						SetPlayerWantedLevel(id, PlayerInfo[id][pCargos]);
		  				TipoCargo[id] = 1;
						format(string, sizeof(string), "{3399FF}[Radio de policía] {FFFFFF}%s reportando: {00CCFF}%s{FFFFFF}[%d] se da a la fuga, procedemos a su persecución. {DBED16}(2)*", name2, name,id);
						SendRadioMessage(1, -1, string,playerid);
						format(string2, sizeof(string2), "[Radio de policía] {FFFFFF}%s reportando: %s[%d] se da a la fuga, procedemos a su persecución.", name2, name,id);
						ProxDetector(15.0, playerid, string2, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
						SendClientMessage(id,-1,"Un policía de civil te puso cargos.");
						for(new i = 0; i < MAX_PLAYERS; i++)
						if(PlayerInfo[i][pDuty] == 1)
						SetPlayerMarkerForPlayer(i, id, c2_color);
					}
					case 3:
					{
						PlayerInfo[id][pCargos] = 3;
						SetPlayerWantedLevel(id, PlayerInfo[id][pCargos]);
						TipoCargo[id] = 1;
						format(string, sizeof(string), "{3399FF}[Radio de policía] {FFFFFF}%s reportando: {00CCFF}%s{FFFFFF}[%d] se encuentra armado, procedan con precaución. {DBED16}(3)*", name2, name,id);
						SendRadioMessage(1, -1, string,playerid);
						format(string2, sizeof(string2), "[Radio de policía] {FFFFFF}%s reportando: %s[%d] se encuentra armado, procedan con precaución.", name2, name,id);
						ProxDetector(15.0, playerid, string2, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
						SendClientMessage(id,-1,"Un policía de civil te puso cargos.");
						for(new i = 0; i < MAX_PLAYERS; i++)
						if(PlayerInfo[i][pDuty] == 1)
						SetPlayerMarkerForPlayer(i, id, c3_color);
					}
					case 4:
					{
						PlayerInfo[id][pCargos] = 4;
						SetPlayerWantedLevel(id, PlayerInfo[id][pCargos]);
						TipoCargo[id] = 1;
						format(string, sizeof(string), "{3399FF}[Radio de policía] {FFFFFF}%s reportando: {00CCFF}%s{FFFFFF}[%d] abrió fuego, necesito refuerzos. {DBED16}(4)*", name2, name,id);
						SendRadioMessage(1, -1, string,playerid);
						format(string2, sizeof(string2), "[Radio de policía] {FFFFFF}%s reportando: %s[%d] abrió fuego, necesito refuerzos.", name2, name,id);
						ProxDetector(15.0, playerid, string2, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
						SendClientMessage(id,-1,"Un policía de civil te puso cargos.");
						for(new i = 0; i < MAX_PLAYERS; i++)
						if(PlayerInfo[i][pDuty] == 1)
						SetPlayerMarkerForPlayer(i, id, c4_color);
					}
					case 5:
					{
						PlayerInfo[id][pCargos] = 5;
						SetPlayerWantedLevel(id, PlayerInfo[id][pCargos]);
						TipoCargo[id] = 1;
						format(string, sizeof(string), "{3399FF}[Radio de policía] {FFFFFF}%s reportando: {00CCFF}%s{FFFFFF}[%d] asesinó, detener vivo o muerto. {DBED16}(5)*", name2, name,id);
						SendRadioMessage(1, -1, string,playerid);
						format(string2, sizeof(string2), "[Radio de policía] {FFFFFF}%s reportando: %s[%d] asesinó, detener vivo o muerto.", name2, name,id);
						ProxDetector(15.0, playerid, string2, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
						SendClientMessage(id,-1,"Un policía de civil te puso cargos.");
						for(new i = 0; i < MAX_PLAYERS; i++)
						if(PlayerInfo[i][pDuty] == 1)
						SetPlayerMarkerForPlayer(i, id, c5_color);
					}
					case 6:
					{
						PlayerInfo[id][pCargos] = 6;
						SetPlayerWantedLevel(id, PlayerInfo[id][pCargos]);
						TipoCargo[id] = 1;
						format(string, sizeof(string), "{3399FF}[Radio de policía] {FFFFFF}%s reportando: {00CCFF}%s{FFFFFF}[%d] es extremadamente peligroso, disparen a matar. {DBED16}(6)*", name2, name,id);
						SendRadioMessage(1, -1, string,playerid);
						format(string2, sizeof(string2), "[Radio de policía] {FFFFFF}%s reportando: %s[%d] es extremadamente peligroso, disparen a matar.", name2, name,id);
						ProxDetector(15.0, playerid, string2, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
						SendClientMessage(id,-1,"Un policía de civil te puso cargos.");
						for(new i = 0; i < MAX_PLAYERS; i++)
						if(PlayerInfo[i][pDuty] == 1)
						SetPlayerMarkerForPlayer(i, id, c6_color);
					}
				}
			}
		}
	}
	return 1;
}
CMD:radio(playerid, params[])
{
	new item[138];
	if(PlayerInfo[playerid][pRadio] != 1) return SendClientMessage(playerid, -1,"Tu no tienes un radio comunicador, puedes comprar uno en un 24/7");
	if(sscanf(params, "s[138]", item)) return SendClientMessage(playerid, -1,"Escribe {DBED16}/radio {FFFFFF}[{DBED16}on/off{FFFFFF}]");
	{
		if(strcmp(item,	"on",true) == 0)
		{
			if(EstadoRadio[playerid] == 1) return SendClientMessage(playerid,-1,"Tu radio ya está encendida.");
			EstadoRadio[playerid] = 1;
			AccionesRol(playerid,"enciende su radio comunicador.", 20);
		}
		if(strcmp(item, "off", true) == 0)
		{
			if(EstadoRadio[playerid] == 0) return SendClientMessage(playerid,-1,"Tu radio ya está apagada.");
			EstadoRadio[playerid] = 0;
			AccionesRol(playerid,"enciende su radio comunicador.", 20);
		}
	}
	return 1;
}
CMD:n(playerid, params[])
{
    new texto[128],string[400];
	if(GetPlayerScore(playerid) == 0) return 1;
	if(CanalDudas[playerid] == 0) return SendClientMessage(playerid,-1,"Tienes el canal de dudas desactivado");
	if(sscanf(params,"s[128]",texto)) return SendClientMessage(playerid,-1,"Usa {DBED15}/n {FFFFFF}({DBED15}y tu pregunta{FFFFFF}) para recibir ayuda de otros jugadores.");
	if(PlayerInfo[playerid][pTiempoJailS] > 0) return SendClientMessage(playerid, 0x3AA000FF, "No puedes usar el canal de dudas mientras estás sancionado.");
	if(TiempoDuda[playerid] > 0 && RecienDuda[playerid] == 1)
	{
		if(TiempoDuda[playerid] < 60) format(string,sizeof(string),"Debes esperar %d segundos para volver a utilizar el canal de dudas.",TiempoDuda[playerid]);
		else if(TiempoDuda[playerid] >= 60) format(string,sizeof(string),"Debes esperar %dm %ds para volver a utilizar el canal de dudas.",TiempoDuda[playerid]/60, TiempoDuda[playerid]%(60));
		SendClientMessage(playerid, 0xff9a00FF,string);
		return 1;
	}
	if(TiempoDuda[playerid] > 0 && RecienDuda[playerid] == 0)
	{
		if(TiempoDuda[playerid] < 60) format(string, sizeof(string), "No se te permite hablar por el chat de ayuda. Espera {00CC00}%ds{FFFFFF} para enviar otra consulta al canal de ayuda.",TiempoDuda[playerid]);
		else if(TiempoDuda[playerid] >= 60) format(string, sizeof(string), "No se te permite hablar por el chat de ayuda. Espera {00CC00}%dm %ds{FFFFFF} para enviar otra consulta al canal de ayuda.", TiempoDuda[playerid]/60, TiempoDuda[playerid]%(60));
		SendClientMessage(playerid, -1,string);
		return 1;
	}
	if(PlayerInfo[playerid][pAdmin] == ADMIN_LEVEL_USER)
	{
		format(string,sizeof(string),"{FFFFFF}El canal de dudas /n es únicamente para dudas.\n\nNO USES el canal de dudas para comunicarte con tus amigos, para vender cosas o para insultar.\nEn caso de hacerlo, vas a ser sancionado con descuento de dinero.\nTambién tu cuenta puede ser baneada permanentemente.\n\n                   ¿Quieres enviar la duda o respuesta a la duda?");
		ShowPlayerDialog(playerid, DAYUDA, DIALOG_STYLE_MSGBOX, "{DBED16}¡ATENCIÓN!",string,"Si","No");
		DudaTexto[playerid] = texto;
	}
	if(PlayerInfo[playerid][pAdmin] > ADMIN_LEVEL_USER) return EnviarDuda(playerid, params);
	return 1;
}
CMD:hora(playerid,params[])
{
    new hour, minute, second, string[180];
	new day,month,year;
	gettime(hour,minute,second);
	getdate(day,month,year);
	format(string, sizeof(string),"{FFFFFF}Fecha y hora actual del servidor: {DBED16}%02d/%02d/%02d %02d:%02d:%02d.", day,month,year,hour,minute,second);
	SendClientMessage(playerid,-1,string);
	return 1;
}
CMD:intentar(playerid, params[])
{
    if(TiempoIntentar[playerid] > 0)
	{
	    new tmpString[64];
	    format(tmpString, sizeof(tmpString), "El comando {DBED15}/intentar{FFFFFF} solo se puede usar una vez por minuto. Por favor espera {DBED15}%d {FFFFFF}segundos.", TiempoIntentar[playerid]);
	    return SendClientMessage(playerid, COLOR_WHITE, tmpString);
	}
    if(!isnull(params))
	{
		new string[128];
		format(string, 128, "%s intenta %s %s", PlayerName(playerid), params, ((random(2)) ? ("y lo logra.") : ("y no puede.")));
		new stringLength = strlen(string);
		if(stringLength <= 128) ProxDetector(30.0, playerid, string,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
		TiempoIntentar[playerid] = 59;
	}
	else SendClientMessage(playerid, COLOR_WHITE, "Por favor escribe {DBED15}/intentar acción{FFFFFF}, por ejemplo: {DBED15}/intentar encestar el balón en el aro{FFFFFF}.");
	return 1;
}
CMD:p(playerid, params[])
{
    if(!isnull(params))
	{
		new string[128];
		format(string, sizeof(string), "* %s (( %s ))", params, PlayerName(playerid));
		new stringLength = strlen(string);
		if(stringLength <= 128) ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
	}
	else SendClientMessage(playerid, COLOR_WHITE, "Por favor escribe {DBED15}/p entorno{FFFFFF}, por ejemplo: {DBED15}/p se cae una roca por la montaña{FFFFFF}.");
	return 1;
}
CMD:d(playerid,params[])
{
    new text[128],string[128];
	if(sscanf(params,"s[128]",text)) return SendClientMessage(playerid,-1,"Por favor escribe {DBED15}/d texto{FFFFFF}, por ejemplo: {DBED15}/d Hola, buen día.{FFFFFF}.");
    if(GetPlayerDrunkLevel(playerid) > 5000)
	{
	    format(string, sizeof(string), "%s alcoholizado dice: %s",PlayerName(playerid), text);
	    new stringLength = strlen(string);
		if(stringLength <= 128) ProxDetector(15.0, playerid, string,Hablar,Hablar2,Hablar3,Hablar4,Hablar5);
	}
	else
	{
	    format(string, sizeof(string), "%s dice: %s",PlayerName(playerid), text);
	    new stringLength = strlen(string);
		if(stringLength <= 128) ProxDetector(15.0, playerid, string,Hablar,Hablar2,Hablar3,Hablar4,Hablar5);

	}
	return 1;
}
CMD:b(playerid, params[])
{
    if(!isnull(params))
	{
		new string[128];
		format(string, sizeof(string), "%s: (( %s ))", PlayerName(playerid), params);
		new stringLength = strlen(string);
		if(stringLength <= 128) ProxDetector(15.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,CHAT,CHAT2);
	}
	else SendClientMessage(playerid, COLOR_WHITE, "Por favor escribe {DBED15}/b texto{FFFFFF}, por ejemplo: {DBED15}/b ¿qué comando era para entrar en las propiedades?{FFFFFF}.");
	return 1;
}
CMD:g(playerid, params[])
{
    if(!isnull(params))
	{
	    if(GetPlayerDrunkLevel(playerid) > 5000)
		{
		    new string[128];
			format(string, sizeof(string), "%s grita alcoholizado: ¡%s!", PlayerName(playerid), params);
			new stringLength = strlen(string);
			if(stringLength <= 128) ProxDetector(30.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,CHAT,CHAT2);
			format(string, sizeof(string), "¡%s!", params);
			if(stringLength <= 128) SetPlayerChatBubble(playerid,string,COLOR_WHITE,60.0,5000);
		}
		else
		{
			new string[128];
			format(string, sizeof(string), "%s grita: ¡%s!", PlayerName(playerid), params);
			new stringLength = strlen(string);
			if(stringLength <= 128)ProxDetector(30.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,CHAT,CHAT2);

			format(string, sizeof(string), "¡%s!", params);
			if(stringLength <= 128)SetPlayerChatBubble(playerid,string,COLOR_WHITE,60.0,5000);
        }
	}
	else SendClientMessage(playerid, COLOR_WHITE, "Por favor escribe {DBED15}/g texto{FFFFFF}, por ejemplo: {DBED15}/g Espérame.");
	return 1;
}
CMD:s(playerid, params[])
{
    if(!isnull(params))
	{
	    if(GetPlayerDrunkLevel(playerid) > 5000)
		{
		    new string[128];
			format(string, sizeof(string), "%s susurra alcoholizado: %s",PlayerName(playerid), params);
			new stringLength = strlen(string);
			if(stringLength <= 128) ProxDetector(5.0, playerid, string,CHAT,CHAT2,CHAT3,CHAT4,CHAT5);
		}
		else
		{
			new string[128];
			format(string, sizeof(string), "%s susurra: %s", PlayerName(playerid), params);
			new stringLength = strlen(string);
			if(stringLength <= 128) ProxDetector(5.0, playerid, string,CHAT,CHAT2,CHAT3,CHAT4,CHAT5);
        }
	}
	else SendClientMessage(playerid, COLOR_WHITE, "Por favor escribe {DBED15}/s texto{FFFFFF}, por ejemplo: {DBED15}/s ¿Dónde robamos?{FFFFFF}.");
	return 1;
}
CMD:me(playerid, params[])
{
    if(!isnull(params))
	{
	    new stringLength = strlen(params);
	    if(stringLength <= 128)
		{
			AccionesRol2(playerid, params, 15);
			return SendClientMessage(playerid,-1,"Por favor acostúmbrate a usar {DBED15}/y{FFFFFF} en lugar de {DBED15}/me{FFFFFF}, ya que en futuras versiones el comando dejará de existir.");
		}
	}
	else SendClientMessage(playerid, COLOR_WHITE, "Usa {DBED15}/y [Texto]");
	return 1;
}
CMD:y(playerid, params[])
{
    if(!isnull(params))
	{
		new string[128];
		format(string, sizeof(string), "* %s %s", PlayerName(playerid), params);
		new stringLength = strlen(string);
		if(stringLength <= 128) ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
	}
	else SendClientMessage(playerid, COLOR_WHITE, "Por favor escribe {DBED15}/y texto{FFFFFF}, por ejemplo: {DBED15}/y se rie{FFFFFF}.");
	return 1;
}
CMD:verificar(playerid,params[])
{
	new item[30], string5[300];
	if(!sscanf(params,"s[28]",item))
	{
		if(strcmp(item, "correo", true)== 0)
		{
			if(PlayerInfo[playerid][EstadoCorreo] == 1) return SendClientMessage(playerid, -1, "Tu correo ya se encuentra verificado.");
			format(string5,sizeof(string5),"{FFFFFF}Al verificar tu dirección de correo electrónico, tu cuenta tendrá un nivel de seguridad superior.\n\nDirección de correo: {00CC00}%s{FFFFFF}.\n\n                                           ¿Es real este correo?",PlayerInfo[playerid][pEmail]);
			ShowPlayerDialog(playerid, DVERIFICAR, DIALOG_STYLE_MSGBOX, "Verificar E-Mail",string5,"Si","No");
		}
 	}
	return 1;
}
CMD:cambiar(playerid,params[])
{
	new item[30];
	if(!sscanf(params,"s[28]",item))
	{
		if(strcmp(item, "correo", true)== 0)
		{
			ShowPlayerDialog(playerid, DCAMBIAR, DIALOG_STYLE_INPUT,"Modificar e-mail","Ingresa una dirección de correo válida.","Cambiar","Cancelar");
		}
	}
	return 1;
}
CMD:sincronizar(playerid,params[])
{
	if(Alquilado == false) return true;
	if(!EnSalonEvento(playerid)) return true;
	new string[100];
	if(strcmp(Alquilador,PlayerName(playerid),true) == 0 || PermisoSalon[playerid] == true)
	{
 		for(new i; i <= GetPlayerPoolSize(); i++)
  		{
   			if(IsPlayerConnected(i))
     		{
     			if(EnSalonEvento(i) && PlayerInfo[playerid][pSonidos] == 0)
      			{
   	    			PlayAudioStreamForPlayer(i,"http://"EMISORA_URL"?sid=51");
				}
	        }
	    }
		format(string,sizeof(string),"El jugador {DBED16}%s{FFFFFF} usó el comando {DBED16}/sincronizar{FFFFFF}.", PlayerName(playerid));
		MandarMensajeSalon(string, playerid);
	}
	return true;
}
CMD:alquilar(playerid,params[])
{
	if(PlayerInfo[playerid][@Nivel] <= 5) return SendClientMessage(playerid,-1,"Necesitas nivel 6 o más para poder alquilar este salón.");
	if(strcmp(params[0],"salon",true) == 0)
	{
	    if(!IsPlayerInRangeOfPoint(playerid,5,-1250.3397,2093.7437,1246.6360)) return SendClientMessage(playerid,-1,"No estás en donde se alquila el salón.");
	    {
	        if(Alquilado == true) return SendClientMessage(playerid,-1,"El salón ya se encuentra alquilado.");
	        {
	            if(Boleto[playerid] == true) return SendClientMessage(playerid,-1,"Ya compraste una entrada.");
				ShowPlayerDialog(playerid,AlquilarSalon1,DIALOG_STYLE_INPUT,"Alquiler de salón","Tiempo en horas:","Siguiente","Salir");
	        }
	    }
	}
	return 1;
}
CMD:buscar(playerid, params[])
{
    if(PlayerInfo[playerid][pDuty] != 1) return 1;
	ShowPlayerDialog(playerid, BUSCARCOCHE, DIALOG_STYLE_LIST, "Buscar información", "Vehículo", "Siguiente", "Cancelar");
    return 1;
}
CMD:id(playerid, params[])
{
	new string[128], giveplayerid, day,month,year, hour, minute, second;
	gettime(hour,minute,second);
	getdate(day,month,year);
	if(sscanf(params, "r", giveplayerid)) return SendClientMessage(playerid, -1, "Para ver el ID de una persona, escribe /id [nombre_apellido]");
	else if (!IsPlayerConnected(giveplayerid)) SendClientMessage(playerid,COLOR_WHITE,"El jugador está conectado pero aún no ha ingresado al juego.");
	else
	{
		new score = GetPlayerScore(giveplayerid);
		if(score == 0) SendClientMessage(playerid, -1, "El jugador está conectado pero aún no ha ingresado al juego.");
		else
		{
		    if(giveplayerid == playerid)    {
			    format(string, sizeof(string), "El jugador {00CCFF}%s{FFFFFF} tiene el ID: {FF0000}%d{FFFFFF}. (Nivel: {e77d31}%d{FFFFFF})", PlayerName(giveplayerid), giveplayerid , PlayerInfo[giveplayerid][@Nivel]);
				SendClientMessage(playerid, -1, string);
				format(string, sizeof(string), "Detalles (Ping: %s | P: %.2f)", StringPing(playerid),NetStats_PacketLossPercent(playerid));
				SendClientMessage(playerid, -1, string);
		    }
			else if( giveplayerid != playerid)  {
				SendClientMessage(playerid,-1," ");
				format(string, sizeof(string),"{FFFFFF}Fecha y Hora Actual del Servidor: {DBED16}%02d/%02d/%02d %02d:%02d:%02d.", day,month,year,hour,minute,second);
				SendClientMessage(playerid,-1,string);
				format(string, sizeof(string), "El jugador {00CCFF}%s{FFFFFF} tiene el ID: {FF0000}%d{FFFFFF}. (Nivel: {e77d31}%d{FFFFFF})", PlayerName(giveplayerid), giveplayerid , PlayerInfo[giveplayerid][@Nivel]);
				SendClientMessage(playerid, -1, string);
				format(string, sizeof(string), "Detalles (Ping: %s | P: %.2f | Cod: {AFAFAF}#%d{FFFFFF} | Ping propio: %s)", StringPing(giveplayerid),NetStats_PacketLossPercent(giveplayerid),PlayerInfo[giveplayerid][pID]+245100,StringPing(playerid));
				SendClientMessage(playerid, -1, string);
			}
			new country[30],city[30];
			GetPlayerCountry(giveplayerid, country, sizeof(country));
			GetPlayerCity(giveplayerid, city, sizeof(city));
			format(string, 128, "País Registrado: {46e800}%s{FFFFFF} | Conectado desde: {46e800}%s{FFFFFF}",PlayerInfo[giveplayerid][pPaisRegistro],country, city);
			if(PlayerInfo[playerid][pAdmin] >= ADMIN_LEVEL_BANEOS) SendClientMessage(playerid,-1,string);
		}
	}
	return 1;
}
CMD:acomodar(playerid,params[])
{
	new opcion[15];
	if(!sscanf(params,"s[15]",opcion))
	{
	    if(strcmp(opcion,"prenda",true) == 0 || strcmp(opcion,"prendas",true) == 0)
	    {
           	AcomodarPrendass(playerid);
			return 1;
	    }
	}
	return true;
}
CMD:iniciar(playerid, params[])
{
	if(PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][pFaccion] == 1)
	{
		if(PlayerInfo[playerid][pRango] < 3)
		{
			return SendClientMessage(playerid, -1, "Necesitas ser mayor de rango 3.");
		}
		new id;
		if(sscanf(params,"d",id)) return SendClientMessage(playerid,-1,"Escribe {DBED16}/iniciar [id]");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,-1,"No se encontró ningún jugador.");
		if(!EnAcademia(id))
		{
			return SendClientMessage(playerid, -1, "Ese jugador no se encuentra en la academia.");
		}
		else
		{
		    SendClientMessage(playerid, -1, "Iniciaste el recorrido para ese jugador.");
		    SendClientMessage(id, -1, "Para iniciar el recorrido, ingresa al primer {FF3300}punto de control{FFFFFF} y continua a los siguientes.");
			DisablePlayerCheckpoint(id);
			SetPlayerCheckpoint(id, 635.3787,-222.2007,1276.7941, 3.0);
			EnPrueba[id] = true;
			return 1;
		}
	}
	return 1;
}

CMD:baul(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"No puedes utlizar este comando estando en un vehículo");
	new Float:x,Float:y,Float:z,Float:x2,Float:y2,Float:z2,Float:x3,Float:y3,Float:z3,Float:x4,Float:y4,Float:z4;
	new item[25],item2[25],id,pName[32],pName2[24],string[128],query[200],Float:Pos[3];
	GetPlayerName(VerBaul[playerid],pName,32);
	GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);

	if(!sscanf(params,"s[25]s[25]",item,item2))
	{
	    if(strcmp(item,	"guardar",	true) == 0)
		{
			if(VariableCaido[playerid] == 1 || PlayerInfo[playerid][Agonizando] == 1) return 1;
			if(VerBaul[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid,-1,"El ultimo baul que has revisado se encuentra muy lejos");
			GetVehiclePos(autos[VerBaul[playerid]],x,y,z);
			GetVehiclePos(autos2[VerBaul[playerid]],x2,y2,z2);
			GetVehiclePos(autos3[VerBaul[playerid]],x3,y3,z3);
			GetVehiclePos(autos4[VerBaul[playerid]],x4,y4,z4);
			GetPlayerName(playerid,pName2,24);

            new t_o, veh_c,autoid_slot;

			if(IsPlayerInRangeOfPoint(playerid, 4.0,x,y,z)) { veh_c = autos[VerBaul[playerid]]; autoid_slot = 1; }
			else if(IsPlayerInRangeOfPoint(playerid, 4.0,x2,y2,z2)) { veh_c = autos2[VerBaul[playerid]]; autoid_slot = 2; }
			else if(IsPlayerInRangeOfPoint(playerid, 4.0,x3,y3,z3)) { veh_c = autos3[VerBaul[playerid]]; autoid_slot = 3; }
			else if(IsPlayerInRangeOfPoint(playerid, 4.0,x4,y4,z4)) { veh_c = autos4[VerBaul[playerid]]; autoid_slot = 4; }
			else return 1;

			if(strcmp(item2,		"bidon",	true) == 0) 				t_o = 1650; //
			else if(strcmp(item2,   "objeto",   true) == 0)                 t_o = Objeto[playerid];
			else if(strcmp(item2,	"manopla",	true) == 0) 				t_o = 1;  //
			else if(strcmp(item2,	"palo-de-golf",	true) == 0) 			t_o = 2;  //
			else if(strcmp(item2,	"cuchillo",	true) == 0) 				t_o = 4;  //
			else if(strcmp(item2,	"bate-de-beisbol",	true) == 0) 		t_o = 5;  //
			else if(strcmp(item2,	"palo-de-billar",	true) == 0) 		t_o = 7;  //
			else if(strcmp(item2,	"katana",	true) == 0) 				t_o = 8;  //
			else if(strcmp(item2,	"consolador-rosa",	true) == 0) 		t_o = 10; //
			else if(strcmp(item2,	"vibrador-blanco",	true) == 0) 		t_o = 11; //
			else if(strcmp(item2,	"gran-vibrador-blanco",	true) == 0) 	t_o = 12; //
			else if(strcmp(item2,	"vibrador-plateado",	true) == 0) 	t_o = 13; //
			else if(strcmp(item2,	"ramo-de-flores",	true) == 0) 		t_o = 14; //
			else if(strcmp(item2,	"baston",	true) == 0) 				t_o = 15; //
			else if(strcmp(item2,	"camara",	true) == 0) 				t_o = 43; //
			else if(strcmp(item2,	"desert-eagle",	true) == 0) 			t_o = 24; //
			else if(strcmp(item2,	"escopeta",	true) == 0) 				t_o = 25; //
			else if(strcmp(item2,	"escopeta-de-combate",	true) == 0) 	t_o = 27; //
			else if(strcmp(item2,	"pala",	true) == 0) 					t_o = 6;  //
			else if(strcmp(item2,	"mp5",	true) == 0) 					t_o = 29; //
			else if(strcmp(item2,	"granada",	true) == 0) 				t_o = 16; //
			else if(strcmp(item2,	"9mm",	true) == 0) 					t_o = 22; //
			else if(strcmp(item2,	"9mm-silenciada",	true) == 0) 		t_o = 23; //
			else if(strcmp(item2,	"ak-47",	true) == 0) 				t_o = 30; //
			else if(strcmp(item2,	"m4",	true) == 0) 					t_o = 31; //
			else if(strcmp(item2,	"rifle",	true) == 0) 				t_o = 33; //
			else return SendClientMessage(playerid,-1,"SERVER: Unknown Command");

			if(t_o == 1650 && Bidon[playerid] == 0)            		return SendClientMessage(playerid,-1,"Tu no tienes un bidón de gasolina");
			else if(t_o == Objeto[playerid] && Objeto[playerid] == 0) return SendClientMessage(playerid,-1,"No tienes ningun objeto para guardar");
			else if(t_o == 22 && PlayerInfo[playerid][pWP2] != 22)  return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 27 && PlayerInfo[playerid][pWP3] != 27)  return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 31 && PlayerInfo[playerid][pWP5] != 31)  return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 33 && PlayerInfo[playerid][pWP6] != 33)  return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 25 && PlayerInfo[playerid][pWP3] != 25)  return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 5  && PlayerInfo[playerid][pWP1] != 5)   return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 30 && PlayerInfo[playerid][pWP5] != 30)  return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 23 && PlayerInfo[playerid][pWP2] != 23)  return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 16 && PlayerInfo[playerid][pWP4] != 16)  return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 29 && PlayerInfo[playerid][pWP4] != 29)  return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 6  && PlayerInfo[playerid][pWP1] != 6)   return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 24 && PlayerInfo[playerid][pWP2] != 24)  return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 1  && PlayerInfo[playerid][pWP0] != 1)   return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 2  && PlayerInfo[playerid][pWP1] != 2)   return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 4  && PlayerInfo[playerid][pWP1] != 4)   return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 5  && PlayerInfo[playerid][pWP1] != 5)   return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 7  && PlayerInfo[playerid][pWP1] != 7)   return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 8  && PlayerInfo[playerid][pWP1] != 8)   return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 10 && PlayerInfo[playerid][pWP10] != 10) return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 11 && PlayerInfo[playerid][pWP10] != 11) return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 12 && PlayerInfo[playerid][pWP10] != 12) return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 13 && PlayerInfo[playerid][pWP10] != 13) return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 14 && PlayerInfo[playerid][pWP10] != 14) return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 15 && PlayerInfo[playerid][pWP10] != 15) return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");
			else if(t_o == 43 && PlayerInfo[playerid][pWP9] != 43)  return SendClientMessage(playerid, -1, "Tu no tienes esta arma para guardar");

            if(t_o == 1 || t_o == 4 || t_o == 8 || t_o == 24 || t_o == 25 || t_o == 27 || t_o == 29 || t_o == 16 || t_o == 22 || t_o == 23 || t_o == 30 || t_o == 31 || t_o == 33)
            {
				if(PlayerInfo[playerid][pCargos] > 2)
				{
					for(new i=0;i<MAX_PLAYERS;i++)
					{
						if(PlayerInfo[i][pDuty] == 1) {	if(IsPlayerInRangeOfPoint(i,50.0,Pos[0],Pos[1],Pos[2])) return SendClientMessage(playerid,-1,"No puedes guardar un arma si la policía te está viendo."); }
					}
				}
			}
			if(MOTO(veh_c) && PlayerInfo[playerid][pVip] == 0) return 1;
			if(EspacioBaul[veh_c] == 0)
			{
			    EspacioBaul[veh_c] = t_o;
				format(query, 200, "UPDATE `p_vehicles` SET `vBaul`='%d' WHERE `Propietario`='%d' AND `Slot` = '%d'",t_o,PlayerInfo[playerid][pID],autoid_slot);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				MensajeBaulGuardar(playerid,t_o);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				RemovePlayerAttachedObject(playerid,2);
				return 1;
			}
			if(MOTO(veh_c) && PlayerInfo[playerid][pVip] != 2) return 1;
			else if(EspacioBaul2[veh_c] == 0)
			{
                EspacioBaul2[veh_c] = t_o;
				format(query, 200, "UPDATE `p_vehicles` SET `vBaul2`='%d' WHERE `Propietario`='%d' AND `Slot` = '%d'",t_o,PlayerInfo[playerid][pID],autoid_slot);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				MensajeBaulGuardar(playerid,t_o);
				return 1;
			}
			if(MOTO(veh_c)) return 1;
			else if(EspacioBaul3[veh_c] == 0)
			{
                EspacioBaul3[veh_c] = t_o;
				format(query, 200, "UPDATE `p_vehicles` SET `vBaul3`='%d' WHERE `Propietario`='%d' AND `Slot` = '%d'",t_o,PlayerInfo[playerid][pID],autoid_slot);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				RemovePlayerAttachedObject(playerid,2);
				MensajeBaulGuardar(playerid,t_o);
				return 1;
			}
			else if(EspacioBaul4[veh_c] == 0)
			{
                EspacioBaul4[veh_c] = t_o;
				format(query, 200, "UPDATE `p_vehicles` SET `vBaul4`='%d' WHERE `Propietario`='%d' AND `Slot` = '%d'",t_o,PlayerInfo[playerid][pID],autoid_slot);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				RemovePlayerAttachedObject(playerid,2);
				MensajeBaulGuardar(playerid,t_o);
				return 1;
			}
			else if(!BAUL6(veh_c) && !BAUL8(veh_c) && PlayerInfo[playerid][pVip] == 0) return SendClientMessage(playerid,-1,"Este vehículo no tiene espacios en el maletero");
			else if(EspacioBaul5[veh_c] == 0)
			{
                EspacioBaul5[veh_c] = t_o;
				format(query, 200, "UPDATE `p_vehicles` SET `vBaul5`='%d' WHERE `Username`='%d' AND `Slot` = '%d'",t_o,PlayerInfo[playerid][pID],autoid_slot);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				RemovePlayerAttachedObject(playerid,2);
				MensajeBaulGuardar(playerid,t_o);
				return 1;
			}
			else if(EspacioBaul6[veh_c] == 0)
			{
                EspacioBaul6[veh_c] = t_o;
				format(query, 200, "UPDATE `p_vehicles` SET `vBaul6`='%d' WHERE `Propietario`='%d' AND `Slot` = '%d'",t_o,PlayerInfo[playerid][pID],autoid_slot);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				RemovePlayerAttachedObject(playerid,2);
				MensajeBaulGuardar(playerid,t_o);
				return 1;
			}
			else if(!BAUL8(veh_c) && PlayerInfo[playerid][pVip] == 0) return SendClientMessage(playerid,-1,"Este vehículo no tiene espacios en el maletero");
			else if(EspacioBaul7[veh_c] == 0)
			{
                EspacioBaul7[veh_c] = t_o;
				format(query, 200, "UPDATE `p_vehicles` SET `vBaul7`='%d' WHERE `Username`='%d' AND `Slot` = '%d'",t_o,PlayerInfo[playerid][pID],autoid_slot);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				RemovePlayerAttachedObject(playerid,2);
				MensajeBaulGuardar(playerid,t_o);
				return 1;
			}
			else if(EspacioBaul8[veh_c] == 0)
			{
                EspacioBaul8[veh_c] = t_o;
				format(query, 200, "UPDATE `p_vehicles` SET `vBaul8`='%d' WHERE `Propietario`='%d' AND `Slot` = '%d'",t_o,PlayerInfo[playerid][pID],autoid_slot);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				RemovePlayerAttachedObject(playerid,2);
				MensajeBaulGuardar(playerid,t_o);
				return 1;
			}
			else if(PlayerInfo[playerid][pVip] == 0) return 1;
			else if(EspacioBaul9[veh_c] == 0)
			{
                EspacioBaul7[veh_c] = t_o;
				format(query, 200, "UPDATE `p_vehicles` SET `vBaul9`='%d' WHERE `Propietario`='%d' AND `Slot` = '%d'",t_o,PlayerInfo[playerid][pID],autoid_slot);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				RemovePlayerAttachedObject(playerid,2);
				MensajeBaulGuardar(playerid,t_o);
				return 1;
			}
			else if(PlayerInfo[playerid][pVip] == 1) return 1;
			else if(EspacioBaul10[veh_c] == 0)
			{
                EspacioBaul8[veh_c] = t_o;
				format(query, 200, "UPDATE `p_vehicles` SET `vBaul10`='%d' WHERE `Propietario`='%d' AND `Slot` = '%d'",t_o,PlayerInfo[playerid][pID],autoid_slot);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				RemovePlayerAttachedObject(playerid,2);
				MensajeBaulGuardar(playerid,t_o);
				return 1;
			}
    	}
	}
	if(!sscanf(params,"s[32]d",item,id))
	{
		if(strcmp(item,	"sacar",	true) == 0)
		{
			GetVehiclePos(autos[VerBaul[playerid]],x,y,z);
			GetVehiclePos(autos2[VerBaul[playerid]],x2,y2,z2);
			GetVehiclePos(autos3[VerBaul[playerid]],x3,y3,z3);
			GetVehiclePos(autos4[VerBaul[playerid]],x4,y4,z4);
			GetPlayerName(playerid,pName2,24);
			if(VerBaul[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid,-1,"El ultimo baul que has revisado se encuentra muy lejos");
			new veh_c, auto_slot;
			if(IsPlayerInRangeOfPoint(playerid, 4.0,x,y,z)) { veh_c = autos[VerBaul[playerid]]; auto_slot = 1; }
			else if(IsPlayerInRangeOfPoint(playerid, 4.0,x2,y2,z2)) { veh_c = autos2[VerBaul[playerid]]; auto_slot = 2; }
			else if(IsPlayerInRangeOfPoint(playerid, 4.0,x3,y3,z3)) { veh_c = autos3[VerBaul[playerid]]; auto_slot = 3; }
			else if(IsPlayerInRangeOfPoint(playerid, 4.0,x4,y4,z4)) { veh_c = autos4[VerBaul[playerid]]; auto_slot = 4; }
			else return 1;

			if(MOTO(veh_c) && PlayerInfo[playerid][pVip] == 0) return 1;
            if(id == 1)
			{
			    if(EspacioBaul[veh_c] == 0) return SendClientMessage(playerid,-1,"Este espacio esta vacío");
			    if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Tienes un objeto en tus manos.");
                MensajeBaulSacar(playerid,EspacioBaul[veh_c]);
                EspacioBaul[veh_c] = 0;
                format(query, 200, "UPDATE `p_vehicles` SET `vBaul`='0' WHERE `Propietario`='%d' AND `Slot` = '%d'",PlayerInfo[playerid][pID],auto_slot);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			if(MOTO(veh_c) && PlayerInfo[playerid][pVip] == 1) return 1;
			else if(id == 2)
			{
			    if(EspacioBaul2[veh_c] == 0) return SendClientMessage(playerid,-1,"Este espacio esta vacío");
			    if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Tienes un objeto en tus manos.");
                MensajeBaulSacar(playerid,EspacioBaul2[veh_c]);
                EspacioBaul2[veh_c] = 0;
                format(query, 200, "UPDATE `p_vehicles` SET `vBaul2`='0' WHERE `Propietario`='%d' AND `Slot` = '%d'",PlayerInfo[playerid][pID],auto_slot);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			if(MOTO(veh_c) && PlayerInfo[playerid][pVip] == 2) return 1;
			else if(id == 3)
			{
			    if(EspacioBaul3[veh_c] == 0) return SendClientMessage(playerid,-1,"Este espacio esta vacío");
			    if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Tienes un objeto en tus manos.");
                MensajeBaulSacar(playerid,EspacioBaul3[veh_c]);
                EspacioBaul3[veh_c] = 0;
                format(query, 200, "UPDATE `p_vehicles` SET `vBaul3`='0' WHERE `Propietario`='%d' AND `Slot` = '%d'",PlayerInfo[playerid][pID],auto_slot);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			else if(id == 4)
			{
			    if(EspacioBaul4[veh_c] == 0) return SendClientMessage(playerid,-1,"Este espacio esta vacío");
			    if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Tienes un objeto en tus manos.");
                MensajeBaulSacar(playerid,EspacioBaul4[veh_c]);
                EspacioBaul4[veh_c] = 0;
                format(query, 200, "UPDATE `p_vehicles` SET `vBaul4`='0' WHERE `Propietario`='%d' AND `Slot` = '%d'",PlayerInfo[playerid][pID],auto_slot);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			else if(!BAUL6(veh_c) && !BAUL8(veh_c)) return 1;
			else if(id == 5)
			{
			    if(EspacioBaul5[veh_c] == 0) return SendClientMessage(playerid,-1,"Este espacio esta vacío");
			    if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Tienes un objeto en tus manos.");
                MensajeBaulSacar(playerid,EspacioBaul5[veh_c]);
                EspacioBaul5[veh_c] = 0;
                format(query, 200, "UPDATE `p_vehicles` SET `vBaul5`='0' WHERE `Propietario`='%d' AND `Slot` = '%d'",PlayerInfo[playerid][pID],auto_slot);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			else if(id == 6)
			{
				if(EspacioBaul6[veh_c] == 0) return SendClientMessage(playerid,-1,"Este espacio esta vacío");
			    if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Tienes un objeto en tus manos.");
                MensajeBaulSacar(playerid,EspacioBaul6[veh_c]);
                EspacioBaul6[veh_c] = 0;
                format(query, 200, "UPDATE `p_vehicles` SET `vBaul6`='0' WHERE `Propietario`='%d' AND `Slot` = '%d'",PlayerInfo[playerid][pID],auto_slot);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			else if(!BAUL8(veh_c)) return 1;
			else if(id == 7)
			{
			    if(EspacioBaul7[veh_c] == 0) return SendClientMessage(playerid,-1,"Este espacio esta vacío");
			    if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Tienes un objeto en tus manos.");
                MensajeBaulSacar(playerid,EspacioBaul7[veh_c]);
                EspacioBaul7[veh_c] = 0;
                format(query, 200, "UPDATE `p_vehicles` SET `vBaul7`='0' WHERE `Propietario`='%d' AND `Slot` = '%d'",PlayerInfo[playerid][pID],auto_slot);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			else if(id == 8)
			{
			    if(EspacioBaul8[veh_c] == 0) return SendClientMessage(playerid,-1,"Este espacio esta vacío");
			    if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Tienes un objeto en tus manos.");
                MensajeBaulSacar(playerid,EspacioBaul8[veh_c]);
                EspacioBaul8[veh_c] = 0;
                format(query, 200, "UPDATE `p_vehicles` SET `vBaul8`='0' WHERE `Propietario`='%d' AND `Slot` = '%d'",PlayerInfo[playerid][pID],auto_slot);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			else if(PlayerInfo[playerid][pVip] == 0) return 1;
			else if(id == 9)
			{
			    if(EspacioBaul9[veh_c] == 0) return SendClientMessage(playerid,-1,"Este espacio esta vacío");
			    if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Tienes un objeto en tus manos.");
                MensajeBaulSacar(playerid,EspacioBaul9[veh_c]);
                EspacioBaul9[veh_c] = 0;
                format(query, 200, "UPDATE `p_vehicles` SET `vBaul9`='0' WHERE `Propietario`='%d' AND `Slot` = '%d'",PlayerInfo[playerid][pID],auto_slot);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			else if(id == 10)
			{
			    if(EspacioBaul10[veh_c] == 0) return SendClientMessage(playerid,-1,"Este espacio esta vacío");
			    if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Tienes un objeto en tus manos.");
                MensajeBaulSacar(playerid,EspacioBaul10[veh_c]);
                EspacioBaul10[veh_c] = 0;
                format(query, 200, "UPDATE `p_vehicles` SET `vBaul10`='0' WHERE `Propietario`='%d' AND ``Slot` = '%d'",PlayerInfo[playerid][pID],auto_slot);
				mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			return 1;
		}
	}
	else if(!sscanf(params,"d",id))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,-1,"Jugador desconectado.");
		if(PlayerInfo[playerid][@Nivel] < 3) return SendClientMessage(playerid,-1,"Necesitas ser nivel 3 para revisar el baul de otro jugador.");
		new Float:CPos[3],Float:CPos2[3],Float:CPos3[3],Float:CPos4[3];
		GetPlayerName(playerid,pName2,24);
		GetVehiclePos(autos[id], CPos[0],CPos[1],CPos[2]);
		GetVehiclePos(autos2[id], CPos2[0],CPos2[1],CPos2[2]);
		GetVehiclePos(autos3[id], CPos3[0],CPos3[1],CPos3[2]);
		GetVehiclePos(autos4[id], CPos4[0],CPos4[1],CPos4[2]);
		if(IsPlayerInRangeOfPoint(playerid, 4.0,CPos[0],CPos[1],CPos[2]))
		{
			if(Baul[autos[id]] == 1)
			{
				if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"No puedes utilizar este comando estando en un vehículo.");
				AccionesRol(playerid,"comenzó a revisar el baúl.", 20);
				SetTimerEx("Revisado",6000,false,"dd",playerid,id);
				VarBaul[playerid] = 0;
				BaulPB[playerid] = SetTimerEx("TiempoBaulBar",1000,true,"d",playerid);
				GameTextForPlayer(playerid,"~<~ Revisando baul ~>~", 10000, 5);
			}
			else return SendClientMessage(playerid,-1,"El baul del vehículo esta cerrado.");
		}
		else if(IsPlayerInRangeOfPoint(playerid,4.0,CPos2[0],CPos2[1],CPos2[2]))
		{
			if(Baul[autos2[id]] == 1)
			{
				if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"No puedes utilizar este comando estando en un vehículo.");
				AccionesRol(playerid,"comenzó a revisar el baúl.", 20);
				SetTimerEx("Revisado",6000,false,"dd",playerid,id);
				VarBaul[playerid] = 0;
				BaulPB[playerid] = SetTimerEx("TiempoBaulBar",1000,true,"d",playerid);
				GameTextForPlayer(playerid,"~<~ Revisando baul ~>~", 10000, 5);
			}
			else return SendClientMessage(playerid,-1,"El baul de este vehículo esta cerrado.");
		}
		else if(IsPlayerInRangeOfPoint(playerid,4.0,CPos3[0],CPos3[1],CPos3[2]))
		{
			if(Baul[autos3[id]] == 1)
			{
				if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"No puedes utilizar este comando estando en un vehículo.");
				AccionesRol(playerid,"comenzó a revisar el baúl.", 20);
				SetTimerEx("Revisado",6000,false,"dd",playerid,id);
				VarBaul[playerid] = 0;
				BaulPB[playerid] = SetTimerEx("TiempoBaulBar",1000,true,"d",playerid);
				GameTextForPlayer(playerid,"~<~ Revisando baul ~>~", 10000, 5);
			}
			else return SendClientMessage(playerid,-1,"El baul de este vehículo esta cerrado.");
		}
		else if(IsPlayerInRangeOfPoint(playerid,4.0,CPos4[0],CPos4[1],CPos4[2]))
		{
			if(Baul[autos4[id]] == 1)
			{
				if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,-1,"No puedes utilizar este comando estando en un vehículo.");
				AccionesRol(playerid,"comenzó a revisar el baúl.", 20);
				SetTimerEx("Revisado",6000,false,"dd",playerid,id);
				VarBaul[playerid] = 0;
				BaulPB[playerid] = SetTimerEx("TiempoBaulBar",1000,true,"d",playerid);
				GameTextForPlayer(playerid,"~<~ Revisando baul ~>~", 10000, 5);
			}
			else return SendClientMessage(playerid,-1,"El baul de este vehículo esta cerrado.");
		}
		else return SendClientMessage(playerid, -1, "No estas cerca del vehiculo.");
	}
	else
	{
	    new var;
		GetVehiclePos(autos[playerid],x,y,z);
		GetVehiclePos(autos2[playerid],x2,y2,z2);
		GetVehiclePos(autos3[playerid],x3,y3,z3);
		GetVehiclePos(autos4[playerid],x4,y4,z4);
		if(IsPlayerInRangeOfPoint(playerid, 4.0,x,y,z)) var = autos[playerid];
		else if(IsPlayerInRangeOfPoint(playerid, 4.0,x2,y2,z2)) var = autos2[playerid];
		else if(IsPlayerInRangeOfPoint(playerid, 4.0,x3,y3,z3)) var = autos3[playerid];
		else if(IsPlayerInRangeOfPoint(playerid, 4.0,x4,y4,z4)) var = autos4[playerid];
		else return SendClientMessage(playerid, -1, "No estas cerca de tu vehiculo.");
		if(Baul[var] == 1)
		{
			if(MOTO(var) && PlayerInfo[playerid][pVip] == 1)
			{
				AccionesRol(playerid,"revisa el interior de su baúl.", 20);
				format(string, 500, "{DBED16}Maletero{FFFFFF}:");
				SendClientMessage(playerid, 0xAFAFAFFF, string);
				format(string, 500, "Lugar {DBED16}1{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul[var]));
				SendClientMessage(playerid, 0xAFAFAFFF,string);
				VerBaul[playerid] = playerid;
				return 1;
			}
			else if(MOTO(var) && PlayerInfo[playerid][pVip] == 2)
			{
				AccionesRol(playerid,"revisa el interior de su baúl.", 20);
				format(string, 500, "{DBED16}Maletero{FFFFFF}:");
				SendClientMessage(playerid, 0xAFAFAFFF, string);
				format(string, 500, "Lugar {DBED16}1{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}2{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul[var]),GetWeaponNameEx(EspacioBaul2[var]));
				SendClientMessage(playerid, 0xAFAFAFFF,string);
				VerBaul[playerid] = playerid;
				return 1;
			}
			else
			{
			    AccionesRol(playerid,"revisa el interior de su baúl.", 20);
				format(string, 500, "{DBED16}Maletero{FFFFFF}:");
				SendClientMessage(playerid, 0xAFAFAFFF, string);
				format(string, 500, "Lugar {DBED16}1{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}2{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul[var]),GetWeaponNameEx(EspacioBaul2[var]));
				SendClientMessage(playerid, 0xAFAFAFFF,string);
				format(string, 500, "Lugar {DBED16}3{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}4{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul3[var]),GetWeaponNameEx(EspacioBaul4[var]));
				SendClientMessage(playerid, 0xAFAFAFFF,string);
				VerBaul[playerid] = playerid;
				if(BAUL6(var) || BAUL8(var))
				{
					format(string, 500, "Lugar {DBED16}5{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}6{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul5[var]),GetWeaponNameEx(EspacioBaul6[var]));
					SendClientMessage(playerid, 0xAFAFAFFF,string);
					if(!BAUL8(var)) return 1;
				}
				if(BAUL8(var))
				{
					format(string, 500, "Lugar {DBED16}7{FFFFFF}: %s {AFAFAF}| Lugar {DBED16}8{FFFFFF}: %s",GetWeaponNameEx(EspacioBaul7[var]),GetWeaponNameEx(EspacioBaul8[var]));
					SendClientMessage(playerid, 0xAFAFAFFF,string);
					return 1;
				}
			}
		}
		else return SendClientMessage(playerid,-1,"El baul de tu vehículo esta cerrado.");
	}
	return 1;
}
CMD:disarm(playerid,params[])
{
	new id;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if(!sscanf(params,"d",id))
	{
	    if(IsPlayerNPC(id)) return 1;
		QuitarArmas2(id);
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/disarm {FFFFFF}<PlayerID>");
	return 1;
}
CMD:cgf(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
    if(!sscanf(params,"d",params[0]))
    {
		new Float:Pos[4],p = params[0],string[500];
		GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
		GetPlayerFacingAngle(playerid,Pos[3]);

        if(Fabricas[p][pEnUso] == 1)
		{
		    if(Fabricas[p][pEntradaGX] == 0)
		    {
		        Fabricas[p][pEntradaGX] = Pos[0];
		        Fabricas[p][pEntradaGY] = Pos[1];
		        Fabricas[p][pEntradaGZ] = Pos[2];
		        Fabricas[p][pEntradaGA] = Pos[3];

		        format(string,sizeof(string),"Creaste un garaje a la fabrica con id: {DBED16}%d",p);
				SendClientMessage(playerid,-1,string);

				format(string,sizeof(string),"UPDATE `fabricas` SET `GarajeE_X`='%f',`GarajeE_Y`='%f',`GarajeE_Z`='%f',`GarajeE_A`='%f' WHERE `ID`='%d'",
				Fabricas[p][pEntradaGX],
				Fabricas[p][pEntradaGY],
				Fabricas[p][pEntradaGZ],
				Fabricas[p][pEntradaGA],
				Fabricas[p][pID]);
				mysql_function_query(Conecction,string,true,"","");
				BorrarPuntosFabrica(p);
				CargarFabricass(p);
			}
			else SendClientMessage(playerid,-1,"Esa fabrica ya tiene un garage.");
        }
        else return 1;
    }
    else SendClientMessage(playerid,-1,"Escribe {DBED16}/cgf {FFFFFF}<FabricaID>");
	return true;
}
CMD:cg(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
    if(!sscanf(params,"d",params[0]))
    {
		new Float:Pos[4],p = params[0],string[500];
		GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
		GetPlayerFacingAngle(playerid,Pos[3]);
		if(PropInfo[p][pEnUso] == 1)
		{
		    if(PropInfo[p][pGX] == 0)
		    {
		        PropInfo[p][pGX] = Pos[0];
		        PropInfo[p][pGY] = Pos[1];
		        PropInfo[p][pGZ] = Pos[2];
		        PropInfo[p][pGA] = Pos[3];
		        format(string,sizeof(string),"Creaste un garaje a la casa con id: {DBED16}%d",p);
				SendClientMessage(playerid,-1,string);
				format(string,sizeof(string),"UPDATE `propiedades` SET `GX`='%f',`GY`='%f',`GZ`='%f',`GA`='%f' WHERE `ID`='%d'",
				PropInfo[p][pGX],
				PropInfo[p][pGY],
				PropInfo[p][pGZ],
				PropInfo[p][pGA],
				PropInfo[p][pID]);
				mysql_function_query(Conecction,string,true,"","");
				BorrarLabelCasa(p);
				CargarPropiedad(p);
		    }
		    else SendClientMessage(playerid,-1,"Esa propiedad ya tiene un garage.");
		}
		else SendClientMessage(playerid,-1,"Esa propiedad no existe.");
    }
    else SendClientMessage(playerid,-1,"Escribe {DBED16}/cgarage {FFFFFF}<CasaID>");
	return true;
}
CMD:centrada(playerid,params[])
{
	new casa,string[70];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	if(sscanf(params, "d", casa))return SendClientMessage(playerid,COLOR_GRAD2,"Uso /centrada [ID]");
	{
	    if(PropInfo[casa][pEnUso] == 1)
		{
			new Float:X,Float:Y,Float:Z,Float:A;
 			GetPlayerPos(playerid, X,Y,Z);
			GetPlayerFacingAngle(playerid,A);
			PropInfo[casa][pPosX] = X;
			PropInfo[casa][pPosY] = Y;
			PropInfo[casa][pPosZ] = Z;
			PropInfo[casa][pPosA] = A;
			BorrarLabelCasa(casa);
			GuardarPropiedad(casa);
	    	CargarPropiedad(casa);
			format(string,sizeof(string),"Editaste la entrada de la casa con id: {DBED15}%d", casa);
			SendClientMessage(playerid,-1,string);
		}
	    else SendClientMessage(playerid,-1,"Esa propiedad no existe.");
	}
	return 1;
}

CMD:ecasa(playerid,params[])
{
	new Query[200], casa, string[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_GLOBAL) return 0;
	if(sscanf(params, "d", casa)) return SendClientMessage(playerid,COLOR_GRAD2,"Uso /ecasa [ID]");
	{
	    if(PropInfo[casa][pEnUso] == 1)
		{
			format(Query,sizeof(Query),"DELETE FROM `propiedades` WHERE ID = '%d'",casa);
			mysql_function_query(Conecction,Query,true,"","");
			PropInfo[casa][pEnVenta] = -1;
			PropInfo[casa][pEnUso] = 0;
			BorrarLabelCasa(casa);
	 		format(string,128,"La casa (ID:%d) fue eliminada.",casa);
			SendClientMessage(playerid,-1,string);
		}
	}
	return 1;
}

CMD:dc(playerid,params[])
{
	new Query[520], casa, string[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	if(sscanf(params, "d", casa)) return SendClientMessage(playerid,COLOR_GRAD2,"Uso /dc [ID]");
	{
		format(Query,sizeof(Query),"UPDATE `usuarios` SET `CasaID`='0', `CasaID2` = '0',`Moneda`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][Moneda],PlayerName(casa));
		mysql_function_query(Conecction,Query,true,"","");
		PropInfo[casa][pEnVenta] = 1;
		format(PropInfo[casa][pPropietario],40,"Nadie");
		PropInfo[casa][pAbierta] = 1;
		PropInfo[casa][pRoperoAbierto] = 0;
		PropInfo[casa][pIDPropietario] = 0;
		format(Query,sizeof(Query),"UPDATE `propiedades` SET `Propietario`='Nadie',`IDPropietario`='0',`EnVenta`='1',`EnUso`='1' WHERE `ID`='%d'",casa);
		mysql_function_query(Conecction,Query,true,"","");
		BorrarLabelCasa(casa);
		GuardarPropiedad(casa);
		CargarPropiedad(casa);
 		format(string,128,"La casa (ID:%d) fue desocupada",casa);
		SendClientMessage(playerid,-1,string);
	}
	return 1;
}
CMD:hcreate(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return 1;
	new precio,nivel,moneda,Float:Pos[4],query[600],interior;
	if(!sscanf(params,"dddd",precio,nivel,moneda,interior))
	{
	    new zone[MAX_ZONE_NAME];
		GetPlayer3DZone(playerid, zone, sizeof(zone));

	    if(interior <= 0 || interior > 43 || interior == 39) return SendClientMessage(playerid,-1,"Ese interior es inválido.");
	    new id = CasaDesocupada();
	    if(id == -1) return SendClientMessage(playerid,-1,"No se puede crear mas propiedades.");
	    GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
	    GetPlayerFacingAngle(playerid,Pos[3]);
        if(IsPlayerInRangeOfPoint(playerid,700.0,727.1412,-3320.2461,5.8700)) format(zone, sizeof(zone), "Isla Santa Carolina");
		format(query,sizeof(query),"INSERT INTO `propiedades` (`ID`,`Localizacion`,`PosX`,`PosY`,`PosZ`,`PosA`,`Interior`,`VW`,`Propietario`,`EnUso`) VALUES ('%d','%s','%f','%f','%f','%f','%d','%d','Nadie','1')", id, zone, Pos[0], Pos[1], Pos[2], Pos[3]+180, interior, id+1);
		mysql_function_query(Conecction,query,true,"","");

		PropInfo[id][pEnUso] = 1;
		DarInteriorCasa(id,interior);
		PropInfo[id][pEnVenta] = 1;
		PropInfo[id][pPrecio] = precio;
		PropInfo[id][pNivel] = nivel;
		PropInfo[id][pEnVentaPor] = moneda;
		if(interior == 40) PropInfo[id][pTipo] = 2;
		else if(interior == 41) PropInfo[id][pTipo] = 3;
		else if(interior == 43) PropInfo[id][pTipo] = 4;
		else PropInfo[id][pTipo] = 1;
		PropInfo[id][pPosX] = Pos[0];
		PropInfo[id][pPosY] = Pos[1];
		PropInfo[id][pPosZ] = Pos[2];
		PropInfo[id][pPosA] = Pos[3];
		PropInfo[id][pAbierta] = 1;
		PropInfo[id][pRoperoAbierto] = 0;
		PropInfo[id][pID] = id;
		PropInfo[id][pVW] = id+1;
		format(PropInfo[id][pPropietario],40,"Nadie");
		format(PropInfo[id][pLocalizacion],80,zone);
		PropInfo[id][pInterior] = interior;
		CargarPropiedad(id);
		GuardarPropiedad(id);
		if(moneda == 0)	format(query,sizeof(query),"Creaste la casa ID: {DBED16}%d (Precio: {00CC00}$%s{DBED16}) {FFFFFF}-{DBED16} (Interior: %d).",id,Numeros(precio),interior);
		else			format(query,sizeof(query),"Creaste la casa ID: {DBED16}%d (Precio: %d "SERVER_COIN") {FFFFFF}-{DBED16} (Interior: %d).",id,precio,interior);
		SendClientMessage(playerid,-1,query);

		format(query,sizeof(query),"Escribe {DBED16}/cg %d{FFFFFF} para crear el garaje. Recuerda mirar para el lado del portón.", id);
		SendClientMessage(playerid,-1,query);
	}
	else SendClientMessage(playerid,-1,"Escribe {DBED16}/hcrear <Precio> <Nivel> <Moneda> <Interior>");
	return true;
}
CMD:fcrear(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_GLOBAL) return 0;
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return 1;
	new precio,moneda,Float:Pos[4],query[600];
	if(!sscanf(params,"dd",precio,moneda))
	{
	    new zone[MAX_ZONE_NAME];
		GetPlayer3DZone(playerid, zone, sizeof(zone));
	    new id = FabricaDesocupada();
	    if(id == -1) return SendClientMessage(playerid,-1,"No se puede crear mas Fábricas.");
        new interior = id+1;
	    GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
	    GetPlayerFacingAngle(playerid,Pos[3]);
		format(query,sizeof(query),"INSERT INTO `fabricas` (`ID`,`Localizacion`,`EntradaX`,`EntradaY`,`EntradaZ`,`EntradaA`,`Interior`,`VW`,`EnVenta`,`EnUso`) VALUES ('%d','%s','%f','%f','%f','%f','%d','%d','1','1')", id, zone, Pos[0], Pos[1], Pos[2], Pos[3], interior, id+1);
		mysql_function_query(Conecction,query,true,"","");
		DarInteriorFabrica(id);
    	Fabricas[id][pEnUso] = 1;
		Fabricas[id][pValor] = precio;
		Fabricas[id][pEnVentaPor] = moneda;
		Fabricas[id][pEntradaX] = Pos[0];
		Fabricas[id][pEntradaY] = Pos[1];
		Fabricas[id][pEntradaZ] = Pos[2];
		Fabricas[id][pEntradaA] = Pos[3];
		Fabricas[id][pID] = id;
		Fabricas[id][pVW] = id+1;
		Fabricas[id][pInt] = id+1;
		format(Fabricas[id][pLocalizacion],80,zone);
		CargarFabricass(id);
		GuardarFabrica(id);
		if(moneda == 0)	format(query,sizeof(query),"Creaste la fábrica ID: {DBED16}%d (Precio: {00CC00}$%s{DBED16}) {FFFFFF}-{DBED16}.",id,Numeros(precio));
		else format(query,sizeof(query),"Creaste la fábrica ID: {DBED16}%d (Precio: %d "SERVER_COIN") {FFFFFF}-{DBED16}.",id,precio);
		SendClientMessage(playerid,-1,query);

		format(query,sizeof(query),"Escribe {DBED16}/cgf %d{FFFFFF} para crear el garaje. Recuerda mirar para el lado del portón.", id);
		SendClientMessage(playerid,-1,query);
	}
	else SendClientMessage(playerid,-1,"Escribe {DBED16}/fcrear <Precio> <Moneda>");
	return 1;
}
CMD:crearestacionamiento(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_GLOBAL) return 0;
	new precio,interior,nivel,Float:Pos[4],query[600];
	if(!sscanf(params,"ddd",precio,nivel,interior))
	{

	    new zone[MAX_ZONE_NAME];
		GetPlayer3DZone(playerid, zone, sizeof(zone));
		if(interior <= 0 || interior > 3) return SendClientMessage(playerid,-1,"Ese interior es inválido.");
	    new id = EstacionamientoDesocupado();
	    if(id == -1) return SendClientMessage(playerid,-1,"No se puede crear mas estacionamientos.");
	    GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
	    GetPlayerFacingAngle(playerid,Pos[3]);

		format(query,sizeof(query),"INSERT INTO `garages` (`ID`,`Localizacion`,`PosX`,`PosY`,`PosZ`,`PosA`,`Interior`,`VW`,`Propietario`,`EnUso`) VALUES ('%d','%s','%f','%f','%f','%f','1','%d','Nadie','1')", id, zone, Pos[0], Pos[1], Pos[2], Pos[3], id+1);
		mysql_function_query(Conecction,query,true,"","");

		EstaInfo[id][pEnUso] = 1;

		EstaInfo[id][pEnVenta] = 0;
		EstaInfo[id][pPrecio] = precio;
		EstaInfo[id][pNivel] = nivel;
		EstaInfo[id][pEnVentaPor] = 0;
		if(interior == 1) DarInteriorEstacionamiento(id,1);
		else if(interior == 2) DarInteriorEstacionamiento(id,2);
		else if(interior == 3) DarInteriorEstacionamiento(id,3);
		else DarInteriorEstacionamiento(id,1);
		EstaInfo[id][pTipo] = 3;
		EstaInfo[id][pPosX] = Pos[0];
		EstaInfo[id][pPosY] = Pos[1];
		EstaInfo[id][pPosZ] = Pos[2];
		EstaInfo[id][pPosA] = Pos[3];
		EstaInfo[id][pAbierta] = 1;
		EstaInfo[id][pID] = id;
		if(interior == 1) EstaInfo[id][pVW] = id+1;
		if(interior == 2) EstaInfo[id][pVW] = 6;
		else if(interior == 3) EstaInfo[id][pVW] = 2;
		else EstaInfo[id][pVW] = id+1;
		format(EstaInfo[id][pPropietario],40,"Nadie");
		format(EstaInfo[id][pLocalizacion],80,zone);
		EstaInfo[id][pInterior] = 1;
		CargarEstacionamiento(id);
		GuardarEstacionamiento(id);
		format(query,sizeof(query),"Creaste el estacionamiento ID: {DBED16}%d (Precio: {00CC00}$%d{DBED16}) {FFFFFF}-{DBED16} (Interior: %d).",id,precio,interior);
		SendClientMessage(playerid,-1,query);
	}
	else SendClientMessage(playerid,-1,"Escribe {DBED16}/crearestacionamiento {FFFFFF}<Precio> <Nivel> <Interior>");
	return true;
}
CMD:iresta(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_GLOBAL) return 0;
	new id, string[150];
	if(sscanf(params,"d",id)) return SendClientMessage(playerid,-1,"Escribe {DBED16}/iresta {FFFFFF}<ID-ESTACIONAMIENTO>");
 	if(EstaInfo[id][pEnUso] == 0) return SendClientMessage(playerid,-1,"ID de casa inválido.");
	format(string,sizeof(string),"Fuiste a la posición de el estacionamiento ID {DBED16}%d",id);
	SendClientMessage(playerid,-1,string);
 	SetPlayerPos(playerid,EstaInfo[id][pPosX],EstaInfo[id][pPosY],EstaInfo[id][pPosZ]);
	return true;
}
CMD:sancionar(playerid, params[])
{
	new string[126],string2[126],pName[32],day,month,year,hora,minuto,segundo;
	gettime(hora,minuto,segundo);
	getdate(day,month,year);
	new ID,ADMIN[256],tiempo;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 1;
	if(sscanf(params, "dds[256]", ID,tiempo,ADMIN)) return SendClientMessage(playerid,COLOR_WHITE,"Escribe {DBED16}/sancionar {FFFFFF}[{DBED16}ID{FFFFFF}] [{DBED16}Tiempo{FFFFFF}] [{DBED16}Razón{FFFFFF}]");
 	if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0x25AB26FF,"Jugador no conectado");
	SancionadoOPricion[ID] = 1;
	QuitarArmas(ID);
	QuitarArmas2(ID);
	PlayerInfo[ID][pCargos] = 0;
	SetPlayerWantedLevel(ID, 0);
	SetPlayerColor(ID,c0_color);
	SetPlayerInterior(ID, 6);
	SetPlayerVirtualWorld(ID, ID);
	PlayerInfo[ID][pTiempoJail] = tiempo*60*1000;
	PlayerInfo[ID][pTiempoJailS] = tiempo*60;
	for(new i=0;i<MAX_PLAYERS;i++)
	{
	    if(JugadorLogeado[i] == 1)
	    {
		    if(PlayerInfo[i][pMuteos] == 0)
			{
				format(string, sizeof(string), "%s fue sancionado por %s",PlayerName(ID), ADMIN);
				SendClientMessage(i,0xAA3333FF, string);
			}
		}
		if(PlayerInfo[i][pAdmin] > ADMIN_LEVEL_DUDAS)
		{
			GetPlayerName(playerid, pName, 32);
			format(string, 128, "Tiempo de sancion: %d minutos, Administrador: %s",tiempo,pName);
			SendClientMessage(i,COLOR_GREY,string);
		}
	}
	SendClientMessage(ID,0xDEA600FF,"Fuiste sancionado por incumplir alguna de las reglas, por favor lee las reglas.");
	SendClientMessage(ID,0xDEA600FF,"En el foro se encuentran todas las reglas y una guía de rol que te será de utilidad.");
	format(string2,sizeof(string2),"Fuiste sancionado por %d minutos",tiempo);
	SendClientMessage(ID,0xDEA600FF,string2);
	San[ID] = 1;
	SetTimerEx("TiempoJail",PlayerInfo[ID][pTiempoJail],false,"d",ID);
	new Query[680];
	format(Query, sizeof(Query), "INSERT INTO `registros_admin` (Responsable, Jugador, Razon, Accion, NotaNivel, Nota) VALUES ('%s','%s','%s','2', '%s','%d')",PlayerName(playerid),PlayerName(ID),ADMIN, PlayerInfo[ID][@Nivel],tiempo);
	mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
	SetPlayerPos(ID, 346.870025,309.259033,999.155700);
	return 1;
}
CMD:pfaccion(playerid, params[])
{
	new string[126], ID, FACCION, RANGO, rangobanda[128];
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
    {
	    if(sscanf(params, "rdx", ID,FACCION,RANGO) )return SendClientMessage(playerid,-1,"Escribe {DBED16}/pfaccion [Player ID] [Banda ID] [Rango 1-8]");
	    if(RANGO > 8) return SendClientMessage(playerid,-1,"No puedes asignar un rango mas alto");
	    if(RANGO == 0 && FACCION != 0) return SendClientMessage(playerid,-1,"No puedes asignar el rango 0");
	    if(FACCION == 0)
	    {
		    format(string, sizeof(string), "{00CCFF}%s{FFFFFF} te sacó de la facción en la que estabas.", PlayerName(playerid));
		    SendClientMessage(ID,-1, string);
	        if(PlayerInfo[ID][pFaccion] == 1)
		    {
			    SetPlayerSkin(ID, PlayerInfo[ID][jRopa]);
			    ClearAnimations(ID);
		    }
		    PlayerInfo[ID][pDuty] = 0;
		    PlayerInfo[ID][pFaccion] = 0;
		    PlayerInfo[ID][pRango] = 0;
		    return 1;
	    }
	    if(FACCION == 1)
	    {
	        if(RANGO == 1) format(rangobanda,sizeof(rangobanda), "%s",BandasInfo[FACCION][BRango1]);
	        else if(RANGO == 2) format(rangobanda,sizeof(rangobanda), "%s",BandasInfo[FACCION][BRango2]);
	        else if(RANGO == 3) format(rangobanda,sizeof(rangobanda), "%s",BandasInfo[FACCION][BRango3]);
	        else if(RANGO == 4) format(rangobanda,sizeof(rangobanda), "%s",BandasInfo[FACCION][BRango4]);
	        else if(RANGO == 5) format(rangobanda,sizeof(rangobanda), "%s",BandasInfo[FACCION][BRango5]);
	        else if(RANGO == 6) format(rangobanda,sizeof(rangobanda), "%s",BandasInfo[FACCION][BRango6]);
	        else if(RANGO == 7) format(rangobanda,sizeof(rangobanda), "%s",BandasInfo[FACCION][BRango7]);
	        else if(RANGO == 8) format(rangobanda,sizeof(rangobanda), "%s",BandasInfo[FACCION][BRango8]);
		    format(string, sizeof(string), "{00CCFF}%s{FFFFFF} te asignó rango %s en la facción %s", PlayerName(playerid),rangobanda,BandasInfo[FACCION][BNombre]);
		    SendClientMessage(ID,-1, string);
		    PlayerInfo[ID][pFaccion] = FACCION;
		    PlayerInfo[ID][pRango] = RANGO;
		    if(RANGO == 8)  {
			PlayerInfo[playerid][pRango] = 8;	}
			SendClientMessage(playerid,-1,"Asignaste al jugador en una banda.");
		    return 1;
	    }
	    if(FACCION > 1)
   		{
   		    if(BandasInfo[FACCION][EnUso] == 0) return SendClientMessage(playerid,0xEB0000FF,"ERROR, Ese ID de banda no existe.");
   			PlayerInfo[ID][pFaccion] = FACCION;
   			PlayerInfo[ID][pRango] = RANGO;
   			if(RANGO == 8)  {
			PlayerInfo[playerid][pRango] = 8;	}
   			if(RANGO == 1) format(rangobanda,sizeof(rangobanda), "%s",BandasInfo[FACCION][BRango1]);
	        else if(RANGO == 2) format(rangobanda,sizeof(rangobanda), "%s",BandasInfo[FACCION][BRango2]);
	        else if(RANGO == 3) format(rangobanda,sizeof(rangobanda), "%s",BandasInfo[FACCION][BRango3]);
	        else if(RANGO == 4) format(rangobanda,sizeof(rangobanda), "%s",BandasInfo[FACCION][BRango4]);
	        else if(RANGO == 5) format(rangobanda,sizeof(rangobanda), "%s",BandasInfo[FACCION][BRango5]);
	        else if(RANGO == 6) format(rangobanda,sizeof(rangobanda), "%s",BandasInfo[FACCION][BRango6]);
	        else if(RANGO == 7) format(rangobanda,sizeof(rangobanda), "%s",BandasInfo[FACCION][BRango7]);
	        else if(RANGO == 8) format(rangobanda,sizeof(rangobanda), "%s",BandasInfo[FACCION][BRango8]);
		    format(string, sizeof(string), "{00CCFF}%s{FFFFFF} te asignó rango %s en la facción %s", PlayerName(playerid),rangobanda,BandasInfo[FACCION][BNombre]);
            SendClientMessage(ID,-1, string);
			SendClientMessage(playerid,-1,"Asignaste al jugador en una banda.");
		 }
	}
	return 1;
}
CMD:getip(playerid,params[])
{
	new ip[16],id,string[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_GLOBAL) return 0;
	if(sscanf(params,"d",id)) return SendClientMessage(playerid,-1,"Modo de uso: /getip [id]");
	{
		GetPlayerIp(id, ip, 16);
		format(string, 128, "La IP de %s es: %s",PlayerName(id),ip);
		SendClientMessage(playerid, -1, string);
	}
	return 1;
}
CMD:pvw(playerid, params[])
{
	new idplayer = strval(params),szMessage[50];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if(isnull(params)) return SendClientMessage(playerid, COLOR_GREY, "MODO DE USO: /pvw [id]");
	new inte = GetPlayerInterior(idplayer), vw = GetPlayerVirtualWorld(idplayer);
	format(szMessage, sizeof(szMessage), "%s (Int: %d) - (VW: %d)", PlayerName(idplayer), inte, vw);
	SendClientMessage(playerid, COLOR_MUTE, szMessage);
	return 1;
}
CMD:nick(playerid, params[])
{
	new string[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_GLOBAL) return 0;
	if(GetPVarInt(playerid, "TempName") == 0)
	{
		if(isnull(params)) return SendClientMessage(playerid, -1, "Usa: /nombre [Nombre Temporal]");
		if(!strcmp(params, ""OWNER"", true)) return SendClientMessage(playerid, -1, "No puedes utilizar este nombre.");
		if(!strcmp(params, ""OWNER2"", true)) return SendClientMessage(playerid, -1, "No puedes utilizar este nombre.");
		new name[MAX_PLAYER_NAME];
		format(string, sizeof(string), "%s, estas usando temporalmente el nombre: %s.", PlayerName(playerid), params);
		SendClientMessage(playerid, -1, string);
		SetPVarInt(playerid, "TempName", 1);
		GetPlayerName(playerid, name, sizeof(name));
		SetPVarString(playerid, "TempNameName", name);
		SetPlayerName(playerid, params);
	}
	else
	{
		new name[MAX_PLAYER_NAME];
		GetPVarString(playerid, "TempNameName", name, sizeof(name));
		format(string, sizeof(string), "Tu nombre a sido cambiado al original: %s", name);
		SendClientMessage(playerid, -1, string);
		SetPVarInt(playerid, "TempName", 0);
		SetPlayerName(playerid, name);
	}
	return 1;
}
CMD:dstat(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM_TEMP) return 0;
	if(sscanf(params, "ddd", params[0],params[1],params[2]))
	{
		SendClientMessage(playerid, -1, "/dstat [playerid/nombre] [numero] [valor]");
		SendClientMessage(playerid, -1, "[Nivel 1] [Teléfono 2] [Experiencia 3] [Sexo 4] [Trabajo 5] [Trabajo VIP 6] [Nivel Armero 7] [Nivel Camionero 8] [Nivel Ladron 9]");
		SendClientMessage(playerid, -1, "[Nivel Transportista 10] [Nivel Basurero 11] [Nivel Mecanico 12] [Nivel Pescador 13] [Nivel Médico 14] [15 Horas de juego]");
	}
	else if (!IsPlayerConnected(params[0])) SendClientMessage(playerid,0x25AB26FF,"Jugador no conectado");
	else
	{
		switch(params[1])
		{
			case 1:
			{
		        SendClientMessage(playerid, COLOR_WHITE, "Realizado");
				SetPlayerScore(params[0], params[2]);
				PlayerInfo[params[0]][@Nivel] = params[2];
				CalcularNivel(params[0]);
				SetPlayerStats(params[0]);
				Actualizar(params[0]);
			}
			case 2:
			{
		        SendClientMessage(playerid, COLOR_WHITE, "Realizado");
				PlayerInfo[params[0]][pNumero] = params[2];
			}
			case 3:
			{
				PlayerInfo[params[0]][jExperiencia] = params[2];
		        SendClientMessage(playerid, COLOR_WHITE, "Realizado");
				CalcularNivel(params[0]);
				Actualizar(params[0]);
			}
			case 4:
			{
				PlayerInfo[params[0]][jSexo] = params[2];
		        SendClientMessage(playerid, COLOR_WHITE, "Realizado");
			}
			case 5:
			{
				PlayerInfo[params[0]][pTrabajo] = params[2];
		        SendClientMessage(playerid, COLOR_WHITE, "Realizado");
			}
			case 6:
			{
				PlayerInfo[params[0]][pTrabajo2] = params[2];
		        SendClientMessage(playerid, COLOR_WHITE, "Realizado");
			}
			case 7:
			{
				PlayerInfo[params[0]][pNivelArmero] = params[2];
		        SendClientMessage(playerid, COLOR_WHITE, "Realizado");
			}
			case 8:
			{
				PlayerInfo[params[0]][pNivelCamionero] = params[2];
		        SendClientMessage(playerid, COLOR_WHITE, "Realizado");
			}
			case 9:
			{
				PlayerInfo[params[0]][pNivelLadron] = params[2];
		        SendClientMessage(playerid, COLOR_WHITE, "Realizado");
			}
			case 10:
			{
				PlayerInfo[params[0]][pNivelTransportista] = params[2];
		        SendClientMessage(playerid, COLOR_WHITE, "Realizado");
			}
			case 11:
			{
				PlayerInfo[params[0]][pNivelBasurero] = params[2];
		        SendClientMessage(playerid, COLOR_WHITE, "Realizado");
			}
			case 12:
			{
				PlayerInfo[params[0]][pNivelPiloto] = params[2];
		        SendClientMessage(playerid, COLOR_WHITE, "Realizado");
			}
			case 13:
			{
				PlayerInfo[params[0]][pNivelPescador] = params[2];
		        SendClientMessage(playerid, COLOR_WHITE, "Realizado");
			}
			case 14:
			{
				PlayerInfo[params[0]][pNivelMedico] = params[2];
		        SendClientMessage(playerid, COLOR_WHITE, "Realizado");
			}
			case 15:
			{
				PlayerInfo[params[0]][horasjugadas] = params[2];
		        SendClientMessage(playerid, COLOR_WHITE, "Realizado");
			}
			case 16:
			{
				PlayerInfo[params[0]][pMapper] = params[2];
		        SendClientMessage(playerid, COLOR_WHITE, "Realizado");
			}
			default: 
			{
				SendClientMessage(playerid, -1, "/dstat [playerid/nombre] [numero] [valor]");
				SendClientMessage(playerid, -1, "[Nivel 1] [Teléfono 2] [Experiencia 3] [Sexo 4] [Trabajo 5] [Trabajo VIP 6] [Nivel Armero 7] [Nivel Camionero 8] [Nivel Ladron 9]");
				SendClientMessage(playerid, -1, "[Nivel Transportista 10] [Nivel Basurero 11] [Nivel Mecanico 12] [Nivel Pescador 13] [Nivel Médico 14] [15 Horas de juego] [16 Mapear]");
            }
		}
	}
	return 1;
}
CMD:fixveh(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "No estás en un vehículo.");
	SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
	RepairVehicle(GetPlayerVehicleID(playerid));
	vehaveriado[GetPlayerVehicleID(playerid)] = 0;
	return 1;
}
CMD:revive(playerid,params[])
{
	new id;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if(!sscanf(params,"d",id))
	{
	    if(IsPlayerNPC(id)) return 1;
	    TextDrawHideForPlayer(id, Sangre);
	    TextDrawHideForPlayer(id, NewPlayer[2]);
	    TextDrawHideForPlayer(id, NewPlayer[0]);
		PlayerInfo[id][Agonizando] = 0;
		Muriendo[id] = 0;
		VariableCaido[id] = 0;
		Esposando[id] = 0;
		TogglePlayerControllable(id,1);
		SetPVarInt(id, "IsFrozen", 1);
		EstablecerVida(id, 100.0);
		ClearAnimations(id);
		ApplyAnimation(id, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	}
	return 1;
}
CMD:congelar(playerid,params[])
{
	new id;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if(!sscanf(params,"d",id))
	{
	    if(IsPlayerNPC(id)) return 1;
	    if(PlayerInfo[id][pAdmin] > PlayerInfo[playerid][pAdmin]) return SendClientMessage(playerid, COLOR_WHITE, "Error.");
		TogglePlayerControllable(id, 0);
		SetPVarInt(id, "IsFrozen", 0);
	}
	return 1;
}
CMD:descongelar(playerid,params[])
{
	new id;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if(!sscanf(params,"d",id))
	{
	    if(IsPlayerNPC(id)) return 1;
	    if(PlayerInfo[id][pAdmin] > PlayerInfo[playerid][pAdmin]) return SendClientMessage(playerid, COLOR_WHITE, "Error.");
		Descongelar(id);
	}
	return 1;
}
CMD:minfo(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
    for(new e; e < MAX_PLANTAS; e++)
    {
    	if(IsPlayerInRangeOfPoint(playerid, 2, MarihuanaInfo[e][pX], MarihuanaInfo[e][pY], MarihuanaInfo[e][pZ]))
    	{
       		new string[128];
       		format(string,sizeof(string),"Esta planta tiene la ID %d | Plantador: %s | Estado: %d.", MarihuanaInfo[e][IDMaria], MarihuanaInfo[e][Plantador], MarihuanaInfo[e][Estado]);
 			SendClientMessage(playerid,-1,string);
        }
    }
	return 1;
}
CMD:sethp(playerid,params[])
{
	new id,vida;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if(!sscanf(params,"dd",id,vida))
	{
	    if(IsPlayerNPC(id)) return 1;
	    if(PlayerInfo[id][pAdmin] > PlayerInfo[playerid][pAdmin]) return SendClientMessage(playerid, COLOR_WHITE, "Error.");
		EstablecerVida(id, vida);
		new string[128];
       	format(string,sizeof(string),"Seteaste la vida de %s(%d) a %d", PlayerName(id),id,vida);
 		SendClientMessage(playerid,-1,string);
	}
	return 1;
}
CMD:setarmor(playerid,params[])
{
	new id,chaleco;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if(!sscanf(params,"dd",id,chaleco))
	{
	    if(IsPlayerNPC(id)) return 1;
	    if(PlayerInfo[id][pAdmin] > PlayerInfo[playerid][pAdmin]) return SendClientMessage(playerid, COLOR_WHITE, "Error.");
		EstablecerChaleco(id, chaleco);
		new string[128];
       	format(string,sizeof(string),"Seteaste el blindaje de %s(%d) a %d", PlayerName(id),id,chaleco);
 		SendClientMessage(playerid,-1,string);
	}
	return 1;
}
CMD:forcep(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_GLOBAL) return 0;
	new string[128];
    if(PayDayActive == false)
    {
    	TimerForcep = SetTimer("PayDay2",700,true);
    	PayDayActive = true;
		format(string,sizeof(string),"El administrador %s activó la lluvia de pagas diarias.",PlayerName(playerid));
    	MensajeAdmin(-1,string,4);
    }
    else if(PayDayActive == true)
    {
        KillTimer(TimerForcep);
        PayDayActive = false;
        format(string,sizeof(string),"El administrador %s desactivó la lluvia de pagas diarias.",PlayerName(playerid));
    	MensajeAdmin(-1,string,4);
    }
	return 1;
}
CMD:darmoneda(playerid,params[])
{
	new ID, id,cantidad,string[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_GLOBAL) return 0;
	if(!sscanf(params,"dd",id,cantidad))
	{
	    if(IsPlayerNPC(id)) return 1;
		format(string,128,"Acabas de comprar {00ccff}%d "SERVER_COIN"",cantidad);
		SendClientMessage(id,0x00cc00ff,string);
		PlayerInfo[id][Moneda] += cantidad;
		new message[120];
 		format(message, 120, "El jugador %s compró %d "SERVER_COIN". (Administrador: %d)", PlayerName(ID), cantidad,  PlayerName(playerid));
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/dar"SERVER_COIN" {FFFFFF}<PlayerID> <Cantidad>");
	return 1;
}
CMD:allmoneda(playerid,params[])
{
	new cantidad,string[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_GLOBAL) return 0;
	if(!sscanf(params,"d",cantidad))
	{
		foreach(Player,i)
		{
			if(IsPlayerConnected(i) && !IsPlayerNPC(i))
			{
	  			format(string,128,"Acabas de comprar {00ccff}%d "SERVER_COIN"",cantidad);
				SendClientMessage(i,0x00cc00ff,string);
				PlayerInfo[i][Moneda] += cantidad;
			}
		}
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/allmoneda {FFFFFF}<Cantidad>");
	return 1;
}
CMD:darmedicamentos(playerid,params[])
{
	new id,medis,string[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_GLOBAL) return 0;
	if(!sscanf(params,"dd",id,medis))
	{
	    if(IsPlayerNPC(id)) return 1;
		PlayerInfo[id][pMedicamentos] += medis;
		format(string,128,"{FFFFFF}Has recibido {00FF00}%d Medicamentos{FFFFFF} por parte de la administracion.", medis);
		SendClientMessage(id,-1,string);
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/darmedicamentos {FFFFFF}<PlayerID> <Cantidad>");
	return 1;
}
CMD:allcaramelos(playerid,params[])
{
	new cantidad,string[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_GLOBAL) return 0;
	if(!sscanf(params,"d",cantidad))
	{
		foreach(Player,i)
		{
			if(IsPlayerConnected(i) && !IsPlayerNPC(i))
			{
				format(string,128,"{FFFFFF}Has recibido {00FF00}%d Caramelos{FFFFFF} de parte de la administración, ¡felicidades!", cantidad);
				SendClientMessage(i,-1,string);
				PlayerInfo[i][pCaramelos] += cantidad;
			}
		}
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/allcaramelos {FFFFFF}<Cantidad>");
	return 1;
}
CMD:allmedicamentos(playerid,params[])
{
	new cantidad,string[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_GLOBAL) return 0;
	if(!sscanf(params,"d",cantidad))
	{
		foreach(Player,i)
		{
			if(IsPlayerConnected(i) && !IsPlayerNPC(i))
			{
				format(string,128,"{FFFFFF}Has recibido {00FF00}%d medicamentos{FFFFFF} de parte de la administración, ¡felicidades!", cantidad);
				SendClientMessage(i,-1,string);
				PlayerInfo[i][pMedicamentos] += cantidad;
			}
		}
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/allmedicamentos {FFFFFF}<Cantidad>");
	return 1;
}
CMD:darcrack(playerid,params[])
{
	new id,crack,string[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_GLOBAL) return 0;
	if(!sscanf(params,"dd",id,crack))
	{
	    if(IsPlayerNPC(id)) return 1;
		PlayerInfo[id][pCrack] += crack;
		format(string,128,"{FFFFFF}Has recibido {00FF00}%d crack{FFFFFF} por parte de la administracion.", crack);
		SendClientMessage(id,-1,string);
	}
		else return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/darcrack {FFFFFF}<PlayerID> <Cantidad>");
	return 1;
}
CMD:allcrack(playerid,params[])
{
	new cantidad,string[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_GLOBAL) return 0;
	if(!sscanf(params,"d",cantidad))
	{
		foreach(Player,i)
		{
			if(IsPlayerConnected(i) && !IsPlayerNPC(i))
			{
				format(string,128,"{FFFFFF}Has recibido {00FF00}%d crack{FFFFFF} de parte de la administración, ¡felicidades!", cantidad);
				SendClientMessage(i,-1,string);
				PlayerInfo[i][pCrack] += cantidad;
			}
		}
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/allcrack {FFFFFF}<Cantidad>");
	return 1;
}
CMD:darpiezas(playerid,params[])
{
	new id,materiales,string[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_GLOBAL) return 0;
	if(!sscanf(params,"dd",id,materiales))
	{
	    if(IsPlayerNPC(id)) return 1;
		PlayerInfo[id][pMateriales] += materiales;
		format(string,128,"{FFFFFF}Has recibido {00FF00}%d piezas de armas{FFFFFF} por parte de la administracion.", materiales);
		SendClientMessage(id,-1,string);
	}
		else return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/darpiezas {FFFFFF}<PlayerID> <Cantidad>");
	return 1;
}
CMD:allpiezas(playerid,params[])
{
	new cantidad,string[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_GLOBAL) return 0;
	if(!sscanf(params,"d",cantidad))
	{
		foreach(Player,i)
		{
			if(IsPlayerConnected(i) && !IsPlayerNPC(i))
			{
				format(string,128,"{FFFFFF}Has recibido {00FF00}%d piezas de armas{FFFFFF} de parte de la administración, ¡felicidades!", cantidad);
				SendClientMessage(i,-1,string);
				PlayerInfo[i][pMedicamentos] += cantidad;
			}
		}
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/allpiezas {FFFFFF}<Cantidad>");
	return 1;
}
CMD:dartotem(playerid,params[])
{
	new id,totem,string[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_GLOBAL) return 0;
	if(!sscanf(params,"dd",id,totem))
	{
	    if(IsPlayerNPC(id)) return 1;
		PlayerInfo[id][Totems] += totem;
		format(string,128,"{FFFFFF}Has recibido {00FF00}%d totem{FFFFFF} por parte de la administracion.", totem);
		SendClientMessage(id,-1,string);
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/dartotem {FFFFFF}<PlayerID> <Cantidad>");
	return 1;
}
CMD:alltotem(playerid,params[])
{
	new cantidad,string[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_GLOBAL) return 0;
	if(!sscanf(params,"d",cantidad))
	{
		foreach(Player,i)
		{
			if(IsPlayerConnected(i) && !IsPlayerNPC(i))
			{
				format(string,128,"{FFFFFF}Has recibido {00FF00}%d totem{FFFFFF} de parte de la administración, ¡felicidades!", cantidad);
				SendClientMessage(i,-1,string);
				PlayerInfo[i][Totems] += cantidad;
			}
		}
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/alltotem {FFFFFF}<Cantidad>");
	return 1;
}
CMD:darsed(playerid,params[])
{
	new id,sed;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	if(!sscanf(params,"dd",id,sed))
	{
	    if(IsPlayerNPC(id)) return 1;
		PlayerInfo[id][pSed] = sed;
		SetPlayerProgressBarValue(id,Progressbar[id][Sed], PlayerInfo[id][pSed]);
		UpdatePlayerProgressBar(id,Progressbar[id][Sed]);
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/darsed {FFFFFF}<PlayerID> <Cantidad>");
	return 1;
}
CMD:darhambre(playerid,params[])
{
	new id,hambre;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	if(!sscanf(params,"dd",id,hambre))
	{
	    if(IsPlayerNPC(id)) return 1;
		PlayerInfo[id][pHambre] = hambre;
		SetPlayerProgressBarValue(id,Progressbar[id][Hambre], PlayerInfo[id][pHambre]);
		UpdatePlayerProgressBar(id,Progressbar[id][Hambre]);
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/darhambre {FFFFFF}<PlayerID> <Cantidad>");
	return 1;
}
CMD:darmoney(playerid,params[])
{
	new id,dinero,string[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	if(!sscanf(params,"dd",id,dinero))
	{
	    if(IsPlayerNPC(id)) return 1;
		DarDinero(id,dinero);
		format(string,128,"{FFFFFF}Has recibido {00CC00}$%d{FFFFFF} por parte de la administracion.",dinero);
		ShowPlayerDialog(id,DRECARGA,DIALOG_STYLE_MSGBOX,"Información",string,"Aceptar","");
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/darmoney {FFFFFF}<PlayerID> <Cantidad>");
	return 1;
}
CMD:qmoney(playerid,params[])
{
	new id,dinero;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	if(!sscanf(params,"dd",id,dinero))
	{
	    if(IsPlayerNPC(id)) return 1;
		QuitarDinero(id,dinero);
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/qmoney {FFFFFF}<PlayerID> <Cantidad>");
	return 1;
}
CMD:darpatines(playerid,params[])
{
	new id,string[85];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	if(!sscanf(params,"d",id))
	{
	    if(IsPlayerNPC(id)) return 1;
		format(string,85,"{FFFFFF}Has recibido unos {00CC00}Patines{FFFFFF} por parte de la administracion.");
		ShowPlayerDialog(id,DRECARGA,DIALOG_STYLE_MSGBOX,"Información",string,"Aceptar","");
		PlayerInfo[id][pPatines] = 1;
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/darpatines {FFFFFF}<PlayerID>");
	return 1;
}

CMD:unsan(playerid, params[])
{
	new id, razon[50];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_SANCIONES) return 0;
	if(!sscanf(params,"ds[16]",id,razon))
	{
	    if(IsPlayerNPC(id)) return 1;
		SetPlayerInterior(id, 0);
		SetPlayerVirtualWorld(id, 0);
		PlayerInfo[id][pTiempoCarcelS] = 2;
		PlayerInfo[id][pTiempoCarcelM] = 0;
		San[id] = 0;
		PlayerInfo[id][pTiempoJail] = 2;
		PlayerInfo[id][pEnFC] = 0;
		SetPlayerPos(id, 1510.23,-1672.60,14.05);
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/unsan {FFFFFF}<PlayerID> <Razón>");
	return 1;
}
CMD:darma(playerid,params[])
{
	new id,arma;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	if(!sscanf(params,"dd",id,arma))
	{
	    if(IsPlayerNPC(id)) return 1;
	    if(arma == 35 || arma == 36 || arma == 37 || arma == 38 || arma == 38 || arma == 39 || arma == 44 || arma == 41) return SendClientMessage(playerid,-1,"No puedes dar ese arma.");
		DarArma(id,arma);
		if(IsPlayerInVehicle(playerid,GetPlayerVehicleID(playerid))) SetPlayerArmedWeapon(playerid, 0);
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "Modo de USO: {DBED16}/darma {FFFFFF}[id] [id-arma]");
	return 1;
}
CMD:gcar(playerid, params[])
{
	new Float:cwx2,Float:cwy2,Float:cwz2,vehicleid;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if(!sscanf(params, "i", vehicleid))
	{
		GetVehiclePos(vehicleid, cwx2, cwy2, cwz2);
		SetPlayerPos(playerid, cwx2, cwy2, cwz2);
	}
	return 1;
}
CMD:setvip(playerid,params[])
{
	new id,dia,mes,ano,memb,pName[50],string[128],Query[200];
	getdate(dia,mes,ano);
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM_TEMP) return 0;
	if(!sscanf(params,"dd",id, memb))
	{
	    if(IsPlayerNPC(id)) return 1;
	    if(memb < 0) return SendClientMessage(playerid,-1,"Solo puedes asignar membresía VIP1 o VIP2");
		if(memb > 2) return SendClientMessage(playerid,-1,"Solo puedes asignar membresía VIP1 o VIP2");
		GetPlayerName(id,pName,50);
		PlayerInfo[id][pVip] = memb;
		format(Query, sizeof(Query), "UPDATE `usuarios` SET `FinDia`='%d',`FinMes`='%d',`FinAno`='%d' WHERE `Username`='%s'",dia,mes+1,ano,pName);
		mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
		format(string,128,"El administrador %s te dio una membresía Vip%d",PlayerName(playerid), memb);
		SendClientMessage(id,-1,string);
		format(string,128,"Le diste a %s una membresia VIP hasta el %02d/%02d/%02d",pName,dia,mes+1,ano);
		PlayerInfo[id][findia] = dia;
		PlayerInfo[id][finmes] = mes+1;
		PlayerInfo[id][finano] = ano;
		SendClientMessage(playerid,-1,string);
	}
	return 1;
}
CMD:setskin(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_SANCIONES) return 0;
	{
		new Query[200],id,skin;
		if(!sscanf(params,"dd",id,skin))
		{
		    if(IsPlayerNPC(id)) return 1;
		    if(skin <= 0 || skin >= 300) return SendClientMessage(playerid,-1,"No puedes asignar esa skin.");
			PlayerInfo[id][jRopa] = skin;
			SetPlayerSkin(id, PlayerInfo[id][jRopa]);
			format(Query, 200, "UPDATE `usuarios` SET `Skin`='%d' WHERE `Username`='%s'",skin,PlayerName(id));
			mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/setskin {FFFFFF}<PlayerID> <SkinID>");
	}
	return 1;
}
CMD:t(playerid,params[])
{
	new Float:Pos[3],id,pid,string[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if(sscanf(params,"dd",id,pid)) return SendClientMessage(playerid, -1,"MODO DE USO: {DBED16}/t {FFFFFF}[Player_ID] [Your_ID]");
	{
		if(IsPlayerConnected(id))
		{
		    if(IsPlayerNPC(id)) return 1;
		    if(PlayerInfo[id][pAdmin] > PlayerInfo[playerid][pAdmin]) return SendClientMessage(playerid, COLOR_WHITE, "Error.");
			if(Entrando[playerid] == 0)
			{
				Entrando[playerid] = 1;
				SetTimerEx("Entrandos",3000,false,"d",playerid);
			}
			GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
			SetPlayerPos(id, Pos[0],Pos[1],Pos[2]+1);
			SetPlayerVirtualWorld(id,GetPlayerVirtualWorld(playerid));
			SetPlayerInterior(id,GetPlayerInterior(playerid));
			format(string,128,"Has traido a %s a tu posición",PlayerName(id));
			SendClientMessage(playerid,-1,string);
		}
	}
	return 1;
}
CMD:traer(playerid,params[])
{
	new id,Float:Pos[3];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 1;
	if(!sscanf(params,"d",id))
	{
		GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
		SetVehicleInterior(id,GetPlayerInterior(playerid));
		SetVehicleVirtualWorld(id,GetPlayerVirtualWorld(playerid));
		SetVehiclePos(id,Pos[0],Pos[1],Pos[2]);
		PutPlayerInVehicle(playerid, id, 0);
		MostrarVelocimetro(playerid);
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/traer {FFFFFF}<VehiculoID>");
	return 1;
}
CMD:lsalon(playerid)
{
	if(PlayerInfo[playerid][pAdmin] <= ADMIN_LEVEL_DUDAS) return 0;
	{
		if(Alquilado == true)
		{
		    SendClientMessage(playerid,-1,"Limpiaste el salón de eventos.");
			SalonTimer();
		}
		else SendClientMessage(playerid,-1,"El salón no se encuentra alquilado.");
	}
	return 1;
}
CMD:slap(playerid,params[])
{
	new szMessage[128];
	new Float:health;
	new id,Float:x,Float:y,Float:z;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if(!sscanf(params,"d",id))
	{
	    if(IsPlayerNPC(id)) return 1;
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,0x25AB26FF,"Jugador no conectado");
  		GetPlayerHealth(id, health);
	 	format(szMessage, sizeof(szMessage), "["SERVER_COIN2":RP] Vida de {00CC00}%s{FFFFFF} antes del slap: {00CC00}%f", PlayerName(id), health);
		SendClientMessage(playerid, COLOR_WHITE, szMessage);
		Slapeo[playerid] = id;
		GetPlayerPos(id,x,y,z);
		SetPlayerPos(id,x,y,z+8);
		SetTimerEx("DarSlap",2000,false,"d",playerid);
	}
	else return SendClientMessage(playerid,-1,"Usa /slap ID");
	return 1;
}
CMD:aa(playerid,params[])
{
	new texto[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_GLOBAL) return 0;
	if(!sscanf(params,"s[128]",texto))
	{
		new string[128];
		format(string,128,"%s %s: %s",ADMIN_RANKS[PlayerInfo[playerid][pAdmin]],PlayerName(playerid),texto);
		SendClientMessageToAll(COLOR_MEGAPHONE,string);
	}
	else return SendClientMessage(playerid,-1,"Escribe {DBED16}/aa {FFFFFF}<Texto>");
	return 1;
}
CMD:darprenda(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM_TEMP) return 0;
    new giveplayerid, modelid, Query[200];
    if(sscanf(params, "dd", giveplayerid, modelid)) return SendClientMessage(playerid, -1, "USA: /darprenda [playerid] [modelid]");
    if(NPrendas[giveplayerid] >= 4) return SendClientMessage(playerid,-1,"Ese jugador no puede tener más de 4 prendas.");
    NPrendas[giveplayerid]++;
	if(PlayerInfo[giveplayerid][pObj] == 0 || PlayerInfo[giveplayerid][pObj] == 19382)
	{
		PlayerInfo[giveplayerid][pObj] = modelid;
		format(Query, sizeof(Query), "INSERT INTO `prendas` (Propietario,Objeto,Slot) VALUES ('%s','%d','1')",PlayerName(giveplayerid),modelid);
		mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, giveplayerid);
		PlayerInfo[giveplayerid][pfOffsetX] = 0.085;
		PlayerInfo[giveplayerid][pfOffsetY] = 0.017999;
		PlayerInfo[giveplayerid][pfOffsetZ] = 0.000999;
		PlayerInfo[giveplayerid][pfRotX] = 87.2;
		PlayerInfo[giveplayerid][pfRotY] = 88.1;
		PlayerInfo[giveplayerid][pfRotZ] = -7.5;
		PlayerInfo[giveplayerid][pfScaleX] = 1;
		PlayerInfo[giveplayerid][pfScaleY] = 1;
		PlayerInfo[giveplayerid][pfScaleZ] = 1;
		SendClientMessage(playerid, -1, "Le diste una prenda a ese jugador.");
		return 1;
	}
	else if(PlayerInfo[giveplayerid][pObj2] == 0 || PlayerInfo[giveplayerid][pObj2] == 19382)
	{
		PlayerInfo[giveplayerid][pObj2] = modelid;
		format(Query, sizeof(Query), "INSERT INTO `prendas` (Propietario,Objeto,Slot) VALUES ('%s','%d','2')",PlayerName(giveplayerid),modelid);
		mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, giveplayerid);
		PlayerInfo[giveplayerid][pfOffsetX2] = 0.085;
		PlayerInfo[giveplayerid][pfOffsetY2] = 0.017999;
		PlayerInfo[giveplayerid][pfOffsetZ2] = 0.000999;
		PlayerInfo[giveplayerid][pfRotX2] = 87.2;
		PlayerInfo[giveplayerid][pfRotY2] = 88.1;
		PlayerInfo[giveplayerid][pfRotZ2] = -7.5;
		PlayerInfo[giveplayerid][pfScaleX2] = 1;
		PlayerInfo[giveplayerid][pfScaleY2] = 1;
		PlayerInfo[giveplayerid][pfScaleZ2] = 1;
		SendClientMessage(playerid, -1, "Le diste una prenda a ese jugador.");
		return 1;
	}
	else if(PlayerInfo[giveplayerid][pObj3] == 0 || PlayerInfo[giveplayerid][pObj3] == 19382)
	{
		PlayerInfo[giveplayerid][pObj3] = modelid;
		format(Query, sizeof(Query), "INSERT INTO `prendas` (Propietario,Objeto,Slot) VALUES ('%s','%d','3')",PlayerName(giveplayerid),modelid);
		mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, giveplayerid);
		PlayerInfo[giveplayerid][pfOffsetX3] = 0.085;
		PlayerInfo[giveplayerid][pfOffsetY3] = 0.017999;
		PlayerInfo[giveplayerid][pfOffsetZ3] = 0.000999;
		PlayerInfo[giveplayerid][pfRotX3] = 87.2;
		PlayerInfo[giveplayerid][pfRotY3] = 88.1;
		PlayerInfo[giveplayerid][pfRotZ3] = -7.5;
		PlayerInfo[giveplayerid][pfScaleX3] = 1;
		PlayerInfo[giveplayerid][pfScaleY3] = 1;
		PlayerInfo[giveplayerid][pfScaleZ3] = 1;
		SendClientMessage(playerid, -1, "Le diste una prenda a ese jugador.");
		return 1;
	}
	else if(PlayerInfo[giveplayerid][pObj4] == 0 || PlayerInfo[giveplayerid][pObj4] == 19382)
	{
		PlayerInfo[giveplayerid][pObj4] = modelid;
		format(Query, sizeof(Query), "INSERT INTO `prendas` (Propietario,Objeto,Slot) VALUES ('%s','%d','4')",PlayerName(giveplayerid),modelid);
		mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, giveplayerid);
		PlayerInfo[giveplayerid][pfOffsetX4] = 0.085;
		PlayerInfo[giveplayerid][pfOffsetY4] = 0.017999;
		PlayerInfo[giveplayerid][pfOffsetZ4] = 0.000999;
		PlayerInfo[giveplayerid][pfRotX4] = 87.2;
		PlayerInfo[giveplayerid][pfRotY4] = 88.1;
		PlayerInfo[giveplayerid][pfRotZ4] = -7.5;
		PlayerInfo[giveplayerid][pfScaleX4] = 1;
		PlayerInfo[giveplayerid][pfScaleY4] = 1;
		PlayerInfo[giveplayerid][pfScaleZ4] = 1;
		SendClientMessage(playerid, -1, "Le diste una prenda a ese jugador.");
	    return 1;
	}
	else
	{
	    SendClientMessage(playerid, -1, "Ese jugador no puede tener mas prendas.");
	}
	return 1;
}
CMD:garajeid(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
    for(new id = 0; id < MAX_PROPIEDADES; id++)
    {
    	if(IsPlayerInRangeOfPoint(playerid,2,PropInfo[id][pGX],PropInfo[id][pGY],PropInfo[id][pGZ]))
    	{
        	if(PropInfo[id][pGX] != 0)
        	{
       			new string[170];
       			format(string,sizeof(string),"Esta garaje tiene la ID {DBED15}%d{FFFFFF}.", id);
 				SendClientMessage(playerid,-1,string);
        	}
        }
    }
	return 1;
}
CMD:getvehicle(playerid, params[])
{
	new giveplayerid, modelid, color1, color2;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM_TEMP) return 0;
	if(sscanf(params, "dddd", giveplayerid, modelid, color1, color2)) return SendClientMessage(playerid, -1, "USA: /getvehicle [playerid] [modelid] [color 1] [color 2]");
	if(IsPlayerNPC(giveplayerid)) return 1;
	if(color1 < 0 || color1 > 255) { SendClientMessage(playerid, -1, "Numero de color no debe ser menor de 0 o mayor que 255 !"); return 1; }
	if(color2 < 0 || color2 > 255) { SendClientMessage(playerid, -1, "Numero de color 2 no debe ser menor de 0 o mayor que 255 !"); return 1; }
	if(modelid < 400 || modelid > 611) { SendClientMessage(playerid, -1, "ID del vehiculo debe ser del 400 al 611 !"); return 1; }
	new Float:X,Float:Y,Float:Z, Float:Angle;
	GetPlayerPos(giveplayerid,X,Y,Z);
	GetPlayerFacingAngle(giveplayerid,Angle);
 	CreatePlayerVehicle(giveplayerid, modelid, X, Y, Z, Angle, color1, color2, 1, 50, playerid);
	return 1;
}
CMD:nb(playerid,params[])
{
	new id,tiempo,string[128],razon[200],string2[128],day,month,year, hora, minuto,segundo;
	getdate(day,month,year);
	gettime(hora, minuto, segundo);
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_DUDAS) return 1;
	if(!sscanf(params,"dds[200]",id,tiempo,razon))
	{
	    if(IsPlayerNPC(id)) return 1;
	    if(!IsPlayerConnected(id)) return SendClientMessage(playerid,0x25AB26FF,"Jugador no conectado");
	    if(tiempo <= 0) return 1;
		if(TiempoDuda[id] > 240) return SendClientMessage(playerid,-1,"Ese jugador ya esta muteado.");
		for(new i=0;i<MAX_PLAYERS;i++)
		{
		    if(JugadorLogeado[i] == 1)
	    	{
		    	if(PlayerInfo[i][pMuteos] == 0)
				{
				    format(string, sizeof(string), "A %s no se le permite hablar en el chat de ayuda. Razón: %s",PlayerName(id), razon);
					SendClientMessage(i,0xAA3333FF,string);
            	}
            }
			if(PlayerInfo[i][pAdmin] > ADMIN_LEVEL_DUDAS)
			{
				format(string, 128, "Tiempo de muteo: %d minutos, Administrador: %s",tiempo,PlayerName(playerid));
				SendClientMessage(i,COLOR_GREY,string);
			}
		}
		new calculo = tiempo*60*1;
		SetTimerEx("DudaOn",calculo,0,"d",id);
	    RecienDuda[id] = 0;
		TiempoDuda[id] = tiempo*60;
		format(string2,128,"No se te permite hablar en el chat de ayuda. Por %d minuto(s)",tiempo);
		SendClientMessage(id,0xDEA600FF,string2);
        format(string2,128,"Se te descontó $%d por el muteo.",tiempo);
		SendClientMessage(id,0xDEA600FF,string2);
		QuitarDinero(id,tiempo);
 		new Query[520];
		format(Query, sizeof(Query), "INSERT INTO `registros_admin` (Responsable, Jugador, Razon, Accion) VALUES ('%s','%s','%s','1')",PlayerName(playerid),PlayerName(id),razon);
		mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
	}
	else return SendClientMessage(playerid,-1,"Escribe {DBED16}/nb {FFFFFF}<PlayerID> <Tiempo> <Razón>");
	return 1;
}
CMD:desmutear(playerid,params[])
{
	new id,string[128],razon[200];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_DUDAS) return 0;
	if(!sscanf(params,"ds[200]",id,razon))
	{
	    if(IsPlayerNPC(id)) return 1;
		for(new i=0;i<MAX_PLAYERS;i++)
		{
		    if(JugadorLogeado[i] == 1)
		    {
				if(PlayerInfo[i][pMuteos] == 0)
				{
					format(string, sizeof(string), "A %s ahora se le permite hablar en el chat de ayuda. Razón: %s",PlayerName(id), razon);
					SendClientMessage(i,COLOR_GREY,string);
				}
			}
			if(PlayerInfo[i][pAdmin] > ADMIN_LEVEL_DUDAS)
			{
				format(string, 128, "Administrador: %s", PlayerName(playerid));
				SendClientMessage(i,COLOR_GREY,string);
			}
		}
		TiempoDuda[id] = 0;
		RecienDuda[id] = 1;
		SendClientMessage(id,0xDEA600FF,"Se te quito la restricción del canal de dudas.");
	}
	else return SendClientMessage(playerid,-1,"MODO DE USO: {DBED16}/desmutear {FFFFFF}<PlayerID> <Razon>");
	return 1;
}
CMD:rac(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	resetearcoches();
	return 1;
}
CMD:raccars(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	new string[128], radius;
	if(sscanf(params, "d", radius)) return SendClientMessage(playerid, -1, "Escribe {DBED16}/raccars {FFFFFF}[{DBED16}Radio{FFFFFF}]");
	if(radius < 1 || radius > 100) return SendClientMessage(playerid, COLOR_GREY, "El radio debe ser de 1 a 100!");
	RespawnNearbyVehicles(playerid, radius);
	format(string, sizeof(string), "Usted ha respawneado los vehículos dentro del radio de %d.", radius);
	SendClientMessage(playerid, COLOR_GREY, string);
	return 1;
}
CMD:rall(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
 	for(new i=0; i< MAX_VEHICLES; i++)
 	{
		for(new u=0; u< MAX_PLAYERS; u++)
		{
			if(IsPlayerInVehicle(u,i))
			{
				goto _no_borrar;
			}
		}
		SetVehicleToRespawn(i);
		SetPlayerVirtualWorld(playerid, 0);
		_no_borrar:
	}
	return 1;
}
CMD:rp(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 1;
	new ID;
	if(!sscanf(params, "d", ID))
	{
		Respawnear(ID);
	}
	return 1;
}
CMD:kick(playerid, params[])
{
	new string[256],ID,ADMIN[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return SendClientMessage(playerid,-1,"No tienes permiso para usar este comando.");
	if(sscanf(params, "ds[128]", ID,ADMIN) )return SendClientMessage(playerid,COLOR_WHITE,"Escribe {DBED16}/kick {FFFFFF}<PlayerID> <Razon>");
	if(PlayerInfo[ID][pAdmin] >= PlayerInfo[playerid][pAdmin] && PlayerInfo[playerid][pAdmin] <= ADMIN_LEVEL_GLOBAL) return 1;
	if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0x25AB26FF,"Jugador no conectado");
	if(IsPlayerNPC(ID)) return 1;
	if(gettime() < Banear[playerid] + 3)
	{
		Ratita[playerid] ++;
		if(Ratita[playerid] >= 4) BanEx(playerid, "Rata apestosa.");
		return 1;
	}
	format(string, sizeof(string), "%s {00CC00}fue kickeado por %s.",PlayerName(ID), ADMIN);
	MensajeAdmin(0xFFDBED15FF,string, 3);
	format(string, 128, "Fuiste kickeado por un admin. Razón: %s",ADMIN);
	SendClientMessage(ID, -1, string);
	SetTimerEx("KickXD",500,0,"d",ID);
	return 1;
}
CMD:desban(playerid, params[])
{
	new query[520],pName[32];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if(sscanf(params, "s[32]", pName) )return SendClientMessage(playerid,COLOR_WHITE,"Escribe {DBED16}/desbanear {FFFFFF}<PlayerID> <Razon>");
	format(query, 200, "UPDATE `usuarios` SET `Baneado`='0' WHERE `Username`='%s'", pName);
	mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	SendClientMessage(playerid, -1, "El usuario ha sido desbaneado.");
	return 1;
}
CMD:banoff(playerid,params[])
{
	new ID[32],RAZON[100],string[200],query[200],pName[32],day,month,year,hora,minuto,segundo;
	gettime(hora,minuto,segundo);
	getdate(day,month,year);
	GetPlayerName(playerid, pName, 32);
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if(PlayerInfo[playerid][BaneosD] >= 6 && PlayerInfo[playerid][pAdmin] != ADMIN_LEVEL_ADM && PlayerInfo[playerid][BaneosD2] > gettime()) return SendClientMessage(playerid,-1,"Solamente puedes banear 6 jugadores por día.");
	if(!sscanf(params,"s[29]s[100]",ID,RAZON))
	{
	    if(!strcmp(ID, ""OWNER"")) return SendClientMessage(playerid,COLOR_WHITE,"No puedes usar este comando con ese usuario.");
		if(!strcmp(ID, ""OWNER2"")) return SendClientMessage(playerid,COLOR_WHITE,"No puedes usar este comando con ese usuario.");
		format(string, sizeof(string), "El jugador {FF3300}%s{FFFFFF} fue baneado por un admin. Razón: {FF0000}%s{FFFFFF}.",ID,RAZON);
		MensajeAdmin(-1,string,ADMIN_LEVEL_BANEOS);
		format(string, 200, "Administrador: %s",PlayerName(playerid));
		ASendClientMessage(COLOR_GREY, string);
		new Query[520];
		format(Query, sizeof(Query), "INSERT INTO `registros_admin` (Responsable, Jugador, Razon, Accion) VALUES ('%s','%s','%s','3')",PlayerName(playerid),ID,RAZON);
		mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
		format(query, 200, "UPDATE `usuarios` SET `Baneado`='1',`razon`='%s',`Banpor`='%s' WHERE `Username`=('%s')",RAZON,PlayerName(playerid),ID);
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
		if(PlayerInfo[playerid][pAdmin] > ADMIN_LEVEL_DUDAS)
		{
			PlayerInfo[playerid][BaneosD] ++;
			PlayerInfo[playerid][BaneosD2] = gettime() + 86400;
		}
	}
	else return SendClientMessage(playerid,-1,"Modo de uso: /banoff [Nombre_Apellido] [Razon]");
	return 1;
}
CMD:bano(playerid, params[])
{
	new string[256],day,month,year,hora,minuto,segundo;
	gettime(hora,minuto,segundo);
	getdate(day,month,year);
	new ID,ADMIN[256],query[200];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 1;
	if(sscanf(params, "rs[256]", ID,ADMIN) )return SendClientMessage(playerid,COLOR_WHITE,"Escribe {DBED16}/bano {FFFFFF}<PlayerID> <Razon>");
	if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0x25AB26FF,"Jugador no conectado");
	if(PlayerInfo[ID][pAdmin] >= PlayerInfo[playerid][pAdmin]) return 1;
	if(!strcmp(PlayerName(ID), ""OWNER"")) return SendClientMessage(playerid,COLOR_WHITE,"No puedes usar este comando con ese usuario.");
	if(!strcmp(PlayerName(ID), ""OWNER2"")) return SendClientMessage(playerid,COLOR_WHITE,"No puedes usar este comando con ese usuario.");
    if(PlayerInfo[playerid][BaneosD] >= 6 && PlayerInfo[playerid][pAdmin] != ADMIN_LEVEL_ADM && PlayerInfo[playerid][BaneosD2] > gettime()) return SendClientMessage(playerid,-1,"Solamente puedes banear 6 jugadores por día.");
	if(JugadorLogeado[ID] == 0) return SendClientMessage(playerid,0x25AB26FF,"Jugador no conectado");
	if(PlayerInfo[playerid][pAdmin] > ADMIN_LEVEL_DUDAS)
	{
		PlayerInfo[playerid][BaneosD] ++;
		PlayerInfo[playerid][BaneosD2] = gettime() + 86400;
	}
	if(IsPlayerNPC(ID)) return 1;
	if(PlayerInfo[playerid][pMuteos] == 0)
	{
		format(string, sizeof(string), "El jugador {FF3300}%s(ID: %d){FFFFFF} fue baneado por un admin. Razón: {FF3300}%s{FFFFFF}.",PlayerName(ID),ID, ADMIN);
		SendClientMessage(ID, -1, string);
		format(string, sizeof(string), "El jugador {FF3300}%s(ID: %d){FFFFFF} fue baneado por un admin. Razón: {FF3300}%s{FFFFFF}.",PlayerName(ID),ID, ADMIN);
		MensajeAdmin(-1,string, 3);
		PlayerInfo[ID][pAdmin] = ADMIN_LEVEL_USER;
		ForumPermissions(ID);
	}
	format(string, 128, "Administrador: %s",PlayerName(playerid));
	MensajeAdmin(-1,string,ADMIN_LEVEL_BANEOS);
	new Query[520];
	format(Query, sizeof(Query), "INSERT INTO `registros_admin` (Responsable, Jugador, Razon, Accion) VALUES ('%s','%s','%s','3')",PlayerName(playerid),PlayerName(ID),ADMIN);
	mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
	format(query, 200, "UPDATE `usuarios` SET `Baneado`='1',`razon`='%s',`Banpor`='%s' WHERE `Username`='%s'", ADMIN,PlayerName(playerid),PlayerName(ID));
	mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
	Kick(ID);
	return 1;
}
CMD:banp(playerid, params[])
{
	new string[256],day,month,year,hora,minuto,segundo;
	gettime(hora,minuto,segundo);
	getdate(day,month,year);
	new ID,ADMIN[256],query[200];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 1;
	if(sscanf(params, "rs[256]", ID,ADMIN) )return SendClientMessage(playerid,COLOR_WHITE,"Escribe {DBED16}/banp {FFFFFF}<PlayerID> <Razon>");
	if(!IsPlayerConnected(ID)) return SendClientMessage(playerid,0x25AB26FF,"Jugador no conectado");
	if(PlayerInfo[ID][pAdmin] >= PlayerInfo[playerid][pAdmin] && PlayerInfo[ID][pAdmin] >= ADMIN_LEVEL_GLOBAL) return 1;
	if(!strcmp(PlayerName(ID), ""OWNER"")) return SendClientMessage(playerid,COLOR_WHITE,"No puedes usar este comando con ese usuario.");
	if(!strcmp(PlayerName(ID), ""OWNER2"")) return SendClientMessage(playerid,COLOR_WHITE,"No puedes usar este comando con ese usuario.");
	if(JugadorLogeado[ID] == 0) return SendClientMessage(playerid,0x25AB26FF,"Jugador no conectado");
	if(PlayerInfo[playerid][BaneosD] >= 6 && PlayerInfo[playerid][pAdmin] != ADMIN_LEVEL_ADM && PlayerInfo[playerid][BaneosD2] > gettime()) return SendClientMessage(playerid,-1,"Solamente puedes banear 6 jugadores por día.");
    if(!IsPlayerNPC(ID))
	{
	    Loop(i,MAX_PLAYERS)
	    {
	        if(JugadorLogeado[i] == 1)
		    {
				if(PlayerInfo[i][pMuteos] == 0)
				{
					format(string, sizeof(string), "El jugador {FF3300}%s(ID: %d){FFFFFF} fue baneado por un admin. Razón: {FF3300}%s{FFFFFF}.",PlayerName(ID),ID, ADMIN);
					SendClientMessage(i,-1, string);
				}
			}
		}
		PlayerInfo[ID][pAdmin] = ADMIN_LEVEL_USER;
		ForumPermissions(ID);
		format(string, 128, "Administrador: %s",PlayerName(playerid));
		MensajeAdmin(-1,string,ADMIN_LEVEL_BANEOS);
		new Query[520];
		format(Query, sizeof(Query), "INSERT INTO `registros_admin` (Responsable, Jugador, Razon, Accion) VALUES ('%s','%s','%s','3')",PlayerName(playerid),PlayerName(ID),ADMIN);
		mysql_function_query(Conecction, Query, true, "OnQueryFinish", "ii", 0, playerid);
		format(query, 200, "UPDATE `usuarios` SET `Baneado`='1',`razon`='%s',`Banpor`='%s' WHERE `Username`='%s'", ADMIN,PlayerName(playerid),PlayerName(ID));
		mysql_function_query(Conecction, query, true, "OnQueryFinish", "ii", 0, playerid);
        format(string, sizeof(string), "El jugador %s(ID: %d) fue baneado por un admin. Razón: %s.",PlayerName(ID),ID, ADMIN);
		BanEx(ID, string);
		Kick(ID);
		if(PlayerInfo[playerid][pAdmin] > ADMIN_LEVEL_DUDAS)
		{
			PlayerInfo[playerid][BaneosD] ++;
			PlayerInfo[playerid][BaneosD2] = gettime() + 86400;
		}
	}
	return 1;
}
CMD:inick(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if(sscanf(params, "r", params[0])) return SendClientMessage(playerid, COLOR_GRAD2, "MODO DE USO: /inick <PlayerID>");
	if(IsPlayerNPC(params[0])) return 1;
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,0x25AB26FF,"Jugador no conectado");
	new stringa2[128];
	format(stringa2,sizeof(stringa2),"{DBED16}- Hola {249627}%s{DDF543}, el equipo administrativo te informa que tu nombre incumple nuestras reglas.",PlayerName(params[0]));
    SendClientMessage(params[0],-1, stringa2);
	SendClientMessage(params[0],-1, "{DBED16}- El formato de nombre es {FFFFFF}Nombre_Apellido{DDF543}, el cual tiene que contener las iniciales en Mayusculas.");
	SendClientMessage(params[0],-1, "{DBED16} No puede ser el nombre de un famoso, no puede contener números y tampoco pueden ser nombres irreales.");
	SendClientMessage(params[0],-1, "{DBED16}- Puedes cambiar tu nombre sin perder tu partida, para ello tienes que entrar con tu cuenta a:");
	SendClientMessage(params[0],-1, "{EE391D}  http://"WEB_ROL"{DDF543} e ir a {FFFFFF}'Cambiar nombre'");
	SendClientMessage(params[0],-1, "{DBED16} En caso de no cambiar tu nombre serás sancionado.");
	SendClientMessage(params[0],-1, "{DBED16}- Al parecer no conoces las reglas, leelas detenidamente ingresando el comando {FFFFFF}/reglas");
	new stringa[120];
	format(stringa,120,"Aviso enviado a %s[%d].",PlayerName(params[0]),params[0]);
	SendClientMessage(playerid,-1, stringa);
	Kick(playerid);
	return 1;
}
CMD:fix(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if(sscanf(params, "r", params[0])) return SendClientMessage(playerid, COLOR_GRAD2, "MODO DE USO: /fix <PlayerID>");
	if(IsPlayerNPC(params[0])) return 1;
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,0x25AB26FF,"Jugador no conectado");
	SetPosEx(params[0], 1511.0664,-1663.0449,13.5469,273.1677, 0 ,0);
	SetPlayerInterior(params[0], 0);
	SetPlayerVirtualWorld(params[0], 0);
	SetCameraBehindPlayer(params[0]);
	SendClientMessage(playerid, COLOR_GRAD2, "¡Jugador teleportado a LS!");
	return 1;
}
CMD:mandarsf(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if(sscanf(params, "r", params[0])) return SendClientMessage(playerid, COLOR_GRAD2, "MODO DE USO: /mandarsf <PlayerID>");
	if(IsPlayerNPC(params[0])) return 1;
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,0x25AB26FF,"Jugador no conectado");
	SetPosEx(params[0], 214.5570,126.0371,999.0156,267.6901, 10 ,5);
	SendClientMessage(playerid, COLOR_GRAD2, "Jugador teletransportado a SF");
	return 1;
}
CMD:mandarlv(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if(sscanf(params, "r", params[0])) return SendClientMessage(playerid, COLOR_GRAD2, "MODO DE USO: /mandarlv <PlayerID>");
	if(IsPlayerNPC(params[0])) return 1;
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,0x25AB26FF,"Jugador no conectado");
	SetPosEx(params[0], 1592.5369,1817.5045,10.8203, 0, 0 ,0);
	SendClientMessage(playerid, COLOR_GRAD2, "¡Jugador teleportado a LV!");
	return 1;
}
CMD:lc(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if (GetPlayerState(playerid) == 2)
	{
		LinkVehicleToInterior(GetPlayerVehicleID(playerid), 1);
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 1);
		SetVehiclePos(GetPlayerVehicleID(playerid), -729.276000,503.086944,1371.971801);
		return 1;
	}
	else return SetPosEx(playerid, -729.276000,503.086944,1371.971801,0,1,1);
}
CMD:isla(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	SetPosEx(playerid,834.1795,-2963.7754,11.9554,178.3964, 0, 0);
	SetCameraBehindPlayer(playerid);
	return 1;
}
CMD:zz(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_DUDAS) return 0;
	SetPosEx(playerid, 78.4577,7.4216,72.5629, 90, 0, 0);
	SetCameraBehindPlayer(playerid);
	return 1;
}
CMD:ls(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_DUDAS) return 0;
	if (GetPlayerState(playerid) == 2)
	{
	    SetVehicleZAngle(GetPlayerVehicleID(playerid),180.0000);
		SetVehiclePos(GetPlayerVehicleID(playerid), 1534.6351,-1609.6844,13.5446);
        LinkVehicleToInterior(GetPlayerVehicleID(playerid), 1);
	    SetPlayerInterior(playerid, 0);
	    SetVehicleInterior(playerid, 0);
	    SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), 0);
	    SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), 0);
	    return SetPlayerVirtualWorld(playerid,0);
	}
	else
	{
	    PlayerAnticheat[playerid][@Teleport] = 1;
		SetPosEx(playerid, 1511.0664,-1663.0449,13.5469,273.1677,0,0);
		SetCameraBehindPlayer(playerid);
		return 1;
	}
}
CMD:sf(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] <= ADMIN_LEVEL_DUDAS) return 0;
	if(GetPlayerState(playerid) == 2)
	{
	    SetVehicleZAngle(GetPlayerVehicleID(playerid),180.0000);
		SetVehiclePos(GetPlayerVehicleID(playerid), -1567.0959,711.4836,7.1929);
		LinkVehicleToInterior(GetPlayerVehicleID(playerid), 1);
	    SetPlayerInterior(playerid, 0);
	    SetVehicleInterior(playerid, 0);
	    SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), 0);
	    SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), 0);
	    return SetPlayerVirtualWorld(playerid,0);
	}
	else
	{
	    PlayerAnticheat[playerid][@Teleport] = 1;
		SetPosEx(playerid, -1612.7053,715.6451,13.2788,0,0,0);
		return 1;
	}
}
CMD:lv(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] <= ADMIN_LEVEL_DUDAS) return 0;
	if (GetPlayerState(playerid) == 2)
	{
	    SetVehicleZAngle(GetPlayerVehicleID(playerid),0.0000);
		SetVehiclePos(GetPlayerVehicleID(playerid), 1573.0610,1851.9330,10.8305);
		LinkVehicleToInterior(GetPlayerVehicleID(playerid), 1);
	    SetPlayerInterior(playerid, 0);
	    SetVehicleInterior(playerid, 0);
	    SetVehiclePassengersInteriorEx(GetPlayerVehicleID(playerid), 0);
	    SetVehiclePassengersVWEx(GetPlayerVehicleID(playerid), 0);
	    return SetPlayerVirtualWorld(playerid,0);
	}
	else
	{
	    PlayerAnticheat[playerid][@Teleport] = 1;
		SetPosEx(playerid, 1592.5369,1817.5045,10.8203,0,0,0);
		return 1;
	}
}
CMD:l(playerid, params[])
{
	new string[70];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_DUDAS) return 0;
	format(string, 70, "El log del chat fue borrado por {106C24}%s.", PlayerName(playerid));
	MensajeAdmin(-1, string, 3);
	LimpiarLog(150);
	return 1;
}
CMD:ir(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if(!sscanf(params, "d", params[0]))
	{
		if(IsPlayerConnected(params[0]))
		{
			if(PlayerInfo[params[0]][pAdmin] > PlayerInfo[playerid][pAdmin]) return SendClientMessage(playerid, COLOR_WHITE, "Error.");
			new Float:p_x,Float:p_y,Float:p_z,vw = GetPlayerVirtualWorld(params[0]),interior = GetPlayerInterior(params[0]);
			GetPlayerPos(params[0], p_x,p_y,p_z);
			if(IsPlayerNPC(params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Esa id es inválida.");
            PlayerAnticheat[playerid][@Teleport] = 1;
			SetPlayerPos(playerid, p_x,p_y,p_z);
			SetPlayerInterior(playerid, interior);
			SetPlayerVirtualWorld(playerid, vw);
			return SendClientMessage(playerid, COLOR_WHITE, "Teleportado!");
		}
		else SendClientMessage(playerid, COLOR_WHITE, "Esa id es inválida.");
	}
	else SendClientMessage(playerid, COLOR_WHITE, "MODO DE USO: {DBED16}/ir {FFFFFF}[{DBED16}ID{FFFFFF}]");
	return 1;
}
CMD:home(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if (GetPlayerState(playerid) == 2) return SetVehiclePos(GetPlayerVehicleID(playerid), 1809.5894,-1299.8063,65.8125);
	PlayerAnticheat[playerid][@Teleport] = 1;
	return SetPosEx(playerid, 1809.5894,-1299.8063,65.8125,0,0,0);
}
CMD:grua(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if (GetPlayerState(playerid) == 2) return SetVehiclePos(GetPlayerVehicleID(playerid), 1819.1549,-1284.6589,109.3594);
	PlayerAnticheat[playerid][@Teleport] = 1;
	return SetPosEx(playerid, 1819.1549,-1284.6589,109.3594,0,0,0);
}
CMD:car(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if (GetPlayerState(playerid) == 2) return SetVehiclePos(GetPlayerVehicleID(playerid), 1802.7854,-1303.8938,93.0391);
	PlayerAnticheat[playerid][@Teleport] = 1;
	return SetPosEx(playerid, 1802.7854,-1303.8938,93.0391,0,0,0);
}

CMD:ap(playerid,params[])
{
	new id, cantidad;
    if(strcmp(PlayerName(playerid), ""OWNER"", false) != 0)  return 0;
    {
		if(!sscanf(params,"dd",id,cantidad))
		{
			ActualizarPuerta(id, cantidad);
		}
	}
	return 1;
}
CMD:spv(playerid, params[])
{
    new id, string99[160];
    new Float:x2, Float:y2, Float:z2;
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
    if(sscanf(params,"i", id))return SendClientMessage(playerid, -1, "MODO DE USo: /spv [id]");
    new inte = GetVehicleInterior(id), vw = GetVehicleVirtualWorld(id);
    GetPlayerPos(playerid,SpecX[playerid],SpecY[playerid],SpecZ[playerid]);
    GetVehiclePos(id, x2, y2, z2);
	SpecInt[playerid] = GetPlayerInterior(playerid);
	SpecVW[playerid] = GetPlayerVirtualWorld(playerid);
    if(id < MAX_VEHICLES)
	{
	    SetPlayerVirtualWorld(playerid,vw);
		SetPlayerInterior(playerid,inte);
        TogglePlayerSpectating(playerid, 1);
    	PlayerSpectateVehicle(playerid, id);
    	Specteando[playerid] = 1;
    	format(string99,128,"Vehículo: %d - Ubicación: %d,%d,%d - Interior: %d - Mundo: %d - Velocidad: %f/%d",id, x2, y2, z2, inte, vw, GetVehicleSpeed(id),VelocidadMaxAuto(GetVehicleModel(id)));
		SendClientMessage(playerid,-1,string99);
    }
	return 1;
}
CMD:spp(playerid, params[])
{
	new id, string99[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if(sscanf(params,"u", id)) return SendClientMessage(playerid, COLOR_WHITE, "Escribe {DBED16}/spp [ID]");
	if(GetPlayerScore(id) == 0) return SendClientMessage(playerid, -1, "El jugador que quieres spectear está conectado pero aún no ha ingresado al juego.");
	if(PlayerInfo[id][pAdmin] > PlayerInfo[playerid][pAdmin]) return SendClientMessage(playerid, COLOR_WHITE, "Error.");
	if(id == playerid) return SendClientMessage(playerid,COLOR_WHITE,"No puedes spectearte a ti mismo.");
	if(!strcmp(params, ""OWNER"", true)) return SendClientMessage(playerid, -1, "No puedes utilizar este nombre.");
	if(!strcmp(params, ""OWNER2"", true)) return SendClientMessage(playerid, -1, "No puedes utilizar este nombre.");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid,0x25AB26FF,"Jugador no conectado");
	GetPlayerPos(playerid,SpecX[playerid],SpecY[playerid],SpecZ[playerid]);
	SpecInt[playerid] = GetPlayerInterior(playerid);
	SpecVW[playerid] = GetPlayerVirtualWorld(playerid);
	Specteando[playerid] = 1;
	SpecJugador[playerid] = id;
	Specteado[id] = 1;
	TogglePlayerSpectating(playerid, true);
	if(!IsPlayerInAnyVehicle(id))
	{
	    SetPlayerInterior(playerid,GetPlayerInterior(id));
	 	SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
	    PlayerSpectatePlayer(playerid,id);
	}
	else
	{
     	SetPlayerInterior(playerid,GetPlayerInterior(id));
		SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
	    PlayerSpectateVehicle(playerid,GetPlayerVehicleID(id));
	}
	for(new z=0;z<MAX_PLAYERS;z++)
	{
		if(PlayerInfo[z][pAdmin] > ADMIN_LEVEL_DUDAS)
		{
			format(string99,128,"{DBED16}%s (ID: %d | Nivel %d) ahora es el specteador de %s (ID: %d | Nivel: %d)",PlayerName(playerid),playerid,PlayerInfo[playerid][@Nivel],PlayerName(id),id,PlayerInfo[id][@Nivel]);
			SendClientMessage(z,0xFFDBED15FF,string99);
		}
	}
 	return 1;
}
CMD:specoff(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	if(Specteando[playerid] == 0) return SendClientMessage(playerid,COLOR_WHITE,"No estas specteando.");
	TogglePlayerSpectating(playerid, 0);
	return 1;
}
CMD:cpuertaf(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return 1;
	{
	    new doorname[128], Float: dPos[3], string[250];
	    if(sscanf(params, "s[128]", doorname)) return SendClientMessage(playerid, COLOR_WHITE, "Usa: /cpuertaf [Nombre]");

		new id = GetAvailableID();
		GetPlayerPos(playerid, dPos[0], dPos[1], dPos[2]);
		DoorIDTaken3[id] = 1;
		DoorInfoFranquicia[id][dEnterX] = dPos[0];
		DoorInfoFranquicia[id][dEnterY] = dPos[1];
		DoorInfoFranquicia[id][dEnterZ] = dPos[2];
		DoorInfoFranquicia[id][dExitX] = 0.0;
		DoorInfoFranquicia[id][dExitY] = 0.0;
		DoorInfoFranquicia[id][dExitZ] = 0.0;
		DoorInfoFranquicia[id][dInt] = 0;
		DoorInfoFranquicia[id][dExitVW] = 0;
		DoorInfoFranquicia[id][dExitInt] = 0;
		DoorInfoFranquicia[id][dEnterVW] = GetPlayerVirtualWorld(playerid);
		DoorInfoFranquicia[id][dEnterInt] = GetPlayerInterior(playerid);
		DoorInfoFranquicia[id][dPickupModel] = 1318;
		DoorInfoFranquicia[id][dName] = doorname;

		format(string, sizeof(string), "{37db45}%s\n{02b79f}Franquicia %d\n{FFFFFF}Propietario: {00CCFF}Kanox\n\n{FFFFFF}Escribe {DBED16}/entrar{FFFFFF} para ingresar.",DoorInfoFranquicia[id][dName], id);
		DoorInfoFranquicia[id][dLabel] = CreateDynamic3DTextLabel(string, COLOR_WHITE, DoorInfoFranquicia[id][dEnterX], DoorInfoFranquicia[id][dEnterY], DoorInfoFranquicia[id][dEnterZ]+0.75, 23, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
		DoorInfoFranquicia[id][dPickup] = CreateDynamicPickup(1318, 23, dPos[0], dPos[1], dPos[2], 0, 0, -1, 50.0);
		SaveDoors3();
		return 1;
	}
}

CMD:epuertaf(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return 1;
	{
		new string[250], option[32], id, amount, Float: Pos[3];
		if(sscanf(params, "ds[32]D(10)", id, option, amount))
		{
		    SendClientMessage(playerid, COLOR_WHITE, "Usa: /epuertaf [id] [item] [valor]");
		    SendClientMessage(playerid, COLOR_WHITE, "Available names: exterior, interior, pickup, borrar");
		    return 1;
		}
		if (id < 1 || id > MAX_FRANQUICIA)
		{
			format(string, sizeof(string), "Solo id del 1 al %d.", MAX_FRANQUICIA);
  			SendClientMessage(playerid, COLOR_GREY, string);
    		return 1;
		}
 		if(!DoorIDTaken3[id])
	 	{
   			SendClientMessage(playerid, COLOR_GREY, "Id no encontrada.");
			return 1;
		}
		if(strcmp(option, "exterior", true) == 0)
		{
		    new dname[128];
		    GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
		    DoorInfoFranquicia[id][dEnterX] = Pos[0];
		    DoorInfoFranquicia[id][dEnterY] = Pos[1];
		    DoorInfoFranquicia[id][dEnterZ] = Pos[2];
		    DoorInfoFranquicia[id][dEnterVW] = GetPlayerVirtualWorld(playerid);
		    DoorInfoFranquicia[id][dEnterInt] = GetPlayerInterior(playerid);

		    DestroyDynamicPickup(DoorInfoFranquicia[id][dPickup]);
		    DestroyDynamic3DTextLabel(DoorInfoFranquicia[id][dLabel]);

 			format(dname, sizeof(dname), "{37db45}%s\n{02b79f}Franquicia %d\n{FFFFFF}Propietario: {00CCFF}Gobierno\n\n{FFFFFF}Escribe {DBED16}/entrar{FFFFFF} para ingresar.",DoorInfoFranquicia[id][dName], id);
			DoorInfoFranquicia[id][dLabel] = CreateDynamic3DTextLabel(dname, COLOR_WHITE, DoorInfoFranquicia[id][dEnterX], DoorInfoFranquicia[id][dEnterY], DoorInfoFranquicia[id][dEnterZ]+0.75, 23, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
			DoorInfoFranquicia[id][dPickup] = CreateDynamicPickup(DoorInfoFranquicia[id][dPickupModel], 23, Pos[0], Pos[1], Pos[2], 0, 0, -1, 50.0);

			SaveDoors3();
		}
		else if(strcmp(option, "interior", true) == 0)
		{
		    GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
		    DoorInfoFranquicia[id][dExitX] = Pos[0];
		    DoorInfoFranquicia[id][dExitY] = Pos[1];
		    DoorInfoFranquicia[id][dExitZ] = Pos[2];
		    DoorInfoFranquicia[id][dExitVW] = GetPlayerVirtualWorld(playerid) + 2000;
		    DoorInfoFranquicia[id][dExitInt] = GetPlayerInterior(playerid);
		    SaveDoors3();
		}
		else if(strcmp(option, "pickup", true) == 0)
		{
		    DestroyDynamicPickup(DoorInfoFranquicia[id][dPickup]);
		    if(!IsValidPickupModel(amount)) return 1;
		    DoorInfoFranquicia[id][dPickupModel] = amount;
		    DoorInfoFranquicia[id][dPickup] = CreateDynamicPickup(amount, 23, DoorInfoFranquicia[id][dEnterX], DoorInfoFranquicia[id][dEnterY], DoorInfoFranquicia[id][dEnterZ], 0, 0, -1, 50.0);
		    SaveDoors3();
		}
		else if(strcmp(option, "borrar", true) == 0)
		{
		    new file[128];
		    DoorIDTaken3[id] = 0;
		    DoorInfoFranquicia[id][dEnterX] = 0.0;
		    DoorInfoFranquicia[id][dEnterY] = 0.0;
		    DoorInfoFranquicia[id][dEnterZ] = 0.0;
		    DoorInfoFranquicia[id][dExitX] = 0.0;
		    DoorInfoFranquicia[id][dExitY] = 0.0;
		    DoorInfoFranquicia[id][dExitZ] = 0.0;
		    DoorInfoFranquicia[id][dExitVW] = 0;
		    DoorInfoFranquicia[id][dExitInt] = 0;
		    DoorInfoFranquicia[id][dEnterVW] = 0;
		    DoorInfoFranquicia[id][dEnterInt] = 0;
		    DoorInfoFranquicia[id][dPickupModel] = 0;
		    DestroyDynamic3DTextLabel(DoorInfoFranquicia[id][dLabel]);
		    DestroyDynamicPickup(DoorInfoFranquicia[id][dPickup]);
            SendClientMessage(playerid, COLOR_WHITE, "Sistema de puertas: Puerta borrada!");
		    SaveDoors3();
			format(file, sizeof(file), "Puertas/Franquicia/%d.ini", id);
			if(fexist(file)) fremove(file);
		}
	}
	return 1;
}
CMD:npuertaf(playerid, params[])
{
	new string[300], id, doorname[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return 1;
	{
		if(sscanf(params, "ds[128]", id, doorname)) return SendClientMessage(playerid, COLOR_WHITE, "Usa: /npuertaf [id] [nombre]");
		if (id < 1 || id > MAX_FRANQUICIA)
		{
			format(string, sizeof(string), "Solo id del 1 al %d.", MAX_FRANQUICIA);
  			SendClientMessage(playerid, COLOR_GREY, string);
    		return 1;
		}
 		if(!DoorIDTaken3[id])
	 	{
   			SendClientMessage(playerid, COLOR_GREY, "Id no encontrada.");
			return 1;
		}

		DoorInfoFranquicia[id][dName] = doorname;
		DestroyDynamic3DTextLabel(DoorInfoFranquicia[id][dLabel]);
		format(string, sizeof(string), "{37db45}%s\n{02b79f}Franquicia %d\n{FFFFFF}Propietario: {00CCFF}Gobierno\n\n{FFFFFF}Escribe {DBED16}/entrar{FFFFFF} para ingresar.",DoorInfoFranquicia[id][dName], id);
		DoorInfoFranquicia[id][dLabel] = CreateDynamic3DTextLabel(string, COLOR_WHITE, DoorInfoFranquicia[id][dEnterX], DoorInfoFranquicia[id][dEnterY], DoorInfoFranquicia[id][dEnterZ]+0.75, 23, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
		SaveDoors3();
	}
	return 1;
}
CMD:cpuertag(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return 1;
	{
	    new doorname[128], Float: dPos[3], string[250];
	    if(sscanf(params, "s[128]", doorname)) return SendClientMessage(playerid, COLOR_WHITE, "Usa: /cpuertag [Nombre]");

		new id = GetAvailableID();
		GetPlayerPos(playerid, dPos[0], dPos[1], dPos[2]);
		DoorIDTaken2[id] = 1;
		DoorInfoGobierno[id][dEnterX] = dPos[0];
		DoorInfoGobierno[id][dEnterY] = dPos[1];
		DoorInfoGobierno[id][dEnterZ] = dPos[2];
		DoorInfoGobierno[id][dExitX] = 0.0;
		DoorInfoGobierno[id][dExitY] = 0.0;
		DoorInfoGobierno[id][dExitZ] = 0.0;
		DoorInfoGobierno[id][dInt] = 0;
		DoorInfoGobierno[id][dExitVW] = 0;
		DoorInfoGobierno[id][dExitInt] = 0;
		DoorInfoGobierno[id][dEnterVW] = GetPlayerVirtualWorld(playerid);
		DoorInfoGobierno[id][dEnterInt] = GetPlayerInterior(playerid);
		DoorInfoGobierno[id][dPickupModel] = 1318;
		DoorInfoGobierno[id][dName] = doorname;

		format(string, sizeof(string), "{37db45}%s\n {FFFFFF}Propietario: {00CCFF}Gobierno\n\n{FFFFFF}Escribe {DBED16}/entrar {FFFFFF}para ingresar.",DoorInfoGobierno[id][dName], id);
		DoorInfoGobierno[id][dLabel] = CreateDynamic3DTextLabel(string, COLOR_WHITE, DoorInfoGobierno[id][dEnterX], DoorInfoGobierno[id][dEnterY], DoorInfoGobierno[id][dEnterZ]+0.75, 23, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
		DoorInfoGobierno[id][dPickup] = CreateDynamicPickup(1318, 23, dPos[0], dPos[1], dPos[2], 0, 0, -1, 50.0);
		SaveDoors2();
		return 1;
	}
}
CMD:epuertag(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return 1;
	{
		new string[250], option[32], id, amount, Float: Pos[3];
		if(sscanf(params, "ds[32]D(10)", id, option, amount))
		{
		    SendClientMessage(playerid, COLOR_WHITE, "Usa: /epuertag [id] [item] [valor]");
		    SendClientMessage(playerid, COLOR_WHITE, "Available names: exterior, interior, pickup, borrar");
		    return 1;
		}
		if (id < 1 || id > MAX_GOBIERNO)
		{
			format(string, sizeof(string), "Solo id del 1 al %d.", MAX_GOBIERNO);
  			SendClientMessage(playerid, COLOR_GREY, string);
    		return 1;
		}
 		if(!DoorIDTaken2[id])
	 	{
   			SendClientMessage(playerid, COLOR_GREY, "Id no encontrada.");
			return 1;
		}
		if(strcmp(option, "exterior", true) == 0)
		{
		    new dname[128];
		    GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
		    DoorInfoGobierno[id][dEnterX] = Pos[0];
		    DoorInfoGobierno[id][dEnterY] = Pos[1];
		    DoorInfoGobierno[id][dEnterZ] = Pos[2];
		    DoorInfoGobierno[id][dEnterVW] = GetPlayerVirtualWorld(playerid);
		    DoorInfoGobierno[id][dEnterInt] = GetPlayerInterior(playerid);

		    DestroyDynamicPickup(DoorInfoGobierno[id][dPickup]);
		    DestroyDynamic3DTextLabel(DoorInfoGobierno[id][dLabel]);

 			format(dname, sizeof(dname), "{37db45}%s\n {FFFFFF}Propietario: {00CCFF}Gobierno\n\n{FFFFFF}Escribe {DBED16}/entrar {FFFFFF}para ingresar.",DoorInfoGobierno[id][dName], id);
			DoorInfoGobierno[id][dLabel] = CreateDynamic3DTextLabel(dname, COLOR_WHITE, DoorInfoGobierno[id][dEnterX], DoorInfoGobierno[id][dEnterY], DoorInfoGobierno[id][dEnterZ]+0.75, 5.00, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
			DoorInfoGobierno[id][dPickup] = CreateDynamicPickup(DoorInfoGobierno[id][dPickupModel], 23, Pos[0], Pos[1], Pos[2], 0, 0, -1, 50.0);

			SaveDoors2();
		}
		else if(strcmp(option, "interior", true) == 0)
		{
		    GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
		    DoorInfoGobierno[id][dExitX] = Pos[0];
		    DoorInfoGobierno[id][dExitY] = Pos[1];
		    DoorInfoGobierno[id][dExitZ] = Pos[2];
		    DoorInfoGobierno[id][dExitVW] = GetPlayerVirtualWorld(playerid) + 2000;
		    DoorInfoGobierno[id][dExitInt] = GetPlayerInterior(playerid);
		    SaveDoors2();
		}
		else if(strcmp(option, "pickup", true) == 0)
		{
		    DestroyDynamicPickup(DoorInfoGobierno[id][dPickup]);
		    if(!IsValidPickupModel(amount)) return 1;
		    DoorInfoGobierno[id][dPickupModel] = amount;
		    DoorInfoGobierno[id][dPickup] = CreateDynamicPickup(amount, 23, DoorInfoGobierno[id][dEnterX], DoorInfoGobierno[id][dEnterY], DoorInfoGobierno[id][dEnterZ], 0, 0, -1, 50.0);
		    SaveDoors2();
		}
		else if(strcmp(option, "borrar", true) == 0)
		{
		    new file[128];
		    DoorIDTaken2[id] = 0;
		    DoorInfoGobierno[id][dEnterX] = 0.0;
		    DoorInfoGobierno[id][dEnterY] = 0.0;
		    DoorInfoGobierno[id][dEnterZ] = 0.0;
		    DoorInfoGobierno[id][dExitX] = 0.0;
		    DoorInfoGobierno[id][dExitY] = 0.0;
		    DoorInfoGobierno[id][dExitZ] = 0.0;
		    DoorInfoGobierno[id][dExitVW] = 0;
		    DoorInfoGobierno[id][dExitInt] = 0;
		    DoorInfoGobierno[id][dEnterVW] = 0;
		    DoorInfoGobierno[id][dEnterInt] = 0;
		    DoorInfoGobierno[id][dPickupModel] = 0;
		    DestroyDynamic3DTextLabel(DoorInfoGobierno[id][dLabel]);
		    DestroyDynamicPickup(DoorInfoGobierno[id][dPickup]);
            SendClientMessage(playerid, COLOR_WHITE, "Sistema de puertas: Puerta borrada!");
		    SaveDoors2();
			format(file, sizeof(file), "Puertas/Gobierno/%d.ini", id);
			if(fexist(file)) fremove(file);
		}
	}
	return 1;
}
CMD:npuertag(playerid, params[])
{
	new string[300], id, doorname[128];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return 1;
	{
		if(sscanf(params, "ds[128]", id, doorname)) return SendClientMessage(playerid, COLOR_WHITE, "Usa: /npuertag [id] [nombre]");
		if (id < 1 || id > MAX_GOBIERNO)
		{
			format(string, sizeof(string), "Solo id del 1 al %d.", MAX_GOBIERNO);
  			SendClientMessage(playerid, COLOR_GREY, string);
    		return 1;
		}
 		if(!DoorIDTaken2[id])
	 	{
   			SendClientMessage(playerid, COLOR_GREY, "Id no encontrada.");
			return 1;
		}

		DoorInfoGobierno[id][dName] = doorname;
		DestroyDynamic3DTextLabel(DoorInfoGobierno[id][dLabel]);
		format(string, sizeof(string), "{37db45}%s\n {FFFFFF}Propietario: {00CCFF}Gobierno\n\n{FFFFFF}Escribe {DBED16}/entrar {FFFFFF}para ingresar.",DoorInfoGobierno[id][dName], id);
		DoorInfoGobierno[id][dLabel] = CreateDynamic3DTextLabel(string, COLOR_WHITE, DoorInfoGobierno[id][dEnterX], DoorInfoGobierno[id][dEnterY], DoorInfoGobierno[id][dEnterZ]+0.75, 23, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
		SaveDoors2();
	}
	return 1;
}
CMD:crearcarrera(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid,-1,"Escribe {DBED16}/ccarrera {FFFFFF}<Minutos>");
	if(HabilitarCarreras == 1) return SendClientMessage(playerid,-1,"Ya hay una carrera en curso.");
	if(params[0] < 2) return SendClientMessage(playerid,-1,"El tiempo debe ser mayor que 1.");

	ResetearCarrera();
	HabilitarCarreras = 1;
	Update3DTextLabelText(TextoCarrera,COLOR_WHITE,"{00CC00}Boleteria abierta\n{FFFFFF}Costo de la entrada: {00CC00}$600\n{DBED16}/comprar entrada");
	ConteoCarrera = params[0];
	SetTimer("EmpezarCarrera",60*1000,0);
	new string[250];
	format(string,sizeof(string),"En {00CC00}%d minutos{FFFFFF} comienza la carrera, ya se inscribieron {DBED16}%d{FFFFFF} corredores.",ConteoCarrera,ParticipantesCarrera);
	for(new i, j = GetPlayerPoolSize(); i <= j; i++) if(IsPlayerInRangeOfPoint(i,250,-1408.8688,-304.5082,1056.4351) && GetPlayerInterior(i) == 7) SendClientMessage(i,-1,string);
	return true;
}
CMD:remisora(playerid, params[])
{
	new ID;
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	if(sscanf(params, "d", ID) )return SendClientMessage(playerid,COLOR_WHITE,"Uso: /resetearemisora [id]");
	if(ID == 1)
	{
		CabinasOcupadasEmisoras[1][0] = 0;
		CabinasOcupadasEmisoras[1][1] = -1;
		CabinasOcupadasEmisoras[1][2] = 0;
		UpdateDynamic3DTextLabelText(CabinasTextos[1], 0xFFFFFFFF, "{FFFFFF}Radio disponible {C0C0C0}[N1]");
        for(new id = 0; id < MAX_PLAYERS; id++)
		{
			if(Emisoras[id][CabinaOcupada] == 1 && Emisoras[id][TransEmisora] == 1)
			{
				Emisoras[id][TransEmisora] = 0;
				Emisoras[id][CabinaOcupada] = 0;
			}
			if(TieneMicrofono[id] == 1)
			{
				TieneMicrofono[id] = 0;
			}
			if(IsPlayerInDynamicArea(id, AreaCabinas[1]))
			{
				SendClientMessage(id, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
				StopAudioStreamForPlayer(id);
			}
			if(IsPlayerInAnyVehicle(id) && EmisoraEscuchando[GetPlayerVehicleID(id)] == 1)
			{
				SendClientMessage(id, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
				StopAudioStreamForPlayer(id);
			}
		}
		SendClientMessage(playerid,-1, "Reseteaste correctamente la emisora #1.");
	}
	if(ID == 2)
	{
		CabinasOcupadasEmisoras[2][0] = 0;
		CabinasOcupadasEmisoras[2][1] = -1;
		CabinasOcupadasEmisoras[2][2] = 0;
		UpdateDynamic3DTextLabelText(CabinasTextos[2], 0xFFFFFFFF, "{FFFFFF}Radio disponible {C0C0C0}[N2]");
        for(new id = 0; id < MAX_PLAYERS; id++)
		{
			if(Emisoras[id][CabinaOcupada] == 2 && Emisoras[id][TransEmisora] == 1)
			{
				Emisoras[id][TransEmisora] = 0;
				Emisoras[id][CabinaOcupada] = 0;
			}
			if(TieneMicrofono[id] == 2)
			{
				TieneMicrofono[id] = 0;
			}
			if(IsPlayerInDynamicArea(id, AreaCabinas[2]))
			{
				SendClientMessage(id, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
				StopAudioStreamForPlayer(id);
			}
			if(IsPlayerInAnyVehicle(id) && EmisoraEscuchando[GetPlayerVehicleID(id)] == 2)
			{
				SendClientMessage(id, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
				StopAudioStreamForPlayer(id);
			}
		}
		SendClientMessage(playerid,-1, "Reseteaste correctamente la emisora #2.");
	}
	if(ID == 3)
	{
		CabinasOcupadasEmisoras[3][0] = 0;
		CabinasOcupadasEmisoras[3][1] = -1;
		CabinasOcupadasEmisoras[3][2] = 0;
		UpdateDynamic3DTextLabelText(CabinasTextos[3], 0xFFFFFFFF, "{FFFFFF}Radio disponible {C0C0C0}[N3]");
        for(new id = 0; id < MAX_PLAYERS; id++)
		{
			if(Emisoras[id][CabinaOcupada] == 3 && Emisoras[id][TransEmisora] == 1)
			{
				Emisoras[id][TransEmisora] = 0;
				Emisoras[id][CabinaOcupada] = 0;
			}
			if(TieneMicrofono[id] == 3)
			{
				TieneMicrofono[id] = 0;
			}
			if(IsPlayerInDynamicArea(id, AreaCabinas[3]))
			{
				SendClientMessage(id, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
				StopAudioStreamForPlayer(id);
			}
			if(IsPlayerInAnyVehicle(id) && EmisoraEscuchando[GetPlayerVehicleID(id)] == 3)
			{
				SendClientMessage(id, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
				StopAudioStreamForPlayer(id);
			}
		}
		SendClientMessage(playerid,-1, "Reseteaste correctamente la emisora #3.");
	}
	if(ID == 4)
	{
		CabinasOcupadasEmisoras[4][0] = 0;
		CabinasOcupadasEmisoras[4][1] = -1;
		CabinasOcupadasEmisoras[4][2] = 0;
		UpdateDynamic3DTextLabelText(CabinasTextos[4], 0xFFFFFFFF, "{FFFFFF}Radio disponible {C0C0C0}[N4]");
        for(new id = 0; id < MAX_PLAYERS; id++)
		{
			if(Emisoras[id][CabinaOcupada] == 4 && Emisoras[id][TransEmisora] == 1)
			{
				Emisoras[id][TransEmisora] = 0;
				Emisoras[id][CabinaOcupada] = 0;
			}
			if(TieneMicrofono[id] == 4)
			{
				TieneMicrofono[id] = 0;
			}
			if(IsPlayerInDynamicArea(id, AreaCabinas[4]))
			{
				SendClientMessage(id, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
				StopAudioStreamForPlayer(id);
			}
			if(IsPlayerInAnyVehicle(id) && EmisoraEscuchando[GetPlayerVehicleID(id)] == 4)
			{
				SendClientMessage(id, COLOR_WHITE, "La emisora que estabas escuchando dejo de transmitir.");
				StopAudioStreamForPlayer(id);
			}
		}
		SendClientMessage(playerid,-1, "Reseteaste correctamente la emisora #4.");
	}
	return 1;
}
CMD:emionline(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	new emString[128];
	if(CabinasOcupadasEmisoras[1][0] == 1)
	{
		format(emString, 128, "Emisora 1 - {DBED15}%s [%d] - O: %d - IP: %s", PlayerName(CabinasOcupadasEmisoras[1][1]), CabinasOcupadasEmisoras[1][1], CabinasOcupadasEmisoras[1][2], PlayerInfo[CabinasOcupadasEmisoras[1][1]][IP]);
		SendClientMessage(playerid, COLOR_WHITE, emString);
	}
	if(CabinasOcupadasEmisoras[2][0] == 1)
	{
		format(emString, 128, "Emisora 2 - {DBED15}%s [%d] - O: %d - IP: %s", PlayerName(CabinasOcupadasEmisoras[2][1]), CabinasOcupadasEmisoras[2][1], CabinasOcupadasEmisoras[2][2], PlayerInfo[CabinasOcupadasEmisoras[2][1]][IP]);
		SendClientMessage(playerid, COLOR_WHITE, emString);
	}
	if(CabinasOcupadasEmisoras[3][0] == 1)
	{
		format(emString, 128, "Emisora 3 - {DBED15}%s [%d] - O: %d - IP: %s", PlayerName(CabinasOcupadasEmisoras[3][1]), CabinasOcupadasEmisoras[3][1], CabinasOcupadasEmisoras[3][2], PlayerInfo[CabinasOcupadasEmisoras[3][1]][IP]);
		SendClientMessage(playerid, COLOR_WHITE, emString);
	}
	if(CabinasOcupadasEmisoras[4][0] == 1)
	{
		format(emString, 128, "Emisora 4 - {DBED15}%s [%d] - O: %d - IP: %s", PlayerName(CabinasOcupadasEmisoras[4][1]), CabinasOcupadasEmisoras[4][1], CabinasOcupadasEmisoras[4][2], PlayerInfo[CabinasOcupadasEmisoras[4][1]][IP]);
        SendClientMessage(playerid, COLOR_WHITE, emString);
	}
	return 1;
}
CMD:resetearcarreras(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	ResetearCarrera();
	Update3DTextLabelText(TextoCarrera,COLOR_WHITE,"{FF3300}Boleteria cerrada\n{DBED16}Horarios de los eventos: {FFFFFF}5hs,11hs,17hs,23hs");
	return 1;
}

CMD:reportes(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_BANEOS) return 0;
	new reportdialog[4000], itemid = 0;
	for(new i = 0; i < MAX_REPORTS; i++)
	{
		if(Reports[i][BeingUsed] == 1 && itemid < 100)
		{
			ListItemReportId[playerid][itemid] = i;
			itemid++;
            format(reportdialog, sizeof(reportdialog), "%sID: %d - Nv: %d - R: %s", reportdialog, i, PlayerInfo[i][@Nivel], Reports[i][Report]);
			format(reportdialog, sizeof(reportdialog), "%s\n", reportdialog);
		}
	}
	CancelReport[playerid] = itemid;
	format(reportdialog, sizeof(reportdialog), "%s\n", reportdialog);
	format(reportdialog, sizeof(reportdialog), "%sSalir", reportdialog);
	ShowPlayerDialog(playerid, REPORTSMENU, DIALOG_STYLE_LIST, "Reportes", reportdialog, "Ver reporte", "Cerrar");
	return 1;
}
CMD:garageid(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
    for(new id = 0; id < MAX_PROPIEDADES; id++)
    {
    	if(IsPlayerInRangeOfPoint(playerid,2,PropInfo[id][pGX],PropInfo[id][pGY],PropInfo[id][pGZ]))
    	{
        	if(PropInfo[id][pGX] != 0)
        	{
       			new string[170];
       			format(string,sizeof(string),"Esta garaje tiene la ID {DBED16}%d{FFFFFF}.", id);
 				SendClientMessage(playerid,-1,string);
        	}
        }
    }
	return 1;
}
CMD:info(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
    for(new id = 0; id < MAX_PROPIEDADES; id++)
    {
    	if(IsPlayerInRangeOfPoint(playerid,2,PropInfo[id][pPosX],PropInfo[id][pPosY],PropInfo[id][pPosZ]))
    	{
        	if(PropInfo[id][pEnUso] == 1)
        	{
       			new string[170];
       			format(string,sizeof(string),"Esta propiedad tiene la ID {DBED16}%d {FFFFFF}| Propietario: {DBED16}%s{FFFFFF} | Interior: {DBED16}%d",id,PropInfo[id][pPropietario],PropInfo[id][pInterior]);
 				SendClientMessage(playerid,-1,string);
        	}
        }
    }
    for(new id = 0; id < MAX_FABRICAS; id++)
    {
    	if(IsPlayerInRangeOfPoint(playerid,2,Fabricas[id][pEntradaX],Fabricas[id][pEntradaY],Fabricas[id][pEntradaZ]))
    	{
        	if(Fabricas[id][pEnUso] == 1)
        	{
       			new string[170];
       			format(string,sizeof(string),"Esta fábrica tiene la ID {DBED16}%d {FFFFFF}| Nombre de banda: {DBED16}%s{FFFFFF}.",id,BandasInfo[Fabricas[id][pBanda]][BNombre]);
 				SendClientMessage(playerid,-1,string);
        	}
        }
    }
	return 1;
}
CMD:ci(playerid,params[])
{
    new id,interior,query[70];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	if(sscanf(params, "dd", id,interior)) return SendClientMessage(playerid,-1,"Escribe {DBED16}/ci {FFFFFF}<CasaID> <Interior>");
	{
 		if(PropInfo[id][pEnUso] == 1)
		{
		    if(interior <= 0 || interior > 43 || interior == 39) return SendClientMessage(playerid,-1,"Ese interior es inválido.");
		    DarInteriorCasa(id,interior);
		    if(interior == 40) PropInfo[id][pTipo] = 2;
			else if(interior == 41) PropInfo[id][pTipo] = 3;
			else if(interior == 43) PropInfo[id][pTipo] = 4;
			else PropInfo[id][pTipo] = 1;
		    PropInfo[id][pInterior] = interior;
		    BorrarLabelCasa(id);
		    CargarPropiedad(id);
			GuardarPropiedad(id);
			format(query,sizeof(query),"Cambiaste el interior de la casa ID: {DBED16}%d (Interior: %d).",id,interior);
			SendClientMessage(playerid,-1,query);
		}
		else SendClientMessage(playerid,-1,"Esa propiedad no existe.");
	}
	return true;
}
CMD:borrargaraje(playerid,params[])
{
	new casa,string[200];
	if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	if(sscanf(params, "d", casa))return SendClientMessage(playerid,-1,"Escribe {DBED16}/borrargarage {FFFFFF}<GarageID>");
	{
	    if(PropInfo[casa][pGX] != 0)
	    {
			PropInfo[casa][pGX] = 0;
			PropInfo[casa][pGY] = 0;
			PropInfo[casa][pGZ] = 0;
			PropInfo[casa][pGA] = 0;
			format(string,sizeof(string),"Eliminaste el garaje con id: {DBED16}%d", casa);
			SendClientMessage(playerid,-1,string);
			format(string,sizeof(string),"UPDATE `propiedades` SET `GX`='%f',`GY`='%f',`GZ`='%f',`GA`='%f' WHERE `ID`='%d'",
			PropInfo[casa][pGX],
			PropInfo[casa][pGY],
			PropInfo[casa][pGZ],
			PropInfo[casa][pGA],
			PropInfo[casa][pID]);
			mysql_function_query(Conecction,string,true,"","");
			BorrarLabelCasa(casa);
			CargarPropiedad(casa);
		}
		else SendClientMessage(playerid,-1,"Esa propiedad no tiene un garage.");
	}
	return 1;
}
CMD:editar(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < ADMIN_LEVEL_ADM) return 0;
	new id,precio,nivel,moneda,comprable,string[70];
	if(!sscanf(params,"ddddd",id,precio,nivel,moneda,comprable))
	{
	    if(PropInfo[id][pEnUso] == 1)
		{
		    if(moneda < 0 || moneda > 1) return SendClientMessage(playerid,-1,"Esa moneda es inválida.");
		    if(comprable < 0 || comprable > 1) return SendClientMessage(playerid,-1,"Ese comprable es inválido.");
	        PropInfo[id][pPrecio] = precio;
			PropInfo[id][pNivel] = nivel;
			PropInfo[id][pEnVentaPor] = moneda;
	        PropInfo[id][pEnVenta] = comprable;
			BorrarLabelCasa(id);
			GuardarPropiedad(id);
		    CargarPropiedad(id);
	        format(string,sizeof(string),"Editaste el estado de la casa con id: {DBED16}%d", id);
			SendClientMessage(playerid,-1,string);
		}
		else SendClientMessage(playerid,-1,"Esa propiedad no existe.");
	}
	else SendClientMessage(playerid,-1,"Escribe {DBED16}/editar {FFFFFF}<CasaID> <Precio> <Nivel> <Moneda> <Comprable>");
	return true;
}

stock MostrarVelocimetro(playerid)
{
    new Float: fCurrentSpeed, szSpeed[128];
	fCurrentSpeed = player_get_speed(playerid);
	fVehSpeed[playerid] = fCurrentSpeed;
	iVehicle[playerid] = GetPlayerVehicleID(playerid);

	new autoid = GetPlayerVehicleID(playerid);

	if(BICI(autoid)) return 1;
	new modelo = GetVehicleModel(autoid);
	new vehiclefuel = CombustibleCoche(modelo);
	new maxvehiclespeed = VelocidadMaxAuto(modelo);
	format(szSpeed, sizeof(szSpeed),"%d/%d",VehicleFuel[iVehicle[playerid]],vehiclefuel);
	SetPlayerProgressBarMaxValue(playerid,Progressbar[playerid][Combustible], vehiclefuel);
	SetPlayerProgressBarMaxValue(playerid,Progressbar[playerid][Velocimetro], maxvehiclespeed+1);

	PlayerTextDrawSetString(playerid,ContadorVelocimetro[playerid][1], szSpeed);
	format(szSpeed, sizeof(szSpeed),"%.0f", fCurrentSpeed);
	PlayerTextDrawSetString(playerid, ContadorVelocimetro[playerid][0], szSpeed);
	Manejando[playerid] = 1;
	KillTimer(Bajando[playerid]);
	UpdatePlayerProgressBar(playerid,Progressbar[playerid][Combustible]);

	TextDrawShowForPlayer(playerid, text1prueba[0]);
	TextDrawShowForPlayer(playerid, text1prueba[1]);
	TextDrawShowForPlayer(playerid, TEXTDRAWBOX1);
	TextDrawShowForPlayer(playerid, TEXTDRAWBOX2);
	TextDrawShowForPlayer(playerid, TEXTDRAWBOX3);
	TextDrawShowForPlayer(playerid, TEXTDRAWBOX4);
	PlayerTextDrawShow(playerid, ContadorVelocimetro[playerid][0]);
	TextDrawShowForPlayer(playerid, velocimetro6);
	PlayerTextDrawShow(playerid, ContadorVelocimetro[playerid][1]);
	TextDrawShowForPlayer(playerid, Velocimetrotd[0]);
	TextDrawShowForPlayer(playerid, Velocimetrotd[1]);
	ShowPlayerProgressBar(playerid, Progressbar[playerid][Combustible]);
	SetPlayerProgressBarValue(playerid,Progressbar[playerid][Combustible],VehicleFuel[iVehicle[playerid]]);
	UpdatePlayerProgressBar(playerid,Progressbar[playerid][Combustible]);
	ShowPlayerProgressBar(playerid, Progressbar[playerid][Velocimetro]);
	return 1;
}
